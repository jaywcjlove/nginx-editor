{"version":3,"file":"static/js/monaco-editor-vendor.d4d9fc54.c995c70f.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHints.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsController.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsContribution.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsLocations.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/commandIds.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionContextKeys.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/utils.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostText.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/singleTextEdit.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/provideInlineCompletions.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsSource.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/suggestWidgetInlineCompletionProvider.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsController.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/commands.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/hoverParticipant.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletions.contribution.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsHintsWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineProgress/browser/inlineProgress.js","../node_modules/monaco-editor/esm/vs/editor/contrib/lineSelection/browser/lineSelection.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/copyLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/moveLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/sortLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/linesOperations.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linkedEditing/browser/linkedEditing.js","../node_modules/monaco-editor/esm/vs/editor/contrib/links/browser/getLinks.js","../node_modules/monaco-editor/esm/vs/editor/contrib/links/browser/links.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { URI } from '../../../../base/common/uri.js';\nexport class InlayHintAnchor {\n    constructor(range, direction) {\n        this.range = range;\n        this.direction = direction;\n    }\n}\nexport class InlayHintItem {\n    constructor(hint, anchor, provider) {\n        this.hint = hint;\n        this.anchor = anchor;\n        this.provider = provider;\n        this._isResolved = false;\n    }\n    with(delta) {\n        const result = new InlayHintItem(this.hint, delta.anchor, this.provider);\n        result._isResolved = this._isResolved;\n        result._currentResolve = this._currentResolve;\n        return result;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.provider.resolveInlayHint !== 'function') {\n                return;\n            }\n            if (this._currentResolve) {\n                // wait for an active resolve operation and try again\n                // when that's done.\n                yield this._currentResolve;\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                return this.resolve(token);\n            }\n            if (!this._isResolved) {\n                this._currentResolve = this._doResolve(token)\n                    .finally(() => this._currentResolve = undefined);\n            }\n            yield this._currentResolve;\n        });\n    }\n    _doResolve(token) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const newHint = yield Promise.resolve(this.provider.resolveInlayHint(this.hint, token));\n                this.hint.tooltip = (_a = newHint === null || newHint === void 0 ? void 0 : newHint.tooltip) !== null && _a !== void 0 ? _a : this.hint.tooltip;\n                this.hint.label = (_b = newHint === null || newHint === void 0 ? void 0 : newHint.label) !== null && _b !== void 0 ? _b : this.hint.label;\n                this._isResolved = true;\n            }\n            catch (err) {\n                onUnexpectedExternalError(err);\n                this._isResolved = false;\n            }\n        });\n    }\n}\nexport class InlayHintsFragments {\n    static create(registry, model, ranges, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = [];\n            const promises = registry.ordered(model).reverse().map(provider => ranges.map((range) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const result = yield provider.provideInlayHints(model, range, token);\n                    if (result === null || result === void 0 ? void 0 : result.hints.length) {\n                        data.push([result, provider]);\n                    }\n                }\n                catch (err) {\n                    onUnexpectedExternalError(err);\n                }\n            })));\n            yield Promise.all(promises.flat());\n            if (token.isCancellationRequested || model.isDisposed()) {\n                throw new CancellationError();\n            }\n            return new InlayHintsFragments(ranges, data, model);\n        });\n    }\n    constructor(ranges, data, model) {\n        this._disposables = new DisposableStore();\n        this.ranges = ranges;\n        this.provider = new Set();\n        const items = [];\n        for (const [list, provider] of data) {\n            this._disposables.add(list);\n            this.provider.add(provider);\n            for (const hint of list.hints) {\n                // compute the range to which the item should be attached to\n                const position = model.validatePosition(hint.position);\n                let direction = 'before';\n                const wordRange = InlayHintsFragments._getRangeAtPosition(model, position);\n                let range;\n                if (wordRange.getStartPosition().isBefore(position)) {\n                    range = Range.fromPositions(wordRange.getStartPosition(), position);\n                    direction = 'after';\n                }\n                else {\n                    range = Range.fromPositions(position, wordRange.getEndPosition());\n                    direction = 'before';\n                }\n                items.push(new InlayHintItem(hint, new InlayHintAnchor(range, direction), provider));\n            }\n        }\n        this.items = items.sort((a, b) => Position.compare(a.hint.position, b.hint.position));\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    static _getRangeAtPosition(model, position) {\n        const line = position.lineNumber;\n        const word = model.getWordAtPosition(position);\n        if (word) {\n            // always prefer the word range\n            return new Range(line, word.startColumn, line, word.endColumn);\n        }\n        model.tokenization.tokenizeIfCheap(line);\n        const tokens = model.tokenization.getLineTokens(line);\n        const offset = position.column - 1;\n        const idx = tokens.findTokenIndexAtOffset(offset);\n        let start = tokens.getStartOffset(idx);\n        let end = tokens.getEndOffset(idx);\n        if (end - start === 1) {\n            // single character token, when at its end try leading/trailing token instead\n            if (start === offset && idx > 1) {\n                // leading token\n                start = tokens.getStartOffset(idx - 1);\n                end = tokens.getEndOffset(idx - 1);\n            }\n            else if (end === offset && idx < tokens.getCount() - 1) {\n                // trailing token\n                start = tokens.getStartOffset(idx + 1);\n                end = tokens.getEndOffset(idx + 1);\n            }\n        }\n        return new Range(line, start + 1, line, end + 1);\n    }\n}\nexport function asCommandLink(command) {\n    return URI.from({\n        scheme: Schemas.command,\n        path: command.id,\n        query: command.arguments && encodeURIComponent(JSON.stringify(command.arguments))\n    }).toString();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ModifierKeyEmitter } from '../../../../base/browser/dom.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DynamicCssRules } from '../../../browser/editorDom.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { EDITOR_FONT_DEFAULTS } from '../../../common/config/editorOptions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport * as languages from '../../../common/languages.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { InlayHintAnchor, InlayHintsFragments } from './inlayHints.js';\nimport { goToDefinitionWithLocation, showGoToContextMenu } from './inlayHintsLocations.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport * as colors from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\n// --- hint caching service (per session)\nclass InlayHintsCache {\n    constructor() {\n        this._entries = new LRUCache(50);\n    }\n    get(model) {\n        const key = InlayHintsCache._key(model);\n        return this._entries.get(key);\n    }\n    set(model, value) {\n        const key = InlayHintsCache._key(model);\n        this._entries.set(key, value);\n    }\n    static _key(model) {\n        return `${model.uri.toString()}/${model.getVersionId()}`;\n    }\n}\nconst IInlayHintsCache = createDecorator('IInlayHintsCache');\nregisterSingleton(IInlayHintsCache, InlayHintsCache, 1 /* InstantiationType.Delayed */);\n// --- rendered label\nexport class RenderedInlayHintLabelPart {\n    constructor(item, index) {\n        this.item = item;\n        this.index = index;\n    }\n    get part() {\n        const label = this.item.hint.label;\n        if (typeof label === 'string') {\n            return { label };\n        }\n        else {\n            return label[this.index];\n        }\n    }\n}\nclass ActiveInlayHintInfo {\n    constructor(part, hasTriggerModifier) {\n        this.part = part;\n        this.hasTriggerModifier = hasTriggerModifier;\n    }\n}\n// --- controller\nlet InlayHintsController = class InlayHintsController {\n    static get(editor) {\n        var _a;\n        return (_a = editor.getContribution(InlayHintsController.ID)) !== null && _a !== void 0 ? _a : undefined;\n    }\n    constructor(_editor, _languageFeaturesService, _featureDebounce, _inlayHintsCache, _commandService, _notificationService, _instaService) {\n        this._editor = _editor;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._inlayHintsCache = _inlayHintsCache;\n        this._commandService = _commandService;\n        this._notificationService = _notificationService;\n        this._instaService = _instaService;\n        this._disposables = new DisposableStore();\n        this._sessionDisposables = new DisposableStore();\n        this._decorationsMetadata = new Map();\n        this._ruleFactory = new DynamicCssRules(this._editor);\n        this._activeRenderMode = 0 /* RenderMode.Normal */;\n        this._debounceInfo = _featureDebounce.for(_languageFeaturesService.inlayHintsProvider, 'InlayHint', { min: 25 });\n        this._disposables.add(_languageFeaturesService.inlayHintsProvider.onDidChange(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModel(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModelLanguage(() => this._update()));\n        this._disposables.add(_editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(138 /* EditorOption.inlayHints */)) {\n                this._update();\n            }\n        }));\n        this._update();\n    }\n    dispose() {\n        this._sessionDisposables.dispose();\n        this._removeAllDecorations();\n        this._disposables.dispose();\n    }\n    _update() {\n        this._sessionDisposables.clear();\n        this._removeAllDecorations();\n        const options = this._editor.getOption(138 /* EditorOption.inlayHints */);\n        if (options.enabled === 'off') {\n            return;\n        }\n        const model = this._editor.getModel();\n        if (!model || !this._languageFeaturesService.inlayHintsProvider.has(model)) {\n            return;\n        }\n        // iff possible, quickly update from cache\n        const cached = this._inlayHintsCache.get(model);\n        if (cached) {\n            this._updateHintsDecorators([model.getFullModelRange()], cached);\n        }\n        this._sessionDisposables.add(toDisposable(() => {\n            // cache items when switching files etc\n            if (!model.isDisposed()) {\n                this._cacheHintsForFastRestore(model);\n            }\n        }));\n        let cts;\n        const watchedProviders = new Set();\n        const scheduler = new RunOnceScheduler(() => __awaiter(this, void 0, void 0, function* () {\n            const t1 = Date.now();\n            cts === null || cts === void 0 ? void 0 : cts.dispose(true);\n            cts = new CancellationTokenSource();\n            const listener = model.onWillDispose(() => cts === null || cts === void 0 ? void 0 : cts.cancel());\n            try {\n                const myToken = cts.token;\n                const inlayHints = yield InlayHintsFragments.create(this._languageFeaturesService.inlayHintsProvider, model, this._getHintsRanges(), myToken);\n                scheduler.delay = this._debounceInfo.update(model, Date.now() - t1);\n                if (myToken.isCancellationRequested) {\n                    inlayHints.dispose();\n                    return;\n                }\n                // listen to provider changes\n                for (const provider of inlayHints.provider) {\n                    if (typeof provider.onDidChangeInlayHints === 'function' && !watchedProviders.has(provider)) {\n                        watchedProviders.add(provider);\n                        this._sessionDisposables.add(provider.onDidChangeInlayHints(() => {\n                            if (!scheduler.isScheduled()) { // ignore event when request is already scheduled\n                                scheduler.schedule();\n                            }\n                        }));\n                    }\n                }\n                this._sessionDisposables.add(inlayHints);\n                this._updateHintsDecorators(inlayHints.ranges, inlayHints.items);\n                this._cacheHintsForFastRestore(model);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                cts.dispose();\n                listener.dispose();\n            }\n        }), this._debounceInfo.get(model));\n        this._sessionDisposables.add(scheduler);\n        this._sessionDisposables.add(toDisposable(() => cts === null || cts === void 0 ? void 0 : cts.dispose(true)));\n        scheduler.schedule(0);\n        this._sessionDisposables.add(this._editor.onDidScrollChange((e) => {\n            // update when scroll position changes\n            // uses scrollTopChanged has weak heuristic to differenatiate between scrolling due to\n            // typing or due to \"actual\" scrolling\n            if (e.scrollTopChanged || !scheduler.isScheduled()) {\n                scheduler.schedule();\n            }\n        }));\n        this._sessionDisposables.add(this._editor.onDidChangeModelContent((e) => {\n            // update less aggressive when typing\n            const delay = Math.max(scheduler.delay, 1250);\n            scheduler.schedule(delay);\n        }));\n        if (options.enabled === 'on') {\n            // different \"on\" modes: always\n            this._activeRenderMode = 0 /* RenderMode.Normal */;\n        }\n        else {\n            // different \"on\" modes: offUnlessPressed, or onUnlessPressed\n            let defaultMode;\n            let altMode;\n            if (options.enabled === 'onUnlessPressed') {\n                defaultMode = 0 /* RenderMode.Normal */;\n                altMode = 1 /* RenderMode.Invisible */;\n            }\n            else {\n                defaultMode = 1 /* RenderMode.Invisible */;\n                altMode = 0 /* RenderMode.Normal */;\n            }\n            this._activeRenderMode = defaultMode;\n            this._sessionDisposables.add(ModifierKeyEmitter.getInstance().event(e => {\n                if (!this._editor.hasModel()) {\n                    return;\n                }\n                const newRenderMode = e.altKey && e.ctrlKey && !(e.shiftKey || e.metaKey) ? altMode : defaultMode;\n                if (newRenderMode !== this._activeRenderMode) {\n                    this._activeRenderMode = newRenderMode;\n                    const model = this._editor.getModel();\n                    const copies = this._copyInlayHintsWithCurrentAnchor(model);\n                    this._updateHintsDecorators([model.getFullModelRange()], copies);\n                    scheduler.schedule(0);\n                }\n            }));\n        }\n        // mouse gestures\n        this._sessionDisposables.add(this._installDblClickGesture(() => scheduler.schedule(0)));\n        this._sessionDisposables.add(this._installLinkGesture());\n        this._sessionDisposables.add(this._installContextMenu());\n    }\n    _installLinkGesture() {\n        const store = new DisposableStore();\n        const gesture = store.add(new ClickLinkGesture(this._editor));\n        // let removeHighlight = () => { };\n        const sessionStore = new DisposableStore();\n        store.add(sessionStore);\n        store.add(gesture.onMouseMoveOrRelevantKeyDown(e => {\n            const [mouseEvent] = e;\n            const labelPart = this._getInlayHintLabelPart(mouseEvent);\n            const model = this._editor.getModel();\n            if (!labelPart || !model) {\n                sessionStore.clear();\n                return;\n            }\n            // resolve the item\n            const cts = new CancellationTokenSource();\n            sessionStore.add(toDisposable(() => cts.dispose(true)));\n            labelPart.item.resolve(cts.token);\n            // render link => when the modifier is pressed and when there is a command or location\n            this._activeInlayHintPart = labelPart.part.command || labelPart.part.location\n                ? new ActiveInlayHintInfo(labelPart, mouseEvent.hasTriggerModifier)\n                : undefined;\n            const lineNumber = model.validatePosition(labelPart.item.hint.position).lineNumber;\n            const range = new Range(lineNumber, 1, lineNumber, model.getLineMaxColumn(lineNumber));\n            const lineHints = this._getInlineHintsForRange(range);\n            this._updateHintsDecorators([range], lineHints);\n            sessionStore.add(toDisposable(() => {\n                this._activeInlayHintPart = undefined;\n                this._updateHintsDecorators([range], lineHints);\n            }));\n        }));\n        store.add(gesture.onCancel(() => sessionStore.clear()));\n        store.add(gesture.onExecute((e) => __awaiter(this, void 0, void 0, function* () {\n            const label = this._getInlayHintLabelPart(e);\n            if (label) {\n                const part = label.part;\n                if (part.location) {\n                    // location -> execute go to def\n                    this._instaService.invokeFunction(goToDefinitionWithLocation, e, this._editor, part.location);\n                }\n                else if (languages.Command.is(part.command)) {\n                    // command -> execute it\n                    yield this._invokeCommand(part.command, label.item);\n                }\n            }\n        })));\n        return store;\n    }\n    _getInlineHintsForRange(range) {\n        const lineHints = new Set();\n        for (const data of this._decorationsMetadata.values()) {\n            if (range.containsRange(data.item.anchor.range)) {\n                lineHints.add(data.item);\n            }\n        }\n        return Array.from(lineHints);\n    }\n    _installDblClickGesture(updateInlayHints) {\n        return this._editor.onMouseUp((e) => __awaiter(this, void 0, void 0, function* () {\n            if (e.event.detail !== 2) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (!part) {\n                return;\n            }\n            e.event.preventDefault();\n            yield part.item.resolve(CancellationToken.None);\n            if (isNonEmptyArray(part.item.hint.textEdits)) {\n                const edits = part.item.hint.textEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text));\n                this._editor.executeEdits('inlayHint.default', edits);\n                updateInlayHints();\n            }\n        }));\n    }\n    _installContextMenu() {\n        return this._editor.onContextMenu((e) => __awaiter(this, void 0, void 0, function* () {\n            if (!(e.event.target instanceof HTMLElement)) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (part) {\n                yield this._instaService.invokeFunction(showGoToContextMenu, this._editor, e.event.target, part);\n            }\n        }));\n    }\n    _getInlayHintLabelPart(e) {\n        var _a;\n        if (e.target.type !== 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return undefined;\n        }\n        const options = (_a = e.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n        if (options instanceof ModelDecorationInjectedTextOptions && (options === null || options === void 0 ? void 0 : options.attachedData) instanceof RenderedInlayHintLabelPart) {\n            return options.attachedData;\n        }\n        return undefined;\n    }\n    _invokeCommand(command, item) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._commandService.executeCommand(command.id, ...((_a = command.arguments) !== null && _a !== void 0 ? _a : []));\n            }\n            catch (err) {\n                this._notificationService.notify({\n                    severity: Severity.Error,\n                    source: item.provider.displayName,\n                    message: err\n                });\n            }\n        });\n    }\n    _cacheHintsForFastRestore(model) {\n        const hints = this._copyInlayHintsWithCurrentAnchor(model);\n        this._inlayHintsCache.set(model, hints);\n    }\n    // return inlay hints but with an anchor that reflects \"updates\"\n    // that happened after receiving them, e.g adding new lines before a hint\n    _copyInlayHintsWithCurrentAnchor(model) {\n        const items = new Map();\n        for (const [id, obj] of this._decorationsMetadata) {\n            if (items.has(obj.item)) {\n                // an inlay item can be rendered as multiple decorations\n                // but they will all uses the same range\n                continue;\n            }\n            const range = model.getDecorationRange(id);\n            if (range) {\n                // update range with whatever the editor has tweaked it to\n                const anchor = new InlayHintAnchor(range, obj.item.anchor.direction);\n                const copy = obj.item.with({ anchor });\n                items.set(obj.item, copy);\n            }\n        }\n        return Array.from(items.values());\n    }\n    _getHintsRanges() {\n        const extra = 30;\n        const model = this._editor.getModel();\n        const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\n        const result = [];\n        for (const range of visibleRanges.sort(Range.compareRangesUsingStarts)) {\n            const extendedRange = model.validateRange(new Range(range.startLineNumber - extra, range.startColumn, range.endLineNumber + extra, range.endColumn));\n            if (result.length === 0 || !Range.areIntersectingOrTouching(result[result.length - 1], extendedRange)) {\n                result.push(extendedRange);\n            }\n            else {\n                result[result.length - 1] = Range.plusRange(result[result.length - 1], extendedRange);\n            }\n        }\n        return result;\n    }\n    _updateHintsDecorators(ranges, items) {\n        var _a, _b;\n        // utils to collect/create injected text decorations\n        const newDecorationsData = [];\n        const addInjectedText = (item, ref, content, cursorStops, attachedData) => {\n            const opts = {\n                content,\n                inlineClassNameAffectsLetterSpacing: true,\n                inlineClassName: ref.className,\n                cursorStops,\n                attachedData\n            };\n            newDecorationsData.push({\n                item,\n                classNameRef: ref,\n                decoration: {\n                    range: item.anchor.range,\n                    options: {\n                        // className: \"rangeHighlight\", // DEBUG highlight to see to what range a hint is attached\n                        description: 'InlayHint',\n                        showIfCollapsed: item.anchor.range.isEmpty(),\n                        collapseOnReplaceEdit: !item.anchor.range.isEmpty(),\n                        stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n                        [item.anchor.direction]: this._activeRenderMode === 0 /* RenderMode.Normal */ ? opts : undefined\n                    }\n                }\n            });\n        };\n        const addInjectedWhitespace = (item, isLast) => {\n            const marginRule = this._ruleFactory.createClassNameRef({\n                width: `${(fontSize / 3) | 0}px`,\n                display: 'inline-block'\n            });\n            addInjectedText(item, marginRule, '\\u200a', isLast ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None);\n        };\n        //\n        const { fontSize, fontFamily, padding, isUniform } = this._getLayoutInfo();\n        const fontFamilyVar = '--code-editorInlayHintsFontFamily';\n        this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily);\n        for (const item of items) {\n            // whitespace leading the actual label\n            if (item.hint.paddingLeft) {\n                addInjectedWhitespace(item, false);\n            }\n            // the label with its parts\n            const parts = typeof item.hint.label === 'string'\n                ? [{ label: item.hint.label }]\n                : item.hint.label;\n            for (let i = 0; i < parts.length; i++) {\n                const part = parts[i];\n                const isFirst = i === 0;\n                const isLast = i === parts.length - 1;\n                const cssProperties = {\n                    fontSize: `${fontSize}px`,\n                    fontFamily: `var(${fontFamilyVar}), ${EDITOR_FONT_DEFAULTS.fontFamily}`,\n                    verticalAlign: isUniform ? 'baseline' : 'middle',\n                    unicodeBidi: 'isolate'\n                };\n                if (isNonEmptyArray(item.hint.textEdits)) {\n                    cssProperties.cursor = 'default';\n                }\n                this._fillInColors(cssProperties, item.hint);\n                if ((part.command || part.location) && ((_a = this._activeInlayHintPart) === null || _a === void 0 ? void 0 : _a.part.item) === item && this._activeInlayHintPart.part.index === i) {\n                    // active link!\n                    cssProperties.textDecoration = 'underline';\n                    if (this._activeInlayHintPart.hasTriggerModifier) {\n                        cssProperties.color = themeColorFromId(colors.editorActiveLinkForeground);\n                        cssProperties.cursor = 'pointer';\n                    }\n                }\n                if (padding) {\n                    if (isFirst && isLast) {\n                        // only element\n                        cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px`;\n                        cssProperties.borderRadius = `${(fontSize / 4) | 0}px`;\n                    }\n                    else if (isFirst) {\n                        // first element\n                        cssProperties.padding = `1px 0 1px ${Math.max(1, fontSize / 4) | 0}px`;\n                        cssProperties.borderRadius = `${(fontSize / 4) | 0}px 0 0 ${(fontSize / 4) | 0}px`;\n                    }\n                    else if (isLast) {\n                        // last element\n                        cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px 1px 0`;\n                        cssProperties.borderRadius = `0 ${(fontSize / 4) | 0}px ${(fontSize / 4) | 0}px 0`;\n                    }\n                    else {\n                        cssProperties.padding = `1px 0 1px 0`;\n                    }\n                }\n                addInjectedText(item, this._ruleFactory.createClassNameRef(cssProperties), fixSpace(part.label), isLast && !item.hint.paddingRight ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None, new RenderedInlayHintLabelPart(item, i));\n            }\n            // whitespace trailing the actual label\n            if (item.hint.paddingRight) {\n                addInjectedWhitespace(item, true);\n            }\n            if (newDecorationsData.length > InlayHintsController._MAX_DECORATORS) {\n                break;\n            }\n        }\n        // collect all decoration ids that are affected by the ranges\n        // and only update those decorations\n        const decorationIdsToReplace = [];\n        for (const range of ranges) {\n            for (const { id } of (_b = this._editor.getDecorationsInRange(range)) !== null && _b !== void 0 ? _b : []) {\n                const metadata = this._decorationsMetadata.get(id);\n                if (metadata) {\n                    decorationIdsToReplace.push(id);\n                    metadata.classNameRef.dispose();\n                    this._decorationsMetadata.delete(id);\n                }\n            }\n        }\n        const scrollState = StableEditorScrollState.capture(this._editor);\n        this._editor.changeDecorations(accessor => {\n            const newDecorationIds = accessor.deltaDecorations(decorationIdsToReplace, newDecorationsData.map(d => d.decoration));\n            for (let i = 0; i < newDecorationIds.length; i++) {\n                const data = newDecorationsData[i];\n                this._decorationsMetadata.set(newDecorationIds[i], data);\n            }\n        });\n        scrollState.restore(this._editor);\n    }\n    _fillInColors(props, hint) {\n        if (hint.kind === languages.InlayHintKind.Parameter) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintParameterBackground);\n            props.color = themeColorFromId(colors.editorInlayHintParameterForeground);\n        }\n        else if (hint.kind === languages.InlayHintKind.Type) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintTypeBackground);\n            props.color = themeColorFromId(colors.editorInlayHintTypeForeground);\n        }\n        else {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintBackground);\n            props.color = themeColorFromId(colors.editorInlayHintForeground);\n        }\n    }\n    _getLayoutInfo() {\n        const options = this._editor.getOption(138 /* EditorOption.inlayHints */);\n        const padding = options.padding;\n        const editorFontSize = this._editor.getOption(51 /* EditorOption.fontSize */);\n        const editorFontFamily = this._editor.getOption(48 /* EditorOption.fontFamily */);\n        let fontSize = options.fontSize;\n        if (!fontSize || fontSize < 5 || fontSize > editorFontSize) {\n            fontSize = editorFontSize;\n        }\n        const fontFamily = options.fontFamily || editorFontFamily;\n        const isUniform = !padding\n            && fontFamily === editorFontFamily\n            && fontSize === editorFontSize;\n        return { fontSize, fontFamily, padding, isUniform };\n    }\n    _removeAllDecorations() {\n        this._editor.removeDecorations(Array.from(this._decorationsMetadata.keys()));\n        for (const obj of this._decorationsMetadata.values()) {\n            obj.classNameRef.dispose();\n        }\n        this._decorationsMetadata.clear();\n    }\n};\nInlayHintsController.ID = 'editor.contrib.InlayHints';\nInlayHintsController._MAX_DECORATORS = 1500;\nInlayHintsController = __decorate([\n    __param(1, ILanguageFeaturesService),\n    __param(2, ILanguageFeatureDebounceService),\n    __param(3, IInlayHintsCache),\n    __param(4, ICommandService),\n    __param(5, INotificationService),\n    __param(6, IInstantiationService)\n], InlayHintsController);\nexport { InlayHintsController };\n// Prevents the view from potentially visible whitespace\nfunction fixSpace(str) {\n    const noBreakWhitespace = '\\xa0';\n    return str.replace(/[ \\t]/g, noBreakWhitespace);\n}\nCommandsRegistry.registerCommand('_executeInlayHintProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    const [uri, range] = args;\n    assertType(URI.isUri(uri));\n    assertType(Range.isIRange(range));\n    const { inlayHintsProvider } = accessor.get(ILanguageFeaturesService);\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\n    try {\n        const model = yield InlayHintsFragments.create(inlayHintsProvider, ref.object.textEditorModel, [Range.lift(range)], CancellationToken.None);\n        const result = model.items.map(i => i.hint);\n        setTimeout(() => model.dispose(), 0); // dispose after sending to ext host\n        return result;\n    }\n    finally {\n        ref.dispose();\n    }\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { getHover } from '../../hover/browser/getHover.js';\nimport { MarkdownHover, MarkdownHoverParticipant } from '../../hover/browser/markdownHoverParticipant.js';\nimport { RenderedInlayHintLabelPart, InlayHintsController } from './inlayHintsController.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { localize } from '../../../../nls.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { asCommandLink } from './inlayHints.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nclass InlayHintsHoverAnchor extends HoverForeignElementAnchor {\n    constructor(part, owner, initialMousePosX, initialMousePosY) {\n        super(10, owner, part.item.anchor.range, initialMousePosX, initialMousePosY, true);\n        this.part = part;\n    }\n}\nlet InlayHintsHover = class InlayHintsHover extends MarkdownHoverParticipant {\n    constructor(editor, languageService, openerService, configurationService, _resolverService, languageFeaturesService) {\n        super(editor, languageService, openerService, configurationService, languageFeaturesService);\n        this._resolverService = _resolverService;\n        this.hoverOrdinal = 6;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        var _a;\n        const controller = InlayHintsController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        if (mouseEvent.target.type !== 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return null;\n        }\n        const options = (_a = mouseEvent.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n        if (!(options instanceof ModelDecorationInjectedTextOptions && options.attachedData instanceof RenderedInlayHintLabelPart)) {\n            return null;\n        }\n        return new InlayHintsHoverAnchor(options.attachedData, this, mouseEvent.event.posx, mouseEvent.event.posy);\n    }\n    computeSync() {\n        return [];\n    }\n    computeAsync(anchor, _lineDecorations, token) {\n        if (!(anchor instanceof InlayHintsHoverAnchor)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        return new AsyncIterableObject((executor) => __awaiter(this, void 0, void 0, function* () {\n            var _a, e_1, _b, _c;\n            const { part } = anchor;\n            yield part.item.resolve(token);\n            if (token.isCancellationRequested) {\n                return;\n            }\n            // (1) Inlay Tooltip\n            let itemTooltip;\n            if (typeof part.item.hint.tooltip === 'string') {\n                itemTooltip = new MarkdownString().appendText(part.item.hint.tooltip);\n            }\n            else if (part.item.hint.tooltip) {\n                itemTooltip = part.item.hint.tooltip;\n            }\n            if (itemTooltip) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [itemTooltip], false, 0));\n            }\n            // (1.2) Inlay dbl-click gesture\n            if (isNonEmptyArray(part.item.hint.textEdits)) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(localize('hint.dbl', \"Double-click to insert\"))], false, 10001));\n            }\n            // (2) Inlay Label Part Tooltip\n            let partTooltip;\n            if (typeof part.part.tooltip === 'string') {\n                partTooltip = new MarkdownString().appendText(part.part.tooltip);\n            }\n            else if (part.part.tooltip) {\n                partTooltip = part.part.tooltip;\n            }\n            if (partTooltip) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [partTooltip], false, 1));\n            }\n            // (2.2) Inlay Label Part Help Hover\n            if (part.part.location || part.part.command) {\n                let linkHint;\n                const useMetaKey = this._editor.getOption(76 /* EditorOption.multiCursorModifier */) === 'altKey';\n                const kb = useMetaKey\n                    ? platform.isMacintosh\n                        ? localize('links.navigate.kb.meta.mac', \"cmd + click\")\n                        : localize('links.navigate.kb.meta', \"ctrl + click\")\n                    : platform.isMacintosh\n                        ? localize('links.navigate.kb.alt.mac', \"option + click\")\n                        : localize('links.navigate.kb.alt', \"alt + click\");\n                if (part.part.location && part.part.command) {\n                    linkHint = new MarkdownString().appendText(localize('hint.defAndCommand', 'Go to Definition ({0}), right click for more', kb));\n                }\n                else if (part.part.location) {\n                    linkHint = new MarkdownString().appendText(localize('hint.def', 'Go to Definition ({0})', kb));\n                }\n                else if (part.part.command) {\n                    linkHint = new MarkdownString(`[${localize('hint.cmd', \"Execute Command\")}](${asCommandLink(part.part.command)} \"${part.part.command.title}\") (${kb})`, { isTrusted: true });\n                }\n                if (linkHint) {\n                    executor.emitOne(new MarkdownHover(this, anchor.range, [linkHint], false, 10000));\n                }\n            }\n            // (3) Inlay Label Part Location tooltip\n            const iterable = yield this._resolveInlayHintLabelPartHover(part, token);\n            try {\n                for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = yield iterable_1.next(), _a = iterable_1_1.done, !_a; _d = true) {\n                    _c = iterable_1_1.value;\n                    _d = false;\n                    const item = _c;\n                    executor.emitOne(item);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_1.return)) yield _b.call(iterable_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }));\n    }\n    _resolveInlayHintLabelPartHover(part, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!part.part.location) {\n                return AsyncIterableObject.EMPTY;\n            }\n            const { uri, range } = part.part.location;\n            const ref = yield this._resolverService.createModelReference(uri);\n            try {\n                const model = ref.object.textEditorModel;\n                if (!this._languageFeaturesService.hoverProvider.has(model)) {\n                    return AsyncIterableObject.EMPTY;\n                }\n                return getHover(this._languageFeaturesService.hoverProvider, model, new Position(range.startLineNumber, range.startColumn), token)\n                    .filter(item => !isEmptyMarkdownString(item.hover.contents))\n                    .map(item => new MarkdownHover(this, part.item.anchor.range, item.hover.contents, false, 2 + item.ordinal));\n            }\n            finally {\n                ref.dispose();\n            }\n        });\n    }\n};\nInlayHintsHover = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService),\n    __param(4, ITextModelService),\n    __param(5, ILanguageFeaturesService)\n], InlayHintsHover);\nexport { InlayHintsHover };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { InlayHintsController } from './inlayHintsController.js';\nimport { InlayHintsHover } from './inlayHintsHover.js';\nregisterEditorContribution(InlayHintsController.ID, InlayHintsController, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nHoverParticipantRegistry.register(InlayHintsHover);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Action, Separator } from '../../../../base/common/actions.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { DefinitionAction, SymbolNavigationAction, SymbolNavigationAnchor } from '../../gotoSymbol/browser/goToCommands.js';\nimport { PeekContext } from '../../peekView/browser/peekView.js';\nimport { isIMenuItem, MenuId, MenuItemAction, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nexport function showGoToContextMenu(accessor, editor, anchor, part) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const resolverService = accessor.get(ITextModelService);\n        const contextMenuService = accessor.get(IContextMenuService);\n        const commandService = accessor.get(ICommandService);\n        const instaService = accessor.get(IInstantiationService);\n        const notificationService = accessor.get(INotificationService);\n        yield part.item.resolve(CancellationToken.None);\n        if (!part.part.location) {\n            return;\n        }\n        const location = part.part.location;\n        const menuActions = [];\n        // from all registered (not active) context menu actions select those\n        // that are a symbol navigation actions\n        const filter = new Set(MenuRegistry.getMenuItems(MenuId.EditorContext)\n            .map(item => isIMenuItem(item) ? item.command.id : generateUuid()));\n        for (const delegate of SymbolNavigationAction.all()) {\n            if (filter.has(delegate.desc.id)) {\n                menuActions.push(new Action(delegate.desc.id, MenuItemAction.label(delegate.desc, { renderShortTitle: true }), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                    const ref = yield resolverService.createModelReference(location.uri);\n                    try {\n                        const symbolAnchor = new SymbolNavigationAnchor(ref.object.textEditorModel, Range.getStartPosition(location.range));\n                        const range = part.item.anchor.range;\n                        yield instaService.invokeFunction(delegate.runEditorCommand.bind(delegate), editor, symbolAnchor, range);\n                    }\n                    finally {\n                        ref.dispose();\n                    }\n                })));\n            }\n        }\n        if (part.part.command) {\n            const { command } = part.part;\n            menuActions.push(new Separator());\n            menuActions.push(new Action(command.id, command.title, undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                var _b;\n                try {\n                    yield commandService.executeCommand(command.id, ...((_b = command.arguments) !== null && _b !== void 0 ? _b : []));\n                }\n                catch (err) {\n                    notificationService.notify({\n                        severity: Severity.Error,\n                        source: part.item.provider.displayName,\n                        message: err\n                    });\n                }\n            })));\n        }\n        // show context menu\n        const useShadowDOM = editor.getOption(125 /* EditorOption.useShadowDOM */);\n        contextMenuService.showContextMenu({\n            domForShadowRoot: useShadowDOM ? (_a = editor.getDomNode()) !== null && _a !== void 0 ? _a : undefined : undefined,\n            getAnchor: () => {\n                const box = dom.getDomNodePagePosition(anchor);\n                return { x: box.left, y: box.top + box.height + 8 };\n            },\n            getActions: () => menuActions,\n            onHide: () => {\n                editor.focus();\n            },\n            autoSelectFirstItem: true,\n        });\n    });\n}\nexport function goToDefinitionWithLocation(accessor, event, editor, location) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const resolverService = accessor.get(ITextModelService);\n        const ref = yield resolverService.createModelReference(location.uri);\n        yield editor.invokeWithinContext((accessor) => __awaiter(this, void 0, void 0, function* () {\n            const openToSide = event.hasSideBySideModifier;\n            const contextKeyService = accessor.get(IContextKeyService);\n            const isInPeek = PeekContext.inPeekEditor.getValue(contextKeyService);\n            const canPeek = !openToSide && editor.getOption(86 /* EditorOption.definitionLinkOpensInPeek */) && !isInPeek;\n            const action = new DefinitionAction({ openToSide, openInPeek: canPeek, muteMessage: true }, { title: { value: '', original: '' }, id: '', precondition: undefined });\n            return action.run(accessor, new SymbolNavigationAnchor(ref.object.textEditorModel, Range.getStartPosition(location.range)), Range.lift(location.range));\n        }));\n        ref.dispose();\n    });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const inlineSuggestCommitId = 'editor.action.inlineSuggest.commit';\nexport const showPreviousInlineSuggestionActionId = 'editor.action.inlineSuggest.showPrevious';\nexport const showNextInlineSuggestionActionId = 'editor.action.inlineSuggest.showNext';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { autorun } from '../../../../base/common/observable.js';\nimport { firstNonWhitespaceIndex } from '../../../../base/common/strings.js';\nimport { CursorColumns } from '../../../common/core/cursorColumns.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { localize } from '../../../../nls.js';\nexport class InlineCompletionContextKeys extends Disposable {\n    constructor(contextKeyService, model) {\n        super();\n        this.contextKeyService = contextKeyService;\n        this.model = model;\n        this.inlineCompletionVisible = InlineCompletionContextKeys.inlineSuggestionVisible.bindTo(this.contextKeyService);\n        this.inlineCompletionSuggestsIndentation = InlineCompletionContextKeys.inlineSuggestionHasIndentation.bindTo(this.contextKeyService);\n        this.inlineCompletionSuggestsIndentationLessThanTabSize = InlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize.bindTo(this.contextKeyService);\n        this.suppressSuggestions = InlineCompletionContextKeys.suppressSuggestions.bindTo(this.contextKeyService);\n        this._register(autorun('update context key: inlineCompletionVisible, suppressSuggestions', (reader) => {\n            const model = this.model.read(reader);\n            const state = model === null || model === void 0 ? void 0 : model.state.read(reader);\n            const isInlineCompletionVisible = !!(state === null || state === void 0 ? void 0 : state.inlineCompletion) && (state === null || state === void 0 ? void 0 : state.ghostText) !== undefined && !(state === null || state === void 0 ? void 0 : state.ghostText.isEmpty());\n            this.inlineCompletionVisible.set(isInlineCompletionVisible);\n            if ((state === null || state === void 0 ? void 0 : state.ghostText) && (state === null || state === void 0 ? void 0 : state.inlineCompletion)) {\n                this.suppressSuggestions.set(state.inlineCompletion.inlineCompletion.source.inlineCompletions.suppressSuggestions);\n            }\n        }));\n        this._register(autorun('update context key: inlineCompletionSuggestsIndentation, inlineCompletionSuggestsIndentationLessThanTabSize', (reader) => {\n            const model = this.model.read(reader);\n            let startsWithIndentation = false;\n            let startsWithIndentationLessThanTabSize = true;\n            const ghostText = model === null || model === void 0 ? void 0 : model.ghostText.read(reader);\n            if (!!(model === null || model === void 0 ? void 0 : model.selectedSuggestItem) && ghostText && ghostText.parts.length > 0) {\n                const { column, lines } = ghostText.parts[0];\n                const firstLine = lines[0];\n                const indentationEndColumn = model.textModel.getLineIndentColumn(ghostText.lineNumber);\n                const inIndentation = column <= indentationEndColumn;\n                if (inIndentation) {\n                    let firstNonWsIdx = firstNonWhitespaceIndex(firstLine);\n                    if (firstNonWsIdx === -1) {\n                        firstNonWsIdx = firstLine.length - 1;\n                    }\n                    startsWithIndentation = firstNonWsIdx > 0;\n                    const tabSize = model.textModel.getOptions().tabSize;\n                    const visibleColumnIndentation = CursorColumns.visibleColumnFromColumn(firstLine, firstNonWsIdx + 1, tabSize);\n                    startsWithIndentationLessThanTabSize = visibleColumnIndentation < tabSize;\n                }\n            }\n            this.inlineCompletionSuggestsIndentation.set(startsWithIndentation);\n            this.inlineCompletionSuggestsIndentationLessThanTabSize.set(startsWithIndentationLessThanTabSize);\n        }));\n    }\n}\nInlineCompletionContextKeys.inlineSuggestionVisible = new RawContextKey('inlineSuggestionVisible', false, localize('inlineSuggestionVisible', \"Whether an inline suggestion is visible\"));\nInlineCompletionContextKeys.inlineSuggestionHasIndentation = new RawContextKey('inlineSuggestionHasIndentation', false, localize('inlineSuggestionHasIndentation', \"Whether the inline suggestion starts with whitespace\"));\nInlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize = new RawContextKey('inlineSuggestionHasIndentationLessThanTabSize', true, localize('inlineSuggestionHasIndentationLessThanTabSize', \"Whether the inline suggestion starts with whitespace that is less than what would be inserted by tab\"));\nInlineCompletionContextKeys.suppressSuggestions = new RawContextKey('inlineSuggestionSuppressSuggestions', undefined, localize('suppressSuggestions', \"Whether suggestions should be suppressed for the current suggestion\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { autorun } from '../../../../base/common/observable.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nexport function applyEdits(text, edits) {\n    const transformer = new PositionOffsetTransformer(text);\n    const offsetEdits = edits.map(e => {\n        const range = Range.lift(e.range);\n        return ({\n            startOffset: transformer.getOffset(range.getStartPosition()),\n            endOffset: transformer.getOffset(range.getEndPosition()),\n            text: e.text\n        });\n    });\n    offsetEdits.sort((a, b) => b.startOffset - a.startOffset);\n    for (const edit of offsetEdits) {\n        text = text.substring(0, edit.startOffset) + edit.text + text.substring(edit.endOffset);\n    }\n    return text;\n}\nclass PositionOffsetTransformer {\n    constructor(text) {\n        this.lineStartOffsetByLineIdx = [];\n        this.lineStartOffsetByLineIdx.push(0);\n        for (let i = 0; i < text.length; i++) {\n            if (text.charAt(i) === '\\n') {\n                this.lineStartOffsetByLineIdx.push(i + 1);\n            }\n        }\n    }\n    getOffset(position) {\n        return this.lineStartOffsetByLineIdx[position.lineNumber - 1] + position.column - 1;\n    }\n}\nconst array = [];\nexport function getReadonlyEmptyArray() {\n    return array;\n}\nexport class ColumnRange {\n    constructor(startColumn, endColumnExclusive) {\n        this.startColumn = startColumn;\n        this.endColumnExclusive = endColumnExclusive;\n        if (startColumn > endColumnExclusive) {\n            throw new BugIndicatingError(`startColumn ${startColumn} cannot be after endColumnExclusive ${endColumnExclusive}`);\n        }\n    }\n    toRange(lineNumber) {\n        return new Range(lineNumber, this.startColumn, lineNumber, this.endColumnExclusive);\n    }\n}\nexport function applyObservableDecorations(editor, decorations) {\n    const d = new DisposableStore();\n    const decorationsCollection = editor.createDecorationsCollection();\n    d.add(autorun(`Apply decorations from ${decorations.debugName}`, reader => {\n        const d = decorations.read(reader);\n        decorationsCollection.set(d);\n    }));\n    d.add({\n        dispose: () => {\n            decorationsCollection.clear();\n        }\n    });\n    return d;\n}\nexport function addPositions(pos1, pos2) {\n    return new Position(pos1.lineNumber + pos2.lineNumber - 1, pos2.lineNumber === 1 ? pos1.column + pos2.column - 1 : pos2.column);\n}\nexport function lengthOfText(text) {\n    let line = 1;\n    let column = 1;\n    for (const c of text) {\n        if (c === '\\n') {\n            line++;\n            column = 1;\n        }\n        else {\n            column++;\n        }\n    }\n    return new Position(line, column);\n}\n","import { applyEdits } from './utils.js';\nexport class GhostText {\n    constructor(lineNumber, parts) {\n        this.lineNumber = lineNumber;\n        this.parts = parts;\n    }\n    renderForScreenReader(lineText) {\n        if (this.parts.length === 0) {\n            return '';\n        }\n        const lastPart = this.parts[this.parts.length - 1];\n        const cappedLineText = lineText.substr(0, lastPart.column - 1);\n        const text = applyEdits(cappedLineText, this.parts.map(p => ({\n            range: { startLineNumber: 1, endLineNumber: 1, startColumn: p.column, endColumn: p.column },\n            text: p.lines.join('\\n')\n        })));\n        return text.substring(this.parts[0].column - 1);\n    }\n    isEmpty() {\n        return this.parts.every(p => p.lines.length === 0);\n    }\n    get lineCount() {\n        return 1 + this.parts.reduce((r, p) => r + p.lines.length - 1, 0);\n    }\n}\nexport class GhostTextPart {\n    constructor(column, lines, \n    /**\n     * Indicates if this part is a preview of an inline suggestion when a suggestion is previewed.\n    */\n    preview) {\n        this.column = column;\n        this.lines = lines;\n        this.preview = preview;\n    }\n}\nexport class GhostTextReplacement {\n    constructor(lineNumber, columnRange, newLines, additionalReservedLineCount = 0) {\n        this.lineNumber = lineNumber;\n        this.columnRange = columnRange;\n        this.newLines = newLines;\n        this.additionalReservedLineCount = additionalReservedLineCount;\n        this.parts = [\n            new GhostTextPart(this.columnRange.endColumnExclusive, this.newLines, false),\n        ];\n    }\n    renderForScreenReader(_lineText) {\n        return this.newLines.join('\\n');\n    }\n    get lineCount() {\n        return this.newLines.length;\n    }\n    isEmpty() {\n        return this.parts.every(p => p.lines.length === 0);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createTrustedTypesPolicy } from '../../../../base/browser/trustedTypes.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, derived, observableFromEvent, observableSignalFromEvent, observableValue } from '../../../../base/common/observable.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './ghostText.css';\nimport { applyFontInfo } from '../../../browser/config/domFontInfo.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { StringBuilder } from '../../../common/core/stringBuilder.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { LineTokens } from '../../../common/tokens/lineTokens.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { GhostTextReplacement } from './ghostText.js';\nimport { ColumnRange, applyObservableDecorations } from './utils.js';\nlet GhostTextWidget = class GhostTextWidget extends Disposable {\n    constructor(editor, model, languageService) {\n        super();\n        this.editor = editor;\n        this.model = model;\n        this.languageService = languageService;\n        this.isDisposed = observableValue('isDisposed', false);\n        this.currentTextModel = observableFromEvent(this.editor.onDidChangeModel, () => this.editor.getModel());\n        this.uiState = derived('uiState', reader => {\n            if (this.isDisposed.read(reader)) {\n                return undefined;\n            }\n            const textModel = this.currentTextModel.read(reader);\n            if (textModel !== this.model.targetTextModel.read(reader)) {\n                return undefined;\n            }\n            const ghostText = this.model.ghostText.read(reader);\n            if (!ghostText) {\n                return undefined;\n            }\n            const replacedRange = ghostText instanceof GhostTextReplacement ? ghostText.columnRange : undefined;\n            const inlineTexts = [];\n            const additionalLines = [];\n            function addToAdditionalLines(lines, className) {\n                if (additionalLines.length > 0) {\n                    const lastLine = additionalLines[additionalLines.length - 1];\n                    if (className) {\n                        lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* InlineDecorationType.Regular */));\n                    }\n                    lastLine.content += lines[0];\n                    lines = lines.slice(1);\n                }\n                for (const line of lines) {\n                    additionalLines.push({\n                        content: line,\n                        decorations: className ? [new LineDecoration(1, line.length + 1, className, 0 /* InlineDecorationType.Regular */)] : []\n                    });\n                }\n            }\n            const textBufferLine = textModel.getLineContent(ghostText.lineNumber);\n            let hiddenTextStartColumn = undefined;\n            let lastIdx = 0;\n            for (const part of ghostText.parts) {\n                let lines = part.lines;\n                if (hiddenTextStartColumn === undefined) {\n                    inlineTexts.push({\n                        column: part.column,\n                        text: lines[0],\n                        preview: part.preview,\n                    });\n                    lines = lines.slice(1);\n                }\n                else {\n                    addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\n                }\n                if (lines.length > 0) {\n                    addToAdditionalLines(lines, 'ghost-text');\n                    if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\n                        hiddenTextStartColumn = part.column;\n                    }\n                }\n                lastIdx = part.column - 1;\n            }\n            if (hiddenTextStartColumn !== undefined) {\n                addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\n            }\n            const hiddenRange = hiddenTextStartColumn !== undefined ? new ColumnRange(hiddenTextStartColumn, textBufferLine.length + 1) : undefined;\n            return {\n                replacedRange,\n                inlineTexts,\n                additionalLines,\n                hiddenRange,\n                lineNumber: ghostText.lineNumber,\n                additionalReservedLineCount: this.model.minReservedLineCount.read(reader),\n                targetTextModel: textModel,\n            };\n        });\n        this.decorations = derived('decorations', reader => {\n            const uiState = this.uiState.read(reader);\n            if (!uiState) {\n                return [];\n            }\n            const decorations = [];\n            if (uiState.replacedRange) {\n                decorations.push({\n                    range: uiState.replacedRange.toRange(uiState.lineNumber),\n                    options: { inlineClassName: 'inline-completion-text-to-replace', description: 'GhostTextReplacement' }\n                });\n            }\n            if (uiState.hiddenRange) {\n                decorations.push({\n                    range: uiState.hiddenRange.toRange(uiState.lineNumber),\n                    options: { inlineClassName: 'ghost-text-hidden', description: 'ghost-text-hidden', }\n                });\n            }\n            for (const p of uiState.inlineTexts) {\n                decorations.push({\n                    range: Range.fromPositions(new Position(uiState.lineNumber, p.column)),\n                    options: {\n                        description: 'ghost-text',\n                        after: { content: p.text, inlineClassName: p.preview ? 'ghost-text-decoration-preview' : 'ghost-text-decoration', cursorStops: InjectedTextCursorStops.Left },\n                        showIfCollapsed: true,\n                    }\n                });\n            }\n            return decorations;\n        });\n        this.additionalLinesWidget = this._register(new AdditionalLinesWidget(this.editor, this.languageService.languageIdCodec, derived('lines', (reader) => {\n            const uiState = this.uiState.read(reader);\n            return uiState ? {\n                lineNumber: uiState.lineNumber,\n                additionalLines: uiState.additionalLines,\n                minReservedLineCount: uiState.additionalReservedLineCount,\n                targetTextModel: uiState.targetTextModel,\n            } : undefined;\n        })));\n        this._register(toDisposable(() => { this.isDisposed.set(true, undefined); }));\n        this._register(applyObservableDecorations(this.editor, this.decorations));\n    }\n    ownsViewZone(viewZoneId) {\n        return this.additionalLinesWidget.viewZoneId === viewZoneId;\n    }\n};\nGhostTextWidget = __decorate([\n    __param(2, ILanguageService)\n], GhostTextWidget);\nexport { GhostTextWidget };\nclass AdditionalLinesWidget extends Disposable {\n    get viewZoneId() { return this._viewZoneId; }\n    constructor(editor, languageIdCodec, lines) {\n        super();\n        this.editor = editor;\n        this.languageIdCodec = languageIdCodec;\n        this.lines = lines;\n        this._viewZoneId = undefined;\n        this.editorOptionsChanged = observableSignalFromEvent('editorOptionChanged', Event.filter(this.editor.onDidChangeConfiguration, e => e.hasChanged(32 /* EditorOption.disableMonospaceOptimizations */)\n            || e.hasChanged(115 /* EditorOption.stopRenderingLineAfter */)\n            || e.hasChanged(97 /* EditorOption.renderWhitespace */)\n            || e.hasChanged(92 /* EditorOption.renderControlCharacters */)\n            || e.hasChanged(50 /* EditorOption.fontLigatures */)\n            || e.hasChanged(49 /* EditorOption.fontInfo */)\n            || e.hasChanged(65 /* EditorOption.lineHeight */)));\n        this._register(autorun('update view zone', reader => {\n            const lines = this.lines.read(reader);\n            this.editorOptionsChanged.read(reader);\n            if (lines) {\n                this.updateLines(lines.lineNumber, lines.additionalLines, lines.minReservedLineCount);\n            }\n            else {\n                this.clear();\n            }\n        }));\n    }\n    dispose() {\n        super.dispose();\n        this.clear();\n    }\n    clear() {\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n        });\n    }\n    updateLines(lineNumber, additionalLines, minReservedLineCount) {\n        const textModel = this.editor.getModel();\n        if (!textModel) {\n            return;\n        }\n        const { tabSize } = textModel.getOptions();\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n            const heightInLines = Math.max(additionalLines.length, minReservedLineCount);\n            if (heightInLines > 0) {\n                const domNode = document.createElement('div');\n                renderLines(domNode, tabSize, additionalLines, this.editor.getOptions(), this.languageIdCodec);\n                this._viewZoneId = changeAccessor.addZone({\n                    afterLineNumber: lineNumber,\n                    heightInLines: heightInLines,\n                    domNode,\n                    afterColumnAffinity: 1 /* PositionAffinity.Right */\n                });\n            }\n        });\n    }\n}\nfunction renderLines(domNode, tabSize, lines, opts, languageIdCodec) {\n    const disableMonospaceOptimizations = opts.get(32 /* EditorOption.disableMonospaceOptimizations */);\n    const stopRenderingLineAfter = opts.get(115 /* EditorOption.stopRenderingLineAfter */);\n    // To avoid visual confusion, we don't want to render visible whitespace\n    const renderWhitespace = 'none';\n    const renderControlCharacters = opts.get(92 /* EditorOption.renderControlCharacters */);\n    const fontLigatures = opts.get(50 /* EditorOption.fontLigatures */);\n    const fontInfo = opts.get(49 /* EditorOption.fontInfo */);\n    const lineHeight = opts.get(65 /* EditorOption.lineHeight */);\n    const sb = new StringBuilder(10000);\n    sb.appendString('<div class=\"suggest-preview-text\">');\n    for (let i = 0, len = lines.length; i < len; i++) {\n        const lineData = lines[i];\n        const line = lineData.content;\n        sb.appendString('<div class=\"view-line');\n        sb.appendString('\" style=\"top:');\n        sb.appendString(String(i * lineHeight));\n        sb.appendString('px;width:1000000px;\">');\n        const isBasicASCII = strings.isBasicASCII(line);\n        const containsRTL = strings.containsRTL(line);\n        const lineTokens = LineTokens.createEmpty(line, languageIdCodec);\n        renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, line, false, isBasicASCII, containsRTL, 0, lineTokens, lineData.decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null), sb);\n        sb.appendString('</div>');\n    }\n    sb.appendString('</div>');\n    applyFontInfo(domNode, fontInfo);\n    const html = sb.build();\n    const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n    domNode.innerHTML = trustedhtml;\n}\nconst ttPolicy = createTrustedTypesPolicy('editorGhostText', { createHTML: value => value });\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../../base/common/diff/diff.js';\nimport { commonPrefixLength, getLeadingWhitespace, splitLines } from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { GhostText, GhostTextPart } from './ghostText.js';\nimport { addPositions, lengthOfText } from './utils.js';\nexport class SingleTextEdit {\n    constructor(range, text) {\n        this.range = range;\n        this.text = text;\n    }\n    removeCommonPrefix(model, validModelRange) {\n        const modelRange = validModelRange ? this.range.intersectRanges(validModelRange) : this.range;\n        if (!modelRange) {\n            return this;\n        }\n        const valueToReplace = model.getValueInRange(modelRange, 1 /* EndOfLinePreference.LF */);\n        const commonPrefixLen = commonPrefixLength(valueToReplace, this.text);\n        const start = addPositions(this.range.getStartPosition(), lengthOfText(valueToReplace.substring(0, commonPrefixLen)));\n        const text = this.text.substring(commonPrefixLen);\n        const range = Range.fromPositions(start, this.range.getEndPosition());\n        return new SingleTextEdit(range, text);\n    }\n    augments(base) {\n        // The augmented completion must replace the base range, but can replace even more\n        return this.text.startsWith(base.text) && rangeExtends(this.range, base.range);\n    }\n    /**\n     * @param previewSuffixLength Sets where to split `inlineCompletion.text`.\n     * \tIf the text is `hello` and the suffix length is 2, the non-preview part is `hel` and the preview-part is `lo`.\n    */\n    computeGhostText(model, mode, cursorPosition, previewSuffixLength = 0) {\n        let edit = this.removeCommonPrefix(model);\n        if (edit.range.endLineNumber !== edit.range.startLineNumber) {\n            // This edit might span multiple lines, but the first lines must be a common prefix.\n            return undefined;\n        }\n        const sourceLine = model.getLineContent(edit.range.startLineNumber);\n        const sourceIndentationLength = getLeadingWhitespace(sourceLine).length;\n        const suggestionTouchesIndentation = edit.range.startColumn - 1 <= sourceIndentationLength;\n        if (suggestionTouchesIndentation) {\n            // source:      ··········[······abc]\n            //                         ^^^^^^^^^ inlineCompletion.range\n            //              ^^^^^^^^^^ ^^^^^^ sourceIndentationLength\n            //                         ^^^^^^ replacedIndentation.length\n            //                               ^^^ rangeThatDoesNotReplaceIndentation\n            // inlineCompletion.text: '··foo'\n            //                         ^^ suggestionAddedIndentationLength\n            const suggestionAddedIndentationLength = getLeadingWhitespace(edit.text).length;\n            const replacedIndentation = sourceLine.substring(edit.range.startColumn - 1, sourceIndentationLength);\n            const [startPosition, endPosition] = [edit.range.getStartPosition(), edit.range.getEndPosition()];\n            const newStartPosition = startPosition.column + replacedIndentation.length <= endPosition.column\n                ? startPosition.delta(0, replacedIndentation.length)\n                : endPosition;\n            const rangeThatDoesNotReplaceIndentation = Range.fromPositions(newStartPosition, endPosition);\n            const suggestionWithoutIndentationChange = edit.text.startsWith(replacedIndentation)\n                // Adds more indentation without changing existing indentation: We can add ghost text for this\n                ? edit.text.substring(replacedIndentation.length)\n                // Changes or removes existing indentation. Only add ghost text for the non-indentation part.\n                : edit.text.substring(suggestionAddedIndentationLength);\n            edit = new SingleTextEdit(rangeThatDoesNotReplaceIndentation, suggestionWithoutIndentationChange);\n        }\n        // This is a single line string\n        const valueToBeReplaced = model.getValueInRange(edit.range);\n        const changes = cachingDiff(valueToBeReplaced, edit.text);\n        if (!changes) {\n            // No ghost text in case the diff would be too slow to compute\n            return undefined;\n        }\n        const lineNumber = edit.range.startLineNumber;\n        const parts = new Array();\n        if (mode === 'prefix') {\n            const filteredChanges = changes.filter(c => c.originalLength === 0);\n            if (filteredChanges.length > 1 || filteredChanges.length === 1 && filteredChanges[0].originalStart !== valueToBeReplaced.length) {\n                // Prefixes only have a single change.\n                return undefined;\n            }\n        }\n        const previewStartInCompletionText = edit.text.length - previewSuffixLength;\n        for (const c of changes) {\n            const insertColumn = edit.range.startColumn + c.originalStart + c.originalLength;\n            if (mode === 'subwordSmart' && cursorPosition && cursorPosition.lineNumber === edit.range.startLineNumber && insertColumn < cursorPosition.column) {\n                // No ghost text before cursor\n                return undefined;\n            }\n            if (c.originalLength > 0) {\n                return undefined;\n            }\n            if (c.modifiedLength === 0) {\n                continue;\n            }\n            const modifiedEnd = c.modifiedStart + c.modifiedLength;\n            const nonPreviewTextEnd = Math.max(c.modifiedStart, Math.min(modifiedEnd, previewStartInCompletionText));\n            const nonPreviewText = edit.text.substring(c.modifiedStart, nonPreviewTextEnd);\n            const italicText = edit.text.substring(nonPreviewTextEnd, Math.max(c.modifiedStart, modifiedEnd));\n            if (nonPreviewText.length > 0) {\n                const lines = splitLines(nonPreviewText);\n                parts.push(new GhostTextPart(insertColumn, lines, false));\n            }\n            if (italicText.length > 0) {\n                const lines = splitLines(italicText);\n                parts.push(new GhostTextPart(insertColumn, lines, true));\n            }\n        }\n        return new GhostText(lineNumber, parts);\n    }\n}\nfunction rangeExtends(extendingRange, rangeToExtend) {\n    return rangeToExtend.getStartPosition().equals(extendingRange.getStartPosition())\n        && rangeToExtend.getEndPosition().isBeforeOrEqual(extendingRange.getEndPosition());\n}\nlet lastRequest = undefined;\nfunction cachingDiff(originalValue, newValue) {\n    if ((lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.originalValue) === originalValue && (lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.newValue) === newValue) {\n        return lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.changes;\n    }\n    else {\n        let changes = smartDiff(originalValue, newValue, true);\n        if (changes) {\n            const deletedChars = deletedCharacters(changes);\n            if (deletedChars > 0) {\n                // For performance reasons, don't compute diff if there is nothing to improve\n                const newChanges = smartDiff(originalValue, newValue, false);\n                if (newChanges && deletedCharacters(newChanges) < deletedChars) {\n                    // Disabling smartness seems to be better here\n                    changes = newChanges;\n                }\n            }\n        }\n        lastRequest = {\n            originalValue,\n            newValue,\n            changes\n        };\n        return changes;\n    }\n}\nfunction deletedCharacters(changes) {\n    let sum = 0;\n    for (const c of changes) {\n        sum += c.originalLength;\n    }\n    return sum;\n}\n/**\n * When matching `if ()` with `if (f() = 1) { g(); }`,\n * align it like this:        `if (       )`\n * Not like this:\t\t\t  `if (  )`\n * Also not like this:\t\t  `if (             )`.\n *\n * The parenthesis are preprocessed to ensure that they match correctly.\n */\nfunction smartDiff(originalValue, newValue, smartBracketMatching) {\n    if (originalValue.length > 5000 || newValue.length > 5000) {\n        // We don't want to work on strings that are too big\n        return undefined;\n    }\n    function getMaxCharCode(val) {\n        let maxCharCode = 0;\n        for (let i = 0, len = val.length; i < len; i++) {\n            const charCode = val.charCodeAt(i);\n            if (charCode > maxCharCode) {\n                maxCharCode = charCode;\n            }\n        }\n        return maxCharCode;\n    }\n    const maxCharCode = Math.max(getMaxCharCode(originalValue), getMaxCharCode(newValue));\n    function getUniqueCharCode(id) {\n        if (id < 0) {\n            throw new Error('unexpected');\n        }\n        return maxCharCode + id + 1;\n    }\n    function getElements(source) {\n        let level = 0;\n        let group = 0;\n        const characters = new Int32Array(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            // TODO support more brackets\n            if (smartBracketMatching && source[i] === '(') {\n                const id = group * 100 + level;\n                characters[i] = getUniqueCharCode(2 * id);\n                level++;\n            }\n            else if (smartBracketMatching && source[i] === ')') {\n                level = Math.max(level - 1, 0);\n                const id = group * 100 + level;\n                characters[i] = getUniqueCharCode(2 * id + 1);\n                if (level === 0) {\n                    group++;\n                }\n            }\n            else {\n                characters[i] = source.charCodeAt(i);\n            }\n        }\n        return characters;\n    }\n    const elements1 = getElements(originalValue);\n    const elements2 = getElements(newValue);\n    return new LcsDiff({ getElements: () => elements1 }, { getElements: () => elements2 }).ComputeDiff(false).changes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { assertNever } from '../../../../base/common/assert.js';\nimport { DeferredPromise } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { SetMap } from '../../../../base/common/collections.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Range } from '../../../common/core/range.js';\nimport { fixBracketsInLine } from '../../../common/model/bracketPairsTextModelPart/fixBrackets.js';\nimport { getReadonlyEmptyArray } from './utils.js';\nimport { SnippetParser, Text } from '../../snippet/browser/snippetParser.js';\nexport function provideInlineCompletions(registry, position, model, context, token = CancellationToken.None, languageConfigurationService) {\n    return __awaiter(this, void 0, void 0, function* () {\n        // Important: Don't use position after the await calls, as the model could have been changed in the meantime!\n        const defaultReplaceRange = getDefaultRange(position, model);\n        const providers = registry.all(model);\n        const multiMap = new SetMap();\n        for (const provider of providers) {\n            if (provider.groupId) {\n                multiMap.add(provider.groupId, provider);\n            }\n        }\n        function getPreferredProviders(provider) {\n            if (!provider.yieldsToGroupIds) {\n                return [];\n            }\n            const result = [];\n            for (const groupId of provider.yieldsToGroupIds || []) {\n                const providers = multiMap.get(groupId);\n                for (const p of providers) {\n                    result.push(p);\n                }\n            }\n            return result;\n        }\n        const states = new Map();\n        const seen = new Set();\n        function findPreferredProviderCircle(provider, stack) {\n            stack = [...stack, provider];\n            if (seen.has(provider)) {\n                return stack;\n            }\n            seen.add(provider);\n            try {\n                const preferred = getPreferredProviders(provider);\n                for (const p of preferred) {\n                    const c = findPreferredProviderCircle(p, stack);\n                    if (c) {\n                        return c;\n                    }\n                }\n            }\n            finally {\n                seen.delete(provider);\n            }\n            return undefined;\n        }\n        function processProvider(provider) {\n            const state = states.get(provider);\n            if (state) {\n                return state;\n            }\n            const circle = findPreferredProviderCircle(provider, []);\n            if (circle) {\n                onUnexpectedExternalError(new Error(`Inline completions: cyclic yield-to dependency detected. Path: ${circle.map(s => s.toString ? s.toString() : ('' + s)).join(' -> ')}`));\n            }\n            const deferredPromise = new DeferredPromise();\n            states.set(provider, deferredPromise.p);\n            (() => __awaiter(this, void 0, void 0, function* () {\n                if (!circle) {\n                    const preferred = getPreferredProviders(provider);\n                    for (const p of preferred) {\n                        const result = yield processProvider(p);\n                        if (result && result.items.length > 0) {\n                            // Skip provider\n                            return undefined;\n                        }\n                    }\n                }\n                try {\n                    const completions = yield provider.provideInlineCompletions(model, position, context, token);\n                    return completions;\n                }\n                catch (e) {\n                    onUnexpectedExternalError(e);\n                    return undefined;\n                }\n            }))().then(c => deferredPromise.complete(c), e => deferredPromise.error(e));\n            return deferredPromise.p;\n        }\n        const providerResults = yield Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () { return ({ provider, completions: yield processProvider(provider) }); })));\n        const itemsByHash = new Map();\n        const lists = [];\n        for (const result of providerResults) {\n            const completions = result.completions;\n            if (!completions) {\n                continue;\n            }\n            const list = new InlineCompletionList(completions, result.provider);\n            lists.push(list);\n            for (const item of completions.items) {\n                const inlineCompletionItem = InlineCompletionItem.from(item, list, defaultReplaceRange, model, languageConfigurationService);\n                itemsByHash.set(inlineCompletionItem.hash(), inlineCompletionItem);\n            }\n        }\n        return new InlineCompletionProviderResult(Array.from(itemsByHash.values()), new Set(itemsByHash.keys()), lists);\n    });\n}\nexport class InlineCompletionProviderResult {\n    constructor(\n    /**\n     * Free of duplicates.\n     */\n    completions, hashs, providerResults) {\n        this.completions = completions;\n        this.hashs = hashs;\n        this.providerResults = providerResults;\n    }\n    has(item) {\n        return this.hashs.has(item.hash());\n    }\n    dispose() {\n        for (const result of this.providerResults) {\n            result.removeRef();\n        }\n    }\n}\n/**\n * A ref counted pointer to the computed `InlineCompletions` and the `InlineCompletionsProvider` that\n * computed them.\n */\nexport class InlineCompletionList {\n    constructor(inlineCompletions, provider) {\n        this.inlineCompletions = inlineCompletions;\n        this.provider = provider;\n        this.refCount = 1;\n    }\n    addRef() {\n        this.refCount++;\n    }\n    removeRef() {\n        this.refCount--;\n        if (this.refCount === 0) {\n            this.provider.freeInlineCompletions(this.inlineCompletions);\n        }\n    }\n}\nexport class InlineCompletionItem {\n    static from(inlineCompletion, source, defaultReplaceRange, textModel, languageConfigurationService) {\n        let insertText;\n        let snippetInfo;\n        let range = inlineCompletion.range ? Range.lift(inlineCompletion.range) : defaultReplaceRange;\n        if (typeof inlineCompletion.insertText === 'string') {\n            insertText = inlineCompletion.insertText;\n            if (languageConfigurationService && inlineCompletion.completeBracketPairs) {\n                insertText = closeBrackets(insertText, range.getStartPosition(), textModel, languageConfigurationService);\n                // Modify range depending on if brackets are added or removed\n                const diff = insertText.length - inlineCompletion.insertText.length;\n                if (diff !== 0) {\n                    range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n                }\n            }\n            snippetInfo = undefined;\n        }\n        else if ('snippet' in inlineCompletion.insertText) {\n            const preBracketCompletionLength = inlineCompletion.insertText.snippet.length;\n            if (languageConfigurationService && inlineCompletion.completeBracketPairs) {\n                inlineCompletion.insertText.snippet = closeBrackets(inlineCompletion.insertText.snippet, range.getStartPosition(), textModel, languageConfigurationService);\n                // Modify range depending on if brackets are added or removed\n                const diff = inlineCompletion.insertText.snippet.length - preBracketCompletionLength;\n                if (diff !== 0) {\n                    range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n                }\n            }\n            const snippet = new SnippetParser().parse(inlineCompletion.insertText.snippet);\n            if (snippet.children.length === 1 && snippet.children[0] instanceof Text) {\n                insertText = snippet.children[0].value;\n                snippetInfo = undefined;\n            }\n            else {\n                insertText = snippet.toString();\n                snippetInfo = {\n                    snippet: inlineCompletion.insertText.snippet,\n                    range: range\n                };\n            }\n        }\n        else {\n            assertNever(inlineCompletion.insertText);\n        }\n        return new InlineCompletionItem(insertText, inlineCompletion.command, range, insertText, snippetInfo, inlineCompletion.additionalTextEdits || getReadonlyEmptyArray(), inlineCompletion, source);\n    }\n    constructor(filterText, command, range, insertText, snippetInfo, additionalTextEdits, \n    /**\n     * A reference to the original inline completion this inline completion has been constructed from.\n     * Used for event data to ensure referential equality.\n    */\n    sourceInlineCompletion, \n    /**\n     * A reference to the original inline completion list this inline completion has been constructed from.\n     * Used for event data to ensure referential equality.\n    */\n    source) {\n        this.filterText = filterText;\n        this.command = command;\n        this.range = range;\n        this.insertText = insertText;\n        this.snippetInfo = snippetInfo;\n        this.additionalTextEdits = additionalTextEdits;\n        this.sourceInlineCompletion = sourceInlineCompletion;\n        this.source = source;\n        filterText = filterText.replace(/\\r\\n|\\r/g, '\\n');\n        insertText = filterText.replace(/\\r\\n|\\r/g, '\\n');\n    }\n    withRange(updatedRange) {\n        return new InlineCompletionItem(this.filterText, this.command, updatedRange, this.insertText, this.snippetInfo, this.additionalTextEdits, this.sourceInlineCompletion, this.source);\n    }\n    hash() {\n        return JSON.stringify({ insertText: this.insertText, range: this.range.toString() });\n    }\n}\nfunction getDefaultRange(position, model) {\n    const word = model.getWordAtPosition(position);\n    const maxColumn = model.getLineMaxColumn(position.lineNumber);\n    // By default, always replace up until the end of the current line.\n    // This default might be subject to change!\n    return word\n        ? new Range(position.lineNumber, word.startColumn, position.lineNumber, maxColumn)\n        : Range.fromPositions(position, position.with(undefined, maxColumn));\n}\nfunction closeBrackets(text, position, model, languageConfigurationService) {\n    const lineStart = model.getLineContent(position.lineNumber).substring(0, position.column - 1);\n    const newLine = lineStart + text;\n    const newTokens = model.tokenization.tokenizeLineWithEdit(position, newLine.length - (position.column - 1), text);\n    const slicedTokens = newTokens === null || newTokens === void 0 ? void 0 : newTokens.sliceAndInflate(position.column - 1, newLine.length, 0);\n    if (!slicedTokens) {\n        return text;\n    }\n    const newText = fixBracketsInLine(slicedTokens, languageConfigurationService);\n    return newText;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { matchesSubString } from '../../../../base/common/filters.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { derived } from '../../../../base/common/observable.js';\nimport { disposableObservableValue, transaction } from '../../../../base/common/observableImpl/base.js';\nimport { Position } from '../../../common/core/position.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { SingleTextEdit } from './singleTextEdit.js';\nimport { provideInlineCompletions } from './provideInlineCompletions.js';\nlet InlineCompletionsSource = class InlineCompletionsSource extends Disposable {\n    constructor(textModel, versionId, _debounceValue, languageFeaturesService, languageConfigurationService) {\n        super();\n        this.textModel = textModel;\n        this.versionId = versionId;\n        this._debounceValue = _debounceValue;\n        this.languageFeaturesService = languageFeaturesService;\n        this.languageConfigurationService = languageConfigurationService;\n        this._updateOperation = this._register(new MutableDisposable());\n        this.inlineCompletions = disposableObservableValue('inlineCompletions', undefined);\n        this.suggestWidgetInlineCompletions = disposableObservableValue('suggestWidgetInlineCompletions', undefined);\n        this._register(this.textModel.onDidChangeContent(() => {\n            this._updateOperation.clear();\n        }));\n    }\n    fetch(position, context, activeInlineCompletion) {\n        var _a, _b;\n        const request = new UpdateRequest(position, context, this.textModel.getVersionId());\n        const target = context.selectedSuggestionInfo ? this.suggestWidgetInlineCompletions : this.inlineCompletions;\n        if ((_a = this._updateOperation.value) === null || _a === void 0 ? void 0 : _a.request.satisfies(request)) {\n            return this._updateOperation.value.promise;\n        }\n        else if ((_b = target.get()) === null || _b === void 0 ? void 0 : _b.request.satisfies(request)) {\n            return Promise.resolve(true);\n        }\n        const updateOngoing = !!this._updateOperation.value;\n        this._updateOperation.clear();\n        const source = new CancellationTokenSource();\n        const promise = (() => __awaiter(this, void 0, void 0, function* () {\n            const shouldDebounce = updateOngoing || context.triggerKind === InlineCompletionTriggerKind.Automatic;\n            if (shouldDebounce) {\n                // This debounces the operation\n                yield wait(this._debounceValue.get(this.textModel));\n            }\n            if (source.token.isCancellationRequested || this.textModel.getVersionId() !== request.versionId) {\n                return false;\n            }\n            const startTime = new Date();\n            const updatedCompletions = yield provideInlineCompletions(this.languageFeaturesService.inlineCompletionsProvider, position, this.textModel, context, source.token, this.languageConfigurationService);\n            if (source.token.isCancellationRequested || this.textModel.getVersionId() !== request.versionId) {\n                return false;\n            }\n            const endTime = new Date();\n            this._debounceValue.update(this.textModel, endTime.getTime() - startTime.getTime());\n            const completions = new UpToDateInlineCompletions(updatedCompletions, request, this.textModel, this.versionId);\n            if (activeInlineCompletion) {\n                const asInlineCompletion = activeInlineCompletion.toInlineCompletion(undefined);\n                if (activeInlineCompletion.canBeReused(this.textModel, position) && !updatedCompletions.has(asInlineCompletion)) {\n                    completions.prepend(activeInlineCompletion.inlineCompletion, asInlineCompletion.range, true);\n                }\n            }\n            this._updateOperation.clear();\n            transaction(tx => {\n                target.set(completions, tx);\n            });\n            return true;\n        }))();\n        const updateOperation = new UpdateOperation(request, source, promise);\n        this._updateOperation.value = updateOperation;\n        return promise;\n    }\n    clear(tx) {\n        this._updateOperation.clear();\n        this.inlineCompletions.set(undefined, tx);\n        this.suggestWidgetInlineCompletions.set(undefined, tx);\n    }\n    clearSuggestWidgetInlineCompletions(tx) {\n        var _a;\n        if ((_a = this._updateOperation.value) === null || _a === void 0 ? void 0 : _a.request.context.selectedSuggestionInfo) {\n            this._updateOperation.clear();\n        }\n        this.suggestWidgetInlineCompletions.set(undefined, tx);\n    }\n    cancelUpdate() {\n        this._updateOperation.clear();\n    }\n};\nInlineCompletionsSource = __decorate([\n    __param(3, ILanguageFeaturesService),\n    __param(4, ILanguageConfigurationService)\n], InlineCompletionsSource);\nexport { InlineCompletionsSource };\nfunction wait(ms, cancellationToken) {\n    return new Promise(resolve => {\n        let d = undefined;\n        const handle = setTimeout(() => {\n            if (d) {\n                d.dispose();\n            }\n            resolve();\n        }, ms);\n        if (cancellationToken) {\n            d = cancellationToken.onCancellationRequested(() => {\n                clearTimeout(handle);\n                if (d) {\n                    d.dispose();\n                }\n                resolve();\n            });\n        }\n    });\n}\nclass UpdateRequest {\n    constructor(position, context, versionId) {\n        this.position = position;\n        this.context = context;\n        this.versionId = versionId;\n    }\n    satisfies(other) {\n        return this.position.equals(other.position)\n            && equals(this.context.selectedSuggestionInfo, other.context.selectedSuggestionInfo, (v1, v2) => v1.equals(v2))\n            && (other.context.triggerKind === InlineCompletionTriggerKind.Automatic\n                || this.context.triggerKind === InlineCompletionTriggerKind.Explicit)\n            && this.versionId === other.versionId;\n    }\n}\nfunction equals(v1, v2, equals) {\n    if (!v1 || !v2) {\n        return v1 === v2;\n    }\n    return equals(v1, v2);\n}\nclass UpdateOperation {\n    constructor(request, cancellationTokenSource, promise) {\n        this.request = request;\n        this.cancellationTokenSource = cancellationTokenSource;\n        this.promise = promise;\n    }\n    dispose() {\n        this.cancellationTokenSource.cancel();\n    }\n}\nexport class UpToDateInlineCompletions {\n    get inlineCompletions() { return this._inlineCompletions; }\n    constructor(inlineCompletionProviderResult, request, textModel, versionId) {\n        this.inlineCompletionProviderResult = inlineCompletionProviderResult;\n        this.request = request;\n        this.textModel = textModel;\n        this.versionId = versionId;\n        this._refCount = 1;\n        this._prependedInlineCompletionItems = [];\n        this._rangeVersionIdValue = 0;\n        this._rangeVersionId = derived('ranges', reader => {\n            this.versionId.read(reader);\n            let changed = false;\n            for (const i of this._inlineCompletions) {\n                changed = changed || i._updateRange(this.textModel);\n            }\n            if (changed) {\n                this._rangeVersionIdValue++;\n            }\n            return this._rangeVersionIdValue;\n        });\n        const ids = textModel.deltaDecorations([], inlineCompletionProviderResult.completions.map(i => ({\n            range: i.range,\n            options: {\n                description: 'inline-completion-tracking-range'\n            },\n        })));\n        this._inlineCompletions = inlineCompletionProviderResult.completions.map((i, index) => new InlineCompletionWithUpdatedRange(i, ids[index], this._rangeVersionId));\n    }\n    clone() {\n        this._refCount++;\n        return this;\n    }\n    dispose() {\n        this._refCount--;\n        if (this._refCount === 0) {\n            setTimeout(() => {\n                // To fix https://github.com/microsoft/vscode/issues/188348\n                if (!this.textModel.isDisposed()) {\n                    // This is just cleanup. It's ok if it happens with a delay.\n                    this.textModel.deltaDecorations(this._inlineCompletions.map(i => i.decorationId), []);\n                }\n            }, 0);\n            this.inlineCompletionProviderResult.dispose();\n            for (const i of this._prependedInlineCompletionItems) {\n                i.source.removeRef();\n            }\n        }\n    }\n    prepend(inlineCompletion, range, addRefToSource) {\n        if (addRefToSource) {\n            inlineCompletion.source.addRef();\n        }\n        const id = this.textModel.deltaDecorations([], [{\n                range,\n                options: {\n                    description: 'inline-completion-tracking-range'\n                },\n            }])[0];\n        this._inlineCompletions.unshift(new InlineCompletionWithUpdatedRange(inlineCompletion, id, this._rangeVersionId, range));\n        this._prependedInlineCompletionItems.push(inlineCompletion);\n    }\n}\nexport class InlineCompletionWithUpdatedRange {\n    get forwardStable() {\n        var _a;\n        return (_a = this.inlineCompletion.source.inlineCompletions.enableForwardStability) !== null && _a !== void 0 ? _a : false;\n    }\n    constructor(inlineCompletion, decorationId, rangeVersion, initialRange) {\n        this.inlineCompletion = inlineCompletion;\n        this.decorationId = decorationId;\n        this.rangeVersion = rangeVersion;\n        this.semanticId = JSON.stringify([\n            this.inlineCompletion.filterText,\n            this.inlineCompletion.insertText,\n            this.inlineCompletion.range.getStartPosition().toString()\n        ]);\n        this._isValid = true;\n        this._updatedRange = initialRange !== null && initialRange !== void 0 ? initialRange : inlineCompletion.range;\n    }\n    toInlineCompletion(reader) {\n        return this.inlineCompletion.withRange(this._getUpdatedRange(reader));\n    }\n    toSingleTextEdit(reader) {\n        return new SingleTextEdit(this._getUpdatedRange(reader), this.inlineCompletion.insertText);\n    }\n    isVisible(model, cursorPosition, reader) {\n        const minimizedReplacement = this._toFilterTextReplacement(reader).removeCommonPrefix(model);\n        if (!this._isValid\n            || !this.inlineCompletion.range.getStartPosition().equals(this._getUpdatedRange(reader).getStartPosition())\n            || cursorPosition.lineNumber !== minimizedReplacement.range.startLineNumber) {\n            return false;\n        }\n        const originalValue = model.getValueInRange(minimizedReplacement.range, 1 /* EndOfLinePreference.LF */).toLowerCase();\n        const filterText = minimizedReplacement.text.toLowerCase();\n        const cursorPosIndex = Math.max(0, cursorPosition.column - minimizedReplacement.range.startColumn);\n        let filterTextBefore = filterText.substring(0, cursorPosIndex);\n        let filterTextAfter = filterText.substring(cursorPosIndex);\n        let originalValueBefore = originalValue.substring(0, cursorPosIndex);\n        let originalValueAfter = originalValue.substring(cursorPosIndex);\n        const originalValueIndent = model.getLineIndentColumn(minimizedReplacement.range.startLineNumber);\n        if (minimizedReplacement.range.startColumn <= originalValueIndent) {\n            // Remove indentation\n            originalValueBefore = originalValueBefore.trimStart();\n            if (originalValueBefore.length === 0) {\n                originalValueAfter = originalValueAfter.trimStart();\n            }\n            filterTextBefore = filterTextBefore.trimStart();\n            if (filterTextBefore.length === 0) {\n                filterTextAfter = filterTextAfter.trimStart();\n            }\n        }\n        return filterTextBefore.startsWith(originalValueBefore)\n            && !!matchesSubString(originalValueAfter, filterTextAfter);\n    }\n    canBeReused(model, position) {\n        const result = this._isValid\n            && this._getUpdatedRange(undefined).containsPosition(position)\n            && this.isVisible(model, position, undefined)\n            && !this._isSmallerThanOriginal(undefined);\n        return result;\n    }\n    _toFilterTextReplacement(reader) {\n        return new SingleTextEdit(this._getUpdatedRange(reader), this.inlineCompletion.filterText);\n    }\n    _isSmallerThanOriginal(reader) {\n        return length(this._getUpdatedRange(reader)).isBefore(length(this.inlineCompletion.range));\n    }\n    _getUpdatedRange(reader) {\n        this.rangeVersion.read(reader); // This makes sure all the ranges are updated.\n        return this._updatedRange;\n    }\n    _updateRange(textModel) {\n        const range = textModel.getDecorationRange(this.decorationId);\n        if (!range) {\n            // A setValue call might flush all decorations.\n            this._isValid = false;\n            return true;\n        }\n        if (!this._updatedRange.equalsRange(range)) {\n            this._updatedRange = range;\n            return true;\n        }\n        return false;\n    }\n}\nfunction length(range) {\n    if (range.startLineNumber === range.endLineNumber) {\n        return new Position(1, 1 + range.endColumn - range.startColumn);\n    }\n    else {\n        return new Position(1 + range.endLineNumber - range.startLineNumber, range.endColumn);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { mapFind } from '../../../../base/common/arrays.js';\nimport { BugIndicatingError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, derived, keepAlive, observableSignal, observableValue, transaction } from '../../../../base/common/observable.js';\nimport { subtransaction } from '../../../../base/common/observableImpl/base.js';\nimport { derivedHandleChanges } from '../../../../base/common/observableImpl/derived.js';\nimport { isDefined } from '../../../../base/common/types.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { GhostText } from './ghostText.js';\nimport { InlineCompletionsSource } from './inlineCompletionsSource.js';\nimport { addPositions, lengthOfText } from './utils.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nexport var VersionIdChangeReason;\n(function (VersionIdChangeReason) {\n    VersionIdChangeReason[VersionIdChangeReason[\"Undo\"] = 0] = \"Undo\";\n    VersionIdChangeReason[VersionIdChangeReason[\"Redo\"] = 1] = \"Redo\";\n    VersionIdChangeReason[VersionIdChangeReason[\"AcceptWord\"] = 2] = \"AcceptWord\";\n    VersionIdChangeReason[VersionIdChangeReason[\"Other\"] = 3] = \"Other\";\n})(VersionIdChangeReason || (VersionIdChangeReason = {}));\nlet InlineCompletionsModel = class InlineCompletionsModel extends Disposable {\n    get isAcceptingPartially() { return this._isAcceptingPartially; }\n    constructor(textModel, selectedSuggestItem, cursorPosition, textModelVersionId, _debounceValue, _suggestPreviewEnabled, _suggestPreviewMode, _inlineSuggestMode, _enabled, _instantiationService, _commandService, _languageConfigurationService) {\n        super();\n        this.textModel = textModel;\n        this.selectedSuggestItem = selectedSuggestItem;\n        this.cursorPosition = cursorPosition;\n        this.textModelVersionId = textModelVersionId;\n        this._debounceValue = _debounceValue;\n        this._suggestPreviewEnabled = _suggestPreviewEnabled;\n        this._suggestPreviewMode = _suggestPreviewMode;\n        this._inlineSuggestMode = _inlineSuggestMode;\n        this._enabled = _enabled;\n        this._instantiationService = _instantiationService;\n        this._commandService = _commandService;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._source = this._register(this._instantiationService.createInstance(InlineCompletionsSource, this.textModel, this.textModelVersionId, this._debounceValue));\n        this._isActive = observableValue('isActive', false);\n        this._forceUpdate = observableSignal('forceUpdate');\n        // We use a semantic id to keep the same inline completion selected even if the provider reorders the completions.\n        this._selectedInlineCompletionId = observableValue('selectedInlineCompletionId', undefined);\n        this._isAcceptingPartially = false;\n        this._preserveCurrentCompletionReasons = new Set([\n            VersionIdChangeReason.Redo,\n            VersionIdChangeReason.Undo,\n            VersionIdChangeReason.AcceptWord,\n        ]);\n        this._fetchInlineCompletions = derivedHandleChanges('fetch inline completions', {\n            createEmptyChangeSummary: () => ({\n                preserveCurrentCompletion: false,\n                inlineCompletionTriggerKind: InlineCompletionTriggerKind.Automatic\n            }),\n            handleChange: (ctx, changeSummary) => {\n                if (ctx.didChange(this.textModelVersionId) && this._preserveCurrentCompletionReasons.has(ctx.change)) {\n                    changeSummary.preserveCurrentCompletion = true;\n                }\n                else if (ctx.didChange(this._forceUpdate)) {\n                    changeSummary.inlineCompletionTriggerKind = ctx.change;\n                }\n                return true;\n            },\n        }, (reader, changeSummary) => {\n            this._forceUpdate.read(reader);\n            const shouldUpdate = (this._enabled.read(reader) && this.selectedSuggestItem.read(reader)) || this._isActive.read(reader);\n            if (!shouldUpdate) {\n                this._source.cancelUpdate();\n                return undefined;\n            }\n            this.textModelVersionId.read(reader); // Refetch on text change\n            const itemToPreserveCandidate = this.selectedInlineCompletion.get();\n            const itemToPreserve = changeSummary.preserveCurrentCompletion || (itemToPreserveCandidate === null || itemToPreserveCandidate === void 0 ? void 0 : itemToPreserveCandidate.forwardStable)\n                ? itemToPreserveCandidate : undefined;\n            const suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.get();\n            const suggestItem = this.selectedSuggestItem.read(reader);\n            if (suggestWidgetInlineCompletions && !suggestItem) {\n                const inlineCompletions = this._source.inlineCompletions.get();\n                transaction(tx => {\n                    /** @description Seed inline completions with (newer) suggest widget inline completions */\n                    if (inlineCompletions && suggestWidgetInlineCompletions.request.versionId > inlineCompletions.request.versionId) {\n                        this._source.inlineCompletions.set(suggestWidgetInlineCompletions.clone(), tx);\n                    }\n                    this._source.clearSuggestWidgetInlineCompletions(tx);\n                });\n            }\n            const cursorPosition = this.cursorPosition.read(reader);\n            const context = {\n                triggerKind: changeSummary.inlineCompletionTriggerKind,\n                selectedSuggestionInfo: suggestItem === null || suggestItem === void 0 ? void 0 : suggestItem.toSelectedSuggestionInfo(),\n            };\n            return this._source.fetch(cursorPosition, context, itemToPreserve);\n        });\n        this._filteredInlineCompletionItems = derived('filteredInlineCompletionItems', (reader) => {\n            const c = this._source.inlineCompletions.read(reader);\n            if (!c) {\n                return [];\n            }\n            const cursorPosition = this.cursorPosition.read(reader);\n            const filteredCompletions = c.inlineCompletions.filter(c => c.isVisible(this.textModel, cursorPosition, reader));\n            return filteredCompletions;\n        });\n        this.selectedInlineCompletionIndex = derived('selectedCachedCompletionIndex', (reader) => {\n            const selectedInlineCompletionId = this._selectedInlineCompletionId.read(reader);\n            const filteredCompletions = this._filteredInlineCompletionItems.read(reader);\n            const idx = this._selectedInlineCompletionId === undefined ? -1\n                : filteredCompletions.findIndex(v => v.semanticId === selectedInlineCompletionId);\n            if (idx === -1) {\n                // Reset the selection so that the selection does not jump back when it appears again\n                this._selectedInlineCompletionId.set(undefined, undefined);\n                return 0;\n            }\n            return idx;\n        });\n        this.selectedInlineCompletion = derived('selectedCachedCompletion', (reader) => {\n            const filteredCompletions = this._filteredInlineCompletionItems.read(reader);\n            const idx = this.selectedInlineCompletionIndex.read(reader);\n            return filteredCompletions[idx];\n        });\n        this.lastTriggerKind = this._source.inlineCompletions.map(v => /** @description lastTriggerKind */ v === null || v === void 0 ? void 0 : v.request.context.triggerKind);\n        this.inlineCompletionsCount = derived('selectedInlineCompletionsCount', reader => {\n            if (this.lastTriggerKind.read(reader) === InlineCompletionTriggerKind.Explicit) {\n                return this._filteredInlineCompletionItems.read(reader).length;\n            }\n            else {\n                return undefined;\n            }\n        });\n        this.state = derived('ghostTextAndCompletion', (reader) => {\n            var _a;\n            const model = this.textModel;\n            const suggestItem = this.selectedSuggestItem.read(reader);\n            if (suggestItem) {\n                const suggestWidgetInlineCompletions = this._source.suggestWidgetInlineCompletions.read(reader);\n                const candidateInlineCompletions = suggestWidgetInlineCompletions\n                    ? suggestWidgetInlineCompletions.inlineCompletions\n                    : [this.selectedInlineCompletion.read(reader)].filter(isDefined);\n                const suggestCompletion = suggestItem.toSingleTextEdit().removeCommonPrefix(model);\n                const augmentedCompletion = mapFind(candidateInlineCompletions, completion => {\n                    let r = completion.toSingleTextEdit(reader);\n                    r = r.removeCommonPrefix(model, Range.fromPositions(r.range.getStartPosition(), suggestItem.range.getEndPosition()));\n                    return r.augments(suggestCompletion) ? { edit: r, completion } : undefined;\n                });\n                const isSuggestionPreviewEnabled = this._suggestPreviewEnabled.read(reader);\n                if (!isSuggestionPreviewEnabled && !augmentedCompletion) {\n                    return undefined;\n                }\n                const edit = (_a = augmentedCompletion === null || augmentedCompletion === void 0 ? void 0 : augmentedCompletion.edit) !== null && _a !== void 0 ? _a : suggestCompletion;\n                const editPreviewLength = augmentedCompletion ? augmentedCompletion.edit.text.length - suggestCompletion.text.length : 0;\n                const mode = this._suggestPreviewMode.read(reader);\n                const cursor = this.cursorPosition.read(reader);\n                const newGhostText = edit.computeGhostText(model, mode, cursor, editPreviewLength);\n                // Show an invisible ghost text to reserve space\n                const ghostText = newGhostText !== null && newGhostText !== void 0 ? newGhostText : new GhostText(edit.range.endLineNumber, []);\n                return { ghostText, inlineCompletion: augmentedCompletion === null || augmentedCompletion === void 0 ? void 0 : augmentedCompletion.completion, suggestItem };\n            }\n            else {\n                if (!this._isActive.read(reader)) {\n                    return undefined;\n                }\n                const item = this.selectedInlineCompletion.read(reader);\n                if (!item) {\n                    return undefined;\n                }\n                const replacement = item.toSingleTextEdit(reader);\n                const mode = this._inlineSuggestMode.read(reader);\n                const cursor = this.cursorPosition.read(reader);\n                const ghostText = replacement.computeGhostText(model, mode, cursor);\n                return ghostText ? { ghostText, inlineCompletion: item, suggestItem: undefined } : undefined;\n            }\n        });\n        this.ghostText = derived('ghostText', (reader) => {\n            const v = this.state.read(reader);\n            if (!v) {\n                return undefined;\n            }\n            return v.ghostText;\n        });\n        this._register(keepAlive(this._fetchInlineCompletions, true));\n        let lastItem = undefined;\n        this._register(autorun('call handleItemDidShow', reader => {\n            var _a, _b;\n            const item = this.state.read(reader);\n            const completion = item === null || item === void 0 ? void 0 : item.inlineCompletion;\n            if ((completion === null || completion === void 0 ? void 0 : completion.semanticId) !== (lastItem === null || lastItem === void 0 ? void 0 : lastItem.semanticId)) {\n                lastItem = completion;\n                if (completion) {\n                    const i = completion.inlineCompletion;\n                    const src = i.source;\n                    (_b = (_a = src.provider).handleItemDidShow) === null || _b === void 0 ? void 0 : _b.call(_a, src.inlineCompletions, i.sourceInlineCompletion, i.insertText);\n                }\n            }\n        }));\n    }\n    trigger(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this._isActive.set(true, tx);\n            yield this._fetchInlineCompletions.get();\n        });\n    }\n    triggerExplicitly(tx) {\n        return __awaiter(this, void 0, void 0, function* () {\n            subtransaction(tx, tx => {\n                this._isActive.set(true, tx);\n                this._forceUpdate.trigger(tx, InlineCompletionTriggerKind.Explicit);\n            });\n            yield this._fetchInlineCompletions.get();\n        });\n    }\n    stop(tx) {\n        subtransaction(tx, tx => {\n            this._isActive.set(false, tx);\n            this._source.clear(tx);\n        });\n    }\n    _deltaSelectedInlineCompletionIndex(delta) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.triggerExplicitly();\n            const completions = this._filteredInlineCompletionItems.get() || [];\n            if (completions.length > 0) {\n                const newIdx = (this.selectedInlineCompletionIndex.get() + delta + completions.length) % completions.length;\n                this._selectedInlineCompletionId.set(completions[newIdx].semanticId, undefined);\n            }\n            else {\n                this._selectedInlineCompletionId.set(undefined, undefined);\n            }\n        });\n    }\n    next() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._deltaSelectedInlineCompletionIndex(1);\n        });\n    }\n    previous() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._deltaSelectedInlineCompletionIndex(-1);\n        });\n    }\n    accept(editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (editor.getModel() !== this.textModel) {\n                throw new BugIndicatingError();\n            }\n            const state = this.state.get();\n            if (!state || state.ghostText.isEmpty() || !state.inlineCompletion) {\n                return;\n            }\n            const completion = state.inlineCompletion.toInlineCompletion(undefined);\n            editor.pushUndoStop();\n            if (completion.snippetInfo) {\n                editor.executeEdits('inlineSuggestion.accept', [\n                    EditOperation.replaceMove(completion.range, ''),\n                    ...completion.additionalTextEdits\n                ]);\n                editor.setPosition(completion.snippetInfo.range.getStartPosition());\n                (_a = SnippetController2.get(editor)) === null || _a === void 0 ? void 0 : _a.insert(completion.snippetInfo.snippet, { undoStopBefore: false });\n            }\n            else {\n                editor.executeEdits('inlineSuggestion.accept', [\n                    EditOperation.replaceMove(completion.range, completion.insertText),\n                    ...completion.additionalTextEdits\n                ]);\n            }\n            if (completion.command) {\n                // Make sure the completion list will not be disposed.\n                completion.source.addRef();\n            }\n            // Reset before invoking the command, since the command might cause a follow up trigger.\n            transaction(tx => {\n                this._source.clear(tx);\n                // Potentially, isActive will get set back to true by the typing or accept inline suggest event\n                // if automatic inline suggestions are enabled.\n                this._isActive.set(false, tx);\n            });\n            if (completion.command) {\n                yield this._commandService\n                    .executeCommand(completion.command.id, ...(completion.command.arguments || []))\n                    .then(undefined, onUnexpectedExternalError);\n                completion.source.removeRef();\n            }\n        });\n    }\n    acceptNextWord(editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._acceptNext(editor, (pos, text) => {\n                const langId = this.textModel.getLanguageIdAtPosition(pos.lineNumber, pos.column);\n                const config = this._languageConfigurationService.getLanguageConfiguration(langId);\n                const wordRegExp = new RegExp(config.wordDefinition.source, config.wordDefinition.flags.replace('g', ''));\n                const m1 = text.match(wordRegExp);\n                let acceptUntilIndexExclusive = 0;\n                if (m1 && m1.index !== undefined) {\n                    if (m1.index === 0) {\n                        acceptUntilIndexExclusive = m1[0].length;\n                    }\n                    else {\n                        acceptUntilIndexExclusive = m1.index;\n                    }\n                }\n                else {\n                    acceptUntilIndexExclusive = text.length;\n                }\n                const wsRegExp = /\\s+/g;\n                const m2 = wsRegExp.exec(text);\n                if (m2 && m2.index !== undefined) {\n                    if (m2.index + m2[0].length < acceptUntilIndexExclusive) {\n                        acceptUntilIndexExclusive = m2.index + m2[0].length;\n                    }\n                }\n                return acceptUntilIndexExclusive;\n            });\n        });\n    }\n    acceptNextLine(editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this._acceptNext(editor, (pos, text) => {\n                const m = text.match(/\\n/);\n                if (m && m.index !== undefined) {\n                    return m.index + 1;\n                }\n                return text.length;\n            });\n        });\n    }\n    _acceptNext(editor, getAcceptUntilIndex) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (editor.getModel() !== this.textModel) {\n                throw new BugIndicatingError();\n            }\n            const state = this.state.get();\n            if (!state || state.ghostText.isEmpty() || !state.inlineCompletion) {\n                return;\n            }\n            const ghostText = state.ghostText;\n            const completion = state.inlineCompletion.toInlineCompletion(undefined);\n            if (completion.snippetInfo || completion.filterText !== completion.insertText) {\n                // not in WYSIWYG mode, partial commit might change completion, thus it is not supported\n                yield this.accept(editor);\n                return;\n            }\n            const firstPart = ghostText.parts[0];\n            const position = new Position(ghostText.lineNumber, firstPart.column);\n            const line = firstPart.lines.join('\\n');\n            const acceptUntilIndexExclusive = getAcceptUntilIndex(position, line);\n            if (acceptUntilIndexExclusive === line.length && ghostText.parts.length === 1) {\n                this.accept(editor);\n                return;\n            }\n            const partialText = line.substring(0, acceptUntilIndexExclusive);\n            this._isAcceptingPartially = true;\n            try {\n                editor.pushUndoStop();\n                editor.executeEdits('inlineSuggestion.accept', [\n                    EditOperation.replace(Range.fromPositions(position), partialText),\n                ]);\n                const length = lengthOfText(partialText);\n                editor.setPosition(addPositions(position, length));\n            }\n            finally {\n                this._isAcceptingPartially = false;\n            }\n            if (completion.source.provider.handlePartialAccept) {\n                const acceptedRange = Range.fromPositions(completion.range.getStartPosition(), addPositions(position, lengthOfText(partialText)));\n                // This assumes that the inline completion and the model use the same EOL style.\n                const text = editor.getModel().getValueInRange(acceptedRange, 1 /* EndOfLinePreference.LF */);\n                completion.source.provider.handlePartialAccept(completion.source.inlineCompletions, completion.sourceInlineCompletion, text.length);\n            }\n        });\n    }\n};\nInlineCompletionsModel = __decorate([\n    __param(9, IInstantiationService),\n    __param(10, ICommandService),\n    __param(11, ILanguageConfigurationService)\n], InlineCompletionsModel);\nexport { InlineCompletionsModel };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { SelectedSuggestionInfo } from '../../../common/languages.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { SnippetSession } from '../../snippet/browser/snippetSession.js';\nimport { SuggestController } from '../../suggest/browser/suggestController.js';\nimport { observableValue, transaction } from '../../../../base/common/observable.js';\nimport { SingleTextEdit } from './singleTextEdit.js';\nimport { compareBy, findMaxBy, numberComparator } from '../../../../base/common/arrays.js';\nexport class SuggestWidgetAdaptor extends Disposable {\n    get selectedItem() {\n        return this._selectedItem;\n    }\n    constructor(editor, suggestControllerPreselector, checkModelVersion) {\n        super();\n        this.editor = editor;\n        this.suggestControllerPreselector = suggestControllerPreselector;\n        this.checkModelVersion = checkModelVersion;\n        this.isSuggestWidgetVisible = false;\n        this.isShiftKeyPressed = false;\n        this._isActive = false;\n        this._currentSuggestItemInfo = undefined;\n        this._selectedItem = observableValue('suggestWidgetInlineCompletionProvider.selectedItem', undefined);\n        // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\n        this._register(editor.onKeyDown(e => {\n            if (e.shiftKey && !this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = true;\n                this.update(this._isActive);\n            }\n        }));\n        this._register(editor.onKeyUp(e => {\n            if (e.shiftKey && this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = false;\n                this.update(this._isActive);\n            }\n        }));\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            this._register(suggestController.registerSelector({\n                priority: 100,\n                select: (model, pos, suggestItems) => {\n                    var _a;\n                    transaction(tx => this.checkModelVersion(tx));\n                    const textModel = this.editor.getModel();\n                    if (!textModel) {\n                        // Should not happen\n                        return -1;\n                    }\n                    const itemToPreselect = (_a = this.suggestControllerPreselector()) === null || _a === void 0 ? void 0 : _a.removeCommonPrefix(textModel);\n                    if (!itemToPreselect) {\n                        return -1;\n                    }\n                    const position = Position.lift(pos);\n                    const candidates = suggestItems\n                        .map((suggestItem, index) => {\n                        const suggestItemInfo = SuggestItemInfo.fromSuggestion(suggestController, textModel, position, suggestItem, this.isShiftKeyPressed);\n                        const suggestItemTextEdit = suggestItemInfo.toSingleTextEdit().removeCommonPrefix(textModel);\n                        const valid = itemToPreselect.augments(suggestItemTextEdit);\n                        return { index, valid, prefixLength: suggestItemTextEdit.text.length, suggestItem };\n                    })\n                        .filter(item => item && item.valid && item.prefixLength > 0);\n                    const result = findMaxBy(candidates, compareBy(s => s.prefixLength, numberComparator));\n                    return result ? result.index : -1;\n                }\n            }));\n            let isBoundToSuggestWidget = false;\n            const bindToSuggestWidget = () => {\n                if (isBoundToSuggestWidget) {\n                    return;\n                }\n                isBoundToSuggestWidget = true;\n                this._register(suggestController.widget.value.onDidShow(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n                this._register(suggestController.widget.value.onDidHide(() => {\n                    this.isSuggestWidgetVisible = false;\n                    this.update(false);\n                }));\n                this._register(suggestController.widget.value.onDidFocus(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n            };\n            this._register(Event.once(suggestController.model.onDidTrigger)(e => {\n                bindToSuggestWidget();\n            }));\n        }\n        this.update(this._isActive);\n    }\n    update(newActive) {\n        const newInlineCompletion = this.getSuggestItemInfo();\n        if (this._isActive !== newActive || !suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\n            this._isActive = newActive;\n            this._currentSuggestItemInfo = newInlineCompletion;\n            transaction(tx => {\n                this.checkModelVersion(tx);\n                this._selectedItem.set(this._isActive ? this._currentSuggestItemInfo : undefined, tx);\n            });\n        }\n    }\n    getSuggestItemInfo() {\n        const suggestController = SuggestController.get(this.editor);\n        if (!suggestController || !this.isSuggestWidgetVisible) {\n            return undefined;\n        }\n        const focusedItem = suggestController.widget.value.getFocusedItem();\n        const position = this.editor.getPosition();\n        const model = this.editor.getModel();\n        if (!focusedItem || !position || !model) {\n            return undefined;\n        }\n        return SuggestItemInfo.fromSuggestion(suggestController, model, position, focusedItem.item, this.isShiftKeyPressed);\n    }\n    stopForceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        suggestController === null || suggestController === void 0 ? void 0 : suggestController.stopForceRenderingAbove();\n    }\n    forceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        suggestController === null || suggestController === void 0 ? void 0 : suggestController.forceRenderingAbove();\n    }\n}\nexport class SuggestItemInfo {\n    static fromSuggestion(suggestController, model, position, item, toggleMode) {\n        let { insertText } = item.completion;\n        let isSnippetText = false;\n        if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */) {\n            const snippet = new SnippetParser().parse(insertText);\n            if (snippet.children.length < 100) {\n                // Adjust whitespace is expensive.\n                SnippetSession.adjustWhitespace(model, position, true, snippet);\n            }\n            insertText = snippet.toString();\n            isSnippetText = true;\n        }\n        const info = suggestController.getOverwriteInfo(item, toggleMode);\n        return new SuggestItemInfo(Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0))), insertText, item.completion.kind, isSnippetText);\n    }\n    constructor(range, insertText, completionItemKind, isSnippetText) {\n        this.range = range;\n        this.insertText = insertText;\n        this.completionItemKind = completionItemKind;\n        this.isSnippetText = isSnippetText;\n    }\n    equals(other) {\n        return this.range.equalsRange(other.range)\n            && this.insertText === other.insertText\n            && this.completionItemKind === other.completionItemKind\n            && this.isSnippetText === other.isSnippetText;\n    }\n    toSelectedSuggestionInfo() {\n        return new SelectedSuggestionInfo(this.range, this.insertText, this.completionItemKind, this.isSnippetText);\n    }\n    toSingleTextEdit() {\n        return new SingleTextEdit(this.range, this.insertText);\n    }\n}\nfunction suggestItemInfoEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    return a.equals(b);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, constObservable, observableFromEvent, observableValue } from '../../../../base/common/observable.js';\nimport { disposableObservableValue, transaction } from '../../../../base/common/observableImpl/base.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { inlineSuggestCommitId } from './commandIds.js';\nimport { GhostTextWidget } from './ghostTextWidget.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsHintsWidget, InlineSuggestionHintsContentWidget } from './inlineCompletionsHintsWidget.js';\nimport { InlineCompletionsModel, VersionIdChangeReason } from './inlineCompletionsModel.js';\nimport { SuggestWidgetAdaptor } from './suggestWidgetInlineCompletionProvider.js';\nimport { AudioCue, IAudioCueService } from '../../../../platform/audioCues/browser/audioCueService.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nlet InlineCompletionsController = class InlineCompletionsController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(InlineCompletionsController.ID);\n    }\n    constructor(editor, instantiationService, contextKeyService, configurationService, commandService, debounceService, languageFeaturesService, audioCueService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.configurationService = configurationService;\n        this.commandService = commandService;\n        this.debounceService = debounceService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.audioCueService = audioCueService;\n        this.model = disposableObservableValue('inlineCompletionModel', undefined);\n        this.textModelVersionId = observableValue('textModelVersionId', -1);\n        this.cursorPosition = observableValue('cursorPosition', new Position(1, 1));\n        this.suggestWidgetAdaptor = this._register(new SuggestWidgetAdaptor(this.editor, () => { var _a, _b; return (_b = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.selectedInlineCompletion.get()) === null || _b === void 0 ? void 0 : _b.toSingleTextEdit(undefined); }, (tx) => this.updateObservables(tx, VersionIdChangeReason.Other)));\n        this._enabled = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(61 /* EditorOption.inlineSuggest */).enabled);\n        this.ghostTextWidget = this._register(this.instantiationService.createInstance(GhostTextWidget, this.editor, {\n            ghostText: this.model.map((v, reader) => v === null || v === void 0 ? void 0 : v.ghostText.read(reader)),\n            minReservedLineCount: constObservable(0),\n            targetTextModel: this.model.map(v => v === null || v === void 0 ? void 0 : v.textModel),\n        }));\n        this._debounceValue = this.debounceService.for(this.languageFeaturesService.inlineCompletionsProvider, 'InlineCompletionsDebounce', { min: 50, max: 50 });\n        this._register(new InlineCompletionContextKeys(this.contextKeyService, this.model));\n        this._register(Event.runAndSubscribe(editor.onDidChangeModel, () => transaction(tx => {\n            /** @description onDidChangeModel */\n            this.model.set(undefined, tx);\n            this.updateObservables(tx, VersionIdChangeReason.Other);\n            const textModel = editor.getModel();\n            if (textModel) {\n                const model = instantiationService.createInstance(InlineCompletionsModel, textModel, this.suggestWidgetAdaptor.selectedItem, this.cursorPosition, this.textModelVersionId, this._debounceValue, observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(116 /* EditorOption.suggest */).preview), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(116 /* EditorOption.suggest */).previewMode), observableFromEvent(editor.onDidChangeConfiguration, () => editor.getOption(61 /* EditorOption.inlineSuggest */).mode), this._enabled);\n                this.model.set(model, tx);\n            }\n        })));\n        const getReason = (e) => {\n            var _a;\n            if (e.isUndoing) {\n                return VersionIdChangeReason.Undo;\n            }\n            if (e.isRedoing) {\n                return VersionIdChangeReason.Redo;\n            }\n            if ((_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.isAcceptingPartially) {\n                return VersionIdChangeReason.AcceptWord;\n            }\n            return VersionIdChangeReason.Other;\n        };\n        this._register(editor.onDidChangeModelContent((e) => transaction(tx => \n        /** @description onDidChangeModelContent */\n        this.updateObservables(tx, getReason(e)))));\n        this._register(editor.onDidChangeCursorPosition(e => transaction(tx => {\n            var _a;\n            /** @description onDidChangeCursorPosition */\n            this.updateObservables(tx, VersionIdChangeReason.Other);\n            if (e.reason === 3 /* CursorChangeReason.Explicit */) {\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n            }\n        })));\n        this._register(editor.onDidType(() => transaction(tx => {\n            var _a;\n            /** @description onDidType */\n            this.updateObservables(tx, VersionIdChangeReason.Other);\n            if (this._enabled.get()) {\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\n            }\n        })));\n        this._register(this.commandService.onDidExecuteCommand((e) => {\n            // These commands don't trigger onDidType.\n            const commands = new Set([\n                CoreEditingCommands.Tab.id,\n                CoreEditingCommands.DeleteLeft.id,\n                CoreEditingCommands.DeleteRight.id,\n                inlineSuggestCommitId,\n                'acceptSelectedSuggestion',\n            ]);\n            if (commands.has(e.commandId) && editor.hasTextFocus() && this._enabled.get()) {\n                transaction(tx => {\n                    var _a;\n                    /** @description onDidExecuteCommand */\n                    (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.trigger(tx);\n                });\n            }\n        }));\n        this._register(this.editor.onDidBlurEditorWidget(() => {\n            // This is a hidden setting very useful for debugging\n            if (this.configurationService.getValue('editor.inlineSuggest.keepOnBlur') ||\n                editor.getOption(61 /* EditorOption.inlineSuggest */).keepOnBlur) {\n                return;\n            }\n            if (InlineSuggestionHintsContentWidget.dropDownVisible) {\n                return;\n            }\n            transaction(tx => {\n                var _a;\n                /** @description onDidBlurEditorWidget */\n                (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n            });\n        }));\n        this._register(autorun('forceRenderingAbove', reader => {\n            var _a;\n            const state = (_a = this.model.read(reader)) === null || _a === void 0 ? void 0 : _a.state.read(reader);\n            if (state === null || state === void 0 ? void 0 : state.suggestItem) {\n                if (state.ghostText.lineCount >= 2) {\n                    this.suggestWidgetAdaptor.forceRenderingAbove();\n                }\n            }\n            else {\n                this.suggestWidgetAdaptor.stopForceRenderingAbove();\n            }\n        }));\n        this._register(toDisposable(() => {\n            this.suggestWidgetAdaptor.stopForceRenderingAbove();\n        }));\n        let lastInlineCompletionId = undefined;\n        this._register(autorun('play audio cue & read suggestion', reader => {\n            const model = this.model.read(reader);\n            const state = model === null || model === void 0 ? void 0 : model.state.read(reader);\n            if (!model || !state || !state.inlineCompletion) {\n                lastInlineCompletionId = undefined;\n                return;\n            }\n            if (state.inlineCompletion.semanticId !== lastInlineCompletionId) {\n                lastInlineCompletionId = state.inlineCompletion.semanticId;\n                const lineText = model.textModel.getLineContent(state.ghostText.lineNumber);\n                this.audioCueService.playAudioCue(AudioCue.inlineSuggestion).then(() => {\n                    if (this.editor.getOption(7 /* EditorOption.screenReaderAnnounceInlineSuggestion */)) {\n                        alert(state.ghostText.renderForScreenReader(lineText));\n                    }\n                });\n            }\n        }));\n        this._register(new InlineCompletionsHintsWidget(this.editor, this.model, this.instantiationService));\n    }\n    /**\n     * Copies over the relevant state from the text model to observables.\n     * This solves all kind of eventing issues, as we make sure we always operate on the latest state,\n     * regardless of who calls into us.\n     */\n    updateObservables(tx, changeReason) {\n        var _a, _b;\n        const newModel = this.editor.getModel();\n        this.textModelVersionId.set((_a = newModel === null || newModel === void 0 ? void 0 : newModel.getVersionId()) !== null && _a !== void 0 ? _a : -1, tx, changeReason);\n        this.cursorPosition.set((_b = this.editor.getPosition()) !== null && _b !== void 0 ? _b : new Position(1, 1), tx);\n    }\n    shouldShowHoverAt(range) {\n        var _a;\n        const ghostText = (_a = this.model.get()) === null || _a === void 0 ? void 0 : _a.ghostText.get();\n        if (ghostText) {\n            return ghostText.parts.some(p => range.containsPosition(new Position(ghostText.lineNumber, p.column)));\n        }\n        return false;\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        return this.ghostTextWidget.ownsViewZone(viewZoneId);\n    }\n};\nInlineCompletionsController.ID = 'editor.contrib.inlineCompletionsController';\nInlineCompletionsController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IContextKeyService),\n    __param(3, IConfigurationService),\n    __param(4, ICommandService),\n    __param(5, ILanguageFeatureDebounceService),\n    __param(6, ILanguageFeaturesService),\n    __param(7, IAudioCueService)\n], InlineCompletionsController);\nexport { InlineCompletionsController };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { transaction } from '../../../../base/common/observable.js';\nimport { EditorAction } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { showNextInlineSuggestionActionId, showPreviousInlineSuggestionActionId, inlineSuggestCommitId } from './commandIds.js';\nimport { InlineCompletionContextKeys } from './inlineCompletionContextKeys.js';\nimport { InlineCompletionsController } from './inlineCompletionsController.js';\nimport { Context as SuggestContext } from '../../suggest/browser/suggest.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId, Action2 } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nexport class ShowNextInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: ShowNextInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showNext', \"Show Next Inline Suggestion\"),\n            alias: 'Show Next Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* KeyMod.Alt */ | 94 /* KeyCode.BracketRight */,\n            },\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.next();\n        });\n    }\n}\nShowNextInlineSuggestionAction.ID = showNextInlineSuggestionActionId;\nexport class ShowPreviousInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: ShowPreviousInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showPrevious', \"Show Previous Inline Suggestion\"),\n            alias: 'Show Previous Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* KeyMod.Alt */ | 92 /* KeyCode.BracketLeft */,\n            },\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.previous();\n        });\n    }\n}\nShowPreviousInlineSuggestionAction.ID = showPreviousInlineSuggestionActionId;\nexport class TriggerInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.trigger',\n            label: nls.localize('action.inlineSuggest.trigger', \"Trigger Inline Suggestion\"),\n            alias: 'Trigger Inline Suggestion',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.triggerExplicitly();\n        });\n    }\n}\nexport class AcceptNextWordOfInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.acceptNextWord',\n            label: nls.localize('action.inlineSuggest.acceptNextWord', \"Accept Next Word Of Inline Suggestion\"),\n            alias: 'Accept Next Word Of Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */ + 1,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 17 /* KeyCode.RightArrow */,\n                kbExpr: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            },\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('acceptWord', 'Accept Word'),\n                    group: 'primary',\n                    order: 2,\n                }],\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            yield ((_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.acceptNextWord(controller.editor));\n        });\n    }\n}\nexport class AcceptNextLineOfInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.acceptNextLine',\n            label: nls.localize('action.inlineSuggest.acceptNextLine', \"Accept Next Line Of Inline Suggestion\"),\n            alias: 'Accept Next Line Of Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, InlineCompletionContextKeys.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */ + 1,\n            },\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('acceptLine', 'Accept Line'),\n                    group: 'secondary',\n                    order: 2,\n                }],\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            yield ((_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.acceptNextLine(controller.editor));\n        });\n    }\n}\nexport class AcceptInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: inlineSuggestCommitId,\n            label: nls.localize('action.inlineSuggest.accept', \"Accept Inline Suggestion\"),\n            alias: 'Accept Inline Suggestion',\n            precondition: InlineCompletionContextKeys.inlineSuggestionVisible,\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('accept', \"Accept\"),\n                    group: 'primary',\n                    order: 1,\n                }],\n            kbOpts: {\n                primary: 2 /* KeyCode.Tab */,\n                weight: 200,\n                kbExpr: ContextKeyExpr.and(InlineCompletionContextKeys.inlineSuggestionVisible, EditorContextKeys.tabMovesFocus.toNegated(), InlineCompletionContextKeys.inlineSuggestionHasIndentationLessThanTabSize, SuggestContext.Visible.toNegated()),\n            }\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            if (controller) {\n                (_a = controller.model.get()) === null || _a === void 0 ? void 0 : _a.accept(controller.editor);\n                controller.editor.focus();\n            }\n        });\n    }\n}\nexport class HideInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: HideInlineCompletion.ID,\n            label: nls.localize('action.inlineSuggest.hide', \"Hide Inline Suggestion\"),\n            alias: 'Hide Inline Suggestion',\n            precondition: InlineCompletionContextKeys.inlineSuggestionVisible,\n            kbOpts: {\n                weight: 100,\n                primary: 9 /* KeyCode.Escape */,\n            }\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = InlineCompletionsController.get(editor);\n            transaction(tx => {\n                var _a;\n                (_a = controller === null || controller === void 0 ? void 0 : controller.model.get()) === null || _a === void 0 ? void 0 : _a.stop(tx);\n            });\n        });\n    }\n}\nHideInlineCompletion.ID = 'editor.action.inlineSuggest.hide';\nexport class ToggleAlwaysShowInlineSuggestionToolbar extends Action2 {\n    constructor() {\n        super({\n            id: ToggleAlwaysShowInlineSuggestionToolbar.ID,\n            title: nls.localize('action.inlineSuggest.alwaysShowToolbar', \"Always Show Toolbar\"),\n            f1: false,\n            precondition: undefined,\n            menu: [{\n                    id: MenuId.InlineSuggestionToolbar,\n                    group: 'secondary',\n                    order: 10,\n                }],\n            toggled: ContextKeyExpr.equals('config.editor.inlineSuggest.showToolbar', 'always')\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const configService = accessor.get(IConfigurationService);\n            const currentValue = configService.getValue('editor.inlineSuggest.showToolbar');\n            const newValue = currentValue === 'always' ? 'onHover' : 'always';\n            configService.updateValue('editor.inlineSuggest.showToolbar', newValue);\n        });\n    }\n}\nToggleAlwaysShowInlineSuggestionToolbar.ID = 'editor.action.inlineSuggest.toggleAlwaysShowToolbar';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { autorun, constObservable } from '../../../../base/common/observable.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { InlineCompletionsController } from './inlineCompletionsController.js';\nimport { InlineSuggestionHintsContentWidget } from './inlineCompletionsHintsWidget.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport * as nls from '../../../../nls.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nexport class InlineCompletionsHover {\n    constructor(owner, range, controller) {\n        this.owner = owner;\n        this.range = range;\n        this.controller = controller;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nlet InlineCompletionsHoverParticipant = class InlineCompletionsHoverParticipant {\n    constructor(_editor, _languageService, _openerService, accessibilityService, _instantiationService, _telemetryService) {\n        this._editor = _editor;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this.accessibilityService = accessibilityService;\n        this._instantiationService = _instantiationService;\n        this._telemetryService = _telemetryService;\n        this.hoverOrdinal = 4;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        const controller = InlineCompletionsController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        const target = mouseEvent.target;\n        if (target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */) {\n            // handle the case where the mouse is over the view zone\n            const viewZoneData = target.detail;\n            if (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) {\n                return new HoverForeignElementAnchor(1000, this, Range.fromPositions(this._editor.getModel().validatePosition(viewZoneData.positionBefore || viewZoneData.position)), mouseEvent.event.posx, mouseEvent.event.posy, false);\n            }\n        }\n        if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            // handle the case where the mouse is over the empty portion of a line following ghost text\n            if (controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n            }\n        }\n        if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            // handle the case where the mouse is directly over ghost text\n            const mightBeForeignElement = target.detail.mightBeForeignElement;\n            if (mightBeForeignElement && controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n            }\n        }\n        return null;\n    }\n    computeSync(anchor, lineDecorations) {\n        if (this._editor.getOption(61 /* EditorOption.inlineSuggest */).showToolbar === 'always') {\n            return [];\n        }\n        const controller = InlineCompletionsController.get(this._editor);\n        if (controller && controller.shouldShowHoverAt(anchor.range)) {\n            return [new InlineCompletionsHover(this, anchor.range, controller)];\n        }\n        return [];\n    }\n    renderHoverParts(context, hoverParts) {\n        const disposableStore = new DisposableStore();\n        const part = hoverParts[0];\n        this._telemetryService.publicLog2('inlineCompletionHover.shown');\n        if (this.accessibilityService.isScreenReaderOptimized() && !this._editor.getOption(7 /* EditorOption.screenReaderAnnounceInlineSuggestion */)) {\n            this.renderScreenReaderText(context, part, disposableStore);\n        }\n        const model = part.controller.model.get();\n        const w = this._instantiationService.createInstance(InlineSuggestionHintsContentWidget, this._editor, false, constObservable(null), model.selectedInlineCompletionIndex, model.inlineCompletionsCount, model.selectedInlineCompletion.map(v => { var _a; return (_a = v === null || v === void 0 ? void 0 : v.inlineCompletion.source.inlineCompletions.commands) !== null && _a !== void 0 ? _a : []; }));\n        context.fragment.appendChild(w.getDomNode());\n        model.triggerExplicitly();\n        disposableStore.add(w);\n        return disposableStore;\n    }\n    renderScreenReaderText(context, part, disposableStore) {\n        const $ = dom.$;\n        const markdownHoverElement = $('div.hover-row.markdown-hover');\n        const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents', { ['aria-live']: 'assertive' }));\n        const renderer = disposableStore.add(new MarkdownRenderer({ editor: this._editor }, this._languageService, this._openerService));\n        const render = (code) => {\n            disposableStore.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const inlineSuggestionAvailable = nls.localize('inlineSuggestionFollows', \"Suggestion:\");\n            const renderedContents = disposableStore.add(renderer.render(new MarkdownString().appendText(inlineSuggestionAvailable).appendCodeblock('text', code)));\n            hoverContentsElement.replaceChildren(renderedContents.element);\n        };\n        disposableStore.add(autorun('update hover', (reader) => {\n            var _a;\n            const ghostText = (_a = part.controller.model.read(reader)) === null || _a === void 0 ? void 0 : _a.ghostText.read(reader);\n            if (ghostText) {\n                const lineText = this._editor.getModel().getLineContent(ghostText.lineNumber);\n                render(ghostText.renderForScreenReader(lineText));\n            }\n            else {\n                dom.reset(hoverContentsElement);\n            }\n        }));\n        context.fragment.appendChild(markdownHoverElement);\n    }\n};\nInlineCompletionsHoverParticipant = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IAccessibilityService),\n    __param(4, IInstantiationService),\n    __param(5, ITelemetryService)\n], InlineCompletionsHoverParticipant);\nexport { InlineCompletionsHoverParticipant };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { TriggerInlineSuggestionAction, ShowNextInlineSuggestionAction, ShowPreviousInlineSuggestionAction, AcceptNextWordOfInlineCompletion, AcceptInlineCompletion, HideInlineCompletion, ToggleAlwaysShowInlineSuggestionToolbar, AcceptNextLineOfInlineCompletion } from './commands.js';\nimport { InlineCompletionsHoverParticipant } from './hoverParticipant.js';\nimport { InlineCompletionsController } from './inlineCompletionsController.js';\nimport { registerAction2 } from '../../../../platform/actions/common/actions.js';\nregisterEditorContribution(InlineCompletionsController.ID, InlineCompletionsController, 3 /* EditorContributionInstantiation.Eventually */);\nregisterEditorAction(TriggerInlineSuggestionAction);\nregisterEditorAction(ShowNextInlineSuggestionAction);\nregisterEditorAction(ShowPreviousInlineSuggestionAction);\nregisterEditorAction(AcceptNextWordOfInlineCompletion);\nregisterEditorAction(AcceptNextLineOfInlineCompletion);\nregisterEditorAction(AcceptInlineCompletion);\nregisterEditorAction(HideInlineCompletion);\nregisterAction2(ToggleAlwaysShowInlineSuggestionToolbar);\nHoverParticipantRegistry.register(InlineCompletionsHoverParticipant);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { h } from '../../../../base/browser/dom.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { KeybindingLabel, unthemedKeybindingLabelOptions } from '../../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { Action, Separator } from '../../../../base/common/actions.js';\nimport { equals } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Disposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { autorun, derived, observableFromEvent } from '../../../../base/common/observable.js';\nimport { autorunWithStore2 } from '../../../../base/common/observableImpl/autorun.js';\nimport { OS } from '../../../../base/common/platform.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './inlineCompletionsHintsWidget.css';\nimport { Position } from '../../../common/core/position.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { showPreviousInlineSuggestionActionId, showNextInlineSuggestionActionId } from './commandIds.js';\nimport { localize } from '../../../../nls.js';\nimport { createAndFillInActionBarActions, MenuEntryActionViewItem } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { WorkbenchToolBar } from '../../../../platform/actions/browser/toolbar.js';\nimport { IMenuService, MenuId, MenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nlet InlineCompletionsHintsWidget = class InlineCompletionsHintsWidget extends Disposable {\n    constructor(editor, model, instantiationService) {\n        super();\n        this.editor = editor;\n        this.model = model;\n        this.instantiationService = instantiationService;\n        this.alwaysShowToolbar = observableFromEvent(this.editor.onDidChangeConfiguration, () => this.editor.getOption(61 /* EditorOption.inlineSuggest */).showToolbar === 'always');\n        this.sessionPosition = undefined;\n        this.position = derived('position', reader => {\n            var _a, _b, _c;\n            const ghostText = (_a = this.model.read(reader)) === null || _a === void 0 ? void 0 : _a.ghostText.read(reader);\n            if (!this.alwaysShowToolbar.read(reader) || !ghostText || ghostText.parts.length === 0) {\n                this.sessionPosition = undefined;\n                return null;\n            }\n            const firstColumn = ghostText.parts[0].column;\n            if (this.sessionPosition && this.sessionPosition.lineNumber !== ghostText.lineNumber) {\n                this.sessionPosition = undefined;\n            }\n            const position = new Position(ghostText.lineNumber, Math.min(firstColumn, (_c = (_b = this.sessionPosition) === null || _b === void 0 ? void 0 : _b.column) !== null && _c !== void 0 ? _c : Number.MAX_SAFE_INTEGER));\n            this.sessionPosition = position;\n            return position;\n        });\n        this._register(autorunWithStore2('setup content widget', (reader, store) => {\n            const model = this.model.read(reader);\n            if (!model || !this.alwaysShowToolbar.read(reader)) {\n                return;\n            }\n            const contentWidget = store.add(this.instantiationService.createInstance(InlineSuggestionHintsContentWidget, this.editor, true, this.position, model.selectedInlineCompletionIndex, model.inlineCompletionsCount, model.selectedInlineCompletion.map(v => { var _a; return (_a = v === null || v === void 0 ? void 0 : v.inlineCompletion.source.inlineCompletions.commands) !== null && _a !== void 0 ? _a : []; })));\n            editor.addContentWidget(contentWidget);\n            store.add(toDisposable(() => editor.removeContentWidget(contentWidget)));\n            store.add(autorun('request explicit', reader => {\n                const position = this.position.read(reader);\n                if (!position) {\n                    return;\n                }\n                if (model.lastTriggerKind.read(reader) !== InlineCompletionTriggerKind.Explicit) {\n                    model.triggerExplicitly();\n                }\n            }));\n        }));\n    }\n};\nInlineCompletionsHintsWidget = __decorate([\n    __param(2, IInstantiationService)\n], InlineCompletionsHintsWidget);\nexport { InlineCompletionsHintsWidget };\nconst inlineSuggestionHintsNextIcon = registerIcon('inline-suggestion-hints-next', Codicon.chevronRight, localize('parameterHintsNextIcon', 'Icon for show next parameter hint.'));\nconst inlineSuggestionHintsPreviousIcon = registerIcon('inline-suggestion-hints-previous', Codicon.chevronLeft, localize('parameterHintsPreviousIcon', 'Icon for show previous parameter hint.'));\nlet InlineSuggestionHintsContentWidget = class InlineSuggestionHintsContentWidget extends Disposable {\n    static get dropDownVisible() { return this._dropDownVisible; }\n    createCommandAction(commandId, label, iconClassName) {\n        const action = new Action(commandId, label, iconClassName, true, () => this._commandService.executeCommand(commandId));\n        const kb = this.keybindingService.lookupKeybinding(commandId, this._contextKeyService);\n        let tooltip = label;\n        if (kb) {\n            tooltip = localize({ key: 'content', comment: ['A label', 'A keybinding'] }, '{0} ({1})', label, kb.getLabel());\n        }\n        action.tooltip = tooltip;\n        return action;\n    }\n    constructor(editor, withBorder, _position, _currentSuggestionIdx, _suggestionCount, _extraCommands, _commandService, instantiationService, keybindingService, _contextKeyService, _menuService) {\n        super();\n        this.editor = editor;\n        this.withBorder = withBorder;\n        this._position = _position;\n        this._currentSuggestionIdx = _currentSuggestionIdx;\n        this._suggestionCount = _suggestionCount;\n        this._extraCommands = _extraCommands;\n        this._commandService = _commandService;\n        this.keybindingService = keybindingService;\n        this._contextKeyService = _contextKeyService;\n        this._menuService = _menuService;\n        this.id = `InlineSuggestionHintsContentWidget${InlineSuggestionHintsContentWidget.id++}`;\n        this.allowEditorOverflow = true;\n        this.suppressMouseDown = false;\n        this.nodes = h('div.inlineSuggestionsHints', { className: this.withBorder ? '.withBorder' : '' }, [\n            h('div', { style: { display: 'flex' } }, [\n                h('div@actionBar', { className: 'custom-actions' }),\n                h('div@toolBar'),\n            ])\n        ]);\n        this.previousAction = this.createCommandAction(showPreviousInlineSuggestionActionId, localize('previous', 'Previous'), ThemeIcon.asClassName(inlineSuggestionHintsPreviousIcon));\n        this.availableSuggestionCountAction = new Action('inlineSuggestionHints.availableSuggestionCount', '', undefined, false);\n        this.nextAction = this.createCommandAction(showNextInlineSuggestionActionId, localize('next', 'Next'), ThemeIcon.asClassName(inlineSuggestionHintsNextIcon));\n        // TODO@hediet: deprecate MenuId.InlineCompletionsActions\n        this.inlineCompletionsActionsMenus = this._register(this._menuService.createMenu(MenuId.InlineCompletionsActions, this._contextKeyService));\n        this.clearAvailableSuggestionCountLabelDebounced = this._register(new RunOnceScheduler(() => {\n            this.availableSuggestionCountAction.label = '';\n        }, 100));\n        this.disableButtonsDebounced = this._register(new RunOnceScheduler(() => {\n            this.previousAction.enabled = this.nextAction.enabled = false;\n        }, 100));\n        this.lastCommands = [];\n        const actionBar = this._register(new ActionBar(this.nodes.actionBar));\n        actionBar.push(this.previousAction, { icon: true, label: false });\n        actionBar.push(this.availableSuggestionCountAction);\n        actionBar.push(this.nextAction, { icon: true, label: false });\n        this.toolBar = this._register(instantiationService.createInstance(CustomizedMenuWorkbenchToolBar, this.nodes.toolBar, MenuId.InlineSuggestionToolbar, {\n            menuOptions: { renderShortTitle: true },\n            toolbarOptions: { primaryGroup: g => g.startsWith('primary') },\n            actionViewItemProvider: (action, options) => {\n                return action instanceof MenuItemAction ? instantiationService.createInstance(StatusBarViewItem, action, undefined) : undefined;\n            },\n            telemetrySource: 'InlineSuggestionToolbar',\n        }));\n        this._register(this.toolBar.onDidChangeDropdownVisibility(e => {\n            InlineSuggestionHintsContentWidget._dropDownVisible = e;\n        }));\n        this._register(autorun('update position', (reader) => {\n            this._position.read(reader);\n            this.editor.layoutContentWidget(this);\n        }));\n        this._register(autorun('counts', (reader) => {\n            const suggestionCount = this._suggestionCount.read(reader);\n            const currentSuggestionIdx = this._currentSuggestionIdx.read(reader);\n            if (suggestionCount !== undefined) {\n                this.clearAvailableSuggestionCountLabelDebounced.cancel();\n                this.availableSuggestionCountAction.label = `${currentSuggestionIdx + 1}/${suggestionCount}`;\n            }\n            else {\n                this.clearAvailableSuggestionCountLabelDebounced.schedule();\n            }\n            if (suggestionCount !== undefined && suggestionCount > 1) {\n                this.disableButtonsDebounced.cancel();\n                this.previousAction.enabled = this.nextAction.enabled = true;\n            }\n            else {\n                this.disableButtonsDebounced.schedule();\n            }\n        }));\n        this._register(autorun('extra commands', (reader) => {\n            const extraCommands = this._extraCommands.read(reader);\n            if (equals(this.lastCommands, extraCommands)) {\n                // nothing to update\n                return;\n            }\n            this.lastCommands = extraCommands;\n            const extraActions = extraCommands.map(c => ({\n                class: undefined,\n                id: c.id,\n                enabled: true,\n                tooltip: c.tooltip || '',\n                label: c.title,\n                run: (event) => {\n                    return this._commandService.executeCommand(c.id);\n                },\n            }));\n            for (const [_, group] of this.inlineCompletionsActionsMenus.getActions()) {\n                for (const action of group) {\n                    if (action instanceof MenuItemAction) {\n                        extraActions.push(action);\n                    }\n                }\n            }\n            if (extraActions.length > 0) {\n                extraActions.unshift(new Separator());\n            }\n            this.toolBar.setAdditionalSecondaryActions(extraActions);\n        }));\n    }\n    getId() { return this.id; }\n    getDomNode() {\n        return this.nodes.root;\n    }\n    getPosition() {\n        return {\n            position: this._position.get(),\n            preference: [1 /* ContentWidgetPositionPreference.ABOVE */, 2 /* ContentWidgetPositionPreference.BELOW */],\n            positionAffinity: 3 /* PositionAffinity.LeftOfInjectedText */,\n        };\n    }\n};\nInlineSuggestionHintsContentWidget._dropDownVisible = false;\nInlineSuggestionHintsContentWidget.id = 0;\nInlineSuggestionHintsContentWidget = __decorate([\n    __param(6, ICommandService),\n    __param(7, IInstantiationService),\n    __param(8, IKeybindingService),\n    __param(9, IContextKeyService),\n    __param(10, IMenuService)\n], InlineSuggestionHintsContentWidget);\nexport { InlineSuggestionHintsContentWidget };\nclass StatusBarViewItem extends MenuEntryActionViewItem {\n    updateLabel() {\n        const kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\n        if (!kb) {\n            return super.updateLabel();\n        }\n        if (this.label) {\n            const div = h('div.keybinding').root;\n            const k = new KeybindingLabel(div, OS, Object.assign({ disableTitle: true }, unthemedKeybindingLabelOptions));\n            k.set(kb);\n            this.label.textContent = this._action.label;\n            this.label.appendChild(div);\n            this.label.classList.add('inlineSuggestionStatusBarItemLabel');\n        }\n    }\n}\nlet CustomizedMenuWorkbenchToolBar = class CustomizedMenuWorkbenchToolBar extends WorkbenchToolBar {\n    constructor(container, menuId, options2, menuService, contextKeyService, contextMenuService, keybindingService, telemetryService) {\n        super(container, Object.assign({ resetMenu: menuId }, options2), menuService, contextKeyService, contextMenuService, keybindingService, telemetryService);\n        this.menuId = menuId;\n        this.options2 = options2;\n        this.menuService = menuService;\n        this.contextKeyService = contextKeyService;\n        this.menu = this._store.add(this.menuService.createMenu(this.menuId, this.contextKeyService, { emitEventsForSubmenuChanges: true }));\n        this.additionalActions = [];\n        this._store.add(this.menu.onDidChange(() => this.updateToolbar()));\n        this.updateToolbar();\n    }\n    updateToolbar() {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const primary = [];\n        const secondary = [];\n        createAndFillInActionBarActions(this.menu, (_a = this.options2) === null || _a === void 0 ? void 0 : _a.menuOptions, { primary, secondary }, (_c = (_b = this.options2) === null || _b === void 0 ? void 0 : _b.toolbarOptions) === null || _c === void 0 ? void 0 : _c.primaryGroup, (_e = (_d = this.options2) === null || _d === void 0 ? void 0 : _d.toolbarOptions) === null || _e === void 0 ? void 0 : _e.shouldInlineSubmenu, (_g = (_f = this.options2) === null || _f === void 0 ? void 0 : _f.toolbarOptions) === null || _g === void 0 ? void 0 : _g.useSeparatorsInPrimaryActions);\n        secondary.push(...this.additionalActions);\n        this.setActions(primary, secondary);\n    }\n    setAdditionalSecondaryActions(actions) {\n        if (equals(this.additionalActions, actions, (a, b) => a === b)) {\n            // don't update if the actions are the same\n            return;\n        }\n        this.additionalActions = actions;\n        this.updateToolbar();\n    }\n};\nCustomizedMenuWorkbenchToolBar = __decorate([\n    __param(3, IMenuService),\n    __param(4, IContextKeyService),\n    __param(5, IContextMenuService),\n    __param(6, IKeybindingService),\n    __param(7, ITelemetryService)\n], CustomizedMenuWorkbenchToolBar);\nexport { CustomizedMenuWorkbenchToolBar };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { disposableTimeout } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { noBreakWhitespace } from '../../../../base/common/strings.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './inlineProgressWidget.css';\nimport { Range } from '../../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nconst inlineProgressDecoration = ModelDecorationOptions.register({\n    description: 'inline-progress-widget',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    showIfCollapsed: true,\n    after: {\n        content: noBreakWhitespace,\n        inlineClassName: 'inline-editor-progress-decoration',\n        inlineClassNameAffectsLetterSpacing: true,\n    }\n});\nclass InlineProgressWidget extends Disposable {\n    constructor(typeId, editor, range, title, delegate) {\n        super();\n        this.typeId = typeId;\n        this.editor = editor;\n        this.range = range;\n        this.delegate = delegate;\n        this.allowEditorOverflow = false;\n        this.suppressMouseDown = true;\n        this.create(title);\n        this.editor.addContentWidget(this);\n        this.editor.layoutContentWidget(this);\n    }\n    create(title) {\n        this.domNode = dom.$('.inline-progress-widget');\n        this.domNode.role = 'button';\n        this.domNode.title = title;\n        const iconElement = dom.$('span.icon');\n        this.domNode.append(iconElement);\n        iconElement.classList.add(...ThemeIcon.asClassNameArray(Codicon.loading), 'codicon-modifier-spin');\n        const updateSize = () => {\n            const lineHeight = this.editor.getOption(65 /* EditorOption.lineHeight */);\n            this.domNode.style.height = `${lineHeight}px`;\n            this.domNode.style.width = `${Math.ceil(0.8 * lineHeight)}px`;\n        };\n        updateSize();\n        this._register(this.editor.onDidChangeConfiguration(c => {\n            if (c.hasChanged(51 /* EditorOption.fontSize */) || c.hasChanged(65 /* EditorOption.lineHeight */)) {\n                updateSize();\n            }\n        }));\n        this._register(dom.addDisposableListener(this.domNode, dom.EventType.CLICK, e => {\n            this.delegate.cancel();\n        }));\n    }\n    getId() {\n        return InlineProgressWidget.baseId + '.' + this.typeId;\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    getPosition() {\n        return {\n            position: { lineNumber: this.range.startLineNumber, column: this.range.startColumn },\n            preference: [0 /* ContentWidgetPositionPreference.EXACT */]\n        };\n    }\n    dispose() {\n        super.dispose();\n        this.editor.removeContentWidget(this);\n    }\n}\nInlineProgressWidget.baseId = 'editor.widget.inlineProgressWidget';\nlet InlineProgressManager = class InlineProgressManager extends Disposable {\n    constructor(id, _editor, _instantiationService) {\n        super();\n        this.id = id;\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        /** Delay before showing the progress widget */\n        this._showDelay = 500; // ms\n        this._showPromise = this._register(new MutableDisposable());\n        this._currentWidget = new MutableDisposable();\n        this._operationIdPool = 0;\n        this._currentDecorations = _editor.createDecorationsCollection();\n    }\n    showWhile(position, title, promise) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const operationId = this._operationIdPool++;\n            this._currentOperation = operationId;\n            this.clear();\n            this._showPromise.value = disposableTimeout(() => {\n                const range = Range.fromPositions(position);\n                const decorationIds = this._currentDecorations.set([{\n                        range: range,\n                        options: inlineProgressDecoration,\n                    }]);\n                if (decorationIds.length > 0) {\n                    this._currentWidget.value = this._instantiationService.createInstance(InlineProgressWidget, this.id, this._editor, range, title, promise);\n                }\n            }, this._showDelay);\n            try {\n                return yield promise;\n            }\n            finally {\n                if (this._currentOperation === operationId) {\n                    this.clear();\n                    this._currentOperation = undefined;\n                }\n            }\n        });\n    }\n    clear() {\n        this._showPromise.clear();\n        this._currentDecorations.clear();\n        this._currentWidget.clear();\n    }\n};\nInlineProgressManager = __decorate([\n    __param(2, IInstantiationService)\n], InlineProgressManager);\nexport { InlineProgressManager };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { CursorMoveCommands } from '../../../common/cursor/cursorMoveCommands.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nexport class ExpandLineSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'expandLineSelection',\n            label: nls.localize('expandLineSelection', \"Expand Line Selection\"),\n            alias: 'Expand Line Selection',\n            precondition: undefined,\n            kbOpts: {\n                weight: 0 /* KeybindingWeight.EditorCore */,\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 42 /* KeyCode.KeyL */\n            },\n        });\n    }\n    run(_accessor, editor, args) {\n        args = args || {};\n        if (!editor.hasModel()) {\n            return;\n        }\n        const viewModel = editor._getViewModel();\n        viewModel.model.pushStackElement();\n        viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.expandLineSelection(viewModel, viewModel.getCursorStates()));\n        viewModel.revealPrimaryCursor(args.source, true);\n    }\n}\nregisterEditorAction(ExpandLineSelectionAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class CopyLinesCommand {\n    constructor(selection, isCopyingDown, noop) {\n        this._selection = selection;\n        this._isCopyingDown = isCopyingDown;\n        this._noop = noop || false;\n        this._selectionDirection = 0 /* SelectionDirection.LTR */;\n        this._selectionId = null;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n    }\n    getEditOperations(model, builder) {\n        let s = this._selection;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._endLineNumberDelta = 1;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const sourceLines = [];\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            sourceLines.push(model.getLineContent(i));\n        }\n        const sourceText = sourceLines.join('\\n');\n        if (sourceText === '') {\n            // Duplicating empty line\n            if (this._isCopyingDown) {\n                this._startLineNumberDelta++;\n                this._endLineNumberDelta++;\n            }\n        }\n        if (this._noop) {\n            builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber + 1, 1), s.endLineNumber === model.getLineCount() ? '' : '\\n');\n        }\n        else {\n            if (!this._isCopyingDown) {\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + sourceText);\n            }\n            else {\n                builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), sourceText + '\\n');\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n        this._selectionDirection = this._selection.getDirection();\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._startLineNumberDelta !== 0 || this._endLineNumberDelta !== 0) {\n            let startLineNumber = result.startLineNumber;\n            let startColumn = result.startColumn;\n            let endLineNumber = result.endLineNumber;\n            let endColumn = result.endColumn;\n            if (this._startLineNumberDelta !== 0) {\n                startLineNumber = startLineNumber + this._startLineNumberDelta;\n                startColumn = 1;\n            }\n            if (this._endLineNumberDelta !== 0) {\n                endLineNumber = endLineNumber + this._endLineNumberDelta;\n                endColumn = 1;\n            }\n            result = Selection.createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, this._selectionDirection);\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as strings from '../../../../base/common/strings.js';\nimport { ShiftCommand } from '../../../common/commands/shiftCommand.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IndentAction } from '../../../common/languages/languageConfiguration.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport * as indentUtils from '../../indentation/browser/indentUtils.js';\nimport { getGoodIndentForLine, getIndentMetadata } from '../../../common/languages/autoIndent.js';\nimport { getEnterAction } from '../../../common/languages/enterAction.js';\nlet MoveLinesCommand = class MoveLinesCommand {\n    constructor(selection, isMovingDown, autoIndent, _languageConfigurationService) {\n        this._languageConfigurationService = _languageConfigurationService;\n        this._selection = selection;\n        this._isMovingDown = isMovingDown;\n        this._autoIndent = autoIndent;\n        this._selectionId = null;\n        this._moveEndLineSelectionShrink = false;\n    }\n    getEditOperations(model, builder) {\n        const modelLineCount = model.getLineCount();\n        if (this._isMovingDown && this._selection.endLineNumber === modelLineCount) {\n            this._selectionId = builder.trackSelection(this._selection);\n            return;\n        }\n        if (!this._isMovingDown && this._selection.startLineNumber === 1) {\n            this._selectionId = builder.trackSelection(this._selection);\n            return;\n        }\n        this._moveEndPositionDown = false;\n        let s = this._selection;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._moveEndPositionDown = true;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\n        const indentConverter = this.buildIndentConverter(tabSize, indentSize, insertSpaces);\n        const virtualModel = {\n            tokenization: {\n                getLineTokens: (lineNumber) => {\n                    return model.tokenization.getLineTokens(lineNumber);\n                },\n                getLanguageId: () => {\n                    return model.getLanguageId();\n                },\n                getLanguageIdAtPosition: (lineNumber, column) => {\n                    return model.getLanguageIdAtPosition(lineNumber, column);\n                },\n            },\n            getLineContent: null,\n        };\n        if (s.startLineNumber === s.endLineNumber && model.getLineMaxColumn(s.startLineNumber) === 1) {\n            // Current line is empty\n            const lineNumber = s.startLineNumber;\n            const otherLineNumber = (this._isMovingDown ? lineNumber + 1 : lineNumber - 1);\n            if (model.getLineMaxColumn(otherLineNumber) === 1) {\n                // Other line number is empty too, so no editing is needed\n                // Add a no-op to force running by the model\n                builder.addEditOperation(new Range(1, 1, 1, 1), null);\n            }\n            else {\n                // Type content from other line number on line number\n                builder.addEditOperation(new Range(lineNumber, 1, lineNumber, 1), model.getLineContent(otherLineNumber));\n                // Remove content from other line number\n                builder.addEditOperation(new Range(otherLineNumber, 1, otherLineNumber, model.getLineMaxColumn(otherLineNumber)), null);\n            }\n            // Track selection at the other line number\n            s = new Selection(otherLineNumber, 1, otherLineNumber, 1);\n        }\n        else {\n            let movingLineNumber;\n            let movingLineText;\n            if (this._isMovingDown) {\n                movingLineNumber = s.endLineNumber + 1;\n                movingLineText = model.getLineContent(movingLineNumber);\n                // Delete line that needs to be moved\n                builder.addEditOperation(new Range(movingLineNumber - 1, model.getLineMaxColumn(movingLineNumber - 1), movingLineNumber, model.getLineMaxColumn(movingLineNumber)), null);\n                let insertingText = movingLineText;\n                if (this.shouldAutoIndent(model, s)) {\n                    const movingLineMatchResult = this.matchEnterRule(model, indentConverter, tabSize, movingLineNumber, s.startLineNumber - 1);\n                    // if s.startLineNumber - 1 matches onEnter rule, we still honor that.\n                    if (movingLineMatchResult !== null) {\n                        const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\n                        const newSpaceCnt = movingLineMatchResult + indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                        const newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                        insertingText = newIndentation + this.trimLeft(movingLineText);\n                    }\n                    else {\n                        // no enter rule matches, let's check indentatin rules then.\n                        virtualModel.getLineContent = (lineNumber) => {\n                            if (lineNumber === s.startLineNumber) {\n                                return model.getLineContent(movingLineNumber);\n                            }\n                            else {\n                                return model.getLineContent(lineNumber);\n                            }\n                        };\n                        const indentOfMovingLine = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber, indentConverter, this._languageConfigurationService);\n                        if (indentOfMovingLine !== null) {\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(indentOfMovingLine, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                                insertingText = newIndentation + this.trimLeft(movingLineText);\n                            }\n                        }\n                    }\n                    // add edit operations for moving line first to make sure it's executed after we make indentation change\n                    // to s.startLineNumber\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\n                    const ret = this.matchEnterRuleMovingDown(model, indentConverter, tabSize, s.startLineNumber, movingLineNumber, insertingText);\n                    // check if the line being moved before matches onEnter rules, if so let's adjust the indentation by onEnter rules.\n                    if (ret !== null) {\n                        if (ret !== 0) {\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\n                        }\n                    }\n                    else {\n                        // it doesn't match onEnter rules, let's check indentation rules then.\n                        virtualModel.getLineContent = (lineNumber) => {\n                            if (lineNumber === s.startLineNumber) {\n                                return insertingText;\n                            }\n                            else if (lineNumber >= s.startLineNumber + 1 && lineNumber <= s.endLineNumber + 1) {\n                                return model.getLineContent(lineNumber - 1);\n                            }\n                            else {\n                                return model.getLineContent(lineNumber);\n                            }\n                        };\n                        const newIndentatOfMovingBlock = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber + 1, indentConverter, this._languageConfigurationService);\n                        if (newIndentatOfMovingBlock !== null) {\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(newIndentatOfMovingBlock, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\n                            }\n                        }\n                    }\n                }\n                else {\n                    // Insert line that needs to be moved before\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\n                }\n            }\n            else {\n                movingLineNumber = s.startLineNumber - 1;\n                movingLineText = model.getLineContent(movingLineNumber);\n                // Delete line that needs to be moved\n                builder.addEditOperation(new Range(movingLineNumber, 1, movingLineNumber + 1, 1), null);\n                // Insert line that needs to be moved after\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + movingLineText);\n                if (this.shouldAutoIndent(model, s)) {\n                    virtualModel.getLineContent = (lineNumber) => {\n                        if (lineNumber === movingLineNumber) {\n                            return model.getLineContent(s.startLineNumber);\n                        }\n                        else {\n                            return model.getLineContent(lineNumber);\n                        }\n                    };\n                    const ret = this.matchEnterRule(model, indentConverter, tabSize, s.startLineNumber, s.startLineNumber - 2);\n                    // check if s.startLineNumber - 2 matches onEnter rules, if so adjust the moving block by onEnter rules.\n                    if (ret !== null) {\n                        if (ret !== 0) {\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\n                        }\n                    }\n                    else {\n                        // it doesn't match any onEnter rule, let's check indentation rules then.\n                        const indentOfFirstLine = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(s.startLineNumber, 1), movingLineNumber, indentConverter, this._languageConfigurationService);\n                        if (indentOfFirstLine !== null) {\n                            // adjust the indentation of the moving block\n                            const oldIndent = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndent, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n    }\n    buildIndentConverter(tabSize, indentSize, insertSpaces) {\n        return {\n            shiftIndent: (indentation) => {\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            },\n            unshiftIndent: (indentation) => {\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            }\n        };\n    }\n    parseEnterResult(model, indentConverter, tabSize, line, enter) {\n        if (enter) {\n            let enterPrefix = enter.indentation;\n            if (enter.indentAction === IndentAction.None) {\n                enterPrefix = enter.indentation + enter.appendText;\n            }\n            else if (enter.indentAction === IndentAction.Indent) {\n                enterPrefix = enter.indentation + enter.appendText;\n            }\n            else if (enter.indentAction === IndentAction.IndentOutdent) {\n                enterPrefix = enter.indentation;\n            }\n            else if (enter.indentAction === IndentAction.Outdent) {\n                enterPrefix = indentConverter.unshiftIndent(enter.indentation) + enter.appendText;\n            }\n            const movingLineText = model.getLineContent(line);\n            if (this.trimLeft(movingLineText).indexOf(this.trimLeft(enterPrefix)) >= 0) {\n                const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(line));\n                let newIndentation = strings.getLeadingWhitespace(enterPrefix);\n                const indentMetadataOfMovelingLine = getIndentMetadata(model, line, this._languageConfigurationService);\n                if (indentMetadataOfMovelingLine !== null && indentMetadataOfMovelingLine & 2 /* IndentConsts.DECREASE_MASK */) {\n                    newIndentation = indentConverter.unshiftIndent(newIndentation);\n                }\n                const newSpaceCnt = indentUtils.getSpaceCnt(newIndentation, tabSize);\n                const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                return newSpaceCnt - oldSpaceCnt;\n            }\n        }\n        return null;\n    }\n    /**\n     *\n     * @param model\n     * @param indentConverter\n     * @param tabSize\n     * @param line the line moving down\n     * @param futureAboveLineNumber the line which will be at the `line` position\n     * @param futureAboveLineText\n     */\n    matchEnterRuleMovingDown(model, indentConverter, tabSize, line, futureAboveLineNumber, futureAboveLineText) {\n        if (strings.lastNonWhitespaceIndex(futureAboveLineText) >= 0) {\n            // break\n            const maxColumn = model.getLineMaxColumn(futureAboveLineNumber);\n            const enter = getEnterAction(this._autoIndent, model, new Range(futureAboveLineNumber, maxColumn, futureAboveLineNumber, maxColumn), this._languageConfigurationService);\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n        }\n        else {\n            // go upwards, starting from `line - 1`\n            let validPrecedingLine = line - 1;\n            while (validPrecedingLine >= 1) {\n                const lineContent = model.getLineContent(validPrecedingLine);\n                const nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\n                if (nonWhitespaceIdx >= 0) {\n                    break;\n                }\n                validPrecedingLine--;\n            }\n            if (validPrecedingLine < 1 || line > model.getLineCount()) {\n                return null;\n            }\n            const maxColumn = model.getLineMaxColumn(validPrecedingLine);\n            const enter = getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn), this._languageConfigurationService);\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n        }\n    }\n    matchEnterRule(model, indentConverter, tabSize, line, oneLineAbove, previousLineText) {\n        let validPrecedingLine = oneLineAbove;\n        while (validPrecedingLine >= 1) {\n            // ship empty lines as empty lines just inherit indentation\n            let lineContent;\n            if (validPrecedingLine === oneLineAbove && previousLineText !== undefined) {\n                lineContent = previousLineText;\n            }\n            else {\n                lineContent = model.getLineContent(validPrecedingLine);\n            }\n            const nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\n            if (nonWhitespaceIdx >= 0) {\n                break;\n            }\n            validPrecedingLine--;\n        }\n        if (validPrecedingLine < 1 || line > model.getLineCount()) {\n            return null;\n        }\n        const maxColumn = model.getLineMaxColumn(validPrecedingLine);\n        const enter = getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn), this._languageConfigurationService);\n        return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n    }\n    trimLeft(str) {\n        return str.replace(/^\\s+/, '');\n    }\n    shouldAutoIndent(model, selection) {\n        if (this._autoIndent < 4 /* EditorAutoIndentStrategy.Full */) {\n            return false;\n        }\n        // if it's not easy to tokenize, we stop auto indent.\n        if (!model.tokenization.isCheapToTokenize(selection.startLineNumber)) {\n            return false;\n        }\n        const languageAtSelectionStart = model.getLanguageIdAtPosition(selection.startLineNumber, 1);\n        const languageAtSelectionEnd = model.getLanguageIdAtPosition(selection.endLineNumber, 1);\n        if (languageAtSelectionStart !== languageAtSelectionEnd) {\n            return false;\n        }\n        if (this._languageConfigurationService.getLanguageConfiguration(languageAtSelectionStart).indentRulesSupport === null) {\n            return false;\n        }\n        return true;\n    }\n    getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, offset) {\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            const lineContent = model.getLineContent(i);\n            const originalIndent = strings.getLeadingWhitespace(lineContent);\n            const originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\n            const newSpacesCnt = originalSpacesCnt + offset;\n            const newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\n            if (newIndent !== originalIndent) {\n                builder.addEditOperation(new Range(i, 1, i, originalIndent.length + 1), newIndent);\n                if (i === s.endLineNumber && s.endColumn <= originalIndent.length + 1 && newIndent === '') {\n                    // as users select part of the original indent white spaces\n                    // when we adjust the indentation of endLine, we should adjust the cursor position as well.\n                    this._moveEndLineSelectionShrink = true;\n                }\n            }\n        }\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._moveEndPositionDown) {\n            result = result.setEndPosition(result.endLineNumber + 1, 1);\n        }\n        if (this._moveEndLineSelectionShrink && result.startLineNumber < result.endLineNumber) {\n            result = result.setEndPosition(result.endLineNumber, 2);\n        }\n        return result;\n    }\n};\nMoveLinesCommand = __decorate([\n    __param(3, ILanguageConfigurationService)\n], MoveLinesCommand);\nexport { MoveLinesCommand };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nexport class SortLinesCommand {\n    static getCollator() {\n        if (!SortLinesCommand._COLLATOR) {\n            SortLinesCommand._COLLATOR = new Intl.Collator();\n        }\n        return SortLinesCommand._COLLATOR;\n    }\n    constructor(selection, descending) {\n        this.selection = selection;\n        this.descending = descending;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        const op = sortLines(model, this.selection, this.descending);\n        if (op) {\n            builder.addEditOperation(op.range, op.text);\n        }\n        this.selectionId = builder.trackSelection(this.selection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n    static canRun(model, selection, descending) {\n        if (model === null) {\n            return false;\n        }\n        const data = getSortData(model, selection, descending);\n        if (!data) {\n            return false;\n        }\n        for (let i = 0, len = data.before.length; i < len; i++) {\n            if (data.before[i] !== data.after[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nSortLinesCommand._COLLATOR = null;\nfunction getSortData(model, selection, descending) {\n    const startLineNumber = selection.startLineNumber;\n    let endLineNumber = selection.endLineNumber;\n    if (selection.endColumn === 1) {\n        endLineNumber--;\n    }\n    // Nothing to sort if user didn't select anything.\n    if (startLineNumber >= endLineNumber) {\n        return null;\n    }\n    const linesToSort = [];\n    // Get the contents of the selection to be sorted.\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        linesToSort.push(model.getLineContent(lineNumber));\n    }\n    let sorted = linesToSort.slice(0);\n    sorted.sort(SortLinesCommand.getCollator().compare);\n    // If descending, reverse the order.\n    if (descending === true) {\n        sorted = sorted.reverse();\n    }\n    return {\n        startLineNumber: startLineNumber,\n        endLineNumber: endLineNumber,\n        before: linesToSort,\n        after: sorted\n    };\n}\n/**\n * Generate commands for sorting lines on a model.\n */\nfunction sortLines(model, selection, descending) {\n    const data = getSortData(model, selection, descending);\n    if (!data) {\n        return null;\n    }\n    return EditOperation.replace(new Range(data.startLineNumber, 1, data.endLineNumber, model.getLineMaxColumn(data.endLineNumber)), data.after.join('\\n'));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection, ReplaceCommandThatSelectsText } from '../../../common/commands/replaceCommand.js';\nimport { TrimTrailingWhitespaceCommand } from '../../../common/commands/trimTrailingWhitespaceCommand.js';\nimport { TypeOperations } from '../../../common/cursor/cursorTypeOperations.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { CopyLinesCommand } from './copyLinesCommand.js';\nimport { MoveLinesCommand } from './moveLinesCommand.js';\nimport { SortLinesCommand } from './sortLinesCommand.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\n// copy lines\nclass AbstractCopyLinesAction extends EditorAction {\n    constructor(down, opts) {\n        super(opts);\n        this.down = down;\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections().map((selection, index) => ({ selection, index, ignore: false }));\n        selections.sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\n        // Remove selections that would result in copying the same line\n        let prev = selections[0];\n        for (let i = 1; i < selections.length; i++) {\n            const curr = selections[i];\n            if (prev.selection.endLineNumber === curr.selection.startLineNumber) {\n                // these two selections would copy the same line\n                if (prev.index < curr.index) {\n                    // prev wins\n                    curr.ignore = true;\n                }\n                else {\n                    // curr wins\n                    prev.ignore = true;\n                    prev = curr;\n                }\n            }\n        }\n        const commands = [];\n        for (const selection of selections) {\n            commands.push(new CopyLinesCommand(selection.selection, this.down, selection.ignore));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass CopyLinesUpAction extends AbstractCopyLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.copyLinesUpAction',\n            label: nls.localize('lines.copyUp', \"Copy Line Up\"),\n            alias: 'Copy Line Up',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miCopyLinesUp', comment: ['&& denotes a mnemonic'] }, \"&&Copy Line Up\"),\n                order: 1\n            }\n        });\n    }\n}\nclass CopyLinesDownAction extends AbstractCopyLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.copyLinesDownAction',\n            label: nls.localize('lines.copyDown', \"Copy Line Down\"),\n            alias: 'Copy Line Down',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miCopyLinesDown', comment: ['&& denotes a mnemonic'] }, \"Co&&py Line Down\"),\n                order: 2\n            }\n        });\n    }\n}\nexport class DuplicateSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.duplicateSelection',\n            label: nls.localize('duplicateSelection', \"Duplicate Selection\"),\n            alias: 'Duplicate Selection',\n            precondition: EditorContextKeys.writable,\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miDuplicateSelection', comment: ['&& denotes a mnemonic'] }, \"&&Duplicate Selection\"),\n                order: 5\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const commands = [];\n        const selections = editor.getSelections();\n        const model = editor.getModel();\n        for (const selection of selections) {\n            if (selection.isEmpty()) {\n                commands.push(new CopyLinesCommand(selection, true));\n            }\n            else {\n                const insertSelection = new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn);\n                commands.push(new ReplaceCommandThatSelectsText(insertSelection, model.getValueInRange(selection)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\n// move lines\nclass AbstractMoveLinesAction extends EditorAction {\n    constructor(down, opts) {\n        super(opts);\n        this.down = down;\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const commands = [];\n        const selections = editor.getSelections() || [];\n        const autoIndent = editor.getOption(11 /* EditorOption.autoIndent */);\n        for (const selection of selections) {\n            commands.push(new MoveLinesCommand(selection, this.down, autoIndent, languageConfigurationService));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass MoveLinesUpAction extends AbstractMoveLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.moveLinesUpAction',\n            label: nls.localize('lines.moveUp', \"Move Line Up\"),\n            alias: 'Move Line Up',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */,\n                linux: { primary: 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miMoveLinesUp', comment: ['&& denotes a mnemonic'] }, \"Mo&&ve Line Up\"),\n                order: 3\n            }\n        });\n    }\n}\nclass MoveLinesDownAction extends AbstractMoveLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.moveLinesDownAction',\n            label: nls.localize('lines.moveDown', \"Move Line Down\"),\n            alias: 'Move Line Down',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */,\n                linux: { primary: 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miMoveLinesDown', comment: ['&& denotes a mnemonic'] }, \"Move &&Line Down\"),\n                order: 4\n            }\n        });\n    }\n}\nexport class AbstractSortLinesAction extends EditorAction {\n    constructor(descending, opts) {\n        super(opts);\n        this.descending = descending;\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections() || [];\n        for (const selection of selections) {\n            if (!SortLinesCommand.canRun(editor.getModel(), selection, this.descending)) {\n                return;\n            }\n        }\n        const commands = [];\n        for (let i = 0, len = selections.length; i < len; i++) {\n            commands[i] = new SortLinesCommand(selections[i], this.descending);\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nexport class SortLinesAscendingAction extends AbstractSortLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.sortLinesAscending',\n            label: nls.localize('lines.sortAscending', \"Sort Lines Ascending\"),\n            alias: 'Sort Lines Ascending',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nexport class SortLinesDescendingAction extends AbstractSortLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.sortLinesDescending',\n            label: nls.localize('lines.sortDescending', \"Sort Lines Descending\"),\n            alias: 'Sort Lines Descending',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nexport class DeleteDuplicateLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.removeDuplicateLines',\n            label: nls.localize('lines.deleteDuplicates', \"Delete Duplicate Lines\"),\n            alias: 'Delete Duplicate Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n            return;\n        }\n        const edits = [];\n        const endCursorState = [];\n        let linesDeleted = 0;\n        for (const selection of editor.getSelections()) {\n            const uniqueLines = new Set();\n            const lines = [];\n            for (let i = selection.startLineNumber; i <= selection.endLineNumber; i++) {\n                const line = model.getLineContent(i);\n                if (uniqueLines.has(line)) {\n                    continue;\n                }\n                lines.push(line);\n                uniqueLines.add(line);\n            }\n            const selectionToReplace = new Selection(selection.startLineNumber, 1, selection.endLineNumber, model.getLineMaxColumn(selection.endLineNumber));\n            const adjustedSelectionStart = selection.startLineNumber - linesDeleted;\n            const finalSelection = new Selection(adjustedSelectionStart, 1, adjustedSelectionStart + lines.length - 1, lines[lines.length - 1].length);\n            edits.push(EditOperation.replace(selectionToReplace, lines.join('\\n')));\n            endCursorState.push(finalSelection);\n            linesDeleted += (selection.endLineNumber - selection.startLineNumber + 1) - lines.length;\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class TrimTrailingWhitespaceAction extends EditorAction {\n    constructor() {\n        super({\n            id: TrimTrailingWhitespaceAction.ID,\n            label: nls.localize('lines.trimTrailingWhitespace', \"Trim Trailing Whitespace\"),\n            alias: 'Trim Trailing Whitespace',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 54 /* KeyCode.KeyX */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor, args) {\n        let cursors = [];\n        if (args.reason === 'auto-save') {\n            // See https://github.com/editorconfig/editorconfig-vscode/issues/47\n            // It is very convenient for the editor config extension to invoke this action.\n            // So, if we get a reason:'auto-save' passed in, let's preserve cursor positions.\n            cursors = (editor.getSelections() || []).map(s => new Position(s.positionLineNumber, s.positionColumn));\n        }\n        const selection = editor.getSelection();\n        if (selection === null) {\n            return;\n        }\n        const command = new TrimTrailingWhitespaceCommand(selection, cursors);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n    }\n}\nTrimTrailingWhitespaceAction.ID = 'editor.action.trimTrailingWhitespace';\nexport class DeleteLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.deleteLines',\n            label: nls.localize('lines.delete', \"Delete Line\"),\n            alias: 'Delete Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 41 /* KeyCode.KeyK */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const ops = this._getLinesToRemove(editor);\n        const model = editor.getModel();\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n            // Model is empty\n            return;\n        }\n        let linesDeleted = 0;\n        const edits = [];\n        const cursorState = [];\n        for (let i = 0, len = ops.length; i < len; i++) {\n            const op = ops[i];\n            let startLineNumber = op.startLineNumber;\n            let endLineNumber = op.endLineNumber;\n            let startColumn = 1;\n            let endColumn = model.getLineMaxColumn(endLineNumber);\n            if (endLineNumber < model.getLineCount()) {\n                endLineNumber += 1;\n                endColumn = 1;\n            }\n            else if (startLineNumber > 1) {\n                startLineNumber -= 1;\n                startColumn = model.getLineMaxColumn(startLineNumber);\n            }\n            edits.push(EditOperation.replace(new Selection(startLineNumber, startColumn, endLineNumber, endColumn), ''));\n            cursorState.push(new Selection(startLineNumber - linesDeleted, op.positionColumn, startLineNumber - linesDeleted, op.positionColumn));\n            linesDeleted += (op.endLineNumber - op.startLineNumber + 1);\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, cursorState);\n        editor.pushUndoStop();\n    }\n    _getLinesToRemove(editor) {\n        // Construct delete operations\n        const operations = editor.getSelections().map((s) => {\n            let endLineNumber = s.endLineNumber;\n            if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n                endLineNumber -= 1;\n            }\n            return {\n                startLineNumber: s.startLineNumber,\n                selectionStartColumn: s.selectionStartColumn,\n                endLineNumber: endLineNumber,\n                positionColumn: s.positionColumn\n            };\n        });\n        // Sort delete operations\n        operations.sort((a, b) => {\n            if (a.startLineNumber === b.startLineNumber) {\n                return a.endLineNumber - b.endLineNumber;\n            }\n            return a.startLineNumber - b.startLineNumber;\n        });\n        // Merge delete operations which are adjacent or overlapping\n        const mergedOperations = [];\n        let previousOperation = operations[0];\n        for (let i = 1; i < operations.length; i++) {\n            if (previousOperation.endLineNumber + 1 >= operations[i].startLineNumber) {\n                // Merge current operations into the previous one\n                previousOperation.endLineNumber = operations[i].endLineNumber;\n            }\n            else {\n                // Push previous operation\n                mergedOperations.push(previousOperation);\n                previousOperation = operations[i];\n            }\n        }\n        // Push the last operation\n        mergedOperations.push(previousOperation);\n        return mergedOperations;\n    }\n}\nexport class IndentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.indentLines',\n            label: nls.localize('lines.indent', \"Indent Line\"),\n            alias: 'Indent Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 94 /* KeyCode.BracketRight */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.indent(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n        editor.pushUndoStop();\n    }\n}\nclass OutdentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.outdentLines',\n            label: nls.localize('lines.outdent', \"Outdent Line\"),\n            alias: 'Outdent Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 92 /* KeyCode.BracketLeft */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        CoreEditingCommands.Outdent.runEditorCommand(_accessor, editor, null);\n    }\n}\nexport class InsertLineBeforeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertLineBefore',\n            label: nls.localize('lines.insertBefore', \"Insert Line Above\"),\n            alias: 'Insert Line Above',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.lineInsertBefore(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n    }\n}\nexport class InsertLineAfterAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertLineAfter',\n            label: nls.localize('lines.insertAfter', \"Insert Line Below\"),\n            alias: 'Insert Line Below',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.lineInsertAfter(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n    }\n}\nexport class AbstractDeleteAllToBoundaryAction extends EditorAction {\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const primaryCursor = editor.getSelection();\n        const rangesToDelete = this._getRangesToDelete(editor);\n        // merge overlapping selections\n        const effectiveRanges = [];\n        for (let i = 0, count = rangesToDelete.length - 1; i < count; i++) {\n            const range = rangesToDelete[i];\n            const nextRange = rangesToDelete[i + 1];\n            if (Range.intersectRanges(range, nextRange) === null) {\n                effectiveRanges.push(range);\n            }\n            else {\n                rangesToDelete[i + 1] = Range.plusRange(range, nextRange);\n            }\n        }\n        effectiveRanges.push(rangesToDelete[rangesToDelete.length - 1]);\n        const endCursorState = this._getEndCursorState(primaryCursor, effectiveRanges);\n        const edits = effectiveRanges.map(range => {\n            return EditOperation.replace(range, '');\n        });\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class DeleteAllLeftAction extends AbstractDeleteAllToBoundaryAction {\n    constructor() {\n        super({\n            id: 'deleteAllLeft',\n            label: nls.localize('lines.deleteAllLeft', \"Delete All Left\"),\n            alias: 'Delete All Left',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1 /* KeyCode.Backspace */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _getEndCursorState(primaryCursor, rangesToDelete) {\n        let endPrimaryCursor = null;\n        const endCursorState = [];\n        let deletedLines = 0;\n        rangesToDelete.forEach(range => {\n            let endCursor;\n            if (range.endColumn === 1 && deletedLines > 0) {\n                const newStartLine = range.startLineNumber - deletedLines;\n                endCursor = new Selection(newStartLine, range.startColumn, newStartLine, range.startColumn);\n            }\n            else {\n                endCursor = new Selection(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n            }\n            deletedLines += range.endLineNumber - range.startLineNumber;\n            if (range.intersectRanges(primaryCursor)) {\n                endPrimaryCursor = endCursor;\n            }\n            else {\n                endCursorState.push(endCursor);\n            }\n        });\n        if (endPrimaryCursor) {\n            endCursorState.unshift(endPrimaryCursor);\n        }\n        return endCursorState;\n    }\n    _getRangesToDelete(editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return [];\n        }\n        let rangesToDelete = selections;\n        const model = editor.getModel();\n        if (model === null) {\n            return [];\n        }\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\n        rangesToDelete = rangesToDelete.map(selection => {\n            if (selection.isEmpty()) {\n                if (selection.startColumn === 1) {\n                    const deleteFromLine = Math.max(1, selection.startLineNumber - 1);\n                    const deleteFromColumn = selection.startLineNumber === 1 ? 1 : model.getLineContent(deleteFromLine).length + 1;\n                    return new Range(deleteFromLine, deleteFromColumn, selection.startLineNumber, 1);\n                }\n                else {\n                    return new Range(selection.startLineNumber, 1, selection.startLineNumber, selection.startColumn);\n                }\n            }\n            else {\n                return new Range(selection.startLineNumber, 1, selection.endLineNumber, selection.endColumn);\n            }\n        });\n        return rangesToDelete;\n    }\n}\nexport class DeleteAllRightAction extends AbstractDeleteAllToBoundaryAction {\n    constructor() {\n        super({\n            id: 'deleteAllRight',\n            label: nls.localize('lines.deleteAllRight', \"Delete All Right\"),\n            alias: 'Delete All Right',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 41 /* KeyCode.KeyK */, secondary: [2048 /* KeyMod.CtrlCmd */ | 20 /* KeyCode.Delete */] },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _getEndCursorState(primaryCursor, rangesToDelete) {\n        let endPrimaryCursor = null;\n        const endCursorState = [];\n        for (let i = 0, len = rangesToDelete.length, offset = 0; i < len; i++) {\n            const range = rangesToDelete[i];\n            const endCursor = new Selection(range.startLineNumber - offset, range.startColumn, range.startLineNumber - offset, range.startColumn);\n            if (range.intersectRanges(primaryCursor)) {\n                endPrimaryCursor = endCursor;\n            }\n            else {\n                endCursorState.push(endCursor);\n            }\n        }\n        if (endPrimaryCursor) {\n            endCursorState.unshift(endPrimaryCursor);\n        }\n        return endCursorState;\n    }\n    _getRangesToDelete(editor) {\n        const model = editor.getModel();\n        if (model === null) {\n            return [];\n        }\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return [];\n        }\n        const rangesToDelete = selections.map((sel) => {\n            if (sel.isEmpty()) {\n                const maxColumn = model.getLineMaxColumn(sel.startLineNumber);\n                if (sel.startColumn === maxColumn) {\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber + 1, 1);\n                }\n                else {\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber, maxColumn);\n                }\n            }\n            return sel;\n        });\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\n        return rangesToDelete;\n    }\n}\nexport class JoinLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.joinLines',\n            label: nls.localize('lines.joinLines', \"Join Lines\"),\n            alias: 'Join Lines',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 40 /* KeyCode.KeyJ */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        let primaryCursor = editor.getSelection();\n        if (primaryCursor === null) {\n            return;\n        }\n        selections.sort(Range.compareRangesUsingStarts);\n        const reducedSelections = [];\n        const lastSelection = selections.reduce((previousValue, currentValue) => {\n            if (previousValue.isEmpty()) {\n                if (previousValue.endLineNumber === currentValue.startLineNumber) {\n                    if (primaryCursor.equalsSelection(previousValue)) {\n                        primaryCursor = currentValue;\n                    }\n                    return currentValue;\n                }\n                if (currentValue.startLineNumber > previousValue.endLineNumber + 1) {\n                    reducedSelections.push(previousValue);\n                    return currentValue;\n                }\n                else {\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n                }\n            }\n            else {\n                if (currentValue.startLineNumber > previousValue.endLineNumber) {\n                    reducedSelections.push(previousValue);\n                    return currentValue;\n                }\n                else {\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n                }\n            }\n        });\n        reducedSelections.push(lastSelection);\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const edits = [];\n        const endCursorState = [];\n        let endPrimaryCursor = primaryCursor;\n        let lineOffset = 0;\n        for (let i = 0, len = reducedSelections.length; i < len; i++) {\n            const selection = reducedSelections[i];\n            const startLineNumber = selection.startLineNumber;\n            const startColumn = 1;\n            let columnDeltaOffset = 0;\n            let endLineNumber, endColumn;\n            const selectionEndPositionOffset = model.getLineContent(selection.endLineNumber).length - selection.endColumn;\n            if (selection.isEmpty() || selection.startLineNumber === selection.endLineNumber) {\n                const position = selection.getStartPosition();\n                if (position.lineNumber < model.getLineCount()) {\n                    endLineNumber = startLineNumber + 1;\n                    endColumn = model.getLineMaxColumn(endLineNumber);\n                }\n                else {\n                    endLineNumber = position.lineNumber;\n                    endColumn = model.getLineMaxColumn(position.lineNumber);\n                }\n            }\n            else {\n                endLineNumber = selection.endLineNumber;\n                endColumn = model.getLineMaxColumn(endLineNumber);\n            }\n            let trimmedLinesContent = model.getLineContent(startLineNumber);\n            for (let i = startLineNumber + 1; i <= endLineNumber; i++) {\n                const lineText = model.getLineContent(i);\n                const firstNonWhitespaceIdx = model.getLineFirstNonWhitespaceColumn(i);\n                if (firstNonWhitespaceIdx >= 1) {\n                    let insertSpace = true;\n                    if (trimmedLinesContent === '') {\n                        insertSpace = false;\n                    }\n                    if (insertSpace && (trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === ' ' ||\n                        trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === '\\t')) {\n                        insertSpace = false;\n                        trimmedLinesContent = trimmedLinesContent.replace(/[\\s\\uFEFF\\xA0]+$/g, ' ');\n                    }\n                    const lineTextWithoutIndent = lineText.substr(firstNonWhitespaceIdx - 1);\n                    trimmedLinesContent += (insertSpace ? ' ' : '') + lineTextWithoutIndent;\n                    if (insertSpace) {\n                        columnDeltaOffset = lineTextWithoutIndent.length + 1;\n                    }\n                    else {\n                        columnDeltaOffset = lineTextWithoutIndent.length;\n                    }\n                }\n                else {\n                    columnDeltaOffset = 0;\n                }\n            }\n            const deleteSelection = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n            if (!deleteSelection.isEmpty()) {\n                let resultSelection;\n                if (selection.isEmpty()) {\n                    edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                    resultSelection = new Selection(deleteSelection.startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1, startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1);\n                }\n                else {\n                    if (selection.startLineNumber === selection.endLineNumber) {\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.endLineNumber - lineOffset, selection.endColumn);\n                    }\n                    else {\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.startLineNumber - lineOffset, trimmedLinesContent.length - selectionEndPositionOffset);\n                    }\n                }\n                if (Range.intersectRanges(deleteSelection, primaryCursor) !== null) {\n                    endPrimaryCursor = resultSelection;\n                }\n                else {\n                    endCursorState.push(resultSelection);\n                }\n            }\n            lineOffset += deleteSelection.endLineNumber - deleteSelection.startLineNumber;\n        }\n        endCursorState.unshift(endPrimaryCursor);\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class TransposeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.transpose',\n            label: nls.localize('editor.transpose', \"Transpose characters around the cursor\"),\n            alias: 'Transpose characters around the cursor',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const commands = [];\n        for (let i = 0, len = selections.length; i < len; i++) {\n            const selection = selections[i];\n            if (!selection.isEmpty()) {\n                continue;\n            }\n            const cursor = selection.getStartPosition();\n            const maxColumn = model.getLineMaxColumn(cursor.lineNumber);\n            if (cursor.column >= maxColumn) {\n                if (cursor.lineNumber === model.getLineCount()) {\n                    continue;\n                }\n                // The cursor is at the end of current line and current line is not empty\n                // then we transpose the character before the cursor and the line break if there is any following line.\n                const deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1);\n                const chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n                commands.push(new ReplaceCommand(new Selection(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1), chars));\n            }\n            else {\n                const deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber, cursor.column + 1);\n                const chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n                commands.push(new ReplaceCommandThatPreservesSelection(deleteSelection, chars, new Selection(cursor.lineNumber, cursor.column + 1, cursor.lineNumber, cursor.column + 1)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nexport class AbstractCaseAction extends EditorAction {\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const wordSeparators = editor.getOption(128 /* EditorOption.wordSeparators */);\n        const textEdits = [];\n        for (const selection of selections) {\n            if (selection.isEmpty()) {\n                const cursor = selection.getStartPosition();\n                const word = editor.getConfiguredWordAtPosition(cursor);\n                if (!word) {\n                    continue;\n                }\n                const wordRange = new Range(cursor.lineNumber, word.startColumn, cursor.lineNumber, word.endColumn);\n                const text = model.getValueInRange(wordRange);\n                textEdits.push(EditOperation.replace(wordRange, this._modifyText(text, wordSeparators)));\n            }\n            else {\n                const text = model.getValueInRange(selection);\n                textEdits.push(EditOperation.replace(selection, this._modifyText(text, wordSeparators)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, textEdits);\n        editor.pushUndoStop();\n    }\n}\nexport class UpperCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToUppercase',\n            label: nls.localize('editor.transformToUppercase', \"Transform to Uppercase\"),\n            alias: 'Transform to Uppercase',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        return text.toLocaleUpperCase();\n    }\n}\nexport class LowerCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToLowercase',\n            label: nls.localize('editor.transformToLowercase', \"Transform to Lowercase\"),\n            alias: 'Transform to Lowercase',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        return text.toLocaleLowerCase();\n    }\n}\nclass BackwardsCompatibleRegExp {\n    constructor(_pattern, _flags) {\n        this._pattern = _pattern;\n        this._flags = _flags;\n        this._actual = null;\n        this._evaluated = false;\n    }\n    get() {\n        if (!this._evaluated) {\n            this._evaluated = true;\n            try {\n                this._actual = new RegExp(this._pattern, this._flags);\n            }\n            catch (err) {\n                // this browser does not support this regular expression\n            }\n        }\n        return this._actual;\n    }\n    isSupported() {\n        return (this.get() !== null);\n    }\n}\nexport class TitleCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToTitlecase',\n            label: nls.localize('editor.transformToTitlecase', \"Transform to Title Case\"),\n            alias: 'Transform to Title Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const titleBoundary = TitleCaseAction.titleBoundary.get();\n        if (!titleBoundary) {\n            // cannot support this\n            return text;\n        }\n        return text\n            .toLocaleLowerCase()\n            .replace(titleBoundary, (b) => b.toLocaleUpperCase());\n    }\n}\nTitleCaseAction.titleBoundary = new BackwardsCompatibleRegExp('(^|[^\\\\p{L}\\\\p{N}\\']|((^|\\\\P{L})\\'))\\\\p{L}', 'gmu');\nexport class SnakeCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToSnakecase',\n            label: nls.localize('editor.transformToSnakecase', \"Transform to Snake Case\"),\n            alias: 'Transform to Snake Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const caseBoundary = SnakeCaseAction.caseBoundary.get();\n        const singleLetters = SnakeCaseAction.singleLetters.get();\n        if (!caseBoundary || !singleLetters) {\n            // cannot support this\n            return text;\n        }\n        return (text\n            .replace(caseBoundary, '$1_$2')\n            .replace(singleLetters, '$1_$2$3')\n            .toLocaleLowerCase());\n    }\n}\nSnakeCaseAction.caseBoundary = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\nSnakeCaseAction.singleLetters = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu})(\\\\p{Ll})', 'gmu');\nexport class CamelCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToCamelcase',\n            label: nls.localize('editor.transformToCamelcase', \"Transform to Camel Case\"),\n            alias: 'Transform to Camel Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const wordBoundary = CamelCaseAction.wordBoundary.get();\n        if (!wordBoundary) {\n            // cannot support this\n            return text;\n        }\n        const words = text.split(wordBoundary);\n        const firstWord = words.shift();\n        return firstWord + words.map((word) => word.substring(0, 1).toLocaleUpperCase() + word.substring(1))\n            .join('');\n    }\n}\nCamelCaseAction.wordBoundary = new BackwardsCompatibleRegExp('[_\\\\s-]', 'gm');\nexport class KebabCaseAction extends AbstractCaseAction {\n    static isSupported() {\n        const areAllRegexpsSupported = [\n            this.caseBoundary,\n            this.singleLetters,\n            this.underscoreBoundary,\n        ].every((regexp) => regexp.isSupported());\n        return areAllRegexpsSupported;\n    }\n    constructor() {\n        super({\n            id: 'editor.action.transformToKebabcase',\n            label: nls.localize('editor.transformToKebabcase', 'Transform to Kebab Case'),\n            alias: 'Transform to Kebab Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, _) {\n        const caseBoundary = KebabCaseAction.caseBoundary.get();\n        const singleLetters = KebabCaseAction.singleLetters.get();\n        const underscoreBoundary = KebabCaseAction.underscoreBoundary.get();\n        if (!caseBoundary || !singleLetters || !underscoreBoundary) {\n            // one or more regexps aren't supported\n            return text;\n        }\n        return text\n            .replace(underscoreBoundary, '$1-$3')\n            .replace(caseBoundary, '$1-$2')\n            .replace(singleLetters, '$1-$2')\n            .toLocaleLowerCase();\n    }\n}\nKebabCaseAction.caseBoundary = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\nKebabCaseAction.singleLetters = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu}\\\\p{Ll})', 'gmu');\nKebabCaseAction.underscoreBoundary = new BackwardsCompatibleRegExp('(\\\\S)(_)(\\\\S)', 'gm');\nregisterEditorAction(CopyLinesUpAction);\nregisterEditorAction(CopyLinesDownAction);\nregisterEditorAction(DuplicateSelectionAction);\nregisterEditorAction(MoveLinesUpAction);\nregisterEditorAction(MoveLinesDownAction);\nregisterEditorAction(SortLinesAscendingAction);\nregisterEditorAction(SortLinesDescendingAction);\nregisterEditorAction(DeleteDuplicateLinesAction);\nregisterEditorAction(TrimTrailingWhitespaceAction);\nregisterEditorAction(DeleteLinesAction);\nregisterEditorAction(IndentLinesAction);\nregisterEditorAction(OutdentLinesAction);\nregisterEditorAction(InsertLineBeforeAction);\nregisterEditorAction(InsertLineAfterAction);\nregisterEditorAction(DeleteAllLeftAction);\nregisterEditorAction(DeleteAllRightAction);\nregisterEditorAction(JoinLinesAction);\nregisterEditorAction(TransposeAction);\nregisterEditorAction(UpperCaseAction);\nregisterEditorAction(LowerCaseAction);\nif (SnakeCaseAction.caseBoundary.isSupported() && SnakeCaseAction.singleLetters.isSupported()) {\n    registerEditorAction(SnakeCaseAction);\n}\nif (CamelCaseAction.wordBoundary.isSupported()) {\n    registerEditorAction(CamelCaseAction);\n}\nif (TitleCaseAction.titleBoundary.isSupported()) {\n    registerEditorAction(TitleCaseAction);\n}\nif (KebabCaseAction.isSupported()) {\n    registerEditorAction(KebabCaseAction);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, Delayer, first } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { isCancellationError, onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution, registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport './linkedEditing.css';\nexport const CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE = new RawContextKey('LinkedEditingInputVisible', false);\nconst DECORATION_CLASS_NAME = 'linked-editing-decoration';\nlet LinkedEditingContribution = class LinkedEditingContribution extends Disposable {\n    static get(editor) {\n        return editor.getContribution(LinkedEditingContribution.ID);\n    }\n    constructor(editor, contextKeyService, languageFeaturesService, languageConfigurationService, languageFeatureDebounceService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        this._syncRangesToken = 0;\n        this._localToDispose = this._register(new DisposableStore());\n        this._editor = editor;\n        this._providers = languageFeaturesService.linkedEditingRangeProvider;\n        this._enabled = false;\n        this._visibleContextKey = CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\n        this._debounceInformation = languageFeatureDebounceService.for(this._providers, 'Linked Editing', { max: 200 });\n        this._currentDecorations = this._editor.createDecorationsCollection();\n        this._languageWordPattern = null;\n        this._currentWordPattern = null;\n        this._ignoreChangeEvent = false;\n        this._localToDispose = this._register(new DisposableStore());\n        this._rangeUpdateTriggerPromise = null;\n        this._rangeSyncTriggerPromise = null;\n        this._currentRequest = null;\n        this._currentRequestPosition = null;\n        this._currentRequestModelVersion = null;\n        this._register(this._editor.onDidChangeModel(() => this.reinitialize(true)));\n        this._register(this._editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(68 /* EditorOption.linkedEditing */) || e.hasChanged(91 /* EditorOption.renameOnType */)) {\n                this.reinitialize(false);\n            }\n        }));\n        this._register(this._providers.onDidChange(() => this.reinitialize(false)));\n        this._register(this._editor.onDidChangeModelLanguage(() => this.reinitialize(true)));\n        this.reinitialize(true);\n    }\n    reinitialize(forceRefresh) {\n        const model = this._editor.getModel();\n        const isEnabled = model !== null && (this._editor.getOption(68 /* EditorOption.linkedEditing */) || this._editor.getOption(91 /* EditorOption.renameOnType */)) && this._providers.has(model);\n        if (isEnabled === this._enabled && !forceRefresh) {\n            return;\n        }\n        this._enabled = isEnabled;\n        this.clearRanges();\n        this._localToDispose.clear();\n        if (!isEnabled || model === null) {\n            return;\n        }\n        this._localToDispose.add(Event.runAndSubscribe(model.onDidChangeLanguageConfiguration, () => {\n            this._languageWordPattern = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n        }));\n        const rangeUpdateScheduler = new Delayer(this._debounceInformation.get(model));\n        const triggerRangeUpdate = () => {\n            var _a;\n            this._rangeUpdateTriggerPromise = rangeUpdateScheduler.trigger(() => this.updateRanges(), (_a = this._debounceDuration) !== null && _a !== void 0 ? _a : this._debounceInformation.get(model));\n        };\n        const rangeSyncScheduler = new Delayer(0);\n        const triggerRangeSync = (token) => {\n            this._rangeSyncTriggerPromise = rangeSyncScheduler.trigger(() => this._syncRanges(token));\n        };\n        this._localToDispose.add(this._editor.onDidChangeCursorPosition(() => {\n            triggerRangeUpdate();\n        }));\n        this._localToDispose.add(this._editor.onDidChangeModelContent((e) => {\n            if (!this._ignoreChangeEvent) {\n                if (this._currentDecorations.length > 0) {\n                    const referenceRange = this._currentDecorations.getRange(0);\n                    if (referenceRange && e.changes.every(c => referenceRange.intersectRanges(c.range))) {\n                        triggerRangeSync(this._syncRangesToken);\n                        return;\n                    }\n                }\n            }\n            triggerRangeUpdate();\n        }));\n        this._localToDispose.add({\n            dispose: () => {\n                rangeUpdateScheduler.dispose();\n                rangeSyncScheduler.dispose();\n            }\n        });\n        this.updateRanges();\n    }\n    _syncRanges(token) {\n        // delayed invocation, make sure we're still on\n        if (!this._editor.hasModel() || token !== this._syncRangesToken || this._currentDecorations.length === 0) {\n            // nothing to do\n            return;\n        }\n        const model = this._editor.getModel();\n        const referenceRange = this._currentDecorations.getRange(0);\n        if (!referenceRange || referenceRange.startLineNumber !== referenceRange.endLineNumber) {\n            return this.clearRanges();\n        }\n        const referenceValue = model.getValueInRange(referenceRange);\n        if (this._currentWordPattern) {\n            const match = referenceValue.match(this._currentWordPattern);\n            const matchLength = match ? match[0].length : 0;\n            if (matchLength !== referenceValue.length) {\n                return this.clearRanges();\n            }\n        }\n        const edits = [];\n        for (let i = 1, len = this._currentDecorations.length; i < len; i++) {\n            const mirrorRange = this._currentDecorations.getRange(i);\n            if (!mirrorRange) {\n                continue;\n            }\n            if (mirrorRange.startLineNumber !== mirrorRange.endLineNumber) {\n                edits.push({\n                    range: mirrorRange,\n                    text: referenceValue\n                });\n            }\n            else {\n                let oldValue = model.getValueInRange(mirrorRange);\n                let newValue = referenceValue;\n                let rangeStartColumn = mirrorRange.startColumn;\n                let rangeEndColumn = mirrorRange.endColumn;\n                const commonPrefixLength = strings.commonPrefixLength(oldValue, newValue);\n                rangeStartColumn += commonPrefixLength;\n                oldValue = oldValue.substr(commonPrefixLength);\n                newValue = newValue.substr(commonPrefixLength);\n                const commonSuffixLength = strings.commonSuffixLength(oldValue, newValue);\n                rangeEndColumn -= commonSuffixLength;\n                oldValue = oldValue.substr(0, oldValue.length - commonSuffixLength);\n                newValue = newValue.substr(0, newValue.length - commonSuffixLength);\n                if (rangeStartColumn !== rangeEndColumn || newValue.length !== 0) {\n                    edits.push({\n                        range: new Range(mirrorRange.startLineNumber, rangeStartColumn, mirrorRange.endLineNumber, rangeEndColumn),\n                        text: newValue\n                    });\n                }\n            }\n        }\n        if (edits.length === 0) {\n            return;\n        }\n        try {\n            this._editor.popUndoStop();\n            this._ignoreChangeEvent = true;\n            const prevEditOperationType = this._editor._getViewModel().getPrevEditOperationType();\n            this._editor.executeEdits('linkedEditing', edits);\n            this._editor._getViewModel().setPrevEditOperationType(prevEditOperationType);\n        }\n        finally {\n            this._ignoreChangeEvent = false;\n        }\n    }\n    dispose() {\n        this.clearRanges();\n        super.dispose();\n    }\n    clearRanges() {\n        this._visibleContextKey.set(false);\n        this._currentDecorations.clear();\n        if (this._currentRequest) {\n            this._currentRequest.cancel();\n            this._currentRequest = null;\n            this._currentRequestPosition = null;\n        }\n    }\n    updateRanges(force = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._editor.hasModel()) {\n                this.clearRanges();\n                return;\n            }\n            const position = this._editor.getPosition();\n            if (!this._enabled && !force || this._editor.getSelections().length > 1) {\n                // disabled or multicursor\n                this.clearRanges();\n                return;\n            }\n            const model = this._editor.getModel();\n            const modelVersionId = model.getVersionId();\n            if (this._currentRequestPosition && this._currentRequestModelVersion === modelVersionId) {\n                if (position.equals(this._currentRequestPosition)) {\n                    return; // same position\n                }\n                if (this._currentDecorations.length > 0) {\n                    const range = this._currentDecorations.getRange(0);\n                    if (range && range.containsPosition(position)) {\n                        return; // just moving inside the existing primary range\n                    }\n                }\n            }\n            // Clear existing decorations while we compute new ones\n            this.clearRanges();\n            this._currentRequestPosition = position;\n            this._currentRequestModelVersion = modelVersionId;\n            const request = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const sw = new StopWatch(false);\n                    const response = yield getLinkedEditingRanges(this._providers, model, position, token);\n                    this._debounceInformation.update(model, sw.elapsed());\n                    if (request !== this._currentRequest) {\n                        return;\n                    }\n                    this._currentRequest = null;\n                    if (modelVersionId !== model.getVersionId()) {\n                        return;\n                    }\n                    let ranges = [];\n                    if (response === null || response === void 0 ? void 0 : response.ranges) {\n                        ranges = response.ranges;\n                    }\n                    this._currentWordPattern = (response === null || response === void 0 ? void 0 : response.wordPattern) || this._languageWordPattern;\n                    let foundReferenceRange = false;\n                    for (let i = 0, len = ranges.length; i < len; i++) {\n                        if (Range.containsPosition(ranges[i], position)) {\n                            foundReferenceRange = true;\n                            if (i !== 0) {\n                                const referenceRange = ranges[i];\n                                ranges.splice(i, 1);\n                                ranges.unshift(referenceRange);\n                            }\n                            break;\n                        }\n                    }\n                    if (!foundReferenceRange) {\n                        // Cannot do linked editing if the ranges are not where the cursor is...\n                        this.clearRanges();\n                        return;\n                    }\n                    const decorations = ranges.map(range => ({ range: range, options: LinkedEditingContribution.DECORATION }));\n                    this._visibleContextKey.set(true);\n                    this._currentDecorations.set(decorations);\n                    this._syncRangesToken++; // cancel any pending syncRanges call\n                }\n                catch (err) {\n                    if (!isCancellationError(err)) {\n                        onUnexpectedError(err);\n                    }\n                    if (this._currentRequest === request || !this._currentRequest) {\n                        // stop if we are still the latest request\n                        this.clearRanges();\n                    }\n                }\n            }));\n            this._currentRequest = request;\n            return request;\n        });\n    }\n};\nLinkedEditingContribution.ID = 'editor.contrib.linkedEditing';\nLinkedEditingContribution.DECORATION = ModelDecorationOptions.register({\n    description: 'linked-editing',\n    stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n    className: DECORATION_CLASS_NAME\n});\nLinkedEditingContribution = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, ILanguageFeaturesService),\n    __param(3, ILanguageConfigurationService),\n    __param(4, ILanguageFeatureDebounceService)\n], LinkedEditingContribution);\nexport { LinkedEditingContribution };\nexport class LinkedEditingAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.linkedEditing',\n            label: nls.localize('linkedEditing.label', \"Start Linked Editing\"),\n            alias: 'Start Linked Editing',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 60 /* KeyCode.F2 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    runCommand(accessor, args) {\n        const editorService = accessor.get(ICodeEditorService);\n        const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\n        if (URI.isUri(uri) && Position.isIPosition(pos)) {\n            return editorService.openCodeEditor({ resource: uri }, editorService.getActiveCodeEditor()).then(editor => {\n                if (!editor) {\n                    return;\n                }\n                editor.setPosition(pos);\n                editor.invokeWithinContext(accessor => {\n                    this.reportTelemetry(accessor, editor);\n                    return this.run(accessor, editor);\n                });\n            }, onUnexpectedError);\n        }\n        return super.runCommand(accessor, args);\n    }\n    run(_accessor, editor) {\n        const controller = LinkedEditingContribution.get(editor);\n        if (controller) {\n            return Promise.resolve(controller.updateRanges(true));\n        }\n        return Promise.resolve();\n    }\n}\nconst LinkedEditingCommand = EditorCommand.bindToContribution(LinkedEditingContribution.get);\nregisterEditorCommand(new LinkedEditingCommand({\n    id: 'cancelLinkedEditingInput',\n    precondition: CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE,\n    handler: x => x.clearRanges(),\n    kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nfunction getLinkedEditingRanges(providers, model, position, token) {\n    const orderedByScore = providers.ordered(model);\n    // in order of score ask the linked editing range provider\n    // until someone response with a good result\n    // (good = not null)\n    return first(orderedByScore.map(provider => () => __awaiter(this, void 0, void 0, function* () {\n        try {\n            return yield provider.provideLinkedEditingRanges(model, position, token);\n        }\n        catch (e) {\n            onUnexpectedExternalError(e);\n            return undefined;\n        }\n    })), result => !!result && arrays.isNonEmptyArray(result === null || result === void 0 ? void 0 : result.ranges));\n}\nexport const editorLinkedEditingBackground = registerColor('editor.linkedEditingBackground', { dark: Color.fromHex('#f00').transparent(0.3), light: Color.fromHex('#f00').transparent(0.3), hcDark: Color.fromHex('#f00').transparent(0.3), hcLight: Color.white }, nls.localize('editorLinkedEditingBackground', 'Background color when the editor auto renames on type.'));\nregisterModelAndPositionCommand('_executeLinkedEditingProvider', (_accessor, model, position) => {\n    const { linkedEditingRangeProvider } = _accessor.get(ILanguageFeaturesService);\n    return getLinkedEditingRanges(linkedEditingRangeProvider, model, position, CancellationToken.None);\n});\nregisterEditorContribution(LinkedEditingContribution.ID, LinkedEditingContribution, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nregisterEditorAction(LinkedEditingAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore, isDisposable } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class Link {\n    constructor(link, provider) {\n        this._link = link;\n        this._provider = provider;\n    }\n    toJSON() {\n        return {\n            range: this.range,\n            url: this.url,\n            tooltip: this.tooltip\n        };\n    }\n    get range() {\n        return this._link.range;\n    }\n    get url() {\n        return this._link.url;\n    }\n    get tooltip() {\n        return this._link.tooltip;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._link.url) {\n                return this._link.url;\n            }\n            if (typeof this._provider.resolveLink === 'function') {\n                return Promise.resolve(this._provider.resolveLink(this._link, token)).then(value => {\n                    this._link = value || this._link;\n                    if (this._link.url) {\n                        // recurse\n                        return this.resolve(token);\n                    }\n                    return Promise.reject(new Error('missing'));\n                });\n            }\n            return Promise.reject(new Error('missing'));\n        });\n    }\n}\nexport class LinksList {\n    constructor(tuples) {\n        this._disposables = new DisposableStore();\n        let links = [];\n        for (const [list, provider] of tuples) {\n            // merge all links\n            const newLinks = list.links.map(link => new Link(link, provider));\n            links = LinksList._union(links, newLinks);\n            // register disposables\n            if (isDisposable(list)) {\n                this._disposables.add(list);\n            }\n        }\n        this.links = links;\n    }\n    dispose() {\n        this._disposables.dispose();\n        this.links.length = 0;\n    }\n    static _union(oldLinks, newLinks) {\n        // reunite oldLinks with newLinks and remove duplicates\n        const result = [];\n        let oldIndex;\n        let oldLen;\n        let newIndex;\n        let newLen;\n        for (oldIndex = 0, newIndex = 0, oldLen = oldLinks.length, newLen = newLinks.length; oldIndex < oldLen && newIndex < newLen;) {\n            const oldLink = oldLinks[oldIndex];\n            const newLink = newLinks[newIndex];\n            if (Range.areIntersectingOrTouching(oldLink.range, newLink.range)) {\n                // Remove the oldLink\n                oldIndex++;\n                continue;\n            }\n            const comparisonResult = Range.compareRangesUsingStarts(oldLink.range, newLink.range);\n            if (comparisonResult < 0) {\n                // oldLink is before\n                result.push(oldLink);\n                oldIndex++;\n            }\n            else {\n                // newLink is before\n                result.push(newLink);\n                newIndex++;\n            }\n        }\n        for (; oldIndex < oldLen; oldIndex++) {\n            result.push(oldLinks[oldIndex]);\n        }\n        for (; newIndex < newLen; newIndex++) {\n            result.push(newLinks[newIndex]);\n        }\n        return result;\n    }\n}\nexport function getLinks(providers, model, token) {\n    const lists = [];\n    // ask all providers for links in parallel\n    const promises = providers.ordered(model).reverse().map((provider, i) => {\n        return Promise.resolve(provider.provideLinks(model, token)).then(result => {\n            if (result) {\n                lists[i] = [result, provider];\n            }\n        }, onUnexpectedExternalError);\n    });\n    return Promise.all(promises).then(() => {\n        const result = new LinksList(coalesce(lists));\n        if (!token.isCancellationRequested) {\n            return result;\n        }\n        result.dispose();\n        return new LinksList([]);\n    });\n}\nCommandsRegistry.registerCommand('_executeLinkProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    let [uri, resolveCount] = args;\n    assertType(uri instanceof URI);\n    if (typeof resolveCount !== 'number') {\n        resolveCount = 0;\n    }\n    const { linkProvider } = accessor.get(ILanguageFeaturesService);\n    const model = accessor.get(IModelService).getModel(uri);\n    if (!model) {\n        return [];\n    }\n    const list = yield getLinks(linkProvider, model, CancellationToken.None);\n    if (!list) {\n        return [];\n    }\n    // resolve links\n    for (let i = 0; i < Math.min(resolveCount, list.links.length); i++) {\n        yield list.links[i].resolve(CancellationToken.None);\n    }\n    const result = list.links.slice(0);\n    list.dispose();\n    return result;\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as resources from '../../../../base/common/resources.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport './links.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { getLinks } from './getLinks.js';\nimport * as nls from '../../../../nls.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nlet LinkDetector = class LinkDetector extends Disposable {\n    static get(editor) {\n        return editor.getContribution(LinkDetector.ID);\n    }\n    constructor(editor, openerService, notificationService, languageFeaturesService, languageFeatureDebounceService) {\n        super();\n        this.editor = editor;\n        this.openerService = openerService;\n        this.notificationService = notificationService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.providers = this.languageFeaturesService.linkProvider;\n        this.debounceInformation = languageFeatureDebounceService.for(this.providers, 'Links', { min: 1000, max: 4000 });\n        this.computeLinks = this._register(new RunOnceScheduler(() => this.computeLinksNow(), 1000));\n        this.computePromise = null;\n        this.activeLinksList = null;\n        this.currentOccurrences = {};\n        this.activeLinkDecorationId = null;\n        const clickLinkGesture = this._register(new ClickLinkGesture(editor));\n        this._register(clickLinkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent]) => {\n            this._onEditorMouseMove(mouseEvent, keyboardEvent);\n        }));\n        this._register(clickLinkGesture.onExecute((e) => {\n            this.onEditorMouseUp(e);\n        }));\n        this._register(clickLinkGesture.onCancel((e) => {\n            this.cleanUpActiveLinkDecoration();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!e.hasChanged(69 /* EditorOption.links */)) {\n                return;\n            }\n            // Remove any links (for the getting disabled case)\n            this.updateDecorations([]);\n            // Stop any computation (for the getting disabled case)\n            this.stop();\n            // Start computing (for the getting enabled case)\n            this.computeLinks.schedule(0);\n        }));\n        this._register(editor.onDidChangeModelContent((e) => {\n            if (!this.editor.hasModel()) {\n                return;\n            }\n            this.computeLinks.schedule(this.debounceInformation.get(this.editor.getModel()));\n        }));\n        this._register(editor.onDidChangeModel((e) => {\n            this.currentOccurrences = {};\n            this.activeLinkDecorationId = null;\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this._register(editor.onDidChangeModelLanguage((e) => {\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this._register(this.providers.onDidChange((e) => {\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this.computeLinks.schedule(0);\n    }\n    computeLinksNow() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.editor.hasModel() || !this.editor.getOption(69 /* EditorOption.links */)) {\n                return;\n            }\n            const model = this.editor.getModel();\n            if (!this.providers.has(model)) {\n                return;\n            }\n            if (this.activeLinksList) {\n                this.activeLinksList.dispose();\n                this.activeLinksList = null;\n            }\n            this.computePromise = createCancelablePromise(token => getLinks(this.providers, model, token));\n            try {\n                const sw = new StopWatch(false);\n                this.activeLinksList = yield this.computePromise;\n                this.debounceInformation.update(model, sw.elapsed());\n                if (model.isDisposed()) {\n                    return;\n                }\n                this.updateDecorations(this.activeLinksList.links);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                this.computePromise = null;\n            }\n        });\n    }\n    updateDecorations(links) {\n        const useMetaKey = (this.editor.getOption(76 /* EditorOption.multiCursorModifier */) === 'altKey');\n        const oldDecorations = [];\n        const keys = Object.keys(this.currentOccurrences);\n        for (const decorationId of keys) {\n            const occurence = this.currentOccurrences[decorationId];\n            oldDecorations.push(occurence.decorationId);\n        }\n        const newDecorations = [];\n        if (links) {\n            // Not sure why this is sometimes null\n            for (const link of links) {\n                newDecorations.push(LinkOccurrence.decoration(link, useMetaKey));\n            }\n        }\n        this.editor.changeDecorations((changeAccessor) => {\n            const decorations = changeAccessor.deltaDecorations(oldDecorations, newDecorations);\n            this.currentOccurrences = {};\n            this.activeLinkDecorationId = null;\n            for (let i = 0, len = decorations.length; i < len; i++) {\n                const occurence = new LinkOccurrence(links[i], decorations[i]);\n                this.currentOccurrences[occurence.decorationId] = occurence;\n            }\n        });\n    }\n    _onEditorMouseMove(mouseEvent, withKey) {\n        const useMetaKey = (this.editor.getOption(76 /* EditorOption.multiCursorModifier */) === 'altKey');\n        if (this.isEnabled(mouseEvent, withKey)) {\n            this.cleanUpActiveLinkDecoration(); // always remove previous link decoration as their can only be one\n            const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\n            if (occurrence) {\n                this.editor.changeDecorations((changeAccessor) => {\n                    occurrence.activate(changeAccessor, useMetaKey);\n                    this.activeLinkDecorationId = occurrence.decorationId;\n                });\n            }\n        }\n        else {\n            this.cleanUpActiveLinkDecoration();\n        }\n    }\n    cleanUpActiveLinkDecoration() {\n        const useMetaKey = (this.editor.getOption(76 /* EditorOption.multiCursorModifier */) === 'altKey');\n        if (this.activeLinkDecorationId) {\n            const occurrence = this.currentOccurrences[this.activeLinkDecorationId];\n            if (occurrence) {\n                this.editor.changeDecorations((changeAccessor) => {\n                    occurrence.deactivate(changeAccessor, useMetaKey);\n                });\n            }\n            this.activeLinkDecorationId = null;\n        }\n    }\n    onEditorMouseUp(mouseEvent) {\n        if (!this.isEnabled(mouseEvent)) {\n            return;\n        }\n        const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\n        if (!occurrence) {\n            return;\n        }\n        this.openLinkOccurrence(occurrence, mouseEvent.hasSideBySideModifier, true /* from user gesture */);\n    }\n    openLinkOccurrence(occurrence, openToSide, fromUserGesture = false) {\n        if (!this.openerService) {\n            return;\n        }\n        const { link } = occurrence;\n        link.resolve(CancellationToken.None).then(uri => {\n            // Support for relative file URIs of the shape file://./relativeFile.txt or file:///./relativeFile.txt\n            if (typeof uri === 'string' && this.editor.hasModel()) {\n                const modelUri = this.editor.getModel().uri;\n                if (modelUri.scheme === Schemas.file && uri.startsWith(`${Schemas.file}:`)) {\n                    const parsedUri = URI.parse(uri);\n                    if (parsedUri.scheme === Schemas.file) {\n                        const fsPath = resources.originalFSPath(parsedUri);\n                        let relativePath = null;\n                        if (fsPath.startsWith('/./')) {\n                            relativePath = `.${fsPath.substr(1)}`;\n                        }\n                        else if (fsPath.startsWith('//./')) {\n                            relativePath = `.${fsPath.substr(2)}`;\n                        }\n                        if (relativePath) {\n                            uri = resources.joinPath(modelUri, relativePath);\n                        }\n                    }\n                }\n            }\n            return this.openerService.open(uri, { openToSide, fromUserGesture, allowContributedOpeners: true, allowCommands: true, fromWorkspace: true });\n        }, err => {\n            const messageOrError = err instanceof Error ? err.message : err;\n            // different error cases\n            if (messageOrError === 'invalid') {\n                this.notificationService.warn(nls.localize('invalid.url', 'Failed to open this link because it is not well-formed: {0}', link.url.toString()));\n            }\n            else if (messageOrError === 'missing') {\n                this.notificationService.warn(nls.localize('missing.url', 'Failed to open this link because its target is missing.'));\n            }\n            else {\n                onUnexpectedError(err);\n            }\n        });\n    }\n    getLinkOccurrence(position) {\n        if (!this.editor.hasModel() || !position) {\n            return null;\n        }\n        const decorations = this.editor.getModel().getDecorationsInRange({\n            startLineNumber: position.lineNumber,\n            startColumn: position.column,\n            endLineNumber: position.lineNumber,\n            endColumn: position.column\n        }, 0, true);\n        for (const decoration of decorations) {\n            const currentOccurrence = this.currentOccurrences[decoration.id];\n            if (currentOccurrence) {\n                return currentOccurrence;\n            }\n        }\n        return null;\n    }\n    isEnabled(mouseEvent, withKey) {\n        return Boolean((mouseEvent.target.type === 6 /* MouseTargetType.CONTENT_TEXT */)\n            && (mouseEvent.hasTriggerModifier || (withKey && withKey.keyCodeIsTriggerKey)));\n    }\n    stop() {\n        var _a;\n        this.computeLinks.cancel();\n        if (this.activeLinksList) {\n            (_a = this.activeLinksList) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.activeLinksList = null;\n        }\n        if (this.computePromise) {\n            this.computePromise.cancel();\n            this.computePromise = null;\n        }\n    }\n    dispose() {\n        super.dispose();\n        this.stop();\n    }\n};\nLinkDetector.ID = 'editor.linkDetector';\nLinkDetector = __decorate([\n    __param(1, IOpenerService),\n    __param(2, INotificationService),\n    __param(3, ILanguageFeaturesService),\n    __param(4, ILanguageFeatureDebounceService)\n], LinkDetector);\nexport { LinkDetector };\nconst decoration = {\n    general: ModelDecorationOptions.register({\n        description: 'detected-link',\n        stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n        collapseOnReplaceEdit: true,\n        inlineClassName: 'detected-link'\n    }),\n    active: ModelDecorationOptions.register({\n        description: 'detected-link-active',\n        stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n        collapseOnReplaceEdit: true,\n        inlineClassName: 'detected-link-active'\n    })\n};\nclass LinkOccurrence {\n    static decoration(link, useMetaKey) {\n        return {\n            range: link.range,\n            options: LinkOccurrence._getOptions(link, useMetaKey, false)\n        };\n    }\n    static _getOptions(link, useMetaKey, isActive) {\n        const options = Object.assign({}, (isActive ? decoration.active : decoration.general));\n        options.hoverMessage = getHoverMessage(link, useMetaKey);\n        return options;\n    }\n    constructor(link, decorationId) {\n        this.link = link;\n        this.decorationId = decorationId;\n    }\n    activate(changeAccessor, useMetaKey) {\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, true));\n    }\n    deactivate(changeAccessor, useMetaKey) {\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, false));\n    }\n}\nfunction getHoverMessage(link, useMetaKey) {\n    const executeCmd = link.url && /^command:/i.test(link.url.toString());\n    const label = link.tooltip\n        ? link.tooltip\n        : executeCmd\n            ? nls.localize('links.navigate.executeCmd', 'Execute command')\n            : nls.localize('links.navigate.follow', 'Follow link');\n    const kb = useMetaKey\n        ? platform.isMacintosh\n            ? nls.localize('links.navigate.kb.meta.mac', \"cmd + click\")\n            : nls.localize('links.navigate.kb.meta', \"ctrl + click\")\n        : platform.isMacintosh\n            ? nls.localize('links.navigate.kb.alt.mac', \"option + click\")\n            : nls.localize('links.navigate.kb.alt', \"alt + click\");\n    if (link.url) {\n        let nativeLabel = '';\n        if (/^command:/i.test(link.url.toString())) {\n            // Don't show complete command arguments in the native tooltip\n            const match = link.url.toString().match(/^command:([^?#]+)/);\n            if (match) {\n                const commandId = match[1];\n                nativeLabel = nls.localize('tooltip.explanation', \"Execute command {0}\", commandId);\n            }\n        }\n        const hoverMessage = new MarkdownString('', true)\n            .appendLink(link.url.toString(true).replace(/ /g, '%20'), label, nativeLabel)\n            .appendMarkdown(` (${kb})`);\n        return hoverMessage;\n    }\n    else {\n        return new MarkdownString().appendText(`${label} (${kb})`);\n    }\n}\nclass OpenLinkAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.openLink',\n            label: nls.localize('label', \"Open Link\"),\n            alias: 'Open Link',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const linkDetector = LinkDetector.get(editor);\n        if (!linkDetector) {\n            return;\n        }\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections();\n        for (const sel of selections) {\n            const link = linkDetector.getLinkOccurrence(sel.getEndPosition());\n            if (link) {\n                linkDetector.openLinkOccurrence(link, false);\n            }\n        }\n    }\n}\nregisterEditorContribution(LinkDetector.ID, LinkDetector, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nregisterEditorAction(OpenLinkAction);\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","InlayHintAnchor","_createClass","range","direction","_classCallCheck","this","InlayHintItem","hint","anchor","provider","_isResolved","key","delta","_currentResolve","token","_regeneratorRuntime","mark","_callee","_this","wrap","_context","prev","resolveInlayHint","abrupt","isCancellationRequested","_doResolve","finally","undefined","stop","_a","_b","_callee2","newHint","_context2","sent","tooltip","label","t0","onUnexpectedExternalError","InlayHintsFragments","ranges","data","model","_disposables","DisposableStore","Set","_step","items","_iterator","_createForOfIteratorHelper","s","n","_step$value","_slicedToArray","list","add","_step2","_iterator2","hints","position","validatePosition","wordRange","_getRangeAtPosition","getStartPosition","isBefore","Range","fromPositions","getEndPosition","push","err","f","sort","a","b","Position","compare","dispose","registry","_callee4","promises","_this2","_context4","ordered","reverse","map","_callee3","_context3","provideInlayHints","length","all","flat","isDisposed","CancellationError","line","lineNumber","word","getWordAtPosition","startColumn","endColumn","tokenization","tokenizeIfCheap","tokens","getLineTokens","offset","column","idx","findTokenIndexAtOffset","start","getStartOffset","end","getEndOffset","getCount","__decorate","decorators","target","desc","d","c","arguments","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","InlayHintsCache","_entries","LRUCache","_key","get","set","concat","uri","toString","getVersionId","IInlayHintsCache","createDecorator","registerSingleton","RenderedInlayHintLabelPart","item","index","ActiveInlayHintInfo","part","hasTriggerModifier","InlayHintsController","_editor","_languageFeaturesService","_featureDebounce","_inlayHintsCache","_commandService","_notificationService","_instaService","_sessionDisposables","_decorationsMetadata","Map","_ruleFactory","DynamicCssRules","_activeRenderMode","_debounceInfo","for","inlayHintsProvider","min","onDidChange","_update","onDidChangeModel","onDidChangeModelLanguage","onDidChangeConfiguration","hasChanged","_removeAllDecorations","clear","options","getOption","enabled","getModel","has","cts","cached","_updateHintsDecorators","getFullModelRange","toDisposable","_cacheHintsForFastRestore","defaultMode","altMode","watchedProviders","scheduler","RunOnceScheduler","t1","listener","myToken","inlayHints","Date","now","CancellationTokenSource","onWillDispose","cancel","create","_getHintsRanges","delay","update","onDidChangeInlayHints","isScheduled","schedule","onUnexpectedError","finish","onDidScrollChange","scrollTopChanged","onDidChangeModelContent","Math","max","ModifierKeyEmitter","getInstance","event","hasModel","newRenderMode","altKey","ctrlKey","shiftKey","metaKey","copies","_copyInlayHintsWithCurrentAnchor","_installDblClickGesture","_installLinkGesture","_installContextMenu","_this3","store","gesture","ClickLinkGesture","sessionStore","onMouseMoveOrRelevantKeyDown","mouseEvent","labelPart","_getInlayHintLabelPart","_activeInlayHintPart","command","location","getLineMaxColumn","lineHints","_getInlineHintsForRange","onCancel","onExecute","invokeFunction","goToDefinitionWithLocation","languages","is","_invokeCommand","values","containsRange","Array","from","updateInlayHints","_this4","onMouseUp","edits","detail","preventDefault","CancellationToken","None","isNonEmptyArray","textEdits","edit","EditOperation","replace","lift","text","executeEdits","_this5","onContextMenu","HTMLElement","showGoToContextMenu","type","injectedText","ModelDecorationInjectedTextOptions","attachedData","_callee5","_this$_commandService","_context5","executeCommand","id","_toConsumableArray","notify","severity","Severity","Error","source","displayName","message","_step3","_iterator3","_step3$value","obj","getDecorationRange","copy","with","_step4","visibleRanges","getVisibleRangesPlusViewportAboveBelow","_iterator4","compareRangesUsingStarts","extendedRange","validateRange","startLineNumber","endLineNumber","areIntersectingOrTouching","plusRange","_this6","newDecorationsData","addInjectedText","ref","content","cursorStops","opts","inlineClassNameAffectsLetterSpacing","inlineClassName","className","classNameRef","decoration","_defineProperty","description","showIfCollapsed","isEmpty","collapseOnReplaceEdit","stickiness","addInjectedWhitespace","isLast","marginRule","createClassNameRef","width","fontSize","display","InjectedTextCursorStops","Right","_this$_getLayoutInfo","_getLayoutInfo","fontFamily","padding","isUniform","fontFamilyVar","getContainerDomNode","style","setProperty","_step5","_iterator5","paddingLeft","parts","isFirst","cssProperties","EDITOR_FONT_DEFAULTS","verticalAlign","unicodeBidi","cursor","_fillInColors","textDecoration","color","themeColorFromId","colors","borderRadius","fixSpace","paddingRight","_MAX_DECORATORS","_step6","decorationIdsToReplace","_iterator6","_step7","_iterator7","getDecorationsInRange","metadata","delete","scrollState","StableEditorScrollState","capture","changeDecorations","accessor","newDecorationIds","deltaDecorations","restore","props","kind","Parameter","backgroundColor","Type","editorFontSize","editorFontFamily","removeDecorations","keys","_step8","_iterator8","editor","getContribution","ID","str","ILanguageFeaturesService","ILanguageFeatureDebounceService","ICommandService","INotificationService","IInstantiationService","CommandsRegistry","registerCommand","_len","args","_key2","_callee6","_accessor$get","_context6","assertType","URI","isUri","isIRange","ITextModelService","createModelReference","object","textEditorModel","setTimeout","__asyncValues","o","Symbol","asyncIterator","TypeError","m","call","__values","iterator","verb","v","settle","InlayHintsHoverAnchor","_HoverForeignElementA","_inherits","_super","_createSuper","owner","initialMousePosX","initialMousePosY","HoverForeignElementAnchor","InlayHintsHover","_MarkdownHoverPartici","_super2","languageService","openerService","configurationService","_resolverService","languageFeaturesService","hoverOrdinal","posx","posy","_lineDecorations","AsyncIterableObject","executor","e_1","_c","itemTooltip","partTooltip","linkHint","useMetaKey","kb","iterable","_d","iterable_1","iterable_1_1","MarkdownString","appendText","emitOne","MarkdownHover","localize","platform","scheme","Schemas","path","query","encodeURIComponent","JSON","stringify","title","isTrusted","_resolveInlayHintLabelPartHover","error","return","EMPTY","_part$part$location","hoverProvider","getHover","filter","isEmptyMarkdownString","hover","contents","ordinal","MarkdownHoverParticipant","ILanguageService","IOpenerService","IConfigurationService","registerEditorContribution","HoverParticipantRegistry","register","resolverService","contextMenuService","commandService","instaService","notificationService","menuActions","_loop","useShadowDOM","IContextMenuService","MenuRegistry","getMenuItems","MenuId","EditorContext","isIMenuItem","generateUuid","SymbolNavigationAction","delegate","Action","MenuItemAction","renderShortTitle","symbolAnchor","SymbolNavigationAnchor","runEditorCommand","bind","delegateYield","Separator","showContextMenu","domForShadowRoot","getDomNode","getAnchor","box","dom","x","left","y","top","height","getActions","onHide","focus","autoSelectFirstItem","invokeWithinContext","openToSide","contextKeyService","isInPeek","canPeek","action","hasSideBySideModifier","IContextKeyService","PeekContext","inPeekEditor","getValue","DefinitionAction","openInPeek","muteMessage","original","precondition","run","inlineSuggestCommitId","showPreviousInlineSuggestionActionId","showNextInlineSuggestionActionId","InlineCompletionContextKeys","_Disposable","inlineCompletionVisible","inlineSuggestionVisible","bindTo","inlineCompletionSuggestsIndentation","inlineSuggestionHasIndentation","inlineCompletionSuggestsIndentationLessThanTabSize","inlineSuggestionHasIndentationLessThanTabSize","suppressSuggestions","_register","autorun","reader","read","state","isInlineCompletionVisible","inlineCompletion","ghostText","inlineCompletions","startsWithIndentation","startsWithIndentationLessThanTabSize","selectedSuggestItem","_ghostText$parts$","firstLine","lines","textModel","getLineIndentColumn","firstNonWsIdx","firstNonWhitespaceIndex","tabSize","getOptions","CursorColumns","visibleColumnFromColumn","Disposable","RawContextKey","PositionOffsetTransformer","lineStartOffsetByLineIdx","charAt","array","ColumnRange","endColumnExclusive","BugIndicatingError","addPositions","pos1","pos2","lengthOfText","GhostText","lineText","lastPart","transformer","offsetEdits","startOffset","getOffset","endOffset","substring","applyEdits","substr","p","join","every","reduce","GhostTextPart","preview","GhostTextReplacement","columnRange","newLines","additionalReservedLineCount","_lineText","GhostTextWidget","observableValue","currentTextModel","observableFromEvent","uiState","derived","targetTextModel","replacedRange","inlineTexts","additionalLines","textBufferLine","getLineContent","hiddenTextStartColumn","lastIdx","slice","addToAdditionalLines","hiddenRange","minReservedLineCount","lastLine","decorations","LineDecoration","toRange","after","Left","additionalLinesWidget","AdditionalLinesWidget","languageIdCodec","decorationsCollection","createDecorationsCollection","debugName","applyObservableDecorations","viewZoneId","_Disposable2","_viewZoneId","editorOptionsChanged","observableSignalFromEvent","Event","updateLines","_get","_getPrototypeOf","prototype","changeViewZones","changeAccessor","removeZone","heightInLines","domNode","document","createElement","disableMonospaceOptimizations","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","fontInfo","lineHeight","sb","StringBuilder","appendString","len","lineData","String","isBasicASCII","strings","containsRTL","lineTokens","LineTokens","createEmpty","renderViewLine","RenderLineInput","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","EditorFontLigatures","OFF","applyFontInfo","html","build","trustedhtml","ttPolicy","createHTML","innerHTML","renderLines","addZone","afterLineNumber","afterColumnAffinity","createTrustedTypesPolicy","SingleTextEdit","validModelRange","modelRange","intersectRanges","valueToReplace","getValueInRange","commonPrefixLen","commonPrefixLength","base","startsWith","extendingRange","rangeToExtend","equals","isBeforeOrEqual","mode","cursorPosition","previewSuffixLength","removeCommonPrefix","sourceLine","sourceIndentationLength","getLeadingWhitespace","suggestionAddedIndentationLength","replacedIndentation","_ref","startPosition","endPosition","newStartPosition","rangeThatDoesNotReplaceIndentation","suggestionWithoutIndentationChange","valueToBeReplaced","changes","originalValue","newValue","lastRequest","smartDiff","deletedChars","deletedCharacters","newChanges","cachingDiff","filteredChanges","originalLength","originalStart","previewStartInCompletionText","insertColumn","modifiedLength","modifiedEnd","modifiedStart","nonPreviewTextEnd","nonPreviewText","italicText","splitLines","sum","smartBracketMatching","maxCharCode","getMaxCharCode","elements1","getElements","elements2","LcsDiff","ComputeDiff","val","charCode","charCodeAt","getUniqueCharCode","level","group","characters","Int32Array","provideInlineCompletions","context","languageConfigurationService","defaultReplaceRange","providers","multiMap","getPreferredProviders","states","seen","findPreferredProviderCircle","processProvider","providerResults","itemsByHash","lists","completions","inlineCompletionItem","circle","deferredPromise","DeferredPromise","preferred","complete","stack","yieldsToGroupIds","groupId","getDefaultRange","SetMap","InlineCompletionList","InlineCompletionItem","hash","InlineCompletionProviderResult","hashs","removeRef","refCount","freeInlineCompletions","filterText","insertText","snippetInfo","additionalTextEdits","sourceInlineCompletion","updatedRange","completeBracketPairs","diff","closeBrackets","preBracketCompletionLength","snippet","SnippetParser","parse","children","Text","assertNever","maxColumn","newLine","newTokens","tokenizeLineWithEdit","slicedTokens","sliceAndInflate","fixBracketsInLine","InlineCompletionsSource","versionId","_debounceValue","_updateOperation","MutableDisposable","disposableObservableValue","suggestWidgetInlineCompletions","onDidChangeContent","activeInlineCompletion","request","UpdateRequest","selectedSuggestionInfo","satisfies","promise","updateOngoing","startTime","updatedCompletions","endTime","asInlineCompletion","triggerKind","InlineCompletionTriggerKind","Automatic","wait","inlineCompletionsProvider","getTime","UpToDateInlineCompletions","toInlineCompletion","canBeReused","prepend","transaction","tx","updateOperation","UpdateOperation","ms","cancellationToken","handle","onCancellationRequested","clearTimeout","ILanguageConfigurationService","other","v1","v2","Explicit","cancellationTokenSource","inlineCompletionProviderResult","_refCount","_prependedInlineCompletionItems","_rangeVersionIdValue","_rangeVersionId","changed","_inlineCompletions","_updateRange","ids","InlineCompletionWithUpdatedRange","decorationId","addRefToSource","addRef","unshift","rangeVersion","initialRange","semanticId","_isValid","_updatedRange","enableForwardStability","withRange","_getUpdatedRange","minimizedReplacement","_toFilterTextReplacement","toLowerCase","cursorPosIndex","filterTextBefore","filterTextAfter","originalValueBefore","originalValueAfter","originalValueIndent","trimStart","matchesSubString","containsPosition","isVisible","_isSmallerThanOriginal","equalsRange","VersionIdChangeReason","InlineCompletionsModel","textModelVersionId","_suggestPreviewEnabled","_suggestPreviewMode","_inlineSuggestMode","_enabled","_instantiationService","_languageConfigurationService","_source","createInstance","_isActive","_forceUpdate","observableSignal","_selectedInlineCompletionId","_isAcceptingPartially","_preserveCurrentCompletionReasons","Redo","Undo","AcceptWord","_fetchInlineCompletions","derivedHandleChanges","createEmptyChangeSummary","preserveCurrentCompletion","inlineCompletionTriggerKind","handleChange","ctx","changeSummary","didChange","change","itemToPreserveCandidate","selectedInlineCompletion","itemToPreserve","forwardStable","suggestItem","clone","clearSuggestWidgetInlineCompletions","toSelectedSuggestionInfo","fetch","cancelUpdate","_filteredInlineCompletionItems","filteredCompletions","selectedInlineCompletionIndex","selectedInlineCompletionId","findIndex","lastTriggerKind","inlineCompletionsCount","candidateInlineCompletions","isDefined","suggestCompletion","toSingleTextEdit","augmentedCompletion","mapFind","completion","augments","editPreviewLength","newGhostText","computeGhostText","replacement","keepAlive","lastItem","src","handleItemDidShow","subtransaction","trigger","newIdx","triggerExplicitly","_deltaSelectedInlineCompletionIndex","pushUndoStop","replaceMove","setPosition","SnippetController2","insert","undoStopBefore","_callee7","_context7","_acceptNext","pos","langId","getLanguageIdAtPosition","config","getLanguageConfiguration","wordRegExp","RegExp","wordDefinition","flags","m1","match","acceptUntilIndexExclusive","m2","exec","_callee8","_context8","getAcceptUntilIndex","_callee9","firstPart","partialText","acceptedRange","_context9","accept","handlePartialAccept","SuggestWidgetAdaptor","suggestControllerPreselector","checkModelVersion","isSuggestWidgetVisible","isShiftKeyPressed","_currentSuggestItemInfo","_selectedItem","onKeyDown","onKeyUp","suggestController","SuggestController","registerSelector","priority","select","suggestItems","itemToPreselect","candidates","suggestItemTextEdit","SuggestItemInfo","fromSuggestion","valid","prefixLength","findMaxBy","compareBy","numberComparator","isBoundToSuggestWidget","once","onDidTrigger","widget","onDidShow","onDidHide","onDidFocus","newActive","newInlineCompletion","getSuggestItemInfo","suggestItemInfoEquals","focusedItem","getFocusedItem","getPosition","stopForceRenderingAbove","forceRenderingAbove","completionItemKind","isSnippetText","SelectedSuggestionInfo","toggleMode","insertTextRules","SnippetSession","adjustWhitespace","info","getOverwriteInfo","overwriteBefore","overwriteAfter","InlineCompletionsController","instantiationService","debounceService","audioCueService","suggestWidgetAdaptor","updateObservables","Other","ghostTextWidget","constObservable","runAndSubscribe","selectedItem","previewMode","isUndoing","isRedoing","isAcceptingPartially","getReason","onDidChangeCursorPosition","reason","onDidType","onDidExecuteCommand","CoreEditingCommands","Tab","DeleteLeft","DeleteRight","commandId","hasTextFocus","onDidBlurEditorWidget","keepOnBlur","InlineSuggestionHintsContentWidget","dropDownVisible","lineCount","lastInlineCompletionId","playAudioCue","AudioCue","inlineSuggestion","alert","renderForScreenReader","InlineCompletionsHintsWidget","changeReason","newModel","some","ownsViewZone","IAudioCueService","ShowNextInlineSuggestionAction","_EditorAction","nls","alias","ContextKeyExpr","and","EditorContextKeys","writable","kbOpts","weight","primary","controller","EditorAction","ShowPreviousInlineSuggestionAction","_EditorAction2","previous","TriggerInlineSuggestionAction","_EditorAction3","_super3","AcceptNextWordOfInlineCompletion","_EditorAction4","_super4","kbExpr","menuOpts","menuId","InlineSuggestionToolbar","order","acceptNextWord","AcceptNextLineOfInlineCompletion","_EditorAction5","_super5","acceptNextLine","AcceptInlineCompletion","_EditorAction6","_super6","tabMovesFocus","toNegated","SuggestContext","Visible","HideInlineCompletion","_EditorAction7","_super7","ToggleAlwaysShowInlineSuggestionToolbar","_Action","_super8","f1","menu","toggled","configService","currentValue","updateValue","Action2","InlineCompletionsHover","InlineCompletionsHoverParticipant","_languageService","_openerService","accessibilityService","_telemetryService","viewZoneData","shouldShowHoverAtViewZone","positionBefore","shouldShowHoverAt","mightBeForeignElement","lineDecorations","showToolbar","hoverParts","disposableStore","publicLog2","isScreenReaderOptimized","renderScreenReaderText","w","commands","fragment","appendChild","$","markdownHoverElement","hoverContentsElement","append","renderer","MarkdownRenderer","code","onDidRenderAsync","onContentsChanged","inlineSuggestionAvailable","renderedContents","render","appendCodeblock","replaceChildren","element","reset","IAccessibilityService","ITelemetryService","registerEditorAction","registerAction2","alwaysShowToolbar","sessionPosition","firstColumn","Number","MAX_SAFE_INTEGER","autorunWithStore2","contentWidget","addContentWidget","removeContentWidget","inlineSuggestionHintsNextIcon","registerIcon","Codicon","chevronRight","inlineSuggestionHintsPreviousIcon","chevronLeft","withBorder","_position","_currentSuggestionIdx","_suggestionCount","_extraCommands","keybindingService","_contextKeyService","_menuService","allowEditorOverflow","suppressMouseDown","nodes","h","previousAction","createCommandAction","ThemeIcon","asClassName","availableSuggestionCountAction","nextAction","inlineCompletionsActionsMenus","createMenu","InlineCompletionsActions","clearAvailableSuggestionCountLabelDebounced","disableButtonsDebounced","lastCommands","actionBar","ActionBar","icon","toolBar","CustomizedMenuWorkbenchToolBar","menuOptions","toolbarOptions","primaryGroup","g","actionViewItemProvider","StatusBarViewItem","telemetrySource","onDidChangeDropdownVisibility","_dropDownVisible","layoutContentWidget","_assertThisInitialized","suggestionCount","currentSuggestionIdx","extraCommands","extraActions","class","setAdditionalSecondaryActions","iconClassName","lookupKeybinding","comment","getLabel","root","preference","positionAffinity","IKeybindingService","IMenuService","_MenuEntryActionViewI","_keybindingService","_action","div","KeybindingLabel","OS","assign","disableTitle","unthemedKeybindingLabelOptions","textContent","classList","MenuEntryActionViewItem","_WorkbenchToolBar","container","options2","menuService","telemetryService","resetMenu","_store","emitEventsForSubmenuChanges","additionalActions","updateToolbar","_e","_f","_g","secondary","createAndFillInActionBarActions","shouldInlineSubmenu","useSeparatorsInPrimaryActions","setActions","actions","WorkbenchToolBar","inlineProgressDecoration","ModelDecorationOptions","noBreakWhitespace","InlineProgressWidget","typeId","_iconElement$classLis","role","iconElement","asClassNameArray","loading","updateSize","ceil","addDisposableListener","EventType","CLICK","baseId","InlineProgressManager","_showDelay","_showPromise","_currentWidget","_operationIdPool","_currentDecorations","operationId","_currentOperation","disposableTimeout","ExpandLineSelectionAction","textInputFocus","_accessor","viewModel","_getViewModel","pushStackElement","setCursorStates","CursorMoveCommands","expandLineSelection","getCursorStates","revealPrimaryCursor","CopyLinesCommand","selection","isCopyingDown","noop","_selection","_isCopyingDown","_noop","_selectionDirection","_selectionId","_startLineNumberDelta","_endLineNumberDelta","builder","setEndPosition","sourceLines","sourceText","addEditOperation","getLineCount","trackSelection","getDirection","helper","getTrackedSelection","Selection","createWithDirection","MoveLinesCommand","isMovingDown","autoIndent","_isMovingDown","_autoIndent","_moveEndLineSelectionShrink","modelLineCount","_moveEndPositionDown","_model$getOptions","indentSize","insertSpaces","indentConverter","buildIndentConverter","virtualModel","getLanguageId","otherLineNumber","movingLineNumber","movingLineText","insertingText","shouldAutoIndent","movingLineMatchResult","matchEnterRule","oldIndentation","newSpaceCnt","indentUtils","newIndentation","trimLeft","indentOfMovingLine","getGoodIndentForLine","ret","matchEnterRuleMovingDown","getIndentEditsOfMovingBlock","newIndentatOfMovingBlock","oldSpaceCnt","spaceCntOffset","indentOfFirstLine","oldIndent","shiftIndent","indentation","ShiftCommand","unshiftIndent","enter","enterPrefix","indentAction","IndentAction","Indent","IndentOutdent","Outdent","indexOf","indentMetadataOfMovelingLine","getIndentMetadata","futureAboveLineNumber","futureAboveLineText","getEnterAction","parseEnterResult","validPrecedingLine","lineContent","oneLineAbove","previousLineText","isCheapToTokenize","languageAtSelectionStart","indentRulesSupport","originalIndent","newSpacesCnt","newIndent","SortLinesCommand","descending","selectionId","op","getSortData","sortLines","_COLLATOR","Intl","Collator","before","linesToSort","sorted","getCollator","AbstractCopyLinesAction","down","selections","getSelections","ignore","curr","executeCommands","CopyLinesUpAction","_AbstractCopyLinesAct","editorTextFocus","linux","MenubarSelectionMenu","CopyLinesDownAction","_AbstractCopyLinesAct2","DuplicateSelectionAction","insertSelection","ReplaceCommandThatSelectsText","AbstractMoveLinesAction","MoveLinesUpAction","_AbstractMoveLinesAct","MoveLinesDownAction","_AbstractMoveLinesAct2","AbstractSortLinesAction","canRun","SortLinesAscendingAction","_AbstractSortLinesAct","_super9","SortLinesDescendingAction","_AbstractSortLinesAct2","_super10","DeleteDuplicateLinesAction","_super11","endCursorState","linesDeleted","uniqueLines","selectionToReplace","adjustedSelectionStart","finalSelection","TrimTrailingWhitespaceAction","_super12","KeyChord","cursors","positionLineNumber","positionColumn","getSelection","TrimTrailingWhitespaceCommand","DeleteLinesAction","_super13","ops","_getLinesToRemove","cursorState","operations","selectionStartColumn","mergedOperations","previousOperation","IndentLinesAction","_EditorAction8","_super14","TypeOperations","indent","cursorConfig","OutdentLinesAction","_EditorAction9","_super15","InsertLineBeforeAction","_EditorAction10","_super16","lineInsertBefore","InsertLineAfterAction","_EditorAction11","_super17","lineInsertAfter","AbstractDeleteAllToBoundaryAction","_EditorAction12","_super18","primaryCursor","rangesToDelete","_getRangesToDelete","effectiveRanges","count","nextRange","_getEndCursorState","DeleteAllLeftAction","_AbstractDeleteAllToB","_super19","mac","endPrimaryCursor","deletedLines","forEach","endCursor","newStartLine","deleteFromLine","deleteFromColumn","DeleteAllRightAction","_AbstractDeleteAllToB2","_super20","sel","JoinLinesAction","_EditorAction13","_super21","reducedSelections","lastSelection","previousValue","equalsSelection","lineOffset","columnDeltaOffset","selectionEndPositionOffset","trimmedLinesContent","firstNonWhitespaceIdx","getLineFirstNonWhitespaceColumn","insertSpace","lineTextWithoutIndent","deleteSelection","resultSelection","TransposeAction","_EditorAction14","_super22","chars","split","ReplaceCommand","ReplaceCommandThatPreservesSelection","AbstractCaseAction","_EditorAction15","_super23","wordSeparators","getConfiguredWordAtPosition","_modifyText","UpperCaseAction","_AbstractCaseAction","_super24","toLocaleUpperCase","LowerCaseAction","_AbstractCaseAction2","_super25","toLocaleLowerCase","BackwardsCompatibleRegExp","_pattern","_flags","_actual","_evaluated","TitleCaseAction","_AbstractCaseAction3","_super26","titleBoundary","SnakeCaseAction","_AbstractCaseAction4","_super27","caseBoundary","singleLetters","CamelCaseAction","_AbstractCaseAction5","_super28","wordBoundary","words","shift","KebabCaseAction","_AbstractCaseAction6","_super29","_","underscoreBoundary","regexp","isSupported","CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE","LinkedEditingContribution","languageFeatureDebounceService","_syncRangesToken","_localToDispose","_providers","linkedEditingRangeProvider","_visibleContextKey","_debounceInformation","_languageWordPattern","_currentWordPattern","_ignoreChangeEvent","_rangeUpdateTriggerPromise","_rangeSyncTriggerPromise","_currentRequest","_currentRequestPosition","_currentRequestModelVersion","reinitialize","forceRefresh","isEnabled","clearRanges","onDidChangeLanguageConfiguration","getWordDefinition","rangeUpdateScheduler","Delayer","triggerRangeUpdate","updateRanges","_debounceDuration","rangeSyncScheduler","referenceRange","getRange","_syncRanges","referenceValue","mirrorRange","oldValue","rangeStartColumn","rangeEndColumn","commonSuffixLength","popUndoStop","prevEditOperationType","getPrevEditOperationType","setPrevEditOperationType","force","modelVersionId","createCancelablePromise","sw","response","foundReferenceRange","StopWatch","getLinkedEditingRanges","elapsed","wordPattern","splice","DECORATION","isCancellationError","LinkedEditingAction","hasRenameProvider","editorService","ICodeEditorService","isArray","_ref2","isIPosition","openCodeEditor","resource","getActiveCodeEditor","reportTelemetry","LinkedEditingCommand","EditorCommand","bindToContribution","orderedByScore","first","provideLinkedEditingRanges","arrays","registerEditorCommand","handler","editorLinkedEditingBackground","registerColor","dark","Color","fromHex","transparent","light","hcDark","hcLight","white","registerModelAndPositionCommand","Link","link","_link","_provider","url","resolveLink","LinksList","tuples","links","newLinks","_union","isDisposable","oldLinks","oldIndex","oldLen","newIndex","newLen","oldLink","newLink","getLinks","provideLinks","coalesce","resolveCount","linkProvider","IModelService","LinkDetector","debounceInformation","computeLinks","computeLinksNow","computePromise","activeLinksList","currentOccurrences","activeLinkDecorationId","clickLinkGesture","keyboardEvent","_onEditorMouseMove","onEditorMouseUp","cleanUpActiveLinkDecoration","updateDecorations","oldDecorations","_i","_keys","occurence","newDecorations","LinkOccurrence","withKey","occurrence","getLinkOccurrence","activate","deactivate","openLinkOccurrence","fromUserGesture","modelUri","file","parsedUri","fsPath","resources","relativePath","open","allowContributedOpeners","allowCommands","fromWorkspace","messageOrError","warn","currentOccurrence","Boolean","keyCodeIsTriggerKey","general","active","changeDecorationOptions","_getOptions","isActive","hoverMessage","executeCmd","test","nativeLabel","appendLink","appendMarkdown","getHoverMessage","OpenLinkAction","linkDetector"],"sourceRoot":""}