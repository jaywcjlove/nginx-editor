{"version":3,"file":"static/js/monaco-editor-vendor.55a95165.9350b267.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/browser/view/renderingContext.js","../node_modules/monaco-editor/esm/vs/editor/browser/view/viewController.js","../node_modules/monaco-editor/esm/vs/editor/browser/view/viewLayer.js","../node_modules/monaco-editor/esm/vs/editor/browser/view/viewOverlays.js","../node_modules/monaco-editor/esm/vs/editor/browser/view/viewPart.js","../node_modules/monaco-editor/esm/vs/editor/browser/view/viewUserInputEvents.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/codeEditorContributions.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/codeEditorWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class RestrictedRenderingContext {\n    constructor(viewLayout, viewportData) {\n        this._restrictedRenderingContextBrand = undefined;\n        this._viewLayout = viewLayout;\n        this.viewportData = viewportData;\n        this.scrollWidth = this._viewLayout.getScrollWidth();\n        this.scrollHeight = this._viewLayout.getScrollHeight();\n        this.visibleRange = this.viewportData.visibleRange;\n        this.bigNumbersDelta = this.viewportData.bigNumbersDelta;\n        const vInfo = this._viewLayout.getCurrentViewport();\n        this.scrollTop = vInfo.top;\n        this.scrollLeft = vInfo.left;\n        this.viewportWidth = vInfo.width;\n        this.viewportHeight = vInfo.height;\n    }\n    getScrolledTopFromAbsoluteTop(absoluteTop) {\n        return absoluteTop - this.scrollTop;\n    }\n    getVerticalOffsetForLineNumber(lineNumber, includeViewZones) {\n        return this._viewLayout.getVerticalOffsetForLineNumber(lineNumber, includeViewZones);\n    }\n    getVerticalOffsetAfterLineNumber(lineNumber, includeViewZones) {\n        return this._viewLayout.getVerticalOffsetAfterLineNumber(lineNumber, includeViewZones);\n    }\n    getDecorationsInViewport() {\n        return this.viewportData.getDecorationsInViewport();\n    }\n}\nexport class RenderingContext extends RestrictedRenderingContext {\n    constructor(viewLayout, viewportData, viewLines) {\n        super(viewLayout, viewportData);\n        this._renderingContextBrand = undefined;\n        this._viewLines = viewLines;\n    }\n    linesVisibleRangesForRange(range, includeNewLines) {\n        return this._viewLines.linesVisibleRangesForRange(range, includeNewLines);\n    }\n    visibleRangeForPosition(position) {\n        return this._viewLines.visibleRangeForPosition(position);\n    }\n}\nexport class LineVisibleRanges {\n    constructor(outsideRenderedLine, lineNumber, ranges, \n    /**\n     * Indicates if the requested range does not end in this line, but continues on the next line.\n     */\n    continuesOnNextLine) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.lineNumber = lineNumber;\n        this.ranges = ranges;\n        this.continuesOnNextLine = continuesOnNextLine;\n    }\n}\nexport class HorizontalRange {\n    static from(ranges) {\n        const result = new Array(ranges.length);\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            const range = ranges[i];\n            result[i] = new HorizontalRange(range.left, range.width);\n        }\n        return result;\n    }\n    constructor(left, width) {\n        this._horizontalRangeBrand = undefined;\n        this.left = Math.round(left);\n        this.width = Math.round(width);\n    }\n    toString() {\n        return `[${this.left},${this.width}]`;\n    }\n}\nexport class FloatHorizontalRange {\n    constructor(left, width) {\n        this._floatHorizontalRangeBrand = undefined;\n        this.left = left;\n        this.width = width;\n    }\n    toString() {\n        return `[${this.left},${this.width}]`;\n    }\n    static compare(a, b) {\n        return a.left - b.left;\n    }\n}\nexport class HorizontalPosition {\n    constructor(outsideRenderedLine, left) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.originalLeft = left;\n        this.left = Math.round(this.originalLeft);\n    }\n}\nexport class VisibleRanges {\n    constructor(outsideRenderedLine, ranges) {\n        this.outsideRenderedLine = outsideRenderedLine;\n        this.ranges = ranges;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CoreNavigationCommands } from '../coreCommands.js';\nimport { Position } from '../../common/core/position.js';\nimport * as platform from '../../../base/common/platform.js';\nexport class ViewController {\n    constructor(configuration, viewModel, userInputEvents, commandDelegate) {\n        this.configuration = configuration;\n        this.viewModel = viewModel;\n        this.userInputEvents = userInputEvents;\n        this.commandDelegate = commandDelegate;\n    }\n    paste(text, pasteOnNewLine, multicursorText, mode) {\n        this.commandDelegate.paste(text, pasteOnNewLine, multicursorText, mode);\n    }\n    type(text) {\n        this.commandDelegate.type(text);\n    }\n    compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) {\n        this.commandDelegate.compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta);\n    }\n    compositionStart() {\n        this.commandDelegate.startComposition();\n    }\n    compositionEnd() {\n        this.commandDelegate.endComposition();\n    }\n    cut() {\n        this.commandDelegate.cut();\n    }\n    setSelection(modelSelection) {\n        CoreNavigationCommands.SetSelection.runCoreEditorCommand(this.viewModel, {\n            source: 'keyboard',\n            selection: modelSelection\n        });\n    }\n    _validateViewColumn(viewPosition) {\n        const minColumn = this.viewModel.getLineMinColumn(viewPosition.lineNumber);\n        if (viewPosition.column < minColumn) {\n            return new Position(viewPosition.lineNumber, minColumn);\n        }\n        return viewPosition;\n    }\n    _hasMulticursorModifier(data) {\n        switch (this.configuration.options.get(76 /* EditorOption.multiCursorModifier */)) {\n            case 'altKey':\n                return data.altKey;\n            case 'ctrlKey':\n                return data.ctrlKey;\n            case 'metaKey':\n                return data.metaKey;\n            default:\n                return false;\n        }\n    }\n    _hasNonMulticursorModifier(data) {\n        switch (this.configuration.options.get(76 /* EditorOption.multiCursorModifier */)) {\n            case 'altKey':\n                return data.ctrlKey || data.metaKey;\n            case 'ctrlKey':\n                return data.altKey || data.metaKey;\n            case 'metaKey':\n                return data.ctrlKey || data.altKey;\n            default:\n                return false;\n        }\n    }\n    dispatchMouse(data) {\n        const options = this.configuration.options;\n        const selectionClipboardIsOn = (platform.isLinux && options.get(105 /* EditorOption.selectionClipboard */));\n        const columnSelection = options.get(21 /* EditorOption.columnSelection */);\n        if (data.middleButton && !selectionClipboardIsOn) {\n            this._columnSelect(data.position, data.mouseColumn, data.inSelectionMode);\n        }\n        else if (data.startedOnLineNumbers) {\n            // If the dragging started on the gutter, then have operations work on the entire line\n            if (this._hasMulticursorModifier(data)) {\n                if (data.inSelectionMode) {\n                    this._lastCursorLineSelect(data.position, data.revealType);\n                }\n                else {\n                    this._createCursor(data.position, true);\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    this._lineSelectDrag(data.position, data.revealType);\n                }\n                else {\n                    this._lineSelect(data.position, data.revealType);\n                }\n            }\n        }\n        else if (data.mouseDownCount >= 4) {\n            this._selectAll();\n        }\n        else if (data.mouseDownCount === 3) {\n            if (this._hasMulticursorModifier(data)) {\n                if (data.inSelectionMode) {\n                    this._lastCursorLineSelectDrag(data.position, data.revealType);\n                }\n                else {\n                    this._lastCursorLineSelect(data.position, data.revealType);\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    this._lineSelectDrag(data.position, data.revealType);\n                }\n                else {\n                    this._lineSelect(data.position, data.revealType);\n                }\n            }\n        }\n        else if (data.mouseDownCount === 2) {\n            if (!data.onInjectedText) {\n                if (this._hasMulticursorModifier(data)) {\n                    this._lastCursorWordSelect(data.position, data.revealType);\n                }\n                else {\n                    if (data.inSelectionMode) {\n                        this._wordSelectDrag(data.position, data.revealType);\n                    }\n                    else {\n                        this._wordSelect(data.position, data.revealType);\n                    }\n                }\n            }\n        }\n        else {\n            if (this._hasMulticursorModifier(data)) {\n                if (!this._hasNonMulticursorModifier(data)) {\n                    if (data.shiftKey) {\n                        this._columnSelect(data.position, data.mouseColumn, true);\n                    }\n                    else {\n                        // Do multi-cursor operations only when purely alt is pressed\n                        if (data.inSelectionMode) {\n                            this._lastCursorMoveToSelect(data.position, data.revealType);\n                        }\n                        else {\n                            this._createCursor(data.position, false);\n                        }\n                    }\n                }\n            }\n            else {\n                if (data.inSelectionMode) {\n                    if (data.altKey) {\n                        this._columnSelect(data.position, data.mouseColumn, true);\n                    }\n                    else {\n                        if (columnSelection) {\n                            this._columnSelect(data.position, data.mouseColumn, true);\n                        }\n                        else {\n                            this._moveToSelect(data.position, data.revealType);\n                        }\n                    }\n                }\n                else {\n                    this.moveTo(data.position, data.revealType);\n                }\n            }\n        }\n    }\n    _usualArgs(viewPosition, revealType) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        return {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition,\n            revealType\n        };\n    }\n    moveTo(viewPosition, revealType) {\n        CoreNavigationCommands.MoveTo.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _moveToSelect(viewPosition, revealType) {\n        CoreNavigationCommands.MoveToSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _columnSelect(viewPosition, mouseColumn, doColumnSelect) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        CoreNavigationCommands.ColumnSelect.runCoreEditorCommand(this.viewModel, {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition: viewPosition,\n            mouseColumn: mouseColumn,\n            doColumnSelect: doColumnSelect\n        });\n    }\n    _createCursor(viewPosition, wholeLine) {\n        viewPosition = this._validateViewColumn(viewPosition);\n        CoreNavigationCommands.CreateCursor.runCoreEditorCommand(this.viewModel, {\n            source: 'mouse',\n            position: this._convertViewToModelPosition(viewPosition),\n            viewPosition: viewPosition,\n            wholeLine: wholeLine\n        });\n    }\n    _lastCursorMoveToSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorMoveToSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _wordSelect(viewPosition, revealType) {\n        CoreNavigationCommands.WordSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _wordSelectDrag(viewPosition, revealType) {\n        CoreNavigationCommands.WordSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lastCursorWordSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorWordSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lineSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LineSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lineSelectDrag(viewPosition, revealType) {\n        CoreNavigationCommands.LineSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lastCursorLineSelect(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorLineSelect.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _lastCursorLineSelectDrag(viewPosition, revealType) {\n        CoreNavigationCommands.LastCursorLineSelectDrag.runCoreEditorCommand(this.viewModel, this._usualArgs(viewPosition, revealType));\n    }\n    _selectAll() {\n        CoreNavigationCommands.SelectAll.runCoreEditorCommand(this.viewModel, { source: 'mouse' });\n    }\n    // ----------------------\n    _convertViewToModelPosition(viewPosition) {\n        return this.viewModel.coordinatesConverter.convertViewPositionToModelPosition(viewPosition);\n    }\n    emitKeyDown(e) {\n        this.userInputEvents.emitKeyDown(e);\n    }\n    emitKeyUp(e) {\n        this.userInputEvents.emitKeyUp(e);\n    }\n    emitContextMenu(e) {\n        this.userInputEvents.emitContextMenu(e);\n    }\n    emitMouseMove(e) {\n        this.userInputEvents.emitMouseMove(e);\n    }\n    emitMouseLeave(e) {\n        this.userInputEvents.emitMouseLeave(e);\n    }\n    emitMouseUp(e) {\n        this.userInputEvents.emitMouseUp(e);\n    }\n    emitMouseDown(e) {\n        this.userInputEvents.emitMouseDown(e);\n    }\n    emitMouseDrag(e) {\n        this.userInputEvents.emitMouseDrag(e);\n    }\n    emitMouseDrop(e) {\n        this.userInputEvents.emitMouseDrop(e);\n    }\n    emitMouseDropCanceled() {\n        this.userInputEvents.emitMouseDropCanceled();\n    }\n    emitMouseWheel(e) {\n        this.userInputEvents.emitMouseWheel(e);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { createTrustedTypesPolicy } from '../../../base/browser/trustedTypes.js';\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { StringBuilder } from '../../common/core/stringBuilder.js';\nexport class RenderedLinesCollection {\n    constructor(createLine) {\n        this._createLine = createLine;\n        this._set(1, []);\n    }\n    flush() {\n        this._set(1, []);\n    }\n    _set(rendLineNumberStart, lines) {\n        this._lines = lines;\n        this._rendLineNumberStart = rendLineNumberStart;\n    }\n    _get() {\n        return {\n            rendLineNumberStart: this._rendLineNumberStart,\n            lines: this._lines\n        };\n    }\n    /**\n     * @returns Inclusive line number that is inside this collection\n     */\n    getStartLineNumber() {\n        return this._rendLineNumberStart;\n    }\n    /**\n     * @returns Inclusive line number that is inside this collection\n     */\n    getEndLineNumber() {\n        return this._rendLineNumberStart + this._lines.length - 1;\n    }\n    getCount() {\n        return this._lines.length;\n    }\n    getLine(lineNumber) {\n        const lineIndex = lineNumber - this._rendLineNumberStart;\n        if (lineIndex < 0 || lineIndex >= this._lines.length) {\n            throw new BugIndicatingError('Illegal value for lineNumber');\n        }\n        return this._lines[lineIndex];\n    }\n    /**\n     * @returns Lines that were removed from this collection\n     */\n    onLinesDeleted(deleteFromLineNumber, deleteToLineNumber) {\n        if (this.getCount() === 0) {\n            // no lines\n            return null;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        if (deleteToLineNumber < startLineNumber) {\n            // deleting above the viewport\n            const deleteCnt = deleteToLineNumber - deleteFromLineNumber + 1;\n            this._rendLineNumberStart -= deleteCnt;\n            return null;\n        }\n        if (deleteFromLineNumber > endLineNumber) {\n            // deleted below the viewport\n            return null;\n        }\n        // Record what needs to be deleted\n        let deleteStartIndex = 0;\n        let deleteCount = 0;\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const lineIndex = lineNumber - this._rendLineNumberStart;\n            if (deleteFromLineNumber <= lineNumber && lineNumber <= deleteToLineNumber) {\n                // this is a line to be deleted\n                if (deleteCount === 0) {\n                    // this is the first line to be deleted\n                    deleteStartIndex = lineIndex;\n                    deleteCount = 1;\n                }\n                else {\n                    deleteCount++;\n                }\n            }\n        }\n        // Adjust this._rendLineNumberStart for lines deleted above\n        if (deleteFromLineNumber < startLineNumber) {\n            // Something was deleted above\n            let deleteAboveCount = 0;\n            if (deleteToLineNumber < startLineNumber) {\n                // the entire deleted lines are above\n                deleteAboveCount = deleteToLineNumber - deleteFromLineNumber + 1;\n            }\n            else {\n                deleteAboveCount = startLineNumber - deleteFromLineNumber;\n            }\n            this._rendLineNumberStart -= deleteAboveCount;\n        }\n        const deleted = this._lines.splice(deleteStartIndex, deleteCount);\n        return deleted;\n    }\n    onLinesChanged(changeFromLineNumber, changeCount) {\n        const changeToLineNumber = changeFromLineNumber + changeCount - 1;\n        if (this.getCount() === 0) {\n            // no lines\n            return false;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        let someoneNotified = false;\n        for (let changedLineNumber = changeFromLineNumber; changedLineNumber <= changeToLineNumber; changedLineNumber++) {\n            if (changedLineNumber >= startLineNumber && changedLineNumber <= endLineNumber) {\n                // Notify the line\n                this._lines[changedLineNumber - this._rendLineNumberStart].onContentChanged();\n                someoneNotified = true;\n            }\n        }\n        return someoneNotified;\n    }\n    onLinesInserted(insertFromLineNumber, insertToLineNumber) {\n        if (this.getCount() === 0) {\n            // no lines\n            return null;\n        }\n        const insertCnt = insertToLineNumber - insertFromLineNumber + 1;\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        if (insertFromLineNumber <= startLineNumber) {\n            // inserting above the viewport\n            this._rendLineNumberStart += insertCnt;\n            return null;\n        }\n        if (insertFromLineNumber > endLineNumber) {\n            // inserting below the viewport\n            return null;\n        }\n        if (insertCnt + insertFromLineNumber > endLineNumber) {\n            // insert inside the viewport in such a way that all remaining lines are pushed outside\n            const deleted = this._lines.splice(insertFromLineNumber - this._rendLineNumberStart, endLineNumber - insertFromLineNumber + 1);\n            return deleted;\n        }\n        // insert inside the viewport, push out some lines, but not all remaining lines\n        const newLines = [];\n        for (let i = 0; i < insertCnt; i++) {\n            newLines[i] = this._createLine();\n        }\n        const insertIndex = insertFromLineNumber - this._rendLineNumberStart;\n        const beforeLines = this._lines.slice(0, insertIndex);\n        const afterLines = this._lines.slice(insertIndex, this._lines.length - insertCnt);\n        const deletedLines = this._lines.slice(this._lines.length - insertCnt, this._lines.length);\n        this._lines = beforeLines.concat(newLines).concat(afterLines);\n        return deletedLines;\n    }\n    onTokensChanged(ranges) {\n        if (this.getCount() === 0) {\n            // no lines\n            return false;\n        }\n        const startLineNumber = this.getStartLineNumber();\n        const endLineNumber = this.getEndLineNumber();\n        let notifiedSomeone = false;\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            const rng = ranges[i];\n            if (rng.toLineNumber < startLineNumber || rng.fromLineNumber > endLineNumber) {\n                // range outside viewport\n                continue;\n            }\n            const from = Math.max(startLineNumber, rng.fromLineNumber);\n            const to = Math.min(endLineNumber, rng.toLineNumber);\n            for (let lineNumber = from; lineNumber <= to; lineNumber++) {\n                const lineIndex = lineNumber - this._rendLineNumberStart;\n                this._lines[lineIndex].onTokensChanged();\n                notifiedSomeone = true;\n            }\n        }\n        return notifiedSomeone;\n    }\n}\nexport class VisibleLinesCollection {\n    constructor(host) {\n        this._host = host;\n        this.domNode = this._createDomNode();\n        this._linesCollection = new RenderedLinesCollection(() => this._host.createVisibleLine());\n    }\n    _createDomNode() {\n        const domNode = createFastDomNode(document.createElement('div'));\n        domNode.setClassName('view-layer');\n        domNode.setPosition('absolute');\n        domNode.domNode.setAttribute('role', 'presentation');\n        domNode.domNode.setAttribute('aria-hidden', 'true');\n        return domNode;\n    }\n    // ---- begin view event handlers\n    onConfigurationChanged(e) {\n        if (e.hasChanged(142 /* EditorOption.layoutInfo */)) {\n            return true;\n        }\n        return false;\n    }\n    onFlushed(e) {\n        this._linesCollection.flush();\n        // No need to clear the dom node because a full .innerHTML will occur in ViewLayerRenderer._render\n        return true;\n    }\n    onLinesChanged(e) {\n        return this._linesCollection.onLinesChanged(e.fromLineNumber, e.count);\n    }\n    onLinesDeleted(e) {\n        const deleted = this._linesCollection.onLinesDeleted(e.fromLineNumber, e.toLineNumber);\n        if (deleted) {\n            // Remove from DOM\n            for (let i = 0, len = deleted.length; i < len; i++) {\n                const lineDomNode = deleted[i].getDomNode();\n                if (lineDomNode) {\n                    this.domNode.domNode.removeChild(lineDomNode);\n                }\n            }\n        }\n        return true;\n    }\n    onLinesInserted(e) {\n        const deleted = this._linesCollection.onLinesInserted(e.fromLineNumber, e.toLineNumber);\n        if (deleted) {\n            // Remove from DOM\n            for (let i = 0, len = deleted.length; i < len; i++) {\n                const lineDomNode = deleted[i].getDomNode();\n                if (lineDomNode) {\n                    this.domNode.domNode.removeChild(lineDomNode);\n                }\n            }\n        }\n        return true;\n    }\n    onScrollChanged(e) {\n        return e.scrollTopChanged;\n    }\n    onTokensChanged(e) {\n        return this._linesCollection.onTokensChanged(e.ranges);\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // ---- end view event handlers\n    getStartLineNumber() {\n        return this._linesCollection.getStartLineNumber();\n    }\n    getEndLineNumber() {\n        return this._linesCollection.getEndLineNumber();\n    }\n    getVisibleLine(lineNumber) {\n        return this._linesCollection.getLine(lineNumber);\n    }\n    renderLines(viewportData) {\n        const inp = this._linesCollection._get();\n        const renderer = new ViewLayerRenderer(this.domNode.domNode, this._host, viewportData);\n        const ctx = {\n            rendLineNumberStart: inp.rendLineNumberStart,\n            lines: inp.lines,\n            linesLength: inp.lines.length\n        };\n        // Decide if this render will do a single update (single large .innerHTML) or many updates (inserting/removing dom nodes)\n        const resCtx = renderer.render(ctx, viewportData.startLineNumber, viewportData.endLineNumber, viewportData.relativeVerticalOffset);\n        this._linesCollection._set(resCtx.rendLineNumberStart, resCtx.lines);\n    }\n}\nclass ViewLayerRenderer {\n    constructor(domNode, host, viewportData) {\n        this.domNode = domNode;\n        this.host = host;\n        this.viewportData = viewportData;\n    }\n    render(inContext, startLineNumber, stopLineNumber, deltaTop) {\n        const ctx = {\n            rendLineNumberStart: inContext.rendLineNumberStart,\n            lines: inContext.lines.slice(0),\n            linesLength: inContext.linesLength\n        };\n        if ((ctx.rendLineNumberStart + ctx.linesLength - 1 < startLineNumber) || (stopLineNumber < ctx.rendLineNumberStart)) {\n            // There is no overlap whatsoever\n            ctx.rendLineNumberStart = startLineNumber;\n            ctx.linesLength = stopLineNumber - startLineNumber + 1;\n            ctx.lines = [];\n            for (let x = startLineNumber; x <= stopLineNumber; x++) {\n                ctx.lines[x - startLineNumber] = this.host.createVisibleLine();\n            }\n            this._finishRendering(ctx, true, deltaTop);\n            return ctx;\n        }\n        // Update lines which will remain untouched\n        this._renderUntouchedLines(ctx, Math.max(startLineNumber - ctx.rendLineNumberStart, 0), Math.min(stopLineNumber - ctx.rendLineNumberStart, ctx.linesLength - 1), deltaTop, startLineNumber);\n        if (ctx.rendLineNumberStart > startLineNumber) {\n            // Insert lines before\n            const fromLineNumber = startLineNumber;\n            const toLineNumber = Math.min(stopLineNumber, ctx.rendLineNumberStart - 1);\n            if (fromLineNumber <= toLineNumber) {\n                this._insertLinesBefore(ctx, fromLineNumber, toLineNumber, deltaTop, startLineNumber);\n                ctx.linesLength += toLineNumber - fromLineNumber + 1;\n            }\n        }\n        else if (ctx.rendLineNumberStart < startLineNumber) {\n            // Remove lines before\n            const removeCnt = Math.min(ctx.linesLength, startLineNumber - ctx.rendLineNumberStart);\n            if (removeCnt > 0) {\n                this._removeLinesBefore(ctx, removeCnt);\n                ctx.linesLength -= removeCnt;\n            }\n        }\n        ctx.rendLineNumberStart = startLineNumber;\n        if (ctx.rendLineNumberStart + ctx.linesLength - 1 < stopLineNumber) {\n            // Insert lines after\n            const fromLineNumber = ctx.rendLineNumberStart + ctx.linesLength;\n            const toLineNumber = stopLineNumber;\n            if (fromLineNumber <= toLineNumber) {\n                this._insertLinesAfter(ctx, fromLineNumber, toLineNumber, deltaTop, startLineNumber);\n                ctx.linesLength += toLineNumber - fromLineNumber + 1;\n            }\n        }\n        else if (ctx.rendLineNumberStart + ctx.linesLength - 1 > stopLineNumber) {\n            // Remove lines after\n            const fromLineNumber = Math.max(0, stopLineNumber - ctx.rendLineNumberStart + 1);\n            const toLineNumber = ctx.linesLength - 1;\n            const removeCnt = toLineNumber - fromLineNumber + 1;\n            if (removeCnt > 0) {\n                this._removeLinesAfter(ctx, removeCnt);\n                ctx.linesLength -= removeCnt;\n            }\n        }\n        this._finishRendering(ctx, false, deltaTop);\n        return ctx;\n    }\n    _renderUntouchedLines(ctx, startIndex, endIndex, deltaTop, deltaLN) {\n        const rendLineNumberStart = ctx.rendLineNumberStart;\n        const lines = ctx.lines;\n        for (let i = startIndex; i <= endIndex; i++) {\n            const lineNumber = rendLineNumberStart + i;\n            lines[i].layoutLine(lineNumber, deltaTop[lineNumber - deltaLN]);\n        }\n    }\n    _insertLinesBefore(ctx, fromLineNumber, toLineNumber, deltaTop, deltaLN) {\n        const newLines = [];\n        let newLinesLen = 0;\n        for (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n            newLines[newLinesLen++] = this.host.createVisibleLine();\n        }\n        ctx.lines = newLines.concat(ctx.lines);\n    }\n    _removeLinesBefore(ctx, removeCount) {\n        for (let i = 0; i < removeCount; i++) {\n            const lineDomNode = ctx.lines[i].getDomNode();\n            if (lineDomNode) {\n                this.domNode.removeChild(lineDomNode);\n            }\n        }\n        ctx.lines.splice(0, removeCount);\n    }\n    _insertLinesAfter(ctx, fromLineNumber, toLineNumber, deltaTop, deltaLN) {\n        const newLines = [];\n        let newLinesLen = 0;\n        for (let lineNumber = fromLineNumber; lineNumber <= toLineNumber; lineNumber++) {\n            newLines[newLinesLen++] = this.host.createVisibleLine();\n        }\n        ctx.lines = ctx.lines.concat(newLines);\n    }\n    _removeLinesAfter(ctx, removeCount) {\n        const removeIndex = ctx.linesLength - removeCount;\n        for (let i = 0; i < removeCount; i++) {\n            const lineDomNode = ctx.lines[removeIndex + i].getDomNode();\n            if (lineDomNode) {\n                this.domNode.removeChild(lineDomNode);\n            }\n        }\n        ctx.lines.splice(removeIndex, removeCount);\n    }\n    _finishRenderingNewLines(ctx, domNodeIsEmpty, newLinesHTML, wasNew) {\n        if (ViewLayerRenderer._ttPolicy) {\n            newLinesHTML = ViewLayerRenderer._ttPolicy.createHTML(newLinesHTML);\n        }\n        const lastChild = this.domNode.lastChild;\n        if (domNodeIsEmpty || !lastChild) {\n            this.domNode.innerHTML = newLinesHTML; // explains the ugly casts -> https://github.com/microsoft/vscode/issues/106396#issuecomment-692625393;\n        }\n        else {\n            lastChild.insertAdjacentHTML('afterend', newLinesHTML);\n        }\n        let currChild = this.domNode.lastChild;\n        for (let i = ctx.linesLength - 1; i >= 0; i--) {\n            const line = ctx.lines[i];\n            if (wasNew[i]) {\n                line.setDomNode(currChild);\n                currChild = currChild.previousSibling;\n            }\n        }\n    }\n    _finishRenderingInvalidLines(ctx, invalidLinesHTML, wasInvalid) {\n        const hugeDomNode = document.createElement('div');\n        if (ViewLayerRenderer._ttPolicy) {\n            invalidLinesHTML = ViewLayerRenderer._ttPolicy.createHTML(invalidLinesHTML);\n        }\n        hugeDomNode.innerHTML = invalidLinesHTML;\n        for (let i = 0; i < ctx.linesLength; i++) {\n            const line = ctx.lines[i];\n            if (wasInvalid[i]) {\n                const source = hugeDomNode.firstChild;\n                const lineDomNode = line.getDomNode();\n                lineDomNode.parentNode.replaceChild(source, lineDomNode);\n                line.setDomNode(source);\n            }\n        }\n    }\n    _finishRendering(ctx, domNodeIsEmpty, deltaTop) {\n        const sb = ViewLayerRenderer._sb;\n        const linesLength = ctx.linesLength;\n        const lines = ctx.lines;\n        const rendLineNumberStart = ctx.rendLineNumberStart;\n        const wasNew = [];\n        {\n            sb.reset();\n            let hadNewLine = false;\n            for (let i = 0; i < linesLength; i++) {\n                const line = lines[i];\n                wasNew[i] = false;\n                const lineDomNode = line.getDomNode();\n                if (lineDomNode) {\n                    // line is not new\n                    continue;\n                }\n                const renderResult = line.renderLine(i + rendLineNumberStart, deltaTop[i], this.viewportData, sb);\n                if (!renderResult) {\n                    // line does not need rendering\n                    continue;\n                }\n                wasNew[i] = true;\n                hadNewLine = true;\n            }\n            if (hadNewLine) {\n                this._finishRenderingNewLines(ctx, domNodeIsEmpty, sb.build(), wasNew);\n            }\n        }\n        {\n            sb.reset();\n            let hadInvalidLine = false;\n            const wasInvalid = [];\n            for (let i = 0; i < linesLength; i++) {\n                const line = lines[i];\n                wasInvalid[i] = false;\n                if (wasNew[i]) {\n                    // line was new\n                    continue;\n                }\n                const renderResult = line.renderLine(i + rendLineNumberStart, deltaTop[i], this.viewportData, sb);\n                if (!renderResult) {\n                    // line does not need rendering\n                    continue;\n                }\n                wasInvalid[i] = true;\n                hadInvalidLine = true;\n            }\n            if (hadInvalidLine) {\n                this._finishRenderingInvalidLines(ctx, sb.build(), wasInvalid);\n            }\n        }\n    }\n}\nViewLayerRenderer._ttPolicy = createTrustedTypesPolicy('editorViewLayer', { createHTML: value => value });\nViewLayerRenderer._sb = new StringBuilder(100000);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { VisibleLinesCollection } from './viewLayer.js';\nimport { ViewPart } from './viewPart.js';\nexport class ViewOverlays extends ViewPart {\n    constructor(context) {\n        super(context);\n        this._visibleLines = new VisibleLinesCollection(this);\n        this.domNode = this._visibleLines.domNode;\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(49 /* EditorOption.fontInfo */);\n        applyFontInfo(this.domNode, fontInfo);\n        this._dynamicOverlays = [];\n        this._isFocused = false;\n        this.domNode.setClassName('view-overlays');\n    }\n    shouldRender() {\n        if (super.shouldRender()) {\n            return true;\n        }\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            if (dynamicOverlay.shouldRender()) {\n                return true;\n            }\n        }\n        return false;\n    }\n    dispose() {\n        super.dispose();\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            dynamicOverlay.dispose();\n        }\n        this._dynamicOverlays = [];\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    // ---- begin IVisibleLinesHost\n    createVisibleLine() {\n        return new ViewOverlayLine(this._context.configuration, this._dynamicOverlays);\n    }\n    // ---- end IVisibleLinesHost\n    addDynamicOverlay(overlay) {\n        this._dynamicOverlays.push(overlay);\n    }\n    // ----- event handlers\n    onConfigurationChanged(e) {\n        this._visibleLines.onConfigurationChanged(e);\n        const startLineNumber = this._visibleLines.getStartLineNumber();\n        const endLineNumber = this._visibleLines.getEndLineNumber();\n        for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n            const line = this._visibleLines.getVisibleLine(lineNumber);\n            line.onConfigurationChanged(e);\n        }\n        const options = this._context.configuration.options;\n        const fontInfo = options.get(49 /* EditorOption.fontInfo */);\n        applyFontInfo(this.domNode, fontInfo);\n        return true;\n    }\n    onFlushed(e) {\n        return this._visibleLines.onFlushed(e);\n    }\n    onFocusChanged(e) {\n        this._isFocused = e.isFocused;\n        return true;\n    }\n    onLinesChanged(e) {\n        return this._visibleLines.onLinesChanged(e);\n    }\n    onLinesDeleted(e) {\n        return this._visibleLines.onLinesDeleted(e);\n    }\n    onLinesInserted(e) {\n        return this._visibleLines.onLinesInserted(e);\n    }\n    onScrollChanged(e) {\n        return this._visibleLines.onScrollChanged(e) || true;\n    }\n    onTokensChanged(e) {\n        return this._visibleLines.onTokensChanged(e);\n    }\n    onZonesChanged(e) {\n        return this._visibleLines.onZonesChanged(e);\n    }\n    // ----- end event handlers\n    prepareRender(ctx) {\n        const toRender = this._dynamicOverlays.filter(overlay => overlay.shouldRender());\n        for (let i = 0, len = toRender.length; i < len; i++) {\n            const dynamicOverlay = toRender[i];\n            dynamicOverlay.prepareRender(ctx);\n            dynamicOverlay.onDidRender();\n        }\n    }\n    render(ctx) {\n        // Overwriting to bypass `shouldRender` flag\n        this._viewOverlaysRender(ctx);\n        this.domNode.toggleClassName('focused', this._isFocused);\n    }\n    _viewOverlaysRender(ctx) {\n        this._visibleLines.renderLines(ctx.viewportData);\n    }\n}\nexport class ViewOverlayLine {\n    constructor(configuration, dynamicOverlays) {\n        this._configuration = configuration;\n        this._lineHeight = this._configuration.options.get(65 /* EditorOption.lineHeight */);\n        this._dynamicOverlays = dynamicOverlays;\n        this._domNode = null;\n        this._renderedContent = null;\n    }\n    getDomNode() {\n        if (!this._domNode) {\n            return null;\n        }\n        return this._domNode.domNode;\n    }\n    setDomNode(domNode) {\n        this._domNode = createFastDomNode(domNode);\n    }\n    onContentChanged() {\n        // Nothing\n    }\n    onTokensChanged() {\n        // Nothing\n    }\n    onConfigurationChanged(e) {\n        this._lineHeight = this._configuration.options.get(65 /* EditorOption.lineHeight */);\n    }\n    renderLine(lineNumber, deltaTop, viewportData, sb) {\n        let result = '';\n        for (let i = 0, len = this._dynamicOverlays.length; i < len; i++) {\n            const dynamicOverlay = this._dynamicOverlays[i];\n            result += dynamicOverlay.render(viewportData.startLineNumber, lineNumber);\n        }\n        if (this._renderedContent === result) {\n            // No rendering needed\n            return false;\n        }\n        this._renderedContent = result;\n        sb.appendString('<div style=\"position:absolute;top:');\n        sb.appendString(String(deltaTop));\n        sb.appendString('px;width:100%;height:');\n        sb.appendString(String(this._lineHeight));\n        sb.appendString('px;\">');\n        sb.appendString(result);\n        sb.appendString('</div>');\n        return true;\n    }\n    layoutLine(lineNumber, deltaTop) {\n        if (this._domNode) {\n            this._domNode.setTop(deltaTop);\n            this._domNode.setHeight(this._lineHeight);\n        }\n    }\n}\nexport class ContentViewOverlays extends ViewOverlays {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(142 /* EditorOption.layoutInfo */);\n        this._contentWidth = layoutInfo.contentWidth;\n        this.domNode.setHeight(0);\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(142 /* EditorOption.layoutInfo */);\n        this._contentWidth = layoutInfo.contentWidth;\n        return super.onConfigurationChanged(e) || true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollWidthChanged;\n    }\n    // --- end event handlers\n    _viewOverlaysRender(ctx) {\n        super._viewOverlaysRender(ctx);\n        this.domNode.setWidth(Math.max(ctx.scrollWidth, this._contentWidth));\n    }\n}\nexport class MarginViewOverlays extends ViewOverlays {\n    constructor(context) {\n        super(context);\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(142 /* EditorOption.layoutInfo */);\n        this._contentLeft = layoutInfo.contentLeft;\n        this.domNode.setClassName('margin-view-overlays');\n        this.domNode.setWidth(1);\n        applyFontInfo(this.domNode, options.get(49 /* EditorOption.fontInfo */));\n    }\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        applyFontInfo(this.domNode, options.get(49 /* EditorOption.fontInfo */));\n        const layoutInfo = options.get(142 /* EditorOption.layoutInfo */);\n        this._contentLeft = layoutInfo.contentLeft;\n        return super.onConfigurationChanged(e) || true;\n    }\n    onScrollChanged(e) {\n        return super.onScrollChanged(e) || e.scrollHeightChanged;\n    }\n    _viewOverlaysRender(ctx) {\n        super._viewOverlaysRender(ctx);\n        const height = Math.min(ctx.scrollHeight, 1000000);\n        this.domNode.setHeight(height);\n        this.domNode.setWidth(this._contentLeft);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ViewEventHandler } from '../../common/viewEventHandler.js';\nexport class ViewPart extends ViewEventHandler {\n    constructor(context) {\n        super();\n        this._context = context;\n        this._context.addEventHandler(this);\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        super.dispose();\n    }\n}\nexport class PartFingerprints {\n    static write(target, partId) {\n        target.setAttribute('data-mprt', String(partId));\n    }\n    static read(target) {\n        const r = target.getAttribute('data-mprt');\n        if (r === null) {\n            return 0 /* PartFingerprint.None */;\n        }\n        return parseInt(r, 10);\n    }\n    static collect(child, stopAt) {\n        const result = [];\n        let resultLen = 0;\n        while (child && child !== document.body) {\n            if (child === stopAt) {\n                break;\n            }\n            if (child.nodeType === child.ELEMENT_NODE) {\n                result[resultLen++] = this.read(child);\n            }\n            child = child.parentElement;\n        }\n        const r = new Uint8Array(resultLen);\n        for (let i = 0; i < resultLen; i++) {\n            r[i] = result[resultLen - i - 1];\n        }\n        return r;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Position } from '../../common/core/position.js';\nexport class ViewUserInputEvents {\n    constructor(coordinatesConverter) {\n        this.onKeyDown = null;\n        this.onKeyUp = null;\n        this.onContextMenu = null;\n        this.onMouseMove = null;\n        this.onMouseLeave = null;\n        this.onMouseDown = null;\n        this.onMouseUp = null;\n        this.onMouseDrag = null;\n        this.onMouseDrop = null;\n        this.onMouseDropCanceled = null;\n        this.onMouseWheel = null;\n        this._coordinatesConverter = coordinatesConverter;\n    }\n    emitKeyDown(e) {\n        var _a;\n        (_a = this.onKeyDown) === null || _a === void 0 ? void 0 : _a.call(this, e);\n    }\n    emitKeyUp(e) {\n        var _a;\n        (_a = this.onKeyUp) === null || _a === void 0 ? void 0 : _a.call(this, e);\n    }\n    emitContextMenu(e) {\n        var _a;\n        (_a = this.onContextMenu) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseMove(e) {\n        var _a;\n        (_a = this.onMouseMove) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseLeave(e) {\n        var _a;\n        (_a = this.onMouseLeave) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDown(e) {\n        var _a;\n        (_a = this.onMouseDown) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseUp(e) {\n        var _a;\n        (_a = this.onMouseUp) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDrag(e) {\n        var _a;\n        (_a = this.onMouseDrag) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDrop(e) {\n        var _a;\n        (_a = this.onMouseDrop) === null || _a === void 0 ? void 0 : _a.call(this, this._convertViewToModelMouseEvent(e));\n    }\n    emitMouseDropCanceled() {\n        var _a;\n        (_a = this.onMouseDropCanceled) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n    emitMouseWheel(e) {\n        var _a;\n        (_a = this.onMouseWheel) === null || _a === void 0 ? void 0 : _a.call(this, e);\n    }\n    _convertViewToModelMouseEvent(e) {\n        if (e.target) {\n            return {\n                event: e.event,\n                target: this._convertViewToModelMouseTarget(e.target)\n            };\n        }\n        return e;\n    }\n    _convertViewToModelMouseTarget(target) {\n        return ViewUserInputEvents.convertViewToModelMouseTarget(target, this._coordinatesConverter);\n    }\n    static convertViewToModelMouseTarget(target, coordinatesConverter) {\n        const result = Object.assign({}, target);\n        if (result.position) {\n            result.position = coordinatesConverter.convertViewPositionToModelPosition(result.position);\n        }\n        if (result.range) {\n            result.range = coordinatesConverter.convertViewRangeToModelRange(result.range);\n        }\n        if (result.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */ || result.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */) {\n            result.detail = this.convertViewToModelViewZoneData(result.detail, coordinatesConverter);\n        }\n        return result;\n    }\n    static convertViewToModelViewZoneData(data, coordinatesConverter) {\n        return {\n            viewZoneId: data.viewZoneId,\n            positionBefore: data.positionBefore ? coordinatesConverter.convertViewPositionToModelPosition(data.positionBefore) : data.positionBefore,\n            positionAfter: data.positionAfter ? coordinatesConverter.convertViewPositionToModelPosition(data.positionAfter) : data.positionAfter,\n            position: coordinatesConverter.convertViewPositionToModelPosition(data.position),\n            afterLineNumber: coordinatesConverter.convertViewPositionToModelPosition(new Position(data.afterLineNumber, 1)).lineNumber,\n        };\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { runWhenIdle } from '../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Disposable, DisposableMap } from '../../../base/common/lifecycle.js';\nimport './diffEditor.contribution.js';\nexport class CodeEditorContributions extends Disposable {\n    constructor() {\n        super();\n        this._editor = null;\n        this._instantiationService = null;\n        /**\n         * Contains all instantiated contributions.\n         */\n        this._instances = this._register(new DisposableMap());\n        /**\n         * Contains contributions which are not yet instantiated.\n         */\n        this._pending = new Map();\n        /**\n         * Tracks which instantiation kinds are still left in `_pending`.\n         */\n        this._finishedInstantiation = [];\n        this._finishedInstantiation[0 /* EditorContributionInstantiation.Eager */] = false;\n        this._finishedInstantiation[1 /* EditorContributionInstantiation.AfterFirstRender */] = false;\n        this._finishedInstantiation[2 /* EditorContributionInstantiation.BeforeFirstInteraction */] = false;\n        this._finishedInstantiation[3 /* EditorContributionInstantiation.Eventually */] = false;\n    }\n    initialize(editor, contributions, instantiationService) {\n        this._editor = editor;\n        this._instantiationService = instantiationService;\n        for (const desc of contributions) {\n            if (this._pending.has(desc.id)) {\n                onUnexpectedError(new Error(`Cannot have two contributions with the same id ${desc.id}`));\n                continue;\n            }\n            this._pending.set(desc.id, desc);\n        }\n        this._instantiateSome(0 /* EditorContributionInstantiation.Eager */);\n        // AfterFirstRender\n        // - these extensions will be instantiated at the latest 50ms after the first render.\n        // - but if there is idle time, we will instantiate them sooner.\n        this._register(runWhenIdle(() => {\n            this._instantiateSome(1 /* EditorContributionInstantiation.AfterFirstRender */);\n        }));\n        // BeforeFirstInteraction\n        // - these extensions will be instantiated at the latest before a mouse or a keyboard event.\n        // - but if there is idle time, we will instantiate them sooner.\n        this._register(runWhenIdle(() => {\n            this._instantiateSome(2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n        }));\n        // Eventually\n        // - these extensions will only be instantiated when there is idle time.\n        // - since there is no guarantee that there will ever be idle time, we set a timeout of 5s here.\n        this._register(runWhenIdle(() => {\n            this._instantiateSome(3 /* EditorContributionInstantiation.Eventually */);\n        }, 5000));\n    }\n    saveViewState() {\n        const contributionsState = {};\n        for (const [id, contribution] of this._instances) {\n            if (typeof contribution.saveViewState === 'function') {\n                contributionsState[id] = contribution.saveViewState();\n            }\n        }\n        return contributionsState;\n    }\n    restoreViewState(contributionsState) {\n        for (const [id, contribution] of this._instances) {\n            if (typeof contribution.restoreViewState === 'function') {\n                contribution.restoreViewState(contributionsState[id]);\n            }\n        }\n    }\n    get(id) {\n        this._instantiateById(id);\n        return this._instances.get(id) || null;\n    }\n    onBeforeInteractionEvent() {\n        // this method is called very often by the editor!\n        this._instantiateSome(2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\n    }\n    onAfterModelAttached() {\n        this._register(runWhenIdle(() => {\n            this._instantiateSome(1 /* EditorContributionInstantiation.AfterFirstRender */);\n        }, 50));\n    }\n    _instantiateSome(instantiation) {\n        if (this._finishedInstantiation[instantiation]) {\n            // already done with this instantiation!\n            return;\n        }\n        this._finishedInstantiation[instantiation] = true;\n        const contribs = this._findPendingContributionsByInstantiation(instantiation);\n        for (const contrib of contribs) {\n            this._instantiateById(contrib.id);\n        }\n    }\n    _findPendingContributionsByInstantiation(instantiation) {\n        const result = [];\n        for (const [, desc] of this._pending) {\n            if (desc.instantiation === instantiation) {\n                result.push(desc);\n            }\n        }\n        return result;\n    }\n    _instantiateById(id) {\n        const desc = this._pending.get(id);\n        if (!desc) {\n            return;\n        }\n        this._pending.delete(id);\n        if (!this._instantiationService || !this._editor) {\n            throw new Error(`Cannot instantiate contributions before being initialized!`);\n        }\n        try {\n            const instance = this._instantiationService.createInstance(desc.ctor, this._editor);\n            this._instances.set(desc.id, instance);\n            if (typeof instance.restoreViewState === 'function' && desc.instantiation !== 0 /* EditorContributionInstantiation.Eager */) {\n                console.warn(`Editor contribution '${desc.id}' should be eager instantiated because it uses saveViewState / restoreViewState.`);\n            }\n        }\n        catch (err) {\n            onUnexpectedError(err);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport '../services/markerDecorations.js';\nimport './media/editor.css';\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Emitter, createEventDeliveryQueue } from '../../../base/common/event.js';\nimport { Disposable, dispose } from '../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { EditorConfiguration } from '../config/editorConfiguration.js';\nimport { EditorExtensionsRegistry } from '../editorExtensions.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { View } from '../view.js';\nimport { ViewUserInputEvents } from '../view/viewUserInputEvents.js';\nimport { filterValidationDecorations } from '../../common/config/editorOptions.js';\nimport { CursorColumns } from '../../common/core/cursorColumns.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { InternalEditorAction } from '../../common/editorAction.js';\nimport * as editorCommon from '../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { editorUnnecessaryCodeOpacity } from '../../common/core/editorColorRegistry.js';\nimport { editorErrorForeground, editorHintForeground, editorInfoForeground, editorWarningForeground } from '../../../platform/theme/common/colorRegistry.js';\nimport { ViewModel } from '../../common/viewModel/viewModelImpl.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { INotificationService, Severity } from '../../../platform/notification/common/notification.js';\nimport { IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { withNullAsUndefined } from '../../../base/common/types.js';\nimport { MonospaceLineBreaksComputerFactory } from '../../common/viewModel/monospaceLineBreaksComputer.js';\nimport { DOMLineBreaksComputerFactory } from '../view/domLineBreaksComputer.js';\nimport { WordOperations } from '../../common/cursor/cursorWordOperations.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nimport { CodeEditorContributions } from './codeEditorContributions.js';\nimport { TabFocus } from '../config/tabFocus.js';\nlet EDITOR_ID = 0;\nclass ModelData {\n    constructor(model, viewModel, view, hasRealView, listenersToRemove, attachedView) {\n        this.model = model;\n        this.viewModel = viewModel;\n        this.view = view;\n        this.hasRealView = hasRealView;\n        this.listenersToRemove = listenersToRemove;\n        this.attachedView = attachedView;\n    }\n    dispose() {\n        dispose(this.listenersToRemove);\n        this.model.onBeforeDetached(this.attachedView);\n        if (this.hasRealView) {\n            this.view.dispose();\n        }\n        this.viewModel.dispose();\n    }\n}\nlet CodeEditorWidget = class CodeEditorWidget extends Disposable {\n    //#endregion\n    get isSimpleWidget() {\n        return this._configuration.isSimpleWidget;\n    }\n    constructor(domElement, _options, codeEditorWidgetOptions, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        //#region Eventing\n        this._deliveryQueue = createEventDeliveryQueue();\n        this._contributions = this._register(new CodeEditorContributions());\n        this._onDidDispose = this._register(new Emitter());\n        this.onDidDispose = this._onDidDispose.event;\n        this._onDidChangeModelContent = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelContent = this._onDidChangeModelContent.event;\n        this._onDidChangeModelLanguage = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelLanguage = this._onDidChangeModelLanguage.event;\n        this._onDidChangeModelLanguageConfiguration = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelLanguageConfiguration = this._onDidChangeModelLanguageConfiguration.event;\n        this._onDidChangeModelOptions = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelOptions = this._onDidChangeModelOptions.event;\n        this._onDidChangeModelDecorations = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelDecorations = this._onDidChangeModelDecorations.event;\n        this._onDidChangeModelTokens = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModelTokens = this._onDidChangeModelTokens.event;\n        this._onDidChangeConfiguration = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n        this._onDidChangeModel = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeModel = this._onDidChangeModel.event;\n        this._onDidChangeCursorPosition = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeCursorPosition = this._onDidChangeCursorPosition.event;\n        this._onDidChangeCursorSelection = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeCursorSelection = this._onDidChangeCursorSelection.event;\n        this._onDidAttemptReadOnlyEdit = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidAttemptReadOnlyEdit = this._onDidAttemptReadOnlyEdit.event;\n        this._onDidLayoutChange = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._editorTextFocus = this._register(new BooleanEventEmitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidFocusEditorText = this._editorTextFocus.onDidChangeToTrue;\n        this.onDidBlurEditorText = this._editorTextFocus.onDidChangeToFalse;\n        this._editorWidgetFocus = this._register(new BooleanEventEmitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidFocusEditorWidget = this._editorWidgetFocus.onDidChangeToTrue;\n        this.onDidBlurEditorWidget = this._editorWidgetFocus.onDidChangeToFalse;\n        this._onWillType = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onWillType = this._onWillType.event;\n        this._onDidType = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidType = this._onDidType.event;\n        this._onDidCompositionStart = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidCompositionStart = this._onDidCompositionStart.event;\n        this._onDidCompositionEnd = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidCompositionEnd = this._onDidCompositionEnd.event;\n        this._onDidPaste = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDidPaste = this._onDidPaste.event;\n        this._onMouseUp = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseUp = this._onMouseUp.event;\n        this._onMouseDown = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDown = this._onMouseDown.event;\n        this._onMouseDrag = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDrag = this._onMouseDrag.event;\n        this._onMouseDrop = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDrop = this._onMouseDrop.event;\n        this._onMouseDropCanceled = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseDropCanceled = this._onMouseDropCanceled.event;\n        this._onDropIntoEditor = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onDropIntoEditor = this._onDropIntoEditor.event;\n        this._onContextMenu = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onContextMenu = this._onContextMenu.event;\n        this._onMouseMove = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseMove = this._onMouseMove.event;\n        this._onMouseLeave = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseLeave = this._onMouseLeave.event;\n        this._onMouseWheel = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onMouseWheel = this._onMouseWheel.event;\n        this._onKeyUp = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onKeyUp = this._onKeyUp.event;\n        this._onKeyDown = this._register(new InteractionEmitter(this._contributions, this._deliveryQueue));\n        this.onKeyDown = this._onKeyDown.event;\n        this._onDidContentSizeChange = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidContentSizeChange = this._onDidContentSizeChange.event;\n        this._onDidScrollChange = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidScrollChange = this._onDidScrollChange.event;\n        this._onDidChangeViewZones = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeViewZones = this._onDidChangeViewZones.event;\n        this._onDidChangeHiddenAreas = this._register(new Emitter({ deliveryQueue: this._deliveryQueue }));\n        this.onDidChangeHiddenAreas = this._onDidChangeHiddenAreas.event;\n        this._actions = new Map();\n        this._bannerDomNode = null;\n        this._dropIntoEditorDecorations = this.createDecorationsCollection();\n        codeEditorService.willCreateCodeEditor();\n        const options = Object.assign({}, _options);\n        this._domElement = domElement;\n        this._overflowWidgetsDomNode = options.overflowWidgetsDomNode;\n        delete options.overflowWidgetsDomNode;\n        this._id = (++EDITOR_ID);\n        this._decorationTypeKeysToIds = {};\n        this._decorationTypeSubtypes = {};\n        this._telemetryData = codeEditorWidgetOptions.telemetryData;\n        this._configuration = this._register(this._createConfiguration(codeEditorWidgetOptions.isSimpleWidget || false, options, accessibilityService));\n        this._register(this._configuration.onDidChange((e) => {\n            this._onDidChangeConfiguration.fire(e);\n            const options = this._configuration.options;\n            if (e.hasChanged(142 /* EditorOption.layoutInfo */)) {\n                const layoutInfo = options.get(142 /* EditorOption.layoutInfo */);\n                this._onDidLayoutChange.fire(layoutInfo);\n            }\n        }));\n        this._contextKeyService = this._register(contextKeyService.createScoped(this._domElement));\n        this._notificationService = notificationService;\n        this._codeEditorService = codeEditorService;\n        this._commandService = commandService;\n        this._themeService = themeService;\n        this._register(new EditorContextKeysManager(this, this._contextKeyService));\n        this._register(new EditorModeContext(this, this._contextKeyService, languageFeaturesService));\n        this._instantiationService = instantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService]));\n        this._modelData = null;\n        this._focusTracker = new CodeEditorWidgetFocusTracker(domElement);\n        this._register(this._focusTracker.onChange(() => {\n            this._editorWidgetFocus.setValue(this._focusTracker.hasFocus());\n        }));\n        this._contentWidgets = {};\n        this._overlayWidgets = {};\n        this._glyphMarginWidgets = {};\n        let contributions;\n        if (Array.isArray(codeEditorWidgetOptions.contributions)) {\n            contributions = codeEditorWidgetOptions.contributions;\n        }\n        else {\n            contributions = EditorExtensionsRegistry.getEditorContributions();\n        }\n        this._contributions.initialize(this, contributions, this._instantiationService);\n        for (const action of EditorExtensionsRegistry.getEditorActions()) {\n            if (this._actions.has(action.id)) {\n                onUnexpectedError(new Error(`Cannot have two actions with the same id ${action.id}`));\n                continue;\n            }\n            const internalAction = new InternalEditorAction(action.id, action.label, action.alias, withNullAsUndefined(action.precondition), () => {\n                return this._instantiationService.invokeFunction((accessor) => {\n                    return Promise.resolve(action.runEditorCommand(accessor, this, null));\n                });\n            }, this._contextKeyService);\n            this._actions.set(internalAction.id, internalAction);\n        }\n        const isDropIntoEnabled = () => {\n            return !this._configuration.options.get(89 /* EditorOption.readOnly */)\n                && this._configuration.options.get(35 /* EditorOption.dropIntoEditor */).enabled;\n        };\n        this._register(new dom.DragAndDropObserver(this._domElement, {\n            onDragEnter: () => undefined,\n            onDragOver: e => {\n                if (!isDropIntoEnabled()) {\n                    return;\n                }\n                const target = this.getTargetAtClientPoint(e.clientX, e.clientY);\n                if (target === null || target === void 0 ? void 0 : target.position) {\n                    this.showDropIndicatorAt(target.position);\n                }\n            },\n            onDrop: (e) => __awaiter(this, void 0, void 0, function* () {\n                if (!isDropIntoEnabled()) {\n                    return;\n                }\n                this.removeDropIndicator();\n                if (!e.dataTransfer) {\n                    return;\n                }\n                const target = this.getTargetAtClientPoint(e.clientX, e.clientY);\n                if (target === null || target === void 0 ? void 0 : target.position) {\n                    this._onDropIntoEditor.fire({ position: target.position, event: e });\n                }\n            }),\n            onDragLeave: () => {\n                this.removeDropIndicator();\n            },\n            onDragEnd: () => {\n                this.removeDropIndicator();\n            },\n        }));\n        this._codeEditorService.addCodeEditor(this);\n    }\n    writeScreenReaderContent(reason) {\n        var _a;\n        (_a = this._modelData) === null || _a === void 0 ? void 0 : _a.view.writeScreenReaderContent(reason);\n    }\n    _createConfiguration(isSimpleWidget, options, accessibilityService) {\n        return new EditorConfiguration(isSimpleWidget, options, this._domElement, accessibilityService);\n    }\n    getId() {\n        return this.getEditorType() + ':' + this._id;\n    }\n    getEditorType() {\n        return editorCommon.EditorType.ICodeEditor;\n    }\n    dispose() {\n        this._codeEditorService.removeCodeEditor(this);\n        this._focusTracker.dispose();\n        this._actions.clear();\n        this._contentWidgets = {};\n        this._overlayWidgets = {};\n        this._removeDecorationTypes();\n        this._postDetachModelCleanup(this._detachModel());\n        this._onDidDispose.fire();\n        super.dispose();\n    }\n    invokeWithinContext(fn) {\n        return this._instantiationService.invokeFunction(fn);\n    }\n    updateOptions(newOptions) {\n        this._configuration.updateOptions(newOptions || {});\n    }\n    getOptions() {\n        return this._configuration.options;\n    }\n    getOption(id) {\n        return this._configuration.options.get(id);\n    }\n    getRawOptions() {\n        return this._configuration.getRawOptions();\n    }\n    getOverflowWidgetsDomNode() {\n        return this._overflowWidgetsDomNode;\n    }\n    getConfiguredWordAtPosition(position) {\n        if (!this._modelData) {\n            return null;\n        }\n        return WordOperations.getWordAtPosition(this._modelData.model, this._configuration.options.get(128 /* EditorOption.wordSeparators */), position);\n    }\n    getValue(options = null) {\n        if (!this._modelData) {\n            return '';\n        }\n        const preserveBOM = (options && options.preserveBOM) ? true : false;\n        let eolPreference = 0 /* EndOfLinePreference.TextDefined */;\n        if (options && options.lineEnding && options.lineEnding === '\\n') {\n            eolPreference = 1 /* EndOfLinePreference.LF */;\n        }\n        else if (options && options.lineEnding && options.lineEnding === '\\r\\n') {\n            eolPreference = 2 /* EndOfLinePreference.CRLF */;\n        }\n        return this._modelData.model.getValue(eolPreference, preserveBOM);\n    }\n    setValue(newValue) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.model.setValue(newValue);\n    }\n    getModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model;\n    }\n    setModel(_model = null) {\n        const model = _model;\n        if (this._modelData === null && model === null) {\n            // Current model is the new model\n            return;\n        }\n        if (this._modelData && this._modelData.model === model) {\n            // Current model is the new model\n            return;\n        }\n        const hasTextFocus = this.hasTextFocus();\n        const detachedModel = this._detachModel();\n        this._attachModel(model);\n        if (hasTextFocus && this.hasModel()) {\n            this.focus();\n        }\n        const e = {\n            oldModelUrl: detachedModel ? detachedModel.uri : null,\n            newModelUrl: model ? model.uri : null\n        };\n        this._removeDecorationTypes();\n        this._onDidChangeModel.fire(e);\n        this._postDetachModelCleanup(detachedModel);\n        this._contributions.onAfterModelAttached();\n    }\n    _removeDecorationTypes() {\n        this._decorationTypeKeysToIds = {};\n        if (this._decorationTypeSubtypes) {\n            for (const decorationType in this._decorationTypeSubtypes) {\n                const subTypes = this._decorationTypeSubtypes[decorationType];\n                for (const subType in subTypes) {\n                    this._removeDecorationType(decorationType + '-' + subType);\n                }\n            }\n            this._decorationTypeSubtypes = {};\n        }\n    }\n    getVisibleRanges() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.getVisibleRanges();\n    }\n    getVisibleRangesPlusViewportAboveBelow() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.getVisibleRangesPlusViewportAboveBelow();\n    }\n    getWhitespaces() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.viewLayout.getWhitespaces();\n    }\n    static _getVerticalOffsetAfterPosition(modelData, modelLineNumber, modelColumn, includeViewZones) {\n        const modelPosition = modelData.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = modelData.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        return modelData.viewModel.viewLayout.getVerticalOffsetAfterLineNumber(viewPosition.lineNumber, includeViewZones);\n    }\n    getTopForLineNumber(lineNumber, includeViewZones = false) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget._getVerticalOffsetForPosition(this._modelData, lineNumber, 1, includeViewZones);\n    }\n    getTopForPosition(lineNumber, column) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget._getVerticalOffsetForPosition(this._modelData, lineNumber, column, false);\n    }\n    static _getVerticalOffsetForPosition(modelData, modelLineNumber, modelColumn, includeViewZones = false) {\n        const modelPosition = modelData.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = modelData.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        return modelData.viewModel.viewLayout.getVerticalOffsetForLineNumber(viewPosition.lineNumber, includeViewZones);\n    }\n    getBottomForLineNumber(lineNumber, includeViewZones = false) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget._getVerticalOffsetAfterPosition(this._modelData, lineNumber, 1, includeViewZones);\n    }\n    setHiddenAreas(ranges, source) {\n        var _a;\n        (_a = this._modelData) === null || _a === void 0 ? void 0 : _a.viewModel.setHiddenAreas(ranges.map(r => Range.lift(r)), source);\n    }\n    getVisibleColumnFromPosition(rawPosition) {\n        if (!this._modelData) {\n            return rawPosition.column;\n        }\n        const position = this._modelData.model.validatePosition(rawPosition);\n        const tabSize = this._modelData.model.getOptions().tabSize;\n        return CursorColumns.visibleColumnFromColumn(this._modelData.model.getLineContent(position.lineNumber), position.column, tabSize) + 1;\n    }\n    getPosition() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getPosition();\n    }\n    setPosition(position, source = 'api') {\n        if (!this._modelData) {\n            return;\n        }\n        if (!Position.isIPosition(position)) {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.setSelections(source, [{\n                selectionStartLineNumber: position.lineNumber,\n                selectionStartColumn: position.column,\n                positionLineNumber: position.lineNumber,\n                positionColumn: position.column\n            }]);\n    }\n    _sendRevealRange(modelRange, verticalType, revealHorizontal, scrollType) {\n        if (!this._modelData) {\n            return;\n        }\n        if (!Range.isIRange(modelRange)) {\n            throw new Error('Invalid arguments');\n        }\n        const validatedModelRange = this._modelData.model.validateRange(modelRange);\n        const viewRange = this._modelData.viewModel.coordinatesConverter.convertModelRangeToViewRange(validatedModelRange);\n        this._modelData.viewModel.revealRange('api', revealHorizontal, viewRange, verticalType, scrollType);\n    }\n    revealLine(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 0 /* VerticalRevealType.Simple */, scrollType);\n    }\n    revealLineInCenter(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 1 /* VerticalRevealType.Center */, scrollType);\n    }\n    revealLineInCenterIfOutsideViewport(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 2 /* VerticalRevealType.CenterIfOutsideViewport */, scrollType);\n    }\n    revealLineNearTop(lineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLine(lineNumber, 5 /* VerticalRevealType.NearTop */, scrollType);\n    }\n    _revealLine(lineNumber, revealType, scrollType) {\n        if (typeof lineNumber !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(lineNumber, 1, lineNumber, 1), revealType, false, scrollType);\n    }\n    revealPosition(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 0 /* VerticalRevealType.Simple */, true, scrollType);\n    }\n    revealPositionInCenter(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 1 /* VerticalRevealType.Center */, true, scrollType);\n    }\n    revealPositionInCenterIfOutsideViewport(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 2 /* VerticalRevealType.CenterIfOutsideViewport */, true, scrollType);\n    }\n    revealPositionNearTop(position, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealPosition(position, 5 /* VerticalRevealType.NearTop */, true, scrollType);\n    }\n    _revealPosition(position, verticalType, revealHorizontal, scrollType) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(position.lineNumber, position.column, position.lineNumber, position.column), verticalType, revealHorizontal, scrollType);\n    }\n    getSelection() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getSelection();\n    }\n    getSelections() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getSelections();\n    }\n    setSelection(something, source = 'api') {\n        const isSelection = Selection.isISelection(something);\n        const isRange = Range.isIRange(something);\n        if (!isSelection && !isRange) {\n            throw new Error('Invalid arguments');\n        }\n        if (isSelection) {\n            this._setSelectionImpl(something, source);\n        }\n        else if (isRange) {\n            // act as if it was an IRange\n            const selection = {\n                selectionStartLineNumber: something.startLineNumber,\n                selectionStartColumn: something.startColumn,\n                positionLineNumber: something.endLineNumber,\n                positionColumn: something.endColumn\n            };\n            this._setSelectionImpl(selection, source);\n        }\n    }\n    _setSelectionImpl(sel, source) {\n        if (!this._modelData) {\n            return;\n        }\n        const selection = new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n        this._modelData.viewModel.setSelections(source, [selection]);\n    }\n    revealLines(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 0 /* VerticalRevealType.Simple */, scrollType);\n    }\n    revealLinesInCenter(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 1 /* VerticalRevealType.Center */, scrollType);\n    }\n    revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 2 /* VerticalRevealType.CenterIfOutsideViewport */, scrollType);\n    }\n    revealLinesNearTop(startLineNumber, endLineNumber, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 5 /* VerticalRevealType.NearTop */, scrollType);\n    }\n    _revealLines(startLineNumber, endLineNumber, verticalType, scrollType) {\n        if (typeof startLineNumber !== 'number' || typeof endLineNumber !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(startLineNumber, 1, endLineNumber, 1), verticalType, false, scrollType);\n    }\n    revealRange(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */, revealVerticalInCenter = false, revealHorizontal = true) {\n        this._revealRange(range, revealVerticalInCenter ? 1 /* VerticalRevealType.Center */ : 0 /* VerticalRevealType.Simple */, revealHorizontal, scrollType);\n    }\n    revealRangeInCenter(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 1 /* VerticalRevealType.Center */, true, scrollType);\n    }\n    revealRangeInCenterIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 2 /* VerticalRevealType.CenterIfOutsideViewport */, true, scrollType);\n    }\n    revealRangeNearTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 5 /* VerticalRevealType.NearTop */, true, scrollType);\n    }\n    revealRangeNearTopIfOutsideViewport(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 6 /* VerticalRevealType.NearTopIfOutsideViewport */, true, scrollType);\n    }\n    revealRangeAtTop(range, scrollType = 0 /* editorCommon.ScrollType.Smooth */) {\n        this._revealRange(range, 3 /* VerticalRevealType.Top */, true, scrollType);\n    }\n    _revealRange(range, verticalType, revealHorizontal, scrollType) {\n        if (!Range.isIRange(range)) {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(Range.lift(range), verticalType, revealHorizontal, scrollType);\n    }\n    setSelections(ranges, source = 'api', reason = 0 /* CursorChangeReason.NotSet */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (!ranges || ranges.length === 0) {\n            throw new Error('Invalid arguments');\n        }\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            if (!Selection.isISelection(ranges[i])) {\n                throw new Error('Invalid arguments');\n            }\n        }\n        this._modelData.viewModel.setSelections(source, ranges, reason);\n    }\n    getContentWidth() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getContentWidth();\n    }\n    getScrollWidth() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getScrollWidth();\n    }\n    getScrollLeft() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getCurrentScrollLeft();\n    }\n    getContentHeight() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getContentHeight();\n    }\n    getScrollHeight() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getScrollHeight();\n    }\n    getScrollTop() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getCurrentScrollTop();\n    }\n    setScrollLeft(newScrollLeft, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (typeof newScrollLeft !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition({\n            scrollLeft: newScrollLeft\n        }, scrollType);\n    }\n    setScrollTop(newScrollTop, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (typeof newScrollTop !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition({\n            scrollTop: newScrollTop\n        }, scrollType);\n    }\n    setScrollPosition(position, scrollType = 1 /* editorCommon.ScrollType.Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.viewLayout.setScrollPosition(position, scrollType);\n    }\n    hasPendingScrollAnimation() {\n        if (!this._modelData) {\n            return false;\n        }\n        return this._modelData.viewModel.viewLayout.hasPendingScrollAnimation();\n    }\n    saveViewState() {\n        if (!this._modelData) {\n            return null;\n        }\n        const contributionsState = this._contributions.saveViewState();\n        const cursorState = this._modelData.viewModel.saveCursorState();\n        const viewState = this._modelData.viewModel.saveState();\n        return {\n            cursorState: cursorState,\n            viewState: viewState,\n            contributionsState: contributionsState\n        };\n    }\n    restoreViewState(s) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        const codeEditorState = s;\n        if (codeEditorState && codeEditorState.cursorState && codeEditorState.viewState) {\n            const cursorState = codeEditorState.cursorState;\n            if (Array.isArray(cursorState)) {\n                if (cursorState.length > 0) {\n                    this._modelData.viewModel.restoreCursorState(cursorState);\n                }\n            }\n            else {\n                // Backwards compatibility\n                this._modelData.viewModel.restoreCursorState([cursorState]);\n            }\n            this._contributions.restoreViewState(codeEditorState.contributionsState || {});\n            const reducedState = this._modelData.viewModel.reduceRestoreState(codeEditorState.viewState);\n            this._modelData.view.restoreState(reducedState);\n        }\n    }\n    handleInitialized() {\n        var _a;\n        (_a = this._getViewModel()) === null || _a === void 0 ? void 0 : _a.visibleLinesStabilized();\n    }\n    getContribution(id) {\n        return this._contributions.get(id);\n    }\n    getActions() {\n        return Array.from(this._actions.values());\n    }\n    getSupportedActions() {\n        let result = this.getActions();\n        result = result.filter(action => action.isSupported());\n        return result;\n    }\n    getAction(id) {\n        return this._actions.get(id) || null;\n    }\n    trigger(source, handlerId, payload) {\n        payload = payload || {};\n        switch (handlerId) {\n            case \"compositionStart\" /* editorCommon.Handler.CompositionStart */:\n                this._startComposition();\n                return;\n            case \"compositionEnd\" /* editorCommon.Handler.CompositionEnd */:\n                this._endComposition(source);\n                return;\n            case \"type\" /* editorCommon.Handler.Type */: {\n                const args = payload;\n                this._type(source, args.text || '');\n                return;\n            }\n            case \"replacePreviousChar\" /* editorCommon.Handler.ReplacePreviousChar */: {\n                const args = payload;\n                this._compositionType(source, args.text || '', args.replaceCharCnt || 0, 0, 0);\n                return;\n            }\n            case \"compositionType\" /* editorCommon.Handler.CompositionType */: {\n                const args = payload;\n                this._compositionType(source, args.text || '', args.replacePrevCharCnt || 0, args.replaceNextCharCnt || 0, args.positionDelta || 0);\n                return;\n            }\n            case \"paste\" /* editorCommon.Handler.Paste */: {\n                const args = payload;\n                this._paste(source, args.text || '', args.pasteOnNewLine || false, args.multicursorText || null, args.mode || null);\n                return;\n            }\n            case \"cut\" /* editorCommon.Handler.Cut */:\n                this._cut(source);\n                return;\n        }\n        const action = this.getAction(handlerId);\n        if (action) {\n            Promise.resolve(action.run(payload)).then(undefined, onUnexpectedError);\n            return;\n        }\n        if (!this._modelData) {\n            return;\n        }\n        if (this._triggerEditorCommand(source, handlerId, payload)) {\n            return;\n        }\n        this._triggerCommand(handlerId, payload);\n    }\n    _triggerCommand(handlerId, payload) {\n        this._commandService.executeCommand(handlerId, payload);\n    }\n    _startComposition() {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.startComposition();\n        this._onDidCompositionStart.fire();\n    }\n    _endComposition(source) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.endComposition(source);\n        this._onDidCompositionEnd.fire();\n    }\n    _type(source, text) {\n        if (!this._modelData || text.length === 0) {\n            return;\n        }\n        if (source === 'keyboard') {\n            this._onWillType.fire(text);\n        }\n        this._modelData.viewModel.type(text, source);\n        if (source === 'keyboard') {\n            this._onDidType.fire(text);\n        }\n    }\n    _compositionType(source, text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta, source);\n    }\n    _paste(source, text, pasteOnNewLine, multicursorText, mode) {\n        if (!this._modelData || text.length === 0) {\n            return;\n        }\n        const viewModel = this._modelData.viewModel;\n        const startPosition = viewModel.getSelection().getStartPosition();\n        viewModel.paste(text, pasteOnNewLine, multicursorText, source);\n        const endPosition = viewModel.getSelection().getStartPosition();\n        if (source === 'keyboard') {\n            this._onDidPaste.fire({\n                range: new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column),\n                languageId: mode\n            });\n        }\n    }\n    _cut(source) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.cut(source);\n    }\n    _triggerEditorCommand(source, handlerId, payload) {\n        const command = EditorExtensionsRegistry.getEditorCommand(handlerId);\n        if (command) {\n            payload = payload || {};\n            payload.source = source;\n            this._instantiationService.invokeFunction((accessor) => {\n                Promise.resolve(command.runEditorCommand(accessor, this, payload)).then(undefined, onUnexpectedError);\n            });\n            return true;\n        }\n        return false;\n    }\n    _getViewModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel;\n    }\n    pushUndoStop() {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(89 /* EditorOption.readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        this._modelData.model.pushStackElement();\n        return true;\n    }\n    popUndoStop() {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(89 /* EditorOption.readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        this._modelData.model.popStackElement();\n        return true;\n    }\n    executeEdits(source, edits, endCursorState) {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(89 /* EditorOption.readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        let cursorStateComputer;\n        if (!endCursorState) {\n            cursorStateComputer = () => null;\n        }\n        else if (Array.isArray(endCursorState)) {\n            cursorStateComputer = () => endCursorState;\n        }\n        else {\n            cursorStateComputer = endCursorState;\n        }\n        this._modelData.viewModel.executeEdits(source, edits, cursorStateComputer);\n        return true;\n    }\n    executeCommand(source, command) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.executeCommand(command, source);\n    }\n    executeCommands(source, commands) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.executeCommands(commands, source);\n    }\n    createDecorationsCollection(decorations) {\n        return new EditorDecorationsCollection(this, decorations);\n    }\n    changeDecorations(callback) {\n        if (!this._modelData) {\n            // callback will not be called\n            return null;\n        }\n        return this._modelData.model.changeDecorations(callback, this._id);\n    }\n    getLineDecorations(lineNumber) {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model.getLineDecorations(lineNumber, this._id, filterValidationDecorations(this._configuration.options));\n    }\n    getDecorationsInRange(range) {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model.getDecorationsInRange(range, this._id, filterValidationDecorations(this._configuration.options));\n    }\n    /**\n     * @deprecated\n     */\n    deltaDecorations(oldDecorations, newDecorations) {\n        if (!this._modelData) {\n            return [];\n        }\n        if (oldDecorations.length === 0 && newDecorations.length === 0) {\n            return oldDecorations;\n        }\n        return this._modelData.model.deltaDecorations(oldDecorations, newDecorations, this._id);\n    }\n    removeDecorations(decorationIds) {\n        if (!this._modelData || decorationIds.length === 0) {\n            return;\n        }\n        this._modelData.model.changeDecorations((changeAccessor) => {\n            changeAccessor.deltaDecorations(decorationIds, []);\n        });\n    }\n    removeDecorationsByType(decorationTypeKey) {\n        // remove decorations for type and sub type\n        const oldDecorationsIds = this._decorationTypeKeysToIds[decorationTypeKey];\n        if (oldDecorationsIds) {\n            this.deltaDecorations(oldDecorationsIds, []);\n        }\n        if (this._decorationTypeKeysToIds.hasOwnProperty(decorationTypeKey)) {\n            delete this._decorationTypeKeysToIds[decorationTypeKey];\n        }\n        if (this._decorationTypeSubtypes.hasOwnProperty(decorationTypeKey)) {\n            delete this._decorationTypeSubtypes[decorationTypeKey];\n        }\n    }\n    getLayoutInfo() {\n        const options = this._configuration.options;\n        const layoutInfo = options.get(142 /* EditorOption.layoutInfo */);\n        return layoutInfo;\n    }\n    createOverviewRuler(cssClassName) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.createOverviewRuler(cssClassName);\n    }\n    getContainerDomNode() {\n        return this._domElement;\n    }\n    getDomNode() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.domNode.domNode;\n    }\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.delegateVerticalScrollbarPointerDown(browserEvent);\n    }\n    delegateScrollFromMouseWheelEvent(browserEvent) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.delegateScrollFromMouseWheelEvent(browserEvent);\n    }\n    layout(dimension) {\n        this._configuration.observeContainer(dimension);\n        this.render();\n    }\n    focus() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.focus();\n    }\n    hasTextFocus() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return false;\n        }\n        return this._modelData.view.isFocused();\n    }\n    hasWidgetFocus() {\n        return this._focusTracker && this._focusTracker.hasFocus();\n    }\n    addContentWidget(widget) {\n        const widgetData = {\n            widget: widget,\n            position: widget.getPosition()\n        };\n        if (this._contentWidgets.hasOwnProperty(widget.getId())) {\n            console.warn('Overwriting a content widget with the same id.');\n        }\n        this._contentWidgets[widget.getId()] = widgetData;\n        if (this._modelData && this._modelData.hasRealView) {\n            this._modelData.view.addContentWidget(widgetData);\n        }\n    }\n    layoutContentWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._contentWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._contentWidgets[widgetId];\n            widgetData.position = widget.getPosition();\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.layoutContentWidget(widgetData);\n            }\n        }\n    }\n    removeContentWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._contentWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._contentWidgets[widgetId];\n            delete this._contentWidgets[widgetId];\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.removeContentWidget(widgetData);\n            }\n        }\n    }\n    addOverlayWidget(widget) {\n        const widgetData = {\n            widget: widget,\n            position: widget.getPosition()\n        };\n        if (this._overlayWidgets.hasOwnProperty(widget.getId())) {\n            console.warn('Overwriting an overlay widget with the same id.');\n        }\n        this._overlayWidgets[widget.getId()] = widgetData;\n        if (this._modelData && this._modelData.hasRealView) {\n            this._modelData.view.addOverlayWidget(widgetData);\n        }\n    }\n    layoutOverlayWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._overlayWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._overlayWidgets[widgetId];\n            widgetData.position = widget.getPosition();\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.layoutOverlayWidget(widgetData);\n            }\n        }\n    }\n    removeOverlayWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._overlayWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._overlayWidgets[widgetId];\n            delete this._overlayWidgets[widgetId];\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.removeOverlayWidget(widgetData);\n            }\n        }\n    }\n    addGlyphMarginWidget(widget) {\n        const widgetData = {\n            widget: widget,\n            position: widget.getPosition()\n        };\n        if (this._glyphMarginWidgets.hasOwnProperty(widget.getId())) {\n            console.warn('Overwriting a glyph margin widget with the same id.');\n        }\n        this._glyphMarginWidgets[widget.getId()] = widgetData;\n        if (this._modelData && this._modelData.hasRealView) {\n            this._modelData.view.addGlyphMarginWidget(widgetData);\n        }\n    }\n    layoutGlyphMarginWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._glyphMarginWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._glyphMarginWidgets[widgetId];\n            widgetData.position = widget.getPosition();\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.layoutGlyphMarginWidget(widgetData);\n            }\n        }\n    }\n    removeGlyphMarginWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._glyphMarginWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._glyphMarginWidgets[widgetId];\n            delete this._glyphMarginWidgets[widgetId];\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.removeGlyphMarginWidget(widgetData);\n            }\n        }\n    }\n    changeViewZones(callback) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.change(callback);\n    }\n    getTargetAtClientPoint(clientX, clientY) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.getTargetAtClientPoint(clientX, clientY);\n    }\n    getScrolledVisiblePosition(rawPosition) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        const position = this._modelData.model.validatePosition(rawPosition);\n        const options = this._configuration.options;\n        const layoutInfo = options.get(142 /* EditorOption.layoutInfo */);\n        const top = CodeEditorWidget._getVerticalOffsetForPosition(this._modelData, position.lineNumber, position.column) - this.getScrollTop();\n        const left = this._modelData.view.getOffsetForColumn(position.lineNumber, position.column) + layoutInfo.glyphMarginWidth + layoutInfo.lineNumbersWidth + layoutInfo.decorationsWidth - this.getScrollLeft();\n        return {\n            top: top,\n            left: left,\n            height: options.get(65 /* EditorOption.lineHeight */)\n        };\n    }\n    getOffsetForColumn(lineNumber, column) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return -1;\n        }\n        return this._modelData.view.getOffsetForColumn(lineNumber, column);\n    }\n    render(forceRedraw = false) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.render(true, forceRedraw);\n    }\n    setAriaOptions(options) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.setAriaOptions(options);\n    }\n    applyFontInfo(target) {\n        applyFontInfo(target, this._configuration.options.get(49 /* EditorOption.fontInfo */));\n    }\n    setBanner(domNode, domNodeHeight) {\n        if (this._bannerDomNode && this._domElement.contains(this._bannerDomNode)) {\n            this._domElement.removeChild(this._bannerDomNode);\n        }\n        this._bannerDomNode = domNode;\n        this._configuration.setReservedHeight(domNode ? domNodeHeight : 0);\n        if (this._bannerDomNode) {\n            this._domElement.prepend(this._bannerDomNode);\n        }\n    }\n    _attachModel(model) {\n        if (!model) {\n            this._modelData = null;\n            return;\n        }\n        const listenersToRemove = [];\n        this._domElement.setAttribute('data-mode-id', model.getLanguageId());\n        this._configuration.setIsDominatedByLongLines(model.isDominatedByLongLines());\n        this._configuration.setModelLineCount(model.getLineCount());\n        const attachedView = model.onBeforeAttached();\n        const viewModel = new ViewModel(this._id, this._configuration, model, DOMLineBreaksComputerFactory.create(), MonospaceLineBreaksComputerFactory.create(this._configuration.options), (callback) => dom.scheduleAtNextAnimationFrame(callback), this.languageConfigurationService, this._themeService, attachedView);\n        // Someone might destroy the model from under the editor, so prevent any exceptions by setting a null model\n        listenersToRemove.push(model.onWillDispose(() => this.setModel(null)));\n        listenersToRemove.push(viewModel.onEvent((e) => {\n            switch (e.kind) {\n                case 0 /* OutgoingViewModelEventKind.ContentSizeChanged */:\n                    this._onDidContentSizeChange.fire(e);\n                    break;\n                case 1 /* OutgoingViewModelEventKind.FocusChanged */:\n                    this._editorTextFocus.setValue(e.hasFocus);\n                    break;\n                case 2 /* OutgoingViewModelEventKind.ScrollChanged */:\n                    this._onDidScrollChange.fire(e);\n                    break;\n                case 3 /* OutgoingViewModelEventKind.ViewZonesChanged */:\n                    this._onDidChangeViewZones.fire();\n                    break;\n                case 4 /* OutgoingViewModelEventKind.HiddenAreasChanged */:\n                    this._onDidChangeHiddenAreas.fire();\n                    break;\n                case 5 /* OutgoingViewModelEventKind.ReadOnlyEditAttempt */:\n                    this._onDidAttemptReadOnlyEdit.fire();\n                    break;\n                case 6 /* OutgoingViewModelEventKind.CursorStateChanged */: {\n                    if (e.reachedMaxCursorCount) {\n                        const multiCursorLimit = this.getOption(78 /* EditorOption.multiCursorLimit */);\n                        const message = nls.localize('cursors.maximum', \"The number of cursors has been limited to {0}. Consider using [find and replace](https://code.visualstudio.com/docs/editor/codebasics#_find-and-replace) for larger changes or increase the editor multi cursor limit setting.\", multiCursorLimit);\n                        this._notificationService.prompt(Severity.Warning, message, [\n                            {\n                                label: 'Find and Replace',\n                                run: () => {\n                                    this._commandService.executeCommand('editor.action.startFindReplaceAction');\n                                }\n                            },\n                            {\n                                label: nls.localize('goToSetting', 'Increase Multi Cursor Limit'),\n                                run: () => {\n                                    this._commandService.executeCommand('workbench.action.openSettings2', {\n                                        query: 'editor.multiCursorLimit'\n                                    });\n                                }\n                            }\n                        ]);\n                    }\n                    const positions = [];\n                    for (let i = 0, len = e.selections.length; i < len; i++) {\n                        positions[i] = e.selections[i].getPosition();\n                    }\n                    const e1 = {\n                        position: positions[0],\n                        secondaryPositions: positions.slice(1),\n                        reason: e.reason,\n                        source: e.source\n                    };\n                    this._onDidChangeCursorPosition.fire(e1);\n                    const e2 = {\n                        selection: e.selections[0],\n                        secondarySelections: e.selections.slice(1),\n                        modelVersionId: e.modelVersionId,\n                        oldSelections: e.oldSelections,\n                        oldModelVersionId: e.oldModelVersionId,\n                        source: e.source,\n                        reason: e.reason\n                    };\n                    this._onDidChangeCursorSelection.fire(e2);\n                    break;\n                }\n                case 7 /* OutgoingViewModelEventKind.ModelDecorationsChanged */:\n                    this._onDidChangeModelDecorations.fire(e.event);\n                    break;\n                case 8 /* OutgoingViewModelEventKind.ModelLanguageChanged */:\n                    this._domElement.setAttribute('data-mode-id', model.getLanguageId());\n                    this._onDidChangeModelLanguage.fire(e.event);\n                    break;\n                case 9 /* OutgoingViewModelEventKind.ModelLanguageConfigurationChanged */:\n                    this._onDidChangeModelLanguageConfiguration.fire(e.event);\n                    break;\n                case 10 /* OutgoingViewModelEventKind.ModelContentChanged */:\n                    this._onDidChangeModelContent.fire(e.event);\n                    break;\n                case 11 /* OutgoingViewModelEventKind.ModelOptionsChanged */:\n                    this._onDidChangeModelOptions.fire(e.event);\n                    break;\n                case 12 /* OutgoingViewModelEventKind.ModelTokensChanged */:\n                    this._onDidChangeModelTokens.fire(e.event);\n                    break;\n            }\n        }));\n        const [view, hasRealView] = this._createView(viewModel);\n        if (hasRealView) {\n            this._domElement.appendChild(view.domNode.domNode);\n            let keys = Object.keys(this._contentWidgets);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const widgetId = keys[i];\n                view.addContentWidget(this._contentWidgets[widgetId]);\n            }\n            keys = Object.keys(this._overlayWidgets);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const widgetId = keys[i];\n                view.addOverlayWidget(this._overlayWidgets[widgetId]);\n            }\n            keys = Object.keys(this._glyphMarginWidgets);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const widgetId = keys[i];\n                view.addGlyphMarginWidget(this._glyphMarginWidgets[widgetId]);\n            }\n            view.render(false, true);\n            view.domNode.domNode.setAttribute('data-uri', model.uri.toString());\n        }\n        this._modelData = new ModelData(model, viewModel, view, hasRealView, listenersToRemove, attachedView);\n    }\n    _createView(viewModel) {\n        let commandDelegate;\n        if (this.isSimpleWidget) {\n            commandDelegate = {\n                paste: (text, pasteOnNewLine, multicursorText, mode) => {\n                    this._paste('keyboard', text, pasteOnNewLine, multicursorText, mode);\n                },\n                type: (text) => {\n                    this._type('keyboard', text);\n                },\n                compositionType: (text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) => {\n                    this._compositionType('keyboard', text, replacePrevCharCnt, replaceNextCharCnt, positionDelta);\n                },\n                startComposition: () => {\n                    this._startComposition();\n                },\n                endComposition: () => {\n                    this._endComposition('keyboard');\n                },\n                cut: () => {\n                    this._cut('keyboard');\n                }\n            };\n        }\n        else {\n            commandDelegate = {\n                paste: (text, pasteOnNewLine, multicursorText, mode) => {\n                    const payload = { text, pasteOnNewLine, multicursorText, mode };\n                    this._commandService.executeCommand(\"paste\" /* editorCommon.Handler.Paste */, payload);\n                },\n                type: (text) => {\n                    const payload = { text };\n                    this._commandService.executeCommand(\"type\" /* editorCommon.Handler.Type */, payload);\n                },\n                compositionType: (text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) => {\n                    // Try if possible to go through the existing `replacePreviousChar` command\n                    if (replaceNextCharCnt || positionDelta) {\n                        // must be handled through the new command\n                        const payload = { text, replacePrevCharCnt, replaceNextCharCnt, positionDelta };\n                        this._commandService.executeCommand(\"compositionType\" /* editorCommon.Handler.CompositionType */, payload);\n                    }\n                    else {\n                        const payload = { text, replaceCharCnt: replacePrevCharCnt };\n                        this._commandService.executeCommand(\"replacePreviousChar\" /* editorCommon.Handler.ReplacePreviousChar */, payload);\n                    }\n                },\n                startComposition: () => {\n                    this._commandService.executeCommand(\"compositionStart\" /* editorCommon.Handler.CompositionStart */, {});\n                },\n                endComposition: () => {\n                    this._commandService.executeCommand(\"compositionEnd\" /* editorCommon.Handler.CompositionEnd */, {});\n                },\n                cut: () => {\n                    this._commandService.executeCommand(\"cut\" /* editorCommon.Handler.Cut */, {});\n                }\n            };\n        }\n        const viewUserInputEvents = new ViewUserInputEvents(viewModel.coordinatesConverter);\n        viewUserInputEvents.onKeyDown = (e) => this._onKeyDown.fire(e);\n        viewUserInputEvents.onKeyUp = (e) => this._onKeyUp.fire(e);\n        viewUserInputEvents.onContextMenu = (e) => this._onContextMenu.fire(e);\n        viewUserInputEvents.onMouseMove = (e) => this._onMouseMove.fire(e);\n        viewUserInputEvents.onMouseLeave = (e) => this._onMouseLeave.fire(e);\n        viewUserInputEvents.onMouseDown = (e) => this._onMouseDown.fire(e);\n        viewUserInputEvents.onMouseUp = (e) => this._onMouseUp.fire(e);\n        viewUserInputEvents.onMouseDrag = (e) => this._onMouseDrag.fire(e);\n        viewUserInputEvents.onMouseDrop = (e) => this._onMouseDrop.fire(e);\n        viewUserInputEvents.onMouseDropCanceled = (e) => this._onMouseDropCanceled.fire(e);\n        viewUserInputEvents.onMouseWheel = (e) => this._onMouseWheel.fire(e);\n        const view = new View(commandDelegate, this._configuration, this._themeService.getColorTheme(), viewModel, viewUserInputEvents, this._overflowWidgetsDomNode, this._instantiationService);\n        return [view, true];\n    }\n    _postDetachModelCleanup(detachedModel) {\n        detachedModel === null || detachedModel === void 0 ? void 0 : detachedModel.removeAllDecorationsWithOwnerId(this._id);\n    }\n    _detachModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        const model = this._modelData.model;\n        const removeDomNode = this._modelData.hasRealView ? this._modelData.view.domNode.domNode : null;\n        this._modelData.dispose();\n        this._modelData = null;\n        this._domElement.removeAttribute('data-mode-id');\n        if (removeDomNode && this._domElement.contains(removeDomNode)) {\n            this._domElement.removeChild(removeDomNode);\n        }\n        if (this._bannerDomNode && this._domElement.contains(this._bannerDomNode)) {\n            this._domElement.removeChild(this._bannerDomNode);\n        }\n        return model;\n    }\n    _removeDecorationType(key) {\n        this._codeEditorService.removeDecorationType(key);\n    }\n    hasModel() {\n        return (this._modelData !== null);\n    }\n    showDropIndicatorAt(position) {\n        const newDecorations = [{\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n                options: CodeEditorWidget.dropIntoEditorDecorationOptions\n            }];\n        this._dropIntoEditorDecorations.set(newDecorations);\n        this.revealPosition(position, 1 /* editorCommon.ScrollType.Immediate */);\n    }\n    removeDropIndicator() {\n        this._dropIntoEditorDecorations.clear();\n    }\n    setContextValue(key, value) {\n        this._contextKeyService.createKey(key, value);\n    }\n};\nCodeEditorWidget.dropIntoEditorDecorationOptions = ModelDecorationOptions.register({\n    description: 'workbench-dnd-target',\n    className: 'dnd-target'\n});\nCodeEditorWidget = __decorate([\n    __param(3, IInstantiationService),\n    __param(4, ICodeEditorService),\n    __param(5, ICommandService),\n    __param(6, IContextKeyService),\n    __param(7, IThemeService),\n    __param(8, INotificationService),\n    __param(9, IAccessibilityService),\n    __param(10, ILanguageConfigurationService),\n    __param(11, ILanguageFeaturesService)\n], CodeEditorWidget);\nexport { CodeEditorWidget };\nexport class BooleanEventEmitter extends Disposable {\n    constructor(_emitterOptions) {\n        super();\n        this._emitterOptions = _emitterOptions;\n        this._onDidChangeToTrue = this._register(new Emitter(this._emitterOptions));\n        this.onDidChangeToTrue = this._onDidChangeToTrue.event;\n        this._onDidChangeToFalse = this._register(new Emitter(this._emitterOptions));\n        this.onDidChangeToFalse = this._onDidChangeToFalse.event;\n        this._value = 0 /* BooleanEventValue.NotSet */;\n    }\n    setValue(_value) {\n        const value = (_value ? 2 /* BooleanEventValue.True */ : 1 /* BooleanEventValue.False */);\n        if (this._value === value) {\n            return;\n        }\n        this._value = value;\n        if (this._value === 2 /* BooleanEventValue.True */) {\n            this._onDidChangeToTrue.fire();\n        }\n        else if (this._value === 1 /* BooleanEventValue.False */) {\n            this._onDidChangeToFalse.fire();\n        }\n    }\n}\n/**\n * A regular event emitter that also makes sure contributions are instantiated if necessary\n */\nclass InteractionEmitter extends Emitter {\n    constructor(_contributions, deliveryQueue) {\n        super({ deliveryQueue });\n        this._contributions = _contributions;\n    }\n    fire(event) {\n        this._contributions.onBeforeInteractionEvent();\n        super.fire(event);\n    }\n}\nclass EditorContextKeysManager extends Disposable {\n    constructor(editor, contextKeyService) {\n        super();\n        this._editor = editor;\n        contextKeyService.createKey('editorId', editor.getId());\n        this._editorSimpleInput = EditorContextKeys.editorSimpleInput.bindTo(contextKeyService);\n        this._editorFocus = EditorContextKeys.focus.bindTo(contextKeyService);\n        this._textInputFocus = EditorContextKeys.textInputFocus.bindTo(contextKeyService);\n        this._editorTextFocus = EditorContextKeys.editorTextFocus.bindTo(contextKeyService);\n        this._editorTabMovesFocus = EditorContextKeys.tabMovesFocus.bindTo(contextKeyService);\n        this._editorReadonly = EditorContextKeys.readOnly.bindTo(contextKeyService);\n        this._inDiffEditor = EditorContextKeys.inDiffEditor.bindTo(contextKeyService);\n        this._editorColumnSelection = EditorContextKeys.columnSelection.bindTo(contextKeyService);\n        this._hasMultipleSelections = EditorContextKeys.hasMultipleSelections.bindTo(contextKeyService);\n        this._hasNonEmptySelection = EditorContextKeys.hasNonEmptySelection.bindTo(contextKeyService);\n        this._canUndo = EditorContextKeys.canUndo.bindTo(contextKeyService);\n        this._canRedo = EditorContextKeys.canRedo.bindTo(contextKeyService);\n        this._register(this._editor.onDidChangeConfiguration(() => this._updateFromConfig()));\n        this._register(this._editor.onDidChangeCursorSelection(() => this._updateFromSelection()));\n        this._register(this._editor.onDidFocusEditorWidget(() => this._updateFromFocus()));\n        this._register(this._editor.onDidBlurEditorWidget(() => this._updateFromFocus()));\n        this._register(this._editor.onDidFocusEditorText(() => this._updateFromFocus()));\n        this._register(this._editor.onDidBlurEditorText(() => this._updateFromFocus()));\n        this._register(this._editor.onDidChangeModel(() => this._updateFromModel()));\n        this._register(this._editor.onDidChangeConfiguration(() => this._updateFromModel()));\n        this._register(TabFocus.onDidChangeTabFocus(() => this._editorTabMovesFocus.set(TabFocus.getTabFocusMode(\"editorFocus\" /* TabFocusContext.Editor */))));\n        this._updateFromConfig();\n        this._updateFromSelection();\n        this._updateFromFocus();\n        this._updateFromModel();\n        this._editorSimpleInput.set(this._editor.isSimpleWidget);\n    }\n    _updateFromConfig() {\n        const options = this._editor.getOptions();\n        this._editorTabMovesFocus.set(TabFocus.getTabFocusMode(\"editorFocus\" /* TabFocusContext.Editor */));\n        this._editorReadonly.set(options.get(89 /* EditorOption.readOnly */));\n        this._inDiffEditor.set(options.get(60 /* EditorOption.inDiffEditor */));\n        this._editorColumnSelection.set(options.get(21 /* EditorOption.columnSelection */));\n    }\n    _updateFromSelection() {\n        const selections = this._editor.getSelections();\n        if (!selections) {\n            this._hasMultipleSelections.reset();\n            this._hasNonEmptySelection.reset();\n        }\n        else {\n            this._hasMultipleSelections.set(selections.length > 1);\n            this._hasNonEmptySelection.set(selections.some(s => !s.isEmpty()));\n        }\n    }\n    _updateFromFocus() {\n        this._editorFocus.set(this._editor.hasWidgetFocus() && !this._editor.isSimpleWidget);\n        this._editorTextFocus.set(this._editor.hasTextFocus() && !this._editor.isSimpleWidget);\n        this._textInputFocus.set(this._editor.hasTextFocus());\n    }\n    _updateFromModel() {\n        const model = this._editor.getModel();\n        this._canUndo.set(Boolean(model && model.canUndo()));\n        this._canRedo.set(Boolean(model && model.canRedo()));\n    }\n}\nexport class EditorModeContext extends Disposable {\n    constructor(_editor, _contextKeyService, _languageFeaturesService) {\n        super();\n        this._editor = _editor;\n        this._contextKeyService = _contextKeyService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._langId = EditorContextKeys.languageId.bindTo(_contextKeyService);\n        this._hasCompletionItemProvider = EditorContextKeys.hasCompletionItemProvider.bindTo(_contextKeyService);\n        this._hasCodeActionsProvider = EditorContextKeys.hasCodeActionsProvider.bindTo(_contextKeyService);\n        this._hasCodeLensProvider = EditorContextKeys.hasCodeLensProvider.bindTo(_contextKeyService);\n        this._hasDefinitionProvider = EditorContextKeys.hasDefinitionProvider.bindTo(_contextKeyService);\n        this._hasDeclarationProvider = EditorContextKeys.hasDeclarationProvider.bindTo(_contextKeyService);\n        this._hasImplementationProvider = EditorContextKeys.hasImplementationProvider.bindTo(_contextKeyService);\n        this._hasTypeDefinitionProvider = EditorContextKeys.hasTypeDefinitionProvider.bindTo(_contextKeyService);\n        this._hasHoverProvider = EditorContextKeys.hasHoverProvider.bindTo(_contextKeyService);\n        this._hasDocumentHighlightProvider = EditorContextKeys.hasDocumentHighlightProvider.bindTo(_contextKeyService);\n        this._hasDocumentSymbolProvider = EditorContextKeys.hasDocumentSymbolProvider.bindTo(_contextKeyService);\n        this._hasReferenceProvider = EditorContextKeys.hasReferenceProvider.bindTo(_contextKeyService);\n        this._hasRenameProvider = EditorContextKeys.hasRenameProvider.bindTo(_contextKeyService);\n        this._hasSignatureHelpProvider = EditorContextKeys.hasSignatureHelpProvider.bindTo(_contextKeyService);\n        this._hasInlayHintsProvider = EditorContextKeys.hasInlayHintsProvider.bindTo(_contextKeyService);\n        this._hasDocumentFormattingProvider = EditorContextKeys.hasDocumentFormattingProvider.bindTo(_contextKeyService);\n        this._hasDocumentSelectionFormattingProvider = EditorContextKeys.hasDocumentSelectionFormattingProvider.bindTo(_contextKeyService);\n        this._hasMultipleDocumentFormattingProvider = EditorContextKeys.hasMultipleDocumentFormattingProvider.bindTo(_contextKeyService);\n        this._hasMultipleDocumentSelectionFormattingProvider = EditorContextKeys.hasMultipleDocumentSelectionFormattingProvider.bindTo(_contextKeyService);\n        this._isInWalkThrough = EditorContextKeys.isInWalkThroughSnippet.bindTo(_contextKeyService);\n        const update = () => this._update();\n        // update when model/mode changes\n        this._register(_editor.onDidChangeModel(update));\n        this._register(_editor.onDidChangeModelLanguage(update));\n        // update when registries change\n        this._register(_languageFeaturesService.completionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.codeActionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.codeLensProvider.onDidChange(update));\n        this._register(_languageFeaturesService.definitionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.declarationProvider.onDidChange(update));\n        this._register(_languageFeaturesService.implementationProvider.onDidChange(update));\n        this._register(_languageFeaturesService.typeDefinitionProvider.onDidChange(update));\n        this._register(_languageFeaturesService.hoverProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentHighlightProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentSymbolProvider.onDidChange(update));\n        this._register(_languageFeaturesService.referenceProvider.onDidChange(update));\n        this._register(_languageFeaturesService.renameProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentFormattingEditProvider.onDidChange(update));\n        this._register(_languageFeaturesService.documentRangeFormattingEditProvider.onDidChange(update));\n        this._register(_languageFeaturesService.signatureHelpProvider.onDidChange(update));\n        this._register(_languageFeaturesService.inlayHintsProvider.onDidChange(update));\n        update();\n    }\n    dispose() {\n        super.dispose();\n    }\n    reset() {\n        this._contextKeyService.bufferChangeEvents(() => {\n            this._langId.reset();\n            this._hasCompletionItemProvider.reset();\n            this._hasCodeActionsProvider.reset();\n            this._hasCodeLensProvider.reset();\n            this._hasDefinitionProvider.reset();\n            this._hasDeclarationProvider.reset();\n            this._hasImplementationProvider.reset();\n            this._hasTypeDefinitionProvider.reset();\n            this._hasHoverProvider.reset();\n            this._hasDocumentHighlightProvider.reset();\n            this._hasDocumentSymbolProvider.reset();\n            this._hasReferenceProvider.reset();\n            this._hasRenameProvider.reset();\n            this._hasDocumentFormattingProvider.reset();\n            this._hasDocumentSelectionFormattingProvider.reset();\n            this._hasSignatureHelpProvider.reset();\n            this._isInWalkThrough.reset();\n        });\n    }\n    _update() {\n        const model = this._editor.getModel();\n        if (!model) {\n            this.reset();\n            return;\n        }\n        this._contextKeyService.bufferChangeEvents(() => {\n            this._langId.set(model.getLanguageId());\n            this._hasCompletionItemProvider.set(this._languageFeaturesService.completionProvider.has(model));\n            this._hasCodeActionsProvider.set(this._languageFeaturesService.codeActionProvider.has(model));\n            this._hasCodeLensProvider.set(this._languageFeaturesService.codeLensProvider.has(model));\n            this._hasDefinitionProvider.set(this._languageFeaturesService.definitionProvider.has(model));\n            this._hasDeclarationProvider.set(this._languageFeaturesService.declarationProvider.has(model));\n            this._hasImplementationProvider.set(this._languageFeaturesService.implementationProvider.has(model));\n            this._hasTypeDefinitionProvider.set(this._languageFeaturesService.typeDefinitionProvider.has(model));\n            this._hasHoverProvider.set(this._languageFeaturesService.hoverProvider.has(model));\n            this._hasDocumentHighlightProvider.set(this._languageFeaturesService.documentHighlightProvider.has(model));\n            this._hasDocumentSymbolProvider.set(this._languageFeaturesService.documentSymbolProvider.has(model));\n            this._hasReferenceProvider.set(this._languageFeaturesService.referenceProvider.has(model));\n            this._hasRenameProvider.set(this._languageFeaturesService.renameProvider.has(model));\n            this._hasSignatureHelpProvider.set(this._languageFeaturesService.signatureHelpProvider.has(model));\n            this._hasInlayHintsProvider.set(this._languageFeaturesService.inlayHintsProvider.has(model));\n            this._hasDocumentFormattingProvider.set(this._languageFeaturesService.documentFormattingEditProvider.has(model) || this._languageFeaturesService.documentRangeFormattingEditProvider.has(model));\n            this._hasDocumentSelectionFormattingProvider.set(this._languageFeaturesService.documentRangeFormattingEditProvider.has(model));\n            this._hasMultipleDocumentFormattingProvider.set(this._languageFeaturesService.documentFormattingEditProvider.all(model).length + this._languageFeaturesService.documentRangeFormattingEditProvider.all(model).length > 1);\n            this._hasMultipleDocumentSelectionFormattingProvider.set(this._languageFeaturesService.documentRangeFormattingEditProvider.all(model).length > 1);\n            this._isInWalkThrough.set(model.uri.scheme === Schemas.walkThroughSnippet);\n        });\n    }\n}\nclass CodeEditorWidgetFocusTracker extends Disposable {\n    constructor(domElement) {\n        super();\n        this._onChange = this._register(new Emitter());\n        this.onChange = this._onChange.event;\n        this._hasFocus = false;\n        this._domFocusTracker = this._register(dom.trackFocus(domElement));\n        this._register(this._domFocusTracker.onDidFocus(() => {\n            this._hasFocus = true;\n            this._onChange.fire(undefined);\n        }));\n        this._register(this._domFocusTracker.onDidBlur(() => {\n            this._hasFocus = false;\n            this._onChange.fire(undefined);\n        }));\n    }\n    hasFocus() {\n        return this._hasFocus;\n    }\n}\nclass EditorDecorationsCollection {\n    get length() {\n        return this._decorationIds.length;\n    }\n    constructor(_editor, decorations) {\n        this._editor = _editor;\n        this._decorationIds = [];\n        this._isChangingDecorations = false;\n        if (Array.isArray(decorations) && decorations.length > 0) {\n            this.set(decorations);\n        }\n    }\n    onDidChange(listener, thisArgs, disposables) {\n        return this._editor.onDidChangeModelDecorations((e) => {\n            if (this._isChangingDecorations) {\n                return;\n            }\n            listener.call(thisArgs, e);\n        }, disposables);\n    }\n    getRange(index) {\n        if (!this._editor.hasModel()) {\n            return null;\n        }\n        if (index >= this._decorationIds.length) {\n            return null;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorationIds[index]);\n    }\n    getRanges() {\n        if (!this._editor.hasModel()) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const result = [];\n        for (const decorationId of this._decorationIds) {\n            const range = model.getDecorationRange(decorationId);\n            if (range) {\n                result.push(range);\n            }\n        }\n        return result;\n    }\n    has(decoration) {\n        return this._decorationIds.includes(decoration.id);\n    }\n    clear() {\n        if (this._decorationIds.length === 0) {\n            // nothing to do\n            return;\n        }\n        this.set([]);\n    }\n    set(newDecorations) {\n        try {\n            this._isChangingDecorations = true;\n            this._editor.changeDecorations((accessor) => {\n                this._decorationIds = accessor.deltaDecorations(this._decorationIds, newDecorations);\n            });\n        }\n        finally {\n            this._isChangingDecorations = false;\n        }\n        return this._decorationIds;\n    }\n}\nconst squigglyStart = encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6 3' enable-background='new 0 0 6 3' height='3' width='6'><g fill='`);\nconst squigglyEnd = encodeURIComponent(`'><polygon points='5.5,0 2.5,3 1.1,3 4.1,0'/><polygon points='4,0 6,2 6,0.6 5.4,0'/><polygon points='0,2 1,3 2.4,3 0,0.6'/></g></svg>`);\nfunction getSquigglySVGData(color) {\n    return squigglyStart + encodeURIComponent(color.toString()) + squigglyEnd;\n}\nconst dotdotdotStart = encodeURIComponent(`<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"3\" width=\"12\"><g fill=\"`);\nconst dotdotdotEnd = encodeURIComponent(`\"><circle cx=\"1\" cy=\"1\" r=\"1\"/><circle cx=\"5\" cy=\"1\" r=\"1\"/><circle cx=\"9\" cy=\"1\" r=\"1\"/></g></svg>`);\nfunction getDotDotDotSVGData(color) {\n    return dotdotdotStart + encodeURIComponent(color.toString()) + dotdotdotEnd;\n}\nregisterThemingParticipant((theme, collector) => {\n    const errorForeground = theme.getColor(editorErrorForeground);\n    if (errorForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-error\" /* ClassName.EditorErrorDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(errorForeground)}\") repeat-x bottom left; }`);\n    }\n    const warningForeground = theme.getColor(editorWarningForeground);\n    if (warningForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-warning\" /* ClassName.EditorWarningDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(warningForeground)}\") repeat-x bottom left; }`);\n    }\n    const infoForeground = theme.getColor(editorInfoForeground);\n    if (infoForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-info\" /* ClassName.EditorInfoDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(infoForeground)}\") repeat-x bottom left; }`);\n    }\n    const hintForeground = theme.getColor(editorHintForeground);\n    if (hintForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-hint\" /* ClassName.EditorHintDecoration */} { background: url(\"data:image/svg+xml,${getDotDotDotSVGData(hintForeground)}\") no-repeat bottom left; }`);\n    }\n    const unnecessaryForeground = theme.getColor(editorUnnecessaryCodeOpacity);\n    if (unnecessaryForeground) {\n        collector.addRule(`.monaco-editor.showUnused .${\"squiggly-inline-unnecessary\" /* ClassName.EditorUnnecessaryInlineDecoration */} { opacity: ${unnecessaryForeground.rgba.a}; }`);\n    }\n});\n"],"names":["RenderingContext","_RestrictedRenderingC","_inherits","_super","_createSuper","viewLayout","viewportData","viewLines","_this","_classCallCheck","call","_renderingContextBrand","undefined","_viewLines","_createClass","key","value","range","includeNewLines","this","linesVisibleRangesForRange","position","visibleRangeForPosition","RestrictedRenderingContext","_restrictedRenderingContextBrand","_viewLayout","scrollWidth","getScrollWidth","scrollHeight","getScrollHeight","visibleRange","bigNumbersDelta","vInfo","getCurrentViewport","scrollTop","top","scrollLeft","left","viewportWidth","width","viewportHeight","height","absoluteTop","lineNumber","includeViewZones","getVerticalOffsetForLineNumber","getVerticalOffsetAfterLineNumber","getDecorationsInViewport","LineVisibleRanges","outsideRenderedLine","ranges","continuesOnNextLine","HorizontalRange","_horizontalRangeBrand","Math","round","concat","result","Array","length","i","len","FloatHorizontalRange","_floatHorizontalRangeBrand","a","b","HorizontalPosition","originalLeft","VisibleRanges","ViewController","configuration","viewModel","userInputEvents","commandDelegate","text","pasteOnNewLine","multicursorText","mode","paste","type","replacePrevCharCnt","replaceNextCharCnt","positionDelta","compositionType","startComposition","endComposition","cut","modelSelection","CoreNavigationCommands","SetSelection","runCoreEditorCommand","source","selection","viewPosition","minColumn","getLineMinColumn","column","Position","data","options","get","altKey","ctrlKey","metaKey","selectionClipboardIsOn","platform","columnSelection","middleButton","_columnSelect","mouseColumn","inSelectionMode","startedOnLineNumbers","_hasMulticursorModifier","_lastCursorLineSelect","revealType","_createCursor","_lineSelectDrag","_lineSelect","mouseDownCount","_selectAll","_lastCursorLineSelectDrag","onInjectedText","_lastCursorWordSelect","_wordSelectDrag","_wordSelect","_hasNonMulticursorModifier","shiftKey","_lastCursorMoveToSelect","_moveToSelect","moveTo","_validateViewColumn","_convertViewToModelPosition","MoveTo","_usualArgs","MoveToSelect","doColumnSelect","ColumnSelect","wholeLine","CreateCursor","LastCursorMoveToSelect","WordSelect","WordSelectDrag","LastCursorWordSelect","LineSelect","LineSelectDrag","LastCursorLineSelect","LastCursorLineSelectDrag","SelectAll","coordinatesConverter","convertViewPositionToModelPosition","e","emitKeyDown","emitKeyUp","emitContextMenu","emitMouseMove","emitMouseLeave","emitMouseUp","emitMouseDown","emitMouseDrag","emitMouseDrop","emitMouseDropCanceled","emitMouseWheel","RenderedLinesCollection","createLine","_createLine","_set","rendLineNumberStart","lines","_lines","_rendLineNumberStart","lineIndex","BugIndicatingError","deleteFromLineNumber","deleteToLineNumber","getCount","startLineNumber","getStartLineNumber","endLineNumber","getEndLineNumber","deleteCnt","deleteStartIndex","deleteCount","deleteAboveCount","splice","changeFromLineNumber","changeCount","changeToLineNumber","someoneNotified","changedLineNumber","onContentChanged","insertFromLineNumber","insertToLineNumber","insertCnt","newLines","insertIndex","beforeLines","slice","afterLines","deletedLines","notifiedSomeone","rng","toLineNumber","fromLineNumber","from","max","to","min","onTokensChanged","VisibleLinesCollection","host","_host","domNode","_createDomNode","_linesCollection","createVisibleLine","createFastDomNode","document","createElement","setClassName","setPosition","setAttribute","hasChanged","flush","onLinesChanged","count","deleted","onLinesDeleted","lineDomNode","getDomNode","removeChild","onLinesInserted","scrollTopChanged","getLine","inp","_get","renderer","ViewLayerRenderer","ctx","linesLength","resCtx","render","relativeVerticalOffset","inContext","stopLineNumber","deltaTop","x","_finishRendering","_renderUntouchedLines","_insertLinesBefore","removeCnt","_removeLinesBefore","_insertLinesAfter","_removeLinesAfter","startIndex","endIndex","deltaLN","layoutLine","newLinesLen","removeCount","removeIndex","domNodeIsEmpty","newLinesHTML","wasNew","_ttPolicy","createHTML","lastChild","innerHTML","insertAdjacentHTML","currChild","line","setDomNode","previousSibling","invalidLinesHTML","wasInvalid","hugeDomNode","firstChild","parentNode","replaceChild","sb","_sb","reset","hadNewLine","renderLine","_finishRenderingNewLines","build","hadInvalidLine","_finishRenderingInvalidLines","createTrustedTypesPolicy","StringBuilder","ViewOverlays","_ViewPart","context","_visibleLines","_assertThisInitialized","fontInfo","_context","applyFontInfo","_dynamicOverlays","_isFocused","_getPrototypeOf","prototype","shouldRender","dispose","ViewOverlayLine","overlay","push","onConfigurationChanged","getVisibleLine","onFlushed","isFocused","onScrollChanged","onZonesChanged","toRender","filter","dynamicOverlay","prepareRender","onDidRender","_viewOverlaysRender","toggleClassName","renderLines","ViewPart","dynamicOverlays","_configuration","_lineHeight","_domNode","_renderedContent","appendString","String","setTop","setHeight","ContentViewOverlays","_ViewOverlays","_super2","_this2","layoutInfo","_contentWidth","contentWidth","scrollWidthChanged","setWidth","MarginViewOverlays","_ViewOverlays2","_super3","_this3","_contentLeft","contentLeft","scrollHeightChanged","_ViewEventHandler","addEventHandler","removeEventHandler","ViewEventHandler","PartFingerprints","target","partId","r","getAttribute","parseInt","child","stopAt","resultLen","body","nodeType","ELEMENT_NODE","read","parentElement","Uint8Array","ViewUserInputEvents","onKeyDown","onKeyUp","onContextMenu","onMouseMove","onMouseLeave","onMouseDown","onMouseUp","onMouseDrag","onMouseDrop","onMouseDropCanceled","onMouseWheel","_coordinatesConverter","_a","_convertViewToModelMouseEvent","event","_convertViewToModelMouseTarget","convertViewToModelMouseTarget","Object","assign","convertViewRangeToModelRange","detail","convertViewToModelViewZoneData","viewZoneId","positionBefore","positionAfter","afterLineNumber","CodeEditorContributions","_Disposable","_editor","_instantiationService","_instances","_register","DisposableMap","_pending","Map","_finishedInstantiation","editor","contributions","instantiationService","_step","_iterator","_createForOfIteratorHelper","s","n","done","desc","has","id","onUnexpectedError","Error","set","err","f","_instantiateSome","runWhenIdle","_step2","contributionsState","_iterator2","_step2$value","_slicedToArray","contribution","saveViewState","_step3","_iterator3","_step3$value","restoreViewState","_instantiateById","instantiation","_step4","contribs","_findPendingContributionsByInstantiation","_iterator4","contrib","_step5","_iterator5","delete","instance","createInstance","ctor","console","warn","Disposable","__decorate","decorators","d","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","then","apply","EDITOR_ID","ModelData","model","view","hasRealView","listenersToRemove","attachedView","onBeforeDetached","CodeEditorWidget","domElement","_options","codeEditorWidgetOptions","codeEditorService","commandService","contextKeyService","themeService","notificationService","accessibilityService","languageConfigurationService","languageFeaturesService","_deliveryQueue","createEventDeliveryQueue","_contributions","_onDidDispose","Emitter","onDidDispose","_onDidChangeModelContent","deliveryQueue","onDidChangeModelContent","_onDidChangeModelLanguage","onDidChangeModelLanguage","_onDidChangeModelLanguageConfiguration","onDidChangeModelLanguageConfiguration","_onDidChangeModelOptions","onDidChangeModelOptions","_onDidChangeModelDecorations","onDidChangeModelDecorations","_onDidChangeModelTokens","onDidChangeModelTokens","_onDidChangeConfiguration","onDidChangeConfiguration","_onDidChangeModel","onDidChangeModel","_onDidChangeCursorPosition","onDidChangeCursorPosition","_onDidChangeCursorSelection","onDidChangeCursorSelection","_onDidAttemptReadOnlyEdit","InteractionEmitter","onDidAttemptReadOnlyEdit","_onDidLayoutChange","onDidLayoutChange","_editorTextFocus","BooleanEventEmitter","onDidFocusEditorText","onDidChangeToTrue","onDidBlurEditorText","onDidChangeToFalse","_editorWidgetFocus","onDidFocusEditorWidget","onDidBlurEditorWidget","_onWillType","onWillType","_onDidType","onDidType","_onDidCompositionStart","onDidCompositionStart","_onDidCompositionEnd","onDidCompositionEnd","_onDidPaste","onDidPaste","_onMouseUp","_onMouseDown","_onMouseDrag","_onMouseDrop","_onMouseDropCanceled","_onDropIntoEditor","onDropIntoEditor","_onContextMenu","_onMouseMove","_onMouseLeave","_onMouseWheel","_onKeyUp","_onKeyDown","_onDidContentSizeChange","onDidContentSizeChange","_onDidScrollChange","onDidScrollChange","_onDidChangeViewZones","onDidChangeViewZones","_onDidChangeHiddenAreas","onDidChangeHiddenAreas","_actions","_bannerDomNode","_dropIntoEditorDecorations","createDecorationsCollection","willCreateCodeEditor","_domElement","_overflowWidgetsDomNode","overflowWidgetsDomNode","_id","_decorationTypeKeysToIds","_decorationTypeSubtypes","_telemetryData","telemetryData","_createConfiguration","isSimpleWidget","onDidChange","fire","_contextKeyService","createScoped","_notificationService","_codeEditorService","_commandService","_themeService","EditorContextKeysManager","EditorModeContext","createChild","ServiceCollection","IContextKeyService","_modelData","_focusTracker","CodeEditorWidgetFocusTracker","onChange","setValue","hasFocus","_contentWidgets","_overlayWidgets","_glyphMarginWidgets","isArray","EditorExtensionsRegistry","getEditorContributions","initialize","getEditorActions","_loop","action","internalAction","InternalEditorAction","label","alias","withNullAsUndefined","precondition","invokeFunction","accessor","runEditorCommand","isDropIntoEnabled","enabled","dom","DragAndDropObserver","onDragEnter","onDragOver","getTargetAtClientPoint","clientX","clientY","showDropIndicatorAt","onDrop","_regeneratorRuntime","mark","_callee","wrap","prev","abrupt","removeDropIndicator","dataTransfer","stop","onDragLeave","onDragEnd","addCodeEditor","reason","writeScreenReaderContent","EditorConfiguration","getEditorType","editorCommon","ICodeEditor","removeCodeEditor","clear","_removeDecorationTypes","_postDetachModelCleanup","_detachModel","fn","newOptions","updateOptions","getRawOptions","WordOperations","getWordAtPosition","preserveBOM","eolPreference","lineEnding","getValue","newValue","hasTextFocus","detachedModel","_attachModel","hasModel","focus","oldModelUrl","uri","newModelUrl","onAfterModelAttached","decorationType","subTypes","subType","_removeDecorationType","getVisibleRanges","getVisibleRangesPlusViewportAboveBelow","getWhitespaces","_getVerticalOffsetForPosition","_getVerticalOffsetAfterPosition","setHiddenAreas","map","Range","lift","rawPosition","validatePosition","tabSize","getOptions","CursorColumns","visibleColumnFromColumn","getLineContent","getPosition","isIPosition","setSelections","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","modelRange","verticalType","revealHorizontal","scrollType","isIRange","validatedModelRange","validateRange","viewRange","convertModelRangeToViewRange","revealRange","_revealLine","_sendRevealRange","_revealPosition","getSelection","getSelections","something","isSelection","Selection","isISelection","isRange","_setSelectionImpl","startColumn","endColumn","sel","_revealLines","revealVerticalInCenter","_revealRange","getContentWidth","getCurrentScrollLeft","getContentHeight","getCurrentScrollTop","newScrollLeft","setScrollPosition","newScrollTop","hasPendingScrollAnimation","cursorState","saveCursorState","viewState","saveState","codeEditorState","restoreCursorState","reducedState","reduceRestoreState","restoreState","_getViewModel","visibleLinesStabilized","values","getActions","isSupported","handlerId","payload","_startComposition","_endComposition","args","_type","_compositionType","replaceCharCnt","_paste","_cut","getAction","run","_triggerEditorCommand","_triggerCommand","executeCommand","startPosition","getStartPosition","endPosition","languageId","command","getEditorCommand","pushStackElement","popStackElement","edits","endCursorState","cursorStateComputer","executeEdits","commands","executeCommands","decorations","EditorDecorationsCollection","callback","changeDecorations","getLineDecorations","filterValidationDecorations","getDecorationsInRange","oldDecorations","newDecorations","deltaDecorations","decorationIds","changeAccessor","decorationTypeKey","oldDecorationsIds","hasOwnProperty","cssClassName","createOverviewRuler","browserEvent","delegateVerticalScrollbarPointerDown","delegateScrollFromMouseWheelEvent","dimension","observeContainer","widget","widgetData","getId","addContentWidget","widgetId","layoutContentWidget","removeContentWidget","addOverlayWidget","layoutOverlayWidget","removeOverlayWidget","addGlyphMarginWidget","layoutGlyphMarginWidget","removeGlyphMarginWidget","change","getScrollTop","getOffsetForColumn","glyphMarginWidth","lineNumbersWidth","decorationsWidth","getScrollLeft","forceRedraw","setAriaOptions","domNodeHeight","contains","setReservedHeight","prepend","getLanguageId","setIsDominatedByLongLines","isDominatedByLongLines","setModelLineCount","getLineCount","onBeforeAttached","ViewModel","DOMLineBreaksComputerFactory","create","MonospaceLineBreaksComputerFactory","scheduleAtNextAnimationFrame","onWillDispose","setModel","onEvent","kind","reachedMaxCursorCount","multiCursorLimit","getOption","message","nls","prompt","Severity","Warning","query","positions","selections","e1","secondaryPositions","e2","secondarySelections","modelVersionId","oldSelections","oldModelVersionId","_this$_createView","_createView","_this$_createView2","appendChild","keys","toString","_this4","viewUserInputEvents","View","getColorTheme","removeAllDecorationsWithOwnerId","removeDomNode","removeAttribute","removeDecorationType","dropIntoEditorDecorationOptions","revealPosition","createKey","modelData","modelLineNumber","modelColumn","modelPosition","convertModelPositionToViewPosition","ModelDecorationOptions","register","description","className","IInstantiationService","ICodeEditorService","ICommandService","IThemeService","INotificationService","IAccessibilityService","ILanguageConfigurationService","ILanguageFeaturesService","_Disposable2","_emitterOptions","_this5","_onDidChangeToTrue","_onDidChangeToFalse","_value","_Emitter","_this6","onBeforeInteractionEvent","_Disposable3","_super4","_this7","_editorSimpleInput","EditorContextKeys","editorSimpleInput","bindTo","_editorFocus","_textInputFocus","textInputFocus","editorTextFocus","_editorTabMovesFocus","tabMovesFocus","_editorReadonly","readOnly","_inDiffEditor","inDiffEditor","_editorColumnSelection","_hasMultipleSelections","hasMultipleSelections","_hasNonEmptySelection","hasNonEmptySelection","_canUndo","canUndo","_canRedo","canRedo","_updateFromConfig","_updateFromSelection","_updateFromFocus","_updateFromModel","TabFocus","onDidChangeTabFocus","getTabFocusMode","some","isEmpty","hasWidgetFocus","getModel","Boolean","_Disposable4","_super5","_languageFeaturesService","_this8","_langId","_hasCompletionItemProvider","hasCompletionItemProvider","_hasCodeActionsProvider","hasCodeActionsProvider","_hasCodeLensProvider","hasCodeLensProvider","_hasDefinitionProvider","hasDefinitionProvider","_hasDeclarationProvider","hasDeclarationProvider","_hasImplementationProvider","hasImplementationProvider","_hasTypeDefinitionProvider","hasTypeDefinitionProvider","_hasHoverProvider","hasHoverProvider","_hasDocumentHighlightProvider","hasDocumentHighlightProvider","_hasDocumentSymbolProvider","hasDocumentSymbolProvider","_hasReferenceProvider","hasReferenceProvider","_hasRenameProvider","hasRenameProvider","_hasSignatureHelpProvider","hasSignatureHelpProvider","_hasInlayHintsProvider","hasInlayHintsProvider","_hasDocumentFormattingProvider","hasDocumentFormattingProvider","_hasDocumentSelectionFormattingProvider","hasDocumentSelectionFormattingProvider","_hasMultipleDocumentFormattingProvider","hasMultipleDocumentFormattingProvider","_hasMultipleDocumentSelectionFormattingProvider","hasMultipleDocumentSelectionFormattingProvider","_isInWalkThrough","isInWalkThroughSnippet","update","_update","completionProvider","codeActionProvider","codeLensProvider","definitionProvider","declarationProvider","implementationProvider","typeDefinitionProvider","hoverProvider","documentHighlightProvider","documentSymbolProvider","referenceProvider","renameProvider","documentFormattingEditProvider","documentRangeFormattingEditProvider","signatureHelpProvider","inlayHintsProvider","_this9","bufferChangeEvents","_this10","all","scheme","Schemas","walkThroughSnippet","_Disposable5","_super6","_this11","_onChange","_hasFocus","_domFocusTracker","trackFocus","onDidFocus","onDidBlur","_decorationIds","_isChangingDecorations","listener","thisArgs","disposables","_this12","index","getDecorationRange","decorationId","decoration","includes","_this13","squigglyStart","encodeURIComponent","squigglyEnd","getSquigglySVGData","color","dotdotdotStart","dotdotdotEnd","registerThemingParticipant","theme","collector","errorForeground","getColor","editorErrorForeground","addRule","warningForeground","editorWarningForeground","infoForeground","editorInfoForeground","hintForeground","editorHintForeground","unnecessaryForeground","editorUnnecessaryCodeOpacity","rgba"],"sourceRoot":""}