{"version":3,"file":"static/js/monaco-editor-vendor.818aa91e.d9f5f194.js","mappings":"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","sources":["../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/contentHover.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/getHover.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/marginHover.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markerHoverParticipant.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hover.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hoverOperation.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hoverTypes.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markdownHoverParticipant.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplaceCommand.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplace.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/indentation/browser/indentUtils.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/indentation/browser/indentation.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { HoverAction, HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverParticipantRegistry, HoverRangeAnchor } from './hoverTypes.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { Context as SuggestContext } from '../../suggest/browser/suggest.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nconst $ = dom.$;\nexport let ContentHoverController = class ContentHoverController extends Disposable {\n    constructor(_editor, _instantiationService, _keybindingService) {\n        super();\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._keybindingService = _keybindingService;\n        this._widget = this._register(this._instantiationService.createInstance(ContentHoverWidget, this._editor));\n        this._currentResult = null;\n        // Instantiate participants and sort them by `hoverOrdinal` which is relevant for rendering order.\n        this._participants = [];\n        for (const participant of HoverParticipantRegistry.getAll()) {\n            this._participants.push(this._instantiationService.createInstance(participant, this._editor));\n        }\n        this._participants.sort((p1, p2) => p1.hoverOrdinal - p2.hoverOrdinal);\n        this._computer = new ContentHoverComputer(this._editor, this._participants);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            if (!this._computer.anchor) {\n                // invalid state, ignore result\n                return;\n            }\n            const messages = (result.hasLoadingMessage ? this._addLoadingMessage(result.value) : result.value);\n            this._withResult(new HoverResult(this._computer.anchor, messages, result.isComplete));\n        }));\n        this._register(dom.addStandardDisposableListener(this._widget.getDomNode(), 'keydown', (e) => {\n            if (e.equals(9 /* KeyCode.Escape */)) {\n                this.hide();\n            }\n        }));\n        this._register(TokenizationRegistry.onDidChange(() => {\n            if (this._widget.position && this._currentResult) {\n                this._widget.clear();\n                this._setCurrentResult(this._currentResult); // render again\n            }\n        }));\n    }\n    /**\n     * Returns true if the hover shows now or will show.\n     */\n    maybeShowAt(mouseEvent) {\n        const anchorCandidates = [];\n        for (const participant of this._participants) {\n            if (participant.suggestHoverAnchor) {\n                const anchor = participant.suggestHoverAnchor(mouseEvent);\n                if (anchor) {\n                    anchorCandidates.push(anchor);\n                }\n            }\n        }\n        const target = mouseEvent.target;\n        if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            anchorCandidates.push(new HoverRangeAnchor(0, target.range, mouseEvent.event.posx, mouseEvent.event.posy));\n        }\n        if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            const epsilon = this._editor.getOption(48 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth / 2;\n            if (!target.detail.isAfterLines && typeof target.detail.horizontalDistanceToText === 'number' && target.detail.horizontalDistanceToText < epsilon) {\n                // Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough\n                anchorCandidates.push(new HoverRangeAnchor(0, target.range, mouseEvent.event.posx, mouseEvent.event.posy));\n            }\n        }\n        if (anchorCandidates.length === 0) {\n            return this._startShowingOrUpdateHover(null, 0 /* HoverStartMode.Delayed */, 0 /* HoverStartSource.Mouse */, false, mouseEvent);\n        }\n        anchorCandidates.sort((a, b) => b.priority - a.priority);\n        return this._startShowingOrUpdateHover(anchorCandidates[0], 0 /* HoverStartMode.Delayed */, 0 /* HoverStartSource.Mouse */, false, mouseEvent);\n    }\n    startShowingAtRange(range, mode, source, focus) {\n        this._startShowingOrUpdateHover(new HoverRangeAnchor(0, range, undefined, undefined), mode, source, focus, null);\n    }\n    /**\n     * Returns true if the hover shows now or will show.\n     */\n    _startShowingOrUpdateHover(anchor, mode, source, focus, mouseEvent) {\n        if (!this._widget.position || !this._currentResult) {\n            // The hover is not visible\n            if (anchor) {\n                this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n                return true;\n            }\n            return false;\n        }\n        // The hover is currently visible\n        const hoverIsSticky = this._editor.getOption(58 /* EditorOption.hover */).sticky;\n        const isGettingCloser = (hoverIsSticky && mouseEvent && this._widget.isMouseGettingCloser(mouseEvent.event.posx, mouseEvent.event.posy));\n        if (isGettingCloser) {\n            // The mouse is getting closer to the hover, so we will keep the hover untouched\n            // But we will kick off a hover update at the new anchor, insisting on keeping the hover visible.\n            if (anchor) {\n                this._startHoverOperationIfNecessary(anchor, mode, source, focus, true);\n            }\n            return true;\n        }\n        if (!anchor) {\n            this._setCurrentResult(null);\n            return false;\n        }\n        if (anchor && this._currentResult.anchor.equals(anchor)) {\n            // The widget is currently showing results for the exact same anchor, so no update is needed\n            return true;\n        }\n        if (!anchor.canAdoptVisibleHover(this._currentResult.anchor, this._widget.position)) {\n            // The new anchor is not compatible with the previous anchor\n            this._setCurrentResult(null);\n            this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n            return true;\n        }\n        // We aren't getting any closer to the hover, so we will filter existing results\n        // and keep those which also apply to the new anchor.\n        this._setCurrentResult(this._currentResult.filter(anchor));\n        this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n        return true;\n    }\n    _startHoverOperationIfNecessary(anchor, mode, source, focus, insistOnKeepingHoverVisible) {\n        if (this._computer.anchor && this._computer.anchor.equals(anchor)) {\n            // We have to start a hover operation at the exact same anchor as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        this._computer.anchor = anchor;\n        this._computer.shouldFocus = focus;\n        this._computer.source = source;\n        this._computer.insistOnKeepingHoverVisible = insistOnKeepingHoverVisible;\n        this._hoverOperation.start(mode);\n    }\n    _setCurrentResult(hoverResult) {\n        if (this._currentResult === hoverResult) {\n            // avoid updating the DOM to avoid resetting the user selection\n            return;\n        }\n        if (hoverResult && hoverResult.messages.length === 0) {\n            hoverResult = null;\n        }\n        this._currentResult = hoverResult;\n        if (this._currentResult) {\n            this._renderMessages(this._currentResult.anchor, this._currentResult.messages);\n        }\n        else {\n            this._widget.hide();\n        }\n    }\n    hide() {\n        this._computer.anchor = null;\n        this._hoverOperation.cancel();\n        this._setCurrentResult(null);\n    }\n    isColorPickerVisible() {\n        return this._widget.isColorPickerVisible;\n    }\n    isVisibleFromKeyboard() {\n        return this._widget.isVisibleFromKeyboard;\n    }\n    isVisible() {\n        return this._widget.isVisible;\n    }\n    containsNode(node) {\n        return (node ? this._widget.getDomNode().contains(node) : false);\n    }\n    _addLoadingMessage(result) {\n        if (this._computer.anchor) {\n            for (const participant of this._participants) {\n                if (participant.createLoadingMessage) {\n                    const loadingMessage = participant.createLoadingMessage(this._computer.anchor);\n                    if (loadingMessage) {\n                        return result.slice(0).concat([loadingMessage]);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    _withResult(hoverResult) {\n        if (this._widget.position && this._currentResult && this._currentResult.isComplete) {\n            // The hover is visible with a previous complete result.\n            if (!hoverResult.isComplete) {\n                // Instead of rendering the new partial result, we wait for the result to be complete.\n                return;\n            }\n            if (this._computer.insistOnKeepingHoverVisible && hoverResult.messages.length === 0) {\n                // The hover would now hide normally, so we'll keep the previous messages\n                return;\n            }\n        }\n        this._setCurrentResult(hoverResult);\n    }\n    _renderMessages(anchor, messages) {\n        const { showAtPosition, showAtSecondaryPosition, highlightRange } = ContentHoverController.computeHoverRanges(this._editor, anchor.range, messages);\n        const disposables = new DisposableStore();\n        const statusBar = disposables.add(new EditorHoverStatusBar(this._keybindingService));\n        const fragment = document.createDocumentFragment();\n        let colorPicker = null;\n        const context = {\n            fragment,\n            statusBar,\n            setColorPicker: (widget) => colorPicker = widget,\n            onContentsChanged: () => this._widget.onContentsChanged(),\n            hide: () => this.hide()\n        };\n        for (const participant of this._participants) {\n            const hoverParts = messages.filter(msg => msg.owner === participant);\n            if (hoverParts.length > 0) {\n                disposables.add(participant.renderHoverParts(context, hoverParts));\n            }\n        }\n        const isBeforeContent = messages.some(m => m.isBeforeContent);\n        if (statusBar.hasContent) {\n            fragment.appendChild(statusBar.hoverElement);\n        }\n        if (fragment.hasChildNodes()) {\n            if (highlightRange) {\n                const highlightDecoration = this._editor.createDecorationsCollection();\n                highlightDecoration.set([{\n                        range: highlightRange,\n                        options: ContentHoverController._DECORATION_OPTIONS\n                    }]);\n                disposables.add(toDisposable(() => {\n                    highlightDecoration.clear();\n                }));\n            }\n            this._widget.showAt(fragment, new ContentHoverVisibleData(colorPicker, showAtPosition, showAtSecondaryPosition, this._editor.getOption(58 /* EditorOption.hover */).above, this._computer.shouldFocus, this._computer.source, isBeforeContent, anchor.initialMousePosX, anchor.initialMousePosY, disposables));\n        }\n        else {\n            disposables.dispose();\n        }\n    }\n    static computeHoverRanges(editor, anchorRange, messages) {\n        let startColumnBoundary = 1;\n        if (editor.hasModel()) {\n            // Ensure the range is on the current view line\n            const viewModel = editor._getViewModel();\n            const coordinatesConverter = viewModel.coordinatesConverter;\n            const anchorViewRange = coordinatesConverter.convertModelRangeToViewRange(anchorRange);\n            const anchorViewRangeStart = new Position(anchorViewRange.startLineNumber, viewModel.getLineMinColumn(anchorViewRange.startLineNumber));\n            startColumnBoundary = coordinatesConverter.convertViewPositionToModelPosition(anchorViewRangeStart).column;\n        }\n        // The anchor range is always on a single line\n        const anchorLineNumber = anchorRange.startLineNumber;\n        let renderStartColumn = anchorRange.startColumn;\n        let highlightRange = messages[0].range;\n        let forceShowAtRange = null;\n        for (const msg of messages) {\n            highlightRange = Range.plusRange(highlightRange, msg.range);\n            if (msg.range.startLineNumber === anchorLineNumber && msg.range.endLineNumber === anchorLineNumber) {\n                // this message has a range that is completely sitting on the line of the anchor\n                renderStartColumn = Math.max(Math.min(renderStartColumn, msg.range.startColumn), startColumnBoundary);\n            }\n            if (msg.forceShowAtRange) {\n                forceShowAtRange = msg.range;\n            }\n        }\n        return {\n            showAtPosition: forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorLineNumber, anchorRange.startColumn),\n            showAtSecondaryPosition: forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorLineNumber, renderStartColumn),\n            highlightRange\n        };\n    }\n    focus() {\n        this._widget.focus();\n    }\n    scrollUp() {\n        this._widget.scrollUp();\n    }\n    scrollDown() {\n        this._widget.scrollDown();\n    }\n    scrollLeft() {\n        this._widget.scrollLeft();\n    }\n    scrollRight() {\n        this._widget.scrollRight();\n    }\n    pageUp() {\n        this._widget.pageUp();\n    }\n    pageDown() {\n        this._widget.pageDown();\n    }\n    goToTop() {\n        this._widget.goToTop();\n    }\n    goToBottom() {\n        this._widget.goToBottom();\n    }\n    escape() {\n        this._widget.escape();\n    }\n};\nContentHoverController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n    description: 'content-hover-highlight',\n    className: 'hoverHighlight'\n});\nContentHoverController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IKeybindingService)\n], ContentHoverController);\nclass HoverResult {\n    constructor(anchor, messages, isComplete) {\n        this.anchor = anchor;\n        this.messages = messages;\n        this.isComplete = isComplete;\n    }\n    filter(anchor) {\n        const filteredMessages = this.messages.filter((m) => m.isValidForHoverAnchor(anchor));\n        if (filteredMessages.length === this.messages.length) {\n            return this;\n        }\n        return new FilteredHoverResult(this, this.anchor, filteredMessages, this.isComplete);\n    }\n}\nclass FilteredHoverResult extends HoverResult {\n    constructor(original, anchor, messages, isComplete) {\n        super(anchor, messages, isComplete);\n        this.original = original;\n    }\n    filter(anchor) {\n        return this.original.filter(anchor);\n    }\n}\nclass ContentHoverVisibleData {\n    constructor(colorPicker, showAtPosition, showAtSecondaryPosition, preferAbove, stoleFocus, source, isBeforeContent, initialMousePosX, initialMousePosY, disposables) {\n        this.colorPicker = colorPicker;\n        this.showAtPosition = showAtPosition;\n        this.showAtSecondaryPosition = showAtSecondaryPosition;\n        this.preferAbove = preferAbove;\n        this.stoleFocus = stoleFocus;\n        this.source = source;\n        this.isBeforeContent = isBeforeContent;\n        this.initialMousePosX = initialMousePosX;\n        this.initialMousePosY = initialMousePosY;\n        this.disposables = disposables;\n        this.closestMouseDistance = undefined;\n    }\n}\nexport let ContentHoverWidget = class ContentHoverWidget extends Disposable {\n    /**\n     * Returns `null` if the hover is not visible.\n     */\n    get position() {\n        var _a, _b;\n        return (_b = (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.showAtPosition) !== null && _b !== void 0 ? _b : null;\n    }\n    get isColorPickerVisible() {\n        var _a;\n        return Boolean((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.colorPicker);\n    }\n    get isVisibleFromKeyboard() {\n        var _a;\n        return (((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.source) === 1 /* HoverStartSource.Keyboard */);\n    }\n    get isVisible() {\n        var _a;\n        return (_a = this._hoverVisibleKey.get()) !== null && _a !== void 0 ? _a : false;\n    }\n    constructor(_editor, _contextKeyService) {\n        super();\n        this._editor = _editor;\n        this._contextKeyService = _contextKeyService;\n        this.allowEditorOverflow = true;\n        this._hoverVisibleKey = EditorContextKeys.hoverVisible.bindTo(this._contextKeyService);\n        this._hoverFocusedKey = EditorContextKeys.hoverFocused.bindTo(this._contextKeyService);\n        this._hover = this._register(new HoverWidget());\n        this._focusTracker = this._register(dom.trackFocus(this.getDomNode()));\n        this._horizontalScrollingBy = 30;\n        this._visibleData = null;\n        this._register(this._editor.onDidLayoutChange(() => this._layout()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(48 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._setVisibleData(null);\n        this._layout();\n        this._editor.addContentWidget(this);\n        this._register(this._focusTracker.onDidFocus(() => {\n            this._hoverFocusedKey.set(true);\n        }));\n        this._register(this._focusTracker.onDidBlur(() => {\n            this._hoverFocusedKey.set(false);\n        }));\n    }\n    dispose() {\n        this._editor.removeContentWidget(this);\n        if (this._visibleData) {\n            this._visibleData.disposables.dispose();\n        }\n        super.dispose();\n    }\n    getId() {\n        return ContentHoverWidget.ID;\n    }\n    getDomNode() {\n        return this._hover.containerDomNode;\n    }\n    getPosition() {\n        if (!this._visibleData) {\n            return null;\n        }\n        let preferAbove = this._visibleData.preferAbove;\n        if (!preferAbove && this._contextKeyService.getContextKeyValue(SuggestContext.Visible.key)) {\n            // Prefer rendering above if the suggest widget is visible\n            preferAbove = true;\n        }\n        // :before content can align left of the text content\n        const affinity = this._visibleData.isBeforeContent ? 3 /* PositionAffinity.LeftOfInjectedText */ : undefined;\n        return {\n            position: this._visibleData.showAtPosition,\n            secondaryPosition: this._visibleData.showAtSecondaryPosition,\n            preference: (preferAbove\n                ? [1 /* ContentWidgetPositionPreference.ABOVE */, 2 /* ContentWidgetPositionPreference.BELOW */]\n                : [2 /* ContentWidgetPositionPreference.BELOW */, 1 /* ContentWidgetPositionPreference.ABOVE */]),\n            positionAffinity: affinity\n        };\n    }\n    isMouseGettingCloser(posx, posy) {\n        if (!this._visibleData) {\n            return false;\n        }\n        if (typeof this._visibleData.initialMousePosX === 'undefined' || typeof this._visibleData.initialMousePosY === 'undefined') {\n            this._visibleData.initialMousePosX = posx;\n            this._visibleData.initialMousePosY = posy;\n            return false;\n        }\n        const widgetRect = dom.getDomNodePagePosition(this.getDomNode());\n        if (typeof this._visibleData.closestMouseDistance === 'undefined') {\n            this._visibleData.closestMouseDistance = computeDistanceFromPointToRectangle(this._visibleData.initialMousePosX, this._visibleData.initialMousePosY, widgetRect.left, widgetRect.top, widgetRect.width, widgetRect.height);\n        }\n        const distance = computeDistanceFromPointToRectangle(posx, posy, widgetRect.left, widgetRect.top, widgetRect.width, widgetRect.height);\n        if (distance > this._visibleData.closestMouseDistance + 4 /* tolerance of 4 pixels */) {\n            // The mouse is getting farther away\n            return false;\n        }\n        this._visibleData.closestMouseDistance = Math.min(this._visibleData.closestMouseDistance, distance);\n        return true;\n    }\n    _setVisibleData(visibleData) {\n        if (this._visibleData) {\n            this._visibleData.disposables.dispose();\n        }\n        this._visibleData = visibleData;\n        this._hoverVisibleKey.set(!!this._visibleData);\n        this._hover.containerDomNode.classList.toggle('hidden', !this._visibleData);\n    }\n    _layout() {\n        const height = Math.max(this._editor.getLayoutInfo().height / 4, 250);\n        const { fontSize, lineHeight } = this._editor.getOption(48 /* EditorOption.fontInfo */);\n        this._hover.contentsDomNode.style.fontSize = `${fontSize}px`;\n        this._hover.contentsDomNode.style.lineHeight = `${lineHeight / fontSize}`;\n        this._hover.contentsDomNode.style.maxHeight = `${height}px`;\n        this._hover.contentsDomNode.style.maxWidth = `${Math.max(this._editor.getLayoutInfo().width * 0.66, 500)}px`;\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    showAt(node, visibleData) {\n        var _a;\n        this._setVisibleData(visibleData);\n        this._hover.contentsDomNode.textContent = '';\n        this._hover.contentsDomNode.appendChild(node);\n        this._hover.contentsDomNode.style.paddingBottom = '';\n        this._updateFont();\n        this.onContentsChanged();\n        // Simply force a synchronous render on the editor\n        // such that the widget does not really render with left = '0px'\n        this._editor.render();\n        // See https://github.com/microsoft/vscode/issues/140339\n        // TODO: Doing a second layout of the hover after force rendering the editor\n        this.onContentsChanged();\n        if (visibleData.stoleFocus) {\n            this._hover.containerDomNode.focus();\n        }\n        (_a = visibleData.colorPicker) === null || _a === void 0 ? void 0 : _a.layout();\n    }\n    hide() {\n        if (this._visibleData) {\n            const stoleFocus = this._visibleData.stoleFocus;\n            this._setVisibleData(null);\n            this._hoverFocusedKey.set(false);\n            this._editor.layoutContentWidget(this);\n            if (stoleFocus) {\n                this._editor.focus();\n            }\n        }\n    }\n    onContentsChanged() {\n        this._editor.layoutContentWidget(this);\n        this._hover.onContentsChanged();\n        const scrollDimensions = this._hover.scrollbar.getScrollDimensions();\n        const hasHorizontalScrollbar = (scrollDimensions.scrollWidth > scrollDimensions.width);\n        if (hasHorizontalScrollbar) {\n            // There is just a horizontal scrollbar\n            const extraBottomPadding = `${this._hover.scrollbar.options.horizontalScrollbarSize}px`;\n            if (this._hover.contentsDomNode.style.paddingBottom !== extraBottomPadding) {\n                this._hover.contentsDomNode.style.paddingBottom = extraBottomPadding;\n                this._editor.layoutContentWidget(this);\n                this._hover.onContentsChanged();\n            }\n        }\n    }\n    clear() {\n        this._hover.contentsDomNode.textContent = '';\n    }\n    focus() {\n        this._hover.containerDomNode.focus();\n    }\n    scrollUp() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const fontInfo = this._editor.getOption(48 /* EditorOption.fontInfo */);\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop - fontInfo.lineHeight });\n    }\n    scrollDown() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const fontInfo = this._editor.getOption(48 /* EditorOption.fontInfo */);\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop + fontInfo.lineHeight });\n    }\n    scrollLeft() {\n        const scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n        this._hover.scrollbar.setScrollPosition({ scrollLeft: scrollLeft - this._horizontalScrollingBy });\n    }\n    scrollRight() {\n        const scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n        this._hover.scrollbar.setScrollPosition({ scrollLeft: scrollLeft + this._horizontalScrollingBy });\n    }\n    pageUp() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop - scrollHeight });\n    }\n    pageDown() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop + scrollHeight });\n    }\n    goToTop() {\n        this._hover.scrollbar.setScrollPosition({ scrollTop: 0 });\n    }\n    goToBottom() {\n        this._hover.scrollbar.setScrollPosition({ scrollTop: this._hover.scrollbar.getScrollDimensions().scrollHeight });\n    }\n    escape() {\n        this._editor.focus();\n    }\n};\nContentHoverWidget.ID = 'editor.contrib.contentHoverWidget';\nContentHoverWidget = __decorate([\n    __param(1, IContextKeyService)\n], ContentHoverWidget);\nexport let EditorHoverStatusBar = class EditorHoverStatusBar extends Disposable {\n    get hasContent() {\n        return this._hasContent;\n    }\n    constructor(_keybindingService) {\n        super();\n        this._keybindingService = _keybindingService;\n        this._hasContent = false;\n        this.hoverElement = $('div.hover-row.status-bar');\n        this.actionsElement = dom.append(this.hoverElement, $('div.actions'));\n    }\n    addAction(actionOptions) {\n        const keybinding = this._keybindingService.lookupKeybinding(actionOptions.commandId);\n        const keybindingLabel = keybinding ? keybinding.getLabel() : null;\n        this._hasContent = true;\n        return this._register(HoverAction.render(this.actionsElement, actionOptions, keybindingLabel));\n    }\n    append(element) {\n        const result = dom.append(this.actionsElement, element);\n        this._hasContent = true;\n        return result;\n    }\n};\nEditorHoverStatusBar = __decorate([\n    __param(0, IKeybindingService)\n], EditorHoverStatusBar);\nclass ContentHoverComputer {\n    get anchor() { return this._anchor; }\n    set anchor(value) { this._anchor = value; }\n    get shouldFocus() { return this._shouldFocus; }\n    set shouldFocus(value) { this._shouldFocus = value; }\n    get source() { return this._source; }\n    set source(value) { this._source = value; }\n    get insistOnKeepingHoverVisible() { return this._insistOnKeepingHoverVisible; }\n    set insistOnKeepingHoverVisible(value) { this._insistOnKeepingHoverVisible = value; }\n    constructor(_editor, _participants) {\n        this._editor = _editor;\n        this._participants = _participants;\n        this._anchor = null;\n        this._shouldFocus = false;\n        this._source = 0 /* HoverStartSource.Mouse */;\n        this._insistOnKeepingHoverVisible = false;\n    }\n    static _getLineDecorations(editor, anchor) {\n        if (anchor.type !== 1 /* HoverAnchorType.Range */ && !anchor.supportsMarkerHover) {\n            return [];\n        }\n        const model = editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        if (lineNumber > model.getLineCount()) {\n            // invalid line\n            return [];\n        }\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        return editor.getLineDecorations(lineNumber).filter((d) => {\n            if (d.options.isWholeLine) {\n                return true;\n            }\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            if (d.options.showIfCollapsed) {\n                // Relax check around `showIfCollapsed` decorations to also include +/- 1 character\n                if (startColumn > anchor.range.startColumn + 1 || anchor.range.endColumn - 1 > endColumn) {\n                    return false;\n                }\n            }\n            else {\n                if (startColumn > anchor.range.startColumn || anchor.range.endColumn > endColumn) {\n                    return false;\n                }\n            }\n            return true;\n        });\n    }\n    computeAsync(token) {\n        const anchor = this._anchor;\n        if (!this._editor.hasModel() || !anchor) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, anchor);\n        return AsyncIterableObject.merge(this._participants.map((participant) => {\n            if (!participant.computeAsync) {\n                return AsyncIterableObject.EMPTY;\n            }\n            return participant.computeAsync(anchor, lineDecorations, token);\n        }));\n    }\n    computeSync() {\n        if (!this._editor.hasModel() || !this._anchor) {\n            return [];\n        }\n        const lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, this._anchor);\n        let result = [];\n        for (const participant of this._participants) {\n            result = result.concat(participant.computeSync(this._anchor, lineDecorations));\n        }\n        return coalesce(result);\n    }\n}\nfunction computeDistanceFromPointToRectangle(pointX, pointY, left, top, width, height) {\n    const x = (left + width / 2); // x center of rectangle\n    const y = (top + height / 2); // y center of rectangle\n    const dx = Math.max(Math.abs(pointX - x) - width / 2, 0);\n    const dy = Math.max(Math.abs(pointY - y) - height / 2, 0);\n    return Math.sqrt(dx * dx + dy * dy);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class HoverProviderResult {\n    constructor(provider, hover, ordinal) {\n        this.provider = provider;\n        this.hover = hover;\n        this.ordinal = ordinal;\n    }\n}\nfunction executeProvider(provider, ordinal, model, position, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const result = yield Promise.resolve(provider.provideHover(model, position, token));\n            if (result && isValid(result)) {\n                return new HoverProviderResult(provider, result, ordinal);\n            }\n        }\n        catch (err) {\n            onUnexpectedExternalError(err);\n        }\n        return undefined;\n    });\n}\nexport function getHover(registry, model, position, token) {\n    const providers = registry.ordered(model);\n    const promises = providers.map((provider, index) => executeProvider(provider, index, model, position, token));\n    return AsyncIterableObject.fromPromises(promises).coalesce();\n}\nexport function getHoverPromise(registry, model, position, token) {\n    return getHover(registry, model, position, token).map(item => item.hover).toPromise();\n}\nregisterModelAndPositionCommand('_executeHoverProvider', (accessor, model, position) => {\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    return getHoverPromise(languageFeaturesService.hoverProvider, model, position, CancellationToken.None);\n});\nfunction isValid(result) {\n    const hasRange = (typeof result.range !== 'undefined');\n    const hasHtmlContent = typeof result.contents !== 'undefined' && result.contents && result.contents.length > 0;\n    return hasRange && hasHtmlContent;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { isEmptyMarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nconst $ = dom.$;\nexport class MarginHoverWidget extends Disposable {\n    constructor(editor, languageService, openerService) {\n        super();\n        this._renderDisposeables = this._register(new DisposableStore());\n        this._editor = editor;\n        this._isVisible = false;\n        this._messages = [];\n        this._hover = this._register(new HoverWidget());\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        this._markdownRenderer = this._register(new MarkdownRenderer({ editor: this._editor }, languageService, openerService));\n        this._computer = new MarginHoverComputer(this._editor);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            this._withResult(result.value);\n        }));\n        this._register(this._editor.onDidChangeModelDecorations(() => this._onModelDecorationsChanged()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(48 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._editor.addOverlayWidget(this);\n    }\n    dispose() {\n        this._editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n    getId() {\n        return MarginHoverWidget.ID;\n    }\n    getDomNode() {\n        return this._hover.containerDomNode;\n    }\n    getPosition() {\n        return null;\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    _onModelDecorationsChanged() {\n        if (this._isVisible) {\n            // The decorations have changed and the hover is visible,\n            // we need to recompute the displayed text\n            this._hoverOperation.cancel();\n            this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n        }\n    }\n    startShowingAt(lineNumber) {\n        if (this._computer.lineNumber === lineNumber) {\n            // We have to show the widget at the exact same line number as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        this.hide();\n        this._computer.lineNumber = lineNumber;\n        this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n    }\n    hide() {\n        this._computer.lineNumber = -1;\n        this._hoverOperation.cancel();\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n    }\n    _withResult(result) {\n        this._messages = result;\n        if (this._messages.length > 0) {\n            this._renderMessages(this._computer.lineNumber, this._messages);\n        }\n        else {\n            this.hide();\n        }\n    }\n    _renderMessages(lineNumber, messages) {\n        this._renderDisposeables.clear();\n        const fragment = document.createDocumentFragment();\n        for (const msg of messages) {\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderedContents = this._renderDisposeables.add(this._markdownRenderer.render(msg.value));\n            hoverContentsElement.appendChild(renderedContents.element);\n            fragment.appendChild(markdownHoverElement);\n        }\n        this._updateContents(fragment);\n        this._showAt(lineNumber);\n    }\n    _updateContents(node) {\n        this._hover.contentsDomNode.textContent = '';\n        this._hover.contentsDomNode.appendChild(node);\n        this._updateFont();\n    }\n    _showAt(lineNumber) {\n        if (!this._isVisible) {\n            this._isVisible = true;\n            this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        }\n        const editorLayout = this._editor.getLayoutInfo();\n        const topForLineNumber = this._editor.getTopForLineNumber(lineNumber);\n        const editorScrollTop = this._editor.getScrollTop();\n        const lineHeight = this._editor.getOption(64 /* EditorOption.lineHeight */);\n        const nodeHeight = this._hover.containerDomNode.clientHeight;\n        const top = topForLineNumber - editorScrollTop - ((nodeHeight - lineHeight) / 2);\n        this._hover.containerDomNode.style.left = `${editorLayout.glyphMarginLeft + editorLayout.glyphMarginWidth}px`;\n        this._hover.containerDomNode.style.top = `${Math.max(Math.round(top), 0)}px`;\n    }\n}\nMarginHoverWidget.ID = 'editor.contrib.modesGlyphHoverWidget';\nclass MarginHoverComputer {\n    get lineNumber() {\n        return this._lineNumber;\n    }\n    set lineNumber(value) {\n        this._lineNumber = value;\n    }\n    constructor(_editor) {\n        this._editor = _editor;\n        this._lineNumber = -1;\n    }\n    computeSync() {\n        const toHoverMessage = (contents) => {\n            return {\n                value: contents\n            };\n        };\n        const lineDecorations = this._editor.getLineDecorations(this._lineNumber);\n        const result = [];\n        if (!lineDecorations) {\n            return result;\n        }\n        for (const d of lineDecorations) {\n            if (!d.options.glyphMarginClassName) {\n                continue;\n            }\n            const hoverMessage = d.options.glyphMarginHoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            result.push(...asArray(hoverMessage).map(toHoverMessage));\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, disposableTimeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { basename } from '../../../../base/common/resources.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { IMarkerDecorationsService } from '../../../common/services/markerDecorations.js';\nimport { getCodeActions, quickFixCommandId } from '../../codeAction/browser/codeAction.js';\nimport { CodeActionController } from '../../codeAction/browser/codeActionController.js';\nimport { CodeActionKind, CodeActionTriggerSource } from '../../codeAction/common/types.js';\nimport { MarkerController, NextMarkerAction } from '../../gotoError/browser/gotoError.js';\nimport * as nls from '../../../../nls.js';\nimport { IMarkerData, MarkerSeverity } from '../../../../platform/markers/common/markers.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nconst $ = dom.$;\nexport class MarkerHover {\n    constructor(owner, range, marker) {\n        this.owner = owner;\n        this.range = range;\n        this.marker = marker;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nconst markerCodeActionTrigger = {\n    type: 1 /* CodeActionTriggerType.Invoke */,\n    filter: { include: CodeActionKind.QuickFix },\n    triggerAction: CodeActionTriggerSource.QuickFixHover\n};\nexport let MarkerHoverParticipant = class MarkerHoverParticipant {\n    constructor(_editor, _markerDecorationsService, _openerService, _languageFeaturesService) {\n        this._editor = _editor;\n        this._markerDecorationsService = _markerDecorationsService;\n        this._openerService = _openerService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this.hoverOrdinal = 1;\n        this.recentMarkerCodeActionsInfo = undefined;\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */ && !anchor.supportsMarkerHover) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const marker = this._markerDecorationsService.getMarker(model.uri, d);\n            if (!marker) {\n                continue;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkerHover(this, range, marker));\n        }\n        return result;\n    }\n    renderHoverParts(context, hoverParts) {\n        if (!hoverParts.length) {\n            return Disposable.None;\n        }\n        const disposables = new DisposableStore();\n        hoverParts.forEach(msg => context.fragment.appendChild(this.renderMarkerHover(msg, disposables)));\n        const markerHoverForStatusbar = hoverParts.length === 1 ? hoverParts[0] : hoverParts.sort((a, b) => MarkerSeverity.compare(a.marker.severity, b.marker.severity))[0];\n        this.renderMarkerStatusbar(context, markerHoverForStatusbar, disposables);\n        return disposables;\n    }\n    renderMarkerHover(markerHover, disposables) {\n        const hoverElement = $('div.hover-row');\n        const markerElement = dom.append(hoverElement, $('div.marker.hover-contents'));\n        const { source, message, code, relatedInformation } = markerHover.marker;\n        this._editor.applyFontInfo(markerElement);\n        const messageElement = dom.append(markerElement, $('span'));\n        messageElement.style.whiteSpace = 'pre-wrap';\n        messageElement.innerText = message;\n        if (source || code) {\n            // Code has link\n            if (code && typeof code !== 'string') {\n                const sourceAndCodeElement = $('span');\n                if (source) {\n                    const sourceElement = dom.append(sourceAndCodeElement, $('span'));\n                    sourceElement.innerText = source;\n                }\n                const codeLink = dom.append(sourceAndCodeElement, $('a.code-link'));\n                codeLink.setAttribute('href', code.target.toString());\n                disposables.add(dom.addDisposableListener(codeLink, 'click', (e) => {\n                    this._openerService.open(code.target, { allowCommands: true });\n                    e.preventDefault();\n                    e.stopPropagation();\n                }));\n                const codeElement = dom.append(codeLink, $('span'));\n                codeElement.innerText = code.value;\n                const detailsElement = dom.append(markerElement, sourceAndCodeElement);\n                detailsElement.style.opacity = '0.6';\n                detailsElement.style.paddingLeft = '6px';\n            }\n            else {\n                const detailsElement = dom.append(markerElement, $('span'));\n                detailsElement.style.opacity = '0.6';\n                detailsElement.style.paddingLeft = '6px';\n                detailsElement.innerText = source && code ? `${source}(${code})` : source ? source : `(${code})`;\n            }\n        }\n        if (isNonEmptyArray(relatedInformation)) {\n            for (const { message, resource, startLineNumber, startColumn } of relatedInformation) {\n                const relatedInfoContainer = dom.append(markerElement, $('div'));\n                relatedInfoContainer.style.marginTop = '8px';\n                const a = dom.append(relatedInfoContainer, $('a'));\n                a.innerText = `${basename(resource)}(${startLineNumber}, ${startColumn}): `;\n                a.style.cursor = 'pointer';\n                disposables.add(dom.addDisposableListener(a, 'click', (e) => {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    if (this._openerService) {\n                        this._openerService.open(resource, {\n                            fromUserGesture: true,\n                            editorOptions: { selection: { startLineNumber, startColumn } }\n                        }).catch(onUnexpectedError);\n                    }\n                }));\n                const messageElement = dom.append(relatedInfoContainer, $('span'));\n                messageElement.innerText = message;\n                this._editor.applyFontInfo(messageElement);\n            }\n        }\n        return hoverElement;\n    }\n    renderMarkerStatusbar(context, markerHover, disposables) {\n        if (markerHover.marker.severity === MarkerSeverity.Error || markerHover.marker.severity === MarkerSeverity.Warning || markerHover.marker.severity === MarkerSeverity.Info) {\n            context.statusBar.addAction({\n                label: nls.localize('view problem', \"View Problem\"),\n                commandId: NextMarkerAction.ID,\n                run: () => {\n                    var _a;\n                    context.hide();\n                    (_a = MarkerController.get(this._editor)) === null || _a === void 0 ? void 0 : _a.showAtMarker(markerHover.marker);\n                    this._editor.focus();\n                }\n            });\n        }\n        if (!this._editor.getOption(88 /* EditorOption.readOnly */)) {\n            const quickfixPlaceholderElement = context.statusBar.append($('div'));\n            if (this.recentMarkerCodeActionsInfo) {\n                if (IMarkerData.makeKey(this.recentMarkerCodeActionsInfo.marker) === IMarkerData.makeKey(markerHover.marker)) {\n                    if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\n                        quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\n                    }\n                }\n                else {\n                    this.recentMarkerCodeActionsInfo = undefined;\n                }\n            }\n            const updatePlaceholderDisposable = this.recentMarkerCodeActionsInfo && !this.recentMarkerCodeActionsInfo.hasCodeActions ? Disposable.None : disposables.add(disposableTimeout(() => quickfixPlaceholderElement.textContent = nls.localize('checkingForQuickFixes', \"Checking for quick fixes...\"), 200));\n            if (!quickfixPlaceholderElement.textContent) {\n                // Have some content in here to avoid flickering\n                quickfixPlaceholderElement.textContent = String.fromCharCode(0xA0); // &nbsp;\n            }\n            const codeActionsPromise = this.getCodeActions(markerHover.marker);\n            disposables.add(toDisposable(() => codeActionsPromise.cancel()));\n            codeActionsPromise.then(actions => {\n                updatePlaceholderDisposable.dispose();\n                this.recentMarkerCodeActionsInfo = { marker: markerHover.marker, hasCodeActions: actions.validActions.length > 0 };\n                if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\n                    actions.dispose();\n                    quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\n                    return;\n                }\n                quickfixPlaceholderElement.style.display = 'none';\n                let showing = false;\n                disposables.add(toDisposable(() => {\n                    if (!showing) {\n                        actions.dispose();\n                    }\n                }));\n                context.statusBar.addAction({\n                    label: nls.localize('quick fixes', \"Quick Fix...\"),\n                    commandId: quickFixCommandId,\n                    run: (target) => {\n                        showing = true;\n                        const controller = CodeActionController.get(this._editor);\n                        const elementPosition = dom.getDomNodePagePosition(target);\n                        // Hide the hover pre-emptively, otherwise the editor can close the code actions\n                        // context menu as well when using keyboard navigation\n                        context.hide();\n                        controller === null || controller === void 0 ? void 0 : controller.showCodeActions(markerCodeActionTrigger, actions, {\n                            x: elementPosition.left,\n                            y: elementPosition.top,\n                            width: elementPosition.width,\n                            height: elementPosition.height\n                        });\n                    }\n                });\n            }, onUnexpectedError);\n        }\n    }\n    getCodeActions(marker) {\n        return createCancelablePromise(cancellationToken => {\n            return getCodeActions(this._languageFeaturesService.codeActionProvider, this._editor.getModel(), new Range(marker.startLineNumber, marker.startColumn, marker.endLineNumber, marker.endColumn), markerCodeActionTrigger, Progress.None, cancellationToken);\n        });\n    }\n};\nMarkerHoverParticipant = __decorate([\n    __param(1, IMarkerDecorationsService),\n    __param(2, IOpenerService),\n    __param(3, ILanguageFeaturesService)\n], MarkerHoverParticipant);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { GotoDefinitionAtPositionEditorContribution } from '../../gotoSymbol/browser/link/goToDefinitionAtPosition.js';\nimport { ContentHoverWidget, ContentHoverController } from './contentHover.js';\nimport { MarginHoverWidget } from './marginHover.js';\nimport * as nls from '../../../../nls.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { editorHoverBorder } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { HoverParticipantRegistry } from './hoverTypes.js';\nimport { MarkdownHoverParticipant } from './markdownHoverParticipant.js';\nimport { MarkerHoverParticipant } from './markerHoverParticipant.js';\nimport { InlineSuggestionHintsContentWidget } from '../../inlineCompletions/browser/inlineCompletionsHintsWidget.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport './hover.css';\nexport let ModesHoverController = class ModesHoverController {\n    static get(editor) {\n        return editor.getContribution(ModesHoverController.ID);\n    }\n    constructor(_editor, _instantiationService, _openerService, _languageService, _keybindingService) {\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._openerService = _openerService;\n        this._languageService = _languageService;\n        this._keybindingService = _keybindingService;\n        this._toUnhook = new DisposableStore();\n        this._isMouseDown = false;\n        this._hoverClicked = false;\n        this._contentWidget = null;\n        this._glyphWidget = null;\n        this._hookEvents();\n        this._didChangeConfigurationHandler = this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(58 /* EditorOption.hover */)) {\n                this._unhookEvents();\n                this._hookEvents();\n            }\n        });\n    }\n    _hookEvents() {\n        const hideWidgetsEventHandler = () => this._hideWidgets();\n        const hoverOpts = this._editor.getOption(58 /* EditorOption.hover */);\n        this._isHoverEnabled = hoverOpts.enabled;\n        this._isHoverSticky = hoverOpts.sticky;\n        if (this._isHoverEnabled) {\n            this._toUnhook.add(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\n            this._toUnhook.add(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\n        }\n        else {\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\n        }\n        this._toUnhook.add(this._editor.onMouseLeave((e) => this._onEditorMouseLeave(e)));\n        this._toUnhook.add(this._editor.onDidChangeModel(hideWidgetsEventHandler));\n        this._toUnhook.add(this._editor.onDidScrollChange((e) => this._onEditorScrollChanged(e)));\n    }\n    _unhookEvents() {\n        this._toUnhook.clear();\n    }\n    _onEditorScrollChanged(e) {\n        if (e.scrollTopChanged || e.scrollLeftChanged) {\n            this._hideWidgets();\n        }\n    }\n    _onEditorMouseDown(mouseEvent) {\n        this._isMouseDown = true;\n        const target = mouseEvent.target;\n        if (target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID) {\n            this._hoverClicked = true;\n            // mouse down on top of content hover widget\n            return;\n        }\n        if (target.type === 12 /* MouseTargetType.OVERLAY_WIDGET */ && target.detail === MarginHoverWidget.ID) {\n            // mouse down on top of overlay hover widget\n            return;\n        }\n        if (target.type !== 12 /* MouseTargetType.OVERLAY_WIDGET */) {\n            this._hoverClicked = false;\n        }\n        this._hideWidgets();\n    }\n    _onEditorMouseUp(mouseEvent) {\n        this._isMouseDown = false;\n    }\n    _onEditorMouseLeave(mouseEvent) {\n        var _a;\n        const targetEm = (mouseEvent.event.browserEvent.relatedTarget);\n        if ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.containsNode(targetEm)) {\n            // when the mouse is inside hover widget\n            return;\n        }\n        this._hideWidgets();\n    }\n    _onEditorMouseMove(mouseEvent) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        const target = mouseEvent.target;\n        if (this._isMouseDown && this._hoverClicked) {\n            return;\n        }\n        if (this._isHoverSticky && target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID) {\n            // mouse moved on top of content hover widget\n            return;\n        }\n        if (this._isHoverSticky && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.containsNode((_b = mouseEvent.event.browserEvent.view) === null || _b === void 0 ? void 0 : _b.document.activeElement)) && !((_d = (_c = mouseEvent.event.browserEvent.view) === null || _c === void 0 ? void 0 : _c.getSelection()) === null || _d === void 0 ? void 0 : _d.isCollapsed)) {\n            // selected text within content hover widget\n            return;\n        }\n        if (!this._isHoverSticky && target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID\n            && ((_e = this._contentWidget) === null || _e === void 0 ? void 0 : _e.isColorPickerVisible())) {\n            // though the hover is not sticky, the color picker needs to.\n            return;\n        }\n        if (this._isHoverSticky && target.type === 12 /* MouseTargetType.OVERLAY_WIDGET */ && target.detail === MarginHoverWidget.ID) {\n            // mouse moved on top of overlay hover widget\n            return;\n        }\n        if (this._isHoverSticky && ((_f = this._contentWidget) === null || _f === void 0 ? void 0 : _f.isVisibleFromKeyboard())) {\n            // Sticky mode is on and the hover has been shown via keyboard\n            // so moving the mouse has no effect\n            return;\n        }\n        if (!this._isHoverEnabled) {\n            this._hideWidgets();\n            return;\n        }\n        const contentWidget = this._getOrCreateContentWidget();\n        if (contentWidget.maybeShowAt(mouseEvent)) {\n            (_g = this._glyphWidget) === null || _g === void 0 ? void 0 : _g.hide();\n            return;\n        }\n        if (target.type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */ && target.position) {\n            (_h = this._contentWidget) === null || _h === void 0 ? void 0 : _h.hide();\n            if (!this._glyphWidget) {\n                this._glyphWidget = new MarginHoverWidget(this._editor, this._languageService, this._openerService);\n            }\n            this._glyphWidget.startShowingAt(target.position.lineNumber);\n            return;\n        }\n        this._hideWidgets();\n    }\n    _onKeyDown(e) {\n        var _a;\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const resolvedKeyboardEvent = this._keybindingService.softDispatch(e, this._editor.getDomNode());\n        // If the beginning of a multi-chord keybinding is pressed, or the command aims to focus the hover, set the variable to true, otherwise false\n        const mightTriggerFocus = (resolvedKeyboardEvent.kind === 1 /* ResultKind.MoreChordsNeeded */ || (resolvedKeyboardEvent.kind === 2 /* ResultKind.KbFound */ && resolvedKeyboardEvent.commandId === 'editor.action.showHover' && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isVisible())));\n        if (e.keyCode !== 5 /* KeyCode.Ctrl */ && e.keyCode !== 6 /* KeyCode.Alt */ && e.keyCode !== 57 /* KeyCode.Meta */ && e.keyCode !== 4 /* KeyCode.Shift */\n            && !mightTriggerFocus) {\n            // Do not hide hover when a modifier key is pressed\n            this._hideWidgets();\n        }\n    }\n    _hideWidgets() {\n        var _a, _b, _c;\n        if ((this._isMouseDown && this._hoverClicked && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible())) || InlineSuggestionHintsContentWidget.dropDownVisible) {\n            return;\n        }\n        this._hoverClicked = false;\n        (_b = this._glyphWidget) === null || _b === void 0 ? void 0 : _b.hide();\n        (_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.hide();\n    }\n    _getOrCreateContentWidget() {\n        if (!this._contentWidget) {\n            this._contentWidget = this._instantiationService.createInstance(ContentHoverController, this._editor);\n        }\n        return this._contentWidget;\n    }\n    isColorPickerVisible() {\n        var _a;\n        return ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible()) || false;\n    }\n    showContentHover(range, mode, source, focus) {\n        this._getOrCreateContentWidget().startShowingAtRange(range, mode, source, focus);\n    }\n    focus() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    scrollUp() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.scrollUp();\n    }\n    scrollDown() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.scrollDown();\n    }\n    scrollLeft() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.scrollLeft();\n    }\n    scrollRight() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.scrollRight();\n    }\n    pageUp() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.pageUp();\n    }\n    pageDown() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.pageDown();\n    }\n    goToTop() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.goToTop();\n    }\n    goToBottom() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.goToBottom();\n    }\n    escape() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.escape();\n    }\n    isHoverVisible() {\n        var _a;\n        return (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isVisible();\n    }\n    dispose() {\n        var _a, _b;\n        this._unhookEvents();\n        this._toUnhook.dispose();\n        this._didChangeConfigurationHandler.dispose();\n        (_a = this._glyphWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n        (_b = this._contentWidget) === null || _b === void 0 ? void 0 : _b.dispose();\n    }\n};\nModesHoverController.ID = 'editor.contrib.hover';\nModesHoverController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IOpenerService),\n    __param(3, ILanguageService),\n    __param(4, IKeybindingService)\n], ModesHoverController);\nclass ShowOrFocusHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.showHover',\n            label: nls.localize({\n                key: 'showOrFocusHover',\n                comment: [\n                    'Label for action that will trigger the showing/focusing of a hover in the editor.',\n                    'If the hover is not visible, it will show the hover.',\n                    'This allows for users to show the hover without using the mouse.',\n                    'If the hover is already visible, it will take focus.'\n                ]\n            }, \"Show or Focus Hover\"),\n            description: {\n                description: `Show or Focus Hover`,\n                args: [{\n                        name: 'args',\n                        schema: {\n                            type: 'object',\n                            properties: {\n                                'focus': {\n                                    description: 'Controls if when triggered with the keyboard, the hover should take focus immediately.',\n                                    type: 'boolean',\n                                    default: false\n                                }\n                            },\n                        }\n                    }]\n            },\n            alias: 'Show or Focus Hover',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const position = editor.getPosition();\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const focus = editor.getOption(2 /* EditorOption.accessibilitySupport */) === 2 /* AccessibilitySupport.Enabled */ || !!(args === null || args === void 0 ? void 0 : args.focus);\n        if (controller.isHoverVisible()) {\n            controller.focus();\n        }\n        else {\n            controller.showContentHover(range, 1 /* HoverStartMode.Immediate */, 1 /* HoverStartSource.Keyboard */, focus);\n        }\n    }\n}\nclass ShowDefinitionPreviewHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.showDefinitionPreviewHover',\n            label: nls.localize({\n                key: 'showDefinitionPreviewHover',\n                comment: [\n                    'Label for action that will trigger the showing of definition preview hover in the editor.',\n                    'This allows for users to show the definition preview hover without using the mouse.'\n                ]\n            }, \"Show Definition Preview Hover\"),\n            alias: 'Show Definition Preview Hover',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const position = editor.getPosition();\n        if (!position) {\n            return;\n        }\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const goto = GotoDefinitionAtPositionEditorContribution.get(editor);\n        if (!goto) {\n            return;\n        }\n        const promise = goto.startFindDefinitionFromCursor(position);\n        promise.then(() => {\n            controller.showContentHover(range, 1 /* HoverStartMode.Immediate */, 1 /* HoverStartSource.Keyboard */, true);\n        });\n    }\n}\nclass ScrollUpHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.scrollUpHover',\n            label: nls.localize({\n                key: 'scrollUpHover',\n                comment: [\n                    'Action that allows to scroll up in the hover widget with the up arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Up Hover\"),\n            alias: 'Scroll Up Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 16 /* KeyCode.UpArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollUp();\n    }\n}\nclass ScrollDownHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.scrollDownHover',\n            label: nls.localize({\n                key: 'scrollDownHover',\n                comment: [\n                    'Action that allows to scroll down in the hover widget with the up arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Down Hover\"),\n            alias: 'Scroll Down Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 18 /* KeyCode.DownArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollDown();\n    }\n}\nclass ScrollLeftHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.scrollLeftHover',\n            label: nls.localize({\n                key: 'scrollLeftHover',\n                comment: [\n                    'Action that allows to scroll left in the hover widget with the left arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Left Hover\"),\n            alias: 'Scroll Left Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 15 /* KeyCode.LeftArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollLeft();\n    }\n}\nclass ScrollRightHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.scrollRightHover',\n            label: nls.localize({\n                key: 'scrollRightHover',\n                comment: [\n                    'Action that allows to scroll right in the hover widget with the right arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Right Hover\"),\n            alias: 'Scroll Right Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 17 /* KeyCode.RightArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollRight();\n    }\n}\nclass PageUpHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.pageUpHover',\n            label: nls.localize({\n                key: 'pageUpHover',\n                comment: [\n                    'Action that allows to page up in the hover widget with the page up command when the hover widget is focused.'\n                ]\n            }, \"Page Up Hover\"),\n            alias: 'Page Up Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 11 /* KeyCode.PageUp */,\n                secondary: [512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.pageUp();\n    }\n}\nclass PageDownHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.pageDownHover',\n            label: nls.localize({\n                key: 'pageDownHover',\n                comment: [\n                    'Action that allows to page down in the hover widget with the page down command when the hover widget is focused.'\n                ]\n            }, \"Page Down Hover\"),\n            alias: 'Page Down Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 12 /* KeyCode.PageDown */,\n                secondary: [512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.pageDown();\n    }\n}\nclass GoToTopHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.goToTopHover',\n            label: nls.localize({\n                key: 'goToTopHover',\n                comment: [\n                    'Action that allows to go to the top of the hover widget with the home command when the hover widget is focused.'\n                ]\n            }, \"Go To Top Hover\"),\n            alias: 'Go To Bottom Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 14 /* KeyCode.Home */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.goToTop();\n    }\n}\nclass GoToBottomHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.goToBottomHover',\n            label: nls.localize({\n                key: 'goToBottomHover',\n                comment: [\n                    'Action that allows to go to the bottom in the hover widget with the end command when the hover widget is focused.'\n                ]\n            }, \"Go To Bottom Hover\"),\n            alias: 'Go To Bottom Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 13 /* KeyCode.End */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.goToBottom();\n    }\n}\nclass EscapeFocusHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.escapeFocusHover',\n            label: nls.localize({\n                key: 'escapeFocusHover',\n                comment: [\n                    'Action that allows to escape from the hover widget with the escape command when the hover widget is focused.'\n                ]\n            }, \"Escape Focus Hover\"),\n            alias: 'Escape Focus Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 9 /* KeyCode.Escape */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.escape();\n    }\n}\nregisterEditorContribution(ModesHoverController.ID, ModesHoverController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(ShowOrFocusHoverAction);\nregisterEditorAction(ShowDefinitionPreviewHoverAction);\nregisterEditorAction(ScrollUpHoverAction);\nregisterEditorAction(ScrollDownHoverAction);\nregisterEditorAction(ScrollLeftHoverAction);\nregisterEditorAction(ScrollRightHoverAction);\nregisterEditorAction(PageUpHoverAction);\nregisterEditorAction(PageDownHoverAction);\nregisterEditorAction(GoToTopHoverAction);\nregisterEditorAction(GoToBottomHoverAction);\nregisterEditorAction(EscapeFocusHoverAction);\nHoverParticipantRegistry.register(MarkdownHoverParticipant);\nHoverParticipantRegistry.register(MarkerHoverParticipant);\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const hoverBorder = theme.getColor(editorHoverBorder);\n    if (hoverBorder) {\n        collector.addRule(`.monaco-editor .monaco-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-bottom: 0px solid ${hoverBorder.transparent(0.5)}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { createCancelableAsyncIterable, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nexport class HoverResult {\n    constructor(value, isComplete, hasLoadingMessage) {\n        this.value = value;\n        this.isComplete = isComplete;\n        this.hasLoadingMessage = hasLoadingMessage;\n    }\n}\n/**\n * Computing the hover is very fine tuned.\n *\n * Suppose the hover delay is 300ms (the default). Then, when resting the mouse at an anchor:\n * - at 150ms, the async computation is triggered (i.e. semantic hover)\n *   - if async results already come in, they are not rendered yet.\n * - at 300ms, the sync computation is triggered (i.e. decorations, markers)\n *   - if there are sync or async results, they are rendered.\n * - at 900ms, if the async computation hasn't finished, a \"Loading...\" result is added.\n */\nexport class HoverOperation extends Disposable {\n    constructor(_editor, _computer) {\n        super();\n        this._editor = _editor;\n        this._computer = _computer;\n        this._onResult = this._register(new Emitter());\n        this.onResult = this._onResult.event;\n        this._firstWaitScheduler = this._register(new RunOnceScheduler(() => this._triggerAsyncComputation(), 0));\n        this._secondWaitScheduler = this._register(new RunOnceScheduler(() => this._triggerSyncComputation(), 0));\n        this._loadingMessageScheduler = this._register(new RunOnceScheduler(() => this._triggerLoadingMessage(), 0));\n        this._state = 0 /* HoverOperationState.Idle */;\n        this._asyncIterable = null;\n        this._asyncIterableDone = false;\n        this._result = [];\n    }\n    dispose() {\n        if (this._asyncIterable) {\n            this._asyncIterable.cancel();\n            this._asyncIterable = null;\n        }\n        super.dispose();\n    }\n    get _hoverTime() {\n        return this._editor.getOption(58 /* EditorOption.hover */).delay;\n    }\n    get _firstWaitTime() {\n        return this._hoverTime / 2;\n    }\n    get _secondWaitTime() {\n        return this._hoverTime - this._firstWaitTime;\n    }\n    get _loadingMessageTime() {\n        return 3 * this._hoverTime;\n    }\n    _setState(state, fireResult = true) {\n        this._state = state;\n        if (fireResult) {\n            this._fireResult();\n        }\n    }\n    _triggerAsyncComputation() {\n        this._setState(2 /* HoverOperationState.SecondWait */);\n        this._secondWaitScheduler.schedule(this._secondWaitTime);\n        if (this._computer.computeAsync) {\n            this._asyncIterableDone = false;\n            this._asyncIterable = createCancelableAsyncIterable(token => this._computer.computeAsync(token));\n            (() => __awaiter(this, void 0, void 0, function* () {\n                var _a, e_1, _b, _c;\n                try {\n                    try {\n                        for (var _d = true, _e = __asyncValues(this._asyncIterable), _f; _f = yield _e.next(), _a = _f.done, !_a; _d = true) {\n                            _c = _f.value;\n                            _d = false;\n                            const item = _c;\n                            if (item) {\n                                this._result.push(item);\n                                this._fireResult();\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                    this._asyncIterableDone = true;\n                    if (this._state === 3 /* HoverOperationState.WaitingForAsync */ || this._state === 4 /* HoverOperationState.WaitingForAsyncShowingLoading */) {\n                        this._setState(0 /* HoverOperationState.Idle */);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }))();\n        }\n        else {\n            this._asyncIterableDone = true;\n        }\n    }\n    _triggerSyncComputation() {\n        if (this._computer.computeSync) {\n            this._result = this._result.concat(this._computer.computeSync());\n        }\n        this._setState(this._asyncIterableDone ? 0 /* HoverOperationState.Idle */ : 3 /* HoverOperationState.WaitingForAsync */);\n    }\n    _triggerLoadingMessage() {\n        if (this._state === 3 /* HoverOperationState.WaitingForAsync */) {\n            this._setState(4 /* HoverOperationState.WaitingForAsyncShowingLoading */);\n        }\n    }\n    _fireResult() {\n        if (this._state === 1 /* HoverOperationState.FirstWait */ || this._state === 2 /* HoverOperationState.SecondWait */) {\n            // Do not send out results before the hover time\n            return;\n        }\n        const isComplete = (this._state === 0 /* HoverOperationState.Idle */);\n        const hasLoadingMessage = (this._state === 4 /* HoverOperationState.WaitingForAsyncShowingLoading */);\n        this._onResult.fire(new HoverResult(this._result.slice(0), isComplete, hasLoadingMessage));\n    }\n    start(mode) {\n        if (mode === 0 /* HoverStartMode.Delayed */) {\n            if (this._state === 0 /* HoverOperationState.Idle */) {\n                this._setState(1 /* HoverOperationState.FirstWait */);\n                this._firstWaitScheduler.schedule(this._firstWaitTime);\n                this._loadingMessageScheduler.schedule(this._loadingMessageTime);\n            }\n        }\n        else {\n            switch (this._state) {\n                case 0 /* HoverOperationState.Idle */:\n                    this._triggerAsyncComputation();\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n                case 2 /* HoverOperationState.SecondWait */:\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n            }\n        }\n    }\n    cancel() {\n        this._firstWaitScheduler.cancel();\n        this._secondWaitScheduler.cancel();\n        this._loadingMessageScheduler.cancel();\n        if (this._asyncIterable) {\n            this._asyncIterable.cancel();\n            this._asyncIterable = null;\n        }\n        this._result = [];\n        this._setState(0 /* HoverOperationState.Idle */, false);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class HoverRangeAnchor {\n    constructor(priority, range, initialMousePosX, initialMousePosY) {\n        this.priority = priority;\n        this.range = range;\n        this.initialMousePosX = initialMousePosX;\n        this.initialMousePosY = initialMousePosY;\n        this.type = 1 /* HoverAnchorType.Range */;\n    }\n    equals(other) {\n        return (other.type === 1 /* HoverAnchorType.Range */ && this.range.equalsRange(other.range));\n    }\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\n        return (lastAnchor.type === 1 /* HoverAnchorType.Range */ && showAtPosition.lineNumber === this.range.startLineNumber);\n    }\n}\nexport class HoverForeignElementAnchor {\n    constructor(priority, owner, range, initialMousePosX, initialMousePosY, supportsMarkerHover) {\n        this.priority = priority;\n        this.owner = owner;\n        this.range = range;\n        this.initialMousePosX = initialMousePosX;\n        this.initialMousePosY = initialMousePosY;\n        this.supportsMarkerHover = supportsMarkerHover;\n        this.type = 2 /* HoverAnchorType.ForeignElement */;\n    }\n    equals(other) {\n        return (other.type === 2 /* HoverAnchorType.ForeignElement */ && this.owner === other.owner);\n    }\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\n        return (lastAnchor.type === 2 /* HoverAnchorType.ForeignElement */ && this.owner === lastAnchor.owner);\n    }\n}\nexport const HoverParticipantRegistry = (new class HoverParticipantRegistry {\n    constructor() {\n        this._participants = [];\n    }\n    register(ctor) {\n        this._participants.push(ctor);\n    }\n    getAll() {\n        return this._participants;\n    }\n}());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { getHover } from './getHover.js';\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nconst $ = dom.$;\nexport class MarkdownHover {\n    constructor(owner, range, contents, isBeforeContent, ordinal) {\n        this.owner = owner;\n        this.range = range;\n        this.contents = contents;\n        this.isBeforeContent = isBeforeContent;\n        this.ordinal = ordinal;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nexport let MarkdownHoverParticipant = class MarkdownHoverParticipant {\n    constructor(_editor, _languageService, _openerService, _configurationService, _languageFeaturesService) {\n        this._editor = _editor;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this._configurationService = _configurationService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this.hoverOrdinal = 3;\n    }\n    createLoadingMessage(anchor) {\n        return new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(nls.localize('modesContentHover.loading', \"Loading...\"))], false, 2000);\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        let index = 1000;\n        const lineLength = model.getLineLength(lineNumber);\n        const languageId = model.getLanguageIdAtPosition(anchor.range.startLineNumber, anchor.range.startColumn);\n        const stopRenderingLineAfter = this._editor.getOption(113 /* EditorOption.stopRenderingLineAfter */);\n        const maxTokenizationLineLength = this._configurationService.getValue('editor.maxTokenizationLineLength', {\n            overrideIdentifier: languageId\n        });\n        let stopRenderingMessage = false;\n        if (stopRenderingLineAfter >= 0 && lineLength > stopRenderingLineAfter && anchor.range.startColumn >= stopRenderingLineAfter) {\n            stopRenderingMessage = true;\n            result.push(new MarkdownHover(this, anchor.range, [{\n                    value: nls.localize('stopped rendering', \"Rendering paused for long line for performance reasons. This can be configured via `editor.stopRenderingLineAfter`.\")\n                }], false, index++));\n        }\n        if (!stopRenderingMessage && typeof maxTokenizationLineLength === 'number' && lineLength >= maxTokenizationLineLength) {\n            result.push(new MarkdownHover(this, anchor.range, [{\n                    value: nls.localize('too many characters', \"Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.\")\n                }], false, index++));\n        }\n        let isBeforeContent = false;\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const hoverMessage = d.options.hoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            if (d.options.beforeContentClassName) {\n                isBeforeContent = true;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkdownHover(this, range, asArray(hoverMessage), isBeforeContent, index++));\n        }\n        return result;\n    }\n    computeAsync(anchor, lineDecorations, token) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const model = this._editor.getModel();\n        if (!this._languageFeaturesService.hoverProvider.has(model)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const position = new Position(anchor.range.startLineNumber, anchor.range.startColumn);\n        return getHover(this._languageFeaturesService.hoverProvider, model, position, token)\n            .filter(item => !isEmptyMarkdownString(item.hover.contents))\n            .map(item => {\n            const rng = item.hover.range ? Range.lift(item.hover.range) : anchor.range;\n            return new MarkdownHover(this, rng, item.hover.contents, false, item.ordinal);\n        });\n    }\n    renderHoverParts(context, hoverParts) {\n        return renderMarkdownHovers(context, hoverParts, this._editor, this._languageService, this._openerService);\n    }\n};\nMarkdownHoverParticipant = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService),\n    __param(4, ILanguageFeaturesService)\n], MarkdownHoverParticipant);\nexport function renderMarkdownHovers(context, hoverParts, editor, languageService, openerService) {\n    // Sort hover parts to keep them stable since they might come in async, out-of-order\n    hoverParts.sort((a, b) => a.ordinal - b.ordinal);\n    const disposables = new DisposableStore();\n    for (const hoverPart of hoverParts) {\n        for (const contents of hoverPart.contents) {\n            if (isEmptyMarkdownString(contents)) {\n                continue;\n            }\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderer = disposables.add(new MarkdownRenderer({ editor }, languageService, openerService));\n            disposables.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const renderedContents = disposables.add(renderer.render(contents));\n            hoverContentsElement.appendChild(renderedContents.element);\n            context.fragment.appendChild(markdownHoverElement);\n        }\n    }\n    return disposables;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../../../common/core/selection.js';\nexport class InPlaceReplaceCommand {\n    constructor(editRange, originalSelection, text) {\n        this._editRange = editRange;\n        this._originalSelection = originalSelection;\n        this._text = text;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._editRange, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        if (!this._originalSelection.isEmpty()) {\n            // Preserve selection and extends to typed text\n            return new Selection(srcRange.endLineNumber, srcRange.endColumn - this._text.length, srcRange.endLineNumber, srcRange.endColumn);\n        }\n        return new Selection(srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn), srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createCancelablePromise, timeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { EditorState } from '../../editorState/browser/editorState.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport * as nls from '../../../../nls.js';\nimport { InPlaceReplaceCommand } from './inPlaceReplaceCommand.js';\nimport './inPlaceReplace.css';\nlet InPlaceReplaceController = class InPlaceReplaceController {\n    static get(editor) {\n        return editor.getContribution(InPlaceReplaceController.ID);\n    }\n    constructor(editor, editorWorkerService) {\n        this.editor = editor;\n        this.editorWorkerService = editorWorkerService;\n        this.decorations = this.editor.createDecorationsCollection();\n    }\n    dispose() {\n    }\n    run(source, up) {\n        var _a;\n        // cancel any pending request\n        (_a = this.currentRequest) === null || _a === void 0 ? void 0 : _a.cancel();\n        const editorSelection = this.editor.getSelection();\n        const model = this.editor.getModel();\n        if (!model || !editorSelection) {\n            return undefined;\n        }\n        let selection = editorSelection;\n        if (selection.startLineNumber !== selection.endLineNumber) {\n            // Can't accept multiline selection\n            return undefined;\n        }\n        const state = new EditorState(this.editor, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */);\n        const modelURI = model.uri;\n        if (!this.editorWorkerService.canNavigateValueSet(modelURI)) {\n            return Promise.resolve(undefined);\n        }\n        this.currentRequest = createCancelablePromise(token => this.editorWorkerService.navigateValueSet(modelURI, selection, up));\n        return this.currentRequest.then(result => {\n            var _a;\n            if (!result || !result.range || !result.value) {\n                // No proper result\n                return;\n            }\n            if (!state.validate(this.editor)) {\n                // state has changed\n                return;\n            }\n            // Selection\n            const editRange = Range.lift(result.range);\n            let highlightRange = result.range;\n            const diff = result.value.length - (selection.endColumn - selection.startColumn);\n            // highlight\n            highlightRange = {\n                startLineNumber: highlightRange.startLineNumber,\n                startColumn: highlightRange.startColumn,\n                endLineNumber: highlightRange.endLineNumber,\n                endColumn: highlightRange.startColumn + result.value.length\n            };\n            if (diff > 1) {\n                selection = new Selection(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn + diff - 1);\n            }\n            // Insert new text\n            const command = new InPlaceReplaceCommand(editRange, selection, result.value);\n            this.editor.pushUndoStop();\n            this.editor.executeCommand(source, command);\n            this.editor.pushUndoStop();\n            // add decoration\n            this.decorations.set([{\n                    range: highlightRange,\n                    options: InPlaceReplaceController.DECORATION\n                }]);\n            // remove decoration after delay\n            (_a = this.decorationRemover) === null || _a === void 0 ? void 0 : _a.cancel();\n            this.decorationRemover = timeout(350);\n            this.decorationRemover.then(() => this.decorations.clear()).catch(onUnexpectedError);\n        }).catch(onUnexpectedError);\n    }\n};\nInPlaceReplaceController.ID = 'editor.contrib.inPlaceReplaceController';\nInPlaceReplaceController.DECORATION = ModelDecorationOptions.register({\n    description: 'in-place-replace',\n    className: 'valueSetReplacement'\n});\nInPlaceReplaceController = __decorate([\n    __param(1, IEditorWorkerService)\n], InPlaceReplaceController);\nclass InPlaceReplaceUp extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.up',\n            label: nls.localize('InPlaceReplaceAction.previous.label', \"Replace with Previous Value\"),\n            alias: 'Replace with Previous Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 87 /* KeyCode.Comma */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, false);\n    }\n}\nclass InPlaceReplaceDown extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.down',\n            label: nls.localize('InPlaceReplaceAction.next.label', \"Replace with Next Value\"),\n            alias: 'Replace with Next Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 89 /* KeyCode.Period */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, true);\n    }\n}\nregisterEditorContribution(InPlaceReplaceController.ID, InPlaceReplaceController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorAction(InPlaceReplaceUp);\nregisterEditorAction(InPlaceReplaceDown);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function getSpaceCnt(str, tabSize) {\n    let spacesCnt = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) === '\\t') {\n            spacesCnt += tabSize;\n        }\n        else {\n            spacesCnt++;\n        }\n    }\n    return spacesCnt;\n}\nexport function generateIndent(spacesCnt, tabSize, insertSpaces) {\n    spacesCnt = spacesCnt < 0 ? 0 : spacesCnt;\n    let result = '';\n    if (!insertSpaces) {\n        const tabsCnt = Math.floor(spacesCnt / tabSize);\n        spacesCnt = spacesCnt % tabSize;\n        for (let i = 0; i < tabsCnt; i++) {\n            result += '\\t';\n        }\n    }\n    for (let i = 0; i < spacesCnt; i++) {\n        result += ' ';\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ShiftCommand } from '../../../common/commands/shiftCommand.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport * as indentUtils from './indentUtils.js';\nimport * as nls from '../../../../nls.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { normalizeIndentation } from '../../../common/core/indentation.js';\nimport { getGoodIndentForLine, getIndentMetadata } from '../../../common/languages/autoIndent.js';\nexport function getReindentEditOperations(model, languageConfigurationService, startLineNumber, endLineNumber, inheritedIndent) {\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n        // Model is empty\n        return [];\n    }\n    const indentationRules = languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).indentationRules;\n    if (!indentationRules) {\n        return [];\n    }\n    endLineNumber = Math.min(endLineNumber, model.getLineCount());\n    // Skip `unIndentedLinePattern` lines\n    while (startLineNumber <= endLineNumber) {\n        if (!indentationRules.unIndentedLinePattern) {\n            break;\n        }\n        const text = model.getLineContent(startLineNumber);\n        if (!indentationRules.unIndentedLinePattern.test(text)) {\n            break;\n        }\n        startLineNumber++;\n    }\n    if (startLineNumber > endLineNumber - 1) {\n        return [];\n    }\n    const { tabSize, indentSize, insertSpaces } = model.getOptions();\n    const shiftIndent = (indentation, count) => {\n        count = count || 1;\n        return ShiftCommand.shiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\n    };\n    const unshiftIndent = (indentation, count) => {\n        count = count || 1;\n        return ShiftCommand.unshiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\n    };\n    const indentEdits = [];\n    // indentation being passed to lines below\n    let globalIndent;\n    // Calculate indentation for the first line\n    // If there is no passed-in indentation, we use the indentation of the first line as base.\n    const currentLineText = model.getLineContent(startLineNumber);\n    let adjustedLineContent = currentLineText;\n    if (inheritedIndent !== undefined && inheritedIndent !== null) {\n        globalIndent = inheritedIndent;\n        const oldIndentation = strings.getLeadingWhitespace(currentLineText);\n        adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\n            globalIndent = unshiftIndent(globalIndent);\n            adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\n        }\n        if (currentLineText !== adjustedLineContent) {\n            indentEdits.push(EditOperation.replaceMove(new Selection(startLineNumber, 1, startLineNumber, oldIndentation.length + 1), normalizeIndentation(globalIndent, indentSize, insertSpaces)));\n        }\n    }\n    else {\n        globalIndent = strings.getLeadingWhitespace(currentLineText);\n    }\n    // idealIndentForNextLine doesn't equal globalIndent when there is a line matching `indentNextLinePattern`.\n    let idealIndentForNextLine = globalIndent;\n    if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n        globalIndent = shiftIndent(globalIndent);\n    }\n    else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n    }\n    startLineNumber++;\n    // Calculate indentation adjustment for all following lines\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        const text = model.getLineContent(lineNumber);\n        const oldIndentation = strings.getLeadingWhitespace(text);\n        const adjustedLineContent = idealIndentForNextLine + text.substring(oldIndentation.length);\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\n            idealIndentForNextLine = unshiftIndent(idealIndentForNextLine);\n            globalIndent = unshiftIndent(globalIndent);\n        }\n        if (oldIndentation !== idealIndentForNextLine) {\n            indentEdits.push(EditOperation.replaceMove(new Selection(lineNumber, 1, lineNumber, oldIndentation.length + 1), normalizeIndentation(idealIndentForNextLine, indentSize, insertSpaces)));\n        }\n        // calculate idealIndentForNextLine\n        if (indentationRules.unIndentedLinePattern && indentationRules.unIndentedLinePattern.test(text)) {\n            // In reindent phase, if the line matches `unIndentedLinePattern` we inherit indentation from above lines\n            // but don't change globalIndent and idealIndentForNextLine.\n            continue;\n        }\n        else if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\n            globalIndent = shiftIndent(globalIndent);\n            idealIndentForNextLine = globalIndent;\n        }\n        else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\n            idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n        }\n        else {\n            idealIndentForNextLine = globalIndent;\n        }\n    }\n    return indentEdits;\n}\nexport class IndentationToSpacesAction extends EditorAction {\n    constructor() {\n        super({\n            id: IndentationToSpacesAction.ID,\n            label: nls.localize('indentationToSpaces', \"Convert Indentation to Spaces\"),\n            alias: 'Convert Indentation to Spaces',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const modelOpts = model.getOptions();\n        const selection = editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        const command = new IndentationToSpacesCommand(selection, modelOpts.tabSize);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n        model.updateOptions({\n            insertSpaces: true\n        });\n    }\n}\nIndentationToSpacesAction.ID = 'editor.action.indentationToSpaces';\nexport class IndentationToTabsAction extends EditorAction {\n    constructor() {\n        super({\n            id: IndentationToTabsAction.ID,\n            label: nls.localize('indentationToTabs', \"Convert Indentation to Tabs\"),\n            alias: 'Convert Indentation to Tabs',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const modelOpts = model.getOptions();\n        const selection = editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        const command = new IndentationToTabsCommand(selection, modelOpts.tabSize);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n        model.updateOptions({\n            insertSpaces: false\n        });\n    }\n}\nIndentationToTabsAction.ID = 'editor.action.indentationToTabs';\nexport class ChangeIndentationSizeAction extends EditorAction {\n    constructor(insertSpaces, displaySizeOnly, opts) {\n        super(opts);\n        this.insertSpaces = insertSpaces;\n        this.displaySizeOnly = displaySizeOnly;\n    }\n    run(accessor, editor) {\n        const quickInputService = accessor.get(IQuickInputService);\n        const modelService = accessor.get(IModelService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n        const modelOpts = model.getOptions();\n        const picks = [1, 2, 3, 4, 5, 6, 7, 8].map(n => ({\n            id: n.toString(),\n            label: n.toString(),\n            // add description for tabSize value set in the configuration\n            description: (n === creationOpts.tabSize && n === modelOpts.tabSize\n                ? nls.localize('configuredTabSize', \"Configured Tab Size\")\n                : n === creationOpts.tabSize\n                    ? nls.localize('defaultTabSize', \"Default Tab Size\")\n                    : n === modelOpts.tabSize\n                        ? nls.localize('currentTabSize', \"Current Tab Size\")\n                        : undefined)\n        }));\n        // auto focus the tabSize set for the current editor\n        const autoFocusIndex = Math.min(model.getOptions().tabSize - 1, 7);\n        setTimeout(() => {\n            quickInputService.pick(picks, { placeHolder: nls.localize({ key: 'selectTabWidth', comment: ['Tab corresponds to the tab key'] }, \"Select Tab Size for Current File\"), activeItem: picks[autoFocusIndex] }).then(pick => {\n                if (pick) {\n                    if (model && !model.isDisposed()) {\n                        const pickedVal = parseInt(pick.label, 10);\n                        if (this.displaySizeOnly) {\n                            model.updateOptions({\n                                tabSize: pickedVal\n                            });\n                        }\n                        else {\n                            model.updateOptions({\n                                tabSize: pickedVal,\n                                indentSize: pickedVal,\n                                insertSpaces: this.insertSpaces\n                            });\n                        }\n                    }\n                }\n            });\n        }, 50 /* quick input is sensitive to being opened so soon after another */);\n    }\n}\nexport class IndentUsingTabs extends ChangeIndentationSizeAction {\n    constructor() {\n        super(false, false, {\n            id: IndentUsingTabs.ID,\n            label: nls.localize('indentUsingTabs', \"Indent Using Tabs\"),\n            alias: 'Indent Using Tabs',\n            precondition: undefined\n        });\n    }\n}\nIndentUsingTabs.ID = 'editor.action.indentUsingTabs';\nexport class IndentUsingSpaces extends ChangeIndentationSizeAction {\n    constructor() {\n        super(true, false, {\n            id: IndentUsingSpaces.ID,\n            label: nls.localize('indentUsingSpaces', \"Indent Using Spaces\"),\n            alias: 'Indent Using Spaces',\n            precondition: undefined\n        });\n    }\n}\nIndentUsingSpaces.ID = 'editor.action.indentUsingSpaces';\nexport class ChangeTabDisplaySize extends ChangeIndentationSizeAction {\n    constructor() {\n        super(true, true, {\n            id: ChangeTabDisplaySize.ID,\n            label: nls.localize('changeTabDisplaySize', \"Change Tab Display Size\"),\n            alias: 'Change Tab Display Size',\n            precondition: undefined\n        });\n    }\n}\nChangeTabDisplaySize.ID = 'editor.action.changeTabDisplaySize';\nexport class DetectIndentation extends EditorAction {\n    constructor() {\n        super({\n            id: DetectIndentation.ID,\n            label: nls.localize('detectIndentation', \"Detect Indentation from Content\"),\n            alias: 'Detect Indentation from Content',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const modelService = accessor.get(IModelService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n        model.detectIndentation(creationOpts.insertSpaces, creationOpts.tabSize);\n    }\n}\nDetectIndentation.ID = 'editor.action.detectIndentation';\nexport class ReindentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.reindentlines',\n            label: nls.localize('editor.reindentlines', \"Reindent Lines\"),\n            alias: 'Reindent Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const edits = getReindentEditOperations(model, languageConfigurationService, 1, model.getLineCount());\n        if (edits.length > 0) {\n            editor.pushUndoStop();\n            editor.executeEdits(this.id, edits);\n            editor.pushUndoStop();\n        }\n    }\n}\nexport class ReindentSelectedLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.reindentselectedlines',\n            label: nls.localize('editor.reindentselectedlines', \"Reindent Selected Lines\"),\n            alias: 'Reindent Selected Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const edits = [];\n        for (const selection of selections) {\n            let startLineNumber = selection.startLineNumber;\n            let endLineNumber = selection.endLineNumber;\n            if (startLineNumber !== endLineNumber && selection.endColumn === 1) {\n                endLineNumber--;\n            }\n            if (startLineNumber === 1) {\n                if (startLineNumber === endLineNumber) {\n                    continue;\n                }\n            }\n            else {\n                startLineNumber--;\n            }\n            const editOperations = getReindentEditOperations(model, languageConfigurationService, startLineNumber, endLineNumber);\n            edits.push(...editOperations);\n        }\n        if (edits.length > 0) {\n            editor.pushUndoStop();\n            editor.executeEdits(this.id, edits);\n            editor.pushUndoStop();\n        }\n    }\n}\nexport class AutoIndentOnPasteCommand {\n    constructor(edits, initialSelection) {\n        this._initialSelection = initialSelection;\n        this._edits = [];\n        this._selectionId = null;\n        for (const edit of edits) {\n            if (edit.range && typeof edit.text === 'string') {\n                this._edits.push(edit);\n            }\n        }\n    }\n    getEditOperations(model, builder) {\n        for (const edit of this._edits) {\n            builder.addEditOperation(Range.lift(edit.range), edit.text);\n        }\n        let selectionIsSet = false;\n        if (Array.isArray(this._edits) && this._edits.length === 1 && this._initialSelection.isEmpty()) {\n            if (this._edits[0].range.startColumn === this._initialSelection.endColumn &&\n                this._edits[0].range.startLineNumber === this._initialSelection.endLineNumber) {\n                selectionIsSet = true;\n                this._selectionId = builder.trackSelection(this._initialSelection, true);\n            }\n            else if (this._edits[0].range.endColumn === this._initialSelection.startColumn &&\n                this._edits[0].range.endLineNumber === this._initialSelection.startLineNumber) {\n                selectionIsSet = true;\n                this._selectionId = builder.trackSelection(this._initialSelection, false);\n            }\n        }\n        if (!selectionIsSet) {\n            this._selectionId = builder.trackSelection(this._initialSelection);\n        }\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._selectionId);\n    }\n}\nexport let AutoIndentOnPaste = class AutoIndentOnPaste {\n    constructor(editor, _languageConfigurationService) {\n        this.editor = editor;\n        this._languageConfigurationService = _languageConfigurationService;\n        this.callOnDispose = new DisposableStore();\n        this.callOnModel = new DisposableStore();\n        this.callOnDispose.add(editor.onDidChangeConfiguration(() => this.update()));\n        this.callOnDispose.add(editor.onDidChangeModel(() => this.update()));\n        this.callOnDispose.add(editor.onDidChangeModelLanguage(() => this.update()));\n    }\n    update() {\n        // clean up\n        this.callOnModel.clear();\n        // we are disabled\n        if (this.editor.getOption(10 /* EditorOption.autoIndent */) < 4 /* EditorAutoIndentStrategy.Full */ || this.editor.getOption(53 /* EditorOption.formatOnPaste */)) {\n            return;\n        }\n        // no model\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        this.callOnModel.add(this.editor.onDidPaste(({ range }) => {\n            this.trigger(range);\n        }));\n    }\n    trigger(range) {\n        const selections = this.editor.getSelections();\n        if (selections === null || selections.length > 1) {\n            return;\n        }\n        const model = this.editor.getModel();\n        if (!model) {\n            return;\n        }\n        if (!model.tokenization.isCheapToTokenize(range.getStartPosition().lineNumber)) {\n            return;\n        }\n        const autoIndent = this.editor.getOption(10 /* EditorOption.autoIndent */);\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\n        const textEdits = [];\n        const indentConverter = {\n            shiftIndent: (indentation) => {\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            },\n            unshiftIndent: (indentation) => {\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            }\n        };\n        let startLineNumber = range.startLineNumber;\n        while (startLineNumber <= range.endLineNumber) {\n            if (this.shouldIgnoreLine(model, startLineNumber)) {\n                startLineNumber++;\n                continue;\n            }\n            break;\n        }\n        if (startLineNumber > range.endLineNumber) {\n            return;\n        }\n        let firstLineText = model.getLineContent(startLineNumber);\n        if (!/\\S/.test(firstLineText.substring(0, range.startColumn - 1))) {\n            const indentOfFirstLine = getGoodIndentForLine(autoIndent, model, model.getLanguageId(), startLineNumber, indentConverter, this._languageConfigurationService);\n            if (indentOfFirstLine !== null) {\n                const oldIndentation = strings.getLeadingWhitespace(firstLineText);\n                const newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\n                const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                if (newSpaceCnt !== oldSpaceCnt) {\n                    const newIndent = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                    textEdits.push({\n                        range: new Range(startLineNumber, 1, startLineNumber, oldIndentation.length + 1),\n                        text: newIndent\n                    });\n                    firstLineText = newIndent + firstLineText.substr(oldIndentation.length);\n                }\n                else {\n                    const indentMetadata = getIndentMetadata(model, startLineNumber, this._languageConfigurationService);\n                    if (indentMetadata === 0 || indentMetadata === 8 /* IndentConsts.UNINDENT_MASK */) {\n                        // we paste content into a line where only contains whitespaces\n                        // after pasting, the indentation of the first line is already correct\n                        // the first line doesn't match any indentation rule\n                        // then no-op.\n                        return;\n                    }\n                }\n            }\n        }\n        const firstLineNumber = startLineNumber;\n        // ignore empty or ignored lines\n        while (startLineNumber < range.endLineNumber) {\n            if (!/\\S/.test(model.getLineContent(startLineNumber + 1))) {\n                startLineNumber++;\n                continue;\n            }\n            break;\n        }\n        if (startLineNumber !== range.endLineNumber) {\n            const virtualModel = {\n                tokenization: {\n                    getLineTokens: (lineNumber) => {\n                        return model.tokenization.getLineTokens(lineNumber);\n                    },\n                    getLanguageId: () => {\n                        return model.getLanguageId();\n                    },\n                    getLanguageIdAtPosition: (lineNumber, column) => {\n                        return model.getLanguageIdAtPosition(lineNumber, column);\n                    },\n                },\n                getLineContent: (lineNumber) => {\n                    if (lineNumber === firstLineNumber) {\n                        return firstLineText;\n                    }\n                    else {\n                        return model.getLineContent(lineNumber);\n                    }\n                }\n            };\n            const indentOfSecondLine = getGoodIndentForLine(autoIndent, virtualModel, model.getLanguageId(), startLineNumber + 1, indentConverter, this._languageConfigurationService);\n            if (indentOfSecondLine !== null) {\n                const newSpaceCntOfSecondLine = indentUtils.getSpaceCnt(indentOfSecondLine, tabSize);\n                const oldSpaceCntOfSecondLine = indentUtils.getSpaceCnt(strings.getLeadingWhitespace(model.getLineContent(startLineNumber + 1)), tabSize);\n                if (newSpaceCntOfSecondLine !== oldSpaceCntOfSecondLine) {\n                    const spaceCntOffset = newSpaceCntOfSecondLine - oldSpaceCntOfSecondLine;\n                    for (let i = startLineNumber + 1; i <= range.endLineNumber; i++) {\n                        const lineContent = model.getLineContent(i);\n                        const originalIndent = strings.getLeadingWhitespace(lineContent);\n                        const originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\n                        const newSpacesCnt = originalSpacesCnt + spaceCntOffset;\n                        const newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\n                        if (newIndent !== originalIndent) {\n                            textEdits.push({\n                                range: new Range(i, 1, i, originalIndent.length + 1),\n                                text: newIndent\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        if (textEdits.length > 0) {\n            this.editor.pushUndoStop();\n            const cmd = new AutoIndentOnPasteCommand(textEdits, this.editor.getSelection());\n            this.editor.executeCommand('autoIndentOnPaste', cmd);\n            this.editor.pushUndoStop();\n        }\n    }\n    shouldIgnoreLine(model, lineNumber) {\n        model.tokenization.forceTokenization(lineNumber);\n        const nonWhitespaceColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        if (nonWhitespaceColumn === 0) {\n            return true;\n        }\n        const tokens = model.tokenization.getLineTokens(lineNumber);\n        if (tokens.getCount() > 0) {\n            const firstNonWhitespaceTokenIndex = tokens.findTokenIndexAtOffset(nonWhitespaceColumn);\n            if (firstNonWhitespaceTokenIndex >= 0 && tokens.getStandardTokenType(firstNonWhitespaceTokenIndex) === 1 /* StandardTokenType.Comment */) {\n                return true;\n            }\n        }\n        return false;\n    }\n    dispose() {\n        this.callOnDispose.dispose();\n        this.callOnModel.dispose();\n    }\n};\nAutoIndentOnPaste.ID = 'editor.contrib.autoIndentOnPaste';\nAutoIndentOnPaste = __decorate([\n    __param(1, ILanguageConfigurationService)\n], AutoIndentOnPaste);\nfunction getIndentationEditOperations(model, builder, tabSize, tabsToSpaces) {\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n        // Model is empty\n        return;\n    }\n    let spaces = '';\n    for (let i = 0; i < tabSize; i++) {\n        spaces += ' ';\n    }\n    const spacesRegExp = new RegExp(spaces, 'gi');\n    for (let lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++) {\n        let lastIndentationColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        if (lastIndentationColumn === 0) {\n            lastIndentationColumn = model.getLineMaxColumn(lineNumber);\n        }\n        if (lastIndentationColumn === 1) {\n            continue;\n        }\n        const originalIndentationRange = new Range(lineNumber, 1, lineNumber, lastIndentationColumn);\n        const originalIndentation = model.getValueInRange(originalIndentationRange);\n        const newIndentation = (tabsToSpaces\n            ? originalIndentation.replace(/\\t/ig, spaces)\n            : originalIndentation.replace(spacesRegExp, '\\t'));\n        builder.addEditOperation(originalIndentationRange, newIndentation);\n    }\n}\nexport class IndentationToSpacesCommand {\n    constructor(selection, tabSize) {\n        this.selection = selection;\n        this.tabSize = tabSize;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        this.selectionId = builder.trackSelection(this.selection);\n        getIndentationEditOperations(model, builder, this.tabSize, true);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n}\nexport class IndentationToTabsCommand {\n    constructor(selection, tabSize) {\n        this.selection = selection;\n        this.tabSize = tabSize;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        this.selectionId = builder.trackSelection(this.selection);\n        getIndentationEditOperations(model, builder, this.tabSize, false);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n}\nregisterEditorContribution(AutoIndentOnPaste.ID, AutoIndentOnPaste, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(IndentationToSpacesAction);\nregisterEditorAction(IndentationToTabsAction);\nregisterEditorAction(IndentUsingTabs);\nregisterEditorAction(IndentUsingSpaces);\nregisterEditorAction(ChangeTabDisplaySize);\nregisterEditorAction(DetectIndentation);\nregisterEditorAction(ReindentLinesAction);\nregisterEditorAction(ReindentSelectedLinesAction);\n"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","$","dom","ContentHoverController","_Disposable","_inherits","_super","_createSuper","_editor","_instantiationService","_keybindingService","_this","_classCallCheck","call","_widget","_register","createInstance","ContentHoverWidget","_currentResult","_participants","_step","_iterator","_createForOfIteratorHelper","HoverParticipantRegistry","getAll","s","n","done","participant","value","push","err","e","f","sort","p1","p2","hoverOrdinal","_computer","ContentHoverComputer","_hoverOperation","HoverOperation","onResult","result","anchor","messages","hasLoadingMessage","_addLoadingMessage","_withResult","HoverResult","isComplete","getDomNode","equals","hide","TokenizationRegistry","onDidChange","position","clear","_setCurrentResult","_createClass","mouseEvent","_step2","anchorCandidates","_iterator2","this","suggestHoverAnchor","type","HoverRangeAnchor","range","event","posx","posy","epsilon","getOption","typicalHalfwidthCharacterWidth","detail","isAfterLines","horizontalDistanceToText","_startShowingOrUpdateHover","a","b","priority","mode","source","focus","undefined","sticky","isMouseGettingCloser","_startHoverOperationIfNecessary","canAdoptVisibleHover","filter","insistOnKeepingHoverVisible","cancel","shouldFocus","start","hoverResult","_renderMessages","isColorPickerVisible","isVisibleFromKeyboard","isVisible","node","contains","_step3","_iterator3","createLoadingMessage","loadingMessage","slice","concat","_step4","_this2","_ContentHoverControll","computeHoverRanges","showAtPosition","showAtSecondaryPosition","highlightRange","disposables","DisposableStore","statusBar","add","EditorHoverStatusBar","fragment","document","createDocumentFragment","colorPicker","context","setColorPicker","widget","onContentsChanged","_iterator4","_loop","hoverParts","msg","owner","renderHoverParts","isBeforeContent","some","m","hasContent","appendChild","hoverElement","hasChildNodes","highlightDecoration","createDecorationsCollection","set","options","_DECORATION_OPTIONS","toDisposable","showAt","ContentHoverVisibleData","above","initialMousePosX","initialMousePosY","dispose","scrollUp","scrollDown","scrollLeft","scrollRight","pageUp","pageDown","goToTop","goToBottom","escape","editor","anchorRange","startColumnBoundary","hasModel","viewModel","_getViewModel","coordinatesConverter","anchorViewRange","convertModelRangeToViewRange","anchorViewRangeStart","Position","startLineNumber","getLineMinColumn","convertViewPositionToModelPosition","column","_step5","anchorLineNumber","renderStartColumn","startColumn","forceShowAtRange","_iterator5","Range","plusRange","endLineNumber","Math","max","min","getStartPosition","Disposable","ModelDecorationOptions","register","description","className","IInstantiationService","IKeybindingService","filteredMessages","isValidForHoverAnchor","FilteredHoverResult","_HoverResult","_super2","original","_this3","preferAbove","stoleFocus","closestMouseDistance","_Disposable2","_super3","_contextKeyService","_this4","allowEditorOverflow","_hoverVisibleKey","EditorContextKeys","hoverVisible","bindTo","_hoverFocusedKey","hoverFocused","_hover","HoverWidget","_focusTracker","_horizontalScrollingBy","_visibleData","onDidLayoutChange","_layout","onDidChangeConfiguration","hasChanged","_updateFont","_setVisibleData","addContentWidget","_assertThisInitialized","onDidFocus","onDidBlur","get","_a","_b","Boolean","removeContentWidget","_get","_getPrototypeOf","prototype","ID","containerDomNode","getContextKeyValue","SuggestContext","Visible","affinity","secondaryPosition","preference","positionAffinity","widgetRect","computeDistanceFromPointToRectangle","left","top","width","height","distance","visibleData","classList","toggle","getLayoutInfo","_this$_editor$getOpti","fontSize","lineHeight","contentsDomNode","style","maxHeight","maxWidth","_this5","Array","getElementsByClassName","forEach","applyFontInfo","textContent","paddingBottom","render","layout","layoutContentWidget","scrollDimensions","scrollbar","getScrollDimensions","scrollWidth","extraBottomPadding","horizontalScrollbarSize","scrollTop","getScrollPosition","fontInfo","setScrollPosition","scrollHeight","IContextKeyService","_Disposable3","_super4","_this6","_hasContent","actionsElement","actionOptions","keybinding","lookupKeybinding","commandId","keybindingLabel","getLabel","HoverAction","element","_anchor","_shouldFocus","_source","_insistOnKeepingHoverVisible","token","AsyncIterableObject","EMPTY","lineDecorations","_getLineDecorations","merge","map","computeAsync","_step6","_iterator6","computeSync","coalesce","supportsMarkerHover","model","getModel","lineNumber","getLineCount","maxColumn","getLineMaxColumn","getLineDecorations","isWholeLine","endColumn","showIfCollapsed","pointX","pointY","x","y","dx","abs","dy","sqrt","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","then","apply","HoverProviderResult","provider","hover","ordinal","getHover","registry","promises","ordered","index","_regeneratorRuntime","mark","_callee","wrap","_context","prev","provideHover","sent","isValid","abrupt","t0","onUnexpectedExternalError","stop","executeProvider","fromPromises","hasRange","hasHtmlContent","contents","registerModelAndPositionCommand","accessor","item","toPromise","getHoverPromise","ILanguageFeaturesService","hoverProvider","CancellationToken","None","MarginHoverWidget","languageService","openerService","_renderDisposeables","_isVisible","_messages","_markdownRenderer","MarkdownRenderer","MarginHoverComputer","onDidChangeModelDecorations","_onModelDecorationsChanged","addOverlayWidget","removeOverlayWidget","markdownHoverElement","hoverContentsElement","append","renderedContents","_updateContents","_showAt","editorLayout","topForLineNumber","getTopForLineNumber","editorScrollTop","getScrollTop","clientHeight","glyphMarginLeft","glyphMarginWidth","round","_lineNumber","toHoverMessage","glyphMarginClassName","hoverMessage","glyphMarginHoverMessage","isEmptyMarkdownString","_toConsumableArray","asArray","MarkerHover","marker","markerCodeActionTrigger","include","CodeActionKind","QuickFix","triggerAction","CodeActionTriggerSource","QuickFixHover","MarkerHoverParticipant","_markerDecorationsService","_openerService","_languageFeaturesService","recentMarkerCodeActionsInfo","getMarker","uri","renderMarkerHover","markerHoverForStatusbar","MarkerSeverity","compare","severity","renderMarkerStatusbar","markerHover","markerElement","_markerHover$marker","message","code","relatedInformation","messageElement","whiteSpace","innerText","sourceAndCodeElement","codeLink","setAttribute","toString","addDisposableListener","open","allowCommands","preventDefault","stopPropagation","detailsElement","opacity","paddingLeft","isNonEmptyArray","_step2$value","resource","relatedInfoContainer","marginTop","basename","cursor","fromUserGesture","editorOptions","selection","catch","onUnexpectedError","Error","Warning","Info","addAction","label","nls","NextMarkerAction","run","MarkerController","showAtMarker","quickfixPlaceholderElement","IMarkerData","makeKey","hasCodeActions","updatePlaceholderDisposable","disposableTimeout","String","fromCharCode","codeActionsPromise","getCodeActions","actions","validActions","display","showing","quickFixCommandId","controller","CodeActionController","elementPosition","getDomNodePagePosition","showCodeActions","createCancelablePromise","cancellationToken","codeActionProvider","Progress","IMarkerDecorationsService","IOpenerService","ModesHoverController","_languageService","_toUnhook","_isMouseDown","_hoverClicked","_contentWidget","_glyphWidget","_hookEvents","_didChangeConfigurationHandler","_unhookEvents","hoverOpts","_isHoverEnabled","enabled","_isHoverSticky","onMouseDown","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onMouseMove","_onEditorMouseMove","onKeyDown","_onKeyDown","onMouseLeave","_onEditorMouseLeave","onDidChangeModel","_hideWidgets","onDidScrollChange","_onEditorScrollChanged","scrollTopChanged","scrollLeftChanged","targetEm","browserEvent","relatedTarget","containsNode","_c","_d","_e","_f","_g","_h","view","activeElement","getSelection","isCollapsed","_getOrCreateContentWidget","maybeShowAt","startShowingAt","resolvedKeyboardEvent","softDispatch","mightTriggerFocus","kind","keyCode","InlineSuggestionHintsContentWidget","dropDownVisible","startShowingAtRange","getContribution","ILanguageService","ShowOrFocusHoverAction","_EditorAction","id","comment","args","name","schema","properties","default","alias","precondition","kbOpts","kbExpr","editorTextFocus","primary","KeyChord","weight","getPosition","isHoverVisible","showContentHover","EditorAction","ShowDefinitionPreviewHoverAction","_EditorAction2","goto","GotoDefinitionAtPositionEditorContribution","startFindDefinitionFromCursor","ScrollUpHoverAction","_EditorAction3","ScrollDownHoverAction","_EditorAction4","ScrollLeftHoverAction","_EditorAction5","_super5","ScrollRightHoverAction","_EditorAction6","_super6","PageUpHoverAction","_EditorAction7","_super7","secondary","PageDownHoverAction","_EditorAction8","_super8","GoToTopHoverAction","_EditorAction9","_super9","GoToBottomHoverAction","_EditorAction10","_super10","EscapeFocusHoverAction","_EditorAction11","_super11","registerEditorContribution","registerEditorAction","MarkdownHoverParticipant","registerThemingParticipant","theme","collector","hoverBorder","getColor","editorHoverBorder","addRule","transparent","__asyncValues","o","Symbol","asyncIterator","TypeError","__values","iterator","verb","v","settle","_onResult","Emitter","_firstWaitScheduler","RunOnceScheduler","_triggerAsyncComputation","_secondWaitScheduler","_triggerSyncComputation","_loadingMessageScheduler","_triggerLoadingMessage","_state","_asyncIterable","_asyncIterableDone","_result","delay","_hoverTime","_firstWaitTime","state","fireResult","_fireResult","_setState","schedule","_secondWaitTime","createCancelableAsyncIterable","e_1","error","return","finish","t1","fire","_loadingMessageTime","other","equalsRange","lastAnchor","HoverForeignElementAnchor","ctor","MarkdownHover","_configurationService","MarkdownString","appendText","lineLength","getLineLength","languageId","getLanguageIdAtPosition","stopRenderingLineAfter","maxTokenizationLineLength","getValue","overrideIdentifier","stopRenderingMessage","beforeContentClassName","has","rng","lift","renderMarkdownHovers","hoverPart","renderer","onDidRenderAsync","IConfigurationService","InPlaceReplaceCommand","editRange","originalSelection","text","_editRange","_originalSelection","_text","builder","addTrackedEditOperation","helper","srcRange","getInverseEditOperations","isEmpty","Selection","positionColumn","InPlaceReplaceController","editorWorkerService","decorations","up","currentRequest","editorSelection","EditorState","modelURI","canNavigateValueSet","navigateValueSet","validate","diff","command","pushUndoStop","executeCommand","DECORATION","decorationRemover","timeout","IEditorWorkerService","InPlaceReplaceUp","writable","InPlaceReplaceDown","getSpaceCnt","str","tabSize","spacesCnt","charAt","generateIndent","insertSpaces","tabsCnt","floor","getReindentEditOperations","languageConfigurationService","inheritedIndent","indentationRules","getLanguageConfiguration","getLanguageId","unIndentedLinePattern","getLineContent","test","globalIndent","_model$getOptions","getOptions","indentSize","shiftIndent","indentation","count","ShiftCommand","unshiftIndent","indentEdits","currentLineText","adjustedLineContent","oldIndentation","strings","substring","decreaseIndentPattern","EditOperation","replaceMove","normalizeIndentation","idealIndentForNextLine","increaseIndentPattern","indentNextLinePattern","IndentationToSpacesAction","modelOpts","IndentationToSpacesCommand","executeCommands","updateOptions","IndentationToTabsAction","IndentationToTabsCommand","ChangeIndentationSizeAction","displaySizeOnly","opts","quickInputService","IQuickInputService","modelService","IModelService","creationOpts","getCreationOptions","isForSimpleWidget","picks","autoFocusIndex","setTimeout","pick","placeHolder","activeItem","isDisposed","pickedVal","parseInt","IndentUsingTabs","_ChangeIndentationSiz","IndentUsingSpaces","_ChangeIndentationSiz2","ChangeTabDisplaySize","_ChangeIndentationSiz3","DetectIndentation","detectIndentation","ReindentLinesAction","ILanguageConfigurationService","edits","executeEdits","ReindentSelectedLinesAction","selections","getSelections","editOperations","AutoIndentOnPasteCommand","initialSelection","_initialSelection","_edits","_selectionId","edit","addEditOperation","selectionIsSet","isArray","trackSelection","getTrackedSelection","AutoIndentOnPaste","_languageConfigurationService","callOnDispose","callOnModel","update","onDidChangeModelLanguage","onDidPaste","_ref","trigger","tokenization","isCheapToTokenize","autoIndent","_model$getOptions2","textEdits","indentConverter","shouldIgnoreLine","firstLineText","indentOfFirstLine","getGoodIndentForLine","newSpaceCnt","indentUtils","newIndent","substr","indentMetadata","getIndentMetadata","firstLineNumber","virtualModel","getLineTokens","indentOfSecondLine","newSpaceCntOfSecondLine","oldSpaceCntOfSecondLine","spaceCntOffset","lineContent","originalIndent","newSpacesCnt","cmd","forceTokenization","nonWhitespaceColumn","getLineFirstNonWhitespaceColumn","tokens","getCount","firstNonWhitespaceTokenIndex","findTokenIndexAtOffset","getStandardTokenType","getIndentationEditOperations","tabsToSpaces","spaces","spacesRegExp","RegExp","lineCount","lastIndentationColumn","originalIndentationRange","originalIndentation","getValueInRange","newIndentation","replace","selectionId"],"sourceRoot":""}