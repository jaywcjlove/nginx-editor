{"version":3,"file":"static/js/monaco-editor-vendor.6cd67fa4.d804c6cf.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/platform/dialogs/common/dialogs.js","../node_modules/monaco-editor/esm/vs/platform/dnd/browser/dnd.js","../node_modules/monaco-editor/esm/vs/platform/editor/common/editor.js","../node_modules/monaco-editor/esm/vs/platform/extensions/common/extensions.js","../node_modules/monaco-editor/esm/vs/platform/files/common/files.js","../node_modules/monaco-editor/esm/vs/platform/history/browser/contextScopedHistoryWidget.js","../node_modules/monaco-editor/esm/vs/platform/history/browser/historyWidgetKeybindingHint.js","../node_modules/monaco-editor/esm/vs/platform/instantiation/common/descriptors.js","../node_modules/monaco-editor/esm/vs/platform/instantiation/common/extensions.js","../node_modules/monaco-editor/esm/vs/platform/instantiation/common/instantiation.js","../node_modules/monaco-editor/esm/vs/platform/instantiation/common/graph.js","../node_modules/monaco-editor/esm/vs/platform/instantiation/common/instantiationService.js","../node_modules/monaco-editor/esm/vs/platform/instantiation/common/serviceCollection.js","../node_modules/monaco-editor/esm/vs/platform/jsonschemas/common/jsonContributionRegistry.js","../node_modules/monaco-editor/esm/vs/platform/keybinding/common/abstractKeybindingService.js","../node_modules/monaco-editor/esm/vs/platform/keybinding/common/keybinding.js","../node_modules/monaco-editor/esm/vs/platform/keybinding/common/keybindingResolver.js","../node_modules/monaco-editor/esm/vs/platform/keybinding/common/keybindingsRegistry.js","../node_modules/monaco-editor/esm/vs/platform/keybinding/common/resolvedKeybindingItem.js","../node_modules/monaco-editor/esm/vs/platform/keybinding/common/baseResolvedKeybinding.js","../node_modules/monaco-editor/esm/vs/platform/keybinding/common/usLayoutResolvedKeybinding.js","../node_modules/monaco-editor/esm/vs/platform/label/common/label.js","../node_modules/monaco-editor/esm/vs/platform/layout/browser/layoutService.js","../node_modules/monaco-editor/esm/vs/platform/list/browser/listService.js"],"sourcesContent":["import { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IDialogService = createDecorator('dialogService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DataTransfers } from '../../../base/browser/dnd.js';\nimport { parse } from '../../../base/common/marshalling.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { extractSelection } from '../../opener/common/opener.js';\nimport { Registry } from '../../registry/common/platform.js';\n//#region Editor / Resources DND\nexport const CodeDataTransfers = {\n    EDITORS: 'CodeEditors',\n    FILES: 'CodeFiles'\n};\nexport function extractEditorsDropData(e) {\n    var _a;\n    const editors = [];\n    if (e.dataTransfer && e.dataTransfer.types.length > 0) {\n        // Data Transfer: Code Editors\n        const rawEditorsData = e.dataTransfer.getData(CodeDataTransfers.EDITORS);\n        if (rawEditorsData) {\n            try {\n                editors.push(...parse(rawEditorsData));\n            }\n            catch (error) {\n                // Invalid transfer\n            }\n        }\n        // Data Transfer: Resources\n        else {\n            try {\n                const rawResourcesData = e.dataTransfer.getData(DataTransfers.RESOURCES);\n                editors.push(...createDraggedEditorInputFromRawResourcesData(rawResourcesData));\n            }\n            catch (error) {\n                // Invalid transfer\n            }\n        }\n        // Check for native file transfer\n        if ((_a = e.dataTransfer) === null || _a === void 0 ? void 0 : _a.files) {\n            for (let i = 0; i < e.dataTransfer.files.length; i++) {\n                const file = e.dataTransfer.files[i];\n                if (file && file.path /* Electron only */) {\n                    try {\n                        editors.push({ resource: URI.file(file.path), isExternal: true, allowWorkspaceOpen: true });\n                    }\n                    catch (error) {\n                        // Invalid URI\n                    }\n                }\n            }\n        }\n        // Check for CodeFiles transfer\n        const rawCodeFiles = e.dataTransfer.getData(CodeDataTransfers.FILES);\n        if (rawCodeFiles) {\n            try {\n                const codeFiles = JSON.parse(rawCodeFiles);\n                for (const codeFile of codeFiles) {\n                    editors.push({ resource: URI.file(codeFile), isExternal: true, allowWorkspaceOpen: true });\n                }\n            }\n            catch (error) {\n                // Invalid transfer\n            }\n        }\n        // Workbench contributions\n        const contributions = Registry.as(Extensions.DragAndDropContribution).getAll();\n        for (const contribution of contributions) {\n            const data = e.dataTransfer.getData(contribution.dataFormatKey);\n            if (data) {\n                try {\n                    editors.push(...contribution.getEditorInputs(data));\n                }\n                catch (error) {\n                    // Invalid transfer\n                }\n            }\n        }\n    }\n    return editors;\n}\nexport function createDraggedEditorInputFromRawResourcesData(rawResourcesData) {\n    const editors = [];\n    if (rawResourcesData) {\n        const resourcesRaw = JSON.parse(rawResourcesData);\n        for (const resourceRaw of resourcesRaw) {\n            if (resourceRaw.indexOf(':') > 0) { // mitigate https://github.com/microsoft/vscode/issues/124946\n                const { selection, uri } = extractSelection(URI.parse(resourceRaw));\n                editors.push({ resource: uri, options: { selection } });\n            }\n        }\n    }\n    return editors;\n}\nclass DragAndDropContributionRegistry {\n    constructor() {\n        this._contributions = new Map();\n    }\n    getAll() {\n        return this._contributions.values();\n    }\n}\nexport const Extensions = {\n    DragAndDropContribution: 'workbench.contributions.dragAndDrop'\n};\nRegistry.add(Extensions.DragAndDropContribution, new DragAndDropContributionRegistry());\n//#endregion\n","export var EditorOpenSource;\n(function (EditorOpenSource) {\n    /**\n     * Default: the editor is opening via a programmatic call\n     * to the editor service API.\n     */\n    EditorOpenSource[EditorOpenSource[\"API\"] = 0] = \"API\";\n    /**\n     * Indicates that a user action triggered the opening, e.g.\n     * via mouse or keyboard use.\n     */\n    EditorOpenSource[EditorOpenSource[\"USER\"] = 1] = \"USER\";\n})(EditorOpenSource || (EditorOpenSource = {}));\n","/**\n * **!Do not construct directly!**\n *\n * **!Only static methods because it gets serialized!**\n *\n * This represents the \"canonical\" version for an extension identifier. Extension ids\n * have to be case-insensitive (due to the marketplace), but we must ensure case\n * preservation because the extension API is already public at this time.\n *\n * For example, given an extension with the publisher `\"Hello\"` and the name `\"World\"`,\n * its canonical extension identifier is `\"Hello.World\"`. This extension could be\n * referenced in some other extension's dependencies using the string `\"hello.world\"`.\n *\n * To make matters more complicated, an extension can optionally have an UUID. When two\n * extensions have the same UUID, they are considered equal even if their identifier is different.\n */\nexport class ExtensionIdentifier {\n    constructor(value) {\n        this.value = value;\n        this._lower = value.toLowerCase();\n    }\n    /**\n     * Gives the value by which to index (for equality).\n     */\n    static toKey(id) {\n        if (typeof id === 'string') {\n            return id.toLowerCase();\n        }\n        return id._lower;\n    }\n}\n","//#endregion\n//#region Utilities\nexport var FileKind;\n(function (FileKind) {\n    FileKind[FileKind[\"FILE\"] = 0] = \"FILE\";\n    FileKind[FileKind[\"FOLDER\"] = 1] = \"FOLDER\";\n    FileKind[FileKind[\"ROOT_FOLDER\"] = 2] = \"ROOT_FOLDER\";\n})(FileKind || (FileKind = {}));\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { FindInput } from '../../../base/browser/ui/findinput/findInput.js';\nimport { ReplaceInput } from '../../../base/browser/ui/findinput/replaceInput.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { KeybindingsRegistry } from '../../keybinding/common/keybindingsRegistry.js';\nimport { localize } from '../../../nls.js';\nimport { DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\nexport const historyNavigationVisible = new RawContextKey('suggestWidgetVisible', false, localize('suggestWidgetVisible', \"Whether suggestion are visible\"));\nconst HistoryNavigationWidgetFocusContext = 'historyNavigationWidgetFocus';\nconst HistoryNavigationForwardsEnablementContext = 'historyNavigationForwardsEnabled';\nconst HistoryNavigationBackwardsEnablementContext = 'historyNavigationBackwardsEnabled';\nlet lastFocusedWidget = undefined;\nconst widgets = [];\nexport function registerAndCreateHistoryNavigationContext(contextKeyService, widget) {\n    if (widgets.includes(widget)) {\n        throw new Error('Cannot register the same widget multiple times');\n    }\n    widgets.push(widget);\n    const disposableStore = new DisposableStore();\n    const scopedContextKeyService = disposableStore.add(contextKeyService.createScoped(widget.element));\n    const historyNavigationWidgetFocus = new RawContextKey(HistoryNavigationWidgetFocusContext, false).bindTo(scopedContextKeyService);\n    const historyNavigationForwardsEnablement = new RawContextKey(HistoryNavigationForwardsEnablementContext, true).bindTo(scopedContextKeyService);\n    const historyNavigationBackwardsEnablement = new RawContextKey(HistoryNavigationBackwardsEnablementContext, true).bindTo(scopedContextKeyService);\n    const onDidFocus = () => {\n        historyNavigationWidgetFocus.set(true);\n        lastFocusedWidget = widget;\n    };\n    const onDidBlur = () => {\n        historyNavigationWidgetFocus.set(false);\n        if (lastFocusedWidget === widget) {\n            lastFocusedWidget = undefined;\n        }\n    };\n    // Check for currently being focused\n    if (widget.element === document.activeElement) {\n        onDidFocus();\n    }\n    disposableStore.add(widget.onDidFocus(() => onDidFocus()));\n    disposableStore.add(widget.onDidBlur(() => onDidBlur()));\n    disposableStore.add(toDisposable(() => {\n        widgets.splice(widgets.indexOf(widget), 1);\n        onDidBlur();\n    }));\n    return {\n        scopedContextKeyService,\n        historyNavigationForwardsEnablement,\n        historyNavigationBackwardsEnablement,\n        dispose() {\n            disposableStore.dispose();\n        }\n    };\n}\nlet ContextScopedFindInput = class ContextScopedFindInput extends FindInput {\n    constructor(container, contextViewProvider, options, contextKeyService, showFindOptions = false) {\n        super(container, contextViewProvider, showFindOptions, options);\n        this._register(registerAndCreateHistoryNavigationContext(contextKeyService, this.inputBox));\n    }\n};\nContextScopedFindInput = __decorate([\n    __param(3, IContextKeyService)\n], ContextScopedFindInput);\nexport { ContextScopedFindInput };\nlet ContextScopedReplaceInput = class ContextScopedReplaceInput extends ReplaceInput {\n    constructor(container, contextViewProvider, options, contextKeyService, showReplaceOptions = false) {\n        super(container, contextViewProvider, showReplaceOptions, options);\n        this._register(registerAndCreateHistoryNavigationContext(contextKeyService, this.inputBox));\n    }\n};\nContextScopedReplaceInput = __decorate([\n    __param(3, IContextKeyService)\n], ContextScopedReplaceInput);\nexport { ContextScopedReplaceInput };\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'history.showPrevious',\n    weight: 200 /* KeybindingWeight.WorkbenchContrib */,\n    when: ContextKeyExpr.and(ContextKeyExpr.has(HistoryNavigationWidgetFocusContext), ContextKeyExpr.equals(HistoryNavigationBackwardsEnablementContext, true), historyNavigationVisible.isEqualTo(false)),\n    primary: 16 /* KeyCode.UpArrow */,\n    secondary: [512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */],\n    handler: (accessor) => {\n        if (lastFocusedWidget) {\n            lastFocusedWidget.showPreviousValue();\n        }\n    }\n});\nKeybindingsRegistry.registerCommandAndKeybindingRule({\n    id: 'history.showNext',\n    weight: 200 /* KeybindingWeight.WorkbenchContrib */,\n    when: ContextKeyExpr.and(ContextKeyExpr.has(HistoryNavigationWidgetFocusContext), ContextKeyExpr.equals(HistoryNavigationForwardsEnablementContext, true), historyNavigationVisible.isEqualTo(false)),\n    primary: 18 /* KeyCode.DownArrow */,\n    secondary: [512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */],\n    handler: (accessor) => {\n        if (lastFocusedWidget) {\n            lastFocusedWidget.showNextValue();\n        }\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function showHistoryKeybindingHint(keybindingService) {\n    var _a, _b;\n    return ((_a = keybindingService.lookupKeybinding('history.showPrevious')) === null || _a === void 0 ? void 0 : _a.getElectronAccelerator()) === 'Up' && ((_b = keybindingService.lookupKeybinding('history.showNext')) === null || _b === void 0 ? void 0 : _b.getElectronAccelerator()) === 'Down';\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class SyncDescriptor {\n    constructor(ctor, staticArguments = [], supportsDelayedInstantiation = false) {\n        this.ctor = ctor;\n        this.staticArguments = staticArguments;\n        this.supportsDelayedInstantiation = supportsDelayedInstantiation;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { SyncDescriptor } from './descriptors.js';\nconst _registry = [];\nexport function registerSingleton(id, ctorOrDescriptor, supportsDelayedInstantiation) {\n    if (!(ctorOrDescriptor instanceof SyncDescriptor)) {\n        ctorOrDescriptor = new SyncDescriptor(ctorOrDescriptor, [], supportsDelayedInstantiation);\n    }\n    _registry.push([id, ctorOrDescriptor]);\n}\nexport function getSingletonServiceDescriptors() {\n    return _registry;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// ------ internal util\nexport var _util;\n(function (_util) {\n    _util.serviceIds = new Map();\n    _util.DI_TARGET = '$di$target';\n    _util.DI_DEPENDENCIES = '$di$dependencies';\n    function getServiceDependencies(ctor) {\n        return ctor[_util.DI_DEPENDENCIES] || [];\n    }\n    _util.getServiceDependencies = getServiceDependencies;\n})(_util || (_util = {}));\nexport const IInstantiationService = createDecorator('instantiationService');\nfunction storeServiceDependency(id, target, index) {\n    if (target[_util.DI_TARGET] === target) {\n        target[_util.DI_DEPENDENCIES].push({ id, index });\n    }\n    else {\n        target[_util.DI_DEPENDENCIES] = [{ id, index }];\n        target[_util.DI_TARGET] = target;\n    }\n}\n/**\n * The *only* valid way to create a {{ServiceIdentifier}}.\n */\nexport function createDecorator(serviceId) {\n    if (_util.serviceIds.has(serviceId)) {\n        return _util.serviceIds.get(serviceId);\n    }\n    const id = function (target, key, index) {\n        if (arguments.length !== 3) {\n            throw new Error('@IServiceName-decorator can only be used to decorate a parameter');\n        }\n        storeServiceDependency(id, target, index);\n    };\n    id.toString = () => serviceId;\n    _util.serviceIds.set(serviceId, id);\n    return id;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Node {\n    constructor(data) {\n        this.incoming = new Map();\n        this.outgoing = new Map();\n        this.data = data;\n    }\n}\nexport class Graph {\n    constructor(_hashFn) {\n        this._hashFn = _hashFn;\n        this._nodes = new Map();\n        // empty\n    }\n    roots() {\n        const ret = [];\n        for (const node of this._nodes.values()) {\n            if (node.outgoing.size === 0) {\n                ret.push(node);\n            }\n        }\n        return ret;\n    }\n    insertEdge(from, to) {\n        const fromNode = this.lookupOrInsertNode(from);\n        const toNode = this.lookupOrInsertNode(to);\n        fromNode.outgoing.set(this._hashFn(to), toNode);\n        toNode.incoming.set(this._hashFn(from), fromNode);\n    }\n    removeNode(data) {\n        const key = this._hashFn(data);\n        this._nodes.delete(key);\n        for (const node of this._nodes.values()) {\n            node.outgoing.delete(key);\n            node.incoming.delete(key);\n        }\n    }\n    lookupOrInsertNode(data) {\n        const key = this._hashFn(data);\n        let node = this._nodes.get(key);\n        if (!node) {\n            node = new Node(data);\n            this._nodes.set(key, node);\n        }\n        return node;\n    }\n    isEmpty() {\n        return this._nodes.size === 0;\n    }\n    toString() {\n        const data = [];\n        for (const [key, value] of this._nodes) {\n            data.push(`${key}, (incoming)[${[...value.incoming.keys()].join(', ')}], (outgoing)[${[...value.outgoing.keys()].join(',')}]`);\n        }\n        return data.join('\\n');\n    }\n    /**\n     * This is brute force and slow and **only** be used\n     * to trouble shoot.\n     */\n    findCycleSlow() {\n        for (const [id, node] of this._nodes) {\n            const seen = new Set([id]);\n            const res = this._findCycle(node, seen);\n            if (res) {\n                return res;\n            }\n        }\n        return undefined;\n    }\n    _findCycle(node, seen) {\n        for (const [id, outgoing] of node.outgoing) {\n            if (seen.has(id)) {\n                return [...seen, id].join(' -> ');\n            }\n            seen.add(id);\n            const value = this._findCycle(outgoing, seen);\n            if (value) {\n                return value;\n            }\n            seen.delete(id);\n        }\n        return undefined;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { IdleValue } from '../../../base/common/async.js';\nimport { illegalState } from '../../../base/common/errors.js';\nimport { SyncDescriptor } from './descriptors.js';\nimport { Graph } from './graph.js';\nimport { IInstantiationService, _util } from './instantiation.js';\nimport { ServiceCollection } from './serviceCollection.js';\n// TRACING\nconst _enableTracing = false;\nclass CyclicDependencyError extends Error {\n    constructor(graph) {\n        var _a;\n        super('cyclic dependency between services');\n        this.message = (_a = graph.findCycleSlow()) !== null && _a !== void 0 ? _a : `UNABLE to detect cycle, dumping graph: \\n${graph.toString()}`;\n    }\n}\nexport class InstantiationService {\n    constructor(services = new ServiceCollection(), strict = false, parent) {\n        this._activeInstantiations = new Set();\n        this._services = services;\n        this._strict = strict;\n        this._parent = parent;\n        this._services.set(IInstantiationService, this);\n    }\n    createChild(services) {\n        return new InstantiationService(services, this._strict, this);\n    }\n    invokeFunction(fn, ...args) {\n        const _trace = Trace.traceInvocation(fn);\n        let _done = false;\n        try {\n            const accessor = {\n                get: (id) => {\n                    if (_done) {\n                        throw illegalState('service accessor is only valid during the invocation of its target method');\n                    }\n                    const result = this._getOrCreateServiceInstance(id, _trace);\n                    if (!result) {\n                        throw new Error(`[invokeFunction] unknown service '${id}'`);\n                    }\n                    return result;\n                }\n            };\n            return fn(accessor, ...args);\n        }\n        finally {\n            _done = true;\n            _trace.stop();\n        }\n    }\n    createInstance(ctorOrDescriptor, ...rest) {\n        let _trace;\n        let result;\n        if (ctorOrDescriptor instanceof SyncDescriptor) {\n            _trace = Trace.traceCreation(ctorOrDescriptor.ctor);\n            result = this._createInstance(ctorOrDescriptor.ctor, ctorOrDescriptor.staticArguments.concat(rest), _trace);\n        }\n        else {\n            _trace = Trace.traceCreation(ctorOrDescriptor);\n            result = this._createInstance(ctorOrDescriptor, rest, _trace);\n        }\n        _trace.stop();\n        return result;\n    }\n    _createInstance(ctor, args = [], _trace) {\n        // arguments defined by service decorators\n        const serviceDependencies = _util.getServiceDependencies(ctor).sort((a, b) => a.index - b.index);\n        const serviceArgs = [];\n        for (const dependency of serviceDependencies) {\n            const service = this._getOrCreateServiceInstance(dependency.id, _trace);\n            if (!service) {\n                this._throwIfStrict(`[createInstance] ${ctor.name} depends on UNKNOWN service ${dependency.id}.`, false);\n            }\n            serviceArgs.push(service);\n        }\n        const firstServiceArgPos = serviceDependencies.length > 0 ? serviceDependencies[0].index : args.length;\n        // check for argument mismatches, adjust static args if needed\n        if (args.length !== firstServiceArgPos) {\n            console.trace(`[createInstance] First service dependency of ${ctor.name} at position ${firstServiceArgPos + 1} conflicts with ${args.length} static arguments`);\n            const delta = firstServiceArgPos - args.length;\n            if (delta > 0) {\n                args = args.concat(new Array(delta));\n            }\n            else {\n                args = args.slice(0, firstServiceArgPos);\n            }\n        }\n        // now create the instance\n        return new ctor(...[...args, ...serviceArgs]);\n    }\n    _setServiceInstance(id, instance) {\n        if (this._services.get(id) instanceof SyncDescriptor) {\n            this._services.set(id, instance);\n        }\n        else if (this._parent) {\n            this._parent._setServiceInstance(id, instance);\n        }\n        else {\n            throw new Error('illegalState - setting UNKNOWN service instance');\n        }\n    }\n    _getServiceInstanceOrDescriptor(id) {\n        const instanceOrDesc = this._services.get(id);\n        if (!instanceOrDesc && this._parent) {\n            return this._parent._getServiceInstanceOrDescriptor(id);\n        }\n        else {\n            return instanceOrDesc;\n        }\n    }\n    _getOrCreateServiceInstance(id, _trace) {\n        const thing = this._getServiceInstanceOrDescriptor(id);\n        if (thing instanceof SyncDescriptor) {\n            return this._safeCreateAndCacheServiceInstance(id, thing, _trace.branch(id, true));\n        }\n        else {\n            _trace.branch(id, false);\n            return thing;\n        }\n    }\n    _safeCreateAndCacheServiceInstance(id, desc, _trace) {\n        if (this._activeInstantiations.has(id)) {\n            throw new Error(`illegal state - RECURSIVELY instantiating service '${id}'`);\n        }\n        this._activeInstantiations.add(id);\n        try {\n            return this._createAndCacheServiceInstance(id, desc, _trace);\n        }\n        finally {\n            this._activeInstantiations.delete(id);\n        }\n    }\n    _createAndCacheServiceInstance(id, desc, _trace) {\n        const graph = new Graph(data => data.id.toString());\n        let cycleCount = 0;\n        const stack = [{ id, desc, _trace }];\n        while (stack.length) {\n            const item = stack.pop();\n            graph.lookupOrInsertNode(item);\n            // a weak but working heuristic for cycle checks\n            if (cycleCount++ > 1000) {\n                throw new CyclicDependencyError(graph);\n            }\n            // check all dependencies for existence and if they need to be created first\n            for (const dependency of _util.getServiceDependencies(item.desc.ctor)) {\n                const instanceOrDesc = this._getServiceInstanceOrDescriptor(dependency.id);\n                if (!instanceOrDesc) {\n                    this._throwIfStrict(`[createInstance] ${id} depends on ${dependency.id} which is NOT registered.`, true);\n                }\n                if (instanceOrDesc instanceof SyncDescriptor) {\n                    const d = { id: dependency.id, desc: instanceOrDesc, _trace: item._trace.branch(dependency.id, true) };\n                    graph.insertEdge(item, d);\n                    stack.push(d);\n                }\n            }\n        }\n        while (true) {\n            const roots = graph.roots();\n            // if there is no more roots but still\n            // nodes in the graph we have a cycle\n            if (roots.length === 0) {\n                if (!graph.isEmpty()) {\n                    throw new CyclicDependencyError(graph);\n                }\n                break;\n            }\n            for (const { data } of roots) {\n                // Repeat the check for this still being a service sync descriptor. That's because\n                // instantiating a dependency might have side-effect and recursively trigger instantiation\n                // so that some dependencies are now fullfilled already.\n                const instanceOrDesc = this._getServiceInstanceOrDescriptor(data.id);\n                if (instanceOrDesc instanceof SyncDescriptor) {\n                    // create instance and overwrite the service collections\n                    const instance = this._createServiceInstanceWithOwner(data.id, data.desc.ctor, data.desc.staticArguments, data.desc.supportsDelayedInstantiation, data._trace);\n                    this._setServiceInstance(data.id, instance);\n                }\n                graph.removeNode(data);\n            }\n        }\n        return this._getServiceInstanceOrDescriptor(id);\n    }\n    _createServiceInstanceWithOwner(id, ctor, args = [], supportsDelayedInstantiation, _trace) {\n        if (this._services.get(id) instanceof SyncDescriptor) {\n            return this._createServiceInstance(ctor, args, supportsDelayedInstantiation, _trace);\n        }\n        else if (this._parent) {\n            return this._parent._createServiceInstanceWithOwner(id, ctor, args, supportsDelayedInstantiation, _trace);\n        }\n        else {\n            throw new Error(`illegalState - creating UNKNOWN service instance ${ctor.name}`);\n        }\n    }\n    _createServiceInstance(ctor, args = [], _supportsDelayedInstantiation, _trace) {\n        if (!_supportsDelayedInstantiation) {\n            // eager instantiation\n            return this._createInstance(ctor, args, _trace);\n        }\n        else {\n            // Return a proxy object that's backed by an idle value. That\n            // strategy is to instantiate services in our idle time or when actually\n            // needed but not when injected into a consumer\n            const idle = new IdleValue(() => this._createInstance(ctor, args, _trace));\n            return new Proxy(Object.create(null), {\n                get(target, key) {\n                    if (key in target) {\n                        return target[key];\n                    }\n                    const obj = idle.value;\n                    let prop = obj[key];\n                    if (typeof prop !== 'function') {\n                        return prop;\n                    }\n                    prop = prop.bind(obj);\n                    target[key] = prop;\n                    return prop;\n                },\n                set(_target, p, value) {\n                    idle.value[p] = value;\n                    return true;\n                }\n            });\n        }\n    }\n    _throwIfStrict(msg, printWarning) {\n        if (printWarning) {\n            console.warn(msg);\n        }\n        if (this._strict) {\n            throw new Error(msg);\n        }\n    }\n}\nexport class Trace {\n    constructor(type, name) {\n        this.type = type;\n        this.name = name;\n        this._start = Date.now();\n        this._dep = [];\n    }\n    static traceInvocation(ctor) {\n        return !_enableTracing ? Trace._None : new Trace(1 /* TraceType.Invocation */, ctor.name || ctor.toString().substring(0, 42).replace(/\\n/g, ''));\n    }\n    static traceCreation(ctor) {\n        return !_enableTracing ? Trace._None : new Trace(0 /* TraceType.Creation */, ctor.name);\n    }\n    branch(id, first) {\n        const child = new Trace(2 /* TraceType.Branch */, id.toString());\n        this._dep.push([id, first, child]);\n        return child;\n    }\n    stop() {\n        const dur = Date.now() - this._start;\n        Trace._totals += dur;\n        let causedCreation = false;\n        function printChild(n, trace) {\n            const res = [];\n            const prefix = new Array(n + 1).join('\\t');\n            for (const [id, first, child] of trace._dep) {\n                if (first && child) {\n                    causedCreation = true;\n                    res.push(`${prefix}CREATES -> ${id}`);\n                    const nested = printChild(n + 1, child);\n                    if (nested) {\n                        res.push(nested);\n                    }\n                }\n                else {\n                    res.push(`${prefix}uses -> ${id}`);\n                }\n            }\n            return res.join('\\n');\n        }\n        const lines = [\n            `${this.type === 0 /* TraceType.Creation */ ? 'CREATE' : 'CALL'} ${this.name}`,\n            `${printChild(1, this)}`,\n            `DONE, took ${dur.toFixed(2)}ms (grand total ${Trace._totals.toFixed(2)}ms)`\n        ];\n        if (dur > 2 || causedCreation) {\n            console.log(lines.join('\\n'));\n        }\n    }\n}\nTrace._None = new class extends Trace {\n    constructor() { super(-1, null); }\n    stop() { }\n    branch() { return this; }\n};\nTrace._totals = 0;\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class ServiceCollection {\n    constructor(...entries) {\n        this._entries = new Map();\n        for (const [id, service] of entries) {\n            this.set(id, service);\n        }\n    }\n    set(id, instanceOrDescriptor) {\n        const result = this._entries.get(id);\n        this._entries.set(id, instanceOrDescriptor);\n        return result;\n    }\n    get(id) {\n        return this._entries.get(id);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport * as platform from '../../registry/common/platform.js';\nexport const Extensions = {\n    JSONContribution: 'base.contributions.json'\n};\nfunction normalizeId(id) {\n    if (id.length > 0 && id.charAt(id.length - 1) === '#') {\n        return id.substring(0, id.length - 1);\n    }\n    return id;\n}\nclass JSONContributionRegistry {\n    constructor() {\n        this._onDidChangeSchema = new Emitter();\n        this.schemasById = {};\n    }\n    registerSchema(uri, unresolvedSchemaContent) {\n        this.schemasById[normalizeId(uri)] = unresolvedSchemaContent;\n        this._onDidChangeSchema.fire(uri);\n    }\n    notifySchemaChanged(uri) {\n        this._onDidChangeSchema.fire(uri);\n    }\n}\nconst jsonContributionRegistry = new JSONContributionRegistry();\nplatform.Registry.add(Extensions.JSONContribution, jsonContributionRegistry);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { IntervalTimer, TimeoutTimer } from '../../../base/common/async.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as nls from '../../../nls.js';\nconst HIGH_FREQ_COMMANDS = /^(cursor|delete)/;\nexport class AbstractKeybindingService extends Disposable {\n    constructor(_contextKeyService, _commandService, _telemetryService, _notificationService, _logService) {\n        super();\n        this._contextKeyService = _contextKeyService;\n        this._commandService = _commandService;\n        this._telemetryService = _telemetryService;\n        this._notificationService = _notificationService;\n        this._logService = _logService;\n        this._onDidUpdateKeybindings = this._register(new Emitter());\n        this._currentChord = null;\n        this._currentChordChecker = new IntervalTimer();\n        this._currentChordStatusMessage = null;\n        this._ignoreSingleModifiers = KeybindingModifierSet.EMPTY;\n        this._currentSingleModifier = null;\n        this._currentSingleModifierClearTimeout = new TimeoutTimer();\n        this._logging = false;\n    }\n    get onDidUpdateKeybindings() {\n        return this._onDidUpdateKeybindings ? this._onDidUpdateKeybindings.event : Event.None; // Sinon stubbing walks properties on prototype\n    }\n    dispose() {\n        super.dispose();\n    }\n    _log(str) {\n        if (this._logging) {\n            this._logService.info(`[KeybindingService]: ${str}`);\n        }\n    }\n    getKeybindings() {\n        return this._getResolver().getKeybindings();\n    }\n    lookupKeybinding(commandId, context) {\n        const result = this._getResolver().lookupPrimaryKeybinding(commandId, context || this._contextKeyService);\n        if (!result) {\n            return undefined;\n        }\n        return result.resolvedKeybinding;\n    }\n    dispatchEvent(e, target) {\n        return this._dispatch(e, target);\n    }\n    softDispatch(e, target) {\n        this._log(`/ Soft dispatching keyboard event`);\n        const keybinding = this.resolveKeyboardEvent(e);\n        if (keybinding.isChord()) {\n            console.warn('Unexpected keyboard event mapped to a chord');\n            return null;\n        }\n        const [firstPart,] = keybinding.getDispatchParts();\n        if (firstPart === null) {\n            // cannot be dispatched, probably only modifier keys\n            this._log(`\\\\ Keyboard event cannot be dispatched`);\n            return null;\n        }\n        const contextValue = this._contextKeyService.getContext(target);\n        const currentChord = this._currentChord ? this._currentChord.keypress : null;\n        return this._getResolver().resolve(contextValue, currentChord, firstPart);\n    }\n    _enterChordMode(firstPart, keypressLabel) {\n        this._currentChord = {\n            keypress: firstPart,\n            label: keypressLabel\n        };\n        this._currentChordStatusMessage = this._notificationService.status(nls.localize('first.chord', \"({0}) was pressed. Waiting for second key of chord...\", keypressLabel));\n        const chordEnterTime = Date.now();\n        this._currentChordChecker.cancelAndSet(() => {\n            if (!this._documentHasFocus()) {\n                // Focus has been lost => leave chord mode\n                this._leaveChordMode();\n                return;\n            }\n            if (Date.now() - chordEnterTime > 5000) {\n                // 5 seconds elapsed => leave chord mode\n                this._leaveChordMode();\n            }\n        }, 500);\n    }\n    _leaveChordMode() {\n        if (this._currentChordStatusMessage) {\n            this._currentChordStatusMessage.dispose();\n            this._currentChordStatusMessage = null;\n        }\n        this._currentChordChecker.cancel();\n        this._currentChord = null;\n    }\n    _dispatch(e, target) {\n        return this._doDispatch(this.resolveKeyboardEvent(e), target, /*isSingleModiferChord*/ false);\n    }\n    _singleModifierDispatch(e, target) {\n        const keybinding = this.resolveKeyboardEvent(e);\n        const [singleModifier,] = keybinding.getSingleModifierDispatchParts();\n        if (singleModifier) {\n            if (this._ignoreSingleModifiers.has(singleModifier)) {\n                this._log(`+ Ignoring single modifier ${singleModifier} due to it being pressed together with other keys.`);\n                this._ignoreSingleModifiers = KeybindingModifierSet.EMPTY;\n                this._currentSingleModifierClearTimeout.cancel();\n                this._currentSingleModifier = null;\n                return false;\n            }\n            this._ignoreSingleModifiers = KeybindingModifierSet.EMPTY;\n            if (this._currentSingleModifier === null) {\n                // we have a valid `singleModifier`, store it for the next keyup, but clear it in 300ms\n                this._log(`+ Storing single modifier for possible chord ${singleModifier}.`);\n                this._currentSingleModifier = singleModifier;\n                this._currentSingleModifierClearTimeout.cancelAndSet(() => {\n                    this._log(`+ Clearing single modifier due to 300ms elapsed.`);\n                    this._currentSingleModifier = null;\n                }, 300);\n                return false;\n            }\n            if (singleModifier === this._currentSingleModifier) {\n                // bingo!\n                this._log(`/ Dispatching single modifier chord ${singleModifier} ${singleModifier}`);\n                this._currentSingleModifierClearTimeout.cancel();\n                this._currentSingleModifier = null;\n                return this._doDispatch(keybinding, target, /*isSingleModiferChord*/ true);\n            }\n            this._log(`+ Clearing single modifier due to modifier mismatch: ${this._currentSingleModifier} ${singleModifier}`);\n            this._currentSingleModifierClearTimeout.cancel();\n            this._currentSingleModifier = null;\n            return false;\n        }\n        // When pressing a modifier and holding it pressed with any other modifier or key combination,\n        // the pressed modifiers should no longer be considered for single modifier dispatch.\n        const [firstPart,] = keybinding.getParts();\n        this._ignoreSingleModifiers = new KeybindingModifierSet(firstPart);\n        if (this._currentSingleModifier !== null) {\n            this._log(`+ Clearing single modifier due to other key up.`);\n        }\n        this._currentSingleModifierClearTimeout.cancel();\n        this._currentSingleModifier = null;\n        return false;\n    }\n    _doDispatch(keybinding, target, isSingleModiferChord = false) {\n        let shouldPreventDefault = false;\n        if (keybinding.isChord()) {\n            console.warn('Unexpected keyboard event mapped to a chord');\n            return false;\n        }\n        let firstPart = null; // the first keybinding i.e. Ctrl+K\n        let currentChord = null; // the \"second\" keybinding i.e. Ctrl+K \"Ctrl+D\"\n        if (isSingleModiferChord) {\n            const [dispatchKeyname,] = keybinding.getSingleModifierDispatchParts();\n            firstPart = dispatchKeyname;\n            currentChord = dispatchKeyname;\n        }\n        else {\n            [firstPart,] = keybinding.getDispatchParts();\n            currentChord = this._currentChord ? this._currentChord.keypress : null;\n        }\n        if (firstPart === null) {\n            this._log(`\\\\ Keyboard event cannot be dispatched in keydown phase.`);\n            // cannot be dispatched, probably only modifier keys\n            return shouldPreventDefault;\n        }\n        const contextValue = this._contextKeyService.getContext(target);\n        const keypressLabel = keybinding.getLabel();\n        const resolveResult = this._getResolver().resolve(contextValue, currentChord, firstPart);\n        this._logService.trace('KeybindingService#dispatch', keypressLabel, resolveResult === null || resolveResult === void 0 ? void 0 : resolveResult.commandId);\n        if (resolveResult && resolveResult.enterChord) {\n            shouldPreventDefault = true;\n            this._enterChordMode(firstPart, keypressLabel);\n            this._log(`+ Entering chord mode...`);\n            return shouldPreventDefault;\n        }\n        if (this._currentChord) {\n            if (!resolveResult || !resolveResult.commandId) {\n                this._log(`+ Leaving chord mode: Nothing bound to \"${this._currentChord.label} ${keypressLabel}\".`);\n                this._notificationService.status(nls.localize('missing.chord', \"The key combination ({0}, {1}) is not a command.\", this._currentChord.label, keypressLabel), { hideAfter: 10 * 1000 /* 10s */ });\n                shouldPreventDefault = true;\n            }\n        }\n        this._leaveChordMode();\n        if (resolveResult && resolveResult.commandId) {\n            if (!resolveResult.bubble) {\n                shouldPreventDefault = true;\n            }\n            this._log(`+ Invoking command ${resolveResult.commandId}.`);\n            if (typeof resolveResult.commandArgs === 'undefined') {\n                this._commandService.executeCommand(resolveResult.commandId).then(undefined, err => this._notificationService.warn(err));\n            }\n            else {\n                this._commandService.executeCommand(resolveResult.commandId, resolveResult.commandArgs).then(undefined, err => this._notificationService.warn(err));\n            }\n            if (!HIGH_FREQ_COMMANDS.test(resolveResult.commandId)) {\n                this._telemetryService.publicLog2('workbenchActionExecuted', { id: resolveResult.commandId, from: 'keybinding' });\n            }\n        }\n        return shouldPreventDefault;\n    }\n    mightProducePrintableCharacter(event) {\n        if (event.ctrlKey || event.metaKey) {\n            // ignore ctrl/cmd-combination but not shift/alt-combinatios\n            return false;\n        }\n        // weak check for certain ranges. this is properly implemented in a subclass\n        // with access to the KeyboardMapperFactory.\n        if ((event.keyCode >= 31 /* KeyCode.KeyA */ && event.keyCode <= 56 /* KeyCode.KeyZ */)\n            || (event.keyCode >= 21 /* KeyCode.Digit0 */ && event.keyCode <= 30 /* KeyCode.Digit9 */)) {\n            return true;\n        }\n        return false;\n    }\n}\nclass KeybindingModifierSet {\n    constructor(source) {\n        this._ctrlKey = source ? source.ctrlKey : false;\n        this._shiftKey = source ? source.shiftKey : false;\n        this._altKey = source ? source.altKey : false;\n        this._metaKey = source ? source.metaKey : false;\n    }\n    has(modifier) {\n        switch (modifier) {\n            case 'ctrl': return this._ctrlKey;\n            case 'shift': return this._shiftKey;\n            case 'alt': return this._altKey;\n            case 'meta': return this._metaKey;\n        }\n    }\n}\nKeybindingModifierSet.EMPTY = new KeybindingModifierSet(null);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IKeybindingService = createDecorator('keybindingService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { implies, expressionsAreEqualWithConstantSubstitution } from '../../contextkey/common/contextkey.js';\nexport class KeybindingResolver {\n    constructor(defaultKeybindings, overrides, log) {\n        this._log = log;\n        this._defaultKeybindings = defaultKeybindings;\n        this._defaultBoundCommands = new Map();\n        for (const defaultKeybinding of defaultKeybindings) {\n            const command = defaultKeybinding.command;\n            if (command && command.charAt(0) !== '-') {\n                this._defaultBoundCommands.set(command, true);\n            }\n        }\n        this._map = new Map();\n        this._lookupMap = new Map();\n        this._keybindings = KeybindingResolver.handleRemovals([].concat(defaultKeybindings).concat(overrides));\n        for (let i = 0, len = this._keybindings.length; i < len; i++) {\n            const k = this._keybindings[i];\n            if (k.keypressParts.length === 0) {\n                // unbound\n                continue;\n            }\n            if (k.when && k.when.type === 0 /* ContextKeyExprType.False */) {\n                // when condition is false\n                continue;\n            }\n            // TODO@chords\n            this._addKeyPress(k.keypressParts[0], k);\n        }\n    }\n    static _isTargetedForRemoval(defaultKb, keypressFirstPart, keypressChordPart, when) {\n        // TODO@chords\n        if (keypressFirstPart && defaultKb.keypressParts[0] !== keypressFirstPart) {\n            return false;\n        }\n        // TODO@chords\n        if (keypressChordPart && defaultKb.keypressParts[1] !== keypressChordPart) {\n            return false;\n        }\n        if (when) {\n            if (!defaultKb.when) {\n                return false;\n            }\n            if (!expressionsAreEqualWithConstantSubstitution(when, defaultKb.when)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    /**\n     * Looks for rules containing \"-commandId\" and removes them.\n     */\n    static handleRemovals(rules) {\n        // Do a first pass and construct a hash-map for removals\n        const removals = new Map();\n        for (let i = 0, len = rules.length; i < len; i++) {\n            const rule = rules[i];\n            if (rule.command && rule.command.charAt(0) === '-') {\n                const command = rule.command.substring(1);\n                if (!removals.has(command)) {\n                    removals.set(command, [rule]);\n                }\n                else {\n                    removals.get(command).push(rule);\n                }\n            }\n        }\n        if (removals.size === 0) {\n            // There are no removals\n            return rules;\n        }\n        // Do a second pass and keep only non-removed keybindings\n        const result = [];\n        for (let i = 0, len = rules.length; i < len; i++) {\n            const rule = rules[i];\n            if (!rule.command || rule.command.length === 0) {\n                result.push(rule);\n                continue;\n            }\n            if (rule.command.charAt(0) === '-') {\n                continue;\n            }\n            const commandRemovals = removals.get(rule.command);\n            if (!commandRemovals || !rule.isDefault) {\n                result.push(rule);\n                continue;\n            }\n            let isRemoved = false;\n            for (const commandRemoval of commandRemovals) {\n                // TODO@chords\n                const keypressFirstPart = commandRemoval.keypressParts[0];\n                const keypressChordPart = commandRemoval.keypressParts[1];\n                const when = commandRemoval.when;\n                if (this._isTargetedForRemoval(rule, keypressFirstPart, keypressChordPart, when)) {\n                    isRemoved = true;\n                    break;\n                }\n            }\n            if (!isRemoved) {\n                result.push(rule);\n                continue;\n            }\n        }\n        return result;\n    }\n    _addKeyPress(keypress, item) {\n        const conflicts = this._map.get(keypress);\n        if (typeof conflicts === 'undefined') {\n            // There is no conflict so far\n            this._map.set(keypress, [item]);\n            this._addToLookupMap(item);\n            return;\n        }\n        for (let i = conflicts.length - 1; i >= 0; i--) {\n            const conflict = conflicts[i];\n            if (conflict.command === item.command) {\n                continue;\n            }\n            const conflictIsChord = (conflict.keypressParts.length > 1);\n            const itemIsChord = (item.keypressParts.length > 1);\n            // TODO@chords\n            if (conflictIsChord && itemIsChord && conflict.keypressParts[1] !== item.keypressParts[1]) {\n                // The conflict only shares the chord start with this command\n                continue;\n            }\n            if (KeybindingResolver.whenIsEntirelyIncluded(conflict.when, item.when)) {\n                // `item` completely overwrites `conflict`\n                // Remove conflict from the lookupMap\n                this._removeFromLookupMap(conflict);\n            }\n        }\n        conflicts.push(item);\n        this._addToLookupMap(item);\n    }\n    _addToLookupMap(item) {\n        if (!item.command) {\n            return;\n        }\n        let arr = this._lookupMap.get(item.command);\n        if (typeof arr === 'undefined') {\n            arr = [item];\n            this._lookupMap.set(item.command, arr);\n        }\n        else {\n            arr.push(item);\n        }\n    }\n    _removeFromLookupMap(item) {\n        if (!item.command) {\n            return;\n        }\n        const arr = this._lookupMap.get(item.command);\n        if (typeof arr === 'undefined') {\n            return;\n        }\n        for (let i = 0, len = arr.length; i < len; i++) {\n            if (arr[i] === item) {\n                arr.splice(i, 1);\n                return;\n            }\n        }\n    }\n    /**\n     * Returns true if it is provable `a` implies `b`.\n     */\n    static whenIsEntirelyIncluded(a, b) {\n        if (!b || b.type === 1 /* ContextKeyExprType.True */) {\n            return true;\n        }\n        if (!a || a.type === 1 /* ContextKeyExprType.True */) {\n            return false;\n        }\n        return implies(a, b);\n    }\n    getKeybindings() {\n        return this._keybindings;\n    }\n    lookupPrimaryKeybinding(commandId, context) {\n        const items = this._lookupMap.get(commandId);\n        if (typeof items === 'undefined' || items.length === 0) {\n            return null;\n        }\n        if (items.length === 1) {\n            return items[0];\n        }\n        for (let i = items.length - 1; i >= 0; i--) {\n            const item = items[i];\n            if (context.contextMatchesRules(item.when)) {\n                return item;\n            }\n        }\n        return items[items.length - 1];\n    }\n    resolve(context, currentChord, keypress) {\n        this._log(`| Resolving ${keypress}${currentChord ? ` chorded from ${currentChord}` : ``}`);\n        let lookupMap = null;\n        if (currentChord !== null) {\n            // Fetch all chord bindings for `currentChord`\n            const candidates = this._map.get(currentChord);\n            if (typeof candidates === 'undefined') {\n                // No chords starting with `currentChord`\n                this._log(`\\\\ No keybinding entries.`);\n                return null;\n            }\n            lookupMap = [];\n            for (let i = 0, len = candidates.length; i < len; i++) {\n                const candidate = candidates[i];\n                // TODO@chords\n                if (candidate.keypressParts[1] === keypress) {\n                    lookupMap.push(candidate);\n                }\n            }\n        }\n        else {\n            const candidates = this._map.get(keypress);\n            if (typeof candidates === 'undefined') {\n                // No bindings with `keypress`\n                this._log(`\\\\ No keybinding entries.`);\n                return null;\n            }\n            lookupMap = candidates;\n        }\n        const result = this._findCommand(context, lookupMap);\n        if (!result) {\n            this._log(`\\\\ From ${lookupMap.length} keybinding entries, no when clauses matched the context.`);\n            return null;\n        }\n        // TODO@chords\n        if (currentChord === null && result.keypressParts.length > 1 && result.keypressParts[1] !== null) {\n            this._log(`\\\\ From ${lookupMap.length} keybinding entries, matched chord, when: ${printWhenExplanation(result.when)}, source: ${printSourceExplanation(result)}.`);\n            return {\n                enterChord: true,\n                leaveChord: false,\n                commandId: null,\n                commandArgs: null,\n                bubble: false\n            };\n        }\n        this._log(`\\\\ From ${lookupMap.length} keybinding entries, matched ${result.command}, when: ${printWhenExplanation(result.when)}, source: ${printSourceExplanation(result)}.`);\n        return {\n            enterChord: false,\n            leaveChord: result.keypressParts.length > 1,\n            commandId: result.command,\n            commandArgs: result.commandArgs,\n            bubble: result.bubble\n        };\n    }\n    _findCommand(context, matches) {\n        for (let i = matches.length - 1; i >= 0; i--) {\n            const k = matches[i];\n            if (!KeybindingResolver._contextMatchesRules(context, k.when)) {\n                continue;\n            }\n            return k;\n        }\n        return null;\n    }\n    static _contextMatchesRules(context, rules) {\n        if (!rules) {\n            return true;\n        }\n        return rules.evaluate(context);\n    }\n}\nfunction printWhenExplanation(when) {\n    if (!when) {\n        return `no when condition`;\n    }\n    return `${when.serialize()}`;\n}\nfunction printSourceExplanation(kb) {\n    return (kb.extensionId\n        ? (kb.isBuiltinExtension ? `built-in extension ${kb.extensionId}` : `user extension ${kb.extensionId}`)\n        : (kb.isDefault ? `built-in` : `user`));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createKeybinding } from '../../../base/common/keybindings.js';\nimport { OS } from '../../../base/common/platform.js';\nimport { CommandsRegistry } from '../../commands/common/commands.js';\nimport { Registry } from '../../registry/common/platform.js';\nclass KeybindingsRegistryImpl {\n    constructor() {\n        this._coreKeybindings = [];\n        this._extensionKeybindings = [];\n        this._cachedMergedKeybindings = null;\n    }\n    /**\n     * Take current platform into account and reduce to primary & secondary.\n     */\n    static bindToCurrentPlatform(kb) {\n        if (OS === 1 /* OperatingSystem.Windows */) {\n            if (kb && kb.win) {\n                return kb.win;\n            }\n        }\n        else if (OS === 2 /* OperatingSystem.Macintosh */) {\n            if (kb && kb.mac) {\n                return kb.mac;\n            }\n        }\n        else {\n            if (kb && kb.linux) {\n                return kb.linux;\n            }\n        }\n        return kb;\n    }\n    registerKeybindingRule(rule) {\n        const actualKb = KeybindingsRegistryImpl.bindToCurrentPlatform(rule);\n        if (actualKb && actualKb.primary) {\n            const kk = createKeybinding(actualKb.primary, OS);\n            if (kk) {\n                this._registerDefaultKeybinding(kk, rule.id, rule.args, rule.weight, 0, rule.when);\n            }\n        }\n        if (actualKb && Array.isArray(actualKb.secondary)) {\n            for (let i = 0, len = actualKb.secondary.length; i < len; i++) {\n                const k = actualKb.secondary[i];\n                const kk = createKeybinding(k, OS);\n                if (kk) {\n                    this._registerDefaultKeybinding(kk, rule.id, rule.args, rule.weight, -i - 1, rule.when);\n                }\n            }\n        }\n    }\n    registerCommandAndKeybindingRule(desc) {\n        this.registerKeybindingRule(desc);\n        CommandsRegistry.registerCommand(desc);\n    }\n    static _mightProduceChar(keyCode) {\n        if (keyCode >= 21 /* KeyCode.Digit0 */ && keyCode <= 30 /* KeyCode.Digit9 */) {\n            return true;\n        }\n        if (keyCode >= 31 /* KeyCode.KeyA */ && keyCode <= 56 /* KeyCode.KeyZ */) {\n            return true;\n        }\n        return (keyCode === 80 /* KeyCode.Semicolon */\n            || keyCode === 81 /* KeyCode.Equal */\n            || keyCode === 82 /* KeyCode.Comma */\n            || keyCode === 83 /* KeyCode.Minus */\n            || keyCode === 84 /* KeyCode.Period */\n            || keyCode === 85 /* KeyCode.Slash */\n            || keyCode === 86 /* KeyCode.Backquote */\n            || keyCode === 110 /* KeyCode.ABNT_C1 */\n            || keyCode === 111 /* KeyCode.ABNT_C2 */\n            || keyCode === 87 /* KeyCode.BracketLeft */\n            || keyCode === 88 /* KeyCode.Backslash */\n            || keyCode === 89 /* KeyCode.BracketRight */\n            || keyCode === 90 /* KeyCode.Quote */\n            || keyCode === 91 /* KeyCode.OEM_8 */\n            || keyCode === 92 /* KeyCode.IntlBackslash */);\n    }\n    _assertNoCtrlAlt(keybinding, commandId) {\n        if (keybinding.ctrlKey && keybinding.altKey && !keybinding.metaKey) {\n            if (KeybindingsRegistryImpl._mightProduceChar(keybinding.keyCode)) {\n                console.warn('Ctrl+Alt+ keybindings should not be used by default under Windows. Offender: ', keybinding, ' for ', commandId);\n            }\n        }\n    }\n    _registerDefaultKeybinding(keybinding, commandId, commandArgs, weight1, weight2, when) {\n        if (OS === 1 /* OperatingSystem.Windows */) {\n            this._assertNoCtrlAlt(keybinding.parts[0], commandId);\n        }\n        this._coreKeybindings.push({\n            keybinding: keybinding.parts,\n            command: commandId,\n            commandArgs: commandArgs,\n            when: when,\n            weight1: weight1,\n            weight2: weight2,\n            extensionId: null,\n            isBuiltinExtension: false\n        });\n        this._cachedMergedKeybindings = null;\n    }\n    getDefaultKeybindings() {\n        if (!this._cachedMergedKeybindings) {\n            this._cachedMergedKeybindings = [].concat(this._coreKeybindings).concat(this._extensionKeybindings);\n            this._cachedMergedKeybindings.sort(sorter);\n        }\n        return this._cachedMergedKeybindings.slice(0);\n    }\n}\nexport const KeybindingsRegistry = new KeybindingsRegistryImpl();\n// Define extension point ids\nexport const Extensions = {\n    EditorModes: 'platform.keybindingsRegistry'\n};\nRegistry.add(Extensions.EditorModes, KeybindingsRegistry);\nfunction sorter(a, b) {\n    if (a.weight1 !== b.weight1) {\n        return a.weight1 - b.weight1;\n    }\n    if (a.command < b.command) {\n        return -1;\n    }\n    if (a.command > b.command) {\n        return 1;\n    }\n    return a.weight2 - b.weight2;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class ResolvedKeybindingItem {\n    constructor(resolvedKeybinding, command, commandArgs, when, isDefault, extensionId, isBuiltinExtension) {\n        this._resolvedKeybindingItemBrand = undefined;\n        this.resolvedKeybinding = resolvedKeybinding;\n        this.keypressParts = resolvedKeybinding ? removeElementsAfterNulls(resolvedKeybinding.getDispatchParts()) : [];\n        if (resolvedKeybinding && this.keypressParts.length === 0) {\n            // handle possible single modifier chord keybindings\n            this.keypressParts = removeElementsAfterNulls(resolvedKeybinding.getSingleModifierDispatchParts());\n        }\n        this.bubble = (command ? command.charCodeAt(0) === 94 /* CharCode.Caret */ : false);\n        this.command = this.bubble ? command.substr(1) : command;\n        this.commandArgs = commandArgs;\n        this.when = when;\n        this.isDefault = isDefault;\n        this.extensionId = extensionId;\n        this.isBuiltinExtension = isBuiltinExtension;\n    }\n}\nexport function removeElementsAfterNulls(arr) {\n    const result = [];\n    for (let i = 0, len = arr.length; i < len; i++) {\n        const element = arr[i];\n        if (!element) {\n            // stop processing at first encountered null\n            return result;\n        }\n        result.push(element);\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from '../../../base/common/errors.js';\nimport { AriaLabelProvider, ElectronAcceleratorLabelProvider, UILabelProvider } from '../../../base/common/keybindingLabels.js';\nimport { ResolvedKeybinding, ResolvedKeybindingPart } from '../../../base/common/keybindings.js';\nexport class BaseResolvedKeybinding extends ResolvedKeybinding {\n    constructor(os, parts) {\n        super();\n        if (parts.length === 0) {\n            throw illegalArgument(`parts`);\n        }\n        this._os = os;\n        this._parts = parts;\n    }\n    getLabel() {\n        return UILabelProvider.toLabel(this._os, this._parts, (keybinding) => this._getLabel(keybinding));\n    }\n    getAriaLabel() {\n        return AriaLabelProvider.toLabel(this._os, this._parts, (keybinding) => this._getAriaLabel(keybinding));\n    }\n    getElectronAccelerator() {\n        if (this._parts.length > 1) {\n            // [Electron Accelerators] Electron cannot handle chords\n            return null;\n        }\n        if (this._parts[0].isDuplicateModifierCase()) {\n            // [Electron Accelerators] Electron cannot handle modifier only keybindings\n            // e.g. \"shift shift\"\n            return null;\n        }\n        return ElectronAcceleratorLabelProvider.toLabel(this._os, this._parts, (keybinding) => this._getElectronAccelerator(keybinding));\n    }\n    isChord() {\n        return (this._parts.length > 1);\n    }\n    getParts() {\n        return this._parts.map((keybinding) => this._getPart(keybinding));\n    }\n    _getPart(keybinding) {\n        return new ResolvedKeybindingPart(keybinding.ctrlKey, keybinding.shiftKey, keybinding.altKey, keybinding.metaKey, this._getLabel(keybinding), this._getAriaLabel(keybinding));\n    }\n    getDispatchParts() {\n        return this._parts.map((keybinding) => this._getDispatchPart(keybinding));\n    }\n    getSingleModifierDispatchParts() {\n        return this._parts.map((keybinding) => this._getSingleModifierDispatchPart(keybinding));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { KeyCodeUtils, IMMUTABLE_CODE_TO_KEY_CODE } from '../../../base/common/keyCodes.js';\nimport { ChordKeybinding, SimpleKeybinding } from '../../../base/common/keybindings.js';\nimport { BaseResolvedKeybinding } from './baseResolvedKeybinding.js';\nimport { removeElementsAfterNulls } from './resolvedKeybindingItem.js';\n/**\n * Do not instantiate. Use KeybindingService to get a ResolvedKeybinding seeded with information about the current kb layout.\n */\nexport class USLayoutResolvedKeybinding extends BaseResolvedKeybinding {\n    constructor(actual, os) {\n        super(os, actual.parts);\n    }\n    _keyCodeToUILabel(keyCode) {\n        if (this._os === 2 /* OperatingSystem.Macintosh */) {\n            switch (keyCode) {\n                case 15 /* KeyCode.LeftArrow */:\n                    return '←';\n                case 16 /* KeyCode.UpArrow */:\n                    return '↑';\n                case 17 /* KeyCode.RightArrow */:\n                    return '→';\n                case 18 /* KeyCode.DownArrow */:\n                    return '↓';\n            }\n        }\n        return KeyCodeUtils.toString(keyCode);\n    }\n    _getLabel(keybinding) {\n        if (keybinding.isDuplicateModifierCase()) {\n            return '';\n        }\n        return this._keyCodeToUILabel(keybinding.keyCode);\n    }\n    _getAriaLabel(keybinding) {\n        if (keybinding.isDuplicateModifierCase()) {\n            return '';\n        }\n        return KeyCodeUtils.toString(keybinding.keyCode);\n    }\n    _getElectronAccelerator(keybinding) {\n        return KeyCodeUtils.toElectronAccelerator(keybinding.keyCode);\n    }\n    _getDispatchPart(keybinding) {\n        return USLayoutResolvedKeybinding.getDispatchStr(keybinding);\n    }\n    static getDispatchStr(keybinding) {\n        if (keybinding.isModifierKey()) {\n            return null;\n        }\n        let result = '';\n        if (keybinding.ctrlKey) {\n            result += 'ctrl+';\n        }\n        if (keybinding.shiftKey) {\n            result += 'shift+';\n        }\n        if (keybinding.altKey) {\n            result += 'alt+';\n        }\n        if (keybinding.metaKey) {\n            result += 'meta+';\n        }\n        result += KeyCodeUtils.toString(keybinding.keyCode);\n        return result;\n    }\n    _getSingleModifierDispatchPart(keybinding) {\n        if (keybinding.keyCode === 5 /* KeyCode.Ctrl */ && !keybinding.shiftKey && !keybinding.altKey && !keybinding.metaKey) {\n            return 'ctrl';\n        }\n        if (keybinding.keyCode === 4 /* KeyCode.Shift */ && !keybinding.ctrlKey && !keybinding.altKey && !keybinding.metaKey) {\n            return 'shift';\n        }\n        if (keybinding.keyCode === 6 /* KeyCode.Alt */ && !keybinding.ctrlKey && !keybinding.shiftKey && !keybinding.metaKey) {\n            return 'alt';\n        }\n        if (keybinding.keyCode === 57 /* KeyCode.Meta */ && !keybinding.ctrlKey && !keybinding.shiftKey && !keybinding.altKey) {\n            return 'meta';\n        }\n        return null;\n    }\n    /**\n     * *NOTE*: Check return value for `KeyCode.Unknown`.\n     */\n    static _scanCodeToKeyCode(scanCode) {\n        const immutableKeyCode = IMMUTABLE_CODE_TO_KEY_CODE[scanCode];\n        if (immutableKeyCode !== -1 /* KeyCode.DependsOnKbLayout */) {\n            return immutableKeyCode;\n        }\n        switch (scanCode) {\n            case 10 /* ScanCode.KeyA */: return 31 /* KeyCode.KeyA */;\n            case 11 /* ScanCode.KeyB */: return 32 /* KeyCode.KeyB */;\n            case 12 /* ScanCode.KeyC */: return 33 /* KeyCode.KeyC */;\n            case 13 /* ScanCode.KeyD */: return 34 /* KeyCode.KeyD */;\n            case 14 /* ScanCode.KeyE */: return 35 /* KeyCode.KeyE */;\n            case 15 /* ScanCode.KeyF */: return 36 /* KeyCode.KeyF */;\n            case 16 /* ScanCode.KeyG */: return 37 /* KeyCode.KeyG */;\n            case 17 /* ScanCode.KeyH */: return 38 /* KeyCode.KeyH */;\n            case 18 /* ScanCode.KeyI */: return 39 /* KeyCode.KeyI */;\n            case 19 /* ScanCode.KeyJ */: return 40 /* KeyCode.KeyJ */;\n            case 20 /* ScanCode.KeyK */: return 41 /* KeyCode.KeyK */;\n            case 21 /* ScanCode.KeyL */: return 42 /* KeyCode.KeyL */;\n            case 22 /* ScanCode.KeyM */: return 43 /* KeyCode.KeyM */;\n            case 23 /* ScanCode.KeyN */: return 44 /* KeyCode.KeyN */;\n            case 24 /* ScanCode.KeyO */: return 45 /* KeyCode.KeyO */;\n            case 25 /* ScanCode.KeyP */: return 46 /* KeyCode.KeyP */;\n            case 26 /* ScanCode.KeyQ */: return 47 /* KeyCode.KeyQ */;\n            case 27 /* ScanCode.KeyR */: return 48 /* KeyCode.KeyR */;\n            case 28 /* ScanCode.KeyS */: return 49 /* KeyCode.KeyS */;\n            case 29 /* ScanCode.KeyT */: return 50 /* KeyCode.KeyT */;\n            case 30 /* ScanCode.KeyU */: return 51 /* KeyCode.KeyU */;\n            case 31 /* ScanCode.KeyV */: return 52 /* KeyCode.KeyV */;\n            case 32 /* ScanCode.KeyW */: return 53 /* KeyCode.KeyW */;\n            case 33 /* ScanCode.KeyX */: return 54 /* KeyCode.KeyX */;\n            case 34 /* ScanCode.KeyY */: return 55 /* KeyCode.KeyY */;\n            case 35 /* ScanCode.KeyZ */: return 56 /* KeyCode.KeyZ */;\n            case 36 /* ScanCode.Digit1 */: return 22 /* KeyCode.Digit1 */;\n            case 37 /* ScanCode.Digit2 */: return 23 /* KeyCode.Digit2 */;\n            case 38 /* ScanCode.Digit3 */: return 24 /* KeyCode.Digit3 */;\n            case 39 /* ScanCode.Digit4 */: return 25 /* KeyCode.Digit4 */;\n            case 40 /* ScanCode.Digit5 */: return 26 /* KeyCode.Digit5 */;\n            case 41 /* ScanCode.Digit6 */: return 27 /* KeyCode.Digit6 */;\n            case 42 /* ScanCode.Digit7 */: return 28 /* KeyCode.Digit7 */;\n            case 43 /* ScanCode.Digit8 */: return 29 /* KeyCode.Digit8 */;\n            case 44 /* ScanCode.Digit9 */: return 30 /* KeyCode.Digit9 */;\n            case 45 /* ScanCode.Digit0 */: return 21 /* KeyCode.Digit0 */;\n            case 51 /* ScanCode.Minus */: return 83 /* KeyCode.Minus */;\n            case 52 /* ScanCode.Equal */: return 81 /* KeyCode.Equal */;\n            case 53 /* ScanCode.BracketLeft */: return 87 /* KeyCode.BracketLeft */;\n            case 54 /* ScanCode.BracketRight */: return 89 /* KeyCode.BracketRight */;\n            case 55 /* ScanCode.Backslash */: return 88 /* KeyCode.Backslash */;\n            case 56 /* ScanCode.IntlHash */: return 0 /* KeyCode.Unknown */; // missing\n            case 57 /* ScanCode.Semicolon */: return 80 /* KeyCode.Semicolon */;\n            case 58 /* ScanCode.Quote */: return 90 /* KeyCode.Quote */;\n            case 59 /* ScanCode.Backquote */: return 86 /* KeyCode.Backquote */;\n            case 60 /* ScanCode.Comma */: return 82 /* KeyCode.Comma */;\n            case 61 /* ScanCode.Period */: return 84 /* KeyCode.Period */;\n            case 62 /* ScanCode.Slash */: return 85 /* KeyCode.Slash */;\n            case 106 /* ScanCode.IntlBackslash */: return 92 /* KeyCode.IntlBackslash */;\n        }\n        return 0 /* KeyCode.Unknown */;\n    }\n    static _resolveSimpleUserBinding(binding) {\n        if (!binding) {\n            return null;\n        }\n        if (binding instanceof SimpleKeybinding) {\n            return binding;\n        }\n        const keyCode = this._scanCodeToKeyCode(binding.scanCode);\n        if (keyCode === 0 /* KeyCode.Unknown */) {\n            return null;\n        }\n        return new SimpleKeybinding(binding.ctrlKey, binding.shiftKey, binding.altKey, binding.metaKey, keyCode);\n    }\n    static resolveUserBinding(input, os) {\n        const parts = removeElementsAfterNulls(input.map(keybinding => this._resolveSimpleUserBinding(keybinding)));\n        if (parts.length > 0) {\n            return [new USLayoutResolvedKeybinding(new ChordKeybinding(parts), os)];\n        }\n        return [];\n    }\n}\n","import { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ILabelService = createDecorator('labelService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ILayoutService = createDecorator('layoutService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createStyleSheet } from '../../../base/browser/dom.js';\nimport { PagedList } from '../../../base/browser/ui/list/listPaging.js';\nimport { DefaultStyleController, isSelectionRangeChangeEvent, isSelectionSingleChangeEvent, List, TypeNavigationMode } from '../../../base/browser/ui/list/listWidget.js';\nimport { Table } from '../../../base/browser/ui/table/tableWidget.js';\nimport { TreeFindMode } from '../../../base/browser/ui/tree/abstractTree.js';\nimport { AsyncDataTree, CompressibleAsyncDataTree } from '../../../base/browser/ui/tree/asyncDataTree.js';\nimport { DataTree } from '../../../base/browser/ui/tree/dataTree.js';\nimport { CompressibleObjectTree, ObjectTree } from '../../../base/browser/ui/tree/objectTree.js';\nimport { Emitter, Event } from '../../../base/common/event.js';\nimport { combinedDisposable, Disposable, DisposableStore, dispose, toDisposable } from '../../../base/common/lifecycle.js';\nimport { localize } from '../../../nls.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { Extensions as ConfigurationExtensions } from '../../configuration/common/configurationRegistry.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { InputFocusedContextKey } from '../../contextkey/common/contextkeys.js';\nimport { IContextViewService } from '../../contextview/browser/contextView.js';\nimport { createDecorator, IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { Registry } from '../../registry/common/platform.js';\nimport { attachListStyler, computeStyles, defaultListStyles } from '../../theme/common/styler.js';\nimport { IThemeService } from '../../theme/common/themeService.js';\nexport const IListService = createDecorator('listService');\nlet ListService = class ListService {\n    constructor(_themeService) {\n        this._themeService = _themeService;\n        this.disposables = new DisposableStore();\n        this.lists = [];\n        this._lastFocusedWidget = undefined;\n        this._hasCreatedStyleController = false;\n    }\n    get lastFocusedList() {\n        return this._lastFocusedWidget;\n    }\n    setLastFocusedList(widget) {\n        var _a, _b;\n        if (widget === this._lastFocusedWidget) {\n            return;\n        }\n        (_a = this._lastFocusedWidget) === null || _a === void 0 ? void 0 : _a.getHTMLElement().classList.remove('last-focused');\n        this._lastFocusedWidget = widget;\n        (_b = this._lastFocusedWidget) === null || _b === void 0 ? void 0 : _b.getHTMLElement().classList.add('last-focused');\n    }\n    register(widget, extraContextKeys) {\n        if (!this._hasCreatedStyleController) {\n            this._hasCreatedStyleController = true;\n            // create a shared default tree style sheet for performance reasons\n            const styleController = new DefaultStyleController(createStyleSheet(), '');\n            this.disposables.add(attachListStyler(styleController, this._themeService));\n        }\n        if (this.lists.some(l => l.widget === widget)) {\n            throw new Error('Cannot register the same widget multiple times');\n        }\n        // Keep in our lists list\n        const registeredList = { widget, extraContextKeys };\n        this.lists.push(registeredList);\n        // Check for currently being focused\n        if (widget.getHTMLElement() === document.activeElement) {\n            this.setLastFocusedList(widget);\n        }\n        return combinedDisposable(widget.onDidFocus(() => this.setLastFocusedList(widget)), toDisposable(() => this.lists.splice(this.lists.indexOf(registeredList), 1)), widget.onDidDispose(() => {\n            this.lists = this.lists.filter(l => l !== registeredList);\n            if (this._lastFocusedWidget === widget) {\n                this.setLastFocusedList(undefined);\n            }\n        }));\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n};\nListService = __decorate([\n    __param(0, IThemeService)\n], ListService);\nexport { ListService };\nexport const RawWorkbenchListFocusContextKey = new RawContextKey('listFocus', true);\nexport const WorkbenchListSupportsMultiSelectContextKey = new RawContextKey('listSupportsMultiselect', true);\nexport const WorkbenchListFocusContextKey = ContextKeyExpr.and(RawWorkbenchListFocusContextKey, ContextKeyExpr.not(InputFocusedContextKey));\nexport const WorkbenchListHasSelectionOrFocus = new RawContextKey('listHasSelectionOrFocus', false);\nexport const WorkbenchListDoubleSelection = new RawContextKey('listDoubleSelection', false);\nexport const WorkbenchListMultiSelection = new RawContextKey('listMultiSelection', false);\nexport const WorkbenchListSelectionNavigation = new RawContextKey('listSelectionNavigation', false);\nexport const WorkbenchListSupportsFind = new RawContextKey('listSupportsFind', true);\nexport const WorkbenchTreeElementCanCollapse = new RawContextKey('treeElementCanCollapse', false);\nexport const WorkbenchTreeElementHasParent = new RawContextKey('treeElementHasParent', false);\nexport const WorkbenchTreeElementCanExpand = new RawContextKey('treeElementCanExpand', false);\nexport const WorkbenchTreeElementHasChild = new RawContextKey('treeElementHasChild', false);\nexport const WorkbenchTreeFindOpen = new RawContextKey('treeFindOpen', false);\nconst WorkbenchListTypeNavigationModeKey = 'listTypeNavigationMode';\n/**\n * @deprecated in favor of WorkbenchListTypeNavigationModeKey\n */\nconst WorkbenchListAutomaticKeyboardNavigationLegacyKey = 'listAutomaticKeyboardNavigation';\nfunction createScopedContextKeyService(contextKeyService, widget) {\n    const result = contextKeyService.createScoped(widget.getHTMLElement());\n    RawWorkbenchListFocusContextKey.bindTo(result);\n    return result;\n}\nconst multiSelectModifierSettingKey = 'workbench.list.multiSelectModifier';\nconst openModeSettingKey = 'workbench.list.openMode';\nconst horizontalScrollingKey = 'workbench.list.horizontalScrolling';\nconst defaultFindModeSettingKey = 'workbench.list.defaultFindMode';\n/** @deprecated in favor of workbench.list.defaultFindMode */\nconst keyboardNavigationSettingKey = 'workbench.list.keyboardNavigation';\nconst treeIndentKey = 'workbench.tree.indent';\nconst treeRenderIndentGuidesKey = 'workbench.tree.renderIndentGuides';\nconst listSmoothScrolling = 'workbench.list.smoothScrolling';\nconst mouseWheelScrollSensitivityKey = 'workbench.list.mouseWheelScrollSensitivity';\nconst fastScrollSensitivityKey = 'workbench.list.fastScrollSensitivity';\nconst treeExpandMode = 'workbench.tree.expandMode';\nfunction useAltAsMultipleSelectionModifier(configurationService) {\n    return configurationService.getValue(multiSelectModifierSettingKey) === 'alt';\n}\nclass MultipleSelectionController extends Disposable {\n    constructor(configurationService) {\n        super();\n        this.configurationService = configurationService;\n        this.useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n                this.useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(this.configurationService);\n            }\n        }));\n    }\n    isSelectionSingleChangeEvent(event) {\n        if (this.useAltAsMultipleSelectionModifier) {\n            return event.browserEvent.altKey;\n        }\n        return isSelectionSingleChangeEvent(event);\n    }\n    isSelectionRangeChangeEvent(event) {\n        return isSelectionRangeChangeEvent(event);\n    }\n}\nfunction toWorkbenchListOptions(accessor, options) {\n    var _a;\n    const configurationService = accessor.get(IConfigurationService);\n    const keybindingService = accessor.get(IKeybindingService);\n    const disposables = new DisposableStore();\n    const result = Object.assign(Object.assign({}, options), { keyboardNavigationDelegate: { mightProducePrintableCharacter(e) { return keybindingService.mightProducePrintableCharacter(e); } }, smoothScrolling: Boolean(configurationService.getValue(listSmoothScrolling)), mouseWheelScrollSensitivity: configurationService.getValue(mouseWheelScrollSensitivityKey), fastScrollSensitivity: configurationService.getValue(fastScrollSensitivityKey), multipleSelectionController: (_a = options.multipleSelectionController) !== null && _a !== void 0 ? _a : disposables.add(new MultipleSelectionController(configurationService)), keyboardNavigationEventFilter: createKeyboardNavigationEventFilter(keybindingService) });\n    return [result, disposables];\n}\nlet WorkbenchList = class WorkbenchList extends List {\n    constructor(user, container, delegate, renderers, options, contextKeyService, listService, themeService, configurationService, instantiationService) {\n        const horizontalScrolling = typeof options.horizontalScrolling !== 'undefined' ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\n        const [workbenchListOptions, workbenchListOptionsDisposable] = instantiationService.invokeFunction(toWorkbenchListOptions, options);\n        super(user, container, delegate, renderers, Object.assign(Object.assign(Object.assign({ keyboardSupport: false }, computeStyles(themeService.getColorTheme(), defaultListStyles)), workbenchListOptions), { horizontalScrolling }));\n        this.disposables.add(workbenchListOptionsDisposable);\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, this);\n        this.themeService = themeService;\n        this.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\n        this.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\n        const listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(this.contextKeyService);\n        listSelectionNavigation.set(Boolean(options.selectionNavigation));\n        this.listHasSelectionOrFocus = WorkbenchListHasSelectionOrFocus.bindTo(this.contextKeyService);\n        this.listDoubleSelection = WorkbenchListDoubleSelection.bindTo(this.contextKeyService);\n        this.listMultiSelection = WorkbenchListMultiSelection.bindTo(this.contextKeyService);\n        this.horizontalScrolling = options.horizontalScrolling;\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n        this.disposables.add(this.contextKeyService);\n        this.disposables.add(listService.register(this));\n        if (options.overrideStyles) {\n            this.updateStyles(options.overrideStyles);\n        }\n        this.disposables.add(this.onDidChangeSelection(() => {\n            const selection = this.getSelection();\n            const focus = this.getFocus();\n            this.contextKeyService.bufferChangeEvents(() => {\n                this.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n                this.listMultiSelection.set(selection.length > 1);\n                this.listDoubleSelection.set(selection.length === 2);\n            });\n        }));\n        this.disposables.add(this.onDidChangeFocus(() => {\n            const selection = this.getSelection();\n            const focus = this.getFocus();\n            this.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n        }));\n        this.disposables.add(configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n            }\n            let options = {};\n            if (e.affectsConfiguration(horizontalScrollingKey) && this.horizontalScrolling === undefined) {\n                const horizontalScrolling = Boolean(configurationService.getValue(horizontalScrollingKey));\n                options = Object.assign(Object.assign({}, options), { horizontalScrolling });\n            }\n            if (e.affectsConfiguration(listSmoothScrolling)) {\n                const smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\n                options = Object.assign(Object.assign({}, options), { smoothScrolling });\n            }\n            if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\n                const mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\n                options = Object.assign(Object.assign({}, options), { mouseWheelScrollSensitivity });\n            }\n            if (e.affectsConfiguration(fastScrollSensitivityKey)) {\n                const fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\n                options = Object.assign(Object.assign({}, options), { fastScrollSensitivity });\n            }\n            if (Object.keys(options).length > 0) {\n                this.updateOptions(options);\n            }\n        }));\n        this.navigator = new ListResourceNavigator(this, Object.assign({ configurationService }, options));\n        this.disposables.add(this.navigator);\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        if (options.overrideStyles) {\n            this.updateStyles(options.overrideStyles);\n        }\n        if (options.multipleSelectionSupport !== undefined) {\n            this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\n        }\n    }\n    updateStyles(styles) {\n        var _a;\n        (_a = this._styler) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._styler = attachListStyler(this, this.themeService, styles);\n    }\n    dispose() {\n        var _a;\n        (_a = this._styler) === null || _a === void 0 ? void 0 : _a.dispose();\n        super.dispose();\n    }\n};\nWorkbenchList = __decorate([\n    __param(5, IContextKeyService),\n    __param(6, IListService),\n    __param(7, IThemeService),\n    __param(8, IConfigurationService),\n    __param(9, IInstantiationService)\n], WorkbenchList);\nexport { WorkbenchList };\nlet WorkbenchPagedList = class WorkbenchPagedList extends PagedList {\n    constructor(user, container, delegate, renderers, options, contextKeyService, listService, themeService, configurationService, instantiationService) {\n        const horizontalScrolling = typeof options.horizontalScrolling !== 'undefined' ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\n        const [workbenchListOptions, workbenchListOptionsDisposable] = instantiationService.invokeFunction(toWorkbenchListOptions, options);\n        super(user, container, delegate, renderers, Object.assign(Object.assign(Object.assign({ keyboardSupport: false }, computeStyles(themeService.getColorTheme(), defaultListStyles)), workbenchListOptions), { horizontalScrolling }));\n        this.disposables = new DisposableStore();\n        this.disposables.add(workbenchListOptionsDisposable);\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, this);\n        this.themeService = themeService;\n        this.horizontalScrolling = options.horizontalScrolling;\n        this.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\n        this.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\n        const listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(this.contextKeyService);\n        listSelectionNavigation.set(Boolean(options.selectionNavigation));\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n        this.disposables.add(this.contextKeyService);\n        this.disposables.add(listService.register(this));\n        if (options.overrideStyles) {\n            this.updateStyles(options.overrideStyles);\n        }\n        if (options.overrideStyles) {\n            this.disposables.add(attachListStyler(this, themeService, options.overrideStyles));\n        }\n        this.disposables.add(configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n            }\n            let options = {};\n            if (e.affectsConfiguration(horizontalScrollingKey) && this.horizontalScrolling === undefined) {\n                const horizontalScrolling = Boolean(configurationService.getValue(horizontalScrollingKey));\n                options = Object.assign(Object.assign({}, options), { horizontalScrolling });\n            }\n            if (e.affectsConfiguration(listSmoothScrolling)) {\n                const smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\n                options = Object.assign(Object.assign({}, options), { smoothScrolling });\n            }\n            if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\n                const mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\n                options = Object.assign(Object.assign({}, options), { mouseWheelScrollSensitivity });\n            }\n            if (e.affectsConfiguration(fastScrollSensitivityKey)) {\n                const fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\n                options = Object.assign(Object.assign({}, options), { fastScrollSensitivity });\n            }\n            if (Object.keys(options).length > 0) {\n                this.updateOptions(options);\n            }\n        }));\n        this.navigator = new ListResourceNavigator(this, Object.assign({ configurationService }, options));\n        this.disposables.add(this.navigator);\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        if (options.overrideStyles) {\n            this.updateStyles(options.overrideStyles);\n        }\n        if (options.multipleSelectionSupport !== undefined) {\n            this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\n        }\n    }\n    updateStyles(styles) {\n        var _a;\n        (_a = this._styler) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._styler = attachListStyler(this, this.themeService, styles);\n    }\n    dispose() {\n        var _a;\n        (_a = this._styler) === null || _a === void 0 ? void 0 : _a.dispose();\n        this.disposables.dispose();\n        super.dispose();\n    }\n};\nWorkbenchPagedList = __decorate([\n    __param(5, IContextKeyService),\n    __param(6, IListService),\n    __param(7, IThemeService),\n    __param(8, IConfigurationService),\n    __param(9, IInstantiationService)\n], WorkbenchPagedList);\nexport { WorkbenchPagedList };\nlet WorkbenchTable = class WorkbenchTable extends Table {\n    constructor(user, container, delegate, columns, renderers, options, contextKeyService, listService, themeService, configurationService, instantiationService) {\n        const horizontalScrolling = typeof options.horizontalScrolling !== 'undefined' ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\n        const [workbenchListOptions, workbenchListOptionsDisposable] = instantiationService.invokeFunction(toWorkbenchListOptions, options);\n        super(user, container, delegate, columns, renderers, Object.assign(Object.assign(Object.assign({ keyboardSupport: false }, computeStyles(themeService.getColorTheme(), defaultListStyles)), workbenchListOptions), { horizontalScrolling }));\n        this.disposables.add(workbenchListOptionsDisposable);\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, this);\n        this.themeService = themeService;\n        this.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\n        this.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\n        const listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(this.contextKeyService);\n        listSelectionNavigation.set(Boolean(options.selectionNavigation));\n        this.listHasSelectionOrFocus = WorkbenchListHasSelectionOrFocus.bindTo(this.contextKeyService);\n        this.listDoubleSelection = WorkbenchListDoubleSelection.bindTo(this.contextKeyService);\n        this.listMultiSelection = WorkbenchListMultiSelection.bindTo(this.contextKeyService);\n        this.horizontalScrolling = options.horizontalScrolling;\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n        this.disposables.add(this.contextKeyService);\n        this.disposables.add(listService.register(this));\n        if (options.overrideStyles) {\n            this.updateStyles(options.overrideStyles);\n        }\n        this.disposables.add(this.onDidChangeSelection(() => {\n            const selection = this.getSelection();\n            const focus = this.getFocus();\n            this.contextKeyService.bufferChangeEvents(() => {\n                this.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n                this.listMultiSelection.set(selection.length > 1);\n                this.listDoubleSelection.set(selection.length === 2);\n            });\n        }));\n        this.disposables.add(this.onDidChangeFocus(() => {\n            const selection = this.getSelection();\n            const focus = this.getFocus();\n            this.listHasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n        }));\n        this.disposables.add(configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n            }\n            let options = {};\n            if (e.affectsConfiguration(horizontalScrollingKey) && this.horizontalScrolling === undefined) {\n                const horizontalScrolling = Boolean(configurationService.getValue(horizontalScrollingKey));\n                options = Object.assign(Object.assign({}, options), { horizontalScrolling });\n            }\n            if (e.affectsConfiguration(listSmoothScrolling)) {\n                const smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\n                options = Object.assign(Object.assign({}, options), { smoothScrolling });\n            }\n            if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\n                const mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\n                options = Object.assign(Object.assign({}, options), { mouseWheelScrollSensitivity });\n            }\n            if (e.affectsConfiguration(fastScrollSensitivityKey)) {\n                const fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\n                options = Object.assign(Object.assign({}, options), { fastScrollSensitivity });\n            }\n            if (Object.keys(options).length > 0) {\n                this.updateOptions(options);\n            }\n        }));\n        this.navigator = new TableResourceNavigator(this, Object.assign({ configurationService }, options));\n        this.disposables.add(this.navigator);\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        if (options.overrideStyles) {\n            this.updateStyles(options.overrideStyles);\n        }\n        if (options.multipleSelectionSupport !== undefined) {\n            this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\n        }\n    }\n    updateStyles(styles) {\n        var _a;\n        (_a = this._styler) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._styler = attachListStyler(this, this.themeService, styles);\n    }\n    dispose() {\n        var _a;\n        (_a = this._styler) === null || _a === void 0 ? void 0 : _a.dispose();\n        this.disposables.dispose();\n        super.dispose();\n    }\n};\nWorkbenchTable = __decorate([\n    __param(6, IContextKeyService),\n    __param(7, IListService),\n    __param(8, IThemeService),\n    __param(9, IConfigurationService),\n    __param(10, IInstantiationService)\n], WorkbenchTable);\nexport { WorkbenchTable };\nclass ResourceNavigator extends Disposable {\n    constructor(widget, options) {\n        var _a;\n        super();\n        this.widget = widget;\n        this._onDidOpen = this._register(new Emitter());\n        this.onDidOpen = this._onDidOpen.event;\n        this._register(Event.filter(this.widget.onDidChangeSelection, e => e.browserEvent instanceof KeyboardEvent)(e => this.onSelectionFromKeyboard(e)));\n        this._register(this.widget.onPointer((e) => this.onPointer(e.element, e.browserEvent)));\n        this._register(this.widget.onMouseDblClick((e) => this.onMouseDblClick(e.element, e.browserEvent)));\n        if (typeof (options === null || options === void 0 ? void 0 : options.openOnSingleClick) !== 'boolean' && (options === null || options === void 0 ? void 0 : options.configurationService)) {\n            this.openOnSingleClick = (options === null || options === void 0 ? void 0 : options.configurationService.getValue(openModeSettingKey)) !== 'doubleClick';\n            this._register(options === null || options === void 0 ? void 0 : options.configurationService.onDidChangeConfiguration(() => {\n                this.openOnSingleClick = (options === null || options === void 0 ? void 0 : options.configurationService.getValue(openModeSettingKey)) !== 'doubleClick';\n            }));\n        }\n        else {\n            this.openOnSingleClick = (_a = options === null || options === void 0 ? void 0 : options.openOnSingleClick) !== null && _a !== void 0 ? _a : true;\n        }\n    }\n    onSelectionFromKeyboard(event) {\n        if (event.elements.length !== 1) {\n            return;\n        }\n        const selectionKeyboardEvent = event.browserEvent;\n        const preserveFocus = typeof selectionKeyboardEvent.preserveFocus === 'boolean' ? selectionKeyboardEvent.preserveFocus : true;\n        const pinned = typeof selectionKeyboardEvent.pinned === 'boolean' ? selectionKeyboardEvent.pinned : !preserveFocus;\n        const sideBySide = false;\n        this._open(this.getSelectedElement(), preserveFocus, pinned, sideBySide, event.browserEvent);\n    }\n    onPointer(element, browserEvent) {\n        if (!this.openOnSingleClick) {\n            return;\n        }\n        const isDoubleClick = browserEvent.detail === 2;\n        if (isDoubleClick) {\n            return;\n        }\n        const isMiddleClick = browserEvent.button === 1;\n        const preserveFocus = true;\n        const pinned = isMiddleClick;\n        const sideBySide = browserEvent.ctrlKey || browserEvent.metaKey || browserEvent.altKey;\n        this._open(element, preserveFocus, pinned, sideBySide, browserEvent);\n    }\n    onMouseDblClick(element, browserEvent) {\n        if (!browserEvent) {\n            return;\n        }\n        // copied from AbstractTree\n        const target = browserEvent.target;\n        const onTwistie = target.classList.contains('monaco-tl-twistie')\n            || (target.classList.contains('monaco-icon-label') && target.classList.contains('folder-icon') && browserEvent.offsetX < 16);\n        if (onTwistie) {\n            return;\n        }\n        const preserveFocus = false;\n        const pinned = true;\n        const sideBySide = (browserEvent.ctrlKey || browserEvent.metaKey || browserEvent.altKey);\n        this._open(element, preserveFocus, pinned, sideBySide, browserEvent);\n    }\n    _open(element, preserveFocus, pinned, sideBySide, browserEvent) {\n        if (!element) {\n            return;\n        }\n        this._onDidOpen.fire({\n            editorOptions: {\n                preserveFocus,\n                pinned,\n                revealIfVisible: true\n            },\n            sideBySide,\n            element,\n            browserEvent\n        });\n    }\n}\nclass ListResourceNavigator extends ResourceNavigator {\n    constructor(widget, options) {\n        super(widget, options);\n        this.widget = widget;\n    }\n    getSelectedElement() {\n        return this.widget.getSelectedElements()[0];\n    }\n}\nclass TableResourceNavigator extends ResourceNavigator {\n    constructor(widget, options) {\n        super(widget, options);\n    }\n    getSelectedElement() {\n        return this.widget.getSelectedElements()[0];\n    }\n}\nclass TreeResourceNavigator extends ResourceNavigator {\n    constructor(widget, options) {\n        super(widget, options);\n    }\n    getSelectedElement() {\n        var _a;\n        return (_a = this.widget.getSelection()[0]) !== null && _a !== void 0 ? _a : undefined;\n    }\n}\nfunction createKeyboardNavigationEventFilter(keybindingService) {\n    let inChord = false;\n    return event => {\n        if (event.toKeybinding().isModifierKey()) {\n            return false;\n        }\n        if (inChord) {\n            inChord = false;\n            return false;\n        }\n        const result = keybindingService.softDispatch(event, event.target);\n        if (result === null || result === void 0 ? void 0 : result.enterChord) {\n            inChord = true;\n            return false;\n        }\n        inChord = false;\n        return !result;\n    };\n}\nlet WorkbenchObjectTree = class WorkbenchObjectTree extends ObjectTree {\n    constructor(user, container, delegate, renderers, options, instantiationService, contextKeyService, listService, themeService, configurationService) {\n        const { options: treeOptions, getTypeNavigationMode, disposable } = instantiationService.invokeFunction(workbenchTreeDataPreamble, options);\n        super(user, container, delegate, renderers, treeOptions);\n        this.disposables.add(disposable);\n        this.internals = new WorkbenchTreeInternals(this, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, themeService, configurationService);\n        this.disposables.add(this.internals);\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        this.internals.updateOptions(options);\n    }\n};\nWorkbenchObjectTree = __decorate([\n    __param(5, IInstantiationService),\n    __param(6, IContextKeyService),\n    __param(7, IListService),\n    __param(8, IThemeService),\n    __param(9, IConfigurationService)\n], WorkbenchObjectTree);\nexport { WorkbenchObjectTree };\nlet WorkbenchCompressibleObjectTree = class WorkbenchCompressibleObjectTree extends CompressibleObjectTree {\n    constructor(user, container, delegate, renderers, options, instantiationService, contextKeyService, listService, themeService, configurationService) {\n        const { options: treeOptions, getTypeNavigationMode, disposable } = instantiationService.invokeFunction(workbenchTreeDataPreamble, options);\n        super(user, container, delegate, renderers, treeOptions);\n        this.disposables.add(disposable);\n        this.internals = new WorkbenchTreeInternals(this, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, themeService, configurationService);\n        this.disposables.add(this.internals);\n    }\n    updateOptions(options = {}) {\n        super.updateOptions(options);\n        if (options.overrideStyles) {\n            this.internals.updateStyleOverrides(options.overrideStyles);\n        }\n        this.internals.updateOptions(options);\n    }\n};\nWorkbenchCompressibleObjectTree = __decorate([\n    __param(5, IInstantiationService),\n    __param(6, IContextKeyService),\n    __param(7, IListService),\n    __param(8, IThemeService),\n    __param(9, IConfigurationService)\n], WorkbenchCompressibleObjectTree);\nexport { WorkbenchCompressibleObjectTree };\nlet WorkbenchDataTree = class WorkbenchDataTree extends DataTree {\n    constructor(user, container, delegate, renderers, dataSource, options, instantiationService, contextKeyService, listService, themeService, configurationService) {\n        const { options: treeOptions, getTypeNavigationMode, disposable } = instantiationService.invokeFunction(workbenchTreeDataPreamble, options);\n        super(user, container, delegate, renderers, dataSource, treeOptions);\n        this.disposables.add(disposable);\n        this.internals = new WorkbenchTreeInternals(this, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, themeService, configurationService);\n        this.disposables.add(this.internals);\n    }\n    updateOptions(options = {}) {\n        super.updateOptions(options);\n        if (options.overrideStyles) {\n            this.internals.updateStyleOverrides(options.overrideStyles);\n        }\n        this.internals.updateOptions(options);\n    }\n};\nWorkbenchDataTree = __decorate([\n    __param(6, IInstantiationService),\n    __param(7, IContextKeyService),\n    __param(8, IListService),\n    __param(9, IThemeService),\n    __param(10, IConfigurationService)\n], WorkbenchDataTree);\nexport { WorkbenchDataTree };\nlet WorkbenchAsyncDataTree = class WorkbenchAsyncDataTree extends AsyncDataTree {\n    constructor(user, container, delegate, renderers, dataSource, options, instantiationService, contextKeyService, listService, themeService, configurationService) {\n        const { options: treeOptions, getTypeNavigationMode, disposable } = instantiationService.invokeFunction(workbenchTreeDataPreamble, options);\n        super(user, container, delegate, renderers, dataSource, treeOptions);\n        this.disposables.add(disposable);\n        this.internals = new WorkbenchTreeInternals(this, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, themeService, configurationService);\n        this.disposables.add(this.internals);\n    }\n    get onDidOpen() { return this.internals.onDidOpen; }\n    updateOptions(options = {}) {\n        super.updateOptions(options);\n        if (options.overrideStyles) {\n            this.internals.updateStyleOverrides(options.overrideStyles);\n        }\n        this.internals.updateOptions(options);\n    }\n};\nWorkbenchAsyncDataTree = __decorate([\n    __param(6, IInstantiationService),\n    __param(7, IContextKeyService),\n    __param(8, IListService),\n    __param(9, IThemeService),\n    __param(10, IConfigurationService)\n], WorkbenchAsyncDataTree);\nexport { WorkbenchAsyncDataTree };\nlet WorkbenchCompressibleAsyncDataTree = class WorkbenchCompressibleAsyncDataTree extends CompressibleAsyncDataTree {\n    constructor(user, container, virtualDelegate, compressionDelegate, renderers, dataSource, options, instantiationService, contextKeyService, listService, themeService, configurationService) {\n        const { options: treeOptions, getTypeNavigationMode, disposable } = instantiationService.invokeFunction(workbenchTreeDataPreamble, options);\n        super(user, container, virtualDelegate, compressionDelegate, renderers, dataSource, treeOptions);\n        this.disposables.add(disposable);\n        this.internals = new WorkbenchTreeInternals(this, options, getTypeNavigationMode, options.overrideStyles, contextKeyService, listService, themeService, configurationService);\n        this.disposables.add(this.internals);\n    }\n    updateOptions(options) {\n        super.updateOptions(options);\n        this.internals.updateOptions(options);\n    }\n};\nWorkbenchCompressibleAsyncDataTree = __decorate([\n    __param(7, IInstantiationService),\n    __param(8, IContextKeyService),\n    __param(9, IListService),\n    __param(10, IThemeService),\n    __param(11, IConfigurationService)\n], WorkbenchCompressibleAsyncDataTree);\nexport { WorkbenchCompressibleAsyncDataTree };\nfunction getDefaultTreeFindMode(configurationService) {\n    const value = configurationService.getValue(defaultFindModeSettingKey);\n    if (value === 'highlight') {\n        return TreeFindMode.Highlight;\n    }\n    else if (value === 'filter') {\n        return TreeFindMode.Filter;\n    }\n    const deprecatedValue = configurationService.getValue(keyboardNavigationSettingKey);\n    if (deprecatedValue === 'simple' || deprecatedValue === 'highlight') {\n        return TreeFindMode.Highlight;\n    }\n    else if (deprecatedValue === 'filter') {\n        return TreeFindMode.Filter;\n    }\n    return undefined;\n}\nfunction workbenchTreeDataPreamble(accessor, options) {\n    var _a;\n    const configurationService = accessor.get(IConfigurationService);\n    const contextViewService = accessor.get(IContextViewService);\n    const contextKeyService = accessor.get(IContextKeyService);\n    const instantiationService = accessor.get(IInstantiationService);\n    const getTypeNavigationMode = () => {\n        // give priority to the context key value to specify a value\n        const modeString = contextKeyService.getContextKeyValue(WorkbenchListTypeNavigationModeKey);\n        if (modeString === 'automatic') {\n            return TypeNavigationMode.Automatic;\n        }\n        else if (modeString === 'trigger') {\n            return TypeNavigationMode.Trigger;\n        }\n        // also check the deprecated context key to set the mode to 'trigger'\n        const modeBoolean = contextKeyService.getContextKeyValue(WorkbenchListAutomaticKeyboardNavigationLegacyKey);\n        if (modeBoolean === false) {\n            return TypeNavigationMode.Trigger;\n        }\n        return undefined;\n    };\n    const horizontalScrolling = options.horizontalScrolling !== undefined ? options.horizontalScrolling : Boolean(configurationService.getValue(horizontalScrollingKey));\n    const [workbenchListOptions, disposable] = instantiationService.invokeFunction(toWorkbenchListOptions, options);\n    const additionalScrollHeight = options.additionalScrollHeight;\n    return {\n        getTypeNavigationMode,\n        disposable,\n        options: Object.assign(Object.assign({ \n            // ...options, // TODO@Joao why is this not splatted here?\n            keyboardSupport: false }, workbenchListOptions), { indent: typeof configurationService.getValue(treeIndentKey) === 'number' ? configurationService.getValue(treeIndentKey) : undefined, renderIndentGuides: configurationService.getValue(treeRenderIndentGuidesKey), smoothScrolling: Boolean(configurationService.getValue(listSmoothScrolling)), defaultFindMode: getDefaultTreeFindMode(configurationService), horizontalScrolling,\n            additionalScrollHeight, hideTwistiesOfChildlessElements: options.hideTwistiesOfChildlessElements, expandOnlyOnTwistieClick: (_a = options.expandOnlyOnTwistieClick) !== null && _a !== void 0 ? _a : (configurationService.getValue(treeExpandMode) === 'doubleClick'), contextViewProvider: contextViewService })\n    };\n}\nlet WorkbenchTreeInternals = class WorkbenchTreeInternals {\n    constructor(tree, options, getTypeNavigationMode, overrideStyles, contextKeyService, listService, themeService, configurationService) {\n        var _a;\n        this.tree = tree;\n        this.themeService = themeService;\n        this.disposables = [];\n        this.contextKeyService = createScopedContextKeyService(contextKeyService, tree);\n        this.listSupportsMultiSelect = WorkbenchListSupportsMultiSelectContextKey.bindTo(this.contextKeyService);\n        this.listSupportsMultiSelect.set(options.multipleSelectionSupport !== false);\n        const listSelectionNavigation = WorkbenchListSelectionNavigation.bindTo(this.contextKeyService);\n        listSelectionNavigation.set(Boolean(options.selectionNavigation));\n        this.listSupportFindWidget = WorkbenchListSupportsFind.bindTo(this.contextKeyService);\n        this.listSupportFindWidget.set((_a = options.findWidgetEnabled) !== null && _a !== void 0 ? _a : true);\n        this.hasSelectionOrFocus = WorkbenchListHasSelectionOrFocus.bindTo(this.contextKeyService);\n        this.hasDoubleSelection = WorkbenchListDoubleSelection.bindTo(this.contextKeyService);\n        this.hasMultiSelection = WorkbenchListMultiSelection.bindTo(this.contextKeyService);\n        this.treeElementCanCollapse = WorkbenchTreeElementCanCollapse.bindTo(this.contextKeyService);\n        this.treeElementHasParent = WorkbenchTreeElementHasParent.bindTo(this.contextKeyService);\n        this.treeElementCanExpand = WorkbenchTreeElementCanExpand.bindTo(this.contextKeyService);\n        this.treeElementHasChild = WorkbenchTreeElementHasChild.bindTo(this.contextKeyService);\n        this.treeFindOpen = WorkbenchTreeFindOpen.bindTo(this.contextKeyService);\n        this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n        this.updateStyleOverrides(overrideStyles);\n        const updateCollapseContextKeys = () => {\n            const focus = tree.getFocus()[0];\n            if (!focus) {\n                return;\n            }\n            const node = tree.getNode(focus);\n            this.treeElementCanCollapse.set(node.collapsible && !node.collapsed);\n            this.treeElementHasParent.set(!!tree.getParentElement(focus));\n            this.treeElementCanExpand.set(node.collapsible && node.collapsed);\n            this.treeElementHasChild.set(!!tree.getFirstElementChild(focus));\n        };\n        const interestingContextKeys = new Set();\n        interestingContextKeys.add(WorkbenchListTypeNavigationModeKey);\n        interestingContextKeys.add(WorkbenchListAutomaticKeyboardNavigationLegacyKey);\n        this.disposables.push(this.contextKeyService, listService.register(tree), tree.onDidChangeSelection(() => {\n            const selection = tree.getSelection();\n            const focus = tree.getFocus();\n            this.contextKeyService.bufferChangeEvents(() => {\n                this.hasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n                this.hasMultiSelection.set(selection.length > 1);\n                this.hasDoubleSelection.set(selection.length === 2);\n            });\n        }), tree.onDidChangeFocus(() => {\n            const selection = tree.getSelection();\n            const focus = tree.getFocus();\n            this.hasSelectionOrFocus.set(selection.length > 0 || focus.length > 0);\n            updateCollapseContextKeys();\n        }), tree.onDidChangeCollapseState(updateCollapseContextKeys), tree.onDidChangeModel(updateCollapseContextKeys), tree.onDidChangeFindOpenState(enabled => this.treeFindOpen.set(enabled)), configurationService.onDidChangeConfiguration(e => {\n            let newOptions = {};\n            if (e.affectsConfiguration(multiSelectModifierSettingKey)) {\n                this._useAltAsMultipleSelectionModifier = useAltAsMultipleSelectionModifier(configurationService);\n            }\n            if (e.affectsConfiguration(treeIndentKey)) {\n                const indent = configurationService.getValue(treeIndentKey);\n                newOptions = Object.assign(Object.assign({}, newOptions), { indent });\n            }\n            if (e.affectsConfiguration(treeRenderIndentGuidesKey)) {\n                const renderIndentGuides = configurationService.getValue(treeRenderIndentGuidesKey);\n                newOptions = Object.assign(Object.assign({}, newOptions), { renderIndentGuides });\n            }\n            if (e.affectsConfiguration(listSmoothScrolling)) {\n                const smoothScrolling = Boolean(configurationService.getValue(listSmoothScrolling));\n                newOptions = Object.assign(Object.assign({}, newOptions), { smoothScrolling });\n            }\n            if (e.affectsConfiguration(defaultFindModeSettingKey) || e.affectsConfiguration(keyboardNavigationSettingKey)) {\n                tree.updateOptions({ defaultFindMode: getDefaultTreeFindMode(configurationService) });\n            }\n            if (e.affectsConfiguration(horizontalScrollingKey) && options.horizontalScrolling === undefined) {\n                const horizontalScrolling = Boolean(configurationService.getValue(horizontalScrollingKey));\n                newOptions = Object.assign(Object.assign({}, newOptions), { horizontalScrolling });\n            }\n            if (e.affectsConfiguration(treeExpandMode) && options.expandOnlyOnTwistieClick === undefined) {\n                newOptions = Object.assign(Object.assign({}, newOptions), { expandOnlyOnTwistieClick: configurationService.getValue(treeExpandMode) === 'doubleClick' });\n            }\n            if (e.affectsConfiguration(mouseWheelScrollSensitivityKey)) {\n                const mouseWheelScrollSensitivity = configurationService.getValue(mouseWheelScrollSensitivityKey);\n                newOptions = Object.assign(Object.assign({}, newOptions), { mouseWheelScrollSensitivity });\n            }\n            if (e.affectsConfiguration(fastScrollSensitivityKey)) {\n                const fastScrollSensitivity = configurationService.getValue(fastScrollSensitivityKey);\n                newOptions = Object.assign(Object.assign({}, newOptions), { fastScrollSensitivity });\n            }\n            if (Object.keys(newOptions).length > 0) {\n                tree.updateOptions(newOptions);\n            }\n        }), this.contextKeyService.onDidChangeContext(e => {\n            if (e.affectsSome(interestingContextKeys)) {\n                tree.updateOptions({ typeNavigationMode: getTypeNavigationMode() });\n            }\n        }));\n        this.navigator = new TreeResourceNavigator(tree, Object.assign({ configurationService }, options));\n        this.disposables.push(this.navigator);\n    }\n    get onDidOpen() { return this.navigator.onDidOpen; }\n    updateOptions(options) {\n        if (options.multipleSelectionSupport !== undefined) {\n            this.listSupportsMultiSelect.set(!!options.multipleSelectionSupport);\n        }\n    }\n    updateStyleOverrides(overrideStyles) {\n        dispose(this.styler);\n        this.styler = overrideStyles ? attachListStyler(this.tree, this.themeService, overrideStyles) : Disposable.None;\n    }\n    dispose() {\n        this.disposables = dispose(this.disposables);\n        dispose(this.styler);\n        this.styler = undefined;\n    }\n};\nWorkbenchTreeInternals = __decorate([\n    __param(4, IContextKeyService),\n    __param(5, IListService),\n    __param(6, IThemeService),\n    __param(7, IConfigurationService)\n], WorkbenchTreeInternals);\nconst configurationRegistry = Registry.as(ConfigurationExtensions.Configuration);\nconfigurationRegistry.registerConfiguration({\n    id: 'workbench',\n    order: 7,\n    title: localize('workbenchConfigurationTitle', \"Workbench\"),\n    type: 'object',\n    properties: {\n        [multiSelectModifierSettingKey]: {\n            type: 'string',\n            enum: ['ctrlCmd', 'alt'],\n            markdownEnumDescriptions: [\n                localize('multiSelectModifier.ctrlCmd', \"Maps to `Control` on Windows and Linux and to `Command` on macOS.\"),\n                localize('multiSelectModifier.alt', \"Maps to `Alt` on Windows and Linux and to `Option` on macOS.\")\n            ],\n            default: 'ctrlCmd',\n            description: localize({\n                key: 'multiSelectModifier',\n                comment: [\n                    '- `ctrlCmd` refers to a value the setting can take and should not be localized.',\n                    '- `Control` and `Command` refer to the modifier keys Ctrl or Cmd on the keyboard and can be localized.'\n                ]\n            }, \"The modifier to be used to add an item in trees and lists to a multi-selection with the mouse (for example in the explorer, open editors and scm view). The 'Open to Side' mouse gestures - if supported - will adapt such that they do not conflict with the multiselect modifier.\")\n        },\n        [openModeSettingKey]: {\n            type: 'string',\n            enum: ['singleClick', 'doubleClick'],\n            default: 'singleClick',\n            description: localize({\n                key: 'openModeModifier',\n                comment: ['`singleClick` and `doubleClick` refers to a value the setting can take and should not be localized.']\n            }, \"Controls how to open items in trees and lists using the mouse (if supported). Note that some trees and lists might choose to ignore this setting if it is not applicable.\")\n        },\n        [horizontalScrollingKey]: {\n            type: 'boolean',\n            default: false,\n            description: localize('horizontalScrolling setting', \"Controls whether lists and trees support horizontal scrolling in the workbench. Warning: turning on this setting has a performance implication.\")\n        },\n        [treeIndentKey]: {\n            type: 'number',\n            default: 8,\n            minimum: 4,\n            maximum: 40,\n            description: localize('tree indent setting', \"Controls tree indentation in pixels.\")\n        },\n        [treeRenderIndentGuidesKey]: {\n            type: 'string',\n            enum: ['none', 'onHover', 'always'],\n            default: 'onHover',\n            description: localize('render tree indent guides', \"Controls whether the tree should render indent guides.\")\n        },\n        [listSmoothScrolling]: {\n            type: 'boolean',\n            default: false,\n            description: localize('list smoothScrolling setting', \"Controls whether lists and trees have smooth scrolling.\"),\n        },\n        [mouseWheelScrollSensitivityKey]: {\n            type: 'number',\n            default: 1,\n            markdownDescription: localize('Mouse Wheel Scroll Sensitivity', \"A multiplier to be used on the `deltaX` and `deltaY` of mouse wheel scroll events.\")\n        },\n        [fastScrollSensitivityKey]: {\n            type: 'number',\n            default: 5,\n            description: localize('Fast Scroll Sensitivity', \"Scrolling speed multiplier when pressing `Alt`.\")\n        },\n        [defaultFindModeSettingKey]: {\n            type: 'string',\n            enum: ['highlight', 'filter'],\n            enumDescriptions: [\n                localize('defaultFindModeSettingKey.highlight', \"Highlight elements when searching. Further up and down navigation will traverse only the highlighted elements.\"),\n                localize('defaultFindModeSettingKey.filter', \"Filter elements when searching.\")\n            ],\n            default: 'highlight',\n            description: localize('defaultFindModeSettingKey', \"Controls the default find mode for lists and trees in the workbench.\")\n        },\n        [keyboardNavigationSettingKey]: {\n            type: 'string',\n            enum: ['simple', 'highlight', 'filter'],\n            enumDescriptions: [\n                localize('keyboardNavigationSettingKey.simple', \"Simple keyboard navigation focuses elements which match the keyboard input. Matching is done only on prefixes.\"),\n                localize('keyboardNavigationSettingKey.highlight', \"Highlight keyboard navigation highlights elements which match the keyboard input. Further up and down navigation will traverse only the highlighted elements.\"),\n                localize('keyboardNavigationSettingKey.filter', \"Filter keyboard navigation will filter out and hide all the elements which do not match the keyboard input.\")\n            ],\n            default: 'highlight',\n            description: localize('keyboardNavigationSettingKey', \"Controls the keyboard navigation style for lists and trees in the workbench. Can be simple, highlight and filter.\"),\n            deprecated: true,\n            deprecationMessage: localize('keyboardNavigationSettingKeyDeprecated', \"Please use 'workbench.list.defaultFindMode' instead.\")\n        },\n        [treeExpandMode]: {\n            type: 'string',\n            enum: ['singleClick', 'doubleClick'],\n            default: 'singleClick',\n            description: localize('expand mode', \"Controls how tree folders are expanded when clicking the folder names. Note that some trees and lists might choose to ignore this setting if it is not applicable.\"),\n        }\n    }\n});\n"],"names":["IDialogService","createDecorator","CodeDataTransfers","EDITORS","FILES","extractEditorsDropData","e","_a","editors","dataTransfer","types","length","rawEditorsData","getData","push","parse","error","rawResourcesData","DataTransfers","resourcesRaw","JSON","resourceRaw","indexOf","extractSelection","URI","selection","uri","resource","options","createDraggedEditorInputFromRawResourcesData","files","i","file","path","isExternal","allowWorkspaceOpen","rawCodeFiles","codeFiles","codeFile","contributions","Registry","Extensions","DragAndDropContribution","getAll","contribution","data","dataFormatKey","getEditorInputs","DragAndDropContributionRegistry","this","_contributions","Map","values","EditorOpenSource","ExtensionIdentifier","value","_lower","toLowerCase","id","FileKind","__decorate","decorators","target","key","desc","d","c","arguments","r","Object","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","historyNavigationVisible","RawContextKey","localize","HistoryNavigationWidgetFocusContext","HistoryNavigationForwardsEnablementContext","HistoryNavigationBackwardsEnablementContext","lastFocusedWidget","undefined","widgets","registerAndCreateHistoryNavigationContext","contextKeyService","widget","includes","Error","disposableStore","DisposableStore","scopedContextKeyService","add","createScoped","element","historyNavigationWidgetFocus","bindTo","historyNavigationForwardsEnablement","historyNavigationBackwardsEnablement","onDidFocus","set","onDidBlur","document","activeElement","toDisposable","splice","dispose","ContextScopedFindInput","container","contextViewProvider","showFindOptions","_register","inputBox","FindInput","IContextKeyService","ContextScopedReplaceInput","showReplaceOptions","ReplaceInput","KeybindingsRegistry","weight","when","ContextKeyExpr","isEqualTo","primary","secondary","handler","accessor","showPreviousValue","showNextValue","showHistoryKeybindingHint","keybindingService","_b","lookupKeybinding","getElectronAccelerator","SyncDescriptor","ctor","staticArguments","supportsDelayedInstantiation","_registry","registerSingleton","ctorOrDescriptor","getSingletonServiceDescriptors","_util","serviceIds","DI_TARGET","DI_DEPENDENCIES","getServiceDependencies","IInstantiationService","storeServiceDependency","index","serviceId","has","get","toString","Node","incoming","outgoing","Graph","_hashFn","_nodes","ret","node","size","from","to","fromNode","lookupOrInsertNode","toNode","delete","keys","join","seen","Set","res","_findCycle","CyclicDependencyError","graph","message","findCycleSlow","InstantiationService","services","ServiceCollection","strict","parent","_activeInstantiations","_services","_strict","_parent","fn","_trace","Trace","traceInvocation","_done","illegalState","result","_getOrCreateServiceInstance","args","stop","rest","traceCreation","_createInstance","concat","serviceDependencies","sort","a","b","serviceArgs","dependency","service","_throwIfStrict","name","firstServiceArgPos","console","trace","delta","Array","slice","instance","_setServiceInstance","instanceOrDesc","_getServiceInstanceOrDescriptor","thing","_safeCreateAndCacheServiceInstance","branch","_createAndCacheServiceInstance","cycleCount","stack","item","pop","insertEdge","roots","isEmpty","_createServiceInstanceWithOwner","removeNode","_createServiceInstance","_supportsDelayedInstantiation","idle","IdleValue","Proxy","create","obj","prop","bind","_target","p","msg","printWarning","warn","type","_start","Date","now","_dep","first","child","dur","_totals","causedCreation","lines","printChild","n","prefix","nested","toFixed","log","_None","_entries","entries","instanceOrDescriptor","JSONContribution","jsonContributionRegistry","JSONContributionRegistry","_onDidChangeSchema","Emitter","schemasById","unresolvedSchemaContent","charAt","substring","fire","platform","HIGH_FREQ_COMMANDS","AbstractKeybindingService","_contextKeyService","_commandService","_telemetryService","_notificationService","_logService","_onDidUpdateKeybindings","_currentChord","_currentChordChecker","IntervalTimer","_currentChordStatusMessage","_ignoreSingleModifiers","KeybindingModifierSet","EMPTY","_currentSingleModifier","_currentSingleModifierClearTimeout","TimeoutTimer","_logging","event","Event","str","info","_getResolver","getKeybindings","commandId","context","lookupPrimaryKeybinding","resolvedKeybinding","_dispatch","_log","keybinding","resolveKeyboardEvent","isChord","getDispatchParts","firstPart","contextValue","getContext","currentChord","keypress","resolve","keypressLabel","label","status","nls","chordEnterTime","cancelAndSet","_documentHasFocus","_leaveChordMode","cancel","_doDispatch","getSingleModifierDispatchParts","singleModifier","getParts","isSingleModiferChord","shouldPreventDefault","dispatchKeyname","getLabel","resolveResult","enterChord","_enterChordMode","hideAfter","bubble","commandArgs","executeCommand","then","err","test","publicLog2","ctrlKey","metaKey","keyCode","Disposable","source","_ctrlKey","_shiftKey","shiftKey","_altKey","altKey","_metaKey","modifier","IKeybindingService","KeybindingResolver","defaultKeybindings","overrides","_defaultKeybindings","_defaultBoundCommands","command","_map","_lookupMap","_keybindings","handleRemovals","len","k","keypressParts","_addKeyPress","conflicts","_addToLookupMap","conflict","conflictIsChord","itemIsChord","whenIsEntirelyIncluded","_removeFromLookupMap","arr","items","contextMatchesRules","lookupMap","candidates","candidate","_findCommand","printWhenExplanation","printSourceExplanation","leaveChord","matches","_contextMatchesRules","defaultKb","keypressFirstPart","keypressChordPart","expressionsAreEqualWithConstantSubstitution","rules","removals","rule","commandRemovals","isDefault","isRemoved","commandRemoval","_isTargetedForRemoval","implies","evaluate","serialize","kb","extensionId","isBuiltinExtension","KeybindingsRegistryImpl","_coreKeybindings","_extensionKeybindings","_cachedMergedKeybindings","actualKb","bindToCurrentPlatform","kk","createKeybinding","OS","_registerDefaultKeybinding","isArray","registerKeybindingRule","CommandsRegistry","_mightProduceChar","weight1","weight2","_assertNoCtrlAlt","parts","sorter","win","mac","linux","ResolvedKeybindingItem","_resolvedKeybindingItemBrand","removeElementsAfterNulls","charCodeAt","substr","BaseResolvedKeybinding","os","illegalArgument","_os","_parts","UILabelProvider","_getLabel","AriaLabelProvider","_getAriaLabel","isDuplicateModifierCase","ElectronAcceleratorLabelProvider","_getElectronAccelerator","map","_getPart","ResolvedKeybindingPart","_getDispatchPart","_getSingleModifierDispatchPart","ResolvedKeybinding","USLayoutResolvedKeybinding","actual","KeyCodeUtils","_keyCodeToUILabel","getDispatchStr","isModifierKey","scanCode","immutableKeyCode","IMMUTABLE_CODE_TO_KEY_CODE","binding","SimpleKeybinding","_scanCodeToKeyCode","input","_resolveSimpleUserBinding","ChordKeybinding","ILabelService","ILayoutService","IListService","ListService","_themeService","disposables","lists","_lastFocusedWidget","_hasCreatedStyleController","getHTMLElement","classList","remove","extraContextKeys","styleController","DefaultStyleController","createStyleSheet","attachListStyler","some","l","registeredList","setLastFocusedList","combinedDisposable","onDidDispose","filter","IThemeService","RawWorkbenchListFocusContextKey","WorkbenchListSupportsMultiSelectContextKey","WorkbenchListFocusContextKey","InputFocusedContextKey","WorkbenchListHasSelectionOrFocus","WorkbenchListDoubleSelection","WorkbenchListMultiSelection","WorkbenchListSelectionNavigation","WorkbenchListSupportsFind","WorkbenchTreeElementCanCollapse","WorkbenchTreeElementHasParent","WorkbenchTreeElementCanExpand","WorkbenchTreeElementHasChild","WorkbenchTreeFindOpen","WorkbenchListTypeNavigationModeKey","WorkbenchListAutomaticKeyboardNavigationLegacyKey","createScopedContextKeyService","multiSelectModifierSettingKey","openModeSettingKey","horizontalScrollingKey","defaultFindModeSettingKey","keyboardNavigationSettingKey","treeIndentKey","treeRenderIndentGuidesKey","listSmoothScrolling","mouseWheelScrollSensitivityKey","fastScrollSensitivityKey","treeExpandMode","useAltAsMultipleSelectionModifier","configurationService","getValue","MultipleSelectionController","registerListeners","onDidChangeConfiguration","affectsConfiguration","browserEvent","isSelectionSingleChangeEvent","isSelectionRangeChangeEvent","toWorkbenchListOptions","IConfigurationService","assign","keyboardNavigationDelegate","mightProducePrintableCharacter","smoothScrolling","Boolean","mouseWheelScrollSensitivity","fastScrollSensitivity","multipleSelectionController","keyboardNavigationEventFilter","createKeyboardNavigationEventFilter","WorkbenchList","user","delegate","renderers","listService","themeService","instantiationService","horizontalScrolling","invokeFunction","workbenchListOptions","workbenchListOptionsDisposable","keyboardSupport","computeStyles","getColorTheme","defaultListStyles","listSupportsMultiSelect","multipleSelectionSupport","selectionNavigation","listHasSelectionOrFocus","listDoubleSelection","listMultiSelection","_useAltAsMultipleSelectionModifier","register","overrideStyles","updateStyles","onDidChangeSelection","getSelection","focus","getFocus","bufferChangeEvents","onDidChangeFocus","updateOptions","navigator","ListResourceNavigator","styles","_styler","List","WorkbenchPagedList","PagedList","WorkbenchTable","columns","TableResourceNavigator","Table","ResourceNavigator","_onDidOpen","onDidOpen","KeyboardEvent","onSelectionFromKeyboard","onPointer","onMouseDblClick","openOnSingleClick","elements","selectionKeyboardEvent","preserveFocus","pinned","_open","getSelectedElement","detail","button","sideBySide","contains","offsetX","editorOptions","revealIfVisible","getSelectedElements","TreeResourceNavigator","inChord","toKeybinding","softDispatch","WorkbenchObjectTree","workbenchTreeDataPreamble","treeOptions","getTypeNavigationMode","disposable","internals","WorkbenchTreeInternals","ObjectTree","WorkbenchCompressibleObjectTree","updateStyleOverrides","CompressibleObjectTree","WorkbenchDataTree","dataSource","DataTree","WorkbenchAsyncDataTree","AsyncDataTree","WorkbenchCompressibleAsyncDataTree","virtualDelegate","compressionDelegate","CompressibleAsyncDataTree","getDefaultTreeFindMode","TreeFindMode","deprecatedValue","contextViewService","IContextViewService","additionalScrollHeight","modeString","getContextKeyValue","TypeNavigationMode","indent","renderIndentGuides","defaultFindMode","hideTwistiesOfChildlessElements","expandOnlyOnTwistieClick","tree","listSupportFindWidget","findWidgetEnabled","hasSelectionOrFocus","hasDoubleSelection","hasMultiSelection","treeElementCanCollapse","treeElementHasParent","treeElementCanExpand","treeElementHasChild","treeFindOpen","updateCollapseContextKeys","getNode","collapsible","collapsed","getParentElement","getFirstElementChild","interestingContextKeys","onDidChangeCollapseState","onDidChangeModel","onDidChangeFindOpenState","enabled","newOptions","onDidChangeContext","affectsSome","typeNavigationMode","styler","ConfigurationExtensions","registerConfiguration","order","title","properties","enum","markdownEnumDescriptions","default","description","comment","minimum","maximum","markdownDescription","enumDescriptions","deprecated","deprecationMessage"],"sourceRoot":""}