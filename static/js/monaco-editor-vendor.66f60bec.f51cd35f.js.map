{"version":3,"file":"static/js/monaco-editor-vendor.66f60bec.f51cd35f.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/base/common/mime.js","../node_modules/monaco-editor/esm/vs/base/common/navigator.js","../node_modules/monaco-editor/esm/vs/base/common/network.js","../node_modules/monaco-editor/esm/vs/base/common/numbers.js","../node_modules/monaco-editor/esm/vs/base/common/objects.js","../node_modules/monaco-editor/esm/vs/base/common/observableImpl/utils.js","../node_modules/monaco-editor/esm/vs/base/common/observableImpl/autorun.js","../node_modules/monaco-editor/esm/vs/base/common/observableImpl/base.js","../node_modules/monaco-editor/esm/vs/base/common/observableImpl/derived.js","../node_modules/monaco-editor/esm/vs/base/common/observableImpl/logging.js","../node_modules/monaco-editor/esm/vs/base/common/process.js","../node_modules/monaco-editor/esm/vs/base/common/path.js","../node_modules/monaco-editor/esm/vs/base/common/platform.js","../node_modules/monaco-editor/esm/vs/base/common/range.js","../node_modules/monaco-editor/esm/vs/base/common/resources.js","../node_modules/monaco-editor/esm/vs/base/common/scrollable.js","../node_modules/monaco-editor/esm/vs/base/common/search.js","../node_modules/monaco-editor/esm/vs/base/common/severity.js","../node_modules/monaco-editor/esm/vs/base/common/stopwatch.js","../node_modules/monaco-editor/esm/vs/base/common/strings.js","../node_modules/monaco-editor/esm/vs/base/common/symbols.js","../node_modules/monaco-editor/esm/vs/base/common/ternarySearchTree.js","../node_modules/monaco-editor/esm/vs/base/common/themables.js","../node_modules/monaco-editor/esm/vs/base/common/types.js","../node_modules/monaco-editor/esm/vs/base/common/uint.js","../node_modules/monaco-editor/esm/vs/base/common/uri.js","../node_modules/monaco-editor/esm/vs/base/common/uuid.js"],"sourcesContent":["export const Mimes = Object.freeze({\n    text: 'text/plain',\n    binary: 'application/octet-stream',\n    unknown: 'application/unknown',\n    markdown: 'text/markdown',\n    latex: 'text/latex',\n    uriList: 'text/uri-list',\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class ArrayNavigator {\n    constructor(items, start = 0, end = items.length, index = start - 1) {\n        this.items = items;\n        this.start = start;\n        this.end = end;\n        this.index = index;\n    }\n    current() {\n        if (this.index === this.start - 1 || this.index === this.end) {\n            return null;\n        }\n        return this.items[this.index];\n    }\n    next() {\n        this.index = Math.min(this.index + 1, this.end);\n        return this.current();\n    }\n    previous() {\n        this.index = Math.max(this.index - 1, this.start - 1);\n        return this.current();\n    }\n    first() {\n        this.index = this.start;\n        return this.current();\n    }\n    last() {\n        this.index = this.end - 1;\n        return this.current();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as errors from './errors.js';\nimport * as platform from './platform.js';\nimport { URI } from './uri.js';\nexport var Schemas;\n(function (Schemas) {\n    /**\n     * A schema that is used for models that exist in memory\n     * only and that have no correspondence on a server or such.\n     */\n    Schemas.inMemory = 'inmemory';\n    /**\n     * A schema that is used for setting files\n     */\n    Schemas.vscode = 'vscode';\n    /**\n     * A schema that is used for internal private files\n     */\n    Schemas.internal = 'private';\n    /**\n     * A walk-through document.\n     */\n    Schemas.walkThrough = 'walkThrough';\n    /**\n     * An embedded code snippet.\n     */\n    Schemas.walkThroughSnippet = 'walkThroughSnippet';\n    Schemas.http = 'http';\n    Schemas.https = 'https';\n    Schemas.file = 'file';\n    Schemas.mailto = 'mailto';\n    Schemas.untitled = 'untitled';\n    Schemas.data = 'data';\n    Schemas.command = 'command';\n    Schemas.vscodeRemote = 'vscode-remote';\n    Schemas.vscodeRemoteResource = 'vscode-remote-resource';\n    Schemas.vscodeManagedRemoteResource = 'vscode-managed-remote-resource';\n    Schemas.vscodeUserData = 'vscode-userdata';\n    Schemas.vscodeCustomEditor = 'vscode-custom-editor';\n    Schemas.vscodeNotebookCell = 'vscode-notebook-cell';\n    Schemas.vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n    Schemas.vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n    Schemas.vscodeInteractiveInput = 'vscode-interactive-input';\n    Schemas.vscodeSettings = 'vscode-settings';\n    Schemas.vscodeWorkspaceTrust = 'vscode-workspace-trust';\n    Schemas.vscodeTerminal = 'vscode-terminal';\n    Schemas.vscodeChatSesssion = 'vscode-chat-editor';\n    /**\n     * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n     */\n    Schemas.webviewPanel = 'webview-panel';\n    /**\n     * Scheme used for loading the wrapper html and script in webviews.\n     */\n    Schemas.vscodeWebview = 'vscode-webview';\n    /**\n     * Scheme used for extension pages\n     */\n    Schemas.extension = 'extension';\n    /**\n     * Scheme used as a replacement of `file` scheme to load\n     * files with our custom protocol handler (desktop only).\n     */\n    Schemas.vscodeFileResource = 'vscode-file';\n    /**\n     * Scheme used for temporary resources\n     */\n    Schemas.tmp = 'tmp';\n    /**\n     * Scheme used vs live share\n     */\n    Schemas.vsls = 'vsls';\n    /**\n     * Scheme used for the Source Control commit input's text document\n     */\n    Schemas.vscodeSourceControl = 'vscode-scm';\n})(Schemas || (Schemas = {}));\nexport const connectionTokenQueryName = 'tkn';\nclass RemoteAuthoritiesImpl {\n    constructor() {\n        this._hosts = Object.create(null);\n        this._ports = Object.create(null);\n        this._connectionTokens = Object.create(null);\n        this._preferredWebSchema = 'http';\n        this._delegate = null;\n        this._remoteResourcesPath = `/${Schemas.vscodeRemoteResource}`;\n    }\n    setPreferredWebSchema(schema) {\n        this._preferredWebSchema = schema;\n    }\n    rewrite(uri) {\n        if (this._delegate) {\n            try {\n                return this._delegate(uri);\n            }\n            catch (err) {\n                errors.onUnexpectedError(err);\n                return uri;\n            }\n        }\n        const authority = uri.authority;\n        let host = this._hosts[authority];\n        if (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n            host = `[${host}]`;\n        }\n        const port = this._ports[authority];\n        const connectionToken = this._connectionTokens[authority];\n        let query = `path=${encodeURIComponent(uri.path)}`;\n        if (typeof connectionToken === 'string') {\n            query += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n        }\n        return URI.from({\n            scheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n            authority: `${host}:${port}`,\n            path: this._remoteResourcesPath,\n            query\n        });\n    }\n}\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\nclass FileAccessImpl {\n    /**\n     * Returns a URI to use in contexts where the browser is responsible\n     * for loading (e.g. fetch()) or when used within the DOM.\n     *\n     * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n     */\n    uriToBrowserUri(uri) {\n        // Handle remote URIs via `RemoteAuthorities`\n        if (uri.scheme === Schemas.vscodeRemote) {\n            return RemoteAuthorities.rewrite(uri);\n        }\n        // Convert to `vscode-file` resource..\n        if (\n        // ...only ever for `file` resources\n        uri.scheme === Schemas.file &&\n            (\n            // ...and we run in native environments\n            platform.isNative ||\n                // ...or web worker extensions on desktop\n                (platform.isWebWorker && platform.globals.origin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`))) {\n            return uri.with({\n                scheme: Schemas.vscodeFileResource,\n                // We need to provide an authority here so that it can serve\n                // as origin for network and loading matters in chromium.\n                // If the URI is not coming with an authority already, we\n                // add our own\n                authority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n                query: null,\n                fragment: null\n            });\n        }\n        return uri;\n    }\n}\nFileAccessImpl.FALLBACK_AUTHORITY = 'vscode-app';\nexport const FileAccess = new FileAccessImpl();\nexport var COI;\n(function (COI) {\n    const coiHeaders = new Map([\n        ['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n        ['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n        ['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n    ]);\n    COI.CoopAndCoep = Object.freeze(coiHeaders.get('3'));\n    const coiSearchParamName = 'vscode-coi';\n    /**\n     * Extract desired headers from `vscode-coi` invocation\n     */\n    function getHeadersFromQuery(url) {\n        let params;\n        if (typeof url === 'string') {\n            params = new URL(url).searchParams;\n        }\n        else if (url instanceof URL) {\n            params = url.searchParams;\n        }\n        else if (URI.isUri(url)) {\n            params = new URL(url.toString(true)).searchParams;\n        }\n        const value = params === null || params === void 0 ? void 0 : params.get(coiSearchParamName);\n        if (!value) {\n            return undefined;\n        }\n        return coiHeaders.get(value);\n    }\n    COI.getHeadersFromQuery = getHeadersFromQuery;\n    /**\n     * Add the `vscode-coi` query attribute based on wanting `COOP` and `COEP`. Will be a noop when `crossOriginIsolated`\n     * isn't enabled the current context\n     */\n    function addSearchParam(urlOrSearch, coop, coep) {\n        if (!globalThis.crossOriginIsolated) {\n            // depends on the current context being COI\n            return;\n        }\n        const value = coop && coep ? '3' : coep ? '2' : '1';\n        if (urlOrSearch instanceof URLSearchParams) {\n            urlOrSearch.set(coiSearchParamName, value);\n        }\n        else {\n            urlOrSearch[coiSearchParamName] = value;\n        }\n    }\n    COI.addSearchParam = addSearchParam;\n})(COI || (COI = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\nexport class MovingAverage {\n    constructor() {\n        this._n = 1;\n        this._val = 0;\n    }\n    update(value) {\n        this._val = this._val + (value - this._val) / this._n;\n        this._n += 1;\n        return this._val;\n    }\n    get value() {\n        return this._val;\n    }\n}\nexport class SlidingWindowAverage {\n    constructor(size) {\n        this._n = 0;\n        this._val = 0;\n        this._values = [];\n        this._index = 0;\n        this._sum = 0;\n        this._values = new Array(size);\n        this._values.fill(0, 0, size);\n    }\n    update(value) {\n        const oldValue = this._values[this._index];\n        this._values[this._index] = value;\n        this._index = (this._index + 1) % this._values.length;\n        this._sum -= oldValue;\n        this._sum += value;\n        if (this._n < this._values.length) {\n            this._n += 1;\n        }\n        this._val = this._sum / this._n;\n        return this._val;\n    }\n    get value() {\n        return this._val;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isTypedArray, isObject, isUndefinedOrNull } from './types.js';\nexport function deepClone(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    if (obj instanceof RegExp) {\n        return obj;\n    }\n    const result = Array.isArray(obj) ? [] : {};\n    Object.entries(obj).forEach(([key, value]) => {\n        result[key] = value && typeof value === 'object' ? deepClone(value) : value;\n    });\n    return result;\n}\nexport function deepFreeze(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    const stack = [obj];\n    while (stack.length > 0) {\n        const obj = stack.shift();\n        Object.freeze(obj);\n        for (const key in obj) {\n            if (_hasOwnProperty.call(obj, key)) {\n                const prop = obj[key];\n                if (typeof prop === 'object' && !Object.isFrozen(prop) && !isTypedArray(prop)) {\n                    stack.push(prop);\n                }\n            }\n        }\n    }\n    return obj;\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function cloneAndChange(obj, changer) {\n    return _cloneAndChange(obj, changer, new Set());\n}\nfunction _cloneAndChange(obj, changer, seen) {\n    if (isUndefinedOrNull(obj)) {\n        return obj;\n    }\n    const changed = changer(obj);\n    if (typeof changed !== 'undefined') {\n        return changed;\n    }\n    if (Array.isArray(obj)) {\n        const r1 = [];\n        for (const e of obj) {\n            r1.push(_cloneAndChange(e, changer, seen));\n        }\n        return r1;\n    }\n    if (isObject(obj)) {\n        if (seen.has(obj)) {\n            throw new Error('Cannot clone recursive data-structure');\n        }\n        seen.add(obj);\n        const r2 = {};\n        for (const i2 in obj) {\n            if (_hasOwnProperty.call(obj, i2)) {\n                r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n            }\n        }\n        seen.delete(obj);\n        return r2;\n    }\n    return obj;\n}\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination, source, overwrite = true) {\n    if (!isObject(destination)) {\n        return source;\n    }\n    if (isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (key in destination) {\n                if (overwrite) {\n                    if (isObject(destination[key]) && isObject(source[key])) {\n                        mixin(destination[key], source[key], overwrite);\n                    }\n                    else {\n                        destination[key] = source[key];\n                    }\n                }\n            }\n            else {\n                destination[key] = source[key];\n            }\n        });\n    }\n    return destination;\n}\nexport function equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    let i;\n    let key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        const oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        const otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function getAllPropertyNames(obj) {\n    let res = [];\n    while (Object.prototype !== obj) {\n        res = res.concat(Object.getOwnPropertyNames(obj));\n        obj = Object.getPrototypeOf(obj);\n    }\n    return res;\n}\nexport function getAllMethodNames(obj) {\n    const methods = [];\n    for (const prop of getAllPropertyNames(obj)) {\n        if (typeof obj[prop] === 'function') {\n            methods.push(prop);\n        }\n    }\n    return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    const result = {};\n    for (const methodName of methodNames) {\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toDisposable } from '../lifecycle.js';\nimport { autorun } from './autorun.js';\nimport { BaseObservable, ConvenientObservable, getFunctionName, transaction } from './base.js';\nimport { getLogger } from './logging.js';\nexport function constObservable(value) {\n    return new ConstObservable(value);\n}\nclass ConstObservable extends ConvenientObservable {\n    constructor(value) {\n        super();\n        this.value = value;\n    }\n    get debugName() {\n        return this.toString();\n    }\n    get() {\n        return this.value;\n    }\n    addObserver(observer) {\n        // NO OP\n    }\n    removeObserver(observer) {\n        // NO OP\n    }\n    toString() {\n        return `Const: ${this.value}`;\n    }\n}\nexport function waitForState(observable, predicate) {\n    return new Promise(resolve => {\n        let didRun = false;\n        let shouldDispose = false;\n        const d = autorun('waitForState', reader => {\n            const currentState = observable.read(reader);\n            if (predicate(currentState)) {\n                if (!didRun) {\n                    shouldDispose = true;\n                }\n                else {\n                    d.dispose();\n                }\n                resolve(currentState);\n            }\n        });\n        didRun = true;\n        if (shouldDispose) {\n            d.dispose();\n        }\n    });\n}\nexport function observableFromEvent(event, getValue) {\n    return new FromEventObservable(event, getValue);\n}\nexport class FromEventObservable extends BaseObservable {\n    constructor(event, getValue) {\n        super();\n        this.event = event;\n        this.getValue = getValue;\n        this.hasValue = false;\n        this.handleEvent = (args) => {\n            var _a;\n            const newValue = this.getValue(args);\n            const didChange = !this.hasValue || this.value !== newValue;\n            (_a = getLogger()) === null || _a === void 0 ? void 0 : _a.handleFromEventObservableTriggered(this, { oldValue: this.value, newValue, change: undefined, didChange });\n            if (didChange) {\n                this.value = newValue;\n                if (this.hasValue) {\n                    transaction((tx) => {\n                        for (const o of this.observers) {\n                            tx.updateObserver(o, this);\n                            o.handleChange(this, undefined);\n                        }\n                    }, () => {\n                        const name = this.getDebugName();\n                        return 'Event fired' + (name ? `: ${name}` : '');\n                    });\n                }\n                this.hasValue = true;\n            }\n        };\n    }\n    getDebugName() {\n        return getFunctionName(this.getValue);\n    }\n    get debugName() {\n        const name = this.getDebugName();\n        return 'From Event' + (name ? `: ${name}` : '');\n    }\n    onFirstObserverAdded() {\n        this.subscription = this.event(this.handleEvent);\n    }\n    onLastObserverRemoved() {\n        this.subscription.dispose();\n        this.subscription = undefined;\n        this.hasValue = false;\n        this.value = undefined;\n    }\n    get() {\n        if (this.subscription) {\n            if (!this.hasValue) {\n                this.handleEvent(undefined);\n            }\n            return this.value;\n        }\n        else {\n            // no cache, as there are no subscribers to keep it updated\n            return this.getValue(undefined);\n        }\n    }\n}\n(function (observableFromEvent) {\n    observableFromEvent.Observer = FromEventObservable;\n})(observableFromEvent || (observableFromEvent = {}));\nexport function observableSignalFromEvent(debugName, event) {\n    return new FromEventObservableSignal(debugName, event);\n}\nclass FromEventObservableSignal extends BaseObservable {\n    constructor(debugName, event) {\n        super();\n        this.debugName = debugName;\n        this.event = event;\n        this.handleEvent = () => {\n            transaction((tx) => {\n                for (const o of this.observers) {\n                    tx.updateObserver(o, this);\n                    o.handleChange(this, undefined);\n                }\n            }, () => this.debugName);\n        };\n    }\n    onFirstObserverAdded() {\n        this.subscription = this.event(this.handleEvent);\n    }\n    onLastObserverRemoved() {\n        this.subscription.dispose();\n        this.subscription = undefined;\n    }\n    get() {\n        // NO OP\n    }\n}\n/**\n * Creates a signal that can be triggered to invalidate observers.\n */\nexport function observableSignal(debugName) {\n    return new ObservableSignal(debugName);\n}\nclass ObservableSignal extends BaseObservable {\n    constructor(debugName) {\n        super();\n        this.debugName = debugName;\n    }\n    trigger(tx, change) {\n        if (!tx) {\n            transaction(tx => {\n                this.trigger(tx, change);\n            }, () => `Trigger signal ${this.debugName}`);\n            return;\n        }\n        for (const o of this.observers) {\n            tx.updateObserver(o, this);\n            o.handleChange(this, change);\n        }\n    }\n    get() {\n        // NO OP\n    }\n}\n// TODO@hediet: Have `keepCacheAlive` and `recomputeOnChange` instead of forceRecompute\n/**\n * This ensures the observable is being observed.\n * Observed observables (such as {@link derived}s) can maintain a cache, as they receive invalidation events.\n * Unobserved observables are forced to recompute their value from scratch every time they are read.\n *\n * @param observable the observable to keep alive\n * @param forceRecompute if true, the observable will be eagerly recomputed after it changed.\n * Use this if recomputing the observables causes side-effects.\n*/\nexport function keepAlive(observable, forceRecompute) {\n    const o = new KeepAliveObserver(forceRecompute !== null && forceRecompute !== void 0 ? forceRecompute : false);\n    observable.addObserver(o);\n    if (forceRecompute) {\n        observable.reportChanges();\n    }\n    return toDisposable(() => {\n        observable.removeObserver(o);\n    });\n}\nclass KeepAliveObserver {\n    constructor(forceRecompute) {\n        this.forceRecompute = forceRecompute;\n        this.counter = 0;\n    }\n    beginUpdate(observable) {\n        this.counter++;\n    }\n    endUpdate(observable) {\n        this.counter--;\n        if (this.counter === 0 && this.forceRecompute) {\n            observable.reportChanges();\n        }\n    }\n    handlePossibleChange(observable) {\n        // NO OP\n    }\n    handleChange(observable, change) {\n        // NO OP\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { assertFn } from '../assert.js';\nimport { DisposableStore, toDisposable } from '../lifecycle.js';\nimport { getLogger } from './logging.js';\nexport function autorun(debugName, fn) {\n    return new AutorunObserver(debugName, fn, undefined, undefined);\n}\nexport function autorunHandleChanges(debugName, options, fn) {\n    return new AutorunObserver(debugName, fn, options.createEmptyChangeSummary, options.handleChange);\n}\n// TODO@hediet rename to autorunWithStore\nexport function autorunWithStore2(debugName, fn) {\n    return autorunWithStore(fn, debugName);\n}\n// TODO@hediet deprecate, rename to autorunWithStoreEx\nexport function autorunWithStore(fn, debugName) {\n    const store = new DisposableStore();\n    const disposable = autorun(debugName, reader => {\n        store.clear();\n        fn(reader, store);\n    });\n    return toDisposable(() => {\n        disposable.dispose();\n        store.dispose();\n    });\n}\nexport class AutorunObserver {\n    constructor(debugName, runFn, createChangeSummary, _handleChange) {\n        var _a, _b;\n        this.debugName = debugName;\n        this.runFn = runFn;\n        this.createChangeSummary = createChangeSummary;\n        this._handleChange = _handleChange;\n        this.state = 2 /* AutorunState.stale */;\n        this.updateCount = 0;\n        this.disposed = false;\n        this.dependencies = new Set();\n        this.dependenciesToBeRemoved = new Set();\n        this.changeSummary = (_a = this.createChangeSummary) === null || _a === void 0 ? void 0 : _a.call(this);\n        (_b = getLogger()) === null || _b === void 0 ? void 0 : _b.handleAutorunCreated(this);\n        this._runIfNeeded();\n    }\n    dispose() {\n        this.disposed = true;\n        for (const o of this.dependencies) {\n            o.removeObserver(this);\n        }\n        this.dependencies.clear();\n    }\n    _runIfNeeded() {\n        var _a, _b;\n        if (this.state === 3 /* AutorunState.upToDate */) {\n            return;\n        }\n        const emptySet = this.dependenciesToBeRemoved;\n        this.dependenciesToBeRemoved = this.dependencies;\n        this.dependencies = emptySet;\n        this.state = 3 /* AutorunState.upToDate */;\n        (_a = getLogger()) === null || _a === void 0 ? void 0 : _a.handleAutorunTriggered(this);\n        try {\n            const changeSummary = this.changeSummary;\n            this.changeSummary = (_b = this.createChangeSummary) === null || _b === void 0 ? void 0 : _b.call(this);\n            this.runFn(this, changeSummary);\n        }\n        finally {\n            // We don't want our observed observables to think that they are (not even temporarily) not being observed.\n            // Thus, we only unsubscribe from observables that are definitely not read anymore.\n            for (const o of this.dependenciesToBeRemoved) {\n                o.removeObserver(this);\n            }\n            this.dependenciesToBeRemoved.clear();\n        }\n    }\n    toString() {\n        return `Autorun<${this.debugName}>`;\n    }\n    // IObserver implementation\n    beginUpdate() {\n        if (this.state === 3 /* AutorunState.upToDate */) {\n            this.state = 1 /* AutorunState.dependenciesMightHaveChanged */;\n        }\n        this.updateCount++;\n    }\n    endUpdate() {\n        if (this.updateCount === 1) {\n            do {\n                if (this.state === 1 /* AutorunState.dependenciesMightHaveChanged */) {\n                    this.state = 3 /* AutorunState.upToDate */;\n                    for (const d of this.dependencies) {\n                        d.reportChanges();\n                        if (this.state === 2 /* AutorunState.stale */) {\n                            // The other dependencies will refresh on demand\n                            break;\n                        }\n                    }\n                }\n                this._runIfNeeded();\n            } while (this.state !== 3 /* AutorunState.upToDate */);\n        }\n        this.updateCount--;\n        assertFn(() => this.updateCount >= 0);\n    }\n    handlePossibleChange(observable) {\n        if (this.state === 3 /* AutorunState.upToDate */ && this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n            this.state = 1 /* AutorunState.dependenciesMightHaveChanged */;\n        }\n    }\n    handleChange(observable, change) {\n        if (this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n            const shouldReact = this._handleChange ? this._handleChange({\n                changedObservable: observable,\n                change,\n                didChange: o => o === observable,\n            }, this.changeSummary) : true;\n            if (shouldReact) {\n                this.state = 2 /* AutorunState.stale */;\n            }\n        }\n    }\n    // IReader implementation\n    readObservable(observable) {\n        // In case the run action disposes the autorun\n        if (this.disposed) {\n            return observable.get();\n        }\n        observable.addObserver(this);\n        const value = observable.get();\n        this.dependencies.add(observable);\n        this.dependenciesToBeRemoved.delete(observable);\n        return value;\n    }\n}\n(function (autorun) {\n    autorun.Observer = AutorunObserver;\n})(autorun || (autorun = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getLogger } from './logging.js';\nlet _derived;\n/**\n * @internal\n * This is to allow splitting files.\n*/\nexport function _setDerived(derived) {\n    _derived = derived;\n}\nexport class ConvenientObservable {\n    get TChange() { return null; }\n    reportChanges() {\n        this.get();\n    }\n    /** @sealed */\n    read(reader) {\n        if (reader) {\n            return reader.readObservable(this);\n        }\n        else {\n            return this.get();\n        }\n    }\n    /** @sealed */\n    map(fn) {\n        return _derived(() => {\n            const name = getFunctionName(fn);\n            return name !== undefined ? name : `${this.debugName} (mapped)`;\n        }, (reader) => fn(this.read(reader), reader));\n    }\n}\nexport class BaseObservable extends ConvenientObservable {\n    constructor() {\n        super(...arguments);\n        this.observers = new Set();\n    }\n    addObserver(observer) {\n        const len = this.observers.size;\n        this.observers.add(observer);\n        if (len === 0) {\n            this.onFirstObserverAdded();\n        }\n    }\n    removeObserver(observer) {\n        const deleted = this.observers.delete(observer);\n        if (deleted && this.observers.size === 0) {\n            this.onLastObserverRemoved();\n        }\n    }\n    onFirstObserverAdded() { }\n    onLastObserverRemoved() { }\n}\nexport function transaction(fn, getDebugName) {\n    var _a, _b;\n    const tx = new TransactionImpl(fn, getDebugName);\n    try {\n        (_a = getLogger()) === null || _a === void 0 ? void 0 : _a.handleBeginTransaction(tx);\n        fn(tx);\n    }\n    finally {\n        tx.finish();\n        (_b = getLogger()) === null || _b === void 0 ? void 0 : _b.handleEndTransaction();\n    }\n}\nexport function subtransaction(tx, fn, getDebugName) {\n    if (!tx) {\n        transaction(fn, getDebugName);\n    }\n    else {\n        fn(tx);\n    }\n}\nexport class TransactionImpl {\n    constructor(fn, _getDebugName) {\n        this.fn = fn;\n        this._getDebugName = _getDebugName;\n        this.updatingObservers = [];\n    }\n    getDebugName() {\n        if (this._getDebugName) {\n            return this._getDebugName();\n        }\n        return getFunctionName(this.fn);\n    }\n    updateObserver(observer, observable) {\n        this.updatingObservers.push({ observer, observable });\n        observer.beginUpdate(observable);\n    }\n    finish() {\n        const updatingObservers = this.updatingObservers;\n        // Prevent anyone from updating observers from now on.\n        this.updatingObservers = null;\n        for (const { observer, observable } of updatingObservers) {\n            observer.endUpdate(observable);\n        }\n    }\n}\nexport function getFunctionName(fn) {\n    const fnSrc = fn.toString();\n    // Pattern: /** @description ... */\n    const regexp = /\\/\\*\\*\\s*@description\\s*([^*]*)\\*\\//;\n    const match = regexp.exec(fnSrc);\n    const result = match ? match[1] : undefined;\n    return result === null || result === void 0 ? void 0 : result.trim();\n}\n/**\n * Creates an observable value.\n * Observers get informed when the value changes.\n */\nexport function observableValue(name, initialValue) {\n    return new ObservableValue(name, initialValue);\n}\nexport class ObservableValue extends BaseObservable {\n    constructor(debugName, initialValue) {\n        super();\n        this.debugName = debugName;\n        this._value = initialValue;\n    }\n    get() {\n        return this._value;\n    }\n    set(value, tx, change) {\n        var _a;\n        if (this._value === value) {\n            return;\n        }\n        let _tx;\n        if (!tx) {\n            tx = _tx = new TransactionImpl(() => { }, () => `Setting ${this.debugName}`);\n        }\n        try {\n            const oldValue = this._value;\n            this._setValue(value);\n            (_a = getLogger()) === null || _a === void 0 ? void 0 : _a.handleObservableChanged(this, { oldValue, newValue: value, change, didChange: true });\n            for (const observer of this.observers) {\n                tx.updateObserver(observer, this);\n                observer.handleChange(this, change);\n            }\n        }\n        finally {\n            if (_tx) {\n                _tx.finish();\n            }\n        }\n    }\n    toString() {\n        return `${this.debugName}: ${this._value}`;\n    }\n    _setValue(newValue) {\n        this._value = newValue;\n    }\n}\nexport function disposableObservableValue(name, initialValue) {\n    return new DisposableObservableValue(name, initialValue);\n}\nexport class DisposableObservableValue extends ObservableValue {\n    _setValue(newValue) {\n        if (this._value === newValue) {\n            return;\n        }\n        if (this._value) {\n            this._value.dispose();\n        }\n        this._value = newValue;\n    }\n    dispose() {\n        var _a;\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError } from '../errors.js';\nimport { DisposableStore } from '../lifecycle.js';\nimport { BaseObservable, _setDerived } from './base.js';\nimport { getLogger } from './logging.js';\nexport function derived(debugName, computeFn) {\n    return new Derived(debugName, computeFn, undefined, undefined, undefined);\n}\nexport function derivedHandleChanges(debugName, options, computeFn) {\n    return new Derived(debugName, computeFn, options.createEmptyChangeSummary, options.handleChange, undefined);\n}\nexport function derivedWithStore(name, computeFn) {\n    const store = new DisposableStore();\n    return new Derived(name, r => {\n        store.clear();\n        return computeFn(r, store);\n    }, undefined, undefined, () => store.dispose());\n}\n_setDerived(derived);\nexport class Derived extends BaseObservable {\n    get debugName() {\n        return typeof this._debugName === 'function' ? this._debugName() : this._debugName;\n    }\n    constructor(_debugName, computeFn, createChangeSummary, _handleChange, _handleLastObserverRemoved = undefined) {\n        var _a, _b;\n        super();\n        this._debugName = _debugName;\n        this.computeFn = computeFn;\n        this.createChangeSummary = createChangeSummary;\n        this._handleChange = _handleChange;\n        this._handleLastObserverRemoved = _handleLastObserverRemoved;\n        this.state = 0 /* DerivedState.initial */;\n        this.value = undefined;\n        this.updateCount = 0;\n        this.dependencies = new Set();\n        this.dependenciesToBeRemoved = new Set();\n        this.changeSummary = undefined;\n        this.changeSummary = (_a = this.createChangeSummary) === null || _a === void 0 ? void 0 : _a.call(this);\n        (_b = getLogger()) === null || _b === void 0 ? void 0 : _b.handleDerivedCreated(this);\n    }\n    onLastObserverRemoved() {\n        var _a;\n        /**\n         * We are not tracking changes anymore, thus we have to assume\n         * that our cache is invalid.\n         */\n        this.state = 0 /* DerivedState.initial */;\n        this.value = undefined;\n        for (const d of this.dependencies) {\n            d.removeObserver(this);\n        }\n        this.dependencies.clear();\n        (_a = this._handleLastObserverRemoved) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n    get() {\n        var _a;\n        if (this.observers.size === 0) {\n            // Without observers, we don't know when to clean up stuff.\n            // Thus, we don't cache anything to prevent memory leaks.\n            const result = this.computeFn(this, (_a = this.createChangeSummary) === null || _a === void 0 ? void 0 : _a.call(this));\n            // Clear new dependencies\n            this.onLastObserverRemoved();\n            return result;\n        }\n        else {\n            do {\n                if (this.state === 1 /* DerivedState.dependenciesMightHaveChanged */) {\n                    // We might not get a notification for a dependency that changed while it is updating,\n                    // thus we also have to ask all our depedencies if they changed in this case.\n                    this.state = 3 /* DerivedState.upToDate */;\n                    for (const d of this.dependencies) {\n                        /** might call {@link handleChange} indirectly, which could invalidate us */\n                        d.reportChanges();\n                        if (this.state === 2 /* DerivedState.stale */) {\n                            // The other dependencies will refresh on demand, so early break\n                            break;\n                        }\n                    }\n                }\n                this._recomputeIfNeeded();\n                // In case recomputation changed one of our dependencies, we need to recompute again.\n            } while (this.state !== 3 /* DerivedState.upToDate */);\n            return this.value;\n        }\n    }\n    _recomputeIfNeeded() {\n        var _a, _b;\n        if (this.state === 3 /* DerivedState.upToDate */) {\n            return;\n        }\n        const emptySet = this.dependenciesToBeRemoved;\n        this.dependenciesToBeRemoved = this.dependencies;\n        this.dependencies = emptySet;\n        const hadValue = this.state !== 0 /* DerivedState.initial */;\n        const oldValue = this.value;\n        this.state = 3 /* DerivedState.upToDate */;\n        const changeSummary = this.changeSummary;\n        this.changeSummary = (_a = this.createChangeSummary) === null || _a === void 0 ? void 0 : _a.call(this);\n        try {\n            /** might call {@link handleChange} indirectly, which could invalidate us */\n            this.value = this.computeFn(this, changeSummary);\n        }\n        finally {\n            // We don't want our observed observables to think that they are (not even temporarily) not being observed.\n            // Thus, we only unsubscribe from observables that are definitely not read anymore.\n            for (const o of this.dependenciesToBeRemoved) {\n                o.removeObserver(this);\n            }\n            this.dependenciesToBeRemoved.clear();\n        }\n        const didChange = hadValue && oldValue !== this.value;\n        (_b = getLogger()) === null || _b === void 0 ? void 0 : _b.handleDerivedRecomputed(this, {\n            oldValue,\n            newValue: this.value,\n            change: undefined,\n            didChange\n        });\n        if (didChange) {\n            for (const r of this.observers) {\n                r.handleChange(this, undefined);\n            }\n        }\n    }\n    toString() {\n        return `LazyDerived<${this.debugName}>`;\n    }\n    // IObserver Implementation\n    beginUpdate(_observable) {\n        this.updateCount++;\n        const propagateBeginUpdate = this.updateCount === 1;\n        if (this.state === 3 /* DerivedState.upToDate */) {\n            this.state = 1 /* DerivedState.dependenciesMightHaveChanged */;\n            // If we propagate begin update, that will already signal a possible change.\n            if (!propagateBeginUpdate) {\n                for (const r of this.observers) {\n                    r.handlePossibleChange(this);\n                }\n            }\n        }\n        if (propagateBeginUpdate) {\n            for (const r of this.observers) {\n                r.beginUpdate(this); // This signals a possible change\n            }\n        }\n    }\n    endUpdate(_observable) {\n        this.updateCount--;\n        if (this.updateCount === 0) {\n            // End update could change the observer list.\n            const observers = [...this.observers];\n            for (const r of observers) {\n                r.endUpdate(this);\n            }\n        }\n        if (this.updateCount < 0) {\n            throw new BugIndicatingError();\n        }\n    }\n    handlePossibleChange(observable) {\n        // In all other states, observers already know that we might have changed.\n        if (this.state === 3 /* DerivedState.upToDate */ && this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n            this.state = 1 /* DerivedState.dependenciesMightHaveChanged */;\n            for (const r of this.observers) {\n                r.handlePossibleChange(this);\n            }\n        }\n    }\n    handleChange(observable, change) {\n        if (this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n            const shouldReact = this._handleChange ? this._handleChange({\n                changedObservable: observable,\n                change,\n                didChange: o => o === observable,\n            }, this.changeSummary) : true;\n            const wasUpToDate = this.state === 3 /* DerivedState.upToDate */;\n            if (shouldReact && (this.state === 1 /* DerivedState.dependenciesMightHaveChanged */ || wasUpToDate)) {\n                this.state = 2 /* DerivedState.stale */;\n                if (wasUpToDate) {\n                    for (const r of this.observers) {\n                        r.handlePossibleChange(this);\n                    }\n                }\n            }\n        }\n    }\n    // IReader Implementation\n    readObservable(observable) {\n        // Subscribe before getting the value to enable caching\n        observable.addObserver(this);\n        /** This might call {@link handleChange} indirectly, which could invalidate us */\n        const value = observable.get();\n        // Which is why we only add the observable to the dependencies now.\n        this.dependencies.add(observable);\n        this.dependenciesToBeRemoved.delete(observable);\n        return value;\n    }\n    addObserver(observer) {\n        const shouldCallBeginUpdate = !this.observers.has(observer) && this.updateCount > 0;\n        super.addObserver(observer);\n        if (shouldCallBeginUpdate) {\n            observer.beginUpdate(this);\n        }\n    }\n    removeObserver(observer) {\n        const shouldCallEndUpdate = this.observers.has(observer) && this.updateCount > 0;\n        super.removeObserver(observer);\n        if (shouldCallEndUpdate) {\n            // Calling end update after removing the observer makes sure endUpdate cannot be called twice here.\n            observer.endUpdate(this);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nlet globalObservableLogger;\nexport function setLogger(logger) {\n    globalObservableLogger = logger;\n}\nexport function getLogger() {\n    return globalObservableLogger;\n}\nexport class ConsoleObservableLogger {\n    constructor() {\n        this.indentation = 0;\n        this.changedObservablesSets = new WeakMap();\n    }\n    textToConsoleArgs(text) {\n        return consoleTextToArgs([\n            normalText(repeat('|  ', this.indentation)),\n            text,\n        ]);\n    }\n    formatInfo(info) {\n        return info.didChange\n            ? [\n                normalText(` `),\n                styled(formatValue(info.oldValue, 70), {\n                    color: 'red',\n                    strikeThrough: true,\n                }),\n                normalText(` `),\n                styled(formatValue(info.newValue, 60), {\n                    color: 'green',\n                }),\n            ]\n            : [normalText(` (unchanged)`)];\n    }\n    handleObservableChanged(observable, info) {\n        console.log(...this.textToConsoleArgs([\n            formatKind('observable value changed'),\n            styled(observable.debugName, { color: 'BlueViolet' }),\n            ...this.formatInfo(info),\n        ]));\n    }\n    formatChanges(changes) {\n        if (changes.size === 0) {\n            return undefined;\n        }\n        return styled(' (changed deps: ' +\n            [...changes].map((o) => o.debugName).join(', ') +\n            ')', { color: 'gray' });\n    }\n    handleDerivedCreated(derived) {\n        const existingHandleChange = derived.handleChange;\n        this.changedObservablesSets.set(derived, new Set());\n        derived.handleChange = (observable, change) => {\n            this.changedObservablesSets.get(derived).add(observable);\n            return existingHandleChange.apply(derived, [observable, change]);\n        };\n    }\n    handleDerivedRecomputed(derived, info) {\n        const changedObservables = this.changedObservablesSets.get(derived);\n        console.log(...this.textToConsoleArgs([\n            formatKind('derived recomputed'),\n            styled(derived.debugName, { color: 'BlueViolet' }),\n            ...this.formatInfo(info),\n            this.formatChanges(changedObservables)\n        ]));\n        changedObservables.clear();\n    }\n    handleFromEventObservableTriggered(observable, info) {\n        console.log(...this.textToConsoleArgs([\n            formatKind('observable from event triggered'),\n            styled(observable.debugName, { color: 'BlueViolet' }),\n            ...this.formatInfo(info),\n        ]));\n    }\n    handleAutorunCreated(autorun) {\n        const existingHandleChange = autorun.handleChange;\n        this.changedObservablesSets.set(autorun, new Set());\n        autorun.handleChange = (observable, change) => {\n            this.changedObservablesSets.get(autorun).add(observable);\n            return existingHandleChange.apply(autorun, [observable, change]);\n        };\n    }\n    handleAutorunTriggered(autorun) {\n        const changedObservables = this.changedObservablesSets.get(autorun);\n        console.log(...this.textToConsoleArgs([\n            formatKind('autorun'),\n            styled(autorun.debugName, { color: 'BlueViolet' }),\n            this.formatChanges(changedObservables)\n        ]));\n        changedObservables.clear();\n    }\n    handleBeginTransaction(transaction) {\n        let transactionName = transaction.getDebugName();\n        if (transactionName === undefined) {\n            transactionName = '';\n        }\n        console.log(...this.textToConsoleArgs([\n            formatKind('transaction'),\n            styled(transactionName, { color: 'BlueViolet' }),\n        ]));\n        this.indentation++;\n    }\n    handleEndTransaction() {\n        this.indentation--;\n    }\n}\nfunction consoleTextToArgs(text) {\n    const styles = new Array();\n    const initial = {};\n    const data = initial;\n    let firstArg = '';\n    function process(t) {\n        if ('length' in t) {\n            for (const item of t) {\n                if (item) {\n                    process(item);\n                }\n            }\n        }\n        else if ('text' in t) {\n            firstArg += `%c${t.text}`;\n            styles.push(t.style);\n            if (t.data) {\n                Object.assign(data, t.data);\n            }\n        }\n        else if ('data' in t) {\n            Object.assign(data, t.data);\n        }\n    }\n    process(text);\n    const result = [firstArg, ...styles];\n    if (Object.keys(data).length > 0) {\n        result.push(data);\n    }\n    return result;\n}\nfunction normalText(text) {\n    return styled(text, { color: 'black' });\n}\nfunction formatKind(kind) {\n    return styled(padStr(`${kind}: `, 10), { color: 'black', bold: true });\n}\nfunction styled(text, options = {\n    color: 'black',\n}) {\n    function objToCss(styleObj) {\n        return Object.entries(styleObj).reduce((styleString, [propName, propValue]) => {\n            return `${styleString}${propName}:${propValue};`;\n        }, '');\n    }\n    const style = {\n        color: options.color,\n    };\n    if (options.strikeThrough) {\n        style['text-decoration'] = 'line-through';\n    }\n    if (options.bold) {\n        style['font-weight'] = 'bold';\n    }\n    return {\n        text,\n        style: objToCss(style),\n    };\n}\nfunction formatValue(value, availableLen) {\n    switch (typeof value) {\n        case 'number':\n            return '' + value;\n        case 'string':\n            if (value.length + 2 <= availableLen) {\n                return `\"${value}\"`;\n            }\n            return `\"${value.substr(0, availableLen - 7)}\"+...`;\n        case 'boolean':\n            return value ? 'true' : 'false';\n        case 'undefined':\n            return 'undefined';\n        case 'object':\n            if (value === null) {\n                return 'null';\n            }\n            if (Array.isArray(value)) {\n                return formatArray(value, availableLen);\n            }\n            return formatObject(value, availableLen);\n        case 'symbol':\n            return value.toString();\n        case 'function':\n            return `[[Function${value.name ? ' ' + value.name : ''}]]`;\n        default:\n            return '' + value;\n    }\n}\nfunction formatArray(value, availableLen) {\n    let result = '[ ';\n    let first = true;\n    for (const val of value) {\n        if (!first) {\n            result += ', ';\n        }\n        if (result.length - 5 > availableLen) {\n            result += '...';\n            break;\n        }\n        first = false;\n        result += `${formatValue(val, availableLen - result.length)}`;\n    }\n    result += ' ]';\n    return result;\n}\nfunction formatObject(value, availableLen) {\n    let result = '{ ';\n    let first = true;\n    for (const [key, val] of Object.entries(value)) {\n        if (!first) {\n            result += ', ';\n        }\n        if (result.length - 5 > availableLen) {\n            result += '...';\n            break;\n        }\n        first = false;\n        result += `${key}: ${formatValue(val, availableLen - result.length)}`;\n    }\n    result += ' }';\n    return result;\n}\nfunction repeat(str, count) {\n    let result = '';\n    for (let i = 1; i <= count; i++) {\n        result += str;\n    }\n    return result;\n}\nfunction padStr(str, length) {\n    while (str.length < length) {\n        str += ' ';\n    }\n    return str;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals, isMacintosh, isWindows } from './platform.js';\nlet safeProcess;\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    const sandboxProcess = globals.vscode.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get arch() { return sandboxProcess.arch; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); }\n    };\n}\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get arch() { return process.arch; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n    };\n}\n// Web environment\nelse {\n    safeProcess = {\n        // Supported\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        get arch() { return undefined; /* arch is undefined in web */ },\n        // Unsupported\n        get env() { return {}; },\n        cwd() { return '/'; }\n    };\n}\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n *\n * @skipMangle\n */\nexport const cwd = safeProcess.cwd;\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v16.14.2/lib/path.js\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nimport * as process from './process.js';\nconst CHAR_UPPERCASE_A = 65; /* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\nclass ErrorInvalidArgType extends Error {\n    constructor(name, expected, actual) {\n        // determiner: 'must be' or 'must not be'\n        let determiner;\n        if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n            determiner = 'must not be';\n            expected = expected.replace(/^not /, '');\n        }\n        else {\n            determiner = 'must be';\n        }\n        const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n        let msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n        msg += `. Received type ${typeof actual}`;\n        super(msg);\n        this.code = 'ERR_INVALID_ARG_TYPE';\n    }\n}\nfunction validateObject(pathObject, name) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n        throw new ErrorInvalidArgType(name, 'Object', pathObject);\n    }\n}\nfunction validateString(value, name) {\n    if (typeof value !== 'string') {\n        throw new ErrorInvalidArgType(name, 'string', value);\n    }\n}\nconst platformIsWin32 = (process.platform === 'win32');\nfunction isPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\nfunction isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\nfunction isWindowsDeviceRoot(code) {\n    return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n        (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code = 0;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (isPathSeparator(code)) {\n            break;\n        }\n        else {\n            code = CHAR_FORWARD_SLASH;\n        }\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) {\n                // NOOP\n            }\n            else if (dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = '';\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0, lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length !== 0) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    res += res.length > 0 ? `${separator}..` : '..';\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0) {\n                    res += `${separator}${path.slice(lastSlash + 1, i)}`;\n                }\n                else {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nfunction _format(sep, pathObject) {\n    validateObject(pathObject, 'pathObject');\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base ||\n        `${pathObject.name || ''}${pathObject.ext || ''}`;\n    if (!dir) {\n        return base;\n    }\n    return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\nexport const win32 = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedDevice = '';\n        let resolvedTail = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1; i--) {\n            let path;\n            if (i >= 0) {\n                path = pathSegments[i];\n                validateString(path, 'path');\n                // Skip empty entries\n                if (path.length === 0) {\n                    continue;\n                }\n            }\n            else if (resolvedDevice.length === 0) {\n                path = process.cwd();\n            }\n            else {\n                // Windows has the concept of drive-specific current working\n                // directories. If we've resolved a drive letter but not yet an\n                // absolute path, get cwd for that drive, or the process cwd if\n                // the drive cwd is not available. We're sure the device is not\n                // a UNC path at this points, because UNC paths are always absolute.\n                path = process.env[`=${resolvedDevice}`] || process.cwd();\n                // Verify that a cwd was found and that it actually points\n                // to our drive. If not, default to the drive's root.\n                if (path === undefined ||\n                    (path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n                        path.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n                    path = `${resolvedDevice}\\\\`;\n                }\n            }\n            const len = path.length;\n            let rootEnd = 0;\n            let device = '';\n            let isAbsolute = false;\n            const code = path.charCodeAt(0);\n            // Try to match a root\n            if (len === 1) {\n                if (isPathSeparator(code)) {\n                    // `path` contains just a path separator\n                    rootEnd = 1;\n                    isAbsolute = true;\n                }\n            }\n            else if (isPathSeparator(code)) {\n                // Possible UNC root\n                // If we started with a separator, we know we at least have an\n                // absolute path of some kind (UNC or otherwise)\n                isAbsolute = true;\n                if (isPathSeparator(path.charCodeAt(1))) {\n                    // Matched double path separator at beginning\n                    let j = 2;\n                    let last = j;\n                    // Match 1 or more non-path separators\n                    while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        const firstPart = path.slice(last, j);\n                        // Matched!\n                        last = j;\n                        // Match 1 or more path separators\n                        while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j < len && j !== last) {\n                            // Matched!\n                            last = j;\n                            // Match 1 or more non-path separators\n                            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                                j++;\n                            }\n                            if (j === len || j !== last) {\n                                // We matched a UNC root\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                                rootEnd = j;\n                            }\n                        }\n                    }\n                }\n                else {\n                    rootEnd = 1;\n                }\n            }\n            else if (isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON) {\n                // Possible device root\n                device = path.slice(0, 2);\n                rootEnd = 2;\n                if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                    // Treat separator following drive name as an absolute path\n                    // indicator\n                    isAbsolute = true;\n                    rootEnd = 3;\n                }\n            }\n            if (device.length > 0) {\n                if (resolvedDevice.length > 0) {\n                    if (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n                        // This path points to another device so it is not applicable\n                        continue;\n                    }\n                }\n                else {\n                    resolvedDevice = device;\n                }\n            }\n            if (resolvedAbsolute) {\n                if (resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n            else {\n                resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n                resolvedAbsolute = isAbsolute;\n                if (isAbsolute && resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n        }\n        // At this point the path should be resolved to a full absolute path,\n        // but handle relative paths to be safe (might happen when process.cwd()\n        // fails)\n        // Normalize the tail path\n        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n        return resolvedAbsolute ?\n            `${resolvedDevice}\\\\${resolvedTail}` :\n            `${resolvedDevice}${resolvedTail}` || '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = 0;\n        let device;\n        let isAbsolute = false;\n        const code = path.charCodeAt(0);\n        // Try to match a root\n        if (len === 1) {\n            // `path` contains just a single char, exit early to avoid\n            // unnecessary work\n            return isPosixPathSeparator(code) ? '\\\\' : path;\n        }\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            // If we started with a separator, we know we at least have an absolute\n            // path of some kind (UNC or otherwise)\n            isAbsolute = true;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    const firstPart = path.slice(last, j);\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            // Return the normalized version of the UNC root since there\n                            // is nothing left to process\n                            return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                            rootEnd = j;\n                        }\n                    }\n                }\n            }\n            else {\n                rootEnd = 1;\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            device = path.slice(0, 2);\n            rootEnd = 2;\n            if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                // Treat separator following drive name as an absolute path\n                // indicator\n                isAbsolute = true;\n                rootEnd = 3;\n            }\n        }\n        let tail = rootEnd < len ?\n            normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n            '';\n        if (tail.length === 0 && !isAbsolute) {\n            tail = '.';\n        }\n        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n            tail += '\\\\';\n        }\n        if (device === undefined) {\n            return isAbsolute ? `\\\\${tail}` : tail;\n        }\n        return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return false;\n        }\n        const code = path.charCodeAt(0);\n        return isPathSeparator(code) ||\n            // Possible device root\n            (len > 2 &&\n                isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON &&\n                isPathSeparator(path.charCodeAt(2)));\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        let firstPart;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = firstPart = arg;\n                }\n                else {\n                    joined += `\\\\${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        // Make sure that the joined path doesn't start with two slashes, because\n        // normalize() will mistake it for a UNC path then.\n        //\n        // This step is skipped when it is very clear that the user actually\n        // intended to point at a UNC path. This is assumed when the first\n        // non-empty string arguments starts with exactly two slashes followed by\n        // at least one more non-slash character.\n        //\n        // Note that for normalize() to treat a path as a UNC path it needs to\n        // have at least 2 components, so we don't filter for that here.\n        // This means that the user can use join to construct UNC paths from\n        // a server name and a share name; for example:\n        //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n        let needsReplace = true;\n        let slashCount = 0;\n        if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n            ++slashCount;\n            const firstLen = firstPart.length;\n            if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n                ++slashCount;\n                if (firstLen > 2) {\n                    if (isPathSeparator(firstPart.charCodeAt(2))) {\n                        ++slashCount;\n                    }\n                    else {\n                        // We matched a UNC path in the first part\n                        needsReplace = false;\n                    }\n                }\n            }\n        }\n        if (needsReplace) {\n            // Find any more consecutive slashes we need to replace\n            while (slashCount < joined.length &&\n                isPathSeparator(joined.charCodeAt(slashCount))) {\n                slashCount++;\n            }\n            // Replace the slashes if needed\n            if (slashCount >= 2) {\n                joined = `\\\\${joined.slice(slashCount)}`;\n            }\n        }\n        return win32.normalize(joined);\n    },\n    // It will solve the relative path from `from` to `to`, for instance:\n    //  from = 'C:\\\\orandea\\\\test\\\\aaa'\n    //  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n    // The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        const fromOrig = win32.resolve(from);\n        const toOrig = win32.resolve(to);\n        if (fromOrig === toOrig) {\n            return '';\n        }\n        from = fromOrig.toLowerCase();\n        to = toOrig.toLowerCase();\n        if (from === to) {\n            return '';\n        }\n        // Trim any leading backslashes\n        let fromStart = 0;\n        while (fromStart < from.length &&\n            from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n            fromStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let fromEnd = from.length;\n        while (fromEnd - 1 > fromStart &&\n            from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n            fromEnd--;\n        }\n        const fromLen = fromEnd - fromStart;\n        // Trim any leading backslashes\n        let toStart = 0;\n        while (toStart < to.length &&\n            to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            toStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let toEnd = to.length;\n        while (toEnd - 1 > toStart &&\n            to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n            toEnd--;\n        }\n        const toLen = toEnd - toStart;\n        // Compare paths to find the longest common path from root\n        const length = fromLen < toLen ? fromLen : toLen;\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_BACKWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        // We found a mismatch before the first common path separator was seen, so\n        // return the original `to`.\n        if (i !== length) {\n            if (lastCommonSep === -1) {\n                return toOrig;\n            }\n        }\n        else {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n                    return toOrig.slice(toStart + i + 1);\n                }\n                if (i === 2) {\n                    // We get here if `from` is the device root.\n                    // For example: from='C:\\\\'; to='C:\\\\foo'\n                    return toOrig.slice(toStart + i);\n                }\n            }\n            if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n                    lastCommonSep = i;\n                }\n                else if (i === 2) {\n                    // We get here if `to` is the device root.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n                    lastCommonSep = 3;\n                }\n            }\n            if (lastCommonSep === -1) {\n                lastCommonSep = 0;\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to` and\n        // `from`\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n                out += out.length === 0 ? '..' : '\\\\..';\n            }\n        }\n        toStart += lastCommonSep;\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts\n        if (out.length > 0) {\n            return `${out}${toOrig.slice(toStart, toEnd)}`;\n        }\n        if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            ++toStart;\n        }\n        return toOrig.slice(toStart, toEnd);\n    },\n    toNamespacedPath(path) {\n        // Note: this will *probably* throw somewhere.\n        if (typeof path !== 'string' || path.length === 0) {\n            return path;\n        }\n        const resolvedPath = win32.resolve(path);\n        if (resolvedPath.length <= 2) {\n            return path;\n        }\n        if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n            // Possible UNC root\n            if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n                const code = resolvedPath.charCodeAt(2);\n                if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n                    // Matched non-long UNC root, convert the path to a long UNC path\n                    return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n            resolvedPath.charCodeAt(1) === CHAR_COLON &&\n            resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n            // Matched device root, convert the path to a long UNC path\n            return `\\\\\\\\?\\\\${resolvedPath}`;\n        }\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = -1;\n        let offset = 0;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            // `path` contains just a path separator, exit early to avoid\n            // unnecessary work or a dot.\n            return isPathSeparator(code) ? path : '.';\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = offset = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            return path;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            // Offset by 1 to include the separator after the UNC root to\n                            // treat it as a \"normal root\" on top of a (UNC) root\n                            rootEnd = offset = j + 1;\n                        }\n                    }\n                }\n            }\n            // Possible device root\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n            offset = rootEnd;\n        }\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = len - 1; i >= offset; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            if (rootEnd === -1) {\n                return '.';\n            }\n            end = rootEnd;\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            isWindowsDeviceRoot(path.charCodeAt(0)) &&\n            path.charCodeAt(1) === CHAR_COLON) {\n            start = 2;\n        }\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= start; --i) {\n                const code = path.charCodeAt(i);\n                if (isPathSeparator(code)) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= start; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let start = 0;\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            path.charCodeAt(1) === CHAR_COLON &&\n            isWindowsDeviceRoot(path.charCodeAt(0))) {\n            start = startPart = 2;\n        }\n        for (let i = path.length - 1; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '\\\\'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const len = path.length;\n        let rootEnd = 0;\n        let code = path.charCodeAt(0);\n        if (len === 1) {\n            if (isPathSeparator(code)) {\n                // `path` contains just a path separator, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            ret.base = ret.name = path;\n            return ret;\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            rootEnd = j;\n                        }\n                        else if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            rootEnd = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            if (len <= 2) {\n                // `path` contains just a drive root, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            rootEnd = 2;\n            if (isPathSeparator(path.charCodeAt(2))) {\n                if (len === 3) {\n                    // `path` contains just a drive root, exit early to avoid\n                    // unnecessary work\n                    ret.root = ret.dir = path;\n                    return ret;\n                }\n                rootEnd = 3;\n            }\n        }\n        if (rootEnd > 0) {\n            ret.root = path.slice(0, rootEnd);\n        }\n        let startDot = -1;\n        let startPart = rootEnd;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= rootEnd; --i) {\n            code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(startPart, end);\n            }\n            else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        // If the directory is the root, use the entire root as the `dir` including\n        // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n        // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n        if (startPart > 0 && startPart !== rootEnd) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else {\n            ret.dir = ret.root;\n        }\n        return ret;\n    },\n    sep: '\\\\',\n    delimiter: ';',\n    win32: null,\n    posix: null\n};\nconst posixCwd = (() => {\n    if (platformIsWin32) {\n        // Converts Windows' backslash path separators to POSIX forward slashes\n        // and truncates any drive indicator\n        const regexp = /\\\\/g;\n        return () => {\n            const cwd = process.cwd().replace(regexp, '/');\n            return cwd.slice(cwd.indexOf('/'));\n        };\n    }\n    // We're already on POSIX, no need for any transformations\n    return () => process.cwd();\n})();\nexport const posix = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedPath = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            const path = i >= 0 ? pathSegments[i] : posixCwd();\n            validateString(path, 'path');\n            // Skip empty entries\n            if (path.length === 0) {\n                continue;\n            }\n            resolvedPath = `${path}/${resolvedPath}`;\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        // Normalize the path\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n        if (resolvedAbsolute) {\n            return `/${resolvedPath}`;\n        }\n        return resolvedPath.length > 0 ? resolvedPath : '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n        // Normalize the path\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n        if (path.length === 0) {\n            if (isAbsolute) {\n                return '/';\n            }\n            return trailingSeparator ? './' : '.';\n        }\n        if (trailingSeparator) {\n            path += '/';\n        }\n        return isAbsolute ? `/${path}` : path;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = arg;\n                }\n                else {\n                    joined += `/${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        return posix.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        // Trim leading forward slashes.\n        from = posix.resolve(from);\n        to = posix.resolve(to);\n        if (from === to) {\n            return '';\n        }\n        const fromStart = 1;\n        const fromEnd = from.length;\n        const fromLen = fromEnd - fromStart;\n        const toStart = 1;\n        const toLen = to.length - toStart;\n        // Compare paths to find the longest common path from root\n        const length = (fromLen < toLen ? fromLen : toLen);\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_FORWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='/foo/bar'; to='/foo/bar/baz'\n                    return to.slice(toStart + i + 1);\n                }\n                if (i === 0) {\n                    // We get here if `from` is the root\n                    // For example: from='/'; to='/foo'\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='/foo/bar/baz'; to='/foo/bar'\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    // We get here if `to` is the root.\n                    // For example: from='/foo/bar'; to='/'\n                    lastCommonSep = 0;\n                }\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to`\n        // and `from`.\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                out += out.length === 0 ? '..' : '/..';\n            }\n        }\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts.\n        return `${out}${to.slice(toStart + lastCommonSep)}`;\n    },\n    toNamespacedPath(path) {\n        // Non-op on posix systems\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = path.length - 1; i >= 1; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            return hasRoot ? '/' : '.';\n        }\n        if (hasRoot && end === 1) {\n            return '//';\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= 0; --i) {\n                const code = path.charCodeAt(i);\n                if (code === CHAR_FORWARD_SLASH) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        for (let i = path.length - 1; i >= 0; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '/'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let start;\n        if (isAbsolute) {\n            ret.root = '/';\n            start = 1;\n        }\n        else {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            const start = startPart === 0 && isAbsolute ? 1 : startPart;\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(start, end);\n            }\n            else {\n                ret.name = path.slice(start, startDot);\n                ret.base = path.slice(start, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else if (isAbsolute) {\n            ret.dir = '/';\n        }\n        return ret;\n    },\n    sep: '/',\n    delimiter: ':',\n    win32: null,\n    posix: null\n};\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\nexport const normalize = (platformIsWin32 ? win32.normalize : posix.normalize);\nexport const resolve = (platformIsWin32 ? win32.resolve : posix.resolve);\nexport const relative = (platformIsWin32 ? win32.relative : posix.relative);\nexport const dirname = (platformIsWin32 ? win32.dirname : posix.dirname);\nexport const basename = (platformIsWin32 ? win32.basename : posix.basename);\nexport const extname = (platformIsWin32 ? win32.extname : posix.extname);\nexport const sep = (platformIsWin32 ? win32.sep : posix.sep);\n","var _a;\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nexport const LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isElectron = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _isMobile = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _platformLocale = LANGUAGE_DEFAULT;\nlet _translationsConfigFile = undefined;\nlet _userAgent = undefined;\n/**\n * @deprecated use `globalThis` instead\n */\nexport const globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nlet nodeProcess = undefined;\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    // Native environment (sandboxed)\n    nodeProcess = globals.vscode.process;\n}\nelse if (typeof process !== 'undefined') {\n    // Native environment (non-sandboxed)\n    nodeProcess = process;\n}\nconst isElectronProcess = typeof ((_a = nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.versions) === null || _a === void 0 ? void 0 : _a.electron) === 'string';\nconst isElectronRenderer = isElectronProcess && (nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.type) === 'renderer';\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n    _userAgent = navigator.userAgent;\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n    _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\n    _isMobile = (_userAgent === null || _userAgent === void 0 ? void 0 : _userAgent.indexOf('Mobi')) >= 0;\n    _isWeb = true;\n    const configuredLocale = nls.getConfiguredDefaultLocale(\n    // This call _must_ be done in the file that calls `nls.getConfiguredDefaultLocale`\n    // to ensure that the NLS AMD Loader plugin has been loaded and configured.\n    // This is because the loader plugin decides what the default locale is based on\n    // how it's able to resolve the strings.\n    nls.localize({ key: 'ensureLoaderPluginIsLoaded', comment: ['{Locked}'] }, '_'));\n    _locale = configuredLocale || LANGUAGE_DEFAULT;\n    _language = _locale;\n    _platformLocale = navigator.language;\n}\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n    _isWindows = (nodeProcess.platform === 'win32');\n    _isMacintosh = (nodeProcess.platform === 'darwin');\n    _isLinux = (nodeProcess.platform === 'linux');\n    _isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n    _isElectron = isElectronProcess;\n    _isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            const nlsConfig = JSON.parse(rawNlsConfig);\n            const resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            _platformLocale = nlsConfig.osLocale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\n// Unknown environment\nelse {\n    console.error('Unable to resolve platform.');\n}\nlet _platform = 0 /* Platform.Web */;\nif (_isMacintosh) {\n    _platform = 1 /* Platform.Mac */;\n}\nelse if (_isWindows) {\n    _platform = 3 /* Platform.Windows */;\n}\nelse if (_isLinux) {\n    _platform = 2 /* Platform.Linux */;\n}\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isWebWorker = (_isWeb && typeof globals.importScripts === 'function');\nexport const isIOS = _isIOS;\nexport const isMobile = _isMobile;\nexport const userAgent = _userAgent;\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\nexport const setTimeout0IsFaster = (typeof globals.postMessage === 'function' && !globals.importScripts);\n/**\n * See https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#:~:text=than%204%2C%20then-,set%20timeout%20to%204,-.\n *\n * Works similarly to `setTimeout(0)` but doesn't suffer from the 4ms artificial delay\n * that browsers set when the nesting level is > 5.\n */\nexport const setTimeout0 = (() => {\n    if (setTimeout0IsFaster) {\n        const pending = [];\n        globals.addEventListener('message', (e) => {\n            if (e.data && e.data.vscodeScheduleAsyncWork) {\n                for (let i = 0, len = pending.length; i < len; i++) {\n                    const candidate = pending[i];\n                    if (candidate.id === e.data.vscodeScheduleAsyncWork) {\n                        pending.splice(i, 1);\n                        candidate.callback();\n                        return;\n                    }\n                }\n            }\n        });\n        let lastId = 0;\n        return (callback) => {\n            const myId = ++lastId;\n            pending.push({\n                id: myId,\n                callback: callback\n            });\n            globals.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n        };\n    }\n    return (callback) => setTimeout(callback);\n})();\nexport const OS = (_isMacintosh || _isIOS ? 2 /* OperatingSystem.Macintosh */ : (_isWindows ? 1 /* OperatingSystem.Windows */ : 3 /* OperatingSystem.Linux */));\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian() {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = new Uint8Array(2);\n        test[0] = 1;\n        test[1] = 2;\n        const view = new Uint16Array(test.buffer);\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\nexport const isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nexport const isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nexport const isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nexport const isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nexport const isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var Range;\n(function (Range) {\n    /**\n     * Returns the intersection between two ranges as a range itself.\n     * Returns `{ start: 0, end: 0 }` if the intersection is empty.\n     */\n    function intersect(one, other) {\n        if (one.start >= other.end || other.start >= one.end) {\n            return { start: 0, end: 0 };\n        }\n        const start = Math.max(one.start, other.start);\n        const end = Math.min(one.end, other.end);\n        if (end - start <= 0) {\n            return { start: 0, end: 0 };\n        }\n        return { start, end };\n    }\n    Range.intersect = intersect;\n    function isEmpty(range) {\n        return range.end - range.start <= 0;\n    }\n    Range.isEmpty = isEmpty;\n    function intersects(one, other) {\n        return !isEmpty(intersect(one, other));\n    }\n    Range.intersects = intersects;\n    function relativeComplement(one, other) {\n        const result = [];\n        const first = { start: one.start, end: Math.min(other.start, one.end) };\n        const second = { start: Math.max(other.end, one.start), end: one.end };\n        if (!isEmpty(first)) {\n            result.push(first);\n        }\n        if (!isEmpty(second)) {\n            result.push(second);\n        }\n        return result;\n    }\n    Range.relativeComplement = relativeComplement;\n})(Range || (Range = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as extpath from './extpath.js';\nimport { Schemas } from './network.js';\nimport * as paths from './path.js';\nimport { isLinux, isWindows } from './platform.js';\nimport { compare as strCompare, equalsIgnoreCase } from './strings.js';\nimport { URI, uriToFsPath } from './uri.js';\nexport function originalFSPath(uri) {\n    return uriToFsPath(uri, true);\n}\nexport class ExtUri {\n    constructor(_ignorePathCasing) {\n        this._ignorePathCasing = _ignorePathCasing;\n    }\n    compare(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return 0;\n        }\n        return strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n    }\n    isEqual(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return true;\n        }\n        if (!uri1 || !uri2) {\n            return false;\n        }\n        return this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n    }\n    getComparisonKey(uri, ignoreFragment = false) {\n        return uri.with({\n            path: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n            fragment: ignoreFragment ? null : undefined\n        }).toString();\n    }\n    isEqualOrParent(base, parentCandidate, ignoreFragment = false) {\n        if (base.scheme === parentCandidate.scheme) {\n            if (base.scheme === Schemas.file) {\n                return extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n            if (isEqualAuthority(base.authority, parentCandidate.authority)) {\n                return extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n        }\n        return false;\n    }\n    // --- path math\n    joinPath(resource, ...pathFragment) {\n        return URI.joinPath(resource, ...pathFragment);\n    }\n    basenameOrAuthority(resource) {\n        return basename(resource) || resource.authority;\n    }\n    basename(resource) {\n        return paths.posix.basename(resource.path);\n    }\n    extname(resource) {\n        return paths.posix.extname(resource.path);\n    }\n    dirname(resource) {\n        if (resource.path.length === 0) {\n            return resource;\n        }\n        let dirname;\n        if (resource.scheme === Schemas.file) {\n            dirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n        }\n        else {\n            dirname = paths.posix.dirname(resource.path);\n            if (resource.authority && dirname.length && dirname.charCodeAt(0) !== 47 /* CharCode.Slash */) {\n                console.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n                dirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n            }\n        }\n        return resource.with({\n            path: dirname\n        });\n    }\n    normalizePath(resource) {\n        if (!resource.path.length) {\n            return resource;\n        }\n        let normalizedPath;\n        if (resource.scheme === Schemas.file) {\n            normalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n        }\n        else {\n            normalizedPath = paths.posix.normalize(resource.path);\n        }\n        return resource.with({\n            path: normalizedPath\n        });\n    }\n    relativePath(from, to) {\n        if (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n            return undefined;\n        }\n        if (from.scheme === Schemas.file) {\n            const relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n            return isWindows ? extpath.toSlashes(relativePath) : relativePath;\n        }\n        let fromPath = from.path || '/';\n        const toPath = to.path || '/';\n        if (this._ignorePathCasing(from)) {\n            // make casing of fromPath match toPath\n            let i = 0;\n            for (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n                if (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n                    if (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n                        break;\n                    }\n                }\n            }\n            fromPath = toPath.substr(0, i) + fromPath.substr(i);\n        }\n        return paths.posix.relative(fromPath, toPath);\n    }\n    resolvePath(base, path) {\n        if (base.scheme === Schemas.file) {\n            const newURI = URI.file(paths.resolve(originalFSPath(base), path));\n            return base.with({\n                authority: newURI.authority,\n                path: newURI.path\n            });\n        }\n        path = extpath.toPosixPath(path); // we allow path to be a windows path\n        return base.with({\n            path: paths.posix.resolve(base.path, path)\n        });\n    }\n    // --- misc\n    isAbsolutePath(resource) {\n        return !!resource.path && resource.path[0] === '/';\n    }\n    isEqualAuthority(a1, a2) {\n        return a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n    }\n    hasTrailingPathSeparator(resource, sep = paths.sep) {\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            return fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n        }\n        else {\n            const p = resource.path;\n            return (p.length > 1 && p.charCodeAt(p.length - 1) === 47 /* CharCode.Slash */) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n        }\n    }\n    removeTrailingPathSeparator(resource, sep = paths.sep) {\n        // Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n        if (hasTrailingPathSeparator(resource, sep)) {\n            return resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n        }\n        return resource;\n    }\n    addTrailingPathSeparator(resource, sep = paths.sep) {\n        let isRootSep = false;\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            isRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n        }\n        else {\n            sep = '/';\n            const p = resource.path;\n            isRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === 47 /* CharCode.Slash */;\n        }\n        if (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n            return resource.with({ path: resource.path + '/' });\n        }\n        return resource;\n    }\n}\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n    // A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n    // Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n    return uri.scheme === Schemas.file ? !isLinux : true;\n});\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n/**\n * Data URI related helpers.\n */\nexport var DataUri;\n(function (DataUri) {\n    DataUri.META_DATA_LABEL = 'label';\n    DataUri.META_DATA_DESCRIPTION = 'description';\n    DataUri.META_DATA_SIZE = 'size';\n    DataUri.META_DATA_MIME = 'mime';\n    function parseMetaData(dataUri) {\n        const metadata = new Map();\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n        // the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n        const meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n        meta.split(';').forEach(property => {\n            const [key, value] = property.split(':');\n            if (key && value) {\n                metadata.set(key, value);\n            }\n        });\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n        // the mime is: image/png\n        const mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n        if (mime) {\n            metadata.set(DataUri.META_DATA_MIME, mime);\n        }\n        return metadata;\n    }\n    DataUri.parseMetaData = parseMetaData;\n})(DataUri || (DataUri = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from './event.js';\nimport { Disposable } from './lifecycle.js';\nexport class ScrollState {\n    constructor(_forceIntegerValues, width, scrollWidth, scrollLeft, height, scrollHeight, scrollTop) {\n        this._forceIntegerValues = _forceIntegerValues;\n        this._scrollStateBrand = undefined;\n        if (this._forceIntegerValues) {\n            width = width | 0;\n            scrollWidth = scrollWidth | 0;\n            scrollLeft = scrollLeft | 0;\n            height = height | 0;\n            scrollHeight = scrollHeight | 0;\n            scrollTop = scrollTop | 0;\n        }\n        this.rawScrollLeft = scrollLeft; // before validation\n        this.rawScrollTop = scrollTop; // before validation\n        if (width < 0) {\n            width = 0;\n        }\n        if (scrollLeft + width > scrollWidth) {\n            scrollLeft = scrollWidth - width;\n        }\n        if (scrollLeft < 0) {\n            scrollLeft = 0;\n        }\n        if (height < 0) {\n            height = 0;\n        }\n        if (scrollTop + height > scrollHeight) {\n            scrollTop = scrollHeight - height;\n        }\n        if (scrollTop < 0) {\n            scrollTop = 0;\n        }\n        this.width = width;\n        this.scrollWidth = scrollWidth;\n        this.scrollLeft = scrollLeft;\n        this.height = height;\n        this.scrollHeight = scrollHeight;\n        this.scrollTop = scrollTop;\n    }\n    equals(other) {\n        return (this.rawScrollLeft === other.rawScrollLeft\n            && this.rawScrollTop === other.rawScrollTop\n            && this.width === other.width\n            && this.scrollWidth === other.scrollWidth\n            && this.scrollLeft === other.scrollLeft\n            && this.height === other.height\n            && this.scrollHeight === other.scrollHeight\n            && this.scrollTop === other.scrollTop);\n    }\n    withScrollDimensions(update, useRawScrollPositions) {\n        return new ScrollState(this._forceIntegerValues, (typeof update.width !== 'undefined' ? update.width : this.width), (typeof update.scrollWidth !== 'undefined' ? update.scrollWidth : this.scrollWidth), useRawScrollPositions ? this.rawScrollLeft : this.scrollLeft, (typeof update.height !== 'undefined' ? update.height : this.height), (typeof update.scrollHeight !== 'undefined' ? update.scrollHeight : this.scrollHeight), useRawScrollPositions ? this.rawScrollTop : this.scrollTop);\n    }\n    withScrollPosition(update) {\n        return new ScrollState(this._forceIntegerValues, this.width, this.scrollWidth, (typeof update.scrollLeft !== 'undefined' ? update.scrollLeft : this.rawScrollLeft), this.height, this.scrollHeight, (typeof update.scrollTop !== 'undefined' ? update.scrollTop : this.rawScrollTop));\n    }\n    createScrollEvent(previous, inSmoothScrolling) {\n        const widthChanged = (this.width !== previous.width);\n        const scrollWidthChanged = (this.scrollWidth !== previous.scrollWidth);\n        const scrollLeftChanged = (this.scrollLeft !== previous.scrollLeft);\n        const heightChanged = (this.height !== previous.height);\n        const scrollHeightChanged = (this.scrollHeight !== previous.scrollHeight);\n        const scrollTopChanged = (this.scrollTop !== previous.scrollTop);\n        return {\n            inSmoothScrolling: inSmoothScrolling,\n            oldWidth: previous.width,\n            oldScrollWidth: previous.scrollWidth,\n            oldScrollLeft: previous.scrollLeft,\n            width: this.width,\n            scrollWidth: this.scrollWidth,\n            scrollLeft: this.scrollLeft,\n            oldHeight: previous.height,\n            oldScrollHeight: previous.scrollHeight,\n            oldScrollTop: previous.scrollTop,\n            height: this.height,\n            scrollHeight: this.scrollHeight,\n            scrollTop: this.scrollTop,\n            widthChanged: widthChanged,\n            scrollWidthChanged: scrollWidthChanged,\n            scrollLeftChanged: scrollLeftChanged,\n            heightChanged: heightChanged,\n            scrollHeightChanged: scrollHeightChanged,\n            scrollTopChanged: scrollTopChanged,\n        };\n    }\n}\nexport class Scrollable extends Disposable {\n    constructor(options) {\n        super();\n        this._scrollableBrand = undefined;\n        this._onScroll = this._register(new Emitter());\n        this.onScroll = this._onScroll.event;\n        this._smoothScrollDuration = options.smoothScrollDuration;\n        this._scheduleAtNextAnimationFrame = options.scheduleAtNextAnimationFrame;\n        this._state = new ScrollState(options.forceIntegerValues, 0, 0, 0, 0, 0, 0);\n        this._smoothScrolling = null;\n    }\n    dispose() {\n        if (this._smoothScrolling) {\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = null;\n        }\n        super.dispose();\n    }\n    setSmoothScrollDuration(smoothScrollDuration) {\n        this._smoothScrollDuration = smoothScrollDuration;\n    }\n    validateScrollPosition(scrollPosition) {\n        return this._state.withScrollPosition(scrollPosition);\n    }\n    getScrollDimensions() {\n        return this._state;\n    }\n    setScrollDimensions(dimensions, useRawScrollPositions) {\n        var _a;\n        const newState = this._state.withScrollDimensions(dimensions, useRawScrollPositions);\n        this._setState(newState, Boolean(this._smoothScrolling));\n        // Validate outstanding animated scroll position target\n        (_a = this._smoothScrolling) === null || _a === void 0 ? void 0 : _a.acceptScrollDimensions(this._state);\n    }\n    /**\n     * Returns the final scroll position that the instance will have once the smooth scroll animation concludes.\n     * If no scroll animation is occurring, it will return the current scroll position instead.\n     */\n    getFutureScrollPosition() {\n        if (this._smoothScrolling) {\n            return this._smoothScrolling.to;\n        }\n        return this._state;\n    }\n    /**\n     * Returns the current scroll position.\n     * Note: This result might be an intermediate scroll position, as there might be an ongoing smooth scroll animation.\n     */\n    getCurrentScrollPosition() {\n        return this._state;\n    }\n    setScrollPositionNow(update) {\n        // no smooth scrolling requested\n        const newState = this._state.withScrollPosition(update);\n        // Terminate any outstanding smooth scrolling\n        if (this._smoothScrolling) {\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = null;\n        }\n        this._setState(newState, false);\n    }\n    setScrollPositionSmooth(update, reuseAnimation) {\n        if (this._smoothScrollDuration === 0) {\n            // Smooth scrolling not supported.\n            return this.setScrollPositionNow(update);\n        }\n        if (this._smoothScrolling) {\n            // Combine our pending scrollLeft/scrollTop with incoming scrollLeft/scrollTop\n            update = {\n                scrollLeft: (typeof update.scrollLeft === 'undefined' ? this._smoothScrolling.to.scrollLeft : update.scrollLeft),\n                scrollTop: (typeof update.scrollTop === 'undefined' ? this._smoothScrolling.to.scrollTop : update.scrollTop)\n            };\n            // Validate `update`\n            const validTarget = this._state.withScrollPosition(update);\n            if (this._smoothScrolling.to.scrollLeft === validTarget.scrollLeft && this._smoothScrolling.to.scrollTop === validTarget.scrollTop) {\n                // No need to interrupt or extend the current animation since we're going to the same place\n                return;\n            }\n            let newSmoothScrolling;\n            if (reuseAnimation) {\n                newSmoothScrolling = new SmoothScrollingOperation(this._smoothScrolling.from, validTarget, this._smoothScrolling.startTime, this._smoothScrolling.duration);\n            }\n            else {\n                newSmoothScrolling = this._smoothScrolling.combine(this._state, validTarget, this._smoothScrollDuration);\n            }\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = newSmoothScrolling;\n        }\n        else {\n            // Validate `update`\n            const validTarget = this._state.withScrollPosition(update);\n            this._smoothScrolling = SmoothScrollingOperation.start(this._state, validTarget, this._smoothScrollDuration);\n        }\n        // Begin smooth scrolling animation\n        this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(() => {\n            if (!this._smoothScrolling) {\n                return;\n            }\n            this._smoothScrolling.animationFrameDisposable = null;\n            this._performSmoothScrolling();\n        });\n    }\n    hasPendingScrollAnimation() {\n        return Boolean(this._smoothScrolling);\n    }\n    _performSmoothScrolling() {\n        if (!this._smoothScrolling) {\n            return;\n        }\n        const update = this._smoothScrolling.tick();\n        const newState = this._state.withScrollPosition(update);\n        this._setState(newState, true);\n        if (!this._smoothScrolling) {\n            // Looks like someone canceled the smooth scrolling\n            // from the scroll event handler\n            return;\n        }\n        if (update.isDone) {\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = null;\n            return;\n        }\n        // Continue smooth scrolling animation\n        this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(() => {\n            if (!this._smoothScrolling) {\n                return;\n            }\n            this._smoothScrolling.animationFrameDisposable = null;\n            this._performSmoothScrolling();\n        });\n    }\n    _setState(newState, inSmoothScrolling) {\n        const oldState = this._state;\n        if (oldState.equals(newState)) {\n            // no change\n            return;\n        }\n        this._state = newState;\n        this._onScroll.fire(this._state.createScrollEvent(oldState, inSmoothScrolling));\n    }\n}\nexport class SmoothScrollingUpdate {\n    constructor(scrollLeft, scrollTop, isDone) {\n        this.scrollLeft = scrollLeft;\n        this.scrollTop = scrollTop;\n        this.isDone = isDone;\n    }\n}\nfunction createEaseOutCubic(from, to) {\n    const delta = to - from;\n    return function (completion) {\n        return from + delta * easeOutCubic(completion);\n    };\n}\nfunction createComposed(a, b, cut) {\n    return function (completion) {\n        if (completion < cut) {\n            return a(completion / cut);\n        }\n        return b((completion - cut) / (1 - cut));\n    };\n}\nexport class SmoothScrollingOperation {\n    constructor(from, to, startTime, duration) {\n        this.from = from;\n        this.to = to;\n        this.duration = duration;\n        this.startTime = startTime;\n        this.animationFrameDisposable = null;\n        this._initAnimations();\n    }\n    _initAnimations() {\n        this.scrollLeft = this._initAnimation(this.from.scrollLeft, this.to.scrollLeft, this.to.width);\n        this.scrollTop = this._initAnimation(this.from.scrollTop, this.to.scrollTop, this.to.height);\n    }\n    _initAnimation(from, to, viewportSize) {\n        const delta = Math.abs(from - to);\n        if (delta > 2.5 * viewportSize) {\n            let stop1, stop2;\n            if (from < to) {\n                // scroll to 75% of the viewportSize\n                stop1 = from + 0.75 * viewportSize;\n                stop2 = to - 0.75 * viewportSize;\n            }\n            else {\n                stop1 = from - 0.75 * viewportSize;\n                stop2 = to + 0.75 * viewportSize;\n            }\n            return createComposed(createEaseOutCubic(from, stop1), createEaseOutCubic(stop2, to), 0.33);\n        }\n        return createEaseOutCubic(from, to);\n    }\n    dispose() {\n        if (this.animationFrameDisposable !== null) {\n            this.animationFrameDisposable.dispose();\n            this.animationFrameDisposable = null;\n        }\n    }\n    acceptScrollDimensions(state) {\n        this.to = state.withScrollPosition(this.to);\n        this._initAnimations();\n    }\n    tick() {\n        return this._tick(Date.now());\n    }\n    _tick(now) {\n        const completion = (now - this.startTime) / this.duration;\n        if (completion < 1) {\n            const newScrollLeft = this.scrollLeft(completion);\n            const newScrollTop = this.scrollTop(completion);\n            return new SmoothScrollingUpdate(newScrollLeft, newScrollTop, false);\n        }\n        return new SmoothScrollingUpdate(this.to.scrollLeft, this.to.scrollTop, true);\n    }\n    combine(from, to, duration) {\n        return SmoothScrollingOperation.start(from, to, duration);\n    }\n    static start(from, to, duration) {\n        // +10 / -10 : pretend the animation already started for a quicker response to a scroll request\n        duration = duration + 10;\n        const startTime = Date.now() - 10;\n        return new SmoothScrollingOperation(from, to, startTime, duration);\n    }\n}\nfunction easeInCubic(t) {\n    return Math.pow(t, 3);\n}\nfunction easeOutCubic(t) {\n    return 1 - easeInCubic(1 - t);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\nexport function buildReplaceStringWithCasePreserved(matches, pattern) {\n    if (matches && (matches[0] !== '')) {\n        const containsHyphens = validateSpecificSpecialCharacter(matches, pattern, '-');\n        const containsUnderscores = validateSpecificSpecialCharacter(matches, pattern, '_');\n        if (containsHyphens && !containsUnderscores) {\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '-');\n        }\n        else if (!containsHyphens && containsUnderscores) {\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '_');\n        }\n        if (matches[0].toUpperCase() === matches[0]) {\n            return pattern.toUpperCase();\n        }\n        else if (matches[0].toLowerCase() === matches[0]) {\n            return pattern.toLowerCase();\n        }\n        else if (strings.containsUppercaseCharacter(matches[0][0]) && pattern.length > 0) {\n            return pattern[0].toUpperCase() + pattern.substr(1);\n        }\n        else if (matches[0][0].toUpperCase() !== matches[0][0] && pattern.length > 0) {\n            return pattern[0].toLowerCase() + pattern.substr(1);\n        }\n        else {\n            // we don't understand its pattern yet.\n            return pattern;\n        }\n    }\n    else {\n        return pattern;\n    }\n}\nfunction validateSpecificSpecialCharacter(matches, pattern, specialCharacter) {\n    const doesContainSpecialCharacter = matches[0].indexOf(specialCharacter) !== -1 && pattern.indexOf(specialCharacter) !== -1;\n    return doesContainSpecialCharacter && matches[0].split(specialCharacter).length === pattern.split(specialCharacter).length;\n}\nfunction buildReplaceStringForSpecificSpecialCharacter(matches, pattern, specialCharacter) {\n    const splitPatternAtSpecialCharacter = pattern.split(specialCharacter);\n    const splitMatchAtSpecialCharacter = matches[0].split(specialCharacter);\n    let replaceString = '';\n    splitPatternAtSpecialCharacter.forEach((splitValue, index) => {\n        replaceString += buildReplaceStringWithCasePreserved([splitMatchAtSpecialCharacter[index]], splitValue) + specialCharacter;\n    });\n    return replaceString.slice(0, -1);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\nvar Severity;\n(function (Severity) {\n    Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\n    Severity[Severity[\"Info\"] = 1] = \"Info\";\n    Severity[Severity[\"Warning\"] = 2] = \"Warning\";\n    Severity[Severity[\"Error\"] = 3] = \"Error\";\n})(Severity || (Severity = {}));\n(function (Severity) {\n    const _error = 'error';\n    const _warning = 'warning';\n    const _warn = 'warn';\n    const _info = 'info';\n    const _ignore = 'ignore';\n    /**\n     * Parses 'error', 'warning', 'warn', 'info' in call casings\n     * and falls back to ignore.\n     */\n    function fromValue(value) {\n        if (!value) {\n            return Severity.Ignore;\n        }\n        if (strings.equalsIgnoreCase(_error, value)) {\n            return Severity.Error;\n        }\n        if (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n            return Severity.Warning;\n        }\n        if (strings.equalsIgnoreCase(_info, value)) {\n            return Severity.Info;\n        }\n        return Severity.Ignore;\n    }\n    Severity.fromValue = fromValue;\n    function toString(severity) {\n        switch (severity) {\n            case Severity.Error: return _error;\n            case Severity.Warning: return _warning;\n            case Severity.Info: return _info;\n            default: return _ignore;\n        }\n    }\n    Severity.toString = toString;\n})(Severity || (Severity = {}));\nexport default Severity;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nconst hasPerformanceNow = (globalThis.performance && typeof globalThis.performance.now === 'function');\nexport class StopWatch {\n    static create(highResolution) {\n        return new StopWatch(highResolution);\n    }\n    constructor(highResolution) {\n        this._now = hasPerformanceNow && highResolution === false ? Date.now : globalThis.performance.now.bind(globalThis.performance);\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    stop() {\n        this._stopTime = this._now();\n    }\n    elapsed() {\n        if (this._stopTime !== -1) {\n            return this._stopTime - this._startTime;\n        }\n        return this._now() - this._startTime;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nimport { LRUCachedFunction } from './cache.js';\nimport { Lazy } from './lazy.js';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value, ...args) {\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        const idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle = ' ') {\n    const trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    let offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    let offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\nexport function createRegExp(searchString, isRegex, options = {}) {\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    let modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    const match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function regExpFlags(regexp) {\n    return (regexp.global ? 'g' : '')\n        + (regexp.ignoreCase ? 'i' : '')\n        + (regexp.multiline ? 'm' : '')\n        + (regexp /* standalone editor compilation */.unicode ? 'u' : '');\n}\nexport function splitLines(str) {\n    return str.split(/\\r\\n|\\r|\\n/);\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start = 0, end = str.length) {\n    for (let i = start; i < end; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n    for (let i = startIndex; i >= 0; i--) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        const codeA = a.charCodeAt(aStart);\n        const codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        }\n        else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function compareIgnoreCase(a, b) {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nexport function compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n        if (codeA >= 128 || codeB >= 128) {\n            // not ASCII letters -> fallback to lower-casing strings\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n        // mapper lower-case ascii letter onto upper-case varinats\n        // [97-122] (lower ascii) --> [65-90] (upper ascii)\n        if (isLowerAsciiLetter(codeA)) {\n            codeA -= 32;\n        }\n        if (isLowerAsciiLetter(codeB)) {\n            codeB -= 32;\n        }\n        // compare both code points\n        const diff = codeA - codeB;\n        if (diff === 0) {\n            continue;\n        }\n        return diff;\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function isAsciiDigit(code) {\n    return code >= 48 /* CharCode.Digit0 */ && code <= 57 /* CharCode.Digit9 */;\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* CharCode.a */ && code <= 122 /* CharCode.z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */;\n}\nexport function equalsIgnoreCase(a, b) {\n    return a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    const aLastIndex = a.length - 1;\n    const bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str, len, offset) {\n    const charCode = str.charCodeAt(offset);\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\n        const nextCharCode = str.charCodeAt(offset + 1);\n        if (isLowSurrogate(nextCharCode)) {\n            return computeCodePoint(charCode, nextCharCode);\n        }\n    }\n    return charCode;\n}\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str, offset) {\n    const charCode = str.charCodeAt(offset - 1);\n    if (isLowSurrogate(charCode) && offset > 1) {\n        const prevCharCode = str.charCodeAt(offset - 2);\n        if (isHighSurrogate(prevCharCode)) {\n            return computeCodePoint(prevCharCode, charCode);\n        }\n    }\n    return charCode;\n}\nexport class CodePointIterator {\n    get offset() {\n        return this._offset;\n    }\n    constructor(str, offset = 0) {\n        this._str = str;\n        this._len = str.length;\n        this._offset = offset;\n    }\n    setOffset(offset) {\n        this._offset = offset;\n    }\n    prevCodePoint() {\n        const codePoint = getPrevCodePoint(this._str, this._offset);\n        this._offset -= (codePoint >= 65536 /* Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    nextCodePoint() {\n        const codePoint = getNextCodePoint(this._str, this._len, this._offset);\n        this._offset += (codePoint >= 65536 /* Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    eol() {\n        return (this._offset >= this._len);\n    }\n}\nexport class GraphemeIterator {\n    get offset() {\n        return this._iterator.offset;\n    }\n    constructor(str, offset = 0) {\n        this._iterator = new CodePointIterator(str, offset);\n    }\n    nextGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n        while (!iterator.eol()) {\n            const offset = iterator.offset;\n            const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n            if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = nextGraphemeBreakType;\n        }\n        return (iterator.offset - initialOffset);\n    }\n    prevGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n        while (iterator.offset > 0) {\n            const offset = iterator.offset;\n            const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n            if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = prevGraphemeBreakType;\n        }\n        return (initialOffset - iterator.offset);\n    }\n    eol() {\n        return this._iterator.eol();\n    }\n}\nexport function nextCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.nextGraphemeLength();\n}\nexport function prevCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.prevGraphemeLength();\n}\nexport function getCharContainingOffset(str, offset) {\n    if (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n        offset--;\n    }\n    const endOffset = offset + nextCharLength(str, offset);\n    const startOffset = endOffset - prevCharLength(str, endOffset);\n    return [startOffset, endOffset];\n}\nlet CONTAINS_RTL = undefined;\nfunction makeContainsRtl() {\n    // Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js\n    return /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n}\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    if (!CONTAINS_RTL) {\n        CONTAINS_RTL = makeContainsRtl();\n    }\n    return CONTAINS_RTL.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str) {\n    return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 - 2EFF   CJK Radicals Supplement\n    //          2F00 - 2FDF   Kangxi Radicals\n    //          2FF0 - 2FFF   Ideographic Description Characters\n    //          3000 - 303F   CJK Symbols and Punctuation\n    //          3040 - 309F   Hiragana\n    //          30A0 - 30FF   Katakana\n    //          3100 - 312F   Bopomofo\n    //          3130 - 318F   Hangul Compatibility Jamo\n    //          3190 - 319F   Kanbun\n    //          31A0 - 31BF   Bopomofo Extended\n    //          31F0 - 31FF   Katakana Phonetic Extensions\n    //          3200 - 32FF   Enclosed CJK Letters and Months\n    //          3300 - 33FF   CJK Compatibility\n    //          3400 - 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 - 4DFF   Yijing Hexagram Symbols\n    //          4E00 - 9FFF   CJK Unified Ideographs\n    //          A000 - A48F   Yi Syllables\n    //          A490 - A4CF   Yi Radicals\n    //          AC00 - D7AF   Hangul Syllables\n    // [IGNORE] D800 - DB7F   High Surrogates\n    // [IGNORE] DB80 - DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 - DFFF   Low Surrogates\n    // [IGNORE] E000 - F8FF   Private Use Area\n    //          F900 - FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 - FE0F   Variation Selectors\n    // [IGNORE] FE20 - FE2F   Combining Half Marks\n    // [IGNORE] FE30 - FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 - FE6F   Small Form Variants\n    // [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B\n    //          FF00 - FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 - FFFF   Specials\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nexport function isEmojiImprecise(x) {\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n        || (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n        || (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n        || (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n        || (x >= 129648 && x <= 129782));\n}\n// -- UTF-8 BOM\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* CharCode.UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* CharCode.UTF8_BOM */);\n}\nexport function containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n) {\n    const LETTERS_CNT = (90 /* CharCode.Z */ - 65 /* CharCode.A */ + 1);\n    n = n % (2 * LETTERS_CNT);\n    if (n < LETTERS_CNT) {\n        return String.fromCharCode(97 /* CharCode.a */ + n);\n    }\n    return String.fromCharCode(65 /* CharCode.A */ + n - LETTERS_CNT);\n}\nfunction breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n    // http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n    // !!! Let's make the common case a bit faster\n    if (breakTypeA === 0 /* GraphemeBreakType.Other */) {\n        // see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n        return (breakTypeB !== 5 /* GraphemeBreakType.Extend */ && breakTypeB !== 7 /* GraphemeBreakType.SpacingMark */);\n    }\n    // Do not break between a CR and LF. Otherwise, break before and after controls.\n    // GB3                                        CR × LF\n    // GB4                       (Control | CR | LF) ÷\n    // GB5                                           ÷ (Control | CR | LF)\n    if (breakTypeA === 2 /* GraphemeBreakType.CR */) {\n        if (breakTypeB === 3 /* GraphemeBreakType.LF */) {\n            return false; // GB3\n        }\n    }\n    if (breakTypeA === 4 /* GraphemeBreakType.Control */ || breakTypeA === 2 /* GraphemeBreakType.CR */ || breakTypeA === 3 /* GraphemeBreakType.LF */) {\n        return true; // GB4\n    }\n    if (breakTypeB === 4 /* GraphemeBreakType.Control */ || breakTypeB === 2 /* GraphemeBreakType.CR */ || breakTypeB === 3 /* GraphemeBreakType.LF */) {\n        return true; // GB5\n    }\n    // Do not break Hangul syllable sequences.\n    // GB6                                         L × (L | V | LV | LVT)\n    // GB7                                  (LV | V) × (V | T)\n    // GB8                                 (LVT | T) × T\n    if (breakTypeA === 8 /* GraphemeBreakType.L */) {\n        if (breakTypeB === 8 /* GraphemeBreakType.L */ || breakTypeB === 9 /* GraphemeBreakType.V */ || breakTypeB === 11 /* GraphemeBreakType.LV */ || breakTypeB === 12 /* GraphemeBreakType.LVT */) {\n            return false; // GB6\n        }\n    }\n    if (breakTypeA === 11 /* GraphemeBreakType.LV */ || breakTypeA === 9 /* GraphemeBreakType.V */) {\n        if (breakTypeB === 9 /* GraphemeBreakType.V */ || breakTypeB === 10 /* GraphemeBreakType.T */) {\n            return false; // GB7\n        }\n    }\n    if (breakTypeA === 12 /* GraphemeBreakType.LVT */ || breakTypeA === 10 /* GraphemeBreakType.T */) {\n        if (breakTypeB === 10 /* GraphemeBreakType.T */) {\n            return false; // GB8\n        }\n    }\n    // Do not break before extending characters or ZWJ.\n    // GB9                                           × (Extend | ZWJ)\n    if (breakTypeB === 5 /* GraphemeBreakType.Extend */ || breakTypeB === 13 /* GraphemeBreakType.ZWJ */) {\n        return false; // GB9\n    }\n    // The GB9a and GB9b rules only apply to extended grapheme clusters:\n    // Do not break before SpacingMarks, or after Prepend characters.\n    // GB9a                                          × SpacingMark\n    // GB9b                                  Prepend ×\n    if (breakTypeB === 7 /* GraphemeBreakType.SpacingMark */) {\n        return false; // GB9a\n    }\n    if (breakTypeA === 1 /* GraphemeBreakType.Prepend */) {\n        return false; // GB9b\n    }\n    // Do not break within emoji modifier sequences or emoji zwj sequences.\n    // GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n    if (breakTypeA === 13 /* GraphemeBreakType.ZWJ */ && breakTypeB === 14 /* GraphemeBreakType.Extended_Pictographic */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB11\n    }\n    // GB12                          sot (RI RI)* RI × RI\n    // GB13                        [^RI] (RI RI)* RI × RI\n    if (breakTypeA === 6 /* GraphemeBreakType.Regional_Indicator */ && breakTypeB === 6 /* GraphemeBreakType.Regional_Indicator */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB12 & GB13\n    }\n    // GB999                                     Any ÷ Any\n    return true;\n}\nclass GraphemeBreakTree {\n    static getInstance() {\n        if (!GraphemeBreakTree._INSTANCE) {\n            GraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n        }\n        return GraphemeBreakTree._INSTANCE;\n    }\n    constructor() {\n        this._data = getGraphemeBreakRawData();\n    }\n    getGraphemeBreakType(codePoint) {\n        // !!! Let's make 7bit ASCII a bit faster: 0..31\n        if (codePoint < 32) {\n            if (codePoint === 10 /* CharCode.LineFeed */) {\n                return 3 /* GraphemeBreakType.LF */;\n            }\n            if (codePoint === 13 /* CharCode.CarriageReturn */) {\n                return 2 /* GraphemeBreakType.CR */;\n            }\n            return 4 /* GraphemeBreakType.Control */;\n        }\n        // !!! Let's make 7bit ASCII a bit faster: 32..126\n        if (codePoint < 127) {\n            return 0 /* GraphemeBreakType.Other */;\n        }\n        const data = this._data;\n        const nodeCount = data.length / 3;\n        let nodeIndex = 1;\n        while (nodeIndex <= nodeCount) {\n            if (codePoint < data[3 * nodeIndex]) {\n                // go left\n                nodeIndex = 2 * nodeIndex;\n            }\n            else if (codePoint > data[3 * nodeIndex + 1]) {\n                // go right\n                nodeIndex = 2 * nodeIndex + 1;\n            }\n            else {\n                // hit\n                return data[3 * nodeIndex + 2];\n            }\n        }\n        return 0 /* GraphemeBreakType.Other */;\n    }\n}\nGraphemeBreakTree._INSTANCE = null;\nfunction getGraphemeBreakRawData() {\n    // generated using https://github.com/alexdima/unicode-utils/blob/main/grapheme-break.js\n    return JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\n//#endregion\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset, str) {\n    if (offset === 0) {\n        return 0;\n    }\n    // Try to delete emoji part.\n    const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n    if (emojiOffset !== undefined) {\n        return emojiOffset;\n    }\n    // Otherwise, just skip a single code point.\n    const iterator = new CodePointIterator(str, offset);\n    iterator.prevCodePoint();\n    return iterator.offset;\n}\nfunction getOffsetBeforeLastEmojiComponent(initialOffset, str) {\n    // See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n    // structure of emojis.\n    const iterator = new CodePointIterator(str, initialOffset);\n    let codePoint = iterator.prevCodePoint();\n    // Skip modifiers\n    while ((isEmojiModifier(codePoint) || codePoint === 65039 /* CodePoint.emojiVariantSelector */ || codePoint === 8419 /* CodePoint.enclosingKeyCap */)) {\n        if (iterator.offset === 0) {\n            // Cannot skip modifier, no preceding emoji base.\n            return undefined;\n        }\n        codePoint = iterator.prevCodePoint();\n    }\n    // Expect base emoji\n    if (!isEmojiImprecise(codePoint)) {\n        // Unexpected code point, not a valid emoji.\n        return undefined;\n    }\n    let resultOffset = iterator.offset;\n    if (resultOffset > 0) {\n        // Skip optional ZWJ code points that combine multiple emojis.\n        // In theory, we should check if that ZWJ actually combines multiple emojis\n        // to prevent deleting ZWJs in situations we didn't account for.\n        const optionalZwjCodePoint = iterator.prevCodePoint();\n        if (optionalZwjCodePoint === 8205 /* CodePoint.zwj */) {\n            resultOffset = iterator.offset;\n        }\n    }\n    return resultOffset;\n}\nfunction isEmojiModifier(codePoint) {\n    return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\nexport const noBreakWhitespace = '\\xa0';\nexport class AmbiguousCharacters {\n    static getInstance(locales) {\n        return AmbiguousCharacters.cache.get(Array.from(locales));\n    }\n    static getLocales() {\n        return AmbiguousCharacters._locales.value;\n    }\n    constructor(confusableDictionary) {\n        this.confusableDictionary = confusableDictionary;\n    }\n    isAmbiguous(codePoint) {\n        return this.confusableDictionary.has(codePoint);\n    }\n    /**\n     * Returns the non basic ASCII code point that the given code point can be confused,\n     * or undefined if such code point does note exist.\n     */\n    getPrimaryConfusable(codePoint) {\n        return this.confusableDictionary.get(codePoint);\n    }\n    getConfusableCodePoints() {\n        return new Set(this.confusableDictionary.keys());\n    }\n}\n_a = AmbiguousCharacters;\nAmbiguousCharacters.ambiguousCharacterData = new Lazy(() => {\n    // Generated using https://github.com/hediet/vscode-unicode-data\n    // Stored as key1, value1, key2, value2, ...\n    return JSON.parse('{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}');\n});\nAmbiguousCharacters.cache = new LRUCachedFunction((locales) => {\n    function arrayToMap(arr) {\n        const result = new Map();\n        for (let i = 0; i < arr.length; i += 2) {\n            result.set(arr[i], arr[i + 1]);\n        }\n        return result;\n    }\n    function mergeMaps(map1, map2) {\n        const result = new Map(map1);\n        for (const [key, value] of map2) {\n            result.set(key, value);\n        }\n        return result;\n    }\n    function intersectMaps(map1, map2) {\n        if (!map1) {\n            return map2;\n        }\n        const result = new Map();\n        for (const [key, value] of map1) {\n            if (map2.has(key)) {\n                result.set(key, value);\n            }\n        }\n        return result;\n    }\n    const data = _a.ambiguousCharacterData.value;\n    let filteredLocales = locales.filter((l) => !l.startsWith('_') && l in data);\n    if (filteredLocales.length === 0) {\n        filteredLocales = ['_default'];\n    }\n    let languageSpecificMap = undefined;\n    for (const locale of filteredLocales) {\n        const map = arrayToMap(data[locale]);\n        languageSpecificMap = intersectMaps(languageSpecificMap, map);\n    }\n    const commonMap = arrayToMap(data['_common']);\n    const map = mergeMaps(commonMap, languageSpecificMap);\n    return new AmbiguousCharacters(map);\n});\nAmbiguousCharacters._locales = new Lazy(() => Object.keys(AmbiguousCharacters.ambiguousCharacterData.value).filter((k) => !k.startsWith('_')));\nexport class InvisibleCharacters {\n    static getRawData() {\n        // Generated using https://github.com/hediet/vscode-unicode-data\n        return JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n    }\n    static getData() {\n        if (!this._data) {\n            this._data = new Set(InvisibleCharacters.getRawData());\n        }\n        return this._data;\n    }\n    static isInvisibleCharacter(codePoint) {\n        return InvisibleCharacters.getData().has(codePoint);\n    }\n    static get codePoints() {\n        return InvisibleCharacters.getData();\n    }\n}\nInvisibleCharacters._data = undefined;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Can be passed into the Delayed to defer using a microtask\n * */\nexport const MicrotaskDelay = Symbol('MicrotaskDelay');\n","import { compare, compareIgnoreCase, compareSubstring, compareSubstringIgnoreCase } from './strings.js';\nexport class StringIterator {\n    constructor() {\n        this._value = '';\n        this._pos = 0;\n    }\n    reset(key) {\n        this._value = key;\n        this._pos = 0;\n        return this;\n    }\n    next() {\n        this._pos += 1;\n        return this;\n    }\n    hasNext() {\n        return this._pos < this._value.length - 1;\n    }\n    cmp(a) {\n        const aCode = a.charCodeAt(0);\n        const thisCode = this._value.charCodeAt(this._pos);\n        return aCode - thisCode;\n    }\n    value() {\n        return this._value[this._pos];\n    }\n}\nexport class ConfigKeysIterator {\n    constructor(_caseSensitive = true) {\n        this._caseSensitive = _caseSensitive;\n    }\n    reset(key) {\n        this._value = key;\n        this._from = 0;\n        this._to = 0;\n        return this.next();\n    }\n    hasNext() {\n        return this._to < this._value.length;\n    }\n    next() {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        let justSeps = true;\n        for (; this._to < this._value.length; this._to++) {\n            const ch = this._value.charCodeAt(this._to);\n            if (ch === 46 /* CharCode.Period */) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    }\n    cmp(a) {\n        return this._caseSensitive\n            ? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n            : compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n    }\n    value() {\n        return this._value.substring(this._from, this._to);\n    }\n}\nexport class PathIterator {\n    constructor(_splitOnBackslash = true, _caseSensitive = true) {\n        this._splitOnBackslash = _splitOnBackslash;\n        this._caseSensitive = _caseSensitive;\n    }\n    reset(key) {\n        this._from = 0;\n        this._to = 0;\n        this._value = key;\n        this._valueLen = key.length;\n        for (let pos = key.length - 1; pos >= 0; pos--, this._valueLen--) {\n            const ch = this._value.charCodeAt(pos);\n            if (!(ch === 47 /* CharCode.Slash */ || this._splitOnBackslash && ch === 92 /* CharCode.Backslash */)) {\n                break;\n            }\n        }\n        return this.next();\n    }\n    hasNext() {\n        return this._to < this._valueLen;\n    }\n    next() {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        let justSeps = true;\n        for (; this._to < this._valueLen; this._to++) {\n            const ch = this._value.charCodeAt(this._to);\n            if (ch === 47 /* CharCode.Slash */ || this._splitOnBackslash && ch === 92 /* CharCode.Backslash */) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    }\n    cmp(a) {\n        return this._caseSensitive\n            ? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n            : compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n    }\n    value() {\n        return this._value.substring(this._from, this._to);\n    }\n}\nexport class UriIterator {\n    constructor(_ignorePathCasing, _ignoreQueryAndFragment) {\n        this._ignorePathCasing = _ignorePathCasing;\n        this._ignoreQueryAndFragment = _ignoreQueryAndFragment;\n        this._states = [];\n        this._stateIdx = 0;\n    }\n    reset(key) {\n        this._value = key;\n        this._states = [];\n        if (this._value.scheme) {\n            this._states.push(1 /* UriIteratorState.Scheme */);\n        }\n        if (this._value.authority) {\n            this._states.push(2 /* UriIteratorState.Authority */);\n        }\n        if (this._value.path) {\n            this._pathIterator = new PathIterator(false, !this._ignorePathCasing(key));\n            this._pathIterator.reset(key.path);\n            if (this._pathIterator.value()) {\n                this._states.push(3 /* UriIteratorState.Path */);\n            }\n        }\n        if (!this._ignoreQueryAndFragment(key)) {\n            if (this._value.query) {\n                this._states.push(4 /* UriIteratorState.Query */);\n            }\n            if (this._value.fragment) {\n                this._states.push(5 /* UriIteratorState.Fragment */);\n            }\n        }\n        this._stateIdx = 0;\n        return this;\n    }\n    next() {\n        if (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */ && this._pathIterator.hasNext()) {\n            this._pathIterator.next();\n        }\n        else {\n            this._stateIdx += 1;\n        }\n        return this;\n    }\n    hasNext() {\n        return (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */ && this._pathIterator.hasNext())\n            || this._stateIdx < this._states.length - 1;\n    }\n    cmp(a) {\n        if (this._states[this._stateIdx] === 1 /* UriIteratorState.Scheme */) {\n            return compareIgnoreCase(a, this._value.scheme);\n        }\n        else if (this._states[this._stateIdx] === 2 /* UriIteratorState.Authority */) {\n            return compareIgnoreCase(a, this._value.authority);\n        }\n        else if (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */) {\n            return this._pathIterator.cmp(a);\n        }\n        else if (this._states[this._stateIdx] === 4 /* UriIteratorState.Query */) {\n            return compare(a, this._value.query);\n        }\n        else if (this._states[this._stateIdx] === 5 /* UriIteratorState.Fragment */) {\n            return compare(a, this._value.fragment);\n        }\n        throw new Error();\n    }\n    value() {\n        if (this._states[this._stateIdx] === 1 /* UriIteratorState.Scheme */) {\n            return this._value.scheme;\n        }\n        else if (this._states[this._stateIdx] === 2 /* UriIteratorState.Authority */) {\n            return this._value.authority;\n        }\n        else if (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */) {\n            return this._pathIterator.value();\n        }\n        else if (this._states[this._stateIdx] === 4 /* UriIteratorState.Query */) {\n            return this._value.query;\n        }\n        else if (this._states[this._stateIdx] === 5 /* UriIteratorState.Fragment */) {\n            return this._value.fragment;\n        }\n        throw new Error();\n    }\n}\nclass TernarySearchTreeNode {\n    constructor() {\n        this.height = 1;\n    }\n    rotateLeft() {\n        const tmp = this.right;\n        this.right = tmp.left;\n        tmp.left = this;\n        this.updateHeight();\n        tmp.updateHeight();\n        return tmp;\n    }\n    rotateRight() {\n        const tmp = this.left;\n        this.left = tmp.right;\n        tmp.right = this;\n        this.updateHeight();\n        tmp.updateHeight();\n        return tmp;\n    }\n    updateHeight() {\n        this.height = 1 + Math.max(this.heightLeft, this.heightRight);\n    }\n    balanceFactor() {\n        return this.heightRight - this.heightLeft;\n    }\n    get heightLeft() {\n        var _a, _b;\n        return (_b = (_a = this.left) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : 0;\n    }\n    get heightRight() {\n        var _a, _b;\n        return (_b = (_a = this.right) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : 0;\n    }\n}\nexport class TernarySearchTree {\n    static forUris(ignorePathCasing = () => false, ignoreQueryAndFragment = () => false) {\n        return new TernarySearchTree(new UriIterator(ignorePathCasing, ignoreQueryAndFragment));\n    }\n    static forStrings() {\n        return new TernarySearchTree(new StringIterator());\n    }\n    static forConfigKeys() {\n        return new TernarySearchTree(new ConfigKeysIterator());\n    }\n    constructor(segments) {\n        this._iter = segments;\n    }\n    clear() {\n        this._root = undefined;\n    }\n    set(key, element) {\n        const iter = this._iter.reset(key);\n        let node;\n        if (!this._root) {\n            this._root = new TernarySearchTreeNode();\n            this._root.segment = iter.value();\n        }\n        const stack = [];\n        // find insert_node\n        node = this._root;\n        while (true) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                if (!node.left) {\n                    node.left = new TernarySearchTreeNode();\n                    node.left.segment = iter.value();\n                }\n                stack.push([-1 /* Dir.Left */, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                if (!node.right) {\n                    node.right = new TernarySearchTreeNode();\n                    node.right.segment = iter.value();\n                }\n                stack.push([1 /* Dir.Right */, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                if (!node.mid) {\n                    node.mid = new TernarySearchTreeNode();\n                    node.mid.segment = iter.value();\n                }\n                stack.push([0 /* Dir.Mid */, node]);\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        // set value\n        const oldElement = node.value;\n        node.value = element;\n        node.key = key;\n        // balance\n        for (let i = stack.length - 1; i >= 0; i--) {\n            const node = stack[i][1];\n            node.updateHeight();\n            const bf = node.balanceFactor();\n            if (bf < -1 || bf > 1) {\n                // needs rotate\n                const d1 = stack[i][0];\n                const d2 = stack[i + 1][0];\n                if (d1 === 1 /* Dir.Right */ && d2 === 1 /* Dir.Right */) {\n                    //right, right -> rotate left\n                    stack[i][1] = node.rotateLeft();\n                }\n                else if (d1 === -1 /* Dir.Left */ && d2 === -1 /* Dir.Left */) {\n                    // left, left -> rotate right\n                    stack[i][1] = node.rotateRight();\n                }\n                else if (d1 === 1 /* Dir.Right */ && d2 === -1 /* Dir.Left */) {\n                    // right, left -> double rotate right, left\n                    node.right = stack[i + 1][1] = stack[i + 1][1].rotateRight();\n                    stack[i][1] = node.rotateLeft();\n                }\n                else if (d1 === -1 /* Dir.Left */ && d2 === 1 /* Dir.Right */) {\n                    // left, right -> double rotate left, right\n                    node.left = stack[i + 1][1] = stack[i + 1][1].rotateLeft();\n                    stack[i][1] = node.rotateRight();\n                }\n                else {\n                    throw new Error();\n                }\n                // patch path to parent\n                if (i > 0) {\n                    switch (stack[i - 1][0]) {\n                        case -1 /* Dir.Left */:\n                            stack[i - 1][1].left = stack[i][1];\n                            break;\n                        case 1 /* Dir.Right */:\n                            stack[i - 1][1].right = stack[i][1];\n                            break;\n                        case 0 /* Dir.Mid */:\n                            stack[i - 1][1].mid = stack[i][1];\n                            break;\n                    }\n                }\n                else {\n                    this._root = stack[0][1];\n                }\n            }\n        }\n        return oldElement;\n    }\n    get(key) {\n        var _a;\n        return (_a = this._getNode(key)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    _getNode(key) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node;\n    }\n    has(key) {\n        const node = this._getNode(key);\n        return !((node === null || node === void 0 ? void 0 : node.value) === undefined && (node === null || node === void 0 ? void 0 : node.mid) === undefined);\n    }\n    delete(key) {\n        return this._delete(key, false);\n    }\n    deleteSuperstr(key) {\n        return this._delete(key, true);\n    }\n    _delete(key, superStr) {\n        var _a;\n        const iter = this._iter.reset(key);\n        const stack = [];\n        let node = this._root;\n        // find node\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                stack.push([-1 /* Dir.Left */, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                stack.push([1 /* Dir.Right */, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                stack.push([0 /* Dir.Mid */, node]);\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        if (!node) {\n            // node not found\n            return;\n        }\n        if (superStr) {\n            // removing children, reset height\n            node.left = undefined;\n            node.mid = undefined;\n            node.right = undefined;\n            node.height = 1;\n        }\n        else {\n            // removing element\n            node.key = undefined;\n            node.value = undefined;\n        }\n        // BST node removal\n        if (!node.mid && !node.value) {\n            if (node.left && node.right) {\n                // full node\n                // replace deleted-node with the min-node of the right branch.\n                // If there is no true min-node leave things as they are\n                const min = this._min(node.right);\n                if (min.key) {\n                    const { key, value, segment } = min;\n                    this._delete(min.key, false);\n                    node.key = key;\n                    node.value = value;\n                    node.segment = segment;\n                }\n            }\n            else {\n                // empty or half empty\n                const newChild = (_a = node.left) !== null && _a !== void 0 ? _a : node.right;\n                if (stack.length > 0) {\n                    const [dir, parent] = stack[stack.length - 1];\n                    switch (dir) {\n                        case -1 /* Dir.Left */:\n                            parent.left = newChild;\n                            break;\n                        case 0 /* Dir.Mid */:\n                            parent.mid = newChild;\n                            break;\n                        case 1 /* Dir.Right */:\n                            parent.right = newChild;\n                            break;\n                    }\n                }\n                else {\n                    this._root = newChild;\n                }\n            }\n        }\n        // AVL balance\n        for (let i = stack.length - 1; i >= 0; i--) {\n            const node = stack[i][1];\n            node.updateHeight();\n            const bf = node.balanceFactor();\n            if (bf > 1) {\n                // right heavy\n                if (node.right.balanceFactor() >= 0) {\n                    // right, right -> rotate left\n                    stack[i][1] = node.rotateLeft();\n                }\n                else {\n                    // right, left -> double rotate\n                    node.right = node.right.rotateRight();\n                    stack[i][1] = node.rotateLeft();\n                }\n            }\n            else if (bf < -1) {\n                // left heavy\n                if (node.left.balanceFactor() <= 0) {\n                    // left, left -> rotate right\n                    stack[i][1] = node.rotateRight();\n                }\n                else {\n                    // left, right -> double rotate\n                    node.left = node.left.rotateLeft();\n                    stack[i][1] = node.rotateRight();\n                }\n            }\n            // patch path to parent\n            if (i > 0) {\n                switch (stack[i - 1][0]) {\n                    case -1 /* Dir.Left */:\n                        stack[i - 1][1].left = stack[i][1];\n                        break;\n                    case 1 /* Dir.Right */:\n                        stack[i - 1][1].right = stack[i][1];\n                        break;\n                    case 0 /* Dir.Mid */:\n                        stack[i - 1][1].mid = stack[i][1];\n                        break;\n                }\n            }\n            else {\n                this._root = stack[0][1];\n            }\n        }\n    }\n    _min(node) {\n        while (node.left) {\n            node = node.left;\n        }\n        return node;\n    }\n    findSubstr(key) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        let candidate = undefined;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                candidate = node.value || candidate;\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node && node.value || candidate;\n    }\n    findSuperstr(key) {\n        return this._findSuperstrOrElement(key, false);\n    }\n    _findSuperstrOrElement(key, allowValue) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                // collect\n                if (!node.mid) {\n                    if (allowValue) {\n                        return node.value;\n                    }\n                    else {\n                        return undefined;\n                    }\n                }\n                else {\n                    return this._entries(node.mid);\n                }\n            }\n        }\n        return undefined;\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key);\n        }\n    }\n    *[Symbol.iterator]() {\n        yield* this._entries(this._root);\n    }\n    _entries(node) {\n        const result = [];\n        this._dfsEntries(node, result);\n        return result[Symbol.iterator]();\n    }\n    _dfsEntries(node, bucket) {\n        // DFS\n        if (!node) {\n            return;\n        }\n        if (node.left) {\n            this._dfsEntries(node.left, bucket);\n        }\n        if (node.value) {\n            bucket.push([node.key, node.value]);\n        }\n        if (node.mid) {\n            this._dfsEntries(node.mid, bucket);\n        }\n        if (node.right) {\n            this._dfsEntries(node.right, bucket);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Codicon } from './codicons.js';\nexport var ThemeColor;\n(function (ThemeColor) {\n    function isThemeColor(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string';\n    }\n    ThemeColor.isThemeColor = isThemeColor;\n})(ThemeColor || (ThemeColor = {}));\nexport var ThemeIcon;\n(function (ThemeIcon) {\n    ThemeIcon.iconNameSegment = '[A-Za-z0-9]+';\n    ThemeIcon.iconNameExpression = '[A-Za-z0-9-]+';\n    ThemeIcon.iconModifierExpression = '~[A-Za-z]+';\n    ThemeIcon.iconNameCharacter = '[A-Za-z0-9~-]';\n    const ThemeIconIdRegex = new RegExp(`^(${ThemeIcon.iconNameExpression})(${ThemeIcon.iconModifierExpression})?$`);\n    function asClassNameArray(icon) {\n        const match = ThemeIconIdRegex.exec(icon.id);\n        if (!match) {\n            return asClassNameArray(Codicon.error);\n        }\n        const [, id, modifier] = match;\n        const classNames = ['codicon', 'codicon-' + id];\n        if (modifier) {\n            classNames.push('codicon-modifier-' + modifier.substring(1));\n        }\n        return classNames;\n    }\n    ThemeIcon.asClassNameArray = asClassNameArray;\n    function asClassName(icon) {\n        return asClassNameArray(icon).join(' ');\n    }\n    ThemeIcon.asClassName = asClassName;\n    function asCSSSelector(icon) {\n        return '.' + asClassNameArray(icon).join('.');\n    }\n    ThemeIcon.asCSSSelector = asCSSSelector;\n    function isThemeIcon(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string' && (typeof obj.color === 'undefined' || ThemeColor.isThemeColor(obj.color));\n    }\n    ThemeIcon.isThemeIcon = isThemeIcon;\n    const _regexFromString = new RegExp(`^\\\\$\\\\((${ThemeIcon.iconNameExpression}(?:${ThemeIcon.iconModifierExpression})?)\\\\)$`);\n    function fromString(str) {\n        const match = _regexFromString.exec(str);\n        if (!match) {\n            return undefined;\n        }\n        const [, name] = match;\n        return { id: name };\n    }\n    ThemeIcon.fromString = fromString;\n    function fromId(id) {\n        return { id };\n    }\n    ThemeIcon.fromId = fromId;\n    function modify(icon, modifier) {\n        let id = icon.id;\n        const tildeIndex = id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            id = id.substring(0, tildeIndex);\n        }\n        if (modifier) {\n            id = `${id}~${modifier}`;\n        }\n        return { id };\n    }\n    ThemeIcon.modify = modify;\n    function getModifier(icon) {\n        const tildeIndex = icon.id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            return icon.id.substring(tildeIndex + 1);\n        }\n        return undefined;\n    }\n    ThemeIcon.getModifier = getModifier;\n    function isEqual(ti1, ti2) {\n        var _a, _b;\n        return ti1.id === ti2.id && ((_a = ti1.color) === null || _a === void 0 ? void 0 : _a.id) === ((_b = ti2.color) === null || _b === void 0 ? void 0 : _b.id);\n    }\n    ThemeIcon.isEqual = isEqual;\n})(ThemeIcon || (ThemeIcon = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    return (typeof str === 'string');\n}\n/**\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * @returns whether the provided parameter is of type `Buffer` or Uint8Array dervived type\n */\nexport function isTypedArray(obj) {\n    const TypedArray = Object.getPrototypeOf(Uint8Array);\n    return typeof obj === 'object'\n        && obj instanceof TypedArray;\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return (obj === true || obj === false);\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined(arg) {\n    return !isUndefinedOrNull(arg);\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nexport function assertType(condition, type) {\n    if (!condition) {\n        throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n    }\n}\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined(arg) {\n    if (isUndefinedOrNull(arg)) {\n        throw new Error('Assertion Failed: argument is undefined or null');\n    }\n    return arg;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return (typeof obj === 'function');\n}\nexport function validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(`argument does not match constraint: typeof ${constraint}`);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n    }\n}\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined(x) {\n    return x === null ? undefined : x;\n}\n/**\n * Converts undefined to null, passes all other values through.\n */\nexport function withUndefinedAsNull(x) {\n    return typeof x === 'undefined' ? null : x;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* Constants.MAX_UINT_8 */) {\n        return 255 /* Constants.MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* Constants.MAX_UINT_32 */) {\n        return 4294967295 /* Constants.MAX_UINT_32 */;\n    }\n    return v | 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as paths from './path.js';\nimport { isWindows } from './platform.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI {\n    static isUri(thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'string'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    }\n    /**\n     * @internal\n     */\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    // ---- filesystem path -----------------------\n    /**\n     * Returns a string representing the corresponding file system path of this URI.\n     * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n     * platform specific path separator.\n     *\n     * * Will *not* validate the path for invalid characters and semantics.\n     * * Will *not* look at the scheme of this URI.\n     * * The result shall *not* be used for display purposes but for accessing a file on disk.\n     *\n     *\n     * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n     * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n     *\n     * ```ts\n        const u = URI.parse('file://server/c$/folder/file.txt')\n        u.authority === 'server'\n        u.path === '/shares/c$/file.txt'\n        u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n    ```\n     *\n     * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n     * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n     * with URIs that represent files on disk (`file` scheme).\n     */\n    get fsPath() {\n        // if (this.scheme !== 'file') {\n        // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n        // }\n        return uriToFsPath(this, false);\n    }\n    // ---- modify to new -------------------------\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new Uri(scheme, authority, path, query, fragment);\n    }\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.example.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return new Uri(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new Uri(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n    }\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    static file(path) {\n        let authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new Uri('file', authority, path, _empty, _empty);\n    }\n    /**\n     * Creates new URI from uri components.\n     *\n     * Unless `strict` is `true` the scheme is defaults to be `file`. This function performs\n     * validation and should be used for untrusted uri components retrieved from storage,\n     * user input, command arguments etc\n     */\n    static from(components, strict) {\n        const result = new Uri(components.scheme, components.authority, components.path, components.query, components.fragment, strict);\n        return result;\n    }\n    /**\n     * Join a URI path with path fragments and normalizes the resulting path.\n     *\n     * @param uri The input URI.\n     * @param pathFragment The path fragment to add to the URI path.\n     * @returns The resulting URI.\n     */\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw new Error(`[UriError]: cannot call joinPath on URI without path`);\n        }\n        let newPath;\n        if (isWindows && uri.scheme === 'file') {\n            newPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n        }\n        else {\n            newPath = paths.posix.join(uri.path, ...pathFragment);\n        }\n        return uri.with({ path: newPath });\n    }\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    toString(skipEncoding = false) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        var _a, _b;\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            const result = new Uri(data);\n            result._formatted = (_a = data.external) !== null && _a !== void 0 ? _a : null;\n            result._fsPath = data._sep === _pathSepMarker ? (_b = data.fsPath) !== null && _b !== void 0 ? _b : null : null;\n            return result;\n        }\n    }\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = false) {\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: 1 /* MarshalledId.Uri */\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        //--- uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        // TODO\n        // this isn't correct and can violate the UriComponents contract but\n        // this is part of the vscode.Uri API and we shouldn't change how that\n        // works anymore\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable = {\n    [58 /* CharCode.Colon */]: '%3A',\n    [47 /* CharCode.Slash */]: '%2F',\n    [63 /* CharCode.QuestionMark */]: '%3F',\n    [35 /* CharCode.Hash */]: '%23',\n    [91 /* CharCode.OpenSquareBracket */]: '%5B',\n    [93 /* CharCode.CloseSquareBracket */]: '%5D',\n    [64 /* CharCode.AtSign */]: '%40',\n    [33 /* CharCode.ExclamationMark */]: '%21',\n    [36 /* CharCode.DollarSign */]: '%24',\n    [38 /* CharCode.Ampersand */]: '%26',\n    [39 /* CharCode.SingleQuote */]: '%27',\n    [40 /* CharCode.OpenParen */]: '%28',\n    [41 /* CharCode.CloseParen */]: '%29',\n    [42 /* CharCode.Asterisk */]: '%2A',\n    [43 /* CharCode.Plus */]: '%2B',\n    [44 /* CharCode.Comma */]: '%2C',\n    [59 /* CharCode.Semicolon */]: '%3B',\n    [61 /* CharCode.Equals */]: '%3D',\n    [32 /* CharCode.Space */]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, isPath, isAuthority) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* CharCode.a */ && code <= 122 /* CharCode.z */)\n            || (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */)\n            || (code >= 48 /* CharCode.Digit0 */ && code <= 57 /* CharCode.Digit9 */)\n            || code === 45 /* CharCode.Dash */\n            || code === 46 /* CharCode.Period */\n            || code === 95 /* CharCode.Underline */\n            || code === 126 /* CharCode.Tilde */\n            || (isPath && code === 47 /* CharCode.Slash */)\n            || (isAuthority && code === 91 /* CharCode.OpenSquareBracket */)\n            || (isAuthority && code === 93 /* CharCode.CloseSquareBracket */)\n            || (isAuthority && code === 58 /* CharCode.Colon */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === 35 /* CharCode.Hash */ || code === 63 /* CharCode.QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* CharCode.Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* CharCode.A */ && uri.path.charCodeAt(1) <= 90 /* CharCode.Z */ || uri.path.charCodeAt(1) >= 97 /* CharCode.a */ && uri.path.charCodeAt(1) <= 122 /* CharCode.z */)\n        && uri.path.charCodeAt(2) === 58 /* CharCode.Colon */) {\n        if (!keepDriveLetterCasing) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.lastIndexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false, false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false, true);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.lastIndexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false, true);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false, true);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* CharCode.Slash */ && path.charCodeAt(2) === 58 /* CharCode.Colon */) {\n            const code = path.charCodeAt(1);\n            if (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* CharCode.Colon */) {\n            const code = path.charCodeAt(0);\n            if (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true, false);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false, false) : fragment;\n    }\n    return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (_a) {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","export const generateUuid = (function () {\n    // use `randomUUID` if possible\n    if (typeof crypto === 'object' && typeof crypto.randomUUID === 'function') {\n        return crypto.randomUUID.bind(crypto);\n    }\n    // use `randomValues` if possible\n    let getRandomValues;\n    if (typeof crypto === 'object' && typeof crypto.getRandomValues === 'function') {\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    else {\n        getRandomValues = function (bucket) {\n            for (let i = 0; i < bucket.length; i++) {\n                bucket[i] = Math.floor(Math.random() * 256);\n            }\n            return bucket;\n        };\n    }\n    // prep-work\n    const _data = new Uint8Array(16);\n    const _hex = [];\n    for (let i = 0; i < 256; i++) {\n        _hex.push(i.toString(16).padStart(2, '0'));\n    }\n    return function generateUuid() {\n        // get data\n        getRandomValues(_data);\n        // set version bits\n        _data[6] = (_data[6] & 0x0f) | 0x40;\n        _data[8] = (_data[8] & 0x3f) | 0x80;\n        // print as string\n        let i = 0;\n        let result = '';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        return result;\n    };\n})();\n"],"names":["Mimes","Object","freeze","text","binary","unknown","markdown","latex","uriList","ArrayNavigator","items","start","arguments","length","undefined","end","index","_classCallCheck","this","_createClass","key","value","Math","min","current","max","Schemas","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","file","mailto","untitled","data","command","vscodeRemote","vscodeRemoteResource","vscodeManagedRemoteResource","vscodeUserData","vscodeCustomEditor","vscodeNotebookCell","vscodeNotebookCellMetadata","vscodeNotebookCellOutput","vscodeInteractiveInput","vscodeSettings","vscodeWorkspaceTrust","vscodeTerminal","vscodeChatSesssion","webviewPanel","vscodeWebview","extension","vscodeFileResource","tmp","vsls","vscodeSourceControl","RemoteAuthorities","RemoteAuthoritiesImpl","_hosts","create","_ports","_connectionTokens","_preferredWebSchema","_delegate","_remoteResourcesPath","concat","schema","uri","err","errors","authority","host","indexOf","port","connectionToken","query","encodeURIComponent","path","URI","from","scheme","platform","FileAccessImpl","rewrite","origin","FALLBACK_AUTHORITY","with","fragment","COI","FileAccess","coiHeaders","Map","CoopAndCoep","get","coiSearchParamName","getHeadersFromQuery","url","params","URL","searchParams","isUri","toString","addSearchParam","urlOrSearch","coop","coep","globalThis","crossOriginIsolated","URLSearchParams","set","clamp","MovingAverage","_n","_val","SlidingWindowAverage","size","_values","_index","_sum","Array","fill","oldValue","deepClone","obj","RegExp","result","isArray","entries","forEach","_ref","_ref2","_slicedToArray","deepFreeze","stack","shift","_hasOwnProperty","call","prop","isFrozen","isTypedArray","push","prototype","hasOwnProperty","cloneAndChange","changer","_cloneAndChange","Set","seen","isUndefinedOrNull","changed","_step","r1","_iterator","_createForOfIteratorHelper","s","n","done","e","f","isObject","has","Error","add","r2","i2","delete","mixin","destination","source","overwrite","keys","equals","one","other","i","oneKeys","sort","otherKeys","getAllMethodNames","_step2","methods","_iterator2","res","getOwnPropertyNames","getPrototypeOf","getAllPropertyNames","createProxyObject","methodNames","invoke","_step3","createProxyMethod","method","args","slice","_iterator3","methodName","constObservable","ConstObservable","_ConvenientObservable","_inherits","_super","_createSuper","_this","observer","ConvenientObservable","waitForState","observable","predicate","Promise","resolve","didRun","shouldDispose","d","autorun","reader","currentState","read","dispose","observableFromEvent","event","getValue","FromEventObservable","_BaseObservable","_super2","_this2","hasValue","handleEvent","_a","newValue","didChange","getLogger","handleFromEventObservableTriggered","_assertThisInitialized","change","transaction","tx","observers","o","updateObserver","handleChange","name","getDebugName","getFunctionName","subscription","BaseObservable","observableSignalFromEvent","debugName","FromEventObservableSignal","Observer","_BaseObservable2","_super3","_this3","observableSignal","ObservableSignal","_BaseObservable3","_super4","_this4","_this5","trigger","keepAlive","forceRecompute","KeepAliveObserver","addObserver","reportChanges","toDisposable","removeObserver","counter","fn","AutorunObserver","autorunHandleChanges","options","createEmptyChangeSummary","autorunWithStore2","store","DisposableStore","disposable","clear","autorunWithStore","runFn","createChangeSummary","_handleChange","_b","state","updateCount","disposed","dependencies","dependenciesToBeRemoved","changeSummary","handleAutorunCreated","_runIfNeeded","emptySet","handleAutorunTriggered","assertFn","changedObservable","_derived","_setDerived","derived","readObservable","apply","len","onFirstObserverAdded","onLastObserverRemoved","TransactionImpl","handleBeginTransaction","finish","handleEndTransaction","subtransaction","_getDebugName","updatingObservers","beginUpdate","_step$value","endUpdate","fnSrc","match","exec","trim","observableValue","initialValue","ObservableValue","_value","_tx","_setValue","handleObservableChanged","disposableObservableValue","DisposableObservableValue","_ObservableValue","computeFn","Derived","derivedHandleChanges","derivedWithStore","r","_debugName","_handleLastObserverRemoved","handleDerivedCreated","_recomputeIfNeeded","hadValue","handleDerivedRecomputed","_step4","_iterator4","_observable","propagateBeginUpdate","_step5","_iterator5","handlePossibleChange","_step6","_iterator6","_step7","_toConsumableArray","_iterator7","BugIndicatingError","_step8","_iterator8","shouldReact","wasUpToDate","_step9","_iterator9","shouldCallBeginUpdate","_get","_getPrototypeOf","shouldCallEndUpdate","globalObservableLogger","setLogger","logger","ConsoleObservableLogger","indentation","changedObservablesSets","WeakMap","styles","firstArg","process","t","item","style","assign","consoleTextToArgs","normalText","repeat","info","styled","formatValue","color","strikeThrough","_console","console","log","textToConsoleArgs","formatKind","formatInfo","changes","map","join","existingHandleChange","_console2","changedObservables","formatChanges","_console3","_console4","_console5","transactionName","kind","str","padStr","bold","styleObj","reduce","styleString","propName","propValue","availableLen","substr","first","val","formatArray","_i","_Object$entries","_Object$entries$_i","formatObject","count","safeProcess","globals","sandboxProcess","arch","env","cwd","isWindows","isMacintosh","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","ErrorInvalidArgType","_Error","expected","actual","determiner","replace","type","msg","code","_wrapNativeSuper","validateString","platformIsWin32","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","charCodeAt","lastSlashIndex","lastIndexOf","_format","sep","pathObject","validateObject","dir","root","base","ext","win32","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","j","last","firstPart","normalize","tail","joined","arg","needsReplace","slashCount","firstLen","relative","to","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","toNamespacedPath","resolvedPath","dirname","offset","matchedSlash","basename","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","bind","parse","ret","delimiter","posix","posixCwd","regexp","trailingSeparator","hasRoot","LANGUAGE_DEFAULT","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_isMobile","_language","_userAgent","self","global","nodeProcess","isElectronProcess","versions","electron","isElectronRenderer","navigator","rawNlsConfig","nlsConfig","JSON","resolved","availableLanguages","locale","osLocale","_translationsConfigFile","error","userAgent","maxTouchPoints","nls","comment","language","isLinux","isNative","isWeb","isWebWorker","importScripts","isIOS","isMobile","setTimeout0IsFaster","postMessage","setTimeout0","pending","addEventListener","vscodeScheduleAsyncWork","candidate","id","splice","callback","lastId","myId","setTimeout","OS","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","test","Uint8Array","view","Uint16Array","buffer","isChrome","isFirefox","isSafari","isEdge","Range","intersect","isEmpty","range","intersects","relativeComplement","second","originalFSPath","uriToFsPath","DataUri","ExtUri","_ignorePathCasing","uri1","uri2","ignoreFragment","strCompare","getComparisonKey","parentCandidate","extpath","isEqualAuthority","resource","_len","pathFragment","_key","joinPath","paths","normalizedPath","relativePath","fromPath","toPath","charAt","newURI","a1","a2","equalsIgnoreCase","fsp","p","fsPath","hasTrailingPathSeparator","isRootSep","extUri","isEqual","_","basenameOrAuthority","isEqualOrParent","normalizePath","resolvePath","isAbsolutePath","removeTrailingPathSeparator","addTrailingPathSeparator","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","metadata","substring","split","property","_property$split","_property$split2","mime","ScrollState","_forceIntegerValues","width","scrollWidth","scrollLeft","height","scrollHeight","scrollTop","_scrollStateBrand","rawScrollLeft","rawScrollTop","update","useRawScrollPositions","previous","inSmoothScrolling","widthChanged","scrollWidthChanged","scrollLeftChanged","heightChanged","scrollHeightChanged","scrollTopChanged","oldWidth","oldScrollWidth","oldScrollLeft","oldHeight","oldScrollHeight","oldScrollTop","Scrollable","_Disposable","_scrollableBrand","_onScroll","_register","Emitter","onScroll","_smoothScrollDuration","smoothScrollDuration","_scheduleAtNextAnimationFrame","scheduleAtNextAnimationFrame","_state","forceIntegerValues","_smoothScrolling","scrollPosition","withScrollPosition","dimensions","newState","withScrollDimensions","_setState","Boolean","acceptScrollDimensions","reuseAnimation","setScrollPositionNow","newSmoothScrolling","validTarget","SmoothScrollingOperation","startTime","duration","combine","animationFrameDisposable","_performSmoothScrolling","tick","isDone","oldState","fire","createScrollEvent","Disposable","SmoothScrollingUpdate","createEaseOutCubic","delta","completion","pow","easeInCubic","_initAnimations","_initAnimation","viewportSize","stop1","stop2","a","b","cut","abs","_tick","Date","now","newScrollLeft","newScrollTop","buildReplaceStringWithCasePreserved","matches","pattern","containsHyphens","validateSpecificSpecialCharacter","containsUnderscores","buildReplaceStringForSpecificSpecialCharacter","toUpperCase","strings","specialCharacter","splitPatternAtSpecialCharacter","splitMatchAtSpecialCharacter","replaceString","splitValue","Severity","_error","_warning","_info","fromValue","Warning","Info","Ignore","severity","hasPerformanceNow","performance","StopWatch","highResolution","_now","_startTime","_stopTime","isFalsyOrWhitespace","_formatRegexp","group","idx","parseInt","isNaN","escape","html","escapeRegExpCharacters","haystack","needle","rtrim","ltrim","needleLen","haystackLen","convertSimple2RegExpPattern","stripWildcards","createRegExp","searchString","isRegex","wholeWord","modifiers","matchCase","multiline","unicode","regExpLeadsToEndlessLoop","lastIndex","regExpFlags","ignoreCase","splitLines","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","compare","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareIgnoreCase","compareSubstringIgnoreCase","isLowerAsciiLetter","diff","isAsciiDigit","isUpperAsciiLetter","startsWithIgnoreCase","candidateLength","commonPrefixLength","commonSuffixLength","aLastIndex","bLastIndex","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","nextCharCode","CodePointIterator","_str","_offset","codePoint","prevCharCode","getPrevCodePoint","GraphemeIterator","graphemeBreakTree","GraphemeBreakTree","getInstance","iterator","initialOffset","graphemeBreakType","getGraphemeBreakType","nextCodePoint","eol","nextGraphemeBreakType","breakBetweenGraphemeBreakType","setOffset","prevCodePoint","prevGraphemeBreakType","nextCharLength","nextGraphemeLength","prevCharLength","prevGraphemeLength","getCharContainingOffset","endOffset","CONTAINS_RTL","containsRTL","IS_BASIC_ASCII","isBasicASCII","UNUSUAL_LINE_TERMINATORS","containsUnusualLineTerminators","isFullWidthCharacter","isEmojiImprecise","x","UTF8_BOM_CHARACTER","String","fromCharCode","startsWithUTF8BOM","containsUppercaseCharacter","target","singleLetterHash","breakTypeA","breakTypeB","_data","nodeCount","nodeIndex","_INSTANCE","getLeftDeleteOffset","emojiOffset","isEmojiModifier","resultOffset","getOffsetBeforeLastEmojiComponent","noBreakWhitespace","AmbiguousCharacters","confusableDictionary","locales","cache","_locales","ambiguousCharacterData","Lazy","LRUCachedFunction","arrayToMap","arr","intersectMaps","map1","map2","_step2$value","filteredLocales","filter","l","startsWith","languageSpecificMap","mergeMaps","k","InvisibleCharacters","getRawData","getData","MicrotaskDelay","Symbol","StringIterator","_pos","ConfigKeysIterator","_caseSensitive","_from","_to","next","justSeps","PathIterator","_splitOnBackslash","_valueLen","pos","ch","UriIterator","_ignoreQueryAndFragment","_states","_stateIdx","_pathIterator","reset","hasNext","cmp","TernarySearchTreeNode","right","left","updateHeight","heightLeft","heightRight","TernarySearchTree","_Symbol$iterator","segments","_iter","_root","element","node","iter","segment","mid","oldElement","bf","balanceFactor","d1","d2","rotateLeft","rotateRight","_getNode","_delete","superStr","_min","newChild","_stack","parent","_findSuperstrOrElement","allowValue","_entries","_regeneratorRuntime","mark","wrap","_context","prev","delegateYield","stop","_dfsEntries","bucket","ThemeColor","ThemeIcon","isThemeColor","iconNameSegment","iconNameExpression","iconModifierExpression","iconNameCharacter","ThemeIconIdRegex","asClassNameArray","icon","Codicon","_match","modifier","classNames","asClassName","asCSSSelector","isThemeIcon","_regexFromString","fromString","fromId","modify","tildeIndex","getModifier","ti1","ti2","isString","TypedArray","isNumber","isIterable","isBoolean","isUndefined","isDefined","assertType","condition","assertIsDefined","isFunction","validateConstraints","constraints","validateConstraint","constraint","constructor","withNullAsUndefined","withUndefinedAsNull","toUint8","v","toUint32","_schemePattern","_singleSlashStart","_doubleSlashStart","_empty","_slash","_regexp","schemeOrData","_strict","_schemeFix","_referenceResolution","_validateUri","Uri","_asFormatted","thing","percentDecode","components","strict","newPath","_paths$win","_paths$posix","_formatted","external","_fsPath","_sep","_pathSepMarker","_URI","$mid","encodeTable","_encodeTable","_defineProperty","encodeURIComponentFast","uriComponent","isPath","isAuthority","nativeEncodePos","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","skipEncoding","encoder","userinfo","decodeURIComponentGraceful","decodeURIComponent","_rEncodedAsHex","generateUuid","crypto","randomUUID","getRandomValues","floor","random","_hex","padStart"],"sourceRoot":""}