"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5094],{87299:(e,t,r)=>{r.d(t,{CS:()=>l,LP:()=>d,pc:()=>u});var o=r(48250),i=r(87766),n=r(32031),c=r(83674),a=r(39263);const s="__$__targetStorageMarker",l=(0,a.u1)("storageService");var d;!function(e){e[e.NONE=0]="NONE",e[e.SHUTDOWN=1]="SHUTDOWN"}(d||(d={}));class h extends i.jG{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{flushInterval:h.DEFAULT_FLUSH_INTERVAL};super(),this.options=e,this._onDidChangeValue=this._register(new o.fV),this._onDidChangeTarget=this._register(new o.fV),this._onWillSaveState=this._register(new o.vl),this.onWillSaveState=this._onWillSaveState.event,this._workspaceKeyTargets=void 0,this._profileKeyTargets=void 0,this._applicationKeyTargets=void 0}onDidChangeValue(e,t,r){return o.Jh.filter(this._onDidChangeValue.event,(r=>r.scope===e&&(void 0===t||r.key===t)),r)}emitDidChangeValue(e,t){const{key:r,external:o}=t;if(r===s){switch(e){case-1:this._applicationKeyTargets=void 0;break;case 0:this._profileKeyTargets=void 0;break;case 1:this._workspaceKeyTargets=void 0}this._onDidChangeTarget.fire({scope:e})}else this._onDidChangeValue.fire({scope:e,key:r,target:this.getKeyTargets(e)[r],external:o})}get(e,t,r){var o;return null===(o=this.getStorage(t))||void 0===o?void 0:o.get(e,r)}getBoolean(e,t,r){var o;return null===(o=this.getStorage(t))||void 0===o?void 0:o.getBoolean(e,r)}getNumber(e,t,r){var o;return null===(o=this.getStorage(t))||void 0===o?void 0:o.getNumber(e,r)}store(e,t,r,o){let i=arguments.length>4&&void 0!==arguments[4]&&arguments[4];(0,n.z)(t)?this.remove(e,r,i):this.withPausedEmitters((()=>{var n;this.updateKeyTarget(e,r,o),null===(n=this.getStorage(r))||void 0===n||n.set(e,t,i)}))}remove(e,t){let r=arguments.length>2&&void 0!==arguments[2]&&arguments[2];this.withPausedEmitters((()=>{var o;this.updateKeyTarget(e,t,void 0),null===(o=this.getStorage(t))||void 0===o||o.delete(e,r)}))}withPausedEmitters(e){this._onDidChangeValue.pause(),this._onDidChangeTarget.pause();try{e()}finally{this._onDidChangeValue.resume(),this._onDidChangeTarget.resume()}}updateKeyTarget(e,t,r){let o=arguments.length>3&&void 0!==arguments[3]&&arguments[3];var i,n;const c=this.getKeyTargets(t);"number"===typeof r?c[e]!==r&&(c[e]=r,null===(i=this.getStorage(t))||void 0===i||i.set(s,JSON.stringify(c),o)):"number"===typeof c[e]&&(delete c[e],null===(n=this.getStorage(t))||void 0===n||n.set(s,JSON.stringify(c),o))}get workspaceKeyTargets(){return this._workspaceKeyTargets||(this._workspaceKeyTargets=this.loadKeyTargets(1)),this._workspaceKeyTargets}get profileKeyTargets(){return this._profileKeyTargets||(this._profileKeyTargets=this.loadKeyTargets(0)),this._profileKeyTargets}get applicationKeyTargets(){return this._applicationKeyTargets||(this._applicationKeyTargets=this.loadKeyTargets(-1)),this._applicationKeyTargets}getKeyTargets(e){switch(e){case-1:return this.applicationKeyTargets;case 0:return this.profileKeyTargets;default:return this.workspaceKeyTargets}}loadKeyTargets(e){const t=this.getStorage(e);return t?function(e){const t=e.get(s);if(t)try{return JSON.parse(t)}catch(r){}return Object.create(null)}(t):Object.create(null)}}h.DEFAULT_FLUSH_INTERVAL=6e4;class u extends h{constructor(){super(),this.applicationStorage=this._register(new c.wc(new c.f8,{hint:c.Fx.STORAGE_IN_MEMORY})),this.profileStorage=this._register(new c.wc(new c.f8,{hint:c.Fx.STORAGE_IN_MEMORY})),this.workspaceStorage=this._register(new c.wc(new c.f8,{hint:c.Fx.STORAGE_IN_MEMORY})),this._register(this.workspaceStorage.onDidChangeStorage((e=>this.emitDidChangeValue(1,e)))),this._register(this.profileStorage.onDidChangeStorage((e=>this.emitDidChangeValue(0,e)))),this._register(this.applicationStorage.onDidChangeStorage((e=>this.emitDidChangeValue(-1,e))))}getStorage(e){switch(e){case-1:return this.applicationStorage;case 0:return this.profileStorage;default:return this.workspaceStorage}}}},96819:(e,t,r)=>{r.d(t,{k:()=>o});const o=(0,r(39263).u1)("telemetryService")},77942:(e,t,r)=>{r.d(t,{Dk:()=>d,IN:()=>u,RE:()=>k,XS:()=>f,cv:()=>c,ho:()=>l,ir:()=>n,m$:()=>h,mk:()=>s,oJ:()=>a,t8:()=>g});var o=r(63573),i=r(57397);const n={keybindingLabelBackground:(0,o.GuP)(o.HDX),keybindingLabelForeground:(0,o.GuP)(o.eUu),keybindingLabelBorder:(0,o.GuP)(o.zUX),keybindingLabelBottomBorder:(0,o.GuP)(o.Qfh),keybindingLabelShadow:(0,o.GuP)(o.f9l)},c={buttonForeground:(0,o.GuP)(o.G_h),buttonSeparator:(0,o.GuP)(o.Q1$),buttonBackground:(0,o.GuP)(o.XJc),buttonHoverBackground:(0,o.GuP)(o.T9h),buttonSecondaryForeground:(0,o.GuP)(o.Inn),buttonSecondaryBackground:(0,o.GuP)(o.xOA),buttonSecondaryHoverBackground:(0,o.GuP)(o.nZG),buttonBorder:(0,o.GuP)(o.raQ)},a={progressBarBackground:(0,o.GuP)(o.BTi)},s={inputActiveOptionBorder:(0,o.GuP)(o.uNK),inputActiveOptionForeground:(0,o.GuP)(o.$$0),inputActiveOptionBackground:(0,o.GuP)(o.c1f)},l=((0,o.GuP)(o.OcU),(0,o.GuP)(o.C5U),(0,o.GuP)(o.t0B),(0,o.GuP)(o.CgL),(0,o.GuP)(o.FiB),(0,o.GuP)(o.f9l),(0,o.GuP)(o.b1q),(0,o.GuP)(o.tYX),(0,o.GuP)(o.JPj),(0,o.GuP)(o.bNw),(0,o.GuP)(o.vwp),{inputBackground:(0,o.GuP)(o.L4c),inputForeground:(0,o.GuP)(o.cws),inputBorder:(0,o.GuP)(o.Zgs),inputValidationInfoBorder:(0,o.GuP)(o.YSW),inputValidationInfoBackground:(0,o.GuP)(o.I$A),inputValidationInfoForeground:(0,o.GuP)(o.L9Z),inputValidationWarningBorder:(0,o.GuP)(o.C1n),inputValidationWarningBackground:(0,o.GuP)(o.ULt),inputValidationWarningForeground:(0,o.GuP)(o.T5N),inputValidationErrorBorder:(0,o.GuP)(o.eYZ),inputValidationErrorBackground:(0,o.GuP)(o._$n),inputValidationErrorForeground:(0,o.GuP)(o.h9z)}),d={listFilterWidgetBackground:(0,o.GuP)(o.pnl),listFilterWidgetOutline:(0,o.GuP)(o.fiM),listFilterWidgetNoMatchesOutline:(0,o.GuP)(o.P9Z),listFilterWidgetShadow:(0,o.GuP)(o.H8q),inputBoxStyles:l,toggleStyles:s},h={badgeBackground:(0,o.GuP)(o.WMx),badgeForeground:(0,o.GuP)(o.zRE),badgeBorder:(0,o.GuP)(o.b1q)},u=((0,o.GuP)(o.vV$),(0,o.GuP)(o.mc0),(0,o.GuP)(o.etE),(0,o.GuP)(o.etE),(0,o.GuP)(o.sAS),{listBackground:void 0,listInactiveFocusForeground:void 0,listFocusBackground:(0,o.GuP)(o.VFX),listFocusForeground:(0,o.GuP)(o.efJ),listFocusOutline:(0,o.GuP)(o.p7Y),listActiveSelectionBackground:(0,o.GuP)(o.Rjz),listActiveSelectionForeground:(0,o.GuP)(o.GVV),listActiveSelectionIconForeground:(0,o.GuP)(o.fED),listFocusAndSelectionOutline:(0,o.GuP)(o.gtq),listFocusAndSelectionBackground:(0,o.GuP)(o.Rjz),listFocusAndSelectionForeground:(0,o.GuP)(o.GVV),listInactiveSelectionBackground:(0,o.GuP)(o.uNx),listInactiveSelectionIconForeground:(0,o.GuP)(o.C9U),listInactiveSelectionForeground:(0,o.GuP)(o.f4y),listInactiveFocusBackground:(0,o.GuP)(o.CQ3),listInactiveFocusOutline:(0,o.GuP)(o.ijf),listHoverBackground:(0,o.GuP)(o.lO1),listHoverForeground:(0,o.GuP)(o.QRv),listDropOverBackground:(0,o.GuP)(o.Yoe),listDropBetweenBackground:(0,o.GuP)(o.yIp),listSelectionOutline:(0,o.GuP)(o.buw),listHoverOutline:(0,o.GuP)(o.buw),treeIndentGuidesStroke:(0,o.GuP)(o.U4U),treeInactiveIndentGuidesStroke:(0,o.GuP)(o.pft),treeStickyScrollBackground:void 0,treeStickyScrollBorder:void 0,treeStickyScrollShadow:void 0,tableColumnsBorder:(0,o.GuP)(o.k5u),tableOddRowsBackgroundColor:(0,o.GuP)(o.sbQ)});function g(e){return function(e,t){const r={...t};for(const i in e){const t=e[i];r[i]=void 0!==t?(0,o.GuP)(t):void 0}return r}(e,u)}const k={selectBackground:(0,o.GuP)(o.rvE),selectListBackground:(0,o.GuP)(o.lWP),selectForeground:(0,o.GuP)(o.yqq),decoratorRightForeground:(0,o.GuP)(o.NBf),selectBorder:(0,o.GuP)(o.HcB),focusBorder:(0,o.GuP)(o.tAP),listFocusBackground:(0,o.GuP)(o.AlL),listInactiveSelectionIconForeground:(0,o.GuP)(o.c7i),listFocusForeground:(0,o.GuP)(o.nH),listFocusOutline:(0,o.HP_)(o.buw,i.Q1.transparent.toString()),listHoverBackground:(0,o.GuP)(o.lO1),listHoverForeground:(0,o.GuP)(o.QRv),listHoverOutline:(0,o.GuP)(o.buw),selectListBorder:(0,o.GuP)(o.sIe),listBackground:void 0,listActiveSelectionBackground:void 0,listActiveSelectionForeground:void 0,listActiveSelectionIconForeground:void 0,listFocusAndSelectionBackground:void 0,listDropOverBackground:void 0,listDropBetweenBackground:void 0,listInactiveSelectionBackground:void 0,listInactiveSelectionForeground:void 0,listInactiveFocusBackground:void 0,listInactiveFocusOutline:void 0,listSelectionOutline:void 0,listFocusAndSelectionForeground:void 0,listFocusAndSelectionOutline:void 0,listInactiveFocusForeground:void 0,tableColumnsBorder:void 0,tableOddRowsBackgroundColor:void 0,treeIndentGuidesStroke:void 0,treeInactiveIndentGuidesStroke:void 0,treeStickyScrollBackground:void 0,treeStickyScrollBorder:void 0,treeStickyScrollShadow:void 0},f={shadowColor:(0,o.GuP)(o.f9l),borderColor:(0,o.GuP)(o.g$2),foregroundColor:(0,o.GuP)(o.dd_),backgroundColor:(0,o.GuP)(o.c6Y),selectionForegroundColor:(0,o.GuP)(o.pmr),selectionBackgroundColor:(0,o.GuP)(o.Ux$),selectionBorderColor:(0,o.GuP)(o.SNb),separatorColor:(0,o.GuP)(o.D7X),scrollbarShadow:(0,o.GuP)(o.bXl),scrollbarSliderBackground:(0,o.GuP)(o.gnV),scrollbarSliderHoverBackground:(0,o.GuP)(o.cI_),scrollbarSliderActiveBackground:(0,o.GuP)(o.mhZ)}},32567:(e,t,r)=>{r.d(t,{r:()=>s,s:()=>l});var o=r(32605),i=r(48250),n=r(87766),c=r(70145),a=r(85514);function s(e){const t=new n.Cm,r=t.add(new i.vl),c=(0,a.HT)();return t.add(c.onDidChange((()=>r.fire()))),e&&t.add(e.onDidProductIconThemeChange((()=>r.fire()))),{dispose:()=>t.dispose(),onDidChange:r.event,getCSS(){const t=e?e.getProductIconTheme():new l,r={},i=[],n=[];for(const e of c.getIcons()){const c=t.getIcon(e);if(!c)continue;const a=c.font,s="--vscode-icon-".concat(e.id,"-font-family"),l="--vscode-icon-".concat(e.id,"-content");a?(r[a.id]=a.definition,n.push("".concat(s,": ").concat((0,o.yt)(a.id),";"),"".concat(l,": '").concat(c.fontCharacter,"';")),i.push(".codicon-".concat(e.id,":before { content: '").concat(c.fontCharacter,"'; font-family: ").concat((0,o.yt)(a.id),"; }"))):(n.push("".concat(l,": '").concat(c.fontCharacter,"'; ").concat(s,": 'codicon';")),i.push(".codicon-".concat(e.id,":before { content: '").concat(c.fontCharacter,"'; }")))}for(const e in r){const t=r[e],n=t.weight?"font-weight: ".concat(t.weight,";"):"",c=t.style?"font-style: ".concat(t.style,";"):"",a=t.src.map((e=>"".concat((0,o.Tf)(e.location)," format('").concat(e.format,"')"))).join(", ");i.push("@font-face { src: ".concat(a,"; font-family: ").concat((0,o.yt)(e),";").concat(n).concat(c," font-display: block; }"))}return i.push(":root { ".concat(n.join(" ")," }")),i.join("\n")}}}class l{getIcon(e){const t=(0,a.HT)();let r=e.defaults;for(;c.L.isThemeIcon(r);){const e=t.getIcon(r.id);if(!e)return;r=e.defaults}return r}}},63573:(e,t,r)=>{r.d(t,{FdG:()=>u,buw:()=>I,GuP:()=>d,Bbc:()=>l,HP_:()=>h,WMx:()=>A,zRE:()=>E,sAS:()=>Se,vV$:()=>ye,etE:()=>Le,mc0:()=>we,XJc:()=>ft,raQ:()=>mt,G_h:()=>gt,T9h:()=>pt,xOA:()=>vt,Inn:()=>bt,nZG:()=>Bt,Q1$:()=>kt,OcU:()=>Ft,C5U:()=>wt,t0B:()=>Dt,b1q:()=>_,EY1:()=>ke,ZEf:()=>fe,Gj6:()=>pe,ld8:()=>be,$BZ:()=>ve,GNm:()=>me,Ztu:()=>J,YtV:()=>O,AN$:()=>M,Rbi:()=>K,Ubg:()=>re,ECk:()=>oe,S5J:()=>ie,By2:()=>Q,i61:()=>Y,WfR:()=>ne,oZ8:()=>ce,tan:()=>ee,IIb:()=>$,pOz:()=>z,WL6:()=>se,P6i:()=>ae,B2L:()=>ue,sjA:()=>he,_pU:()=>de,HwT:()=>le,seu:()=>X,rm4:()=>Z,QwA:()=>te,whs:()=>q,Stt:()=>j,Hng:()=>N,CgL:()=>U,sIe:()=>V,FiB:()=>W,tAP:()=>C,CU6:()=>L,t4B:()=>S,c1f:()=>Xe,uNK:()=>Je,$$0:()=>Ze,L4c:()=>ze,Zgs:()=>Ye,cws:()=>$e,_$n:()=>ct,eYZ:()=>st,h9z:()=>at,I$A:()=>et,YSW:()=>rt,L9Z:()=>tt,ULt:()=>ot,C1n:()=>nt,T5N:()=>it,HDX:()=>yt,zUX:()=>St,Qfh:()=>Ct,eUu:()=>Lt,Rjz:()=>Et,GVV:()=>Rt,fED:()=>Pt,yIp:()=>Kt,Yoe:()=>Vt,pnl:()=>$t,P9Z:()=>Jt,fiM:()=>Yt,H8q:()=>Xt,gtq:()=>At,VFX:()=>_t,efJ:()=>It,eMz:()=>qt,p7Y:()=>Tt,QI5:()=>Mt,lO1:()=>Ut,QRv:()=>Wt,CQ3:()=>Ot,ijf:()=>Qt,uNx:()=>Gt,f4y:()=>Ht,C9U:()=>xt,c6Y:()=>nr,g$2:()=>or,dd_:()=>ir,Ux$:()=>ar,SNb:()=>sr,pmr:()=>cr,D7X:()=>lr,ILr:()=>Ne,yLC:()=>qe,AjU:()=>Ue,K1Z:()=>je,KoI:()=>Ke,yr0:()=>Ve,Xp1:()=>We,uMG:()=>Me,yLr:()=>b,fAP:()=>Ge,z5H:()=>He,iwL:()=>kr,NBf:()=>gr,tYX:()=>xe,bNw:()=>Qe,JPj:()=>Oe,BTi:()=>x,ELA:()=>dr,HJZ:()=>hr,AlL:()=>br,nH:()=>pr,c7i:()=>mr,er1:()=>ur,x1A:()=>k,bXl:()=>R,mhZ:()=>H,gnV:()=>P,cI_:()=>G,rvE:()=>lt,HcB:()=>ut,yqq:()=>ht,lWP:()=>dt,k5u:()=>tr,sbQ:()=>rr,vwp:()=>T,JO0:()=>m,pft:()=>er,U4U:()=>Zt,DSL:()=>Fe,f9l:()=>Be});var o=r(28070),i=r(73990),n=r(57397),c=r(48250),a=r(67588),s=r(31519);function l(e){return"--vscode-".concat(e.replace(/\./g,"-"))}function d(e){return"var(".concat(l(e),")")}function h(e,t){return"var(".concat(l(e),", ").concat(t,")")}const u={ColorContribution:"base.contributions.colors"};const g=new class{constructor(){this._onDidChangeSchema=new c.vl,this.onDidChangeSchema=this._onDidChangeSchema.event,this.colorSchema={type:"object",properties:{}},this.colorReferenceSchema={type:"string",enum:[],enumDescriptions:[]},this.colorsById={}}registerColor(e,t,r){let o=arguments.length>3&&void 0!==arguments[3]&&arguments[3],i=arguments.length>4?arguments[4]:void 0;const n={id:e,description:r,defaults:t,needsTransparency:o,deprecationMessage:i};this.colorsById[e]=n;const c={type:"string",description:r,format:"color-hex",defaultSnippets:[{body:"${1:#ff0000}"}]};return i&&(c.deprecationMessage=i),o&&(c.pattern="^#(?:(?<rgba>[0-9a-fA-f]{3}[0-9a-eA-E])|(?:[0-9a-fA-F]{6}(?:(?![fF]{2})(?:[0-9a-fA-F]{2}))))?$",c.patternErrorMessage="This color must be transparent or it will obscure content"),this.colorSchema.properties[e]=c,this.colorReferenceSchema.enum.push(e),this.colorReferenceSchema.enumDescriptions.push(r),this._onDidChangeSchema.fire(),e}getColors(){return Object.keys(this.colorsById).map((e=>this.colorsById[e]))}resolveDefaultColor(e,t){const r=this.colorsById[e];if(r&&r.defaults){return B(r.defaults[t.type],t)}}getColorSchema(){return this.colorSchema}toString(){return Object.keys(this.colorsById).sort(((e,t)=>{const r=-1===e.indexOf(".")?0:1,o=-1===t.indexOf(".")?0:1;return r!==o?r-o:e.localeCompare(t)})).map((e=>"- `".concat(e,"`: ").concat(this.colorsById[e].description))).join("\n")}};function k(e,t,r,o,i){return g.registerColor(e,t,r,o,i)}function f(e,t){return{op:0,value:e,factor:t}}function p(e,t){return{op:1,value:e,factor:t}}function m(e,t){return{op:2,value:e,factor:t}}function b(){for(var e=arguments.length,t=new Array(e),r=0;r<e;r++)t[r]=arguments[r];return{op:4,values:t}}function v(e,t,r,o){return{op:5,value:e,background:t,factor:r,transparency:o}}function B(e,t){if(null!==e)return"string"===typeof e?"#"===e[0]?n.Q1.fromHex(e):t.getColor(e):e instanceof n.Q1?e:"object"===typeof e?function(e,t){var r,i,c,a;switch(e.op){case 0:return null===(r=B(e.value,t))||void 0===r?void 0:r.darken(e.factor);case 1:return null===(i=B(e.value,t))||void 0===i?void 0:i.lighten(e.factor);case 2:return null===(c=B(e.value,t))||void 0===c?void 0:c.transparent(e.factor);case 3:{const r=B(e.background,t);return r?null===(a=B(e.value,t))||void 0===a?void 0:a.makeOpaque(r):B(e.value,t)}case 4:for(const r of e.values){const e=B(r,t);if(e)return e}return;case 6:return B(t.defines(e.if)?e.then:e.else,t);case 5:{const r=B(e.value,t);if(!r)return;const o=B(e.background,t);return o?r.isDarkerThan(o)?n.Q1.getLighterColor(r,o,e.factor).transparent(e.transparency):n.Q1.getDarkerColor(r,o,e.factor).transparent(e.transparency):r.transparent(e.factor*e.transparency)}default:throw(0,o.xb)(e)}}(e,t):void 0}s.O.add(u.ColorContribution,g);const F="vscode://schemas/workbench-colors",D=s.O.as(a.F.JSONContribution);D.registerSchema(F,g.getColorSchema());const w=new i.uC((()=>D.notifySchemaChanged(F)),200);g.onDidChangeSchema((()=>{w.isScheduled()||w.schedule()}));var y=r(51413);const L=k("foreground",{dark:"#CCCCCC",light:"#616161",hcDark:"#FFFFFF",hcLight:"#292929"},y.kg("foreground","Overall foreground color. This color is only used if not overridden by a component.")),S=(k("disabledForeground",{dark:"#CCCCCC80",light:"#61616180",hcDark:"#A5A5A5",hcLight:"#7F7F7F"},y.kg("disabledForeground","Overall foreground for disabled elements. This color is only used if not overridden by a component.")),k("errorForeground",{dark:"#F48771",light:"#A1260D",hcDark:"#F48771",hcLight:"#B5200D"},y.kg("errorForeground","Overall foreground color for error messages. This color is only used if not overridden by a component.")),k("descriptionForeground",{light:"#717171",dark:m(L,.7),hcDark:m(L,.7),hcLight:m(L,.7)},y.kg("descriptionForeground","Foreground color for description text providing additional information, for example for a label.")),k("icon.foreground",{dark:"#C5C5C5",light:"#424242",hcDark:"#FFFFFF",hcLight:"#292929"},y.kg("iconForeground","The default color for icons in the workbench."))),C=k("focusBorder",{dark:"#007FD4",light:"#0090F1",hcDark:"#F38518",hcLight:"#006BBD"},y.kg("focusBorder","Overall border color for focused elements. This color is only used if not overridden by a component.")),_=k("contrastBorder",{light:null,dark:null,hcDark:"#6FC3DF",hcLight:"#0F4A85"},y.kg("contrastBorder","An extra border around elements to separate them from others for greater contrast.")),I=k("contrastActiveBorder",{light:null,dark:null,hcDark:C,hcLight:C},y.kg("activeContrastBorder","An extra border around active elements to separate them from others for greater contrast.")),T=(k("selection.background",{light:null,dark:null,hcDark:null,hcLight:null},y.kg("selectionBackground","The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.")),k("textLink.foreground",{light:"#006AB1",dark:"#3794FF",hcDark:"#21A6FF",hcLight:"#0F4A85"},y.kg("textLinkForeground","Foreground color for links in text."))),A=(k("textLink.activeForeground",{light:"#006AB1",dark:"#3794FF",hcDark:"#21A6FF",hcLight:"#0F4A85"},y.kg("textLinkActiveForeground","Foreground color for links in text when clicked on and on mouse hover.")),k("textSeparator.foreground",{light:"#0000002e",dark:"#ffffff2e",hcDark:n.Q1.black,hcLight:"#292929"},y.kg("textSeparatorForeground","Color for text separators.")),k("textPreformat.foreground",{light:"#A31515",dark:"#D7BA7D",hcDark:"#000000",hcLight:"#FFFFFF"},y.kg("textPreformatForeground","Foreground color for preformatted text segments.")),k("textPreformat.background",{light:"#0000001A",dark:"#FFFFFF1A",hcDark:"#FFFFFF",hcLight:"#09345f"},y.kg("textPreformatBackground","Background color for preformatted text segments.")),k("textBlockQuote.background",{light:"#f2f2f2",dark:"#222222",hcDark:null,hcLight:"#F2F2F2"},y.kg("textBlockQuoteBackground","Background color for block quotes in text.")),k("textBlockQuote.border",{light:"#007acc80",dark:"#007acc80",hcDark:n.Q1.white,hcLight:"#292929"},y.kg("textBlockQuoteBorder","Border color for block quotes in text.")),k("textCodeBlock.background",{light:"#dcdcdc66",dark:"#0a0a0a66",hcDark:n.Q1.black,hcLight:"#F2F2F2"},y.kg("textCodeBlockBackground","Background color for code blocks in text.")),k("sash.hoverBorder",{dark:C,light:C,hcDark:C,hcLight:C},y.kg("sashActiveBorder","Border color of active sashes.")),k("badge.background",{dark:"#4D4D4D",light:"#C4C4C4",hcDark:n.Q1.black,hcLight:"#0F4A85"},y.kg("badgeBackground","Badge background color. Badges are small information labels, e.g. for search results count."))),E=k("badge.foreground",{dark:n.Q1.white,light:"#333",hcDark:n.Q1.white,hcLight:n.Q1.white},y.kg("badgeForeground","Badge foreground color. Badges are small information labels, e.g. for search results count.")),R=k("scrollbar.shadow",{dark:"#000000",light:"#DDDDDD",hcDark:null,hcLight:null},y.kg("scrollbarShadow","Scrollbar shadow to indicate that the view is scrolled.")),P=k("scrollbarSlider.background",{dark:n.Q1.fromHex("#797979").transparent(.4),light:n.Q1.fromHex("#646464").transparent(.4),hcDark:m(_,.6),hcLight:m(_,.4)},y.kg("scrollbarSliderBackground","Scrollbar slider background color.")),G=k("scrollbarSlider.hoverBackground",{dark:n.Q1.fromHex("#646464").transparent(.7),light:n.Q1.fromHex("#646464").transparent(.7),hcDark:m(_,.8),hcLight:m(_,.8)},y.kg("scrollbarSliderHoverBackground","Scrollbar slider background color when hovering.")),H=k("scrollbarSlider.activeBackground",{dark:n.Q1.fromHex("#BFBFBF").transparent(.4),light:n.Q1.fromHex("#000000").transparent(.6),hcDark:_,hcLight:_},y.kg("scrollbarSliderActiveBackground","Scrollbar slider background color when clicked on.")),x=k("progressBar.background",{dark:n.Q1.fromHex("#0E70C0"),light:n.Q1.fromHex("#0E70C0"),hcDark:_,hcLight:_},y.kg("progressBarBackground","Background color of the progress bar that can show for long running operations.")),O=k("editor.background",{light:"#ffffff",dark:"#1E1E1E",hcDark:n.Q1.black,hcLight:n.Q1.white},y.kg("editorBackground","Editor background color.")),Q=k("editor.foreground",{light:"#333333",dark:"#BBBBBB",hcDark:n.Q1.white,hcLight:L},y.kg("editorForeground","Editor default foreground color.")),U=(k("editorStickyScroll.background",{light:O,dark:O,hcDark:O,hcLight:O},y.kg("editorStickyScrollBackground","Background color of sticky scroll in the editor")),k("editorStickyScrollHover.background",{dark:"#2A2D2E",light:"#F0F0F0",hcDark:null,hcLight:n.Q1.fromHex("#0F4A85").transparent(.1)},y.kg("editorStickyScrollHoverBackground","Background color of sticky scroll on hover in the editor")),k("editorStickyScroll.border",{dark:null,light:null,hcDark:_,hcLight:_},y.kg("editorStickyScrollBorder","Border color of sticky scroll in the editor")),k("editorStickyScroll.shadow",{dark:R,light:R,hcDark:R,hcLight:R},y.kg("editorStickyScrollShadow"," Shadow color of sticky scroll in the editor")),k("editorWidget.background",{dark:"#252526",light:"#F3F3F3",hcDark:"#0C141F",hcLight:n.Q1.white},y.kg("editorWidgetBackground","Background color of editor widgets, such as find/replace."))),W=k("editorWidget.foreground",{dark:L,light:L,hcDark:L,hcLight:L},y.kg("editorWidgetForeground","Foreground color of editor widgets, such as find/replace.")),V=k("editorWidget.border",{dark:"#454545",light:"#C8C8C8",hcDark:_,hcLight:_},y.kg("editorWidgetBorder","Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.")),K=(k("editorWidget.resizeBorder",{light:null,dark:null,hcDark:null,hcLight:null},y.kg("editorWidgetResizeBorder","Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.")),k("editorError.background",{dark:null,light:null,hcDark:null,hcLight:null},y.kg("editorError.background","Background color of error text in the editor. The color must not be opaque so as not to hide underlying decorations."),!0),k("editorError.foreground",{dark:"#F14C4C",light:"#E51400",hcDark:"#F48771",hcLight:"#B5200D"},y.kg("editorError.foreground","Foreground color of error squigglies in the editor."))),M=k("editorError.border",{dark:null,light:null,hcDark:n.Q1.fromHex("#E47777").transparent(.8),hcLight:"#B5200D"},y.kg("errorBorder","If set, color of double underlines for errors in the editor.")),q=k("editorWarning.background",{dark:null,light:null,hcDark:null,hcLight:null},y.kg("editorWarning.background","Background color of warning text in the editor. The color must not be opaque so as not to hide underlying decorations."),!0),N=k("editorWarning.foreground",{dark:"#CCA700",light:"#BF8803",hcDark:"#FFD370",hcLight:"#895503"},y.kg("editorWarning.foreground","Foreground color of warning squigglies in the editor.")),j=k("editorWarning.border",{dark:null,light:null,hcDark:n.Q1.fromHex("#FFCC00").transparent(.8),hcLight:n.Q1.fromHex("#FFCC00").transparent(.8)},y.kg("warningBorder","If set, color of double underlines for warnings in the editor.")),z=(k("editorInfo.background",{dark:null,light:null,hcDark:null,hcLight:null},y.kg("editorInfo.background","Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations."),!0),k("editorInfo.foreground",{dark:"#3794FF",light:"#1a85ff",hcDark:"#3794FF",hcLight:"#1a85ff"},y.kg("editorInfo.foreground","Foreground color of info squigglies in the editor."))),$=k("editorInfo.border",{dark:null,light:null,hcDark:n.Q1.fromHex("#3794FF").transparent(.8),hcLight:"#292929"},y.kg("infoBorder","If set, color of double underlines for infos in the editor.")),Y=k("editorHint.foreground",{dark:n.Q1.fromHex("#eeeeee").transparent(.7),light:"#6c6c6c",hcDark:null,hcLight:null},y.kg("editorHint.foreground","Foreground color of hint squigglies in the editor.")),J=(k("editorHint.border",{dark:null,light:null,hcDark:n.Q1.fromHex("#eeeeee").transparent(.8),hcLight:"#292929"},y.kg("hintBorder","If set, color of double underlines for hints in the editor.")),k("editorLink.activeForeground",{dark:"#4E94CE",light:n.Q1.blue,hcDark:n.Q1.cyan,hcLight:"#292929"},y.kg("activeLinkForeground","Color of active links."))),X=k("editor.selectionBackground",{light:"#ADD6FF",dark:"#264F78",hcDark:"#f3f518",hcLight:"#0F4A85"},y.kg("editorSelectionBackground","Color of the editor selection.")),Z=k("editor.selectionForeground",{light:null,dark:null,hcDark:"#000000",hcLight:n.Q1.white},y.kg("editorSelectionForeground","Color of the selected text for high contrast.")),ee=k("editor.inactiveSelectionBackground",{light:m(X,.5),dark:m(X,.5),hcDark:m(X,.7),hcLight:m(X,.5)},y.kg("editorInactiveSelection","Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations."),!0),te=k("editor.selectionHighlightBackground",{light:v(X,O,.3,.6),dark:v(X,O,.3,.6),hcDark:null,hcLight:null},y.kg("editorSelectionHighlight","Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations."),!0),re=(k("editor.selectionHighlightBorder",{light:null,dark:null,hcDark:I,hcLight:I},y.kg("editorSelectionHighlightBorder","Border color for regions with the same content as the selection.")),k("editor.findMatchBackground",{light:"#A8AC94",dark:"#515C6A",hcDark:null,hcLight:null},y.kg("editorFindMatch","Color of the current search match.")),k("editor.findMatchHighlightBackground",{light:"#EA5C0055",dark:"#EA5C0055",hcDark:null,hcLight:null},y.kg("findMatchHighlight","Color of the other search matches. The color must not be opaque so as not to hide underlying decorations."),!0)),oe=(k("editor.findRangeHighlightBackground",{dark:"#3a3d4166",light:"#b4b4b44d",hcDark:null,hcLight:null},y.kg("findRangeHighlight","Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations."),!0),k("editor.findMatchBorder",{light:null,dark:null,hcDark:I,hcLight:I},y.kg("editorFindMatchBorder","Border color of the current search match.")),k("editor.findMatchHighlightBorder",{light:null,dark:null,hcDark:I,hcLight:I},y.kg("findMatchHighlightBorder","Border color of the other search matches."))),ie=k("editor.findRangeHighlightBorder",{dark:null,light:null,hcDark:m(I,.4),hcLight:m(I,.4)},y.kg("findRangeHighlightBorder","Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations."),!0),ne=(k("editor.hoverHighlightBackground",{light:"#ADD6FF26",dark:"#264f7840",hcDark:"#ADD6FF26",hcLight:null},y.kg("hoverHighlight","Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations."),!0),k("editorHoverWidget.background",{light:U,dark:U,hcDark:U,hcLight:U},y.kg("hoverBackground","Background color of the editor hover."))),ce=(k("editorHoverWidget.foreground",{light:W,dark:W,hcDark:W,hcLight:W},y.kg("hoverForeground","Foreground color of the editor hover.")),k("editorHoverWidget.border",{light:V,dark:V,hcDark:V,hcLight:V},y.kg("hoverBorder","Border color of the editor hover."))),ae=(k("editorHoverWidget.statusBarBackground",{dark:p(ne,.2),light:f(ne,.05),hcDark:U,hcLight:U},y.kg("statusBarBackground","Background color of the editor hover status bar.")),k("editorInlayHint.foreground",{dark:"#969696",light:"#969696",hcDark:n.Q1.white,hcLight:n.Q1.black},y.kg("editorInlayHintForeground","Foreground color of inline hints"))),se=k("editorInlayHint.background",{dark:m(A,.1),light:m(A,.1),hcDark:m(n.Q1.white,.1),hcLight:m(A,.1)},y.kg("editorInlayHintBackground","Background color of inline hints")),le=k("editorInlayHint.typeForeground",{dark:ae,light:ae,hcDark:ae,hcLight:ae},y.kg("editorInlayHintForegroundTypes","Foreground color of inline hints for types")),de=k("editorInlayHint.typeBackground",{dark:se,light:se,hcDark:se,hcLight:se},y.kg("editorInlayHintBackgroundTypes","Background color of inline hints for types")),he=k("editorInlayHint.parameterForeground",{dark:ae,light:ae,hcDark:ae,hcLight:ae},y.kg("editorInlayHintForegroundParameter","Foreground color of inline hints for parameters")),ue=k("editorInlayHint.parameterBackground",{dark:se,light:se,hcDark:se,hcLight:se},y.kg("editorInlayHintBackgroundParameter","Background color of inline hints for parameters")),ge=k("editorLightBulb.foreground",{dark:"#FFCC00",light:"#DDB100",hcDark:"#FFCC00",hcLight:"#007ACC"},y.kg("editorLightBulbForeground","The color used for the lightbulb actions icon.")),ke=(k("editorLightBulbAutoFix.foreground",{dark:"#75BEFF",light:"#007ACC",hcDark:"#75BEFF",hcLight:"#007ACC"},y.kg("editorLightBulbAutoFixForeground","The color used for the lightbulb auto fix actions icon.")),k("editorLightBulbAi.foreground",{dark:ge,light:ge,hcDark:ge,hcLight:ge},y.kg("editorLightBulbAiForeground","The color used for the lightbulb AI icon.")),k("editor.snippetTabstopHighlightBackground",{dark:new n.Q1(new n.bU(124,124,124,.3)),light:new n.Q1(new n.bU(10,50,100,.2)),hcDark:new n.Q1(new n.bU(124,124,124,.3)),hcLight:new n.Q1(new n.bU(10,50,100,.2))},y.kg("snippetTabstopHighlightBackground","Highlight background color of a snippet tabstop.")),k("editor.snippetTabstopHighlightBorder",{dark:null,light:null,hcDark:null,hcLight:null},y.kg("snippetTabstopHighlightBorder","Highlight border color of a snippet tabstop.")),k("editor.snippetFinalTabstopHighlightBackground",{dark:null,light:null,hcDark:null,hcLight:null},y.kg("snippetFinalTabstopHighlightBackground","Highlight background color of the final tabstop of a snippet.")),k("editor.snippetFinalTabstopHighlightBorder",{dark:"#525252",light:new n.Q1(new n.bU(10,50,100,.5)),hcDark:"#525252",hcLight:"#292929"},y.kg("snippetFinalTabstopHighlightBorder","Highlight border color of the final tabstop of a snippet.")),new n.Q1(new n.bU(155,185,85,.2))),fe=new n.Q1(new n.bU(255,0,0,.2)),pe=k("diffEditor.insertedTextBackground",{dark:"#9ccc2c33",light:"#9ccc2c40",hcDark:null,hcLight:null},y.kg("diffEditorInserted","Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations."),!0),me=k("diffEditor.removedTextBackground",{dark:"#ff000033",light:"#ff000033",hcDark:null,hcLight:null},y.kg("diffEditorRemoved","Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations."),!0),be=(k("diffEditor.insertedLineBackground",{dark:ke,light:ke,hcDark:null,hcLight:null},y.kg("diffEditorInsertedLines","Background color for lines that got inserted. The color must not be opaque so as not to hide underlying decorations."),!0),k("diffEditor.removedLineBackground",{dark:fe,light:fe,hcDark:null,hcLight:null},y.kg("diffEditorRemovedLines","Background color for lines that got removed. The color must not be opaque so as not to hide underlying decorations."),!0),k("diffEditorGutter.insertedLineBackground",{dark:null,light:null,hcDark:null,hcLight:null},y.kg("diffEditorInsertedLineGutter","Background color for the margin where lines got inserted.")),k("diffEditorGutter.removedLineBackground",{dark:null,light:null,hcDark:null,hcLight:null},y.kg("diffEditorRemovedLineGutter","Background color for the margin where lines got removed.")),k("diffEditorOverview.insertedForeground",{dark:null,light:null,hcDark:null,hcLight:null},y.kg("diffEditorOverviewInserted","Diff overview ruler foreground for inserted content."))),ve=k("diffEditorOverview.removedForeground",{dark:null,light:null,hcDark:null,hcLight:null},y.kg("diffEditorOverviewRemoved","Diff overview ruler foreground for removed content.")),Be=(k("diffEditor.insertedTextBorder",{dark:null,light:null,hcDark:"#33ff2eff",hcLight:"#374E06"},y.kg("diffEditorInsertedOutline","Outline color for the text that got inserted.")),k("diffEditor.removedTextBorder",{dark:null,light:null,hcDark:"#FF008F",hcLight:"#AD0707"},y.kg("diffEditorRemovedOutline","Outline color for text that got removed.")),k("diffEditor.border",{dark:null,light:null,hcDark:_,hcLight:_},y.kg("diffEditorBorder","Border color between the two text editors.")),k("diffEditor.diagonalFill",{dark:"#cccccc33",light:"#22222233",hcDark:null,hcLight:null},y.kg("diffDiagonalFill","Color of the diff editor's diagonal fill. The diagonal fill is used in side-by-side diff views.")),k("diffEditor.unchangedRegionBackground",{dark:"sideBar.background",light:"sideBar.background",hcDark:"sideBar.background",hcLight:"sideBar.background"},y.kg("diffEditor.unchangedRegionBackground","The background color of unchanged blocks in the diff editor.")),k("diffEditor.unchangedRegionForeground",{dark:"foreground",light:"foreground",hcDark:"foreground",hcLight:"foreground"},y.kg("diffEditor.unchangedRegionForeground","The foreground color of unchanged blocks in the diff editor.")),k("diffEditor.unchangedCodeBackground",{dark:"#74747429",light:"#b8b8b829",hcDark:null,hcLight:null},y.kg("diffEditor.unchangedCodeBackground","The background color of unchanged code in the diff editor.")),k("widget.shadow",{dark:m(n.Q1.black,.36),light:m(n.Q1.black,.16),hcDark:null,hcLight:null},y.kg("widgetShadow","Shadow color of widgets such as find/replace inside the editor."))),Fe=k("widget.border",{dark:null,light:null,hcDark:_,hcLight:_},y.kg("widgetBorder","Border color of widgets such as find/replace inside the editor.")),De=k("toolbar.hoverBackground",{dark:"#5a5d5e50",light:"#b8b8b850",hcDark:null,hcLight:null},y.kg("toolbarHoverBackground","Toolbar background when hovering over actions using the mouse")),we=(k("toolbar.hoverOutline",{dark:null,light:null,hcDark:I,hcLight:I},y.kg("toolbarHoverOutline","Toolbar outline when hovering over actions using the mouse")),k("toolbar.activeBackground",{dark:p(De,.1),light:f(De,.1),hcDark:null,hcLight:null},y.kg("toolbarActiveBackground","Toolbar background when holding the mouse over actions")),k("breadcrumb.foreground",{light:m(L,.8),dark:m(L,.8),hcDark:m(L,.8),hcLight:m(L,.8)},y.kg("breadcrumbsFocusForeground","Color of focused breadcrumb items."))),ye=k("breadcrumb.background",{light:O,dark:O,hcDark:O,hcLight:O},y.kg("breadcrumbsBackground","Background color of breadcrumb items.")),Le=k("breadcrumb.focusForeground",{light:f(L,.2),dark:p(L,.1),hcDark:p(L,.1),hcLight:p(L,.1)},y.kg("breadcrumbsFocusForeground","Color of focused breadcrumb items.")),Se=k("breadcrumb.activeSelectionForeground",{light:f(L,.2),dark:p(L,.1),hcDark:p(L,.1),hcLight:p(L,.1)},y.kg("breadcrumbsSelectedForeground","Color of selected breadcrumb items.")),Ce=(k("breadcrumbPicker.background",{light:U,dark:U,hcDark:U,hcLight:U},y.kg("breadcrumbsSelectedBackground","Background color of breadcrumb item picker.")),n.Q1.fromHex("#40C8AE").transparent(.5)),_e=n.Q1.fromHex("#40A6FF").transparent(.5),Ie=n.Q1.fromHex("#606060").transparent(.4),Te=.4,Ae=k("merge.currentHeaderBackground",{dark:Ce,light:Ce,hcDark:null,hcLight:null},y.kg("mergeCurrentHeaderBackground","Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),Ee=(k("merge.currentContentBackground",{dark:m(Ae,Te),light:m(Ae,Te),hcDark:m(Ae,Te),hcLight:m(Ae,Te)},y.kg("mergeCurrentContentBackground","Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),k("merge.incomingHeaderBackground",{dark:_e,light:_e,hcDark:null,hcLight:null},y.kg("mergeIncomingHeaderBackground","Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0)),Re=(k("merge.incomingContentBackground",{dark:m(Ee,Te),light:m(Ee,Te),hcDark:m(Ee,Te),hcLight:m(Ee,Te)},y.kg("mergeIncomingContentBackground","Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),k("merge.commonHeaderBackground",{dark:Ie,light:Ie,hcDark:null,hcLight:null},y.kg("mergeCommonHeaderBackground","Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0)),Pe=(k("merge.commonContentBackground",{dark:m(Re,Te),light:m(Re,Te),hcDark:m(Re,Te),hcLight:m(Re,Te)},y.kg("mergeCommonContentBackground","Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations."),!0),k("merge.border",{dark:null,light:null,hcDark:"#C3DF6F",hcLight:"#007ACC"},y.kg("mergeBorder","Border color on headers and the splitter in inline merge-conflicts."))),Ge=(k("editorOverviewRuler.currentContentForeground",{dark:m(Ae,1),light:m(Ae,1),hcDark:Pe,hcLight:Pe},y.kg("overviewRulerCurrentContentForeground","Current overview ruler foreground for inline merge-conflicts.")),k("editorOverviewRuler.incomingContentForeground",{dark:m(Ee,1),light:m(Ee,1),hcDark:Pe,hcLight:Pe},y.kg("overviewRulerIncomingContentForeground","Incoming overview ruler foreground for inline merge-conflicts.")),k("editorOverviewRuler.commonContentForeground",{dark:m(Re,1),light:m(Re,1),hcDark:Pe,hcLight:Pe},y.kg("overviewRulerCommonContentForeground","Common ancestor overview ruler foreground for inline merge-conflicts.")),k("editorOverviewRuler.findMatchForeground",{dark:"#d186167e",light:"#d186167e",hcDark:"#AB5A00",hcLight:""},y.kg("overviewRulerFindMatchForeground","Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations."),!0)),He=k("editorOverviewRuler.selectionHighlightForeground",{dark:"#A0A0A0CC",light:"#A0A0A0CC",hcDark:"#A0A0A0CC",hcLight:"#A0A0A0CC"},y.kg("overviewRulerSelectionHighlightForeground","Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations."),!0),xe=k("problemsErrorIcon.foreground",{dark:K,light:K,hcDark:K,hcLight:K},y.kg("problemsErrorIconForeground","The color used for the problems error icon.")),Oe=k("problemsWarningIcon.foreground",{dark:N,light:N,hcDark:N,hcLight:N},y.kg("problemsWarningIconForeground","The color used for the problems warning icon.")),Qe=k("problemsInfoIcon.foreground",{dark:z,light:z,hcDark:z,hcLight:z},y.kg("problemsInfoIconForeground","The color used for the problems info icon.")),Ue=k("minimap.findMatchHighlight",{light:"#d18616",dark:"#d18616",hcDark:"#AB5A00",hcLight:"#0F4A85"},y.kg("minimapFindMatchHighlight","Minimap marker color for find matches."),!0),We=k("minimap.selectionOccurrenceHighlight",{light:"#c9c9c9",dark:"#676767",hcDark:"#ffffff",hcLight:"#0F4A85"},y.kg("minimapSelectionOccurrenceHighlight","Minimap marker color for repeating editor selections."),!0),Ve=k("minimap.selectionHighlight",{light:"#ADD6FF",dark:"#264F78",hcDark:"#ffffff",hcLight:"#0F4A85"},y.kg("minimapSelectionHighlight","Minimap marker color for the editor selection."),!0),Ke=k("minimap.infoHighlight",{dark:z,light:z,hcDark:$,hcLight:$},y.kg("minimapInfo","Minimap marker color for infos.")),Me=k("minimap.warningHighlight",{dark:N,light:N,hcDark:j,hcLight:j},y.kg("overviewRuleWarning","Minimap marker color for warnings.")),qe=k("minimap.errorHighlight",{dark:new n.Q1(new n.bU(255,18,18,.7)),light:new n.Q1(new n.bU(255,18,18,.7)),hcDark:new n.Q1(new n.bU(255,50,50,1)),hcLight:"#B5200D"},y.kg("minimapError","Minimap marker color for errors.")),Ne=k("minimap.background",{dark:null,light:null,hcDark:null,hcLight:null},y.kg("minimapBackground","Minimap background color.")),je=k("minimap.foregroundOpacity",{dark:n.Q1.fromHex("#000f"),light:n.Q1.fromHex("#000f"),hcDark:n.Q1.fromHex("#000f"),hcLight:n.Q1.fromHex("#000f")},y.kg("minimapForegroundOpacity",'Opacity of foreground elements rendered in the minimap. For example, "#000000c0" will render the elements with 75% opacity.')),ze=(k("minimapSlider.background",{light:m(P,.5),dark:m(P,.5),hcDark:m(P,.5),hcLight:m(P,.5)},y.kg("minimapSliderBackground","Minimap slider background color.")),k("minimapSlider.hoverBackground",{light:m(G,.5),dark:m(G,.5),hcDark:m(G,.5),hcLight:m(G,.5)},y.kg("minimapSliderHoverBackground","Minimap slider background color when hovering.")),k("minimapSlider.activeBackground",{light:m(H,.5),dark:m(H,.5),hcDark:m(H,.5),hcLight:m(H,.5)},y.kg("minimapSliderActiveBackground","Minimap slider background color when clicked on.")),k("charts.foreground",{dark:L,light:L,hcDark:L,hcLight:L},y.kg("chartsForeground","The foreground color used in charts.")),k("charts.lines",{dark:m(L,.5),light:m(L,.5),hcDark:m(L,.5),hcLight:m(L,.5)},y.kg("chartsLines","The color used for horizontal lines in charts.")),k("charts.red",{dark:K,light:K,hcDark:K,hcLight:K},y.kg("chartsRed","The red color used in chart visualizations.")),k("charts.blue",{dark:z,light:z,hcDark:z,hcLight:z},y.kg("chartsBlue","The blue color used in chart visualizations.")),k("charts.yellow",{dark:N,light:N,hcDark:N,hcLight:N},y.kg("chartsYellow","The yellow color used in chart visualizations.")),k("charts.orange",{dark:Ue,light:Ue,hcDark:Ue,hcLight:Ue},y.kg("chartsOrange","The orange color used in chart visualizations.")),k("charts.green",{dark:"#89D185",light:"#388A34",hcDark:"#89D185",hcLight:"#374e06"},y.kg("chartsGreen","The green color used in chart visualizations.")),k("charts.purple",{dark:"#B180D7",light:"#652D90",hcDark:"#B180D7",hcLight:"#652D90"},y.kg("chartsPurple","The purple color used in chart visualizations.")),k("input.background",{dark:"#3C3C3C",light:n.Q1.white,hcDark:n.Q1.black,hcLight:n.Q1.white},y.kg("inputBoxBackground","Input box background."))),$e=k("input.foreground",{dark:L,light:L,hcDark:L,hcLight:L},y.kg("inputBoxForeground","Input box foreground.")),Ye=k("input.border",{dark:null,light:null,hcDark:_,hcLight:_},y.kg("inputBoxBorder","Input box border.")),Je=k("inputOption.activeBorder",{dark:"#007ACC",light:"#007ACC",hcDark:_,hcLight:_},y.kg("inputBoxActiveOptionBorder","Border color of activated options in input fields.")),Xe=(k("inputOption.hoverBackground",{dark:"#5a5d5e80",light:"#b8b8b850",hcDark:null,hcLight:null},y.kg("inputOption.hoverBackground","Background color of activated options in input fields.")),k("inputOption.activeBackground",{dark:m(C,.4),light:m(C,.2),hcDark:n.Q1.transparent,hcLight:n.Q1.transparent},y.kg("inputOption.activeBackground","Background hover color of options in input fields."))),Ze=k("inputOption.activeForeground",{dark:n.Q1.white,light:n.Q1.black,hcDark:L,hcLight:L},y.kg("inputOption.activeForeground","Foreground color of activated options in input fields.")),et=(k("input.placeholderForeground",{light:m(L,.5),dark:m(L,.5),hcDark:m(L,.7),hcLight:m(L,.7)},y.kg("inputPlaceholderForeground","Input box foreground color for placeholder text.")),k("inputValidation.infoBackground",{dark:"#063B49",light:"#D6ECF2",hcDark:n.Q1.black,hcLight:n.Q1.white},y.kg("inputValidationInfoBackground","Input validation background color for information severity."))),tt=k("inputValidation.infoForeground",{dark:null,light:null,hcDark:null,hcLight:L},y.kg("inputValidationInfoForeground","Input validation foreground color for information severity.")),rt=k("inputValidation.infoBorder",{dark:"#007acc",light:"#007acc",hcDark:_,hcLight:_},y.kg("inputValidationInfoBorder","Input validation border color for information severity.")),ot=k("inputValidation.warningBackground",{dark:"#352A05",light:"#F6F5D2",hcDark:n.Q1.black,hcLight:n.Q1.white},y.kg("inputValidationWarningBackground","Input validation background color for warning severity.")),it=k("inputValidation.warningForeground",{dark:null,light:null,hcDark:null,hcLight:L},y.kg("inputValidationWarningForeground","Input validation foreground color for warning severity.")),nt=k("inputValidation.warningBorder",{dark:"#B89500",light:"#B89500",hcDark:_,hcLight:_},y.kg("inputValidationWarningBorder","Input validation border color for warning severity.")),ct=k("inputValidation.errorBackground",{dark:"#5A1D1D",light:"#F2DEDE",hcDark:n.Q1.black,hcLight:n.Q1.white},y.kg("inputValidationErrorBackground","Input validation background color for error severity.")),at=k("inputValidation.errorForeground",{dark:null,light:null,hcDark:null,hcLight:L},y.kg("inputValidationErrorForeground","Input validation foreground color for error severity.")),st=k("inputValidation.errorBorder",{dark:"#BE1100",light:"#BE1100",hcDark:_,hcLight:_},y.kg("inputValidationErrorBorder","Input validation border color for error severity.")),lt=k("dropdown.background",{dark:"#3C3C3C",light:n.Q1.white,hcDark:n.Q1.black,hcLight:n.Q1.white},y.kg("dropdownBackground","Dropdown background.")),dt=k("dropdown.listBackground",{dark:null,light:null,hcDark:n.Q1.black,hcLight:n.Q1.white},y.kg("dropdownListBackground","Dropdown list background.")),ht=k("dropdown.foreground",{dark:"#F0F0F0",light:L,hcDark:n.Q1.white,hcLight:L},y.kg("dropdownForeground","Dropdown foreground.")),ut=k("dropdown.border",{dark:lt,light:"#CECECE",hcDark:_,hcLight:_},y.kg("dropdownBorder","Dropdown border.")),gt=k("button.foreground",{dark:n.Q1.white,light:n.Q1.white,hcDark:n.Q1.white,hcLight:n.Q1.white},y.kg("buttonForeground","Button foreground color.")),kt=k("button.separator",{dark:m(gt,.4),light:m(gt,.4),hcDark:m(gt,.4),hcLight:m(gt,.4)},y.kg("buttonSeparator","Button separator color.")),ft=k("button.background",{dark:"#0E639C",light:"#007ACC",hcDark:null,hcLight:"#0F4A85"},y.kg("buttonBackground","Button background color.")),pt=k("button.hoverBackground",{dark:p(ft,.2),light:f(ft,.2),hcDark:ft,hcLight:ft},y.kg("buttonHoverBackground","Button background color when hovering.")),mt=k("button.border",{dark:_,light:_,hcDark:_,hcLight:_},y.kg("buttonBorder","Button border color.")),bt=k("button.secondaryForeground",{dark:n.Q1.white,light:n.Q1.white,hcDark:n.Q1.white,hcLight:L},y.kg("buttonSecondaryForeground","Secondary button foreground color.")),vt=k("button.secondaryBackground",{dark:"#3A3D41",light:"#5F6A79",hcDark:null,hcLight:n.Q1.white},y.kg("buttonSecondaryBackground","Secondary button background color.")),Bt=k("button.secondaryHoverBackground",{dark:p(vt,.2),light:f(vt,.2),hcDark:null,hcLight:null},y.kg("buttonSecondaryHoverBackground","Secondary button background color when hovering.")),Ft=k("checkbox.background",{dark:lt,light:lt,hcDark:lt,hcLight:lt},y.kg("checkbox.background","Background color of checkbox widget.")),Dt=(k("checkbox.selectBackground",{dark:U,light:U,hcDark:U,hcLight:U},y.kg("checkbox.select.background","Background color of checkbox widget when the element it's in is selected.")),k("checkbox.foreground",{dark:ht,light:ht,hcDark:ht,hcLight:ht},y.kg("checkbox.foreground","Foreground color of checkbox widget."))),wt=k("checkbox.border",{dark:ut,light:ut,hcDark:ut,hcLight:ut},y.kg("checkbox.border","Border color of checkbox widget.")),yt=(k("checkbox.selectBorder",{dark:S,light:S,hcDark:S,hcLight:S},y.kg("checkbox.select.border","Border color of checkbox widget when the element it's in is selected.")),k("keybindingLabel.background",{dark:new n.Q1(new n.bU(128,128,128,.17)),light:new n.Q1(new n.bU(221,221,221,.4)),hcDark:n.Q1.transparent,hcLight:n.Q1.transparent},y.kg("keybindingLabelBackground","Keybinding label background color. The keybinding label is used to represent a keyboard shortcut."))),Lt=k("keybindingLabel.foreground",{dark:n.Q1.fromHex("#CCCCCC"),light:n.Q1.fromHex("#555555"),hcDark:n.Q1.white,hcLight:L},y.kg("keybindingLabelForeground","Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.")),St=k("keybindingLabel.border",{dark:new n.Q1(new n.bU(51,51,51,.6)),light:new n.Q1(new n.bU(204,204,204,.4)),hcDark:new n.Q1(new n.bU(111,195,223)),hcLight:_},y.kg("keybindingLabelBorder","Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.")),Ct=k("keybindingLabel.bottomBorder",{dark:new n.Q1(new n.bU(68,68,68,.6)),light:new n.Q1(new n.bU(187,187,187,.4)),hcDark:new n.Q1(new n.bU(111,195,223)),hcLight:L},y.kg("keybindingLabelBottomBorder","Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut.")),_t=k("list.focusBackground",{dark:null,light:null,hcDark:null,hcLight:null},y.kg("listFocusBackground","List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),It=k("list.focusForeground",{dark:null,light:null,hcDark:null,hcLight:null},y.kg("listFocusForeground","List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),Tt=k("list.focusOutline",{dark:C,light:C,hcDark:I,hcLight:I},y.kg("listFocusOutline","List/Tree outline color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),At=k("list.focusAndSelectionOutline",{dark:null,light:null,hcDark:null,hcLight:null},y.kg("listFocusAndSelectionOutline","List/Tree outline color for the focused item when the list/tree is active and selected. An active list/tree has keyboard focus, an inactive does not.")),Et=k("list.activeSelectionBackground",{dark:"#04395E",light:"#0060C0",hcDark:null,hcLight:n.Q1.fromHex("#0F4A85").transparent(.1)},y.kg("listActiveSelectionBackground","List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),Rt=k("list.activeSelectionForeground",{dark:n.Q1.white,light:n.Q1.white,hcDark:null,hcLight:null},y.kg("listActiveSelectionForeground","List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),Pt=k("list.activeSelectionIconForeground",{dark:null,light:null,hcDark:null,hcLight:null},y.kg("listActiveSelectionIconForeground","List/Tree icon foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.")),Gt=k("list.inactiveSelectionBackground",{dark:"#37373D",light:"#E4E6F1",hcDark:null,hcLight:n.Q1.fromHex("#0F4A85").transparent(.1)},y.kg("listInactiveSelectionBackground","List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),Ht=k("list.inactiveSelectionForeground",{dark:null,light:null,hcDark:null,hcLight:null},y.kg("listInactiveSelectionForeground","List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),xt=k("list.inactiveSelectionIconForeground",{dark:null,light:null,hcDark:null,hcLight:null},y.kg("listInactiveSelectionIconForeground","List/Tree icon foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),Ot=k("list.inactiveFocusBackground",{dark:null,light:null,hcDark:null,hcLight:null},y.kg("listInactiveFocusBackground","List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),Qt=k("list.inactiveFocusOutline",{dark:null,light:null,hcDark:null,hcLight:null},y.kg("listInactiveFocusOutline","List/Tree outline color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.")),Ut=k("list.hoverBackground",{dark:"#2A2D2E",light:"#F0F0F0",hcDark:n.Q1.white.transparent(.1),hcLight:n.Q1.fromHex("#0F4A85").transparent(.1)},y.kg("listHoverBackground","List/Tree background when hovering over items using the mouse.")),Wt=k("list.hoverForeground",{dark:null,light:null,hcDark:null,hcLight:null},y.kg("listHoverForeground","List/Tree foreground when hovering over items using the mouse.")),Vt=k("list.dropBackground",{dark:"#062F4A",light:"#D6EBFF",hcDark:null,hcLight:null},y.kg("listDropBackground","List/Tree drag and drop background when moving items over other items when using the mouse.")),Kt=k("list.dropBetweenBackground",{dark:S,light:S,hcDark:null,hcLight:null},y.kg("listDropBetweenBackground","List/Tree drag and drop border color when moving items between items when using the mouse.")),Mt=k("list.highlightForeground",{dark:"#2AAAFF",light:"#0066BF",hcDark:C,hcLight:C},y.kg("highlight","List/Tree foreground color of the match highlights when searching inside the list/tree.")),qt=k("list.focusHighlightForeground",{dark:Mt,light:(Nt=Et,jt=Mt,zt="#BBE7FF",{op:6,if:Nt,then:jt,else:zt}),hcDark:Mt,hcLight:Mt},y.kg("listFocusHighlightForeground","List/Tree foreground color of the match highlights on actively focused items when searching inside the list/tree."));var Nt,jt,zt;k("list.invalidItemForeground",{dark:"#B89500",light:"#B89500",hcDark:"#B89500",hcLight:"#B5200D"},y.kg("invalidItemForeground","List/Tree foreground color for invalid items, for example an unresolved root in explorer.")),k("list.errorForeground",{dark:"#F88070",light:"#B01011",hcDark:null,hcLight:null},y.kg("listErrorForeground","Foreground color of list items containing errors.")),k("list.warningForeground",{dark:"#CCA700",light:"#855F00",hcDark:null,hcLight:null},y.kg("listWarningForeground","Foreground color of list items containing warnings."));const $t=k("listFilterWidget.background",{light:f(U,0),dark:p(U,0),hcDark:U,hcLight:U},y.kg("listFilterWidgetBackground","Background color of the type filter widget in lists and trees.")),Yt=k("listFilterWidget.outline",{dark:n.Q1.transparent,light:n.Q1.transparent,hcDark:"#f38518",hcLight:"#007ACC"},y.kg("listFilterWidgetOutline","Outline color of the type filter widget in lists and trees.")),Jt=k("listFilterWidget.noMatchesOutline",{dark:"#BE1100",light:"#BE1100",hcDark:_,hcLight:_},y.kg("listFilterWidgetNoMatchesOutline","Outline color of the type filter widget in lists and trees, when there are no matches.")),Xt=k("listFilterWidget.shadow",{dark:Be,light:Be,hcDark:Be,hcLight:Be},y.kg("listFilterWidgetShadow","Shadow color of the type filter widget in lists and trees.")),Zt=(k("list.filterMatchBackground",{dark:re,light:re,hcDark:null,hcLight:null},y.kg("listFilterMatchHighlight","Background color of the filtered match.")),k("list.filterMatchBorder",{dark:oe,light:oe,hcDark:_,hcLight:I},y.kg("listFilterMatchHighlightBorder","Border color of the filtered match.")),k("list.deemphasizedForeground",{dark:"#8C8C8C",light:"#8E8E90",hcDark:"#A7A8A9",hcLight:"#666666"},y.kg("listDeemphasizedForeground","List/Tree foreground color for items that are deemphasized.")),k("tree.indentGuidesStroke",{dark:"#585858",light:"#a9a9a9",hcDark:"#a9a9a9",hcLight:"#a5a5a5"},y.kg("treeIndentGuidesStroke","Tree stroke color for the indentation guides."))),er=k("tree.inactiveIndentGuidesStroke",{dark:m(Zt,.4),light:m(Zt,.4),hcDark:m(Zt,.4),hcLight:m(Zt,.4)},y.kg("treeInactiveIndentGuidesStroke","Tree stroke color for the indentation guides that are not active.")),tr=k("tree.tableColumnsBorder",{dark:"#CCCCCC20",light:"#61616120",hcDark:null,hcLight:null},y.kg("tableColumnsBorder","Table border color between columns.")),rr=k("tree.tableOddRowsBackground",{dark:m(L,.04),light:m(L,.04),hcDark:null,hcLight:null},y.kg("tableOddRowsBackgroundColor","Background color for odd table rows.")),or=k("menu.border",{dark:null,light:null,hcDark:_,hcLight:_},y.kg("menuBorder","Border color of menus.")),ir=k("menu.foreground",{dark:ht,light:ht,hcDark:ht,hcLight:ht},y.kg("menuForeground","Foreground color of menu items.")),nr=k("menu.background",{dark:lt,light:lt,hcDark:lt,hcLight:lt},y.kg("menuBackground","Background color of menu items.")),cr=k("menu.selectionForeground",{dark:Rt,light:Rt,hcDark:Rt,hcLight:Rt},y.kg("menuSelectionForeground","Foreground color of the selected menu item in menus.")),ar=k("menu.selectionBackground",{dark:Et,light:Et,hcDark:Et,hcLight:Et},y.kg("menuSelectionBackground","Background color of the selected menu item in menus.")),sr=k("menu.selectionBorder",{dark:null,light:null,hcDark:I,hcLight:I},y.kg("menuSelectionBorder","Border color of the selected menu item in menus.")),lr=k("menu.separatorBackground",{dark:"#606060",light:"#D4D4D4",hcDark:_,hcLight:_},y.kg("menuSeparatorBackground","Color of a separator menu item in menus.")),dr=k("quickInput.background",{dark:U,light:U,hcDark:U,hcLight:U},y.kg("pickerBackground","Quick picker background color. The quick picker widget is the container for pickers like the command palette.")),hr=k("quickInput.foreground",{dark:W,light:W,hcDark:W,hcLight:W},y.kg("pickerForeground","Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.")),ur=k("quickInputTitle.background",{dark:new n.Q1(new n.bU(255,255,255,.105)),light:new n.Q1(new n.bU(0,0,0,.06)),hcDark:"#000000",hcLight:n.Q1.white},y.kg("pickerTitleBackground","Quick picker title background color. The quick picker widget is the container for pickers like the command palette.")),gr=k("pickerGroup.foreground",{dark:"#3794FF",light:"#0066BF",hcDark:n.Q1.white,hcLight:"#0F4A85"},y.kg("pickerGroupForeground","Quick picker color for grouping labels.")),kr=k("pickerGroup.border",{dark:"#3F3F46",light:"#CCCEDB",hcDark:n.Q1.white,hcLight:"#0F4A85"},y.kg("pickerGroupBorder","Quick picker color for grouping borders.")),fr=k("quickInput.list.focusBackground",{dark:null,light:null,hcDark:null,hcLight:null},"",void 0,y.kg("quickInput.list.focusBackground deprecation","Please use quickInputList.focusBackground instead")),pr=k("quickInputList.focusForeground",{dark:Rt,light:Rt,hcDark:Rt,hcLight:Rt},y.kg("quickInput.listFocusForeground","Quick picker foreground color for the focused item.")),mr=k("quickInputList.focusIconForeground",{dark:Pt,light:Pt,hcDark:Pt,hcLight:Pt},y.kg("quickInput.listFocusIconForeground","Quick picker icon foreground color for the focused item.")),br=k("quickInputList.focusBackground",{dark:b(fr,Et),light:b(fr,Et),hcDark:null,hcLight:null},y.kg("quickInput.listFocusBackground","Quick picker background color for the focused item."));k("search.resultsInfoForeground",{light:L,dark:m(L,.65),hcDark:L,hcLight:L},y.kg("search.resultsInfoForeground","Color of the text in the search viewlet's completion message.")),k("searchEditor.findMatchBackground",{light:m(re,.66),dark:m(re,.66),hcDark:re,hcLight:re},y.kg("searchEditor.queryMatch","Color of the Search Editor query matches.")),k("searchEditor.findMatchBorder",{light:m(oe,.66),dark:m(oe,.66),hcDark:oe,hcLight:oe},y.kg("searchEditor.editorFindMatchBorder","Border color of the Search Editor query matches."))},85514:(e,t,r)=>{r.d(t,{$_:()=>F,HT:()=>m,pU:()=>p});var o=r(73990),i=r(21030),n=r(88564),c=r(70145),a=r(48250),s=r(32031),l=r(97072),d=r(51413),h=r(67588),u=r(31519);var g,k;!function(e){e.getDefinition=function(e,t){let r=e.defaults;for(;c.L.isThemeIcon(r);){const e=f.getIcon(r.id);if(!e)return;r=e.defaults}return r}}(g||(g={})),function(e){e.toJSONObject=function(e){return{weight:e.weight,style:e.style,src:e.src.map((e=>({format:e.format,location:e.location.toString()})))}},e.fromJSONObject=function(e){const t=e=>(0,s.Kg)(e)?e:void 0;if(e&&Array.isArray(e.src)&&e.src.every((e=>(0,s.Kg)(e.format)&&(0,s.Kg)(e.location))))return{weight:t(e.weight),style:t(e.style),src:e.src.map((e=>({format:e.format,location:l.r.parse(e.location)})))}}}(k||(k={}));const f=new class{constructor(){this._onDidChange=new a.vl,this.onDidChange=this._onDidChange.event,this.iconSchema={definitions:{icons:{type:"object",properties:{fontId:{type:"string",description:(0,d.kg)("iconDefinition.fontId","The id of the font to use. If not set, the font that is defined first is used.")},fontCharacter:{type:"string",description:(0,d.kg)("iconDefinition.fontCharacter","The font character associated with the icon definition.")}},additionalProperties:!1,defaultSnippets:[{body:{fontCharacter:"\\\\e030"}}]}},type:"object",properties:{}},this.iconReferenceSchema={type:"string",pattern:"^".concat(c.L.iconNameExpression,"$"),enum:[],enumDescriptions:[]},this.iconsById={},this.iconFontsById={}}registerIcon(e,t,r,o){const i=this.iconsById[e];if(i){if(r&&!i.description){i.description=r,this.iconSchema.properties[e].markdownDescription="".concat(r," $(").concat(e,")");const t=this.iconReferenceSchema.enum.indexOf(e);-1!==t&&(this.iconReferenceSchema.enumDescriptions[t]=r),this._onDidChange.fire()}return i}const n={id:e,description:r,defaults:t,deprecationMessage:o};this.iconsById[e]=n;const c={$ref:"#/definitions/icons"};return o&&(c.deprecationMessage=o),r&&(c.markdownDescription="".concat(r,": $(").concat(e,")")),this.iconSchema.properties[e]=c,this.iconReferenceSchema.enum.push(e),this.iconReferenceSchema.enumDescriptions.push(r||""),this._onDidChange.fire(),{id:e}}getIcons(){return Object.keys(this.iconsById).map((e=>this.iconsById[e]))}getIcon(e){return this.iconsById[e]}getIconSchema(){return this.iconSchema}toString(){const e=(e,t)=>e.id.localeCompare(t.id),t=e=>{for(;c.L.isThemeIcon(e.defaults);)e=this.iconsById[e.defaults.id];return"codicon codicon-".concat(e?e.id:"")},r=[];r.push("| preview     | identifier                        | default codicon ID                | description"),r.push("| ----------- | --------------------------------- | --------------------------------- | --------------------------------- |");const o=Object.keys(this.iconsById).map((e=>this.iconsById[e]));for(const i of o.filter((e=>!!e.description)).sort(e))r.push('|<i class="'.concat(t(i),'"></i>|').concat(i.id,"|").concat(c.L.isThemeIcon(i.defaults)?i.defaults.id:i.id,"|").concat(i.description||"","|"));r.push("| preview     | identifier                        "),r.push("| ----------- | --------------------------------- |");for(const i of o.filter((e=>!c.L.isThemeIcon(e.defaults))).sort(e))r.push('|<i class="'.concat(t(i),'"></i>|').concat(i.id,"|"));return r.join("\n")}};function p(e,t,r,o){return f.registerIcon(e,t,r,o)}function m(){return f}u.O.add("base.contributions.icons",f),function(){const e=(0,n.J)();for(const t in e){const r="\\"+e[t].toString(16);f.registerIcon(t,{fontCharacter:r})}}();const b="vscode://schemas/icons",v=u.O.as(h.F.JSONContribution);v.registerSchema(b,f.getIconSchema());const B=new o.uC((()=>v.notifySchemaChanged(b)),200);f.onDidChange((()=>{B.isScheduled()||B.schedule()}));const F=p("widget-close",i.W.close,(0,d.kg)("widgetClose","Icon for the close action in widgets."));p("goto-previous-location",i.W.arrowUp,(0,d.kg)("previousChangeIcon","Icon for goto previous editor location.")),p("goto-next-location",i.W.arrowDown,(0,d.kg)("nextChangeIcon","Icon for goto next editor location.")),c.L.modify(i.W.sync,"spin"),c.L.modify(i.W.loading,"spin")},15547:(e,t,r)=>{var o;function i(e){return e===o.HIGH_CONTRAST_DARK||e===o.HIGH_CONTRAST_LIGHT}function n(e){return e===o.DARK||e===o.HIGH_CONTRAST_DARK}r.d(t,{Bb:()=>i,HD:()=>n,zM:()=>o}),function(e){e.DARK="dark",e.LIGHT="light",e.HIGH_CONTRAST_DARK="hcDark",e.HIGH_CONTRAST_LIGHT="hcLight"}(o||(o={}))},19700:(e,t,r)=>{r.d(t,{Fd:()=>h,Gy:()=>s,Pz:()=>d,Yf:()=>l,lR:()=>k,zy:()=>g});var o=r(48250),i=r(87766),n=r(39263),c=r(31519),a=r(15547);const s=(0,n.u1)("themeService");function l(e){return{id:e}}function d(e){switch(e){case a.zM.DARK:return"vs-dark";case a.zM.HIGH_CONTRAST_DARK:return"hc-black";case a.zM.HIGH_CONTRAST_LIGHT:return"hc-light";default:return"vs"}}const h={ThemingContribution:"base.contributions.theming"};const u=new class{constructor(){this.themingParticipants=[],this.themingParticipants=[],this.onThemingParticipantAddedEmitter=new o.vl}onColorThemeChange(e){return this.themingParticipants.push(e),this.onThemingParticipantAddedEmitter.fire(e),(0,i.s)((()=>{const t=this.themingParticipants.indexOf(e);this.themingParticipants.splice(t,1)}))}getThemingParticipants(){return this.themingParticipants}};function g(e){return u.onColorThemeChange(e)}c.O.add(h.ThemingContribution,u);class k extends i.jG{constructor(e){super(),this.themeService=e,this.theme=e.getColorTheme(),this._register(this.themeService.onDidColorThemeChange((e=>this.onThemeChange(e))))}onThemeChange(e){this.theme=e,this.updateStyles()}updateStyles(){}}},62579:(e,t,r)=>{r.d(t,{$D:()=>o,I_:()=>n,To:()=>i,Ym:()=>c});const o=(0,r(39263).u1)("undoRedoService");class i{constructor(e,t){this.resource=e,this.elements=t}}class n{constructor(){this.id=n._ID++,this.order=1}nextOrder(){return 0===this.id?0:this.order++}}n._ID=0,n.None=new n;class c{constructor(){this.id=c._ID++,this.order=1}nextOrder(){return 0===this.id?0:this.order++}}c._ID=0,c.None=new c},12556:(e,t,r)=>{var o=r(29591),i=r(87766),n=r(83888),c=r(88251),a=r(51413),s=r(57351),l=r(42502),d=r(39895),h=r(62579),u=function(e,t,r,o){var i,n=arguments.length,c=n<3?t:null===o?o=Object.getOwnPropertyDescriptor(t,r):o;if("object"===typeof Reflect&&"function"===typeof Reflect.decorate)c=Reflect.decorate(e,t,r,o);else for(var a=e.length-1;a>=0;a--)(i=e[a])&&(c=(n<3?i(c):n>3?i(t,r,c):i(t,r))||c);return n>3&&c&&Object.defineProperty(t,r,c),c},g=function(e,t){return function(r,o){t(r,o,e)}};const k=!1;function f(e){return e.scheme===n.ny.file?e.fsPath:e.path}let p=0;class m{constructor(e,t,r,o,i,n,c){this.id=++p,this.type=0,this.actual=e,this.label=e.label,this.confirmBeforeUndo=e.confirmBeforeUndo||!1,this.resourceLabel=t,this.strResource=r,this.resourceLabels=[this.resourceLabel],this.strResources=[this.strResource],this.groupId=o,this.groupOrder=i,this.sourceId=n,this.sourceOrder=c,this.isValid=!0}setValid(e){this.isValid=e}toString(){return"[id:".concat(this.id,"] [group:").concat(this.groupId,"] [").concat(this.isValid?"  VALID":"INVALID","] ").concat(this.actual.constructor.name," - ").concat(this.actual)}}class b{constructor(e,t){this.resourceLabel=e,this.reason=t}}class v{constructor(){this.elements=new Map}createMessage(){const e=[],t=[];for(const[,o]of this.elements){(0===o.reason?e:t).push(o.resourceLabel)}const r=[];return e.length>0&&r.push(a.kg({key:"externalRemoval",comment:["{0} is a list of filenames"]},"The following files have been closed and modified on disk: {0}.",e.join(", "))),t.length>0&&r.push(a.kg({key:"noParallelUniverses",comment:["{0} is a list of filenames"]},"The following files have been modified in an incompatible way: {0}.",t.join(", "))),r.join("\n")}get size(){return this.elements.size}has(e){return this.elements.has(e)}set(e,t){this.elements.set(e,t)}delete(e){return this.elements.delete(e)}}class B{constructor(e,t,r,o,i,n,c){this.id=++p,this.type=1,this.actual=e,this.label=e.label,this.confirmBeforeUndo=e.confirmBeforeUndo||!1,this.resourceLabels=t,this.strResources=r,this.groupId=o,this.groupOrder=i,this.sourceId=n,this.sourceOrder=c,this.removedResources=null,this.invalidatedResources=null}canSplit(){return"function"===typeof this.actual.split}removeResource(e,t,r){this.removedResources||(this.removedResources=new v),this.removedResources.has(t)||this.removedResources.set(t,new b(e,r))}setValid(e,t,r){r?this.invalidatedResources&&(this.invalidatedResources.delete(t),0===this.invalidatedResources.size&&(this.invalidatedResources=null)):(this.invalidatedResources||(this.invalidatedResources=new v),this.invalidatedResources.has(t)||this.invalidatedResources.set(t,new b(e,0)))}toString(){return"[id:".concat(this.id,"] [group:").concat(this.groupId,"] [").concat(this.invalidatedResources?"INVALID":"  VALID","] ").concat(this.actual.constructor.name," - ").concat(this.actual)}}class F{constructor(e,t){this.resourceLabel=e,this.strResource=t,this._past=[],this._future=[],this.locked=!1,this.versionId=1}dispose(){for(const e of this._past)1===e.type&&e.removeResource(this.resourceLabel,this.strResource,0);for(const e of this._future)1===e.type&&e.removeResource(this.resourceLabel,this.strResource,0);this.versionId++}toString(){const e=[];e.push("* ".concat(this.strResource,":"));for(let t=0;t<this._past.length;t++)e.push("   * [UNDO] ".concat(this._past[t]));for(let t=this._future.length-1;t>=0;t--)e.push("   * [REDO] ".concat(this._future[t]));return e.join("\n")}flushAllElements(){this._past=[],this._future=[],this.versionId++}_setElementValidFlag(e,t){1===e.type?e.setValid(this.resourceLabel,this.strResource,t):e.setValid(t)}setElementsValidFlag(e,t){for(const r of this._past)t(r.actual)&&this._setElementValidFlag(r,e);for(const r of this._future)t(r.actual)&&this._setElementValidFlag(r,e)}pushElement(e){for(const t of this._future)1===t.type&&t.removeResource(this.resourceLabel,this.strResource,1);this._future=[],this._past.push(e),this.versionId++}createSnapshot(e){const t=[];for(let r=0,o=this._past.length;r<o;r++)t.push(this._past[r].id);for(let r=this._future.length-1;r>=0;r--)t.push(this._future[r].id);return new h.To(e,t)}restoreSnapshot(e){const t=e.elements.length;let r=!0,o=0,i=-1;for(let c=0,a=this._past.length;c<a;c++,o++){const n=this._past[c];r&&(o>=t||n.id!==e.elements[o])&&(r=!1,i=0),r||1!==n.type||n.removeResource(this.resourceLabel,this.strResource,0)}let n=-1;for(let c=this._future.length-1;c>=0;c--,o++){const i=this._future[c];r&&(o>=t||i.id!==e.elements[o])&&(r=!1,n=c),r||1!==i.type||i.removeResource(this.resourceLabel,this.strResource,0)}-1!==i&&(this._past=this._past.slice(0,i)),-1!==n&&(this._future=this._future.slice(n+1)),this.versionId++}getElements(){const e=[],t=[];for(const r of this._past)e.push(r.actual);for(const r of this._future)t.push(r.actual);return{past:e,future:t}}getClosestPastElement(){return 0===this._past.length?null:this._past[this._past.length-1]}getSecondClosestPastElement(){return this._past.length<2?null:this._past[this._past.length-2]}getClosestFutureElement(){return 0===this._future.length?null:this._future[this._future.length-1]}hasPastElements(){return this._past.length>0}hasFutureElements(){return this._future.length>0}splitPastWorkspaceElement(e,t){for(let r=this._past.length-1;r>=0;r--)if(this._past[r]===e){t.has(this.strResource)?this._past[r]=t.get(this.strResource):this._past.splice(r,1);break}this.versionId++}splitFutureWorkspaceElement(e,t){for(let r=this._future.length-1;r>=0;r--)if(this._future[r]===e){t.has(this.strResource)?this._future[r]=t.get(this.strResource):this._future.splice(r,1);break}this.versionId++}moveBackward(e){this._past.pop(),this._future.push(e),this.versionId++}moveForward(e){this._future.pop(),this._past.push(e),this.versionId++}}class D{constructor(e){this.editStacks=e,this._versionIds=[];for(let t=0,r=this.editStacks.length;t<r;t++)this._versionIds[t]=this.editStacks[t].versionId}isValid(){for(let e=0,t=this.editStacks.length;e<t;e++)if(this._versionIds[e]!==this.editStacks[e].versionId)return!1;return!0}}const w=new F("","");w.locked=!0;let y=class{constructor(e,t){this._dialogService=e,this._notificationService=t,this._editStacks=new Map,this._uriComparisonKeyComputers=[]}getUriComparisonKey(e){for(const t of this._uriComparisonKeyComputers)if(t[0]===e.scheme)return t[1].getComparisonKey(e);return e.toString()}_print(e){console.log("------------------------------------"),console.log("AFTER ".concat(e,": "));const t=[];for(const r of this._editStacks)t.push(r[1].toString());console.log(t.join("\n"))}pushElement(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:h.I_.None,r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:h.Ym.None;if(0===e.type){const o=f(e.resource),i=this.getUriComparisonKey(e.resource);this._pushElement(new m(e,o,i,t.id,t.nextOrder(),r.id,r.nextOrder()))}else{const o=new Set,i=[],n=[];for(const t of e.resources){const e=f(t),r=this.getUriComparisonKey(t);o.has(r)||(o.add(r),i.push(e),n.push(r))}1===i.length?this._pushElement(new m(e,i[0],n[0],t.id,t.nextOrder(),r.id,r.nextOrder())):this._pushElement(new B(e,i,n,t.id,t.nextOrder(),r.id,r.nextOrder()))}}_pushElement(e){for(let t=0,r=e.strResources.length;t<r;t++){const r=e.resourceLabels[t],o=e.strResources[t];let i;this._editStacks.has(o)?i=this._editStacks.get(o):(i=new F(r,o),this._editStacks.set(o,i)),i.pushElement(e)}}getLastElement(e){const t=this.getUriComparisonKey(e);if(this._editStacks.has(t)){const e=this._editStacks.get(t);if(e.hasFutureElements())return null;const r=e.getClosestPastElement();return r?r.actual:null}return null}_splitPastWorkspaceElement(e,t){const r=e.actual.split(),o=new Map;for(const i of r){const e=f(i.resource),t=this.getUriComparisonKey(i.resource),r=new m(i,e,t,0,0,0,0);o.set(r.strResource,r)}for(const i of e.strResources){if(t&&t.has(i))continue;this._editStacks.get(i).splitPastWorkspaceElement(e,o)}}_splitFutureWorkspaceElement(e,t){const r=e.actual.split(),o=new Map;for(const i of r){const e=f(i.resource),t=this.getUriComparisonKey(i.resource),r=new m(i,e,t,0,0,0,0);o.set(r.strResource,r)}for(const i of e.strResources){if(t&&t.has(i))continue;this._editStacks.get(i).splitFutureWorkspaceElement(e,o)}}removeElements(e){const t="string"===typeof e?e:this.getUriComparisonKey(e);if(this._editStacks.has(t)){this._editStacks.get(t).dispose(),this._editStacks.delete(t)}}setElementsValidFlag(e,t,r){const o=this.getUriComparisonKey(e);if(this._editStacks.has(o)){this._editStacks.get(o).setElementsValidFlag(t,r)}}createSnapshot(e){const t=this.getUriComparisonKey(e);if(this._editStacks.has(t)){return this._editStacks.get(t).createSnapshot(e)}return new h.To(e,[])}restoreSnapshot(e){const t=this.getUriComparisonKey(e.resource);if(this._editStacks.has(t)){const r=this._editStacks.get(t);r.restoreSnapshot(e),r.hasPastElements()||r.hasFutureElements()||(r.dispose(),this._editStacks.delete(t))}}getElements(e){const t=this.getUriComparisonKey(e);if(this._editStacks.has(t)){return this._editStacks.get(t).getElements()}return{past:[],future:[]}}_findClosestUndoElementWithSource(e){if(!e)return[null,null];let t=null,r=null;for(const[o,i]of this._editStacks){const n=i.getClosestPastElement();n&&(n.sourceId===e&&(!t||n.sourceOrder>t.sourceOrder)&&(t=n,r=o))}return[t,r]}canUndo(e){if(e instanceof h.Ym){const[,t]=this._findClosestUndoElementWithSource(e.id);return!!t}const t=this.getUriComparisonKey(e);if(this._editStacks.has(t)){return this._editStacks.get(t).hasPastElements()}return!1}_onError(e,t){(0,o.dz)(e);for(const r of t.strResources)this.removeElements(r);this._notificationService.error(e)}_acquireLocks(e){for(const t of e.editStacks)if(t.locked)throw new Error("Cannot acquire edit stack lock");for(const t of e.editStacks)t.locked=!0;return()=>{for(const t of e.editStacks)t.locked=!1}}_safeInvokeWithLocks(e,t,r,o,i){const n=this._acquireLocks(r);let c;try{c=t()}catch(a){return n(),o.dispose(),this._onError(a,e)}return c?c.then((()=>(n(),o.dispose(),i())),(t=>(n(),o.dispose(),this._onError(t,e)))):(n(),o.dispose(),i())}async _invokeWorkspacePrepare(e){if("undefined"===typeof e.actual.prepareUndoRedo)return i.jG.None;const t=e.actual.prepareUndoRedo();return"undefined"===typeof t?i.jG.None:t}_invokeResourcePrepare(e,t){if(1!==e.actual.type||"undefined"===typeof e.actual.prepareUndoRedo)return t(i.jG.None);const r=e.actual.prepareUndoRedo();return r?(0,i.Xm)(r)?t(r):r.then((e=>t(e))):t(i.jG.None)}_getAffectedEditStacks(e){const t=[];for(const r of e.strResources)t.push(this._editStacks.get(r)||w);return new D(t)}_tryToSplitAndUndo(e,t,r,o){if(t.canSplit())return this._splitPastWorkspaceElement(t,r),this._notificationService.warn(o),new L(this._undo(e,0,!0));for(const i of t.strResources)this.removeElements(i);return this._notificationService.warn(o),new L}_checkWorkspaceUndo(e,t,r,o){if(t.removedResources)return this._tryToSplitAndUndo(e,t,t.removedResources,a.kg({key:"cannotWorkspaceUndo",comment:["{0} is a label for an operation. {1} is another message."]},"Could not undo '{0}' across all files. {1}",t.label,t.removedResources.createMessage()));if(o&&t.invalidatedResources)return this._tryToSplitAndUndo(e,t,t.invalidatedResources,a.kg({key:"cannotWorkspaceUndo",comment:["{0} is a label for an operation. {1} is another message."]},"Could not undo '{0}' across all files. {1}",t.label,t.invalidatedResources.createMessage()));const i=[];for(const c of r.editStacks)c.getClosestPastElement()!==t&&i.push(c.resourceLabel);if(i.length>0)return this._tryToSplitAndUndo(e,t,null,a.kg({key:"cannotWorkspaceUndoDueToChanges",comment:["{0} is a label for an operation. {1} is a list of filenames."]},"Could not undo '{0}' across all files because changes were made to {1}",t.label,i.join(", ")));const n=[];for(const c of r.editStacks)c.locked&&n.push(c.resourceLabel);return n.length>0?this._tryToSplitAndUndo(e,t,null,a.kg({key:"cannotWorkspaceUndoDueToInProgressUndoRedo",comment:["{0} is a label for an operation. {1} is a list of filenames."]},"Could not undo '{0}' across all files because there is already an undo or redo operation running on {1}",t.label,n.join(", "))):r.isValid()?null:this._tryToSplitAndUndo(e,t,null,a.kg({key:"cannotWorkspaceUndoDueToInMeantimeUndoRedo",comment:["{0} is a label for an operation. {1} is a list of filenames."]},"Could not undo '{0}' across all files because an undo or redo operation occurred in the meantime",t.label))}_workspaceUndo(e,t,r){const o=this._getAffectedEditStacks(t),i=this._checkWorkspaceUndo(e,t,o,!1);return i?i.returnValue:this._confirmAndExecuteWorkspaceUndo(e,t,o,r)}_isPartOfUndoGroup(e){if(!e.groupId)return!1;for(const[,t]of this._editStacks){const r=t.getClosestPastElement();if(r){if(r===e){const r=t.getSecondClosestPastElement();if(r&&r.groupId===e.groupId)return!0}if(r.groupId===e.groupId)return!0}}return!1}async _confirmAndExecuteWorkspaceUndo(e,t,r,o){if(t.canSplit()&&!this._isPartOfUndoGroup(t)){let i;!function(e){e[e.All=0]="All",e[e.This=1]="This",e[e.Cancel=2]="Cancel"}(i||(i={}));const{result:n}=await this._dialogService.prompt({type:c.A.Info,message:a.kg("confirmWorkspace","Would you like to undo '{0}' across all files?",t.label),buttons:[{label:a.kg({key:"ok",comment:["{0} denotes a number that is > 1, && denotes a mnemonic"]},"&&Undo in {0} Files",r.editStacks.length),run:()=>i.All},{label:a.kg({key:"nok",comment:["&& denotes a mnemonic"]},"Undo this &&File"),run:()=>i.This}],cancelButton:{run:()=>i.Cancel}});if(n===i.Cancel)return;if(n===i.This)return this._splitPastWorkspaceElement(t,null),this._undo(e,0,!0);const s=this._checkWorkspaceUndo(e,t,r,!1);if(s)return s.returnValue;o=!0}let i;try{i=await this._invokeWorkspacePrepare(t)}catch(s){return this._onError(s,t)}const n=this._checkWorkspaceUndo(e,t,r,!0);if(n)return i.dispose(),n.returnValue;for(const c of r.editStacks)c.moveBackward(t);return this._safeInvokeWithLocks(t,(()=>t.actual.undo()),r,i,(()=>this._continueUndoInGroup(t.groupId,o)))}_resourceUndo(e,t,r){if(t.isValid){if(!e.locked)return this._invokeResourcePrepare(t,(o=>(e.moveBackward(t),this._safeInvokeWithLocks(t,(()=>t.actual.undo()),new D([e]),o,(()=>this._continueUndoInGroup(t.groupId,r))))));{const e=a.kg({key:"cannotResourceUndoDueToInProgressUndoRedo",comment:["{0} is a label for an operation."]},"Could not undo '{0}' because there is already an undo or redo operation running.",t.label);this._notificationService.warn(e)}}else e.flushAllElements()}_findClosestUndoElementInGroup(e){if(!e)return[null,null];let t=null,r=null;for(const[o,i]of this._editStacks){const n=i.getClosestPastElement();n&&(n.groupId===e&&(!t||n.groupOrder>t.groupOrder)&&(t=n,r=o))}return[t,r]}_continueUndoInGroup(e,t){if(!e)return;const[,r]=this._findClosestUndoElementInGroup(e);return r?this._undo(r,0,t):void 0}undo(e){if(e instanceof h.Ym){const[,t]=this._findClosestUndoElementWithSource(e.id);return t?this._undo(t,e.id,!1):void 0}return"string"===typeof e?this._undo(e,0,!1):this._undo(this.getUriComparisonKey(e),0,!1)}_undo(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,r=arguments.length>2?arguments[2]:void 0;if(!this._editStacks.has(e))return;const o=this._editStacks.get(e),i=o.getClosestPastElement();if(!i)return;if(i.groupId){const[e,o]=this._findClosestUndoElementInGroup(i.groupId);if(i!==e&&o)return this._undo(o,t,r)}if((i.sourceId!==t||i.confirmBeforeUndo)&&!r)return this._confirmAndContinueUndo(e,t,i);try{return 1===i.type?this._workspaceUndo(e,i,r):this._resourceUndo(o,i,r)}finally{k}}async _confirmAndContinueUndo(e,t,r){if((await this._dialogService.confirm({message:a.kg("confirmDifferentSource","Would you like to undo '{0}'?",r.label),primaryButton:a.kg({key:"confirmDifferentSource.yes",comment:["&& denotes a mnemonic"]},"&&Yes"),cancelButton:a.kg("confirmDifferentSource.no","No")})).confirmed)return this._undo(e,t,!0)}_findClosestRedoElementWithSource(e){if(!e)return[null,null];let t=null,r=null;for(const[o,i]of this._editStacks){const n=i.getClosestFutureElement();n&&(n.sourceId===e&&(!t||n.sourceOrder<t.sourceOrder)&&(t=n,r=o))}return[t,r]}canRedo(e){if(e instanceof h.Ym){const[,t]=this._findClosestRedoElementWithSource(e.id);return!!t}const t=this.getUriComparisonKey(e);if(this._editStacks.has(t)){return this._editStacks.get(t).hasFutureElements()}return!1}_tryToSplitAndRedo(e,t,r,o){if(t.canSplit())return this._splitFutureWorkspaceElement(t,r),this._notificationService.warn(o),new L(this._redo(e));for(const i of t.strResources)this.removeElements(i);return this._notificationService.warn(o),new L}_checkWorkspaceRedo(e,t,r,o){if(t.removedResources)return this._tryToSplitAndRedo(e,t,t.removedResources,a.kg({key:"cannotWorkspaceRedo",comment:["{0} is a label for an operation. {1} is another message."]},"Could not redo '{0}' across all files. {1}",t.label,t.removedResources.createMessage()));if(o&&t.invalidatedResources)return this._tryToSplitAndRedo(e,t,t.invalidatedResources,a.kg({key:"cannotWorkspaceRedo",comment:["{0} is a label for an operation. {1} is another message."]},"Could not redo '{0}' across all files. {1}",t.label,t.invalidatedResources.createMessage()));const i=[];for(const c of r.editStacks)c.getClosestFutureElement()!==t&&i.push(c.resourceLabel);if(i.length>0)return this._tryToSplitAndRedo(e,t,null,a.kg({key:"cannotWorkspaceRedoDueToChanges",comment:["{0} is a label for an operation. {1} is a list of filenames."]},"Could not redo '{0}' across all files because changes were made to {1}",t.label,i.join(", ")));const n=[];for(const c of r.editStacks)c.locked&&n.push(c.resourceLabel);return n.length>0?this._tryToSplitAndRedo(e,t,null,a.kg({key:"cannotWorkspaceRedoDueToInProgressUndoRedo",comment:["{0} is a label for an operation. {1} is a list of filenames."]},"Could not redo '{0}' across all files because there is already an undo or redo operation running on {1}",t.label,n.join(", "))):r.isValid()?null:this._tryToSplitAndRedo(e,t,null,a.kg({key:"cannotWorkspaceRedoDueToInMeantimeUndoRedo",comment:["{0} is a label for an operation. {1} is a list of filenames."]},"Could not redo '{0}' across all files because an undo or redo operation occurred in the meantime",t.label))}_workspaceRedo(e,t){const r=this._getAffectedEditStacks(t),o=this._checkWorkspaceRedo(e,t,r,!1);return o?o.returnValue:this._executeWorkspaceRedo(e,t,r)}async _executeWorkspaceRedo(e,t,r){let o;try{o=await this._invokeWorkspacePrepare(t)}catch(n){return this._onError(n,t)}const i=this._checkWorkspaceRedo(e,t,r,!0);if(i)return o.dispose(),i.returnValue;for(const c of r.editStacks)c.moveForward(t);return this._safeInvokeWithLocks(t,(()=>t.actual.redo()),r,o,(()=>this._continueRedoInGroup(t.groupId)))}_resourceRedo(e,t){if(t.isValid){if(!e.locked)return this._invokeResourcePrepare(t,(r=>(e.moveForward(t),this._safeInvokeWithLocks(t,(()=>t.actual.redo()),new D([e]),r,(()=>this._continueRedoInGroup(t.groupId))))));{const e=a.kg({key:"cannotResourceRedoDueToInProgressUndoRedo",comment:["{0} is a label for an operation."]},"Could not redo '{0}' because there is already an undo or redo operation running.",t.label);this._notificationService.warn(e)}}else e.flushAllElements()}_findClosestRedoElementInGroup(e){if(!e)return[null,null];let t=null,r=null;for(const[o,i]of this._editStacks){const n=i.getClosestFutureElement();n&&(n.groupId===e&&(!t||n.groupOrder<t.groupOrder)&&(t=n,r=o))}return[t,r]}_continueRedoInGroup(e){if(!e)return;const[,t]=this._findClosestRedoElementInGroup(e);return t?this._redo(t):void 0}redo(e){if(e instanceof h.Ym){const[,t]=this._findClosestRedoElementWithSource(e.id);return t?this._redo(t):void 0}return"string"===typeof e?this._redo(e):this._redo(this.getUriComparisonKey(e))}_redo(e){if(!this._editStacks.has(e))return;const t=this._editStacks.get(e),r=t.getClosestFutureElement();if(r){if(r.groupId){const[e,t]=this._findClosestRedoElementInGroup(r.groupId);if(r!==e&&t)return this._redo(t)}try{return 1===r.type?this._workspaceRedo(e,r):this._resourceRedo(t,r)}finally{k}}}};y=u([g(0,s.X),g(1,d.Ot)],y);class L{constructor(e){this.returnValue=e}}(0,l.v)(h.$D,y,1)},77699:(e,t,r)=>{r.d(t,{A7:()=>s,Q_:()=>h,VR:()=>c,cn:()=>k,ct:()=>f,jB:()=>a,kF:()=>g,mX:()=>u});var o=r(51413),i=r(35395),n=(r(2461),r(97072));const c=(0,r(39263).u1)("contextService");function a(e){const t=e;return"string"===typeof(null===t||void 0===t?void 0:t.id)&&n.r.isUri(t.uri)}function s(e){return"string"===typeof(null===e||void 0===e?void 0:e.id)&&!a(e)&&!function(e){const t=e;return"string"===typeof(null===t||void 0===t?void 0:t.id)&&n.r.isUri(t.configPath)}(e)}const l={id:"ext-dev"},d={id:"empty-window"};function h(e,t){if("string"===typeof e||"undefined"===typeof e)return"string"===typeof e?{id:(0,i.P8)(e)}:t?l:d;const r=e;return r.configuration?{id:r.id,configPath:r.configuration}:1===r.folders.length?{id:r.id,uri:r.folders[0].uri}:{id:r.id}}class u{constructor(e,t){this.raw=t,this.uri=e.uri,this.index=e.index,this.name=e.name}toJSON(){return{uri:this.uri,name:this.name,index:this.index}}}const g="code-workspace",k=((0,o.kg)("codeWorkspace","Code Workspace"),"4064f6ec-cb38-4ad0-af64-ee6467e63c82");function f(e){return e.id===k}},85617:(e,t,r)=>{r.d(t,{L:()=>o});const o=(0,r(39263).u1)("workspaceTrustManagementService")}}]);
//# sourceMappingURL=monaco-editor-vendor.6a6ecc0c.1f992661.js.map