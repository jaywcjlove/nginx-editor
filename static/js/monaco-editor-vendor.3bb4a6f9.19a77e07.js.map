{"version":3,"file":"static/js/monaco-editor-vendor.3bb4a6f9.19a77e07.js","mappings":"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","sources":["../../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/resources.js","../../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/scrollable.js","../../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/search.js","../../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/severity.js","../../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/stopwatch.js","../../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/strings.js","../../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/symbols.js","../../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/ternarySearchTree.js","../../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/tfIdf.js","../../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/themables.js","../../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/types.js","../../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/uint.js","../../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/uri.js","../../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/base/common/uuid.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as extpath from './extpath.js';\nimport { Schemas } from './network.js';\nimport * as paths from './path.js';\nimport { isLinux, isWindows } from './platform.js';\nimport { compare as strCompare, equalsIgnoreCase } from './strings.js';\nimport { URI, uriToFsPath } from './uri.js';\nexport function originalFSPath(uri) {\n    return uriToFsPath(uri, true);\n}\nexport class ExtUri {\n    constructor(_ignorePathCasing) {\n        this._ignorePathCasing = _ignorePathCasing;\n    }\n    compare(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return 0;\n        }\n        return strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n    }\n    isEqual(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return true;\n        }\n        if (!uri1 || !uri2) {\n            return false;\n        }\n        return this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n    }\n    getComparisonKey(uri, ignoreFragment = false) {\n        return uri.with({\n            path: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n            fragment: ignoreFragment ? null : undefined\n        }).toString();\n    }\n    isEqualOrParent(base, parentCandidate, ignoreFragment = false) {\n        if (base.scheme === parentCandidate.scheme) {\n            if (base.scheme === Schemas.file) {\n                return extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n            if (isEqualAuthority(base.authority, parentCandidate.authority)) {\n                return extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n        }\n        return false;\n    }\n    // --- path math\n    joinPath(resource, ...pathFragment) {\n        return URI.joinPath(resource, ...pathFragment);\n    }\n    basenameOrAuthority(resource) {\n        return basename(resource) || resource.authority;\n    }\n    basename(resource) {\n        return paths.posix.basename(resource.path);\n    }\n    extname(resource) {\n        return paths.posix.extname(resource.path);\n    }\n    dirname(resource) {\n        if (resource.path.length === 0) {\n            return resource;\n        }\n        let dirname;\n        if (resource.scheme === Schemas.file) {\n            dirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n        }\n        else {\n            dirname = paths.posix.dirname(resource.path);\n            if (resource.authority && dirname.length && dirname.charCodeAt(0) !== 47 /* CharCode.Slash */) {\n                console.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n                dirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n            }\n        }\n        return resource.with({\n            path: dirname\n        });\n    }\n    normalizePath(resource) {\n        if (!resource.path.length) {\n            return resource;\n        }\n        let normalizedPath;\n        if (resource.scheme === Schemas.file) {\n            normalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n        }\n        else {\n            normalizedPath = paths.posix.normalize(resource.path);\n        }\n        return resource.with({\n            path: normalizedPath\n        });\n    }\n    relativePath(from, to) {\n        if (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n            return undefined;\n        }\n        if (from.scheme === Schemas.file) {\n            const relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n            return isWindows ? extpath.toSlashes(relativePath) : relativePath;\n        }\n        let fromPath = from.path || '/';\n        const toPath = to.path || '/';\n        if (this._ignorePathCasing(from)) {\n            // make casing of fromPath match toPath\n            let i = 0;\n            for (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n                if (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n                    if (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n                        break;\n                    }\n                }\n            }\n            fromPath = toPath.substr(0, i) + fromPath.substr(i);\n        }\n        return paths.posix.relative(fromPath, toPath);\n    }\n    resolvePath(base, path) {\n        if (base.scheme === Schemas.file) {\n            const newURI = URI.file(paths.resolve(originalFSPath(base), path));\n            return base.with({\n                authority: newURI.authority,\n                path: newURI.path\n            });\n        }\n        path = extpath.toPosixPath(path); // we allow path to be a windows path\n        return base.with({\n            path: paths.posix.resolve(base.path, path)\n        });\n    }\n    // --- misc\n    isAbsolutePath(resource) {\n        return !!resource.path && resource.path[0] === '/';\n    }\n    isEqualAuthority(a1, a2) {\n        return a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n    }\n    hasTrailingPathSeparator(resource, sep = paths.sep) {\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            return fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n        }\n        else {\n            const p = resource.path;\n            return (p.length > 1 && p.charCodeAt(p.length - 1) === 47 /* CharCode.Slash */) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n        }\n    }\n    removeTrailingPathSeparator(resource, sep = paths.sep) {\n        // Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n        if (hasTrailingPathSeparator(resource, sep)) {\n            return resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n        }\n        return resource;\n    }\n    addTrailingPathSeparator(resource, sep = paths.sep) {\n        let isRootSep = false;\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            isRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n        }\n        else {\n            sep = '/';\n            const p = resource.path;\n            isRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === 47 /* CharCode.Slash */;\n        }\n        if (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n            return resource.with({ path: resource.path + '/' });\n        }\n        return resource;\n    }\n}\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n    // A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n    // Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n    return uri.scheme === Schemas.file ? !isLinux : true;\n});\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n/**\n * Data URI related helpers.\n */\nexport var DataUri;\n(function (DataUri) {\n    DataUri.META_DATA_LABEL = 'label';\n    DataUri.META_DATA_DESCRIPTION = 'description';\n    DataUri.META_DATA_SIZE = 'size';\n    DataUri.META_DATA_MIME = 'mime';\n    function parseMetaData(dataUri) {\n        const metadata = new Map();\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n        // the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n        const meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n        meta.split(';').forEach(property => {\n            const [key, value] = property.split(':');\n            if (key && value) {\n                metadata.set(key, value);\n            }\n        });\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n        // the mime is: image/png\n        const mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n        if (mime) {\n            metadata.set(DataUri.META_DATA_MIME, mime);\n        }\n        return metadata;\n    }\n    DataUri.parseMetaData = parseMetaData;\n})(DataUri || (DataUri = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from './event.js';\nimport { Disposable } from './lifecycle.js';\nexport class ScrollState {\n    constructor(_forceIntegerValues, width, scrollWidth, scrollLeft, height, scrollHeight, scrollTop) {\n        this._forceIntegerValues = _forceIntegerValues;\n        this._scrollStateBrand = undefined;\n        if (this._forceIntegerValues) {\n            width = width | 0;\n            scrollWidth = scrollWidth | 0;\n            scrollLeft = scrollLeft | 0;\n            height = height | 0;\n            scrollHeight = scrollHeight | 0;\n            scrollTop = scrollTop | 0;\n        }\n        this.rawScrollLeft = scrollLeft; // before validation\n        this.rawScrollTop = scrollTop; // before validation\n        if (width < 0) {\n            width = 0;\n        }\n        if (scrollLeft + width > scrollWidth) {\n            scrollLeft = scrollWidth - width;\n        }\n        if (scrollLeft < 0) {\n            scrollLeft = 0;\n        }\n        if (height < 0) {\n            height = 0;\n        }\n        if (scrollTop + height > scrollHeight) {\n            scrollTop = scrollHeight - height;\n        }\n        if (scrollTop < 0) {\n            scrollTop = 0;\n        }\n        this.width = width;\n        this.scrollWidth = scrollWidth;\n        this.scrollLeft = scrollLeft;\n        this.height = height;\n        this.scrollHeight = scrollHeight;\n        this.scrollTop = scrollTop;\n    }\n    equals(other) {\n        return (this.rawScrollLeft === other.rawScrollLeft\n            && this.rawScrollTop === other.rawScrollTop\n            && this.width === other.width\n            && this.scrollWidth === other.scrollWidth\n            && this.scrollLeft === other.scrollLeft\n            && this.height === other.height\n            && this.scrollHeight === other.scrollHeight\n            && this.scrollTop === other.scrollTop);\n    }\n    withScrollDimensions(update, useRawScrollPositions) {\n        return new ScrollState(this._forceIntegerValues, (typeof update.width !== 'undefined' ? update.width : this.width), (typeof update.scrollWidth !== 'undefined' ? update.scrollWidth : this.scrollWidth), useRawScrollPositions ? this.rawScrollLeft : this.scrollLeft, (typeof update.height !== 'undefined' ? update.height : this.height), (typeof update.scrollHeight !== 'undefined' ? update.scrollHeight : this.scrollHeight), useRawScrollPositions ? this.rawScrollTop : this.scrollTop);\n    }\n    withScrollPosition(update) {\n        return new ScrollState(this._forceIntegerValues, this.width, this.scrollWidth, (typeof update.scrollLeft !== 'undefined' ? update.scrollLeft : this.rawScrollLeft), this.height, this.scrollHeight, (typeof update.scrollTop !== 'undefined' ? update.scrollTop : this.rawScrollTop));\n    }\n    createScrollEvent(previous, inSmoothScrolling) {\n        const widthChanged = (this.width !== previous.width);\n        const scrollWidthChanged = (this.scrollWidth !== previous.scrollWidth);\n        const scrollLeftChanged = (this.scrollLeft !== previous.scrollLeft);\n        const heightChanged = (this.height !== previous.height);\n        const scrollHeightChanged = (this.scrollHeight !== previous.scrollHeight);\n        const scrollTopChanged = (this.scrollTop !== previous.scrollTop);\n        return {\n            inSmoothScrolling: inSmoothScrolling,\n            oldWidth: previous.width,\n            oldScrollWidth: previous.scrollWidth,\n            oldScrollLeft: previous.scrollLeft,\n            width: this.width,\n            scrollWidth: this.scrollWidth,\n            scrollLeft: this.scrollLeft,\n            oldHeight: previous.height,\n            oldScrollHeight: previous.scrollHeight,\n            oldScrollTop: previous.scrollTop,\n            height: this.height,\n            scrollHeight: this.scrollHeight,\n            scrollTop: this.scrollTop,\n            widthChanged: widthChanged,\n            scrollWidthChanged: scrollWidthChanged,\n            scrollLeftChanged: scrollLeftChanged,\n            heightChanged: heightChanged,\n            scrollHeightChanged: scrollHeightChanged,\n            scrollTopChanged: scrollTopChanged,\n        };\n    }\n}\nexport class Scrollable extends Disposable {\n    constructor(options) {\n        super();\n        this._scrollableBrand = undefined;\n        this._onScroll = this._register(new Emitter());\n        this.onScroll = this._onScroll.event;\n        this._smoothScrollDuration = options.smoothScrollDuration;\n        this._scheduleAtNextAnimationFrame = options.scheduleAtNextAnimationFrame;\n        this._state = new ScrollState(options.forceIntegerValues, 0, 0, 0, 0, 0, 0);\n        this._smoothScrolling = null;\n    }\n    dispose() {\n        if (this._smoothScrolling) {\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = null;\n        }\n        super.dispose();\n    }\n    setSmoothScrollDuration(smoothScrollDuration) {\n        this._smoothScrollDuration = smoothScrollDuration;\n    }\n    validateScrollPosition(scrollPosition) {\n        return this._state.withScrollPosition(scrollPosition);\n    }\n    getScrollDimensions() {\n        return this._state;\n    }\n    setScrollDimensions(dimensions, useRawScrollPositions) {\n        var _a;\n        const newState = this._state.withScrollDimensions(dimensions, useRawScrollPositions);\n        this._setState(newState, Boolean(this._smoothScrolling));\n        // Validate outstanding animated scroll position target\n        (_a = this._smoothScrolling) === null || _a === void 0 ? void 0 : _a.acceptScrollDimensions(this._state);\n    }\n    /**\n     * Returns the final scroll position that the instance will have once the smooth scroll animation concludes.\n     * If no scroll animation is occurring, it will return the current scroll position instead.\n     */\n    getFutureScrollPosition() {\n        if (this._smoothScrolling) {\n            return this._smoothScrolling.to;\n        }\n        return this._state;\n    }\n    /**\n     * Returns the current scroll position.\n     * Note: This result might be an intermediate scroll position, as there might be an ongoing smooth scroll animation.\n     */\n    getCurrentScrollPosition() {\n        return this._state;\n    }\n    setScrollPositionNow(update) {\n        // no smooth scrolling requested\n        const newState = this._state.withScrollPosition(update);\n        // Terminate any outstanding smooth scrolling\n        if (this._smoothScrolling) {\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = null;\n        }\n        this._setState(newState, false);\n    }\n    setScrollPositionSmooth(update, reuseAnimation) {\n        if (this._smoothScrollDuration === 0) {\n            // Smooth scrolling not supported.\n            return this.setScrollPositionNow(update);\n        }\n        if (this._smoothScrolling) {\n            // Combine our pending scrollLeft/scrollTop with incoming scrollLeft/scrollTop\n            update = {\n                scrollLeft: (typeof update.scrollLeft === 'undefined' ? this._smoothScrolling.to.scrollLeft : update.scrollLeft),\n                scrollTop: (typeof update.scrollTop === 'undefined' ? this._smoothScrolling.to.scrollTop : update.scrollTop)\n            };\n            // Validate `update`\n            const validTarget = this._state.withScrollPosition(update);\n            if (this._smoothScrolling.to.scrollLeft === validTarget.scrollLeft && this._smoothScrolling.to.scrollTop === validTarget.scrollTop) {\n                // No need to interrupt or extend the current animation since we're going to the same place\n                return;\n            }\n            let newSmoothScrolling;\n            if (reuseAnimation) {\n                newSmoothScrolling = new SmoothScrollingOperation(this._smoothScrolling.from, validTarget, this._smoothScrolling.startTime, this._smoothScrolling.duration);\n            }\n            else {\n                newSmoothScrolling = this._smoothScrolling.combine(this._state, validTarget, this._smoothScrollDuration);\n            }\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = newSmoothScrolling;\n        }\n        else {\n            // Validate `update`\n            const validTarget = this._state.withScrollPosition(update);\n            this._smoothScrolling = SmoothScrollingOperation.start(this._state, validTarget, this._smoothScrollDuration);\n        }\n        // Begin smooth scrolling animation\n        this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(() => {\n            if (!this._smoothScrolling) {\n                return;\n            }\n            this._smoothScrolling.animationFrameDisposable = null;\n            this._performSmoothScrolling();\n        });\n    }\n    hasPendingScrollAnimation() {\n        return Boolean(this._smoothScrolling);\n    }\n    _performSmoothScrolling() {\n        if (!this._smoothScrolling) {\n            return;\n        }\n        const update = this._smoothScrolling.tick();\n        const newState = this._state.withScrollPosition(update);\n        this._setState(newState, true);\n        if (!this._smoothScrolling) {\n            // Looks like someone canceled the smooth scrolling\n            // from the scroll event handler\n            return;\n        }\n        if (update.isDone) {\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = null;\n            return;\n        }\n        // Continue smooth scrolling animation\n        this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(() => {\n            if (!this._smoothScrolling) {\n                return;\n            }\n            this._smoothScrolling.animationFrameDisposable = null;\n            this._performSmoothScrolling();\n        });\n    }\n    _setState(newState, inSmoothScrolling) {\n        const oldState = this._state;\n        if (oldState.equals(newState)) {\n            // no change\n            return;\n        }\n        this._state = newState;\n        this._onScroll.fire(this._state.createScrollEvent(oldState, inSmoothScrolling));\n    }\n}\nexport class SmoothScrollingUpdate {\n    constructor(scrollLeft, scrollTop, isDone) {\n        this.scrollLeft = scrollLeft;\n        this.scrollTop = scrollTop;\n        this.isDone = isDone;\n    }\n}\nfunction createEaseOutCubic(from, to) {\n    const delta = to - from;\n    return function (completion) {\n        return from + delta * easeOutCubic(completion);\n    };\n}\nfunction createComposed(a, b, cut) {\n    return function (completion) {\n        if (completion < cut) {\n            return a(completion / cut);\n        }\n        return b((completion - cut) / (1 - cut));\n    };\n}\nexport class SmoothScrollingOperation {\n    constructor(from, to, startTime, duration) {\n        this.from = from;\n        this.to = to;\n        this.duration = duration;\n        this.startTime = startTime;\n        this.animationFrameDisposable = null;\n        this._initAnimations();\n    }\n    _initAnimations() {\n        this.scrollLeft = this._initAnimation(this.from.scrollLeft, this.to.scrollLeft, this.to.width);\n        this.scrollTop = this._initAnimation(this.from.scrollTop, this.to.scrollTop, this.to.height);\n    }\n    _initAnimation(from, to, viewportSize) {\n        const delta = Math.abs(from - to);\n        if (delta > 2.5 * viewportSize) {\n            let stop1, stop2;\n            if (from < to) {\n                // scroll to 75% of the viewportSize\n                stop1 = from + 0.75 * viewportSize;\n                stop2 = to - 0.75 * viewportSize;\n            }\n            else {\n                stop1 = from - 0.75 * viewportSize;\n                stop2 = to + 0.75 * viewportSize;\n            }\n            return createComposed(createEaseOutCubic(from, stop1), createEaseOutCubic(stop2, to), 0.33);\n        }\n        return createEaseOutCubic(from, to);\n    }\n    dispose() {\n        if (this.animationFrameDisposable !== null) {\n            this.animationFrameDisposable.dispose();\n            this.animationFrameDisposable = null;\n        }\n    }\n    acceptScrollDimensions(state) {\n        this.to = state.withScrollPosition(this.to);\n        this._initAnimations();\n    }\n    tick() {\n        return this._tick(Date.now());\n    }\n    _tick(now) {\n        const completion = (now - this.startTime) / this.duration;\n        if (completion < 1) {\n            const newScrollLeft = this.scrollLeft(completion);\n            const newScrollTop = this.scrollTop(completion);\n            return new SmoothScrollingUpdate(newScrollLeft, newScrollTop, false);\n        }\n        return new SmoothScrollingUpdate(this.to.scrollLeft, this.to.scrollTop, true);\n    }\n    combine(from, to, duration) {\n        return SmoothScrollingOperation.start(from, to, duration);\n    }\n    static start(from, to, duration) {\n        // +10 / -10 : pretend the animation already started for a quicker response to a scroll request\n        duration = duration + 10;\n        const startTime = Date.now() - 10;\n        return new SmoothScrollingOperation(from, to, startTime, duration);\n    }\n}\nfunction easeInCubic(t) {\n    return Math.pow(t, 3);\n}\nfunction easeOutCubic(t) {\n    return 1 - easeInCubic(1 - t);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\nexport function buildReplaceStringWithCasePreserved(matches, pattern) {\n    if (matches && (matches[0] !== '')) {\n        const containsHyphens = validateSpecificSpecialCharacter(matches, pattern, '-');\n        const containsUnderscores = validateSpecificSpecialCharacter(matches, pattern, '_');\n        if (containsHyphens && !containsUnderscores) {\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '-');\n        }\n        else if (!containsHyphens && containsUnderscores) {\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '_');\n        }\n        if (matches[0].toUpperCase() === matches[0]) {\n            return pattern.toUpperCase();\n        }\n        else if (matches[0].toLowerCase() === matches[0]) {\n            return pattern.toLowerCase();\n        }\n        else if (strings.containsUppercaseCharacter(matches[0][0]) && pattern.length > 0) {\n            return pattern[0].toUpperCase() + pattern.substr(1);\n        }\n        else if (matches[0][0].toUpperCase() !== matches[0][0] && pattern.length > 0) {\n            return pattern[0].toLowerCase() + pattern.substr(1);\n        }\n        else {\n            // we don't understand its pattern yet.\n            return pattern;\n        }\n    }\n    else {\n        return pattern;\n    }\n}\nfunction validateSpecificSpecialCharacter(matches, pattern, specialCharacter) {\n    const doesContainSpecialCharacter = matches[0].indexOf(specialCharacter) !== -1 && pattern.indexOf(specialCharacter) !== -1;\n    return doesContainSpecialCharacter && matches[0].split(specialCharacter).length === pattern.split(specialCharacter).length;\n}\nfunction buildReplaceStringForSpecificSpecialCharacter(matches, pattern, specialCharacter) {\n    const splitPatternAtSpecialCharacter = pattern.split(specialCharacter);\n    const splitMatchAtSpecialCharacter = matches[0].split(specialCharacter);\n    let replaceString = '';\n    splitPatternAtSpecialCharacter.forEach((splitValue, index) => {\n        replaceString += buildReplaceStringWithCasePreserved([splitMatchAtSpecialCharacter[index]], splitValue) + specialCharacter;\n    });\n    return replaceString.slice(0, -1);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\nvar Severity;\n(function (Severity) {\n    Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\n    Severity[Severity[\"Info\"] = 1] = \"Info\";\n    Severity[Severity[\"Warning\"] = 2] = \"Warning\";\n    Severity[Severity[\"Error\"] = 3] = \"Error\";\n})(Severity || (Severity = {}));\n(function (Severity) {\n    const _error = 'error';\n    const _warning = 'warning';\n    const _warn = 'warn';\n    const _info = 'info';\n    const _ignore = 'ignore';\n    /**\n     * Parses 'error', 'warning', 'warn', 'info' in call casings\n     * and falls back to ignore.\n     */\n    function fromValue(value) {\n        if (!value) {\n            return Severity.Ignore;\n        }\n        if (strings.equalsIgnoreCase(_error, value)) {\n            return Severity.Error;\n        }\n        if (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n            return Severity.Warning;\n        }\n        if (strings.equalsIgnoreCase(_info, value)) {\n            return Severity.Info;\n        }\n        return Severity.Ignore;\n    }\n    Severity.fromValue = fromValue;\n    function toString(severity) {\n        switch (severity) {\n            case Severity.Error: return _error;\n            case Severity.Warning: return _warning;\n            case Severity.Info: return _info;\n            default: return _ignore;\n        }\n    }\n    Severity.toString = toString;\n})(Severity || (Severity = {}));\nexport default Severity;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nconst hasPerformanceNow = (globalThis.performance && typeof globalThis.performance.now === 'function');\nexport class StopWatch {\n    static create(highResolution) {\n        return new StopWatch(highResolution);\n    }\n    constructor(highResolution) {\n        this._now = hasPerformanceNow && highResolution === false ? Date.now : globalThis.performance.now.bind(globalThis.performance);\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    stop() {\n        this._stopTime = this._now();\n    }\n    elapsed() {\n        if (this._stopTime !== -1) {\n            return this._stopTime - this._startTime;\n        }\n        return this._now() - this._startTime;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nimport { LRUCachedFunction } from './cache.js';\nimport { Lazy } from './lazy.js';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value, ...args) {\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        const idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle = ' ') {\n    const trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    let offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    let offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\nexport function createRegExp(searchString, isRegex, options = {}) {\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    let modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    const match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function splitLines(str) {\n    return str.split(/\\r\\n|\\r|\\n/);\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start = 0, end = str.length) {\n    for (let i = start; i < end; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n    for (let i = startIndex; i >= 0; i--) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        const codeA = a.charCodeAt(aStart);\n        const codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        }\n        else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function compareIgnoreCase(a, b) {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nexport function compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n        if (codeA >= 128 || codeB >= 128) {\n            // not ASCII letters -> fallback to lower-casing strings\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n        // mapper lower-case ascii letter onto upper-case varinats\n        // [97-122] (lower ascii) --> [65-90] (upper ascii)\n        if (isLowerAsciiLetter(codeA)) {\n            codeA -= 32;\n        }\n        if (isLowerAsciiLetter(codeB)) {\n            codeB -= 32;\n        }\n        // compare both code points\n        const diff = codeA - codeB;\n        if (diff === 0) {\n            continue;\n        }\n        return diff;\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function isAsciiDigit(code) {\n    return code >= 48 /* CharCode.Digit0 */ && code <= 57 /* CharCode.Digit9 */;\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* CharCode.a */ && code <= 122 /* CharCode.z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */;\n}\nexport function equalsIgnoreCase(a, b) {\n    return a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    const aLastIndex = a.length - 1;\n    const bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str, len, offset) {\n    const charCode = str.charCodeAt(offset);\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\n        const nextCharCode = str.charCodeAt(offset + 1);\n        if (isLowSurrogate(nextCharCode)) {\n            return computeCodePoint(charCode, nextCharCode);\n        }\n    }\n    return charCode;\n}\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str, offset) {\n    const charCode = str.charCodeAt(offset - 1);\n    if (isLowSurrogate(charCode) && offset > 1) {\n        const prevCharCode = str.charCodeAt(offset - 2);\n        if (isHighSurrogate(prevCharCode)) {\n            return computeCodePoint(prevCharCode, charCode);\n        }\n    }\n    return charCode;\n}\nexport class CodePointIterator {\n    get offset() {\n        return this._offset;\n    }\n    constructor(str, offset = 0) {\n        this._str = str;\n        this._len = str.length;\n        this._offset = offset;\n    }\n    setOffset(offset) {\n        this._offset = offset;\n    }\n    prevCodePoint() {\n        const codePoint = getPrevCodePoint(this._str, this._offset);\n        this._offset -= (codePoint >= 65536 /* Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    nextCodePoint() {\n        const codePoint = getNextCodePoint(this._str, this._len, this._offset);\n        this._offset += (codePoint >= 65536 /* Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    eol() {\n        return (this._offset >= this._len);\n    }\n}\nexport class GraphemeIterator {\n    get offset() {\n        return this._iterator.offset;\n    }\n    constructor(str, offset = 0) {\n        this._iterator = new CodePointIterator(str, offset);\n    }\n    nextGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n        while (!iterator.eol()) {\n            const offset = iterator.offset;\n            const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n            if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = nextGraphemeBreakType;\n        }\n        return (iterator.offset - initialOffset);\n    }\n    prevGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n        while (iterator.offset > 0) {\n            const offset = iterator.offset;\n            const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n            if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = prevGraphemeBreakType;\n        }\n        return (initialOffset - iterator.offset);\n    }\n    eol() {\n        return this._iterator.eol();\n    }\n}\nexport function nextCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.nextGraphemeLength();\n}\nexport function prevCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.prevGraphemeLength();\n}\nexport function getCharContainingOffset(str, offset) {\n    if (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n        offset--;\n    }\n    const endOffset = offset + nextCharLength(str, offset);\n    const startOffset = endOffset - prevCharLength(str, endOffset);\n    return [startOffset, endOffset];\n}\nlet CONTAINS_RTL = undefined;\nfunction makeContainsRtl() {\n    // Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js\n    return /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n}\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    if (!CONTAINS_RTL) {\n        CONTAINS_RTL = makeContainsRtl();\n    }\n    return CONTAINS_RTL.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str) {\n    return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 - 2EFF   CJK Radicals Supplement\n    //          2F00 - 2FDF   Kangxi Radicals\n    //          2FF0 - 2FFF   Ideographic Description Characters\n    //          3000 - 303F   CJK Symbols and Punctuation\n    //          3040 - 309F   Hiragana\n    //          30A0 - 30FF   Katakana\n    //          3100 - 312F   Bopomofo\n    //          3130 - 318F   Hangul Compatibility Jamo\n    //          3190 - 319F   Kanbun\n    //          31A0 - 31BF   Bopomofo Extended\n    //          31F0 - 31FF   Katakana Phonetic Extensions\n    //          3200 - 32FF   Enclosed CJK Letters and Months\n    //          3300 - 33FF   CJK Compatibility\n    //          3400 - 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 - 4DFF   Yijing Hexagram Symbols\n    //          4E00 - 9FFF   CJK Unified Ideographs\n    //          A000 - A48F   Yi Syllables\n    //          A490 - A4CF   Yi Radicals\n    //          AC00 - D7AF   Hangul Syllables\n    // [IGNORE] D800 - DB7F   High Surrogates\n    // [IGNORE] DB80 - DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 - DFFF   Low Surrogates\n    // [IGNORE] E000 - F8FF   Private Use Area\n    //          F900 - FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 - FE0F   Variation Selectors\n    // [IGNORE] FE20 - FE2F   Combining Half Marks\n    // [IGNORE] FE30 - FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 - FE6F   Small Form Variants\n    // [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B\n    //          FF00 - FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 - FFFF   Specials\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nexport function isEmojiImprecise(x) {\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n        || (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n        || (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n        || (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n        || (x >= 129648 && x <= 129782));\n}\n// -- UTF-8 BOM\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* CharCode.UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* CharCode.UTF8_BOM */);\n}\nexport function containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n) {\n    const LETTERS_CNT = (90 /* CharCode.Z */ - 65 /* CharCode.A */ + 1);\n    n = n % (2 * LETTERS_CNT);\n    if (n < LETTERS_CNT) {\n        return String.fromCharCode(97 /* CharCode.a */ + n);\n    }\n    return String.fromCharCode(65 /* CharCode.A */ + n - LETTERS_CNT);\n}\nfunction breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n    // http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n    // !!! Let's make the common case a bit faster\n    if (breakTypeA === 0 /* GraphemeBreakType.Other */) {\n        // see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n        return (breakTypeB !== 5 /* GraphemeBreakType.Extend */ && breakTypeB !== 7 /* GraphemeBreakType.SpacingMark */);\n    }\n    // Do not break between a CR and LF. Otherwise, break before and after controls.\n    // GB3                                        CR × LF\n    // GB4                       (Control | CR | LF) ÷\n    // GB5                                           ÷ (Control | CR | LF)\n    if (breakTypeA === 2 /* GraphemeBreakType.CR */) {\n        if (breakTypeB === 3 /* GraphemeBreakType.LF */) {\n            return false; // GB3\n        }\n    }\n    if (breakTypeA === 4 /* GraphemeBreakType.Control */ || breakTypeA === 2 /* GraphemeBreakType.CR */ || breakTypeA === 3 /* GraphemeBreakType.LF */) {\n        return true; // GB4\n    }\n    if (breakTypeB === 4 /* GraphemeBreakType.Control */ || breakTypeB === 2 /* GraphemeBreakType.CR */ || breakTypeB === 3 /* GraphemeBreakType.LF */) {\n        return true; // GB5\n    }\n    // Do not break Hangul syllable sequences.\n    // GB6                                         L × (L | V | LV | LVT)\n    // GB7                                  (LV | V) × (V | T)\n    // GB8                                 (LVT | T) × T\n    if (breakTypeA === 8 /* GraphemeBreakType.L */) {\n        if (breakTypeB === 8 /* GraphemeBreakType.L */ || breakTypeB === 9 /* GraphemeBreakType.V */ || breakTypeB === 11 /* GraphemeBreakType.LV */ || breakTypeB === 12 /* GraphemeBreakType.LVT */) {\n            return false; // GB6\n        }\n    }\n    if (breakTypeA === 11 /* GraphemeBreakType.LV */ || breakTypeA === 9 /* GraphemeBreakType.V */) {\n        if (breakTypeB === 9 /* GraphemeBreakType.V */ || breakTypeB === 10 /* GraphemeBreakType.T */) {\n            return false; // GB7\n        }\n    }\n    if (breakTypeA === 12 /* GraphemeBreakType.LVT */ || breakTypeA === 10 /* GraphemeBreakType.T */) {\n        if (breakTypeB === 10 /* GraphemeBreakType.T */) {\n            return false; // GB8\n        }\n    }\n    // Do not break before extending characters or ZWJ.\n    // GB9                                           × (Extend | ZWJ)\n    if (breakTypeB === 5 /* GraphemeBreakType.Extend */ || breakTypeB === 13 /* GraphemeBreakType.ZWJ */) {\n        return false; // GB9\n    }\n    // The GB9a and GB9b rules only apply to extended grapheme clusters:\n    // Do not break before SpacingMarks, or after Prepend characters.\n    // GB9a                                          × SpacingMark\n    // GB9b                                  Prepend ×\n    if (breakTypeB === 7 /* GraphemeBreakType.SpacingMark */) {\n        return false; // GB9a\n    }\n    if (breakTypeA === 1 /* GraphemeBreakType.Prepend */) {\n        return false; // GB9b\n    }\n    // Do not break within emoji modifier sequences or emoji zwj sequences.\n    // GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n    if (breakTypeA === 13 /* GraphemeBreakType.ZWJ */ && breakTypeB === 14 /* GraphemeBreakType.Extended_Pictographic */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB11\n    }\n    // GB12                          sot (RI RI)* RI × RI\n    // GB13                        [^RI] (RI RI)* RI × RI\n    if (breakTypeA === 6 /* GraphemeBreakType.Regional_Indicator */ && breakTypeB === 6 /* GraphemeBreakType.Regional_Indicator */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB12 & GB13\n    }\n    // GB999                                     Any ÷ Any\n    return true;\n}\nclass GraphemeBreakTree {\n    static getInstance() {\n        if (!GraphemeBreakTree._INSTANCE) {\n            GraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n        }\n        return GraphemeBreakTree._INSTANCE;\n    }\n    constructor() {\n        this._data = getGraphemeBreakRawData();\n    }\n    getGraphemeBreakType(codePoint) {\n        // !!! Let's make 7bit ASCII a bit faster: 0..31\n        if (codePoint < 32) {\n            if (codePoint === 10 /* CharCode.LineFeed */) {\n                return 3 /* GraphemeBreakType.LF */;\n            }\n            if (codePoint === 13 /* CharCode.CarriageReturn */) {\n                return 2 /* GraphemeBreakType.CR */;\n            }\n            return 4 /* GraphemeBreakType.Control */;\n        }\n        // !!! Let's make 7bit ASCII a bit faster: 32..126\n        if (codePoint < 127) {\n            return 0 /* GraphemeBreakType.Other */;\n        }\n        const data = this._data;\n        const nodeCount = data.length / 3;\n        let nodeIndex = 1;\n        while (nodeIndex <= nodeCount) {\n            if (codePoint < data[3 * nodeIndex]) {\n                // go left\n                nodeIndex = 2 * nodeIndex;\n            }\n            else if (codePoint > data[3 * nodeIndex + 1]) {\n                // go right\n                nodeIndex = 2 * nodeIndex + 1;\n            }\n            else {\n                // hit\n                return data[3 * nodeIndex + 2];\n            }\n        }\n        return 0 /* GraphemeBreakType.Other */;\n    }\n}\nGraphemeBreakTree._INSTANCE = null;\nfunction getGraphemeBreakRawData() {\n    // generated using https://github.com/alexdima/unicode-utils/blob/main/grapheme-break.js\n    return JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\n//#endregion\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset, str) {\n    if (offset === 0) {\n        return 0;\n    }\n    // Try to delete emoji part.\n    const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n    if (emojiOffset !== undefined) {\n        return emojiOffset;\n    }\n    // Otherwise, just skip a single code point.\n    const iterator = new CodePointIterator(str, offset);\n    iterator.prevCodePoint();\n    return iterator.offset;\n}\nfunction getOffsetBeforeLastEmojiComponent(initialOffset, str) {\n    // See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n    // structure of emojis.\n    const iterator = new CodePointIterator(str, initialOffset);\n    let codePoint = iterator.prevCodePoint();\n    // Skip modifiers\n    while ((isEmojiModifier(codePoint) || codePoint === 65039 /* CodePoint.emojiVariantSelector */ || codePoint === 8419 /* CodePoint.enclosingKeyCap */)) {\n        if (iterator.offset === 0) {\n            // Cannot skip modifier, no preceding emoji base.\n            return undefined;\n        }\n        codePoint = iterator.prevCodePoint();\n    }\n    // Expect base emoji\n    if (!isEmojiImprecise(codePoint)) {\n        // Unexpected code point, not a valid emoji.\n        return undefined;\n    }\n    let resultOffset = iterator.offset;\n    if (resultOffset > 0) {\n        // Skip optional ZWJ code points that combine multiple emojis.\n        // In theory, we should check if that ZWJ actually combines multiple emojis\n        // to prevent deleting ZWJs in situations we didn't account for.\n        const optionalZwjCodePoint = iterator.prevCodePoint();\n        if (optionalZwjCodePoint === 8205 /* CodePoint.zwj */) {\n            resultOffset = iterator.offset;\n        }\n    }\n    return resultOffset;\n}\nfunction isEmojiModifier(codePoint) {\n    return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\nexport const noBreakWhitespace = '\\xa0';\nexport class AmbiguousCharacters {\n    static getInstance(locales) {\n        return _a.cache.get(Array.from(locales));\n    }\n    static getLocales() {\n        return _a._locales.value;\n    }\n    constructor(confusableDictionary) {\n        this.confusableDictionary = confusableDictionary;\n    }\n    isAmbiguous(codePoint) {\n        return this.confusableDictionary.has(codePoint);\n    }\n    /**\n     * Returns the non basic ASCII code point that the given code point can be confused,\n     * or undefined if such code point does note exist.\n     */\n    getPrimaryConfusable(codePoint) {\n        return this.confusableDictionary.get(codePoint);\n    }\n    getConfusableCodePoints() {\n        return new Set(this.confusableDictionary.keys());\n    }\n}\n_a = AmbiguousCharacters;\nAmbiguousCharacters.ambiguousCharacterData = new Lazy(() => {\n    // Generated using https://github.com/hediet/vscode-unicode-data\n    // Stored as key1, value1, key2, value2, ...\n    return JSON.parse('{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}');\n});\nAmbiguousCharacters.cache = new LRUCachedFunction((locales) => {\n    function arrayToMap(arr) {\n        const result = new Map();\n        for (let i = 0; i < arr.length; i += 2) {\n            result.set(arr[i], arr[i + 1]);\n        }\n        return result;\n    }\n    function mergeMaps(map1, map2) {\n        const result = new Map(map1);\n        for (const [key, value] of map2) {\n            result.set(key, value);\n        }\n        return result;\n    }\n    function intersectMaps(map1, map2) {\n        if (!map1) {\n            return map2;\n        }\n        const result = new Map();\n        for (const [key, value] of map1) {\n            if (map2.has(key)) {\n                result.set(key, value);\n            }\n        }\n        return result;\n    }\n    const data = _a.ambiguousCharacterData.value;\n    let filteredLocales = locales.filter((l) => !l.startsWith('_') && l in data);\n    if (filteredLocales.length === 0) {\n        filteredLocales = ['_default'];\n    }\n    let languageSpecificMap = undefined;\n    for (const locale of filteredLocales) {\n        const map = arrayToMap(data[locale]);\n        languageSpecificMap = intersectMaps(languageSpecificMap, map);\n    }\n    const commonMap = arrayToMap(data['_common']);\n    const map = mergeMaps(commonMap, languageSpecificMap);\n    return new _a(map);\n});\nAmbiguousCharacters._locales = new Lazy(() => Object.keys(_a.ambiguousCharacterData.value).filter((k) => !k.startsWith('_')));\nexport class InvisibleCharacters {\n    static getRawData() {\n        // Generated using https://github.com/hediet/vscode-unicode-data\n        return JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n    }\n    static getData() {\n        if (!this._data) {\n            this._data = new Set(InvisibleCharacters.getRawData());\n        }\n        return this._data;\n    }\n    static isInvisibleCharacter(codePoint) {\n        return InvisibleCharacters.getData().has(codePoint);\n    }\n    static get codePoints() {\n        return InvisibleCharacters.getData();\n    }\n}\nInvisibleCharacters._data = undefined;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Can be passed into the Delayed to defer using a microtask\n * */\nexport const MicrotaskDelay = Symbol('MicrotaskDelay');\n","import { compare, compareIgnoreCase, compareSubstring, compareSubstringIgnoreCase } from './strings.js';\nexport class StringIterator {\n    constructor() {\n        this._value = '';\n        this._pos = 0;\n    }\n    reset(key) {\n        this._value = key;\n        this._pos = 0;\n        return this;\n    }\n    next() {\n        this._pos += 1;\n        return this;\n    }\n    hasNext() {\n        return this._pos < this._value.length - 1;\n    }\n    cmp(a) {\n        const aCode = a.charCodeAt(0);\n        const thisCode = this._value.charCodeAt(this._pos);\n        return aCode - thisCode;\n    }\n    value() {\n        return this._value[this._pos];\n    }\n}\nexport class ConfigKeysIterator {\n    constructor(_caseSensitive = true) {\n        this._caseSensitive = _caseSensitive;\n    }\n    reset(key) {\n        this._value = key;\n        this._from = 0;\n        this._to = 0;\n        return this.next();\n    }\n    hasNext() {\n        return this._to < this._value.length;\n    }\n    next() {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        let justSeps = true;\n        for (; this._to < this._value.length; this._to++) {\n            const ch = this._value.charCodeAt(this._to);\n            if (ch === 46 /* CharCode.Period */) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    }\n    cmp(a) {\n        return this._caseSensitive\n            ? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n            : compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n    }\n    value() {\n        return this._value.substring(this._from, this._to);\n    }\n}\nexport class PathIterator {\n    constructor(_splitOnBackslash = true, _caseSensitive = true) {\n        this._splitOnBackslash = _splitOnBackslash;\n        this._caseSensitive = _caseSensitive;\n    }\n    reset(key) {\n        this._from = 0;\n        this._to = 0;\n        this._value = key;\n        this._valueLen = key.length;\n        for (let pos = key.length - 1; pos >= 0; pos--, this._valueLen--) {\n            const ch = this._value.charCodeAt(pos);\n            if (!(ch === 47 /* CharCode.Slash */ || this._splitOnBackslash && ch === 92 /* CharCode.Backslash */)) {\n                break;\n            }\n        }\n        return this.next();\n    }\n    hasNext() {\n        return this._to < this._valueLen;\n    }\n    next() {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        let justSeps = true;\n        for (; this._to < this._valueLen; this._to++) {\n            const ch = this._value.charCodeAt(this._to);\n            if (ch === 47 /* CharCode.Slash */ || this._splitOnBackslash && ch === 92 /* CharCode.Backslash */) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    }\n    cmp(a) {\n        return this._caseSensitive\n            ? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n            : compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n    }\n    value() {\n        return this._value.substring(this._from, this._to);\n    }\n}\nexport class UriIterator {\n    constructor(_ignorePathCasing, _ignoreQueryAndFragment) {\n        this._ignorePathCasing = _ignorePathCasing;\n        this._ignoreQueryAndFragment = _ignoreQueryAndFragment;\n        this._states = [];\n        this._stateIdx = 0;\n    }\n    reset(key) {\n        this._value = key;\n        this._states = [];\n        if (this._value.scheme) {\n            this._states.push(1 /* UriIteratorState.Scheme */);\n        }\n        if (this._value.authority) {\n            this._states.push(2 /* UriIteratorState.Authority */);\n        }\n        if (this._value.path) {\n            this._pathIterator = new PathIterator(false, !this._ignorePathCasing(key));\n            this._pathIterator.reset(key.path);\n            if (this._pathIterator.value()) {\n                this._states.push(3 /* UriIteratorState.Path */);\n            }\n        }\n        if (!this._ignoreQueryAndFragment(key)) {\n            if (this._value.query) {\n                this._states.push(4 /* UriIteratorState.Query */);\n            }\n            if (this._value.fragment) {\n                this._states.push(5 /* UriIteratorState.Fragment */);\n            }\n        }\n        this._stateIdx = 0;\n        return this;\n    }\n    next() {\n        if (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */ && this._pathIterator.hasNext()) {\n            this._pathIterator.next();\n        }\n        else {\n            this._stateIdx += 1;\n        }\n        return this;\n    }\n    hasNext() {\n        return (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */ && this._pathIterator.hasNext())\n            || this._stateIdx < this._states.length - 1;\n    }\n    cmp(a) {\n        if (this._states[this._stateIdx] === 1 /* UriIteratorState.Scheme */) {\n            return compareIgnoreCase(a, this._value.scheme);\n        }\n        else if (this._states[this._stateIdx] === 2 /* UriIteratorState.Authority */) {\n            return compareIgnoreCase(a, this._value.authority);\n        }\n        else if (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */) {\n            return this._pathIterator.cmp(a);\n        }\n        else if (this._states[this._stateIdx] === 4 /* UriIteratorState.Query */) {\n            return compare(a, this._value.query);\n        }\n        else if (this._states[this._stateIdx] === 5 /* UriIteratorState.Fragment */) {\n            return compare(a, this._value.fragment);\n        }\n        throw new Error();\n    }\n    value() {\n        if (this._states[this._stateIdx] === 1 /* UriIteratorState.Scheme */) {\n            return this._value.scheme;\n        }\n        else if (this._states[this._stateIdx] === 2 /* UriIteratorState.Authority */) {\n            return this._value.authority;\n        }\n        else if (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */) {\n            return this._pathIterator.value();\n        }\n        else if (this._states[this._stateIdx] === 4 /* UriIteratorState.Query */) {\n            return this._value.query;\n        }\n        else if (this._states[this._stateIdx] === 5 /* UriIteratorState.Fragment */) {\n            return this._value.fragment;\n        }\n        throw new Error();\n    }\n}\nclass TernarySearchTreeNode {\n    constructor() {\n        this.height = 1;\n    }\n    rotateLeft() {\n        const tmp = this.right;\n        this.right = tmp.left;\n        tmp.left = this;\n        this.updateHeight();\n        tmp.updateHeight();\n        return tmp;\n    }\n    rotateRight() {\n        const tmp = this.left;\n        this.left = tmp.right;\n        tmp.right = this;\n        this.updateHeight();\n        tmp.updateHeight();\n        return tmp;\n    }\n    updateHeight() {\n        this.height = 1 + Math.max(this.heightLeft, this.heightRight);\n    }\n    balanceFactor() {\n        return this.heightRight - this.heightLeft;\n    }\n    get heightLeft() {\n        var _a, _b;\n        return (_b = (_a = this.left) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : 0;\n    }\n    get heightRight() {\n        var _a, _b;\n        return (_b = (_a = this.right) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : 0;\n    }\n}\nexport class TernarySearchTree {\n    static forUris(ignorePathCasing = () => false, ignoreQueryAndFragment = () => false) {\n        return new TernarySearchTree(new UriIterator(ignorePathCasing, ignoreQueryAndFragment));\n    }\n    static forStrings() {\n        return new TernarySearchTree(new StringIterator());\n    }\n    static forConfigKeys() {\n        return new TernarySearchTree(new ConfigKeysIterator());\n    }\n    constructor(segments) {\n        this._iter = segments;\n    }\n    clear() {\n        this._root = undefined;\n    }\n    set(key, element) {\n        const iter = this._iter.reset(key);\n        let node;\n        if (!this._root) {\n            this._root = new TernarySearchTreeNode();\n            this._root.segment = iter.value();\n        }\n        const stack = [];\n        // find insert_node\n        node = this._root;\n        while (true) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                if (!node.left) {\n                    node.left = new TernarySearchTreeNode();\n                    node.left.segment = iter.value();\n                }\n                stack.push([-1 /* Dir.Left */, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                if (!node.right) {\n                    node.right = new TernarySearchTreeNode();\n                    node.right.segment = iter.value();\n                }\n                stack.push([1 /* Dir.Right */, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                if (!node.mid) {\n                    node.mid = new TernarySearchTreeNode();\n                    node.mid.segment = iter.value();\n                }\n                stack.push([0 /* Dir.Mid */, node]);\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        // set value\n        const oldElement = node.value;\n        node.value = element;\n        node.key = key;\n        // balance\n        for (let i = stack.length - 1; i >= 0; i--) {\n            const node = stack[i][1];\n            node.updateHeight();\n            const bf = node.balanceFactor();\n            if (bf < -1 || bf > 1) {\n                // needs rotate\n                const d1 = stack[i][0];\n                const d2 = stack[i + 1][0];\n                if (d1 === 1 /* Dir.Right */ && d2 === 1 /* Dir.Right */) {\n                    //right, right -> rotate left\n                    stack[i][1] = node.rotateLeft();\n                }\n                else if (d1 === -1 /* Dir.Left */ && d2 === -1 /* Dir.Left */) {\n                    // left, left -> rotate right\n                    stack[i][1] = node.rotateRight();\n                }\n                else if (d1 === 1 /* Dir.Right */ && d2 === -1 /* Dir.Left */) {\n                    // right, left -> double rotate right, left\n                    node.right = stack[i + 1][1] = stack[i + 1][1].rotateRight();\n                    stack[i][1] = node.rotateLeft();\n                }\n                else if (d1 === -1 /* Dir.Left */ && d2 === 1 /* Dir.Right */) {\n                    // left, right -> double rotate left, right\n                    node.left = stack[i + 1][1] = stack[i + 1][1].rotateLeft();\n                    stack[i][1] = node.rotateRight();\n                }\n                else {\n                    throw new Error();\n                }\n                // patch path to parent\n                if (i > 0) {\n                    switch (stack[i - 1][0]) {\n                        case -1 /* Dir.Left */:\n                            stack[i - 1][1].left = stack[i][1];\n                            break;\n                        case 1 /* Dir.Right */:\n                            stack[i - 1][1].right = stack[i][1];\n                            break;\n                        case 0 /* Dir.Mid */:\n                            stack[i - 1][1].mid = stack[i][1];\n                            break;\n                    }\n                }\n                else {\n                    this._root = stack[0][1];\n                }\n            }\n        }\n        return oldElement;\n    }\n    get(key) {\n        var _a;\n        return (_a = this._getNode(key)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    _getNode(key) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node;\n    }\n    has(key) {\n        const node = this._getNode(key);\n        return !((node === null || node === void 0 ? void 0 : node.value) === undefined && (node === null || node === void 0 ? void 0 : node.mid) === undefined);\n    }\n    delete(key) {\n        return this._delete(key, false);\n    }\n    deleteSuperstr(key) {\n        return this._delete(key, true);\n    }\n    _delete(key, superStr) {\n        var _a;\n        const iter = this._iter.reset(key);\n        const stack = [];\n        let node = this._root;\n        // find node\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                stack.push([-1 /* Dir.Left */, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                stack.push([1 /* Dir.Right */, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                stack.push([0 /* Dir.Mid */, node]);\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        if (!node) {\n            // node not found\n            return;\n        }\n        if (superStr) {\n            // removing children, reset height\n            node.left = undefined;\n            node.mid = undefined;\n            node.right = undefined;\n            node.height = 1;\n        }\n        else {\n            // removing element\n            node.key = undefined;\n            node.value = undefined;\n        }\n        // BST node removal\n        if (!node.mid && !node.value) {\n            if (node.left && node.right) {\n                // full node\n                // replace deleted-node with the min-node of the right branch.\n                // If there is no true min-node leave things as they are\n                const min = this._min(node.right);\n                if (min.key) {\n                    const { key, value, segment } = min;\n                    this._delete(min.key, false);\n                    node.key = key;\n                    node.value = value;\n                    node.segment = segment;\n                }\n            }\n            else {\n                // empty or half empty\n                const newChild = (_a = node.left) !== null && _a !== void 0 ? _a : node.right;\n                if (stack.length > 0) {\n                    const [dir, parent] = stack[stack.length - 1];\n                    switch (dir) {\n                        case -1 /* Dir.Left */:\n                            parent.left = newChild;\n                            break;\n                        case 0 /* Dir.Mid */:\n                            parent.mid = newChild;\n                            break;\n                        case 1 /* Dir.Right */:\n                            parent.right = newChild;\n                            break;\n                    }\n                }\n                else {\n                    this._root = newChild;\n                }\n            }\n        }\n        // AVL balance\n        for (let i = stack.length - 1; i >= 0; i--) {\n            const node = stack[i][1];\n            node.updateHeight();\n            const bf = node.balanceFactor();\n            if (bf > 1) {\n                // right heavy\n                if (node.right.balanceFactor() >= 0) {\n                    // right, right -> rotate left\n                    stack[i][1] = node.rotateLeft();\n                }\n                else {\n                    // right, left -> double rotate\n                    node.right = node.right.rotateRight();\n                    stack[i][1] = node.rotateLeft();\n                }\n            }\n            else if (bf < -1) {\n                // left heavy\n                if (node.left.balanceFactor() <= 0) {\n                    // left, left -> rotate right\n                    stack[i][1] = node.rotateRight();\n                }\n                else {\n                    // left, right -> double rotate\n                    node.left = node.left.rotateLeft();\n                    stack[i][1] = node.rotateRight();\n                }\n            }\n            // patch path to parent\n            if (i > 0) {\n                switch (stack[i - 1][0]) {\n                    case -1 /* Dir.Left */:\n                        stack[i - 1][1].left = stack[i][1];\n                        break;\n                    case 1 /* Dir.Right */:\n                        stack[i - 1][1].right = stack[i][1];\n                        break;\n                    case 0 /* Dir.Mid */:\n                        stack[i - 1][1].mid = stack[i][1];\n                        break;\n                }\n            }\n            else {\n                this._root = stack[0][1];\n            }\n        }\n    }\n    _min(node) {\n        while (node.left) {\n            node = node.left;\n        }\n        return node;\n    }\n    findSubstr(key) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        let candidate = undefined;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                candidate = node.value || candidate;\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node && node.value || candidate;\n    }\n    findSuperstr(key) {\n        return this._findSuperstrOrElement(key, false);\n    }\n    _findSuperstrOrElement(key, allowValue) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                // collect\n                if (!node.mid) {\n                    if (allowValue) {\n                        return node.value;\n                    }\n                    else {\n                        return undefined;\n                    }\n                }\n                else {\n                    return this._entries(node.mid);\n                }\n            }\n        }\n        return undefined;\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key);\n        }\n    }\n    *[Symbol.iterator]() {\n        yield* this._entries(this._root);\n    }\n    _entries(node) {\n        const result = [];\n        this._dfsEntries(node, result);\n        return result[Symbol.iterator]();\n    }\n    _dfsEntries(node, bucket) {\n        // DFS\n        if (!node) {\n            return;\n        }\n        if (node.left) {\n            this._dfsEntries(node.left, bucket);\n        }\n        if (node.value) {\n            bucket.push([node.key, node.value]);\n        }\n        if (node.mid) {\n            this._dfsEntries(node.mid, bucket);\n        }\n        if (node.right) {\n            this._dfsEntries(node.right, bucket);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nfunction countMapFrom(values) {\n    var _a;\n    const map = new Map();\n    for (const value of values) {\n        map.set(value, ((_a = map.get(value)) !== null && _a !== void 0 ? _a : 0) + 1);\n    }\n    return map;\n}\n/**\n * Implementation of tf-idf (term frequency-inverse document frequency) for a set of\n * documents where each document contains one or more chunks of text.\n * Each document is identified by a key, and the score for each document is computed\n * by taking the max score over all the chunks in the document.\n */\nexport class TfIdfCalculator {\n    constructor() {\n        /**\n         * Total number of chunks\n         */\n        this.chunkCount = 0;\n        this.chunkOccurrences = new Map();\n        this.documents = new Map();\n    }\n    calculateScores(query, token) {\n        const embedding = this.computeEmbedding(query);\n        const idfCache = new Map();\n        const scores = [];\n        // For each document, generate one score\n        for (const [key, doc] of this.documents) {\n            if (token.isCancellationRequested) {\n                return [];\n            }\n            for (const chunk of doc.chunks) {\n                const score = this.computeSimilarityScore(chunk, embedding, idfCache);\n                if (score > 0) {\n                    scores.push({ key, score });\n                }\n            }\n        }\n        return scores;\n    }\n    /**\n     * Count how many times each term (word) appears in a string.\n     */\n    static termFrequencies(input) {\n        return countMapFrom(TfIdfCalculator.splitTerms(input));\n    }\n    /**\n     * Break a string into terms (words).\n     */\n    static *splitTerms(input) {\n        const normalize = (word) => word.toLowerCase();\n        // Only match on words that are at least 3 characters long and start with a letter\n        for (const [word] of input.matchAll(/\\b\\p{Letter}[\\p{Letter}\\d]{2,}\\b/gu)) {\n            yield normalize(word);\n            // eslint-disable-next-line local/code-no-look-behind-regex\n            const camelParts = word.split(/(?<=[a-z])(?=[A-Z])/g);\n            if (camelParts.length > 1) {\n                for (const part of camelParts) {\n                    // Require at least 3 letters in the parts of a camel case word\n                    if (part.length > 2 && /\\p{Letter}{3,}/gu.test(part)) {\n                        yield normalize(part);\n                    }\n                }\n            }\n        }\n    }\n    updateDocuments(documents) {\n        var _a;\n        for (const { key } of documents) {\n            this.deleteDocument(key);\n        }\n        for (const doc of documents) {\n            const chunks = [];\n            for (const text of doc.textChunks) {\n                // TODO: See if we can compute the tf lazily\n                // The challenge is that we need to also update the `chunkOccurrences`\n                // and all of those updates need to get flushed before the real TF-IDF of\n                // anything is computed.\n                const tf = TfIdfCalculator.termFrequencies(text);\n                // Update occurrences list\n                for (const term of tf.keys()) {\n                    this.chunkOccurrences.set(term, ((_a = this.chunkOccurrences.get(term)) !== null && _a !== void 0 ? _a : 0) + 1);\n                }\n                chunks.push({ text, tf });\n            }\n            this.chunkCount += chunks.length;\n            this.documents.set(doc.key, { chunks });\n        }\n        return this;\n    }\n    deleteDocument(key) {\n        const doc = this.documents.get(key);\n        if (!doc) {\n            return;\n        }\n        this.documents.delete(key);\n        this.chunkCount -= doc.chunks.length;\n        // Update term occurrences for the document\n        for (const chunk of doc.chunks) {\n            for (const term of chunk.tf.keys()) {\n                const currentOccurrences = this.chunkOccurrences.get(term);\n                if (typeof currentOccurrences === 'number') {\n                    const newOccurrences = currentOccurrences - 1;\n                    if (newOccurrences <= 0) {\n                        this.chunkOccurrences.delete(term);\n                    }\n                    else {\n                        this.chunkOccurrences.set(term, newOccurrences);\n                    }\n                }\n            }\n        }\n    }\n    computeSimilarityScore(chunk, queryEmbedding, idfCache) {\n        // Compute the dot product between the chunk's embedding and the query embedding\n        // Note that the chunk embedding is computed lazily on a per-term basis.\n        // This lets us skip a large number of calculations because the majority\n        // of chunks do not share any terms with the query.\n        let sum = 0;\n        for (const [term, termTfidf] of Object.entries(queryEmbedding)) {\n            const chunkTf = chunk.tf.get(term);\n            if (!chunkTf) {\n                // Term does not appear in chunk so it has no contribution\n                continue;\n            }\n            let chunkIdf = idfCache.get(term);\n            if (typeof chunkIdf !== 'number') {\n                chunkIdf = this.computeIdf(term);\n                idfCache.set(term, chunkIdf);\n            }\n            const chunkTfidf = chunkTf * chunkIdf;\n            sum += chunkTfidf * termTfidf;\n        }\n        return sum;\n    }\n    computeEmbedding(input) {\n        const tf = TfIdfCalculator.termFrequencies(input);\n        return this.computeTfidf(tf);\n    }\n    computeIdf(term) {\n        var _a;\n        const chunkOccurrences = (_a = this.chunkOccurrences.get(term)) !== null && _a !== void 0 ? _a : 0;\n        return chunkOccurrences > 0\n            ? Math.log((this.chunkCount + 1) / chunkOccurrences)\n            : 0;\n    }\n    computeTfidf(termFrequencies) {\n        const embedding = Object.create(null);\n        for (const [word, occurrences] of termFrequencies) {\n            const idf = this.computeIdf(word);\n            if (idf > 0) {\n                embedding[word] = occurrences * idf;\n            }\n        }\n        return embedding;\n    }\n}\n/**\n * Normalize the scores to be between 0 and 1 and sort them decending.\n * @param scores array of scores from {@link TfIdfCalculator.calculateScores}\n * @returns normalized scores\n */\nexport function normalizeTfIdfScores(scores) {\n    var _a, _b;\n    // copy of scores\n    const result = scores.slice(0);\n    // sort descending\n    result.sort((a, b) => b.score - a.score);\n    // normalize\n    const max = (_b = (_a = result[0]) === null || _a === void 0 ? void 0 : _a.score) !== null && _b !== void 0 ? _b : 0;\n    if (max > 0) {\n        for (const score of result) {\n            score.score /= max;\n        }\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Codicon } from './codicons.js';\nexport var ThemeColor;\n(function (ThemeColor) {\n    function isThemeColor(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string';\n    }\n    ThemeColor.isThemeColor = isThemeColor;\n})(ThemeColor || (ThemeColor = {}));\nexport var ThemeIcon;\n(function (ThemeIcon) {\n    ThemeIcon.iconNameSegment = '[A-Za-z0-9]+';\n    ThemeIcon.iconNameExpression = '[A-Za-z0-9-]+';\n    ThemeIcon.iconModifierExpression = '~[A-Za-z]+';\n    ThemeIcon.iconNameCharacter = '[A-Za-z0-9~-]';\n    const ThemeIconIdRegex = new RegExp(`^(${ThemeIcon.iconNameExpression})(${ThemeIcon.iconModifierExpression})?$`);\n    function asClassNameArray(icon) {\n        const match = ThemeIconIdRegex.exec(icon.id);\n        if (!match) {\n            return asClassNameArray(Codicon.error);\n        }\n        const [, id, modifier] = match;\n        const classNames = ['codicon', 'codicon-' + id];\n        if (modifier) {\n            classNames.push('codicon-modifier-' + modifier.substring(1));\n        }\n        return classNames;\n    }\n    ThemeIcon.asClassNameArray = asClassNameArray;\n    function asClassName(icon) {\n        return asClassNameArray(icon).join(' ');\n    }\n    ThemeIcon.asClassName = asClassName;\n    function asCSSSelector(icon) {\n        return '.' + asClassNameArray(icon).join('.');\n    }\n    ThemeIcon.asCSSSelector = asCSSSelector;\n    function isThemeIcon(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string' && (typeof obj.color === 'undefined' || ThemeColor.isThemeColor(obj.color));\n    }\n    ThemeIcon.isThemeIcon = isThemeIcon;\n    const _regexFromString = new RegExp(`^\\\\$\\\\((${ThemeIcon.iconNameExpression}(?:${ThemeIcon.iconModifierExpression})?)\\\\)$`);\n    function fromString(str) {\n        const match = _regexFromString.exec(str);\n        if (!match) {\n            return undefined;\n        }\n        const [, name] = match;\n        return { id: name };\n    }\n    ThemeIcon.fromString = fromString;\n    function fromId(id) {\n        return { id };\n    }\n    ThemeIcon.fromId = fromId;\n    function modify(icon, modifier) {\n        let id = icon.id;\n        const tildeIndex = id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            id = id.substring(0, tildeIndex);\n        }\n        if (modifier) {\n            id = `${id}~${modifier}`;\n        }\n        return { id };\n    }\n    ThemeIcon.modify = modify;\n    function getModifier(icon) {\n        const tildeIndex = icon.id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            return icon.id.substring(tildeIndex + 1);\n        }\n        return undefined;\n    }\n    ThemeIcon.getModifier = getModifier;\n    function isEqual(ti1, ti2) {\n        var _a, _b;\n        return ti1.id === ti2.id && ((_a = ti1.color) === null || _a === void 0 ? void 0 : _a.id) === ((_b = ti2.color) === null || _b === void 0 ? void 0 : _b.id);\n    }\n    ThemeIcon.isEqual = isEqual;\n})(ThemeIcon || (ThemeIcon = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    return (typeof str === 'string');\n}\n/**\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * @returns whether the provided parameter is of type `Buffer` or Uint8Array dervived type\n */\nexport function isTypedArray(obj) {\n    const TypedArray = Object.getPrototypeOf(Uint8Array);\n    return typeof obj === 'object'\n        && obj instanceof TypedArray;\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return (obj === true || obj === false);\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined(arg) {\n    return !isUndefinedOrNull(arg);\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nexport function assertType(condition, type) {\n    if (!condition) {\n        throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n    }\n}\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined(arg) {\n    if (isUndefinedOrNull(arg)) {\n        throw new Error('Assertion Failed: argument is undefined or null');\n    }\n    return arg;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return (typeof obj === 'function');\n}\nexport function validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(`argument does not match constraint: typeof ${constraint}`);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* Constants.MAX_UINT_8 */) {\n        return 255 /* Constants.MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* Constants.MAX_UINT_32 */) {\n        return 4294967295 /* Constants.MAX_UINT_32 */;\n    }\n    return v | 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as paths from './path.js';\nimport { isWindows } from './platform.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI {\n    static isUri(thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'string'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    }\n    /**\n     * @internal\n     */\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    // ---- filesystem path -----------------------\n    /**\n     * Returns a string representing the corresponding file system path of this URI.\n     * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n     * platform specific path separator.\n     *\n     * * Will *not* validate the path for invalid characters and semantics.\n     * * Will *not* look at the scheme of this URI.\n     * * The result shall *not* be used for display purposes but for accessing a file on disk.\n     *\n     *\n     * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n     * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n     *\n     * ```ts\n        const u = URI.parse('file://server/c$/folder/file.txt')\n        u.authority === 'server'\n        u.path === '/shares/c$/file.txt'\n        u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n    ```\n     *\n     * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n     * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n     * with URIs that represent files on disk (`file` scheme).\n     */\n    get fsPath() {\n        // if (this.scheme !== 'file') {\n        // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n        // }\n        return uriToFsPath(this, false);\n    }\n    // ---- modify to new -------------------------\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new Uri(scheme, authority, path, query, fragment);\n    }\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.example.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return new Uri(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new Uri(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n    }\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    static file(path) {\n        let authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new Uri('file', authority, path, _empty, _empty);\n    }\n    /**\n     * Creates new URI from uri components.\n     *\n     * Unless `strict` is `true` the scheme is defaults to be `file`. This function performs\n     * validation and should be used for untrusted uri components retrieved from storage,\n     * user input, command arguments etc\n     */\n    static from(components, strict) {\n        const result = new Uri(components.scheme, components.authority, components.path, components.query, components.fragment, strict);\n        return result;\n    }\n    /**\n     * Join a URI path with path fragments and normalizes the resulting path.\n     *\n     * @param uri The input URI.\n     * @param pathFragment The path fragment to add to the URI path.\n     * @returns The resulting URI.\n     */\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw new Error(`[UriError]: cannot call joinPath on URI without path`);\n        }\n        let newPath;\n        if (isWindows && uri.scheme === 'file') {\n            newPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n        }\n        else {\n            newPath = paths.posix.join(uri.path, ...pathFragment);\n        }\n        return uri.with({ path: newPath });\n    }\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    toString(skipEncoding = false) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        var _a, _b;\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            const result = new Uri(data);\n            result._formatted = (_a = data.external) !== null && _a !== void 0 ? _a : null;\n            result._fsPath = data._sep === _pathSepMarker ? (_b = data.fsPath) !== null && _b !== void 0 ? _b : null : null;\n            return result;\n        }\n    }\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = false) {\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: 1 /* MarshalledId.Uri */\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        //--- uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        // TODO\n        // this isn't correct and can violate the UriComponents contract but\n        // this is part of the vscode.Uri API and we shouldn't change how that\n        // works anymore\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable = {\n    [58 /* CharCode.Colon */]: '%3A', // gen-delims\n    [47 /* CharCode.Slash */]: '%2F',\n    [63 /* CharCode.QuestionMark */]: '%3F',\n    [35 /* CharCode.Hash */]: '%23',\n    [91 /* CharCode.OpenSquareBracket */]: '%5B',\n    [93 /* CharCode.CloseSquareBracket */]: '%5D',\n    [64 /* CharCode.AtSign */]: '%40',\n    [33 /* CharCode.ExclamationMark */]: '%21', // sub-delims\n    [36 /* CharCode.DollarSign */]: '%24',\n    [38 /* CharCode.Ampersand */]: '%26',\n    [39 /* CharCode.SingleQuote */]: '%27',\n    [40 /* CharCode.OpenParen */]: '%28',\n    [41 /* CharCode.CloseParen */]: '%29',\n    [42 /* CharCode.Asterisk */]: '%2A',\n    [43 /* CharCode.Plus */]: '%2B',\n    [44 /* CharCode.Comma */]: '%2C',\n    [59 /* CharCode.Semicolon */]: '%3B',\n    [61 /* CharCode.Equals */]: '%3D',\n    [32 /* CharCode.Space */]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, isPath, isAuthority) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* CharCode.a */ && code <= 122 /* CharCode.z */)\n            || (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */)\n            || (code >= 48 /* CharCode.Digit0 */ && code <= 57 /* CharCode.Digit9 */)\n            || code === 45 /* CharCode.Dash */\n            || code === 46 /* CharCode.Period */\n            || code === 95 /* CharCode.Underline */\n            || code === 126 /* CharCode.Tilde */\n            || (isPath && code === 47 /* CharCode.Slash */)\n            || (isAuthority && code === 91 /* CharCode.OpenSquareBracket */)\n            || (isAuthority && code === 93 /* CharCode.CloseSquareBracket */)\n            || (isAuthority && code === 58 /* CharCode.Colon */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === 35 /* CharCode.Hash */ || code === 63 /* CharCode.QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* CharCode.Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* CharCode.A */ && uri.path.charCodeAt(1) <= 90 /* CharCode.Z */ || uri.path.charCodeAt(1) >= 97 /* CharCode.a */ && uri.path.charCodeAt(1) <= 122 /* CharCode.z */)\n        && uri.path.charCodeAt(2) === 58 /* CharCode.Colon */) {\n        if (!keepDriveLetterCasing) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.lastIndexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false, false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false, true);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.lastIndexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false, true);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false, true);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* CharCode.Slash */ && path.charCodeAt(2) === 58 /* CharCode.Colon */) {\n            const code = path.charCodeAt(1);\n            if (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* CharCode.Colon */) {\n            const code = path.charCodeAt(0);\n            if (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true, false);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false, false) : fragment;\n    }\n    return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (_a) {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","export const generateUuid = (function () {\n    // use `randomUUID` if possible\n    if (typeof crypto === 'object' && typeof crypto.randomUUID === 'function') {\n        return crypto.randomUUID.bind(crypto);\n    }\n    // use `randomValues` if possible\n    let getRandomValues;\n    if (typeof crypto === 'object' && typeof crypto.getRandomValues === 'function') {\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    else {\n        getRandomValues = function (bucket) {\n            for (let i = 0; i < bucket.length; i++) {\n                bucket[i] = Math.floor(Math.random() * 256);\n            }\n            return bucket;\n        };\n    }\n    // prep-work\n    const _data = new Uint8Array(16);\n    const _hex = [];\n    for (let i = 0; i < 256; i++) {\n        _hex.push(i.toString(16).padStart(2, '0'));\n    }\n    return function generateUuid() {\n        // get data\n        getRandomValues(_data);\n        // set version bits\n        _data[6] = (_data[6] & 0x0f) | 0x40;\n        _data[8] = (_data[8] & 0x3f) | 0x80;\n        // print as string\n        let i = 0;\n        let result = '';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        return result;\n    };\n})();\n"],"names":["originalFSPath","uri","uriToFsPath","ExtUri","constructor","_ignorePathCasing","this","compare","uri1","uri2","ignoreFragment","arguments","length","undefined","strCompare","getComparisonKey","isEqual","with","path","toLowerCase","fragment","toString","isEqualOrParent","base","parentCandidate","scheme","Schemas","file","extpath","query","isEqualAuthority","authority","joinPath","resource","_len","pathFragment","Array","_key","URI","basenameOrAuthority","basename","paths","extname","dirname","charCodeAt","console","error","concat","normalizePath","normalizedPath","normalize","relativePath","from","to","isWindows","fromPath","toPath","i","len","Math","min","charAt","substr","relative","resolvePath","newURI","resolve","isAbsolutePath","a1","a2","equalsIgnoreCase","hasTrailingPathSeparator","sep","fsp","p","test","fsPath","removeTrailingPathSeparator","addTrailingPathSeparator","isRootSep","extUri","isLinux","_","bind","DataUri","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","metadata","Map","substring","indexOf","lastIndexOf","split","forEach","property","key","value","set","mime","ScrollState","_forceIntegerValues","width","scrollWidth","scrollLeft","height","scrollHeight","scrollTop","_scrollStateBrand","rawScrollLeft","rawScrollTop","equals","other","withScrollDimensions","update","useRawScrollPositions","withScrollPosition","createScrollEvent","previous","inSmoothScrolling","widthChanged","scrollWidthChanged","scrollLeftChanged","heightChanged","scrollHeightChanged","scrollTopChanged","oldWidth","oldScrollWidth","oldScrollLeft","oldHeight","oldScrollHeight","oldScrollTop","Scrollable","Disposable","options","super","_scrollableBrand","_onScroll","_register","Emitter","onScroll","event","_smoothScrollDuration","smoothScrollDuration","_scheduleAtNextAnimationFrame","scheduleAtNextAnimationFrame","_state","forceIntegerValues","_smoothScrolling","dispose","setSmoothScrollDuration","validateScrollPosition","scrollPosition","getScrollDimensions","setScrollDimensions","dimensions","_a","newState","_setState","Boolean","acceptScrollDimensions","getFutureScrollPosition","getCurrentScrollPosition","setScrollPositionNow","setScrollPositionSmooth","reuseAnimation","validTarget","newSmoothScrolling","SmoothScrollingOperation","startTime","duration","combine","start","animationFrameDisposable","_performSmoothScrolling","hasPendingScrollAnimation","tick","isDone","oldState","fire","SmoothScrollingUpdate","createEaseOutCubic","delta","completion","t","pow","easeInCubic","_initAnimations","_initAnimation","viewportSize","abs","stop1","stop2","a","b","cut","state","_tick","Date","now","newScrollLeft","newScrollTop","buildReplaceStringWithCasePreserved","matches","pattern","containsHyphens","validateSpecificSpecialCharacter","containsUnderscores","buildReplaceStringForSpecificSpecialCharacter","toUpperCase","strings","specialCharacter","splitPatternAtSpecialCharacter","splitMatchAtSpecialCharacter","replaceString","splitValue","index","slice","Severity","_error","_warning","_info","fromValue","Error","Warning","Info","Ignore","severity","hasPerformanceNow","globalThis","performance","StopWatch","create","highResolution","_now","_startTime","_stopTime","stop","elapsed","isFalsyOrWhitespace","str","trim","_formatRegexp","format","args","replace","match","group","idx","parseInt","isNaN","escape","html","escapeRegExpCharacters","haystack","needle","rtrim","ltrim","needleLen","offset","haystackLen","convertSimple2RegExpPattern","stripWildcards","createRegExp","searchString","isRegex","wholeWord","modifiers","global","matchCase","multiline","unicode","RegExp","regExpLeadsToEndlessLoop","regexp","source","exec","lastIndex","splitLines","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","end","lastNonWhitespaceIndex","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareIgnoreCase","compareSubstringIgnoreCase","isLowerAsciiLetter","diff","isAsciiDigit","code","isUpperAsciiLetter","startsWithIgnoreCase","candidate","candidateLength","commonPrefixLength","commonSuffixLength","aLastIndex","bLastIndex","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","nextCharCode","CodePointIterator","_offset","_str","setOffset","prevCodePoint","codePoint","prevCharCode","getPrevCodePoint","nextCodePoint","eol","GraphemeIterator","_iterator","nextGraphemeLength","graphemeBreakTree","GraphemeBreakTree","getInstance","iterator","initialOffset","graphemeBreakType","getGraphemeBreakType","nextGraphemeBreakType","breakBetweenGraphemeBreakType","prevGraphemeLength","prevGraphemeBreakType","nextCharLength","prevCharLength","getCharContainingOffset","endOffset","CONTAINS_RTL","containsRTL","IS_BASIC_ASCII","isBasicASCII","UNUSUAL_LINE_TERMINATORS","containsUnusualLineTerminators","isFullWidthCharacter","isEmojiImprecise","x","UTF8_BOM_CHARACTER","String","fromCharCode","startsWithUTF8BOM","containsUppercaseCharacter","target","singleLetterHash","n","breakTypeA","breakTypeB","_INSTANCE","_data","JSON","parse","data","nodeCount","nodeIndex","getLeftDeleteOffset","emojiOffset","isEmojiModifier","resultOffset","getOffsetBeforeLastEmojiComponent","noBreakWhitespace","AmbiguousCharacters","locales","cache","get","getLocales","_locales","confusableDictionary","isAmbiguous","has","getPrimaryConfusable","getConfusableCodePoints","Set","keys","ambiguousCharacterData","Lazy","LRUCachedFunction","arrayToMap","arr","result","intersectMaps","map1","map2","languageSpecificMap","filteredLocales","filter","l","startsWith","locale","map","mergeMaps","Object","k","InvisibleCharacters","getRawData","getData","isInvisibleCharacter","codePoints","MicrotaskDelay","Symbol","StringIterator","_value","_pos","reset","next","hasNext","cmp","ConfigKeysIterator","_caseSensitive","_from","_to","justSeps","PathIterator","_splitOnBackslash","_valueLen","pos","ch","UriIterator","_ignoreQueryAndFragment","_states","_stateIdx","push","_pathIterator","TernarySearchTreeNode","rotateLeft","tmp","right","left","updateHeight","rotateRight","max","heightLeft","heightRight","balanceFactor","_b","TernarySearchTree","forUris","forStrings","forConfigKeys","segments","_iter","clear","_root","element","iter","node","segment","stack","val","mid","oldElement","bf","d1","d2","_getNode","delete","_delete","deleteSuperstr","superStr","_min","newChild","dir","parent","findSubstr","findSuperstr","_findSuperstrOrElement","allowValue","_entries","callback","_dfsEntries","bucket","TfIdfCalculator","chunkCount","chunkOccurrences","documents","calculateScores","token","embedding","computeEmbedding","idfCache","scores","doc","isCancellationRequested","chunk","chunks","score","computeSimilarityScore","termFrequencies","input","values","countMapFrom","splitTerms","word","matchAll","camelParts","part","updateDocuments","deleteDocument","text","textChunks","tf","term","currentOccurrences","newOccurrences","queryEmbedding","sum","termTfidf","entries","chunkTf","chunkIdf","computeIdf","computeTfidf","log","occurrences","idf","normalizeTfIdfScores","sort","ThemeColor","ThemeIcon","isThemeColor","obj","id","iconNameSegment","iconNameExpression","iconModifierExpression","iconNameCharacter","ThemeIconIdRegex","asClassNameArray","icon","Codicon","modifier","classNames","asClassName","join","asCSSSelector","isThemeIcon","color","_regexFromString","fromString","name","fromId","modify","tildeIndex","getModifier","ti1","ti2","isString","isObject","isArray","isTypedArray","TypedArray","getPrototypeOf","Uint8Array","isNumber","isIterable","isBoolean","isUndefined","isDefined","arg","isUndefinedOrNull","assertType","condition","type","assertIsDefined","isFunction","validateConstraints","constraints","validateConstraint","constraint","call","toUint8","v","toUint32","_schemePattern","_singleSlashStart","_doubleSlashStart","_empty","_slash","_regexp","isUri","thing","schemeOrData","_strict","_schemeFix","_referenceResolution","ret","_validateUri","change","Uri","percentDecode","components","strict","newPath","_asFormatted","toJSON","revive","_formatted","external","_fsPath","_sep","_pathSepMarker","res","$mid","encodeTable","encodeURIComponentFast","uriComponent","isPath","isAuthority","nativeEncodePos","encodeURIComponent","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","skipEncoding","encoder","userinfo","decodeURIComponentGraceful","decodeURIComponent","_rEncodedAsHex","generateUuid","crypto","randomUUID","getRandomValues","floor","random","_hex","padStart"],"sourceRoot":""}