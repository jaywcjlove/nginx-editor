{"version":3,"file":"static/js/monaco-editor-vendor.dbdc571d.f791d1b4.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/contentHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/resizableContentWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/getHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/marginHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markerHoverParticipant.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hoverOperation.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hoverTypes.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markdownHoverParticipant.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplace.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplaceCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/indentation/browser/indentUtils.js","../node_modules/monaco-editor/esm/vs/editor/contrib/indentation/browser/indentation.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar ContentHoverController_1, ContentHoverWidget_1;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { HoverAction, HoverWidget, getHoverAccessibleViewHint } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverParticipantRegistry, HoverRangeAnchor } from './hoverTypes.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ResizableContentWidget } from './resizableContentWidget.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nconst $ = dom.$;\nlet ContentHoverController = ContentHoverController_1 = class ContentHoverController extends Disposable {\n    constructor(_editor, _instantiationService, _keybindingService) {\n        super();\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._keybindingService = _keybindingService;\n        this._currentResult = null;\n        this._widget = this._register(this._instantiationService.createInstance(ContentHoverWidget, this._editor));\n        // Instantiate participants and sort them by `hoverOrdinal` which is relevant for rendering order.\n        this._participants = [];\n        for (const participant of HoverParticipantRegistry.getAll()) {\n            this._participants.push(this._instantiationService.createInstance(participant, this._editor));\n        }\n        this._participants.sort((p1, p2) => p1.hoverOrdinal - p2.hoverOrdinal);\n        this._computer = new ContentHoverComputer(this._editor, this._participants);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            if (!this._computer.anchor) {\n                // invalid state, ignore result\n                return;\n            }\n            const messages = (result.hasLoadingMessage ? this._addLoadingMessage(result.value) : result.value);\n            this._withResult(new HoverResult(this._computer.anchor, messages, result.isComplete));\n        }));\n        this._register(dom.addStandardDisposableListener(this._widget.getDomNode(), 'keydown', (e) => {\n            if (e.equals(9 /* KeyCode.Escape */)) {\n                this.hide();\n            }\n        }));\n        this._register(TokenizationRegistry.onDidChange(() => {\n            if (this._widget.position && this._currentResult) {\n                this._setCurrentResult(this._currentResult); // render again\n            }\n        }));\n    }\n    get widget() {\n        return this._widget;\n    }\n    /**\n     * Returns true if the hover shows now or will show.\n     */\n    maybeShowAt(mouseEvent) {\n        if (this._widget.isResizing) {\n            return true;\n        }\n        const anchorCandidates = [];\n        for (const participant of this._participants) {\n            if (participant.suggestHoverAnchor) {\n                const anchor = participant.suggestHoverAnchor(mouseEvent);\n                if (anchor) {\n                    anchorCandidates.push(anchor);\n                }\n            }\n        }\n        const target = mouseEvent.target;\n        if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            anchorCandidates.push(new HoverRangeAnchor(0, target.range, mouseEvent.event.posx, mouseEvent.event.posy));\n        }\n        if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            const epsilon = this._editor.getOption(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth / 2;\n            if (!target.detail.isAfterLines && typeof target.detail.horizontalDistanceToText === 'number' && target.detail.horizontalDistanceToText < epsilon) {\n                // Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough\n                anchorCandidates.push(new HoverRangeAnchor(0, target.range, mouseEvent.event.posx, mouseEvent.event.posy));\n            }\n        }\n        if (anchorCandidates.length === 0) {\n            return this._startShowingOrUpdateHover(null, 0 /* HoverStartMode.Delayed */, 0 /* HoverStartSource.Mouse */, false, mouseEvent);\n        }\n        anchorCandidates.sort((a, b) => b.priority - a.priority);\n        return this._startShowingOrUpdateHover(anchorCandidates[0], 0 /* HoverStartMode.Delayed */, 0 /* HoverStartSource.Mouse */, false, mouseEvent);\n    }\n    startShowingAtRange(range, mode, source, focus) {\n        this._startShowingOrUpdateHover(new HoverRangeAnchor(0, range, undefined, undefined), mode, source, focus, null);\n    }\n    /**\n     * Returns true if the hover shows now or will show.\n     */\n    _startShowingOrUpdateHover(anchor, mode, source, focus, mouseEvent) {\n        if (!this._widget.position || !this._currentResult) {\n            // The hover is not visible\n            if (anchor) {\n                this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n                return true;\n            }\n            return false;\n        }\n        // The hover is currently visible\n        const hoverIsSticky = this._editor.getOption(60 /* EditorOption.hover */).sticky;\n        const isGettingCloser = (hoverIsSticky && mouseEvent && this._widget.isMouseGettingCloser(mouseEvent.event.posx, mouseEvent.event.posy));\n        if (isGettingCloser) {\n            // The mouse is getting closer to the hover, so we will keep the hover untouched\n            // But we will kick off a hover update at the new anchor, insisting on keeping the hover visible.\n            if (anchor) {\n                this._startHoverOperationIfNecessary(anchor, mode, source, focus, true);\n            }\n            return true;\n        }\n        if (!anchor) {\n            this._setCurrentResult(null);\n            return false;\n        }\n        if (anchor && this._currentResult.anchor.equals(anchor)) {\n            // The widget is currently showing results for the exact same anchor, so no update is needed\n            return true;\n        }\n        if (!anchor.canAdoptVisibleHover(this._currentResult.anchor, this._widget.position)) {\n            // The new anchor is not compatible with the previous anchor\n            this._setCurrentResult(null);\n            this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n            return true;\n        }\n        // We aren't getting any closer to the hover, so we will filter existing results\n        // and keep those which also apply to the new anchor.\n        this._setCurrentResult(this._currentResult.filter(anchor));\n        this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n        return true;\n    }\n    _startHoverOperationIfNecessary(anchor, mode, source, focus, insistOnKeepingHoverVisible) {\n        if (this._computer.anchor && this._computer.anchor.equals(anchor)) {\n            // We have to start a hover operation at the exact same anchor as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        this._computer.anchor = anchor;\n        this._computer.shouldFocus = focus;\n        this._computer.source = source;\n        this._computer.insistOnKeepingHoverVisible = insistOnKeepingHoverVisible;\n        this._hoverOperation.start(mode);\n    }\n    _setCurrentResult(hoverResult) {\n        if (this._currentResult === hoverResult) {\n            // avoid updating the DOM to avoid resetting the user selection\n            return;\n        }\n        if (hoverResult && hoverResult.messages.length === 0) {\n            hoverResult = null;\n        }\n        this._currentResult = hoverResult;\n        if (this._currentResult) {\n            this._renderMessages(this._currentResult.anchor, this._currentResult.messages);\n        }\n        else {\n            this._widget.hide();\n        }\n    }\n    hide() {\n        this._computer.anchor = null;\n        this._hoverOperation.cancel();\n        this._setCurrentResult(null);\n    }\n    get isColorPickerVisible() {\n        return this._widget.isColorPickerVisible;\n    }\n    get isVisibleFromKeyboard() {\n        return this._widget.isVisibleFromKeyboard;\n    }\n    get isVisible() {\n        return this._widget.isVisible;\n    }\n    get isFocused() {\n        return this._widget.isFocused;\n    }\n    get isResizing() {\n        return this._widget.isResizing;\n    }\n    containsNode(node) {\n        return (node ? this._widget.getDomNode().contains(node) : false);\n    }\n    _addLoadingMessage(result) {\n        if (this._computer.anchor) {\n            for (const participant of this._participants) {\n                if (participant.createLoadingMessage) {\n                    const loadingMessage = participant.createLoadingMessage(this._computer.anchor);\n                    if (loadingMessage) {\n                        return result.slice(0).concat([loadingMessage]);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    _withResult(hoverResult) {\n        if (this._widget.position && this._currentResult && this._currentResult.isComplete) {\n            // The hover is visible with a previous complete result.\n            if (!hoverResult.isComplete) {\n                // Instead of rendering the new partial result, we wait for the result to be complete.\n                return;\n            }\n            if (this._computer.insistOnKeepingHoverVisible && hoverResult.messages.length === 0) {\n                // The hover would now hide normally, so we'll keep the previous messages\n                return;\n            }\n        }\n        this._setCurrentResult(hoverResult);\n    }\n    _renderMessages(anchor, messages) {\n        const { showAtPosition, showAtSecondaryPosition, highlightRange } = ContentHoverController_1.computeHoverRanges(this._editor, anchor.range, messages);\n        const disposables = new DisposableStore();\n        const statusBar = disposables.add(new EditorHoverStatusBar(this._keybindingService));\n        const fragment = document.createDocumentFragment();\n        let colorPicker = null;\n        const context = {\n            fragment,\n            statusBar,\n            setColorPicker: (widget) => colorPicker = widget,\n            onContentsChanged: () => this._widget.onContentsChanged(),\n            setMinimumDimensions: (dimensions) => this._widget.setMinimumDimensions(dimensions),\n            hide: () => this.hide()\n        };\n        for (const participant of this._participants) {\n            const hoverParts = messages.filter(msg => msg.owner === participant);\n            if (hoverParts.length > 0) {\n                disposables.add(participant.renderHoverParts(context, hoverParts));\n            }\n        }\n        const isBeforeContent = messages.some(m => m.isBeforeContent);\n        if (statusBar.hasContent) {\n            fragment.appendChild(statusBar.hoverElement);\n        }\n        if (fragment.hasChildNodes()) {\n            if (highlightRange) {\n                const highlightDecoration = this._editor.createDecorationsCollection();\n                highlightDecoration.set([{\n                        range: highlightRange,\n                        options: ContentHoverController_1._DECORATION_OPTIONS\n                    }]);\n                disposables.add(toDisposable(() => {\n                    highlightDecoration.clear();\n                }));\n            }\n            this._widget.showAt(fragment, new ContentHoverVisibleData(colorPicker, showAtPosition, showAtSecondaryPosition, this._editor.getOption(60 /* EditorOption.hover */).above, this._computer.shouldFocus, this._computer.source, isBeforeContent, anchor.initialMousePosX, anchor.initialMousePosY, disposables));\n        }\n        else {\n            disposables.dispose();\n        }\n    }\n    static computeHoverRanges(editor, anchorRange, messages) {\n        let startColumnBoundary = 1;\n        if (editor.hasModel()) {\n            // Ensure the range is on the current view line\n            const viewModel = editor._getViewModel();\n            const coordinatesConverter = viewModel.coordinatesConverter;\n            const anchorViewRange = coordinatesConverter.convertModelRangeToViewRange(anchorRange);\n            const anchorViewRangeStart = new Position(anchorViewRange.startLineNumber, viewModel.getLineMinColumn(anchorViewRange.startLineNumber));\n            startColumnBoundary = coordinatesConverter.convertViewPositionToModelPosition(anchorViewRangeStart).column;\n        }\n        // The anchor range is always on a single line\n        const anchorLineNumber = anchorRange.startLineNumber;\n        let renderStartColumn = anchorRange.startColumn;\n        let highlightRange = messages[0].range;\n        let forceShowAtRange = null;\n        for (const msg of messages) {\n            highlightRange = Range.plusRange(highlightRange, msg.range);\n            if (msg.range.startLineNumber === anchorLineNumber && msg.range.endLineNumber === anchorLineNumber) {\n                // this message has a range that is completely sitting on the line of the anchor\n                renderStartColumn = Math.max(Math.min(renderStartColumn, msg.range.startColumn), startColumnBoundary);\n            }\n            if (msg.forceShowAtRange) {\n                forceShowAtRange = msg.range;\n            }\n        }\n        return {\n            showAtPosition: forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorLineNumber, anchorRange.startColumn),\n            showAtSecondaryPosition: forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorLineNumber, renderStartColumn),\n            highlightRange\n        };\n    }\n    focus() {\n        this._widget.focus();\n    }\n    scrollUp() {\n        this._widget.scrollUp();\n    }\n    scrollDown() {\n        this._widget.scrollDown();\n    }\n    scrollLeft() {\n        this._widget.scrollLeft();\n    }\n    scrollRight() {\n        this._widget.scrollRight();\n    }\n    pageUp() {\n        this._widget.pageUp();\n    }\n    pageDown() {\n        this._widget.pageDown();\n    }\n    goToTop() {\n        this._widget.goToTop();\n    }\n    goToBottom() {\n        this._widget.goToBottom();\n    }\n};\nContentHoverController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n    description: 'content-hover-highlight',\n    className: 'hoverHighlight'\n});\nContentHoverController = ContentHoverController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IKeybindingService)\n], ContentHoverController);\nexport { ContentHoverController };\nclass HoverResult {\n    constructor(anchor, messages, isComplete) {\n        this.anchor = anchor;\n        this.messages = messages;\n        this.isComplete = isComplete;\n    }\n    filter(anchor) {\n        const filteredMessages = this.messages.filter((m) => m.isValidForHoverAnchor(anchor));\n        if (filteredMessages.length === this.messages.length) {\n            return this;\n        }\n        return new FilteredHoverResult(this, this.anchor, filteredMessages, this.isComplete);\n    }\n}\nclass FilteredHoverResult extends HoverResult {\n    constructor(original, anchor, messages, isComplete) {\n        super(anchor, messages, isComplete);\n        this.original = original;\n    }\n    filter(anchor) {\n        return this.original.filter(anchor);\n    }\n}\nclass ContentHoverVisibleData {\n    constructor(colorPicker, showAtPosition, showAtSecondaryPosition, preferAbove, stoleFocus, source, isBeforeContent, initialMousePosX, initialMousePosY, disposables) {\n        this.colorPicker = colorPicker;\n        this.showAtPosition = showAtPosition;\n        this.showAtSecondaryPosition = showAtSecondaryPosition;\n        this.preferAbove = preferAbove;\n        this.stoleFocus = stoleFocus;\n        this.source = source;\n        this.isBeforeContent = isBeforeContent;\n        this.initialMousePosX = initialMousePosX;\n        this.initialMousePosY = initialMousePosY;\n        this.disposables = disposables;\n        this.closestMouseDistance = undefined;\n    }\n}\nconst HORIZONTAL_SCROLLING_BY = 30;\nconst SCROLLBAR_WIDTH = 10;\nconst CONTAINER_HEIGHT_PADDING = 6;\nlet ContentHoverWidget = ContentHoverWidget_1 = class ContentHoverWidget extends ResizableContentWidget {\n    get isColorPickerVisible() {\n        var _a;\n        return Boolean((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.colorPicker);\n    }\n    get isVisibleFromKeyboard() {\n        var _a;\n        return (((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.source) === 1 /* HoverStartSource.Keyboard */);\n    }\n    get isVisible() {\n        var _a;\n        return (_a = this._hoverVisibleKey.get()) !== null && _a !== void 0 ? _a : false;\n    }\n    get isFocused() {\n        var _a;\n        return (_a = this._hoverFocusedKey.get()) !== null && _a !== void 0 ? _a : false;\n    }\n    constructor(editor, contextKeyService, _configurationService, _accessibilityService, _keybindingService) {\n        const minimumHeight = editor.getOption(66 /* EditorOption.lineHeight */) + 8;\n        const minimumWidth = 150;\n        const minimumSize = new dom.Dimension(minimumWidth, minimumHeight);\n        super(editor, minimumSize);\n        this._configurationService = _configurationService;\n        this._accessibilityService = _accessibilityService;\n        this._keybindingService = _keybindingService;\n        this._hover = this._register(new HoverWidget());\n        this._minimumSize = minimumSize;\n        this._hoverVisibleKey = EditorContextKeys.hoverVisible.bindTo(contextKeyService);\n        this._hoverFocusedKey = EditorContextKeys.hoverFocused.bindTo(contextKeyService);\n        dom.append(this._resizableNode.domNode, this._hover.containerDomNode);\n        this._resizableNode.domNode.style.zIndex = '50';\n        this._register(this._editor.onDidLayoutChange(() => this._layout()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(50 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        const focusTracker = this._register(dom.trackFocus(this._resizableNode.domNode));\n        this._register(focusTracker.onDidFocus(() => {\n            this._hoverFocusedKey.set(true);\n        }));\n        this._register(focusTracker.onDidBlur(() => {\n            this._hoverFocusedKey.set(false);\n        }));\n        this._setHoverData(undefined);\n        this._layout();\n        this._editor.addContentWidget(this);\n    }\n    dispose() {\n        var _a;\n        super.dispose();\n        (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.disposables.dispose();\n        this._editor.removeContentWidget(this);\n    }\n    getId() {\n        return ContentHoverWidget_1.ID;\n    }\n    static _applyDimensions(container, width, height) {\n        const transformedWidth = typeof width === 'number' ? `${width}px` : width;\n        const transformedHeight = typeof height === 'number' ? `${height}px` : height;\n        container.style.width = transformedWidth;\n        container.style.height = transformedHeight;\n    }\n    _setContentsDomNodeDimensions(width, height) {\n        const contentsDomNode = this._hover.contentsDomNode;\n        return ContentHoverWidget_1._applyDimensions(contentsDomNode, width, height);\n    }\n    _setContainerDomNodeDimensions(width, height) {\n        const containerDomNode = this._hover.containerDomNode;\n        return ContentHoverWidget_1._applyDimensions(containerDomNode, width, height);\n    }\n    _setHoverWidgetDimensions(width, height) {\n        this._setContentsDomNodeDimensions(width, height);\n        this._setContainerDomNodeDimensions(width, height);\n        this._layoutContentWidget();\n    }\n    static _applyMaxDimensions(container, width, height) {\n        const transformedWidth = typeof width === 'number' ? `${width}px` : width;\n        const transformedHeight = typeof height === 'number' ? `${height}px` : height;\n        container.style.maxWidth = transformedWidth;\n        container.style.maxHeight = transformedHeight;\n    }\n    _setHoverWidgetMaxDimensions(width, height) {\n        ContentHoverWidget_1._applyMaxDimensions(this._hover.contentsDomNode, width, height);\n        ContentHoverWidget_1._applyMaxDimensions(this._hover.containerDomNode, width, height);\n        this._hover.containerDomNode.style.setProperty('--vscode-hover-maxWidth', typeof width === 'number' ? `${width}px` : width);\n        this._layoutContentWidget();\n    }\n    _hasHorizontalScrollbar() {\n        const scrollDimensions = this._hover.scrollbar.getScrollDimensions();\n        const hasHorizontalScrollbar = scrollDimensions.scrollWidth > scrollDimensions.width;\n        return hasHorizontalScrollbar;\n    }\n    _adjustContentsBottomPadding() {\n        const contentsDomNode = this._hover.contentsDomNode;\n        const extraBottomPadding = `${this._hover.scrollbar.options.horizontalScrollbarSize}px`;\n        if (contentsDomNode.style.paddingBottom !== extraBottomPadding) {\n            contentsDomNode.style.paddingBottom = extraBottomPadding;\n        }\n    }\n    _setAdjustedHoverWidgetDimensions(size) {\n        this._setHoverWidgetMaxDimensions('none', 'none');\n        const width = size.width;\n        const height = size.height;\n        this._setHoverWidgetDimensions(width, height);\n        // measure if widget has horizontal scrollbar after setting the dimensions\n        if (this._hasHorizontalScrollbar()) {\n            this._adjustContentsBottomPadding();\n            this._setContentsDomNodeDimensions(width, height - SCROLLBAR_WIDTH);\n        }\n    }\n    _updateResizableNodeMaxDimensions() {\n        var _a, _b;\n        const maxRenderingWidth = (_a = this._findMaximumRenderingWidth()) !== null && _a !== void 0 ? _a : Infinity;\n        const maxRenderingHeight = (_b = this._findMaximumRenderingHeight()) !== null && _b !== void 0 ? _b : Infinity;\n        this._resizableNode.maxSize = new dom.Dimension(maxRenderingWidth, maxRenderingHeight);\n        this._setHoverWidgetMaxDimensions(maxRenderingWidth, maxRenderingHeight);\n    }\n    _resize(size) {\n        var _a, _b;\n        ContentHoverWidget_1._lastDimensions = new dom.Dimension(size.width, size.height);\n        this._setAdjustedHoverWidgetDimensions(size);\n        this._resizableNode.layout(size.height, size.width);\n        this._updateResizableNodeMaxDimensions();\n        this._hover.scrollbar.scanDomNode();\n        this._editor.layoutContentWidget(this);\n        (_b = (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.colorPicker) === null || _b === void 0 ? void 0 : _b.layout();\n    }\n    _findAvailableSpaceVertically() {\n        var _a;\n        const position = (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.showAtPosition;\n        if (!position) {\n            return;\n        }\n        return this._positionPreference === 1 /* ContentWidgetPositionPreference.ABOVE */ ? this._availableVerticalSpaceAbove(position) : this._availableVerticalSpaceBelow(position);\n    }\n    _findMaximumRenderingHeight() {\n        const availableSpace = this._findAvailableSpaceVertically();\n        if (!availableSpace) {\n            return;\n        }\n        // Padding needed in order to stop the resizing down to a smaller height\n        let maximumHeight = CONTAINER_HEIGHT_PADDING;\n        Array.from(this._hover.contentsDomNode.children).forEach((hoverPart) => {\n            maximumHeight += hoverPart.clientHeight;\n        });\n        if (this._hasHorizontalScrollbar()) {\n            maximumHeight += SCROLLBAR_WIDTH;\n        }\n        return Math.min(availableSpace, maximumHeight);\n    }\n    _isHoverTextOverflowing() {\n        // To find out if the text is overflowing, we will disable wrapping, check the widths, and then re-enable wrapping\n        this._hover.containerDomNode.style.setProperty('--vscode-hover-whiteSpace', 'nowrap');\n        this._hover.containerDomNode.style.setProperty('--vscode-hover-sourceWhiteSpace', 'nowrap');\n        const overflowing = Array.from(this._hover.contentsDomNode.children).some((hoverElement) => {\n            return hoverElement.scrollWidth > hoverElement.clientWidth;\n        });\n        this._hover.containerDomNode.style.removeProperty('--vscode-hover-whiteSpace');\n        this._hover.containerDomNode.style.removeProperty('--vscode-hover-sourceWhiteSpace');\n        return overflowing;\n    }\n    _findMaximumRenderingWidth() {\n        if (!this._editor || !this._editor.hasModel()) {\n            return;\n        }\n        const overflowing = this._isHoverTextOverflowing();\n        const initialWidth = (typeof this._contentWidth === 'undefined'\n            ? 0\n            : this._contentWidth - 2 // - 2 for the borders\n        );\n        if (overflowing || this._hover.containerDomNode.clientWidth < initialWidth) {\n            const bodyBoxWidth = dom.getClientArea(this._hover.containerDomNode.ownerDocument.body).width;\n            const horizontalPadding = 14;\n            return bodyBoxWidth - horizontalPadding;\n        }\n        else {\n            return this._hover.containerDomNode.clientWidth + 2;\n        }\n    }\n    isMouseGettingCloser(posx, posy) {\n        if (!this._visibleData) {\n            return false;\n        }\n        if (typeof this._visibleData.initialMousePosX === 'undefined' || typeof this._visibleData.initialMousePosY === 'undefined') {\n            this._visibleData.initialMousePosX = posx;\n            this._visibleData.initialMousePosY = posy;\n            return false;\n        }\n        const widgetRect = dom.getDomNodePagePosition(this.getDomNode());\n        if (typeof this._visibleData.closestMouseDistance === 'undefined') {\n            this._visibleData.closestMouseDistance = computeDistanceFromPointToRectangle(this._visibleData.initialMousePosX, this._visibleData.initialMousePosY, widgetRect.left, widgetRect.top, widgetRect.width, widgetRect.height);\n        }\n        const distance = computeDistanceFromPointToRectangle(posx, posy, widgetRect.left, widgetRect.top, widgetRect.width, widgetRect.height);\n        if (distance > this._visibleData.closestMouseDistance + 4 /* tolerance of 4 pixels */) {\n            // The mouse is getting farther away\n            return false;\n        }\n        this._visibleData.closestMouseDistance = Math.min(this._visibleData.closestMouseDistance, distance);\n        return true;\n    }\n    _setHoverData(hoverData) {\n        var _a;\n        (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.disposables.dispose();\n        this._visibleData = hoverData;\n        this._hoverVisibleKey.set(!!hoverData);\n        this._hover.containerDomNode.classList.toggle('hidden', !hoverData);\n    }\n    _layout() {\n        const { fontSize, lineHeight } = this._editor.getOption(50 /* EditorOption.fontInfo */);\n        const contentsDomNode = this._hover.contentsDomNode;\n        contentsDomNode.style.fontSize = `${fontSize}px`;\n        contentsDomNode.style.lineHeight = `${lineHeight / fontSize}`;\n        this._updateMaxDimensions();\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    _updateContent(node) {\n        const contentsDomNode = this._hover.contentsDomNode;\n        contentsDomNode.style.paddingBottom = '';\n        contentsDomNode.textContent = '';\n        contentsDomNode.appendChild(node);\n    }\n    _layoutContentWidget() {\n        this._editor.layoutContentWidget(this);\n        this._hover.onContentsChanged();\n    }\n    _updateMaxDimensions() {\n        const height = Math.max(this._editor.getLayoutInfo().height / 4, 250, ContentHoverWidget_1._lastDimensions.height);\n        const width = Math.max(this._editor.getLayoutInfo().width * 0.66, 500, ContentHoverWidget_1._lastDimensions.width);\n        this._setHoverWidgetMaxDimensions(width, height);\n    }\n    _render(node, hoverData) {\n        this._setHoverData(hoverData);\n        this._updateFont();\n        this._updateContent(node);\n        this._updateMaxDimensions();\n        this.onContentsChanged();\n        // Simply force a synchronous render on the editor\n        // such that the widget does not really render with left = '0px'\n        this._editor.render();\n    }\n    getPosition() {\n        var _a;\n        if (!this._visibleData) {\n            return null;\n        }\n        return {\n            position: this._visibleData.showAtPosition,\n            secondaryPosition: this._visibleData.showAtSecondaryPosition,\n            positionAffinity: this._visibleData.isBeforeContent ? 3 /* PositionAffinity.LeftOfInjectedText */ : undefined,\n            preference: [(_a = this._positionPreference) !== null && _a !== void 0 ? _a : 1 /* ContentWidgetPositionPreference.ABOVE */]\n        };\n    }\n    showAt(node, hoverData) {\n        var _a, _b, _c, _d;\n        if (!this._editor || !this._editor.hasModel()) {\n            return;\n        }\n        this._render(node, hoverData);\n        const widgetHeight = dom.getTotalHeight(this._hover.containerDomNode);\n        const widgetPosition = hoverData.showAtPosition;\n        this._positionPreference = (_a = this._findPositionPreference(widgetHeight, widgetPosition)) !== null && _a !== void 0 ? _a : 1 /* ContentWidgetPositionPreference.ABOVE */;\n        // See https://github.com/microsoft/vscode/issues/140339\n        // TODO: Doing a second layout of the hover after force rendering the editor\n        this.onContentsChanged();\n        if (hoverData.stoleFocus) {\n            this._hover.containerDomNode.focus();\n        }\n        (_b = hoverData.colorPicker) === null || _b === void 0 ? void 0 : _b.layout();\n        // The aria label overrides the label, so if we add to it, add the contents of the hover\n        const accessibleViewHint = getHoverAccessibleViewHint(this._configurationService.getValue('accessibility.verbosity.hover') === true && this._accessibilityService.isScreenReaderOptimized(), (_d = (_c = this._keybindingService.lookupKeybinding('editor.action.accessibleView')) === null || _c === void 0 ? void 0 : _c.getAriaLabel()) !== null && _d !== void 0 ? _d : '');\n        if (accessibleViewHint) {\n            this._hover.contentsDomNode.ariaLabel = this._hover.contentsDomNode.textContent + ', ' + accessibleViewHint;\n        }\n    }\n    hide() {\n        if (!this._visibleData) {\n            return;\n        }\n        const stoleFocus = this._visibleData.stoleFocus || this._hoverFocusedKey.get();\n        this._setHoverData(undefined);\n        this._resizableNode.maxSize = new dom.Dimension(Infinity, Infinity);\n        this._resizableNode.clearSashHoverState();\n        this._hoverFocusedKey.set(false);\n        this._editor.layoutContentWidget(this);\n        if (stoleFocus) {\n            this._editor.focus();\n        }\n    }\n    _removeConstraintsRenderNormally() {\n        // Added because otherwise the initial size of the hover content is smaller than should be\n        const layoutInfo = this._editor.getLayoutInfo();\n        this._resizableNode.layout(layoutInfo.height, layoutInfo.width);\n        this._setHoverWidgetDimensions('auto', 'auto');\n    }\n    _adjustHoverHeightForScrollbar(height) {\n        var _a;\n        const containerDomNode = this._hover.containerDomNode;\n        const contentsDomNode = this._hover.contentsDomNode;\n        const maxRenderingHeight = (_a = this._findMaximumRenderingHeight()) !== null && _a !== void 0 ? _a : Infinity;\n        this._setContainerDomNodeDimensions(dom.getTotalWidth(containerDomNode), Math.min(maxRenderingHeight, height));\n        this._setContentsDomNodeDimensions(dom.getTotalWidth(contentsDomNode), Math.min(maxRenderingHeight, height - SCROLLBAR_WIDTH));\n    }\n    setMinimumDimensions(dimensions) {\n        // We combine the new minimum dimensions with the previous ones\n        this._minimumSize = new dom.Dimension(Math.max(this._minimumSize.width, dimensions.width), Math.max(this._minimumSize.height, dimensions.height));\n        this._updateMinimumWidth();\n    }\n    _updateMinimumWidth() {\n        const width = (typeof this._contentWidth === 'undefined'\n            ? this._minimumSize.width\n            : Math.min(this._contentWidth, this._minimumSize.width));\n        // We want to avoid that the hover is artificially large, so we use the content width as minimum width\n        this._resizableNode.minSize = new dom.Dimension(width, this._minimumSize.height);\n    }\n    onContentsChanged() {\n        var _a;\n        this._removeConstraintsRenderNormally();\n        const containerDomNode = this._hover.containerDomNode;\n        let height = dom.getTotalHeight(containerDomNode);\n        let width = dom.getTotalWidth(containerDomNode);\n        this._resizableNode.layout(height, width);\n        this._setHoverWidgetDimensions(width, height);\n        height = dom.getTotalHeight(containerDomNode);\n        width = dom.getTotalWidth(containerDomNode);\n        this._contentWidth = width;\n        this._updateMinimumWidth();\n        this._resizableNode.layout(height, width);\n        if (this._hasHorizontalScrollbar()) {\n            this._adjustContentsBottomPadding();\n            this._adjustHoverHeightForScrollbar(height);\n        }\n        if ((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.showAtPosition) {\n            const widgetHeight = dom.getTotalHeight(this._hover.containerDomNode);\n            this._positionPreference = this._findPositionPreference(widgetHeight, this._visibleData.showAtPosition);\n        }\n        this._layoutContentWidget();\n    }\n    focus() {\n        this._hover.containerDomNode.focus();\n    }\n    scrollUp() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const fontInfo = this._editor.getOption(50 /* EditorOption.fontInfo */);\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop - fontInfo.lineHeight });\n    }\n    scrollDown() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const fontInfo = this._editor.getOption(50 /* EditorOption.fontInfo */);\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop + fontInfo.lineHeight });\n    }\n    scrollLeft() {\n        const scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n        this._hover.scrollbar.setScrollPosition({ scrollLeft: scrollLeft - HORIZONTAL_SCROLLING_BY });\n    }\n    scrollRight() {\n        const scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n        this._hover.scrollbar.setScrollPosition({ scrollLeft: scrollLeft + HORIZONTAL_SCROLLING_BY });\n    }\n    pageUp() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop - scrollHeight });\n    }\n    pageDown() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop + scrollHeight });\n    }\n    goToTop() {\n        this._hover.scrollbar.setScrollPosition({ scrollTop: 0 });\n    }\n    goToBottom() {\n        this._hover.scrollbar.setScrollPosition({ scrollTop: this._hover.scrollbar.getScrollDimensions().scrollHeight });\n    }\n};\nContentHoverWidget.ID = 'editor.contrib.resizableContentHoverWidget';\nContentHoverWidget._lastDimensions = new dom.Dimension(0, 0);\nContentHoverWidget = ContentHoverWidget_1 = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, IConfigurationService),\n    __param(3, IAccessibilityService),\n    __param(4, IKeybindingService)\n], ContentHoverWidget);\nexport { ContentHoverWidget };\nlet EditorHoverStatusBar = class EditorHoverStatusBar extends Disposable {\n    get hasContent() {\n        return this._hasContent;\n    }\n    constructor(_keybindingService) {\n        super();\n        this._keybindingService = _keybindingService;\n        this._hasContent = false;\n        this.hoverElement = $('div.hover-row.status-bar');\n        this.actionsElement = dom.append(this.hoverElement, $('div.actions'));\n    }\n    addAction(actionOptions) {\n        const keybinding = this._keybindingService.lookupKeybinding(actionOptions.commandId);\n        const keybindingLabel = keybinding ? keybinding.getLabel() : null;\n        this._hasContent = true;\n        return this._register(HoverAction.render(this.actionsElement, actionOptions, keybindingLabel));\n    }\n    append(element) {\n        const result = dom.append(this.actionsElement, element);\n        this._hasContent = true;\n        return result;\n    }\n};\nEditorHoverStatusBar = __decorate([\n    __param(0, IKeybindingService)\n], EditorHoverStatusBar);\nexport { EditorHoverStatusBar };\nclass ContentHoverComputer {\n    get anchor() { return this._anchor; }\n    set anchor(value) { this._anchor = value; }\n    get shouldFocus() { return this._shouldFocus; }\n    set shouldFocus(value) { this._shouldFocus = value; }\n    get source() { return this._source; }\n    set source(value) { this._source = value; }\n    get insistOnKeepingHoverVisible() { return this._insistOnKeepingHoverVisible; }\n    set insistOnKeepingHoverVisible(value) { this._insistOnKeepingHoverVisible = value; }\n    constructor(_editor, _participants) {\n        this._editor = _editor;\n        this._participants = _participants;\n        this._anchor = null;\n        this._shouldFocus = false;\n        this._source = 0 /* HoverStartSource.Mouse */;\n        this._insistOnKeepingHoverVisible = false;\n    }\n    static _getLineDecorations(editor, anchor) {\n        if (anchor.type !== 1 /* HoverAnchorType.Range */ && !anchor.supportsMarkerHover) {\n            return [];\n        }\n        const model = editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        if (lineNumber > model.getLineCount()) {\n            // invalid line\n            return [];\n        }\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        return editor.getLineDecorations(lineNumber).filter((d) => {\n            if (d.options.isWholeLine) {\n                return true;\n            }\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            if (d.options.showIfCollapsed) {\n                // Relax check around `showIfCollapsed` decorations to also include +/- 1 character\n                if (startColumn > anchor.range.startColumn + 1 || anchor.range.endColumn - 1 > endColumn) {\n                    return false;\n                }\n            }\n            else {\n                if (startColumn > anchor.range.startColumn || anchor.range.endColumn > endColumn) {\n                    return false;\n                }\n            }\n            return true;\n        });\n    }\n    computeAsync(token) {\n        const anchor = this._anchor;\n        if (!this._editor.hasModel() || !anchor) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, anchor);\n        return AsyncIterableObject.merge(this._participants.map((participant) => {\n            if (!participant.computeAsync) {\n                return AsyncIterableObject.EMPTY;\n            }\n            return participant.computeAsync(anchor, lineDecorations, token);\n        }));\n    }\n    computeSync() {\n        if (!this._editor.hasModel() || !this._anchor) {\n            return [];\n        }\n        const lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, this._anchor);\n        let result = [];\n        for (const participant of this._participants) {\n            result = result.concat(participant.computeSync(this._anchor, lineDecorations));\n        }\n        return coalesce(result);\n    }\n}\nfunction computeDistanceFromPointToRectangle(pointX, pointY, left, top, width, height) {\n    const x = (left + width / 2); // x center of rectangle\n    const y = (top + height / 2); // y center of rectangle\n    const dx = Math.max(Math.abs(pointX - x) - width / 2, 0);\n    const dy = Math.max(Math.abs(pointY - y) - height / 2, 0);\n    return Math.sqrt(dx * dx + dy * dy);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ResizableHTMLElement } from '../../../../base/browser/ui/resizable/resizable.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport * as dom from '../../../../base/browser/dom.js';\nconst TOP_HEIGHT = 30;\nconst BOTTOM_HEIGHT = 24;\nexport class ResizableContentWidget extends Disposable {\n    constructor(_editor, minimumSize = new dom.Dimension(10, 10)) {\n        super();\n        this._editor = _editor;\n        this.allowEditorOverflow = true;\n        this.suppressMouseDown = false;\n        this._resizableNode = this._register(new ResizableHTMLElement());\n        this._contentPosition = null;\n        this._isResizing = false;\n        this._resizableNode.domNode.style.position = 'absolute';\n        this._resizableNode.minSize = dom.Dimension.lift(minimumSize);\n        this._resizableNode.layout(minimumSize.height, minimumSize.width);\n        this._resizableNode.enableSashes(true, true, true, true);\n        this._register(this._resizableNode.onDidResize(e => {\n            this._resize(new dom.Dimension(e.dimension.width, e.dimension.height));\n            if (e.done) {\n                this._isResizing = false;\n            }\n        }));\n        this._register(this._resizableNode.onDidWillResize(() => {\n            this._isResizing = true;\n        }));\n    }\n    get isResizing() {\n        return this._isResizing;\n    }\n    getDomNode() {\n        return this._resizableNode.domNode;\n    }\n    getPosition() {\n        return this._contentPosition;\n    }\n    get position() {\n        var _a;\n        return ((_a = this._contentPosition) === null || _a === void 0 ? void 0 : _a.position) ? Position.lift(this._contentPosition.position) : undefined;\n    }\n    _availableVerticalSpaceAbove(position) {\n        const editorDomNode = this._editor.getDomNode();\n        const mouseBox = this._editor.getScrolledVisiblePosition(position);\n        if (!editorDomNode || !mouseBox) {\n            return;\n        }\n        const editorBox = dom.getDomNodePagePosition(editorDomNode);\n        return editorBox.top + mouseBox.top - TOP_HEIGHT;\n    }\n    _availableVerticalSpaceBelow(position) {\n        const editorDomNode = this._editor.getDomNode();\n        const mouseBox = this._editor.getScrolledVisiblePosition(position);\n        if (!editorDomNode || !mouseBox) {\n            return;\n        }\n        const editorBox = dom.getDomNodePagePosition(editorDomNode);\n        const bodyBox = dom.getClientArea(editorDomNode.ownerDocument.body);\n        const mouseBottom = editorBox.top + mouseBox.top + mouseBox.height;\n        return bodyBox.height - mouseBottom - BOTTOM_HEIGHT;\n    }\n    _findPositionPreference(widgetHeight, showAtPosition) {\n        var _a, _b;\n        const maxHeightBelow = Math.min((_a = this._availableVerticalSpaceBelow(showAtPosition)) !== null && _a !== void 0 ? _a : Infinity, widgetHeight);\n        const maxHeightAbove = Math.min((_b = this._availableVerticalSpaceAbove(showAtPosition)) !== null && _b !== void 0 ? _b : Infinity, widgetHeight);\n        const maxHeight = Math.min(Math.max(maxHeightAbove, maxHeightBelow), widgetHeight);\n        const height = Math.min(widgetHeight, maxHeight);\n        let renderingAbove;\n        if (this._editor.getOption(60 /* EditorOption.hover */).above) {\n            renderingAbove = height <= maxHeightAbove ? 1 /* ContentWidgetPositionPreference.ABOVE */ : 2 /* ContentWidgetPositionPreference.BELOW */;\n        }\n        else {\n            renderingAbove = height <= maxHeightBelow ? 2 /* ContentWidgetPositionPreference.BELOW */ : 1 /* ContentWidgetPositionPreference.ABOVE */;\n        }\n        if (renderingAbove === 1 /* ContentWidgetPositionPreference.ABOVE */) {\n            this._resizableNode.enableSashes(true, true, false, false);\n        }\n        else {\n            this._resizableNode.enableSashes(false, true, true, false);\n        }\n        return renderingAbove;\n    }\n    _resize(dimension) {\n        this._resizableNode.layout(dimension.height, dimension.width);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class HoverProviderResult {\n    constructor(provider, hover, ordinal) {\n        this.provider = provider;\n        this.hover = hover;\n        this.ordinal = ordinal;\n    }\n}\nfunction executeProvider(provider, ordinal, model, position, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const result = yield Promise.resolve(provider.provideHover(model, position, token));\n            if (result && isValid(result)) {\n                return new HoverProviderResult(provider, result, ordinal);\n            }\n        }\n        catch (err) {\n            onUnexpectedExternalError(err);\n        }\n        return undefined;\n    });\n}\nexport function getHover(registry, model, position, token) {\n    const providers = registry.ordered(model);\n    const promises = providers.map((provider, index) => executeProvider(provider, index, model, position, token));\n    return AsyncIterableObject.fromPromises(promises).coalesce();\n}\nexport function getHoverPromise(registry, model, position, token) {\n    return getHover(registry, model, position, token).map(item => item.hover).toPromise();\n}\nregisterModelAndPositionCommand('_executeHoverProvider', (accessor, model, position) => {\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    return getHoverPromise(languageFeaturesService.hoverProvider, model, position, CancellationToken.None);\n});\nfunction isValid(result) {\n    const hasRange = (typeof result.range !== 'undefined');\n    const hasHtmlContent = typeof result.contents !== 'undefined' && result.contents && result.contents.length > 0;\n    return hasRange && hasHtmlContent;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { isEmptyMarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nconst $ = dom.$;\nexport class MarginHoverWidget extends Disposable {\n    constructor(editor, languageService, openerService) {\n        super();\n        this._renderDisposeables = this._register(new DisposableStore());\n        this._editor = editor;\n        this._isVisible = false;\n        this._messages = [];\n        this._hover = this._register(new HoverWidget());\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        this._markdownRenderer = this._register(new MarkdownRenderer({ editor: this._editor }, languageService, openerService));\n        this._computer = new MarginHoverComputer(this._editor);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            this._withResult(result.value);\n        }));\n        this._register(this._editor.onDidChangeModelDecorations(() => this._onModelDecorationsChanged()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(50 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._editor.addOverlayWidget(this);\n    }\n    dispose() {\n        this._editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n    getId() {\n        return MarginHoverWidget.ID;\n    }\n    getDomNode() {\n        return this._hover.containerDomNode;\n    }\n    getPosition() {\n        return null;\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    _onModelDecorationsChanged() {\n        if (this._isVisible) {\n            // The decorations have changed and the hover is visible,\n            // we need to recompute the displayed text\n            this._hoverOperation.cancel();\n            this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n        }\n    }\n    startShowingAt(lineNumber) {\n        if (this._computer.lineNumber === lineNumber) {\n            // We have to show the widget at the exact same line number as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        this.hide();\n        this._computer.lineNumber = lineNumber;\n        this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n    }\n    hide() {\n        this._computer.lineNumber = -1;\n        this._hoverOperation.cancel();\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n    }\n    _withResult(result) {\n        this._messages = result;\n        if (this._messages.length > 0) {\n            this._renderMessages(this._computer.lineNumber, this._messages);\n        }\n        else {\n            this.hide();\n        }\n    }\n    _renderMessages(lineNumber, messages) {\n        this._renderDisposeables.clear();\n        const fragment = document.createDocumentFragment();\n        for (const msg of messages) {\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderedContents = this._renderDisposeables.add(this._markdownRenderer.render(msg.value));\n            hoverContentsElement.appendChild(renderedContents.element);\n            fragment.appendChild(markdownHoverElement);\n        }\n        this._updateContents(fragment);\n        this._showAt(lineNumber);\n    }\n    _updateContents(node) {\n        this._hover.contentsDomNode.textContent = '';\n        this._hover.contentsDomNode.appendChild(node);\n        this._updateFont();\n    }\n    _showAt(lineNumber) {\n        if (!this._isVisible) {\n            this._isVisible = true;\n            this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        }\n        const editorLayout = this._editor.getLayoutInfo();\n        const topForLineNumber = this._editor.getTopForLineNumber(lineNumber);\n        const editorScrollTop = this._editor.getScrollTop();\n        const lineHeight = this._editor.getOption(66 /* EditorOption.lineHeight */);\n        const nodeHeight = this._hover.containerDomNode.clientHeight;\n        const top = topForLineNumber - editorScrollTop - ((nodeHeight - lineHeight) / 2);\n        this._hover.containerDomNode.style.left = `${editorLayout.glyphMarginLeft + editorLayout.glyphMarginWidth}px`;\n        this._hover.containerDomNode.style.top = `${Math.max(Math.round(top), 0)}px`;\n    }\n}\nMarginHoverWidget.ID = 'editor.contrib.modesGlyphHoverWidget';\nclass MarginHoverComputer {\n    get lineNumber() {\n        return this._lineNumber;\n    }\n    set lineNumber(value) {\n        this._lineNumber = value;\n    }\n    constructor(_editor) {\n        this._editor = _editor;\n        this._lineNumber = -1;\n    }\n    computeSync() {\n        const toHoverMessage = (contents) => {\n            return {\n                value: contents\n            };\n        };\n        const lineDecorations = this._editor.getLineDecorations(this._lineNumber);\n        const result = [];\n        if (!lineDecorations) {\n            return result;\n        }\n        for (const d of lineDecorations) {\n            if (!d.options.glyphMarginClassName) {\n                continue;\n            }\n            const hoverMessage = d.options.glyphMarginHoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            result.push(...asArray(hoverMessage).map(toHoverMessage));\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, disposableTimeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { basename } from '../../../../base/common/resources.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { IMarkerDecorationsService } from '../../../common/services/markerDecorations.js';\nimport { getCodeActions, quickFixCommandId } from '../../codeAction/browser/codeAction.js';\nimport { CodeActionController } from '../../codeAction/browser/codeActionController.js';\nimport { CodeActionKind, CodeActionTriggerSource } from '../../codeAction/common/types.js';\nimport { MarkerController, NextMarkerAction } from '../../gotoError/browser/gotoError.js';\nimport * as nls from '../../../../nls.js';\nimport { IMarkerData, MarkerSeverity } from '../../../../platform/markers/common/markers.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nconst $ = dom.$;\nexport class MarkerHover {\n    constructor(owner, range, marker) {\n        this.owner = owner;\n        this.range = range;\n        this.marker = marker;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nconst markerCodeActionTrigger = {\n    type: 1 /* CodeActionTriggerType.Invoke */,\n    filter: { include: CodeActionKind.QuickFix },\n    triggerAction: CodeActionTriggerSource.QuickFixHover\n};\nlet MarkerHoverParticipant = class MarkerHoverParticipant {\n    constructor(_editor, _markerDecorationsService, _openerService, _languageFeaturesService) {\n        this._editor = _editor;\n        this._markerDecorationsService = _markerDecorationsService;\n        this._openerService = _openerService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this.hoverOrdinal = 1;\n        this.recentMarkerCodeActionsInfo = undefined;\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */ && !anchor.supportsMarkerHover) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const marker = this._markerDecorationsService.getMarker(model.uri, d);\n            if (!marker) {\n                continue;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkerHover(this, range, marker));\n        }\n        return result;\n    }\n    renderHoverParts(context, hoverParts) {\n        if (!hoverParts.length) {\n            return Disposable.None;\n        }\n        const disposables = new DisposableStore();\n        hoverParts.forEach(msg => context.fragment.appendChild(this.renderMarkerHover(msg, disposables)));\n        const markerHoverForStatusbar = hoverParts.length === 1 ? hoverParts[0] : hoverParts.sort((a, b) => MarkerSeverity.compare(a.marker.severity, b.marker.severity))[0];\n        this.renderMarkerStatusbar(context, markerHoverForStatusbar, disposables);\n        return disposables;\n    }\n    renderMarkerHover(markerHover, disposables) {\n        const hoverElement = $('div.hover-row');\n        const markerElement = dom.append(hoverElement, $('div.marker.hover-contents'));\n        const { source, message, code, relatedInformation } = markerHover.marker;\n        this._editor.applyFontInfo(markerElement);\n        const messageElement = dom.append(markerElement, $('span'));\n        messageElement.style.whiteSpace = 'pre-wrap';\n        messageElement.innerText = message;\n        if (source || code) {\n            // Code has link\n            if (code && typeof code !== 'string') {\n                const sourceAndCodeElement = $('span');\n                if (source) {\n                    const sourceElement = dom.append(sourceAndCodeElement, $('span'));\n                    sourceElement.innerText = source;\n                }\n                const codeLink = dom.append(sourceAndCodeElement, $('a.code-link'));\n                codeLink.setAttribute('href', code.target.toString());\n                disposables.add(dom.addDisposableListener(codeLink, 'click', (e) => {\n                    this._openerService.open(code.target, { allowCommands: true });\n                    e.preventDefault();\n                    e.stopPropagation();\n                }));\n                const codeElement = dom.append(codeLink, $('span'));\n                codeElement.innerText = code.value;\n                const detailsElement = dom.append(markerElement, sourceAndCodeElement);\n                detailsElement.style.opacity = '0.6';\n                detailsElement.style.paddingLeft = '6px';\n            }\n            else {\n                const detailsElement = dom.append(markerElement, $('span'));\n                detailsElement.style.opacity = '0.6';\n                detailsElement.style.paddingLeft = '6px';\n                detailsElement.innerText = source && code ? `${source}(${code})` : source ? source : `(${code})`;\n            }\n        }\n        if (isNonEmptyArray(relatedInformation)) {\n            for (const { message, resource, startLineNumber, startColumn } of relatedInformation) {\n                const relatedInfoContainer = dom.append(markerElement, $('div'));\n                relatedInfoContainer.style.marginTop = '8px';\n                const a = dom.append(relatedInfoContainer, $('a'));\n                a.innerText = `${basename(resource)}(${startLineNumber}, ${startColumn}): `;\n                a.style.cursor = 'pointer';\n                disposables.add(dom.addDisposableListener(a, 'click', (e) => {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    if (this._openerService) {\n                        this._openerService.open(resource, {\n                            fromUserGesture: true,\n                            editorOptions: { selection: { startLineNumber, startColumn } }\n                        }).catch(onUnexpectedError);\n                    }\n                }));\n                const messageElement = dom.append(relatedInfoContainer, $('span'));\n                messageElement.innerText = message;\n                this._editor.applyFontInfo(messageElement);\n            }\n        }\n        return hoverElement;\n    }\n    renderMarkerStatusbar(context, markerHover, disposables) {\n        if (markerHover.marker.severity === MarkerSeverity.Error || markerHover.marker.severity === MarkerSeverity.Warning || markerHover.marker.severity === MarkerSeverity.Info) {\n            context.statusBar.addAction({\n                label: nls.localize('view problem', \"View Problem\"),\n                commandId: NextMarkerAction.ID,\n                run: () => {\n                    var _a;\n                    context.hide();\n                    (_a = MarkerController.get(this._editor)) === null || _a === void 0 ? void 0 : _a.showAtMarker(markerHover.marker);\n                    this._editor.focus();\n                }\n            });\n        }\n        if (!this._editor.getOption(90 /* EditorOption.readOnly */)) {\n            const quickfixPlaceholderElement = context.statusBar.append($('div'));\n            if (this.recentMarkerCodeActionsInfo) {\n                if (IMarkerData.makeKey(this.recentMarkerCodeActionsInfo.marker) === IMarkerData.makeKey(markerHover.marker)) {\n                    if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\n                        quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\n                    }\n                }\n                else {\n                    this.recentMarkerCodeActionsInfo = undefined;\n                }\n            }\n            const updatePlaceholderDisposable = this.recentMarkerCodeActionsInfo && !this.recentMarkerCodeActionsInfo.hasCodeActions ? Disposable.None : disposables.add(disposableTimeout(() => quickfixPlaceholderElement.textContent = nls.localize('checkingForQuickFixes', \"Checking for quick fixes...\"), 200));\n            if (!quickfixPlaceholderElement.textContent) {\n                // Have some content in here to avoid flickering\n                quickfixPlaceholderElement.textContent = String.fromCharCode(0xA0); // &nbsp;\n            }\n            const codeActionsPromise = this.getCodeActions(markerHover.marker);\n            disposables.add(toDisposable(() => codeActionsPromise.cancel()));\n            codeActionsPromise.then(actions => {\n                updatePlaceholderDisposable.dispose();\n                this.recentMarkerCodeActionsInfo = { marker: markerHover.marker, hasCodeActions: actions.validActions.length > 0 };\n                if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\n                    actions.dispose();\n                    quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\n                    return;\n                }\n                quickfixPlaceholderElement.style.display = 'none';\n                let showing = false;\n                disposables.add(toDisposable(() => {\n                    if (!showing) {\n                        actions.dispose();\n                    }\n                }));\n                context.statusBar.addAction({\n                    label: nls.localize('quick fixes', \"Quick Fix...\"),\n                    commandId: quickFixCommandId,\n                    run: (target) => {\n                        showing = true;\n                        const controller = CodeActionController.get(this._editor);\n                        const elementPosition = dom.getDomNodePagePosition(target);\n                        // Hide the hover pre-emptively, otherwise the editor can close the code actions\n                        // context menu as well when using keyboard navigation\n                        context.hide();\n                        controller === null || controller === void 0 ? void 0 : controller.showCodeActions(markerCodeActionTrigger, actions, {\n                            x: elementPosition.left,\n                            y: elementPosition.top,\n                            width: elementPosition.width,\n                            height: elementPosition.height\n                        });\n                    }\n                });\n            }, onUnexpectedError);\n        }\n    }\n    getCodeActions(marker) {\n        return createCancelablePromise(cancellationToken => {\n            return getCodeActions(this._languageFeaturesService.codeActionProvider, this._editor.getModel(), new Range(marker.startLineNumber, marker.startColumn, marker.endLineNumber, marker.endColumn), markerCodeActionTrigger, Progress.None, cancellationToken);\n        });\n    }\n};\nMarkerHoverParticipant = __decorate([\n    __param(1, IMarkerDecorationsService),\n    __param(2, IOpenerService),\n    __param(3, ILanguageFeaturesService)\n], MarkerHoverParticipant);\nexport { MarkerHoverParticipant };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar ModesHoverController_1;\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { GotoDefinitionAtPositionEditorContribution } from '../../gotoSymbol/browser/link/goToDefinitionAtPosition.js';\nimport { ContentHoverWidget, ContentHoverController } from './contentHover.js';\nimport { MarginHoverWidget } from './marginHover.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { editorHoverBorder } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { HoverParticipantRegistry } from './hoverTypes.js';\nimport { MarkdownHoverParticipant } from './markdownHoverParticipant.js';\nimport { MarkerHoverParticipant } from './markerHoverParticipant.js';\nimport { InlineSuggestionHintsContentWidget } from '../../inlineCompletions/browser/inlineCompletionsHintsWidget.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport * as nls from '../../../../nls.js';\nimport './hover.css';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\n// sticky hover widget which doesn't disappear on focus out and such\nconst _sticky = false;\nlet ModesHoverController = ModesHoverController_1 = class ModesHoverController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(ModesHoverController_1.ID);\n    }\n    constructor(_editor, _instantiationService, _openerService, _languageService, _keybindingService) {\n        super();\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._openerService = _openerService;\n        this._languageService = _languageService;\n        this._keybindingService = _keybindingService;\n        this._toUnhook = new DisposableStore();\n        this._hoverActivatedByColorDecoratorClick = false;\n        this._isMouseDown = false;\n        this._hoverClicked = false;\n        this._contentWidget = null;\n        this._glyphWidget = null;\n        this._reactToEditorMouseMoveRunner = this._register(new RunOnceScheduler(() => this._reactToEditorMouseMove(this._mouseMoveEvent), 0));\n        this._hookEvents();\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(60 /* EditorOption.hover */)) {\n                this._unhookEvents();\n                this._hookEvents();\n            }\n        }));\n        this._register(this._editor.onMouseLeave(() => {\n            this._mouseMoveEvent = undefined;\n            this._reactToEditorMouseMoveRunner.cancel();\n        }));\n    }\n    _hookEvents() {\n        const hideWidgetsEventHandler = () => this._hideWidgets();\n        const hoverOpts = this._editor.getOption(60 /* EditorOption.hover */);\n        this._isHoverEnabled = hoverOpts.enabled;\n        this._isHoverSticky = hoverOpts.sticky;\n        this._hidingDelay = hoverOpts.hidingDelay;\n        if (this._isHoverEnabled) {\n            this._toUnhook.add(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\n            this._toUnhook.add(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\n        }\n        else {\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\n        }\n        this._toUnhook.add(this._editor.onMouseLeave((e) => this._onEditorMouseLeave(e)));\n        this._toUnhook.add(this._editor.onDidChangeModel(hideWidgetsEventHandler));\n        this._toUnhook.add(this._editor.onDidScrollChange((e) => this._onEditorScrollChanged(e)));\n    }\n    _unhookEvents() {\n        this._toUnhook.clear();\n    }\n    _onEditorScrollChanged(e) {\n        if (e.scrollTopChanged || e.scrollLeftChanged) {\n            this._hideWidgets();\n        }\n    }\n    _onEditorMouseDown(mouseEvent) {\n        var _a;\n        this._isMouseDown = true;\n        const target = mouseEvent.target;\n        if (target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID) {\n            this._hoverClicked = true;\n            // mouse down on top of content hover widget\n            return;\n        }\n        if (target.type === 12 /* MouseTargetType.OVERLAY_WIDGET */ && target.detail === MarginHoverWidget.ID) {\n            // mouse down on top of overlay hover widget\n            return;\n        }\n        if (target.type !== 12 /* MouseTargetType.OVERLAY_WIDGET */) {\n            this._hoverClicked = false;\n        }\n        if (!((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.widget.isResizing)) {\n            this._hideWidgets();\n        }\n    }\n    _onEditorMouseUp(mouseEvent) {\n        this._isMouseDown = false;\n    }\n    _onEditorMouseLeave(mouseEvent) {\n        var _a, _b;\n        const targetEm = (mouseEvent.event.browserEvent.relatedTarget);\n        if (((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.widget.isResizing) || ((_b = this._contentWidget) === null || _b === void 0 ? void 0 : _b.containsNode(targetEm))) {\n            // When the content widget is resizing\n            // when the mouse is inside hover widget\n            return;\n        }\n        if (!_sticky) {\n            this._hideWidgets();\n        }\n    }\n    _isMouseOverWidget(mouseEvent) {\n        var _a, _b, _c, _d, _e;\n        const target = mouseEvent.target;\n        if (this._isHoverSticky\n            && target.type === 9 /* MouseTargetType.CONTENT_WIDGET */\n            && target.detail === ContentHoverWidget.ID) {\n            // mouse moved on top of content hover widget\n            return true;\n        }\n        if (this._isHoverSticky\n            && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.containsNode((_b = mouseEvent.event.browserEvent.view) === null || _b === void 0 ? void 0 : _b.document.activeElement))\n            && !((_d = (_c = mouseEvent.event.browserEvent.view) === null || _c === void 0 ? void 0 : _c.getSelection()) === null || _d === void 0 ? void 0 : _d.isCollapsed)) {\n            // selected text within content hover widget\n            return true;\n        }\n        if (!this._isHoverSticky\n            && target.type === 9 /* MouseTargetType.CONTENT_WIDGET */\n            && target.detail === ContentHoverWidget.ID\n            && ((_e = this._contentWidget) === null || _e === void 0 ? void 0 : _e.isColorPickerVisible)) {\n            // though the hover is not sticky, the color picker needs to.\n            return true;\n        }\n        if (this._isHoverSticky\n            && target.type === 12 /* MouseTargetType.OVERLAY_WIDGET */\n            && target.detail === MarginHoverWidget.ID) {\n            // mouse moved on top of overlay hover widget\n            return true;\n        }\n        return false;\n    }\n    _onEditorMouseMove(mouseEvent) {\n        var _a, _b, _c, _d;\n        this._mouseMoveEvent = mouseEvent;\n        if (((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isFocused) || ((_b = this._contentWidget) === null || _b === void 0 ? void 0 : _b.isResizing)) {\n            return;\n        }\n        if (this._isMouseDown && this._hoverClicked) {\n            return;\n        }\n        if (this._isHoverSticky && ((_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.isVisibleFromKeyboard)) {\n            // Sticky mode is on and the hover has been shown via keyboard\n            // so moving the mouse has no effect\n            return;\n        }\n        const mouseIsOverWidget = this._isMouseOverWidget(mouseEvent);\n        // If the mouse is over the widget and the hiding timeout is defined, then cancel it\n        if (mouseIsOverWidget) {\n            this._reactToEditorMouseMoveRunner.cancel();\n            return;\n        }\n        // If the mouse is not over the widget, and if sticky is on,\n        // then give it a grace period before reacting to the mouse event\n        if (((_d = this._contentWidget) === null || _d === void 0 ? void 0 : _d.isVisible) && this._isHoverSticky && this._hidingDelay > 0) {\n            if (!this._reactToEditorMouseMoveRunner.isScheduled()) {\n                this._reactToEditorMouseMoveRunner.schedule(this._hidingDelay);\n            }\n            return;\n        }\n        this._reactToEditorMouseMove(mouseEvent);\n    }\n    _reactToEditorMouseMove(mouseEvent) {\n        var _a, _b, _c;\n        if (!mouseEvent) {\n            return;\n        }\n        const target = mouseEvent.target;\n        const mouseOnDecorator = (_a = target.element) === null || _a === void 0 ? void 0 : _a.classList.contains('colorpicker-color-decoration');\n        const decoratorActivatedOn = this._editor.getOption(146 /* EditorOption.colorDecoratorsActivatedOn */);\n        if ((mouseOnDecorator && ((decoratorActivatedOn === 'click' && !this._hoverActivatedByColorDecoratorClick) ||\n            (decoratorActivatedOn === 'hover' && !this._isHoverEnabled && !_sticky) ||\n            (decoratorActivatedOn === 'clickAndHover' && !this._isHoverEnabled && !this._hoverActivatedByColorDecoratorClick)))\n            || !mouseOnDecorator && !this._isHoverEnabled && !this._hoverActivatedByColorDecoratorClick) {\n            this._hideWidgets();\n            return;\n        }\n        const contentWidget = this._getOrCreateContentWidget();\n        if (contentWidget.maybeShowAt(mouseEvent)) {\n            (_b = this._glyphWidget) === null || _b === void 0 ? void 0 : _b.hide();\n            return;\n        }\n        if (target.type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */ && target.position) {\n            (_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.hide();\n            if (!this._glyphWidget) {\n                this._glyphWidget = new MarginHoverWidget(this._editor, this._languageService, this._openerService);\n            }\n            this._glyphWidget.startShowingAt(target.position.lineNumber);\n            return;\n        }\n        if (_sticky) {\n            return;\n        }\n        this._hideWidgets();\n    }\n    _onKeyDown(e) {\n        var _a;\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const resolvedKeyboardEvent = this._keybindingService.softDispatch(e, this._editor.getDomNode());\n        // If the beginning of a multi-chord keybinding is pressed, or the command aims to focus the hover, set the variable to true, otherwise false\n        const mightTriggerFocus = (resolvedKeyboardEvent.kind === 1 /* ResultKind.MoreChordsNeeded */ || (resolvedKeyboardEvent.kind === 2 /* ResultKind.KbFound */ && resolvedKeyboardEvent.commandId === 'editor.action.showHover' && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isVisible)));\n        if (e.keyCode !== 5 /* KeyCode.Ctrl */ && e.keyCode !== 6 /* KeyCode.Alt */ && e.keyCode !== 57 /* KeyCode.Meta */ && e.keyCode !== 4 /* KeyCode.Shift */\n            && !mightTriggerFocus) {\n            // Do not hide hover when a modifier key is pressed\n            this._hideWidgets();\n        }\n    }\n    _hideWidgets() {\n        var _a, _b, _c;\n        if (_sticky) {\n            return;\n        }\n        if ((this._isMouseDown && this._hoverClicked && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible)) || InlineSuggestionHintsContentWidget.dropDownVisible) {\n            return;\n        }\n        this._hoverActivatedByColorDecoratorClick = false;\n        this._hoverClicked = false;\n        (_b = this._glyphWidget) === null || _b === void 0 ? void 0 : _b.hide();\n        (_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.hide();\n    }\n    _getOrCreateContentWidget() {\n        if (!this._contentWidget) {\n            this._contentWidget = this._instantiationService.createInstance(ContentHoverController, this._editor);\n        }\n        return this._contentWidget;\n    }\n    showContentHover(range, mode, source, focus, activatedByColorDecoratorClick = false) {\n        this._hoverActivatedByColorDecoratorClick = activatedByColorDecoratorClick;\n        this._getOrCreateContentWidget().startShowingAtRange(range, mode, source, focus);\n    }\n    focus() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    scrollUp() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.scrollUp();\n    }\n    scrollDown() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.scrollDown();\n    }\n    scrollLeft() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.scrollLeft();\n    }\n    scrollRight() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.scrollRight();\n    }\n    pageUp() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.pageUp();\n    }\n    pageDown() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.pageDown();\n    }\n    goToTop() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.goToTop();\n    }\n    goToBottom() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.goToBottom();\n    }\n    get isColorPickerVisible() {\n        var _a;\n        return (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible;\n    }\n    get isHoverVisible() {\n        var _a;\n        return (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isVisible;\n    }\n    dispose() {\n        var _a, _b;\n        super.dispose();\n        this._unhookEvents();\n        this._toUnhook.dispose();\n        (_a = this._glyphWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n        (_b = this._contentWidget) === null || _b === void 0 ? void 0 : _b.dispose();\n    }\n};\nModesHoverController.ID = 'editor.contrib.hover';\nModesHoverController = ModesHoverController_1 = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IOpenerService),\n    __param(3, ILanguageService),\n    __param(4, IKeybindingService)\n], ModesHoverController);\nexport { ModesHoverController };\nclass ShowOrFocusHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.showHover',\n            label: nls.localize({\n                key: 'showOrFocusHover',\n                comment: [\n                    'Label for action that will trigger the showing/focusing of a hover in the editor.',\n                    'If the hover is not visible, it will show the hover.',\n                    'This allows for users to show the hover without using the mouse.',\n                    'If the hover is already visible, it will take focus.'\n                ]\n            }, \"Show or Focus Hover\"),\n            description: {\n                description: `Show or Focus Hover`,\n                args: [{\n                        name: 'args',\n                        schema: {\n                            type: 'object',\n                            properties: {\n                                'focus': {\n                                    description: 'Controls if when triggered with the keyboard, the hover should take focus immediately.',\n                                    type: 'boolean',\n                                    default: false\n                                }\n                            },\n                        }\n                    }]\n            },\n            alias: 'Show or Focus Hover',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const position = editor.getPosition();\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const focus = editor.getOption(2 /* EditorOption.accessibilitySupport */) === 2 /* AccessibilitySupport.Enabled */ || !!(args === null || args === void 0 ? void 0 : args.focus);\n        if (controller.isHoverVisible) {\n            controller.focus();\n        }\n        else {\n            controller.showContentHover(range, 1 /* HoverStartMode.Immediate */, 1 /* HoverStartSource.Keyboard */, focus);\n        }\n    }\n}\nclass ShowDefinitionPreviewHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.showDefinitionPreviewHover',\n            label: nls.localize({\n                key: 'showDefinitionPreviewHover',\n                comment: [\n                    'Label for action that will trigger the showing of definition preview hover in the editor.',\n                    'This allows for users to show the definition preview hover without using the mouse.'\n                ]\n            }, \"Show Definition Preview Hover\"),\n            alias: 'Show Definition Preview Hover',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const position = editor.getPosition();\n        if (!position) {\n            return;\n        }\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const goto = GotoDefinitionAtPositionEditorContribution.get(editor);\n        if (!goto) {\n            return;\n        }\n        const promise = goto.startFindDefinitionFromCursor(position);\n        promise.then(() => {\n            controller.showContentHover(range, 1 /* HoverStartMode.Immediate */, 1 /* HoverStartSource.Keyboard */, true);\n        });\n    }\n}\nclass ScrollUpHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.scrollUpHover',\n            label: nls.localize({\n                key: 'scrollUpHover',\n                comment: [\n                    'Action that allows to scroll up in the hover widget with the up arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Up Hover\"),\n            alias: 'Scroll Up Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 16 /* KeyCode.UpArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollUp();\n    }\n}\nclass ScrollDownHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.scrollDownHover',\n            label: nls.localize({\n                key: 'scrollDownHover',\n                comment: [\n                    'Action that allows to scroll down in the hover widget with the up arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Down Hover\"),\n            alias: 'Scroll Down Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 18 /* KeyCode.DownArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollDown();\n    }\n}\nclass ScrollLeftHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.scrollLeftHover',\n            label: nls.localize({\n                key: 'scrollLeftHover',\n                comment: [\n                    'Action that allows to scroll left in the hover widget with the left arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Left Hover\"),\n            alias: 'Scroll Left Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 15 /* KeyCode.LeftArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollLeft();\n    }\n}\nclass ScrollRightHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.scrollRightHover',\n            label: nls.localize({\n                key: 'scrollRightHover',\n                comment: [\n                    'Action that allows to scroll right in the hover widget with the right arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Right Hover\"),\n            alias: 'Scroll Right Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 17 /* KeyCode.RightArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollRight();\n    }\n}\nclass PageUpHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.pageUpHover',\n            label: nls.localize({\n                key: 'pageUpHover',\n                comment: [\n                    'Action that allows to page up in the hover widget with the page up command when the hover widget is focused.'\n                ]\n            }, \"Page Up Hover\"),\n            alias: 'Page Up Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 11 /* KeyCode.PageUp */,\n                secondary: [512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.pageUp();\n    }\n}\nclass PageDownHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.pageDownHover',\n            label: nls.localize({\n                key: 'pageDownHover',\n                comment: [\n                    'Action that allows to page down in the hover widget with the page down command when the hover widget is focused.'\n                ]\n            }, \"Page Down Hover\"),\n            alias: 'Page Down Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 12 /* KeyCode.PageDown */,\n                secondary: [512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.pageDown();\n    }\n}\nclass GoToTopHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.goToTopHover',\n            label: nls.localize({\n                key: 'goToTopHover',\n                comment: [\n                    'Action that allows to go to the top of the hover widget with the home command when the hover widget is focused.'\n                ]\n            }, \"Go To Top Hover\"),\n            alias: 'Go To Bottom Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 14 /* KeyCode.Home */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.goToTop();\n    }\n}\nclass GoToBottomHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.goToBottomHover',\n            label: nls.localize({\n                key: 'goToBottomHover',\n                comment: [\n                    'Action that allows to go to the bottom in the hover widget with the end command when the hover widget is focused.'\n                ]\n            }, \"Go To Bottom Hover\"),\n            alias: 'Go To Bottom Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 13 /* KeyCode.End */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.goToBottom();\n    }\n}\nregisterEditorContribution(ModesHoverController.ID, ModesHoverController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(ShowOrFocusHoverAction);\nregisterEditorAction(ShowDefinitionPreviewHoverAction);\nregisterEditorAction(ScrollUpHoverAction);\nregisterEditorAction(ScrollDownHoverAction);\nregisterEditorAction(ScrollLeftHoverAction);\nregisterEditorAction(ScrollRightHoverAction);\nregisterEditorAction(PageUpHoverAction);\nregisterEditorAction(PageDownHoverAction);\nregisterEditorAction(GoToTopHoverAction);\nregisterEditorAction(GoToBottomHoverAction);\nHoverParticipantRegistry.register(MarkdownHoverParticipant);\nHoverParticipantRegistry.register(MarkerHoverParticipant);\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const hoverBorder = theme.getColor(editorHoverBorder);\n    if (hoverBorder) {\n        collector.addRule(`.monaco-editor .monaco-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-bottom: 0px solid ${hoverBorder.transparent(0.5)}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { createCancelableAsyncIterable, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nexport class HoverResult {\n    constructor(value, isComplete, hasLoadingMessage) {\n        this.value = value;\n        this.isComplete = isComplete;\n        this.hasLoadingMessage = hasLoadingMessage;\n    }\n}\n/**\n * Computing the hover is very fine tuned.\n *\n * Suppose the hover delay is 300ms (the default). Then, when resting the mouse at an anchor:\n * - at 150ms, the async computation is triggered (i.e. semantic hover)\n *   - if async results already come in, they are not rendered yet.\n * - at 300ms, the sync computation is triggered (i.e. decorations, markers)\n *   - if there are sync or async results, they are rendered.\n * - at 900ms, if the async computation hasn't finished, a \"Loading...\" result is added.\n */\nexport class HoverOperation extends Disposable {\n    constructor(_editor, _computer) {\n        super();\n        this._editor = _editor;\n        this._computer = _computer;\n        this._onResult = this._register(new Emitter());\n        this.onResult = this._onResult.event;\n        this._firstWaitScheduler = this._register(new RunOnceScheduler(() => this._triggerAsyncComputation(), 0));\n        this._secondWaitScheduler = this._register(new RunOnceScheduler(() => this._triggerSyncComputation(), 0));\n        this._loadingMessageScheduler = this._register(new RunOnceScheduler(() => this._triggerLoadingMessage(), 0));\n        this._state = 0 /* HoverOperationState.Idle */;\n        this._asyncIterable = null;\n        this._asyncIterableDone = false;\n        this._result = [];\n    }\n    dispose() {\n        if (this._asyncIterable) {\n            this._asyncIterable.cancel();\n            this._asyncIterable = null;\n        }\n        super.dispose();\n    }\n    get _hoverTime() {\n        return this._editor.getOption(60 /* EditorOption.hover */).delay;\n    }\n    get _firstWaitTime() {\n        return this._hoverTime / 2;\n    }\n    get _secondWaitTime() {\n        return this._hoverTime - this._firstWaitTime;\n    }\n    get _loadingMessageTime() {\n        return 3 * this._hoverTime;\n    }\n    _setState(state, fireResult = true) {\n        this._state = state;\n        if (fireResult) {\n            this._fireResult();\n        }\n    }\n    _triggerAsyncComputation() {\n        this._setState(2 /* HoverOperationState.SecondWait */);\n        this._secondWaitScheduler.schedule(this._secondWaitTime);\n        if (this._computer.computeAsync) {\n            this._asyncIterableDone = false;\n            this._asyncIterable = createCancelableAsyncIterable(token => this._computer.computeAsync(token));\n            (() => __awaiter(this, void 0, void 0, function* () {\n                var _a, e_1, _b, _c;\n                try {\n                    try {\n                        for (var _d = true, _e = __asyncValues(this._asyncIterable), _f; _f = yield _e.next(), _a = _f.done, !_a; _d = true) {\n                            _c = _f.value;\n                            _d = false;\n                            const item = _c;\n                            if (item) {\n                                this._result.push(item);\n                                this._fireResult();\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                    this._asyncIterableDone = true;\n                    if (this._state === 3 /* HoverOperationState.WaitingForAsync */ || this._state === 4 /* HoverOperationState.WaitingForAsyncShowingLoading */) {\n                        this._setState(0 /* HoverOperationState.Idle */);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }))();\n        }\n        else {\n            this._asyncIterableDone = true;\n        }\n    }\n    _triggerSyncComputation() {\n        if (this._computer.computeSync) {\n            this._result = this._result.concat(this._computer.computeSync());\n        }\n        this._setState(this._asyncIterableDone ? 0 /* HoverOperationState.Idle */ : 3 /* HoverOperationState.WaitingForAsync */);\n    }\n    _triggerLoadingMessage() {\n        if (this._state === 3 /* HoverOperationState.WaitingForAsync */) {\n            this._setState(4 /* HoverOperationState.WaitingForAsyncShowingLoading */);\n        }\n    }\n    _fireResult() {\n        if (this._state === 1 /* HoverOperationState.FirstWait */ || this._state === 2 /* HoverOperationState.SecondWait */) {\n            // Do not send out results before the hover time\n            return;\n        }\n        const isComplete = (this._state === 0 /* HoverOperationState.Idle */);\n        const hasLoadingMessage = (this._state === 4 /* HoverOperationState.WaitingForAsyncShowingLoading */);\n        this._onResult.fire(new HoverResult(this._result.slice(0), isComplete, hasLoadingMessage));\n    }\n    start(mode) {\n        if (mode === 0 /* HoverStartMode.Delayed */) {\n            if (this._state === 0 /* HoverOperationState.Idle */) {\n                this._setState(1 /* HoverOperationState.FirstWait */);\n                this._firstWaitScheduler.schedule(this._firstWaitTime);\n                this._loadingMessageScheduler.schedule(this._loadingMessageTime);\n            }\n        }\n        else {\n            switch (this._state) {\n                case 0 /* HoverOperationState.Idle */:\n                    this._triggerAsyncComputation();\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n                case 2 /* HoverOperationState.SecondWait */:\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n            }\n        }\n    }\n    cancel() {\n        this._firstWaitScheduler.cancel();\n        this._secondWaitScheduler.cancel();\n        this._loadingMessageScheduler.cancel();\n        if (this._asyncIterable) {\n            this._asyncIterable.cancel();\n            this._asyncIterable = null;\n        }\n        this._result = [];\n        this._setState(0 /* HoverOperationState.Idle */, false);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class HoverRangeAnchor {\n    constructor(priority, range, initialMousePosX, initialMousePosY) {\n        this.priority = priority;\n        this.range = range;\n        this.initialMousePosX = initialMousePosX;\n        this.initialMousePosY = initialMousePosY;\n        this.type = 1 /* HoverAnchorType.Range */;\n    }\n    equals(other) {\n        return (other.type === 1 /* HoverAnchorType.Range */ && this.range.equalsRange(other.range));\n    }\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\n        return (lastAnchor.type === 1 /* HoverAnchorType.Range */ && showAtPosition.lineNumber === this.range.startLineNumber);\n    }\n}\nexport class HoverForeignElementAnchor {\n    constructor(priority, owner, range, initialMousePosX, initialMousePosY, supportsMarkerHover) {\n        this.priority = priority;\n        this.owner = owner;\n        this.range = range;\n        this.initialMousePosX = initialMousePosX;\n        this.initialMousePosY = initialMousePosY;\n        this.supportsMarkerHover = supportsMarkerHover;\n        this.type = 2 /* HoverAnchorType.ForeignElement */;\n    }\n    equals(other) {\n        return (other.type === 2 /* HoverAnchorType.ForeignElement */ && this.owner === other.owner);\n    }\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\n        return (lastAnchor.type === 2 /* HoverAnchorType.ForeignElement */ && this.owner === lastAnchor.owner);\n    }\n}\nexport const HoverParticipantRegistry = (new class HoverParticipantRegistry {\n    constructor() {\n        this._participants = [];\n    }\n    register(ctor) {\n        this._participants.push(ctor);\n    }\n    getAll() {\n        return this._participants;\n    }\n}());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { getHover } from './getHover.js';\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nconst $ = dom.$;\nexport class MarkdownHover {\n    constructor(owner, range, contents, isBeforeContent, ordinal) {\n        this.owner = owner;\n        this.range = range;\n        this.contents = contents;\n        this.isBeforeContent = isBeforeContent;\n        this.ordinal = ordinal;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nlet MarkdownHoverParticipant = class MarkdownHoverParticipant {\n    constructor(_editor, _languageService, _openerService, _configurationService, _languageFeaturesService) {\n        this._editor = _editor;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this._configurationService = _configurationService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this.hoverOrdinal = 3;\n    }\n    createLoadingMessage(anchor) {\n        return new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(nls.localize('modesContentHover.loading', \"Loading...\"))], false, 2000);\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        let index = 1000;\n        const lineLength = model.getLineLength(lineNumber);\n        const languageId = model.getLanguageIdAtPosition(anchor.range.startLineNumber, anchor.range.startColumn);\n        const stopRenderingLineAfter = this._editor.getOption(116 /* EditorOption.stopRenderingLineAfter */);\n        const maxTokenizationLineLength = this._configurationService.getValue('editor.maxTokenizationLineLength', {\n            overrideIdentifier: languageId\n        });\n        let stopRenderingMessage = false;\n        if (stopRenderingLineAfter >= 0 && lineLength > stopRenderingLineAfter && anchor.range.startColumn >= stopRenderingLineAfter) {\n            stopRenderingMessage = true;\n            result.push(new MarkdownHover(this, anchor.range, [{\n                    value: nls.localize('stopped rendering', \"Rendering paused for long line for performance reasons. This can be configured via `editor.stopRenderingLineAfter`.\")\n                }], false, index++));\n        }\n        if (!stopRenderingMessage && typeof maxTokenizationLineLength === 'number' && lineLength >= maxTokenizationLineLength) {\n            result.push(new MarkdownHover(this, anchor.range, [{\n                    value: nls.localize('too many characters', \"Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.\")\n                }], false, index++));\n        }\n        let isBeforeContent = false;\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const hoverMessage = d.options.hoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            if (d.options.beforeContentClassName) {\n                isBeforeContent = true;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkdownHover(this, range, asArray(hoverMessage), isBeforeContent, index++));\n        }\n        return result;\n    }\n    computeAsync(anchor, lineDecorations, token) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const model = this._editor.getModel();\n        if (!this._languageFeaturesService.hoverProvider.has(model)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const position = new Position(anchor.range.startLineNumber, anchor.range.startColumn);\n        return getHover(this._languageFeaturesService.hoverProvider, model, position, token)\n            .filter(item => !isEmptyMarkdownString(item.hover.contents))\n            .map(item => {\n            const rng = item.hover.range ? Range.lift(item.hover.range) : anchor.range;\n            return new MarkdownHover(this, rng, item.hover.contents, false, item.ordinal);\n        });\n    }\n    renderHoverParts(context, hoverParts) {\n        return renderMarkdownHovers(context, hoverParts, this._editor, this._languageService, this._openerService);\n    }\n};\nMarkdownHoverParticipant = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService),\n    __param(4, ILanguageFeaturesService)\n], MarkdownHoverParticipant);\nexport { MarkdownHoverParticipant };\nexport function renderMarkdownHovers(context, hoverParts, editor, languageService, openerService) {\n    // Sort hover parts to keep them stable since they might come in async, out-of-order\n    hoverParts.sort((a, b) => a.ordinal - b.ordinal);\n    const disposables = new DisposableStore();\n    for (const hoverPart of hoverParts) {\n        for (const contents of hoverPart.contents) {\n            if (isEmptyMarkdownString(contents)) {\n                continue;\n            }\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderer = disposables.add(new MarkdownRenderer({ editor }, languageService, openerService));\n            disposables.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const renderedContents = disposables.add(renderer.render(contents));\n            hoverContentsElement.appendChild(renderedContents.element);\n            context.fragment.appendChild(markdownHoverElement);\n        }\n    }\n    return disposables;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar InPlaceReplaceController_1;\nimport { createCancelablePromise, timeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { EditorState } from '../../editorState/browser/editorState.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport * as nls from '../../../../nls.js';\nimport { InPlaceReplaceCommand } from './inPlaceReplaceCommand.js';\nimport './inPlaceReplace.css';\nlet InPlaceReplaceController = InPlaceReplaceController_1 = class InPlaceReplaceController {\n    static get(editor) {\n        return editor.getContribution(InPlaceReplaceController_1.ID);\n    }\n    constructor(editor, editorWorkerService) {\n        this.editor = editor;\n        this.editorWorkerService = editorWorkerService;\n        this.decorations = this.editor.createDecorationsCollection();\n    }\n    dispose() {\n    }\n    run(source, up) {\n        var _a;\n        // cancel any pending request\n        (_a = this.currentRequest) === null || _a === void 0 ? void 0 : _a.cancel();\n        const editorSelection = this.editor.getSelection();\n        const model = this.editor.getModel();\n        if (!model || !editorSelection) {\n            return undefined;\n        }\n        let selection = editorSelection;\n        if (selection.startLineNumber !== selection.endLineNumber) {\n            // Can't accept multiline selection\n            return undefined;\n        }\n        const state = new EditorState(this.editor, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */);\n        const modelURI = model.uri;\n        if (!this.editorWorkerService.canNavigateValueSet(modelURI)) {\n            return Promise.resolve(undefined);\n        }\n        this.currentRequest = createCancelablePromise(token => this.editorWorkerService.navigateValueSet(modelURI, selection, up));\n        return this.currentRequest.then(result => {\n            var _a;\n            if (!result || !result.range || !result.value) {\n                // No proper result\n                return;\n            }\n            if (!state.validate(this.editor)) {\n                // state has changed\n                return;\n            }\n            // Selection\n            const editRange = Range.lift(result.range);\n            let highlightRange = result.range;\n            const diff = result.value.length - (selection.endColumn - selection.startColumn);\n            // highlight\n            highlightRange = {\n                startLineNumber: highlightRange.startLineNumber,\n                startColumn: highlightRange.startColumn,\n                endLineNumber: highlightRange.endLineNumber,\n                endColumn: highlightRange.startColumn + result.value.length\n            };\n            if (diff > 1) {\n                selection = new Selection(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn + diff - 1);\n            }\n            // Insert new text\n            const command = new InPlaceReplaceCommand(editRange, selection, result.value);\n            this.editor.pushUndoStop();\n            this.editor.executeCommand(source, command);\n            this.editor.pushUndoStop();\n            // add decoration\n            this.decorations.set([{\n                    range: highlightRange,\n                    options: InPlaceReplaceController_1.DECORATION\n                }]);\n            // remove decoration after delay\n            (_a = this.decorationRemover) === null || _a === void 0 ? void 0 : _a.cancel();\n            this.decorationRemover = timeout(350);\n            this.decorationRemover.then(() => this.decorations.clear()).catch(onUnexpectedError);\n        }).catch(onUnexpectedError);\n    }\n};\nInPlaceReplaceController.ID = 'editor.contrib.inPlaceReplaceController';\nInPlaceReplaceController.DECORATION = ModelDecorationOptions.register({\n    description: 'in-place-replace',\n    className: 'valueSetReplacement'\n});\nInPlaceReplaceController = InPlaceReplaceController_1 = __decorate([\n    __param(1, IEditorWorkerService)\n], InPlaceReplaceController);\nclass InPlaceReplaceUp extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.up',\n            label: nls.localize('InPlaceReplaceAction.previous.label', \"Replace with Previous Value\"),\n            alias: 'Replace with Previous Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 87 /* KeyCode.Comma */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, false);\n    }\n}\nclass InPlaceReplaceDown extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.down',\n            label: nls.localize('InPlaceReplaceAction.next.label', \"Replace with Next Value\"),\n            alias: 'Replace with Next Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 89 /* KeyCode.Period */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, true);\n    }\n}\nregisterEditorContribution(InPlaceReplaceController.ID, InPlaceReplaceController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorAction(InPlaceReplaceUp);\nregisterEditorAction(InPlaceReplaceDown);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../../../common/core/selection.js';\nexport class InPlaceReplaceCommand {\n    constructor(editRange, originalSelection, text) {\n        this._editRange = editRange;\n        this._originalSelection = originalSelection;\n        this._text = text;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._editRange, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        if (!this._originalSelection.isEmpty()) {\n            // Preserve selection and extends to typed text\n            return new Selection(srcRange.endLineNumber, srcRange.endColumn - this._text.length, srcRange.endLineNumber, srcRange.endColumn);\n        }\n        return new Selection(srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn), srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function getSpaceCnt(str, tabSize) {\n    let spacesCnt = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) === '\\t') {\n            spacesCnt += tabSize;\n        }\n        else {\n            spacesCnt++;\n        }\n    }\n    return spacesCnt;\n}\nexport function generateIndent(spacesCnt, tabSize, insertSpaces) {\n    spacesCnt = spacesCnt < 0 ? 0 : spacesCnt;\n    let result = '';\n    if (!insertSpaces) {\n        const tabsCnt = Math.floor(spacesCnt / tabSize);\n        spacesCnt = spacesCnt % tabSize;\n        for (let i = 0; i < tabsCnt; i++) {\n            result += '\\t';\n        }\n    }\n    for (let i = 0; i < spacesCnt; i++) {\n        result += ' ';\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ShiftCommand } from '../../../common/commands/shiftCommand.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport * as indentUtils from './indentUtils.js';\nimport * as nls from '../../../../nls.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { normalizeIndentation } from '../../../common/core/indentation.js';\nimport { getGoodIndentForLine, getIndentMetadata } from '../../../common/languages/autoIndent.js';\nexport function getReindentEditOperations(model, languageConfigurationService, startLineNumber, endLineNumber, inheritedIndent) {\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n        // Model is empty\n        return [];\n    }\n    const indentationRules = languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).indentationRules;\n    if (!indentationRules) {\n        return [];\n    }\n    endLineNumber = Math.min(endLineNumber, model.getLineCount());\n    // Skip `unIndentedLinePattern` lines\n    while (startLineNumber <= endLineNumber) {\n        if (!indentationRules.unIndentedLinePattern) {\n            break;\n        }\n        const text = model.getLineContent(startLineNumber);\n        if (!indentationRules.unIndentedLinePattern.test(text)) {\n            break;\n        }\n        startLineNumber++;\n    }\n    if (startLineNumber > endLineNumber - 1) {\n        return [];\n    }\n    const { tabSize, indentSize, insertSpaces } = model.getOptions();\n    const shiftIndent = (indentation, count) => {\n        count = count || 1;\n        return ShiftCommand.shiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\n    };\n    const unshiftIndent = (indentation, count) => {\n        count = count || 1;\n        return ShiftCommand.unshiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\n    };\n    const indentEdits = [];\n    // indentation being passed to lines below\n    let globalIndent;\n    // Calculate indentation for the first line\n    // If there is no passed-in indentation, we use the indentation of the first line as base.\n    const currentLineText = model.getLineContent(startLineNumber);\n    let adjustedLineContent = currentLineText;\n    if (inheritedIndent !== undefined && inheritedIndent !== null) {\n        globalIndent = inheritedIndent;\n        const oldIndentation = strings.getLeadingWhitespace(currentLineText);\n        adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\n            globalIndent = unshiftIndent(globalIndent);\n            adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\n        }\n        if (currentLineText !== adjustedLineContent) {\n            indentEdits.push(EditOperation.replaceMove(new Selection(startLineNumber, 1, startLineNumber, oldIndentation.length + 1), normalizeIndentation(globalIndent, indentSize, insertSpaces)));\n        }\n    }\n    else {\n        globalIndent = strings.getLeadingWhitespace(currentLineText);\n    }\n    // idealIndentForNextLine doesn't equal globalIndent when there is a line matching `indentNextLinePattern`.\n    let idealIndentForNextLine = globalIndent;\n    if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n        globalIndent = shiftIndent(globalIndent);\n    }\n    else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n    }\n    startLineNumber++;\n    // Calculate indentation adjustment for all following lines\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        const text = model.getLineContent(lineNumber);\n        const oldIndentation = strings.getLeadingWhitespace(text);\n        const adjustedLineContent = idealIndentForNextLine + text.substring(oldIndentation.length);\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\n            idealIndentForNextLine = unshiftIndent(idealIndentForNextLine);\n            globalIndent = unshiftIndent(globalIndent);\n        }\n        if (oldIndentation !== idealIndentForNextLine) {\n            indentEdits.push(EditOperation.replaceMove(new Selection(lineNumber, 1, lineNumber, oldIndentation.length + 1), normalizeIndentation(idealIndentForNextLine, indentSize, insertSpaces)));\n        }\n        // calculate idealIndentForNextLine\n        if (indentationRules.unIndentedLinePattern && indentationRules.unIndentedLinePattern.test(text)) {\n            // In reindent phase, if the line matches `unIndentedLinePattern` we inherit indentation from above lines\n            // but don't change globalIndent and idealIndentForNextLine.\n            continue;\n        }\n        else if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\n            globalIndent = shiftIndent(globalIndent);\n            idealIndentForNextLine = globalIndent;\n        }\n        else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\n            idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n        }\n        else {\n            idealIndentForNextLine = globalIndent;\n        }\n    }\n    return indentEdits;\n}\nexport class IndentationToSpacesAction extends EditorAction {\n    constructor() {\n        super({\n            id: IndentationToSpacesAction.ID,\n            label: nls.localize('indentationToSpaces', \"Convert Indentation to Spaces\"),\n            alias: 'Convert Indentation to Spaces',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const modelOpts = model.getOptions();\n        const selection = editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        const command = new IndentationToSpacesCommand(selection, modelOpts.tabSize);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n        model.updateOptions({\n            insertSpaces: true\n        });\n    }\n}\nIndentationToSpacesAction.ID = 'editor.action.indentationToSpaces';\nexport class IndentationToTabsAction extends EditorAction {\n    constructor() {\n        super({\n            id: IndentationToTabsAction.ID,\n            label: nls.localize('indentationToTabs', \"Convert Indentation to Tabs\"),\n            alias: 'Convert Indentation to Tabs',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const modelOpts = model.getOptions();\n        const selection = editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        const command = new IndentationToTabsCommand(selection, modelOpts.tabSize);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n        model.updateOptions({\n            insertSpaces: false\n        });\n    }\n}\nIndentationToTabsAction.ID = 'editor.action.indentationToTabs';\nexport class ChangeIndentationSizeAction extends EditorAction {\n    constructor(insertSpaces, displaySizeOnly, opts) {\n        super(opts);\n        this.insertSpaces = insertSpaces;\n        this.displaySizeOnly = displaySizeOnly;\n    }\n    run(accessor, editor) {\n        const quickInputService = accessor.get(IQuickInputService);\n        const modelService = accessor.get(IModelService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n        const modelOpts = model.getOptions();\n        const picks = [1, 2, 3, 4, 5, 6, 7, 8].map(n => ({\n            id: n.toString(),\n            label: n.toString(),\n            // add description for tabSize value set in the configuration\n            description: (n === creationOpts.tabSize && n === modelOpts.tabSize\n                ? nls.localize('configuredTabSize', \"Configured Tab Size\")\n                : n === creationOpts.tabSize\n                    ? nls.localize('defaultTabSize', \"Default Tab Size\")\n                    : n === modelOpts.tabSize\n                        ? nls.localize('currentTabSize', \"Current Tab Size\")\n                        : undefined)\n        }));\n        // auto focus the tabSize set for the current editor\n        const autoFocusIndex = Math.min(model.getOptions().tabSize - 1, 7);\n        setTimeout(() => {\n            quickInputService.pick(picks, { placeHolder: nls.localize({ key: 'selectTabWidth', comment: ['Tab corresponds to the tab key'] }, \"Select Tab Size for Current File\"), activeItem: picks[autoFocusIndex] }).then(pick => {\n                if (pick) {\n                    if (model && !model.isDisposed()) {\n                        const pickedVal = parseInt(pick.label, 10);\n                        if (this.displaySizeOnly) {\n                            model.updateOptions({\n                                tabSize: pickedVal\n                            });\n                        }\n                        else {\n                            model.updateOptions({\n                                tabSize: pickedVal,\n                                indentSize: pickedVal,\n                                insertSpaces: this.insertSpaces\n                            });\n                        }\n                    }\n                }\n            });\n        }, 50 /* quick input is sensitive to being opened so soon after another */);\n    }\n}\nexport class IndentUsingTabs extends ChangeIndentationSizeAction {\n    constructor() {\n        super(false, false, {\n            id: IndentUsingTabs.ID,\n            label: nls.localize('indentUsingTabs', \"Indent Using Tabs\"),\n            alias: 'Indent Using Tabs',\n            precondition: undefined\n        });\n    }\n}\nIndentUsingTabs.ID = 'editor.action.indentUsingTabs';\nexport class IndentUsingSpaces extends ChangeIndentationSizeAction {\n    constructor() {\n        super(true, false, {\n            id: IndentUsingSpaces.ID,\n            label: nls.localize('indentUsingSpaces', \"Indent Using Spaces\"),\n            alias: 'Indent Using Spaces',\n            precondition: undefined\n        });\n    }\n}\nIndentUsingSpaces.ID = 'editor.action.indentUsingSpaces';\nexport class ChangeTabDisplaySize extends ChangeIndentationSizeAction {\n    constructor() {\n        super(true, true, {\n            id: ChangeTabDisplaySize.ID,\n            label: nls.localize('changeTabDisplaySize', \"Change Tab Display Size\"),\n            alias: 'Change Tab Display Size',\n            precondition: undefined\n        });\n    }\n}\nChangeTabDisplaySize.ID = 'editor.action.changeTabDisplaySize';\nexport class DetectIndentation extends EditorAction {\n    constructor() {\n        super({\n            id: DetectIndentation.ID,\n            label: nls.localize('detectIndentation', \"Detect Indentation from Content\"),\n            alias: 'Detect Indentation from Content',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const modelService = accessor.get(IModelService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n        model.detectIndentation(creationOpts.insertSpaces, creationOpts.tabSize);\n    }\n}\nDetectIndentation.ID = 'editor.action.detectIndentation';\nexport class ReindentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.reindentlines',\n            label: nls.localize('editor.reindentlines', \"Reindent Lines\"),\n            alias: 'Reindent Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const edits = getReindentEditOperations(model, languageConfigurationService, 1, model.getLineCount());\n        if (edits.length > 0) {\n            editor.pushUndoStop();\n            editor.executeEdits(this.id, edits);\n            editor.pushUndoStop();\n        }\n    }\n}\nexport class ReindentSelectedLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.reindentselectedlines',\n            label: nls.localize('editor.reindentselectedlines', \"Reindent Selected Lines\"),\n            alias: 'Reindent Selected Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const edits = [];\n        for (const selection of selections) {\n            let startLineNumber = selection.startLineNumber;\n            let endLineNumber = selection.endLineNumber;\n            if (startLineNumber !== endLineNumber && selection.endColumn === 1) {\n                endLineNumber--;\n            }\n            if (startLineNumber === 1) {\n                if (startLineNumber === endLineNumber) {\n                    continue;\n                }\n            }\n            else {\n                startLineNumber--;\n            }\n            const editOperations = getReindentEditOperations(model, languageConfigurationService, startLineNumber, endLineNumber);\n            edits.push(...editOperations);\n        }\n        if (edits.length > 0) {\n            editor.pushUndoStop();\n            editor.executeEdits(this.id, edits);\n            editor.pushUndoStop();\n        }\n    }\n}\nexport class AutoIndentOnPasteCommand {\n    constructor(edits, initialSelection) {\n        this._initialSelection = initialSelection;\n        this._edits = [];\n        this._selectionId = null;\n        for (const edit of edits) {\n            if (edit.range && typeof edit.text === 'string') {\n                this._edits.push(edit);\n            }\n        }\n    }\n    getEditOperations(model, builder) {\n        for (const edit of this._edits) {\n            builder.addEditOperation(Range.lift(edit.range), edit.text);\n        }\n        let selectionIsSet = false;\n        if (Array.isArray(this._edits) && this._edits.length === 1 && this._initialSelection.isEmpty()) {\n            if (this._edits[0].range.startColumn === this._initialSelection.endColumn &&\n                this._edits[0].range.startLineNumber === this._initialSelection.endLineNumber) {\n                selectionIsSet = true;\n                this._selectionId = builder.trackSelection(this._initialSelection, true);\n            }\n            else if (this._edits[0].range.endColumn === this._initialSelection.startColumn &&\n                this._edits[0].range.endLineNumber === this._initialSelection.startLineNumber) {\n                selectionIsSet = true;\n                this._selectionId = builder.trackSelection(this._initialSelection, false);\n            }\n        }\n        if (!selectionIsSet) {\n            this._selectionId = builder.trackSelection(this._initialSelection);\n        }\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._selectionId);\n    }\n}\nlet AutoIndentOnPaste = class AutoIndentOnPaste {\n    constructor(editor, _languageConfigurationService) {\n        this.editor = editor;\n        this._languageConfigurationService = _languageConfigurationService;\n        this.callOnDispose = new DisposableStore();\n        this.callOnModel = new DisposableStore();\n        this.callOnDispose.add(editor.onDidChangeConfiguration(() => this.update()));\n        this.callOnDispose.add(editor.onDidChangeModel(() => this.update()));\n        this.callOnDispose.add(editor.onDidChangeModelLanguage(() => this.update()));\n    }\n    update() {\n        // clean up\n        this.callOnModel.clear();\n        // we are disabled\n        if (this.editor.getOption(12 /* EditorOption.autoIndent */) < 4 /* EditorAutoIndentStrategy.Full */ || this.editor.getOption(55 /* EditorOption.formatOnPaste */)) {\n            return;\n        }\n        // no model\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        this.callOnModel.add(this.editor.onDidPaste(({ range }) => {\n            this.trigger(range);\n        }));\n    }\n    trigger(range) {\n        const selections = this.editor.getSelections();\n        if (selections === null || selections.length > 1) {\n            return;\n        }\n        const model = this.editor.getModel();\n        if (!model) {\n            return;\n        }\n        if (!model.tokenization.isCheapToTokenize(range.getStartPosition().lineNumber)) {\n            return;\n        }\n        const autoIndent = this.editor.getOption(12 /* EditorOption.autoIndent */);\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\n        const textEdits = [];\n        const indentConverter = {\n            shiftIndent: (indentation) => {\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            },\n            unshiftIndent: (indentation) => {\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            }\n        };\n        let startLineNumber = range.startLineNumber;\n        while (startLineNumber <= range.endLineNumber) {\n            if (this.shouldIgnoreLine(model, startLineNumber)) {\n                startLineNumber++;\n                continue;\n            }\n            break;\n        }\n        if (startLineNumber > range.endLineNumber) {\n            return;\n        }\n        let firstLineText = model.getLineContent(startLineNumber);\n        if (!/\\S/.test(firstLineText.substring(0, range.startColumn - 1))) {\n            const indentOfFirstLine = getGoodIndentForLine(autoIndent, model, model.getLanguageId(), startLineNumber, indentConverter, this._languageConfigurationService);\n            if (indentOfFirstLine !== null) {\n                const oldIndentation = strings.getLeadingWhitespace(firstLineText);\n                const newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\n                const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                if (newSpaceCnt !== oldSpaceCnt) {\n                    const newIndent = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                    textEdits.push({\n                        range: new Range(startLineNumber, 1, startLineNumber, oldIndentation.length + 1),\n                        text: newIndent\n                    });\n                    firstLineText = newIndent + firstLineText.substr(oldIndentation.length);\n                }\n                else {\n                    const indentMetadata = getIndentMetadata(model, startLineNumber, this._languageConfigurationService);\n                    if (indentMetadata === 0 || indentMetadata === 8 /* IndentConsts.UNINDENT_MASK */) {\n                        // we paste content into a line where only contains whitespaces\n                        // after pasting, the indentation of the first line is already correct\n                        // the first line doesn't match any indentation rule\n                        // then no-op.\n                        return;\n                    }\n                }\n            }\n        }\n        const firstLineNumber = startLineNumber;\n        // ignore empty or ignored lines\n        while (startLineNumber < range.endLineNumber) {\n            if (!/\\S/.test(model.getLineContent(startLineNumber + 1))) {\n                startLineNumber++;\n                continue;\n            }\n            break;\n        }\n        if (startLineNumber !== range.endLineNumber) {\n            const virtualModel = {\n                tokenization: {\n                    getLineTokens: (lineNumber) => {\n                        return model.tokenization.getLineTokens(lineNumber);\n                    },\n                    getLanguageId: () => {\n                        return model.getLanguageId();\n                    },\n                    getLanguageIdAtPosition: (lineNumber, column) => {\n                        return model.getLanguageIdAtPosition(lineNumber, column);\n                    },\n                },\n                getLineContent: (lineNumber) => {\n                    if (lineNumber === firstLineNumber) {\n                        return firstLineText;\n                    }\n                    else {\n                        return model.getLineContent(lineNumber);\n                    }\n                }\n            };\n            const indentOfSecondLine = getGoodIndentForLine(autoIndent, virtualModel, model.getLanguageId(), startLineNumber + 1, indentConverter, this._languageConfigurationService);\n            if (indentOfSecondLine !== null) {\n                const newSpaceCntOfSecondLine = indentUtils.getSpaceCnt(indentOfSecondLine, tabSize);\n                const oldSpaceCntOfSecondLine = indentUtils.getSpaceCnt(strings.getLeadingWhitespace(model.getLineContent(startLineNumber + 1)), tabSize);\n                if (newSpaceCntOfSecondLine !== oldSpaceCntOfSecondLine) {\n                    const spaceCntOffset = newSpaceCntOfSecondLine - oldSpaceCntOfSecondLine;\n                    for (let i = startLineNumber + 1; i <= range.endLineNumber; i++) {\n                        const lineContent = model.getLineContent(i);\n                        const originalIndent = strings.getLeadingWhitespace(lineContent);\n                        const originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\n                        const newSpacesCnt = originalSpacesCnt + spaceCntOffset;\n                        const newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\n                        if (newIndent !== originalIndent) {\n                            textEdits.push({\n                                range: new Range(i, 1, i, originalIndent.length + 1),\n                                text: newIndent\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        if (textEdits.length > 0) {\n            this.editor.pushUndoStop();\n            const cmd = new AutoIndentOnPasteCommand(textEdits, this.editor.getSelection());\n            this.editor.executeCommand('autoIndentOnPaste', cmd);\n            this.editor.pushUndoStop();\n        }\n    }\n    shouldIgnoreLine(model, lineNumber) {\n        model.tokenization.forceTokenization(lineNumber);\n        const nonWhitespaceColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        if (nonWhitespaceColumn === 0) {\n            return true;\n        }\n        const tokens = model.tokenization.getLineTokens(lineNumber);\n        if (tokens.getCount() > 0) {\n            const firstNonWhitespaceTokenIndex = tokens.findTokenIndexAtOffset(nonWhitespaceColumn);\n            if (firstNonWhitespaceTokenIndex >= 0 && tokens.getStandardTokenType(firstNonWhitespaceTokenIndex) === 1 /* StandardTokenType.Comment */) {\n                return true;\n            }\n        }\n        return false;\n    }\n    dispose() {\n        this.callOnDispose.dispose();\n        this.callOnModel.dispose();\n    }\n};\nAutoIndentOnPaste.ID = 'editor.contrib.autoIndentOnPaste';\nAutoIndentOnPaste = __decorate([\n    __param(1, ILanguageConfigurationService)\n], AutoIndentOnPaste);\nexport { AutoIndentOnPaste };\nfunction getIndentationEditOperations(model, builder, tabSize, tabsToSpaces) {\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n        // Model is empty\n        return;\n    }\n    let spaces = '';\n    for (let i = 0; i < tabSize; i++) {\n        spaces += ' ';\n    }\n    const spacesRegExp = new RegExp(spaces, 'gi');\n    for (let lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++) {\n        let lastIndentationColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        if (lastIndentationColumn === 0) {\n            lastIndentationColumn = model.getLineMaxColumn(lineNumber);\n        }\n        if (lastIndentationColumn === 1) {\n            continue;\n        }\n        const originalIndentationRange = new Range(lineNumber, 1, lineNumber, lastIndentationColumn);\n        const originalIndentation = model.getValueInRange(originalIndentationRange);\n        const newIndentation = (tabsToSpaces\n            ? originalIndentation.replace(/\\t/ig, spaces)\n            : originalIndentation.replace(spacesRegExp, '\\t'));\n        builder.addEditOperation(originalIndentationRange, newIndentation);\n    }\n}\nexport class IndentationToSpacesCommand {\n    constructor(selection, tabSize) {\n        this.selection = selection;\n        this.tabSize = tabSize;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        this.selectionId = builder.trackSelection(this.selection);\n        getIndentationEditOperations(model, builder, this.tabSize, true);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n}\nexport class IndentationToTabsCommand {\n    constructor(selection, tabSize) {\n        this.selection = selection;\n        this.tabSize = tabSize;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        this.selectionId = builder.trackSelection(this.selection);\n        getIndentationEditOperations(model, builder, this.tabSize, false);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n}\nregisterEditorContribution(AutoIndentOnPaste.ID, AutoIndentOnPaste, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(IndentationToSpacesAction);\nregisterEditorAction(IndentationToTabsAction);\nregisterEditorAction(IndentUsingTabs);\nregisterEditorAction(IndentUsingSpaces);\nregisterEditorAction(ChangeTabDisplaySize);\nregisterEditorAction(DetectIndentation);\nregisterEditorAction(ReindentLinesAction);\nregisterEditorAction(ReindentSelectedLinesAction);\n"],"names":["ContentHoverController_1","ContentHoverWidget_1","ResizableContentWidget","_Disposable","_inherits","_super","_createSuper","_editor","_this","minimumSize","arguments","length","undefined","dom","Dimension","_classCallCheck","call","allowEditorOverflow","suppressMouseDown","_resizableNode","_register","ResizableHTMLElement","_contentPosition","_isResizing","domNode","style","position","minSize","lift","layout","height","width","enableSashes","onDidResize","e","_resize","dimension","done","onDidWillResize","_createClass","key","get","this","value","_a","Position","editorDomNode","getDomNode","mouseBox","getScrolledVisiblePosition","getDomNodePagePosition","top","editorBox","bodyBox","getClientArea","ownerDocument","body","mouseBottom","widgetHeight","showAtPosition","_b","renderingAbove","maxHeightBelow","Math","min","_availableVerticalSpaceBelow","Infinity","maxHeightAbove","_availableVerticalSpaceAbove","maxHeight","max","getOption","above","Disposable","__decorate","decorators","target","desc","d","c","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","$","ContentHoverController","_instantiationService","_keybindingService","_currentResult","_widget","createInstance","ContentHoverWidget","_participants","_step","_iterator","_createForOfIteratorHelper","HoverParticipantRegistry","getAll","s","n","participant","push","err","f","sort","p1","p2","hoverOrdinal","_computer","ContentHoverComputer","_hoverOperation","HoverOperation","onResult","result","anchor","messages","hasLoadingMessage","_addLoadingMessage","_withResult","HoverResult","isComplete","addStandardDisposableListener","equals","hide","TokenizationRegistry","onDidChange","_setCurrentResult","mouseEvent","isResizing","_step2","anchorCandidates","_iterator2","suggestHoverAnchor","type","HoverRangeAnchor","range","event","posx","posy","epsilon","typicalHalfwidthCharacterWidth","detail","isAfterLines","horizontalDistanceToText","_startShowingOrUpdateHover","a","b","priority","mode","source","focus","sticky","isMouseGettingCloser","_startHoverOperationIfNecessary","canAdoptVisibleHover","filter","insistOnKeepingHoverVisible","cancel","shouldFocus","start","hoverResult","_renderMessages","isColorPickerVisible","isVisibleFromKeyboard","isVisible","isFocused","node","contains","_step3","_iterator3","createLoadingMessage","loadingMessage","slice","concat","_step4","_this2","_ContentHoverControll","computeHoverRanges","showAtSecondaryPosition","highlightRange","disposables","DisposableStore","statusBar","add","EditorHoverStatusBar","fragment","document","createDocumentFragment","colorPicker","context","setColorPicker","widget","onContentsChanged","setMinimumDimensions","dimensions","_iterator4","_loop","hoverParts","msg","owner","renderHoverParts","isBeforeContent","some","m","hasContent","appendChild","hoverElement","hasChildNodes","highlightDecoration","createDecorationsCollection","set","options","_DECORATION_OPTIONS","toDisposable","clear","showAt","ContentHoverVisibleData","initialMousePosX","initialMousePosY","dispose","scrollUp","scrollDown","scrollLeft","scrollRight","pageUp","pageDown","goToTop","goToBottom","editor","anchorRange","startColumnBoundary","hasModel","viewModel","_getViewModel","coordinatesConverter","anchorViewRange","convertModelRangeToViewRange","anchorViewRangeStart","startLineNumber","getLineMinColumn","convertViewPositionToModelPosition","column","_step5","anchorLineNumber","renderStartColumn","startColumn","forceShowAtRange","_iterator5","Range","plusRange","endLineNumber","getStartPosition","ModelDecorationOptions","register","description","className","IInstantiationService","IKeybindingService","filteredMessages","isValidForHoverAnchor","FilteredHoverResult","_HoverResult","_super2","original","_this3","preferAbove","stoleFocus","closestMouseDistance","_ResizableContentWidg","_super3","contextKeyService","_configurationService","_accessibilityService","_this4","minimumHeight","_hover","HoverWidget","_minimumSize","_hoverVisibleKey","EditorContextKeys","hoverVisible","bindTo","_hoverFocusedKey","hoverFocused","append","containerDomNode","zIndex","onDidLayoutChange","_layout","onDidChangeConfiguration","hasChanged","_updateFont","focusTracker","trackFocus","onDidFocus","onDidBlur","_setHoverData","addContentWidget","_assertThisInitialized","Boolean","_visibleData","_get","_getPrototypeOf","prototype","removeContentWidget","ID","contentsDomNode","_applyDimensions","_setContentsDomNodeDimensions","_setContainerDomNodeDimensions","_layoutContentWidget","_applyMaxDimensions","setProperty","scrollDimensions","scrollbar","getScrollDimensions","scrollWidth","extraBottomPadding","horizontalScrollbarSize","paddingBottom","size","_setHoverWidgetMaxDimensions","_setHoverWidgetDimensions","_hasHorizontalScrollbar","_adjustContentsBottomPadding","maxRenderingWidth","_findMaximumRenderingWidth","maxRenderingHeight","_findMaximumRenderingHeight","maxSize","_lastDimensions","_setAdjustedHoverWidgetDimensions","_updateResizableNodeMaxDimensions","scanDomNode","layoutContentWidget","_positionPreference","availableSpace","_findAvailableSpaceVertically","maximumHeight","Array","from","children","forEach","hoverPart","clientHeight","overflowing","clientWidth","removeProperty","_isHoverTextOverflowing","initialWidth","_contentWidth","widgetRect","computeDistanceFromPointToRectangle","left","distance","hoverData","classList","toggle","_this$_editor$getOpti","fontSize","lineHeight","_updateMaxDimensions","_this5","getElementsByClassName","applyFontInfo","textContent","getLayoutInfo","_updateContent","render","secondaryPosition","positionAffinity","preference","_c","_d","_render","getTotalHeight","widgetPosition","_findPositionPreference","accessibleViewHint","getHoverAccessibleViewHint","getValue","isScreenReaderOptimized","lookupKeybinding","getAriaLabel","ariaLabel","clearSashHoverState","layoutInfo","getTotalWidth","_updateMinimumWidth","_removeConstraintsRenderNormally","_adjustHoverHeightForScrollbar","scrollTop","getScrollPosition","fontInfo","setScrollPosition","scrollHeight","container","transformedWidth","transformedHeight","maxWidth","IContextKeyService","IConfigurationService","IAccessibilityService","_Disposable2","_super4","_this6","_hasContent","actionsElement","actionOptions","keybinding","commandId","keybindingLabel","getLabel","HoverAction","element","_anchor","_shouldFocus","_source","_insistOnKeepingHoverVisible","token","AsyncIterableObject","EMPTY","lineDecorations","_getLineDecorations","merge","map","computeAsync","_step6","_iterator6","computeSync","coalesce","supportsMarkerHover","model","getModel","lineNumber","getLineCount","maxColumn","getLineMaxColumn","getLineDecorations","isWholeLine","endColumn","showIfCollapsed","pointX","pointY","x","y","dx","abs","dy","sqrt","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","then","apply","HoverProviderResult","provider","hover","ordinal","getHover","registry","promises","ordered","index","_regeneratorRuntime","mark","_callee","wrap","_context","prev","provideHover","sent","isValid","abrupt","t0","onUnexpectedExternalError","stop","executeProvider","fromPromises","hasRange","hasHtmlContent","contents","registerModelAndPositionCommand","accessor","item","toPromise","getHoverPromise","ILanguageFeaturesService","hoverProvider","CancellationToken","None","MarginHoverWidget","languageService","openerService","_renderDisposeables","_isVisible","_messages","_markdownRenderer","MarkdownRenderer","MarginHoverComputer","onDidChangeModelDecorations","_onModelDecorationsChanged","addOverlayWidget","removeOverlayWidget","markdownHoverElement","hoverContentsElement","renderedContents","_updateContents","_showAt","editorLayout","topForLineNumber","getTopForLineNumber","editorScrollTop","getScrollTop","glyphMarginLeft","glyphMarginWidth","round","_lineNumber","toHoverMessage","glyphMarginClassName","hoverMessage","glyphMarginHoverMessage","isEmptyMarkdownString","_toConsumableArray","asArray","MarkerHover","marker","markerCodeActionTrigger","include","CodeActionKind","QuickFix","triggerAction","CodeActionTriggerSource","QuickFixHover","MarkerHoverParticipant","_markerDecorationsService","_openerService","_languageFeaturesService","recentMarkerCodeActionsInfo","getMarker","uri","renderMarkerHover","markerHoverForStatusbar","MarkerSeverity","compare","severity","renderMarkerStatusbar","markerHover","markerElement","_markerHover$marker","message","code","relatedInformation","messageElement","whiteSpace","innerText","sourceAndCodeElement","codeLink","setAttribute","toString","addDisposableListener","open","allowCommands","preventDefault","stopPropagation","detailsElement","opacity","paddingLeft","isNonEmptyArray","_step2$value","resource","relatedInfoContainer","marginTop","basename","cursor","fromUserGesture","editorOptions","selection","catch","onUnexpectedError","Error","Warning","Info","addAction","label","nls","NextMarkerAction","run","MarkerController","showAtMarker","quickfixPlaceholderElement","IMarkerData","makeKey","hasCodeActions","updatePlaceholderDisposable","disposableTimeout","String","fromCharCode","codeActionsPromise","getCodeActions","actions","validActions","display","showing","quickFixCommandId","controller","CodeActionController","elementPosition","showCodeActions","createCancelablePromise","cancellationToken","codeActionProvider","Progress","IMarkerDecorationsService","IOpenerService","ModesHoverController_1","_sticky","ModesHoverController","_languageService","_toUnhook","_hoverActivatedByColorDecoratorClick","_isMouseDown","_hoverClicked","_contentWidget","_glyphWidget","_reactToEditorMouseMoveRunner","RunOnceScheduler","_reactToEditorMouseMove","_mouseMoveEvent","_hookEvents","_unhookEvents","onMouseLeave","hoverOpts","_isHoverEnabled","enabled","_isHoverSticky","_hidingDelay","hidingDelay","onMouseDown","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onMouseMove","_onEditorMouseMove","onKeyDown","_onKeyDown","_onEditorMouseLeave","onDidChangeModel","_hideWidgets","onDidScrollChange","_onEditorScrollChanged","scrollTopChanged","scrollLeftChanged","targetEm","browserEvent","relatedTarget","containsNode","_e","view","activeElement","getSelection","isCollapsed","_isMouseOverWidget","isScheduled","schedule","mouseOnDecorator","decoratorActivatedOn","_getOrCreateContentWidget","maybeShowAt","startShowingAt","resolvedKeyboardEvent","softDispatch","mightTriggerFocus","kind","keyCode","InlineSuggestionHintsContentWidget","dropDownVisible","activatedByColorDecoratorClick","startShowingAtRange","getContribution","ILanguageService","ShowOrFocusHoverAction","_EditorAction","id","comment","args","name","schema","properties","default","alias","precondition","kbOpts","kbExpr","editorTextFocus","primary","KeyChord","weight","getPosition","isHoverVisible","showContentHover","EditorAction","ShowDefinitionPreviewHoverAction","_EditorAction2","goto","GotoDefinitionAtPositionEditorContribution","startFindDefinitionFromCursor","ScrollUpHoverAction","_EditorAction3","ScrollDownHoverAction","_EditorAction4","_super5","ScrollLeftHoverAction","_EditorAction5","_super6","ScrollRightHoverAction","_EditorAction6","_super7","PageUpHoverAction","_EditorAction7","_super8","secondary","PageDownHoverAction","_EditorAction8","_super9","GoToTopHoverAction","_EditorAction9","_super10","GoToBottomHoverAction","_EditorAction10","_super11","registerEditorContribution","registerEditorAction","MarkdownHoverParticipant","registerThemingParticipant","theme","collector","hoverBorder","getColor","editorHoverBorder","addRule","transparent","__asyncValues","o","Symbol","asyncIterator","TypeError","__values","iterator","verb","v","settle","_onResult","Emitter","_firstWaitScheduler","_triggerAsyncComputation","_secondWaitScheduler","_triggerSyncComputation","_loadingMessageScheduler","_triggerLoadingMessage","_state","_asyncIterable","_asyncIterableDone","_result","delay","_hoverTime","_firstWaitTime","state","fireResult","_fireResult","_setState","_secondWaitTime","createCancelableAsyncIterable","e_1","_f","error","return","finish","t1","fire","_loadingMessageTime","other","equalsRange","lastAnchor","HoverForeignElementAnchor","ctor","MarkdownHover","MarkdownString","appendText","lineLength","getLineLength","languageId","getLanguageIdAtPosition","stopRenderingLineAfter","maxTokenizationLineLength","overrideIdentifier","stopRenderingMessage","beforeContentClassName","has","rng","renderMarkdownHovers","renderer","onDidRenderAsync","InPlaceReplaceController_1","InPlaceReplaceCommand","editRange","originalSelection","text","_editRange","_originalSelection","_text","builder","addTrackedEditOperation","helper","srcRange","getInverseEditOperations","isEmpty","Selection","positionColumn","InPlaceReplaceController","editorWorkerService","decorations","up","currentRequest","editorSelection","EditorState","modelURI","canNavigateValueSet","navigateValueSet","validate","diff","command","pushUndoStop","executeCommand","DECORATION","decorationRemover","timeout","IEditorWorkerService","InPlaceReplaceUp","writable","InPlaceReplaceDown","getSpaceCnt","str","tabSize","spacesCnt","charAt","generateIndent","insertSpaces","tabsCnt","floor","getReindentEditOperations","languageConfigurationService","inheritedIndent","indentationRules","getLanguageConfiguration","getLanguageId","unIndentedLinePattern","getLineContent","test","globalIndent","_model$getOptions","getOptions","indentSize","shiftIndent","indentation","count","ShiftCommand","unshiftIndent","indentEdits","currentLineText","adjustedLineContent","oldIndentation","strings","substring","decreaseIndentPattern","EditOperation","replaceMove","normalizeIndentation","idealIndentForNextLine","increaseIndentPattern","indentNextLinePattern","IndentationToSpacesAction","modelOpts","IndentationToSpacesCommand","executeCommands","updateOptions","IndentationToTabsAction","IndentationToTabsCommand","ChangeIndentationSizeAction","displaySizeOnly","opts","quickInputService","IQuickInputService","modelService","IModelService","creationOpts","getCreationOptions","isForSimpleWidget","picks","autoFocusIndex","setTimeout","pick","placeHolder","activeItem","isDisposed","pickedVal","parseInt","IndentUsingTabs","_ChangeIndentationSiz","IndentUsingSpaces","_ChangeIndentationSiz2","ChangeTabDisplaySize","_ChangeIndentationSiz3","DetectIndentation","detectIndentation","ReindentLinesAction","ILanguageConfigurationService","edits","executeEdits","ReindentSelectedLinesAction","selections","getSelections","editOperations","AutoIndentOnPasteCommand","initialSelection","_initialSelection","_edits","_selectionId","edit","addEditOperation","selectionIsSet","isArray","trackSelection","getTrackedSelection","AutoIndentOnPaste","_languageConfigurationService","callOnDispose","callOnModel","update","onDidChangeModelLanguage","onDidPaste","_ref","trigger","tokenization","isCheapToTokenize","autoIndent","_model$getOptions2","textEdits","indentConverter","shouldIgnoreLine","firstLineText","indentOfFirstLine","getGoodIndentForLine","newSpaceCnt","indentUtils","newIndent","substr","indentMetadata","getIndentMetadata","firstLineNumber","virtualModel","getLineTokens","indentOfSecondLine","newSpaceCntOfSecondLine","oldSpaceCntOfSecondLine","spaceCntOffset","lineContent","originalIndent","newSpacesCnt","cmd","forceTokenization","nonWhitespaceColumn","getLineFirstNonWhitespaceColumn","tokens","getCount","firstNonWhitespaceTokenIndex","findTokenIndexAtOffset","getStandardTokenType","getIndentationEditOperations","tabsToSpaces","spaces","spacesRegExp","RegExp","lineCount","lastIndentationColumn","originalIndentationRange","originalIndentation","getValueInRange","newIndentation","replace","selectionId"],"sourceRoot":""}