{"version":3,"file":"static/js/monaco-editor-vendor.d4d9fc54.372dd9cf.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHints.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsController.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsContribution.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsLocations.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/consts.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/utils.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostText.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionToGhostText.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/suggestWidgetInlineCompletionProvider.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/suggestWidgetPreviewModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextController.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextHoverParticipant.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostText.contribution.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineSuggestionHintsWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/lineSelection/browser/lineSelection.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/copyLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/moveLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/sortLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/linesOperations.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linkedEditing/browser/linkedEditing.js","../node_modules/monaco-editor/esm/vs/editor/contrib/links/browser/getLinks.js","../node_modules/monaco-editor/esm/vs/editor/contrib/links/browser/links.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { URI } from '../../../../base/common/uri.js';\nexport class InlayHintAnchor {\n    constructor(range, direction) {\n        this.range = range;\n        this.direction = direction;\n    }\n}\nexport class InlayHintItem {\n    constructor(hint, anchor, provider) {\n        this.hint = hint;\n        this.anchor = anchor;\n        this.provider = provider;\n        this._isResolved = false;\n    }\n    with(delta) {\n        const result = new InlayHintItem(this.hint, delta.anchor, this.provider);\n        result._isResolved = this._isResolved;\n        result._currentResolve = this._currentResolve;\n        return result;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.provider.resolveInlayHint !== 'function') {\n                return;\n            }\n            if (this._currentResolve) {\n                // wait for an active resolve operation and try again\n                // when that's done.\n                yield this._currentResolve;\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                return this.resolve(token);\n            }\n            if (!this._isResolved) {\n                this._currentResolve = this._doResolve(token)\n                    .finally(() => this._currentResolve = undefined);\n            }\n            yield this._currentResolve;\n        });\n    }\n    _doResolve(token) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const newHint = yield Promise.resolve(this.provider.resolveInlayHint(this.hint, token));\n                this.hint.tooltip = (_a = newHint === null || newHint === void 0 ? void 0 : newHint.tooltip) !== null && _a !== void 0 ? _a : this.hint.tooltip;\n                this.hint.label = (_b = newHint === null || newHint === void 0 ? void 0 : newHint.label) !== null && _b !== void 0 ? _b : this.hint.label;\n                this._isResolved = true;\n            }\n            catch (err) {\n                onUnexpectedExternalError(err);\n                this._isResolved = false;\n            }\n        });\n    }\n}\nexport class InlayHintsFragments {\n    static create(registry, model, ranges, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = [];\n            const promises = registry.ordered(model).reverse().map(provider => ranges.map((range) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const result = yield provider.provideInlayHints(model, range, token);\n                    if (result === null || result === void 0 ? void 0 : result.hints.length) {\n                        data.push([result, provider]);\n                    }\n                }\n                catch (err) {\n                    onUnexpectedExternalError(err);\n                }\n            })));\n            yield Promise.all(promises.flat());\n            if (token.isCancellationRequested || model.isDisposed()) {\n                throw new CancellationError();\n            }\n            return new InlayHintsFragments(ranges, data, model);\n        });\n    }\n    constructor(ranges, data, model) {\n        this._disposables = new DisposableStore();\n        this.ranges = ranges;\n        this.provider = new Set();\n        const items = [];\n        for (const [list, provider] of data) {\n            this._disposables.add(list);\n            this.provider.add(provider);\n            for (const hint of list.hints) {\n                // compute the range to which the item should be attached to\n                const position = model.validatePosition(hint.position);\n                let direction = 'before';\n                const wordRange = InlayHintsFragments._getRangeAtPosition(model, position);\n                let range;\n                if (wordRange.getStartPosition().isBefore(position)) {\n                    range = Range.fromPositions(wordRange.getStartPosition(), position);\n                    direction = 'after';\n                }\n                else {\n                    range = Range.fromPositions(position, wordRange.getEndPosition());\n                    direction = 'before';\n                }\n                items.push(new InlayHintItem(hint, new InlayHintAnchor(range, direction), provider));\n            }\n        }\n        this.items = items.sort((a, b) => Position.compare(a.hint.position, b.hint.position));\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    static _getRangeAtPosition(model, position) {\n        const line = position.lineNumber;\n        const word = model.getWordAtPosition(position);\n        if (word) {\n            // always prefer the word range\n            return new Range(line, word.startColumn, line, word.endColumn);\n        }\n        model.tokenization.tokenizeIfCheap(line);\n        const tokens = model.tokenization.getLineTokens(line);\n        const offset = position.column - 1;\n        const idx = tokens.findTokenIndexAtOffset(offset);\n        let start = tokens.getStartOffset(idx);\n        let end = tokens.getEndOffset(idx);\n        if (end - start === 1) {\n            // single character token, when at its end try leading/trailing token instead\n            if (start === offset && idx > 1) {\n                // leading token\n                start = tokens.getStartOffset(idx - 1);\n                end = tokens.getEndOffset(idx - 1);\n            }\n            else if (end === offset && idx < tokens.getCount() - 1) {\n                // trailing token\n                start = tokens.getStartOffset(idx + 1);\n                end = tokens.getEndOffset(idx + 1);\n            }\n        }\n        return new Range(line, start + 1, line, end + 1);\n    }\n}\nexport function asCommandLink(command) {\n    return URI.from({\n        scheme: Schemas.command,\n        path: command.id,\n        query: command.arguments && encodeURIComponent(JSON.stringify(command.arguments))\n    }).toString();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ModifierKeyEmitter } from '../../../../base/browser/dom.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DynamicCssRules } from '../../../browser/editorDom.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { EDITOR_FONT_DEFAULTS } from '../../../common/config/editorOptions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport * as languages from '../../../common/languages.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { InlayHintAnchor, InlayHintsFragments } from './inlayHints.js';\nimport { goToDefinitionWithLocation, showGoToContextMenu } from './inlayHintsLocations.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport * as colors from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\n// --- hint caching service (per session)\nclass InlayHintsCache {\n    constructor() {\n        this._entries = new LRUCache(50);\n    }\n    get(model) {\n        const key = InlayHintsCache._key(model);\n        return this._entries.get(key);\n    }\n    set(model, value) {\n        const key = InlayHintsCache._key(model);\n        this._entries.set(key, value);\n    }\n    static _key(model) {\n        return `${model.uri.toString()}/${model.getVersionId()}`;\n    }\n}\nconst IInlayHintsCache = createDecorator('IInlayHintsCache');\nregisterSingleton(IInlayHintsCache, InlayHintsCache, 1 /* InstantiationType.Delayed */);\n// --- rendered label\nexport class RenderedInlayHintLabelPart {\n    constructor(item, index) {\n        this.item = item;\n        this.index = index;\n    }\n    get part() {\n        const label = this.item.hint.label;\n        if (typeof label === 'string') {\n            return { label };\n        }\n        else {\n            return label[this.index];\n        }\n    }\n}\nclass ActiveInlayHintInfo {\n    constructor(part, hasTriggerModifier) {\n        this.part = part;\n        this.hasTriggerModifier = hasTriggerModifier;\n    }\n}\n// --- controller\nlet InlayHintsController = class InlayHintsController {\n    static get(editor) {\n        var _a;\n        return (_a = editor.getContribution(InlayHintsController.ID)) !== null && _a !== void 0 ? _a : undefined;\n    }\n    constructor(_editor, _languageFeaturesService, _featureDebounce, _inlayHintsCache, _commandService, _notificationService, _instaService) {\n        this._editor = _editor;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._inlayHintsCache = _inlayHintsCache;\n        this._commandService = _commandService;\n        this._notificationService = _notificationService;\n        this._instaService = _instaService;\n        this._disposables = new DisposableStore();\n        this._sessionDisposables = new DisposableStore();\n        this._decorationsMetadata = new Map();\n        this._ruleFactory = new DynamicCssRules(this._editor);\n        this._activeRenderMode = 0 /* RenderMode.Normal */;\n        this._debounceInfo = _featureDebounce.for(_languageFeaturesService.inlayHintsProvider, 'InlayHint', { min: 25 });\n        this._disposables.add(_languageFeaturesService.inlayHintsProvider.onDidChange(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModel(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModelLanguage(() => this._update()));\n        this._disposables.add(_editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(134 /* EditorOption.inlayHints */)) {\n                this._update();\n            }\n        }));\n        this._update();\n    }\n    dispose() {\n        this._sessionDisposables.dispose();\n        this._removeAllDecorations();\n        this._disposables.dispose();\n    }\n    _update() {\n        this._sessionDisposables.clear();\n        this._removeAllDecorations();\n        const options = this._editor.getOption(134 /* EditorOption.inlayHints */);\n        if (options.enabled === 'off') {\n            return;\n        }\n        const model = this._editor.getModel();\n        if (!model || !this._languageFeaturesService.inlayHintsProvider.has(model)) {\n            return;\n        }\n        // iff possible, quickly update from cache\n        const cached = this._inlayHintsCache.get(model);\n        if (cached) {\n            this._updateHintsDecorators([model.getFullModelRange()], cached);\n        }\n        this._sessionDisposables.add(toDisposable(() => {\n            // cache items when switching files etc\n            if (!model.isDisposed()) {\n                this._cacheHintsForFastRestore(model);\n            }\n        }));\n        let cts;\n        const watchedProviders = new Set();\n        const scheduler = new RunOnceScheduler(() => __awaiter(this, void 0, void 0, function* () {\n            const t1 = Date.now();\n            cts === null || cts === void 0 ? void 0 : cts.dispose(true);\n            cts = new CancellationTokenSource();\n            const listener = model.onWillDispose(() => cts === null || cts === void 0 ? void 0 : cts.cancel());\n            try {\n                const myToken = cts.token;\n                const inlayHints = yield InlayHintsFragments.create(this._languageFeaturesService.inlayHintsProvider, model, this._getHintsRanges(), myToken);\n                scheduler.delay = this._debounceInfo.update(model, Date.now() - t1);\n                if (myToken.isCancellationRequested) {\n                    inlayHints.dispose();\n                    return;\n                }\n                // listen to provider changes\n                for (const provider of inlayHints.provider) {\n                    if (typeof provider.onDidChangeInlayHints === 'function' && !watchedProviders.has(provider)) {\n                        watchedProviders.add(provider);\n                        this._sessionDisposables.add(provider.onDidChangeInlayHints(() => {\n                            if (!scheduler.isScheduled()) { // ignore event when request is already scheduled\n                                scheduler.schedule();\n                            }\n                        }));\n                    }\n                }\n                this._sessionDisposables.add(inlayHints);\n                this._updateHintsDecorators(inlayHints.ranges, inlayHints.items);\n                this._cacheHintsForFastRestore(model);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                cts.dispose();\n                listener.dispose();\n            }\n        }), this._debounceInfo.get(model));\n        this._sessionDisposables.add(scheduler);\n        this._sessionDisposables.add(toDisposable(() => cts === null || cts === void 0 ? void 0 : cts.dispose(true)));\n        scheduler.schedule(0);\n        this._sessionDisposables.add(this._editor.onDidScrollChange((e) => {\n            // update when scroll position changes\n            // uses scrollTopChanged has weak heuristic to differenatiate between scrolling due to\n            // typing or due to \"actual\" scrolling\n            if (e.scrollTopChanged || !scheduler.isScheduled()) {\n                scheduler.schedule();\n            }\n        }));\n        this._sessionDisposables.add(this._editor.onDidChangeModelContent((e) => {\n            // update less aggressive when typing\n            const delay = Math.max(scheduler.delay, 1250);\n            scheduler.schedule(delay);\n        }));\n        if (options.enabled === 'on') {\n            // different \"on\" modes: always\n            this._activeRenderMode = 0 /* RenderMode.Normal */;\n        }\n        else {\n            // different \"on\" modes: offUnlessPressed, or onUnlessPressed\n            let defaultMode;\n            let altMode;\n            if (options.enabled === 'onUnlessPressed') {\n                defaultMode = 0 /* RenderMode.Normal */;\n                altMode = 1 /* RenderMode.Invisible */;\n            }\n            else {\n                defaultMode = 1 /* RenderMode.Invisible */;\n                altMode = 0 /* RenderMode.Normal */;\n            }\n            this._activeRenderMode = defaultMode;\n            this._sessionDisposables.add(ModifierKeyEmitter.getInstance().event(e => {\n                if (!this._editor.hasModel()) {\n                    return;\n                }\n                const newRenderMode = e.altKey && e.ctrlKey && !(e.shiftKey || e.metaKey) ? altMode : defaultMode;\n                if (newRenderMode !== this._activeRenderMode) {\n                    this._activeRenderMode = newRenderMode;\n                    const model = this._editor.getModel();\n                    const copies = this._copyInlayHintsWithCurrentAnchor(model);\n                    this._updateHintsDecorators([model.getFullModelRange()], copies);\n                    scheduler.schedule(0);\n                }\n            }));\n        }\n        // mouse gestures\n        this._sessionDisposables.add(this._installDblClickGesture(() => scheduler.schedule(0)));\n        this._sessionDisposables.add(this._installLinkGesture());\n        this._sessionDisposables.add(this._installContextMenu());\n    }\n    _installLinkGesture() {\n        const store = new DisposableStore();\n        const gesture = store.add(new ClickLinkGesture(this._editor));\n        // let removeHighlight = () => { };\n        const sessionStore = new DisposableStore();\n        store.add(sessionStore);\n        store.add(gesture.onMouseMoveOrRelevantKeyDown(e => {\n            const [mouseEvent] = e;\n            const labelPart = this._getInlayHintLabelPart(mouseEvent);\n            const model = this._editor.getModel();\n            if (!labelPart || !model) {\n                sessionStore.clear();\n                return;\n            }\n            // resolve the item\n            const cts = new CancellationTokenSource();\n            sessionStore.add(toDisposable(() => cts.dispose(true)));\n            labelPart.item.resolve(cts.token);\n            // render link => when the modifier is pressed and when there is a command or location\n            this._activeInlayHintPart = labelPart.part.command || labelPart.part.location\n                ? new ActiveInlayHintInfo(labelPart, mouseEvent.hasTriggerModifier)\n                : undefined;\n            const lineNumber = model.validatePosition(labelPart.item.hint.position).lineNumber;\n            const range = new Range(lineNumber, 1, lineNumber, model.getLineMaxColumn(lineNumber));\n            const lineHints = this._getInlineHintsForRange(range);\n            this._updateHintsDecorators([range], lineHints);\n            sessionStore.add(toDisposable(() => {\n                this._activeInlayHintPart = undefined;\n                this._updateHintsDecorators([range], lineHints);\n            }));\n        }));\n        store.add(gesture.onCancel(() => sessionStore.clear()));\n        store.add(gesture.onExecute((e) => __awaiter(this, void 0, void 0, function* () {\n            const label = this._getInlayHintLabelPart(e);\n            if (label) {\n                const part = label.part;\n                if (part.location) {\n                    // location -> execute go to def\n                    this._instaService.invokeFunction(goToDefinitionWithLocation, e, this._editor, part.location);\n                }\n                else if (languages.Command.is(part.command)) {\n                    // command -> execute it\n                    yield this._invokeCommand(part.command, label.item);\n                }\n            }\n        })));\n        return store;\n    }\n    _getInlineHintsForRange(range) {\n        const lineHints = new Set();\n        for (const data of this._decorationsMetadata.values()) {\n            if (range.containsRange(data.item.anchor.range)) {\n                lineHints.add(data.item);\n            }\n        }\n        return Array.from(lineHints);\n    }\n    _installDblClickGesture(updateInlayHints) {\n        return this._editor.onMouseUp((e) => __awaiter(this, void 0, void 0, function* () {\n            if (e.event.detail !== 2) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (!part) {\n                return;\n            }\n            e.event.preventDefault();\n            yield part.item.resolve(CancellationToken.None);\n            if (isNonEmptyArray(part.item.hint.textEdits)) {\n                const edits = part.item.hint.textEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text));\n                this._editor.executeEdits('inlayHint.default', edits);\n                updateInlayHints();\n            }\n        }));\n    }\n    _installContextMenu() {\n        return this._editor.onContextMenu((e) => __awaiter(this, void 0, void 0, function* () {\n            if (!(e.event.target instanceof HTMLElement)) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (part) {\n                yield this._instaService.invokeFunction(showGoToContextMenu, this._editor, e.event.target, part);\n            }\n        }));\n    }\n    _getInlayHintLabelPart(e) {\n        var _a;\n        if (e.target.type !== 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return undefined;\n        }\n        const options = (_a = e.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n        if (options instanceof ModelDecorationInjectedTextOptions && (options === null || options === void 0 ? void 0 : options.attachedData) instanceof RenderedInlayHintLabelPart) {\n            return options.attachedData;\n        }\n        return undefined;\n    }\n    _invokeCommand(command, item) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._commandService.executeCommand(command.id, ...((_a = command.arguments) !== null && _a !== void 0 ? _a : []));\n            }\n            catch (err) {\n                this._notificationService.notify({\n                    severity: Severity.Error,\n                    source: item.provider.displayName,\n                    message: err\n                });\n            }\n        });\n    }\n    _cacheHintsForFastRestore(model) {\n        const hints = this._copyInlayHintsWithCurrentAnchor(model);\n        this._inlayHintsCache.set(model, hints);\n    }\n    // return inlay hints but with an anchor that reflects \"updates\"\n    // that happened after receiving them, e.g adding new lines before a hint\n    _copyInlayHintsWithCurrentAnchor(model) {\n        const items = new Map();\n        for (const [id, obj] of this._decorationsMetadata) {\n            if (items.has(obj.item)) {\n                // an inlay item can be rendered as multiple decorations\n                // but they will all uses the same range\n                continue;\n            }\n            const range = model.getDecorationRange(id);\n            if (range) {\n                // update range with whatever the editor has tweaked it to\n                const anchor = new InlayHintAnchor(range, obj.item.anchor.direction);\n                const copy = obj.item.with({ anchor });\n                items.set(obj.item, copy);\n            }\n        }\n        return Array.from(items.values());\n    }\n    _getHintsRanges() {\n        const extra = 30;\n        const model = this._editor.getModel();\n        const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\n        const result = [];\n        for (const range of visibleRanges.sort(Range.compareRangesUsingStarts)) {\n            const extendedRange = model.validateRange(new Range(range.startLineNumber - extra, range.startColumn, range.endLineNumber + extra, range.endColumn));\n            if (result.length === 0 || !Range.areIntersectingOrTouching(result[result.length - 1], extendedRange)) {\n                result.push(extendedRange);\n            }\n            else {\n                result[result.length - 1] = Range.plusRange(result[result.length - 1], extendedRange);\n            }\n        }\n        return result;\n    }\n    _updateHintsDecorators(ranges, items) {\n        var _a, _b;\n        // utils to collect/create injected text decorations\n        const newDecorationsData = [];\n        const addInjectedText = (item, ref, content, cursorStops, attachedData) => {\n            const opts = {\n                content,\n                inlineClassNameAffectsLetterSpacing: true,\n                inlineClassName: ref.className,\n                cursorStops,\n                attachedData\n            };\n            newDecorationsData.push({\n                item,\n                classNameRef: ref,\n                decoration: {\n                    range: item.anchor.range,\n                    options: {\n                        // className: \"rangeHighlight\", // DEBUG highlight to see to what range a hint is attached\n                        description: 'InlayHint',\n                        showIfCollapsed: item.anchor.range.isEmpty(),\n                        collapseOnReplaceEdit: !item.anchor.range.isEmpty(),\n                        stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n                        [item.anchor.direction]: this._activeRenderMode === 0 /* RenderMode.Normal */ ? opts : undefined\n                    }\n                }\n            });\n        };\n        const addInjectedWhitespace = (item, isLast) => {\n            const marginRule = this._ruleFactory.createClassNameRef({\n                width: `${(fontSize / 3) | 0}px`,\n                display: 'inline-block'\n            });\n            addInjectedText(item, marginRule, '\\u200a', isLast ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None);\n        };\n        //\n        const { fontSize, fontFamily, padding, isUniform } = this._getLayoutInfo();\n        const fontFamilyVar = '--code-editorInlayHintsFontFamily';\n        this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily);\n        for (const item of items) {\n            // whitespace leading the actual label\n            if (item.hint.paddingLeft) {\n                addInjectedWhitespace(item, false);\n            }\n            // the label with its parts\n            const parts = typeof item.hint.label === 'string'\n                ? [{ label: item.hint.label }]\n                : item.hint.label;\n            for (let i = 0; i < parts.length; i++) {\n                const part = parts[i];\n                const isFirst = i === 0;\n                const isLast = i === parts.length - 1;\n                const cssProperties = {\n                    fontSize: `${fontSize}px`,\n                    fontFamily: `var(${fontFamilyVar}), ${EDITOR_FONT_DEFAULTS.fontFamily}`,\n                    verticalAlign: isUniform ? 'baseline' : 'middle',\n                };\n                if (isNonEmptyArray(item.hint.textEdits)) {\n                    cssProperties.cursor = 'default';\n                }\n                this._fillInColors(cssProperties, item.hint);\n                if ((part.command || part.location) && ((_a = this._activeInlayHintPart) === null || _a === void 0 ? void 0 : _a.part.item) === item && this._activeInlayHintPart.part.index === i) {\n                    // active link!\n                    cssProperties.textDecoration = 'underline';\n                    if (this._activeInlayHintPart.hasTriggerModifier) {\n                        cssProperties.color = themeColorFromId(colors.editorActiveLinkForeground);\n                        cssProperties.cursor = 'pointer';\n                    }\n                }\n                if (padding) {\n                    if (isFirst && isLast) {\n                        // only element\n                        cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px`;\n                        cssProperties.borderRadius = `${(fontSize / 4) | 0}px`;\n                    }\n                    else if (isFirst) {\n                        // first element\n                        cssProperties.padding = `1px 0 1px ${Math.max(1, fontSize / 4) | 0}px`;\n                        cssProperties.borderRadius = `${(fontSize / 4) | 0}px 0 0 ${(fontSize / 4) | 0}px`;\n                    }\n                    else if (isLast) {\n                        // last element\n                        cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px 1px 0`;\n                        cssProperties.borderRadius = `0 ${(fontSize / 4) | 0}px ${(fontSize / 4) | 0}px 0`;\n                    }\n                    else {\n                        cssProperties.padding = `1px 0 1px 0`;\n                    }\n                }\n                addInjectedText(item, this._ruleFactory.createClassNameRef(cssProperties), fixSpace(part.label), isLast && !item.hint.paddingRight ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None, new RenderedInlayHintLabelPart(item, i));\n            }\n            // whitespace trailing the actual label\n            if (item.hint.paddingRight) {\n                addInjectedWhitespace(item, true);\n            }\n            if (newDecorationsData.length > InlayHintsController._MAX_DECORATORS) {\n                break;\n            }\n        }\n        // collect all decoration ids that are affected by the ranges\n        // and only update those decorations\n        const decorationIdsToReplace = [];\n        for (const range of ranges) {\n            for (const { id } of (_b = this._editor.getDecorationsInRange(range)) !== null && _b !== void 0 ? _b : []) {\n                const metadata = this._decorationsMetadata.get(id);\n                if (metadata) {\n                    decorationIdsToReplace.push(id);\n                    metadata.classNameRef.dispose();\n                    this._decorationsMetadata.delete(id);\n                }\n            }\n        }\n        const scrollState = StableEditorScrollState.capture(this._editor);\n        this._editor.changeDecorations(accessor => {\n            const newDecorationIds = accessor.deltaDecorations(decorationIdsToReplace, newDecorationsData.map(d => d.decoration));\n            for (let i = 0; i < newDecorationIds.length; i++) {\n                const data = newDecorationsData[i];\n                this._decorationsMetadata.set(newDecorationIds[i], data);\n            }\n        });\n        scrollState.restore(this._editor);\n    }\n    _fillInColors(props, hint) {\n        if (hint.kind === languages.InlayHintKind.Parameter) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintParameterBackground);\n            props.color = themeColorFromId(colors.editorInlayHintParameterForeground);\n        }\n        else if (hint.kind === languages.InlayHintKind.Type) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintTypeBackground);\n            props.color = themeColorFromId(colors.editorInlayHintTypeForeground);\n        }\n        else {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintBackground);\n            props.color = themeColorFromId(colors.editorInlayHintForeground);\n        }\n    }\n    _getLayoutInfo() {\n        const options = this._editor.getOption(134 /* EditorOption.inlayHints */);\n        const padding = options.padding;\n        const editorFontSize = this._editor.getOption(49 /* EditorOption.fontSize */);\n        const editorFontFamily = this._editor.getOption(46 /* EditorOption.fontFamily */);\n        let fontSize = options.fontSize;\n        if (!fontSize || fontSize < 5 || fontSize > editorFontSize) {\n            fontSize = editorFontSize;\n        }\n        const fontFamily = options.fontFamily || editorFontFamily;\n        const isUniform = !padding\n            && fontFamily === editorFontFamily\n            && fontSize === editorFontSize;\n        return { fontSize, fontFamily, padding, isUniform };\n    }\n    _removeAllDecorations() {\n        this._editor.removeDecorations(Array.from(this._decorationsMetadata.keys()));\n        for (const obj of this._decorationsMetadata.values()) {\n            obj.classNameRef.dispose();\n        }\n        this._decorationsMetadata.clear();\n    }\n};\nInlayHintsController.ID = 'editor.contrib.InlayHints';\nInlayHintsController._MAX_DECORATORS = 1500;\nInlayHintsController = __decorate([\n    __param(1, ILanguageFeaturesService),\n    __param(2, ILanguageFeatureDebounceService),\n    __param(3, IInlayHintsCache),\n    __param(4, ICommandService),\n    __param(5, INotificationService),\n    __param(6, IInstantiationService)\n], InlayHintsController);\nexport { InlayHintsController };\n// Prevents the view from potentially visible whitespace\nfunction fixSpace(str) {\n    const noBreakWhitespace = '\\xa0';\n    return str.replace(/[ \\t]/g, noBreakWhitespace);\n}\nCommandsRegistry.registerCommand('_executeInlayHintProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    const [uri, range] = args;\n    assertType(URI.isUri(uri));\n    assertType(Range.isIRange(range));\n    const { inlayHintsProvider } = accessor.get(ILanguageFeaturesService);\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\n    try {\n        const model = yield InlayHintsFragments.create(inlayHintsProvider, ref.object.textEditorModel, [Range.lift(range)], CancellationToken.None);\n        const result = model.items.map(i => i.hint);\n        setTimeout(() => model.dispose(), 0); // dispose after sending to ext host\n        return result;\n    }\n    finally {\n        ref.dispose();\n    }\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { getHover } from '../../hover/browser/getHover.js';\nimport { MarkdownHover, MarkdownHoverParticipant } from '../../hover/browser/markdownHoverParticipant.js';\nimport { RenderedInlayHintLabelPart, InlayHintsController } from './inlayHintsController.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { localize } from '../../../../nls.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { asCommandLink } from './inlayHints.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nclass InlayHintsHoverAnchor extends HoverForeignElementAnchor {\n    constructor(part, owner, initialMousePosX, initialMousePosY) {\n        super(10, owner, part.item.anchor.range, initialMousePosX, initialMousePosY, true);\n        this.part = part;\n    }\n}\nlet InlayHintsHover = class InlayHintsHover extends MarkdownHoverParticipant {\n    constructor(editor, languageService, openerService, configurationService, _resolverService, languageFeaturesService) {\n        super(editor, languageService, openerService, configurationService, languageFeaturesService);\n        this._resolverService = _resolverService;\n        this.hoverOrdinal = 6;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        var _a;\n        const controller = InlayHintsController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        if (mouseEvent.target.type !== 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return null;\n        }\n        const options = (_a = mouseEvent.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n        if (!(options instanceof ModelDecorationInjectedTextOptions && options.attachedData instanceof RenderedInlayHintLabelPart)) {\n            return null;\n        }\n        return new InlayHintsHoverAnchor(options.attachedData, this, mouseEvent.event.posx, mouseEvent.event.posy);\n    }\n    computeSync() {\n        return [];\n    }\n    computeAsync(anchor, _lineDecorations, token) {\n        if (!(anchor instanceof InlayHintsHoverAnchor)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        return new AsyncIterableObject((executor) => __awaiter(this, void 0, void 0, function* () {\n            var _a, e_1, _b, _c;\n            const { part } = anchor;\n            yield part.item.resolve(token);\n            if (token.isCancellationRequested) {\n                return;\n            }\n            // (1) Inlay Tooltip\n            let itemTooltip;\n            if (typeof part.item.hint.tooltip === 'string') {\n                itemTooltip = new MarkdownString().appendText(part.item.hint.tooltip);\n            }\n            else if (part.item.hint.tooltip) {\n                itemTooltip = part.item.hint.tooltip;\n            }\n            if (itemTooltip) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [itemTooltip], false, 0));\n            }\n            // (1.2) Inlay dbl-click gesture\n            if (isNonEmptyArray(part.item.hint.textEdits)) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(localize('hint.dbl', \"Double-click to insert\"))], false, 10001));\n            }\n            // (2) Inlay Label Part Tooltip\n            let partTooltip;\n            if (typeof part.part.tooltip === 'string') {\n                partTooltip = new MarkdownString().appendText(part.part.tooltip);\n            }\n            else if (part.part.tooltip) {\n                partTooltip = part.part.tooltip;\n            }\n            if (partTooltip) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [partTooltip], false, 1));\n            }\n            // (2.2) Inlay Label Part Help Hover\n            if (part.part.location || part.part.command) {\n                let linkHint;\n                const useMetaKey = this._editor.getOption(74 /* EditorOption.multiCursorModifier */) === 'altKey';\n                const kb = useMetaKey\n                    ? platform.isMacintosh\n                        ? localize('links.navigate.kb.meta.mac', \"cmd + click\")\n                        : localize('links.navigate.kb.meta', \"ctrl + click\")\n                    : platform.isMacintosh\n                        ? localize('links.navigate.kb.alt.mac', \"option + click\")\n                        : localize('links.navigate.kb.alt', \"alt + click\");\n                if (part.part.location && part.part.command) {\n                    linkHint = new MarkdownString().appendText(localize('hint.defAndCommand', 'Go to Definition ({0}), right click for more', kb));\n                }\n                else if (part.part.location) {\n                    linkHint = new MarkdownString().appendText(localize('hint.def', 'Go to Definition ({0})', kb));\n                }\n                else if (part.part.command) {\n                    linkHint = new MarkdownString(`[${localize('hint.cmd', \"Execute Command\")}](${asCommandLink(part.part.command)} \"${part.part.command.title}\") (${kb})`, { isTrusted: true });\n                }\n                if (linkHint) {\n                    executor.emitOne(new MarkdownHover(this, anchor.range, [linkHint], false, 10000));\n                }\n            }\n            // (3) Inlay Label Part Location tooltip\n            const iterable = yield this._resolveInlayHintLabelPartHover(part, token);\n            try {\n                for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = yield iterable_1.next(), _a = iterable_1_1.done, !_a;) {\n                    _c = iterable_1_1.value;\n                    _d = false;\n                    try {\n                        const item = _c;\n                        executor.emitOne(item);\n                    }\n                    finally {\n                        _d = true;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_1.return)) yield _b.call(iterable_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }));\n    }\n    _resolveInlayHintLabelPartHover(part, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!part.part.location) {\n                return AsyncIterableObject.EMPTY;\n            }\n            const { uri, range } = part.part.location;\n            const ref = yield this._resolverService.createModelReference(uri);\n            try {\n                const model = ref.object.textEditorModel;\n                if (!this._languageFeaturesService.hoverProvider.has(model)) {\n                    return AsyncIterableObject.EMPTY;\n                }\n                return getHover(this._languageFeaturesService.hoverProvider, model, new Position(range.startLineNumber, range.startColumn), token)\n                    .filter(item => !isEmptyMarkdownString(item.hover.contents))\n                    .map(item => new MarkdownHover(this, part.item.anchor.range, item.hover.contents, false, 2 + item.ordinal));\n            }\n            finally {\n                ref.dispose();\n            }\n        });\n    }\n};\nInlayHintsHover = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService),\n    __param(4, ITextModelService),\n    __param(5, ILanguageFeaturesService)\n], InlayHintsHover);\nexport { InlayHintsHover };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { InlayHintsController } from './inlayHintsController.js';\nimport { InlayHintsHover } from './inlayHintsHover.js';\nregisterEditorContribution(InlayHintsController.ID, InlayHintsController, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nHoverParticipantRegistry.register(InlayHintsHover);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Action, Separator } from '../../../../base/common/actions.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { DefinitionAction, SymbolNavigationAction, SymbolNavigationAnchor } from '../../gotoSymbol/browser/goToCommands.js';\nimport { PeekContext } from '../../peekView/browser/peekView.js';\nimport { isIMenuItem, MenuId, MenuItemAction, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nexport function showGoToContextMenu(accessor, editor, anchor, part) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const resolverService = accessor.get(ITextModelService);\n        const contextMenuService = accessor.get(IContextMenuService);\n        const commandService = accessor.get(ICommandService);\n        const instaService = accessor.get(IInstantiationService);\n        const notificationService = accessor.get(INotificationService);\n        yield part.item.resolve(CancellationToken.None);\n        if (!part.part.location) {\n            return;\n        }\n        const location = part.part.location;\n        const menuActions = [];\n        // from all registered (not active) context menu actions select those\n        // that are a symbol navigation actions\n        const filter = new Set(MenuRegistry.getMenuItems(MenuId.EditorContext)\n            .map(item => isIMenuItem(item) ? item.command.id : ''));\n        for (const delegate of SymbolNavigationAction.all()) {\n            if (filter.has(delegate.desc.id)) {\n                menuActions.push(new Action(delegate.desc.id, MenuItemAction.label(delegate.desc, { renderShortTitle: true }), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                    const ref = yield resolverService.createModelReference(location.uri);\n                    try {\n                        yield instaService.invokeFunction(delegate.run.bind(delegate), editor, new SymbolNavigationAnchor(ref.object.textEditorModel, Range.getStartPosition(location.range)));\n                    }\n                    finally {\n                        ref.dispose();\n                    }\n                })));\n            }\n        }\n        if (part.part.command) {\n            const { command } = part.part;\n            menuActions.push(new Separator());\n            menuActions.push(new Action(command.id, command.title, undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                var _b;\n                try {\n                    yield commandService.executeCommand(command.id, ...((_b = command.arguments) !== null && _b !== void 0 ? _b : []));\n                }\n                catch (err) {\n                    notificationService.notify({\n                        severity: Severity.Error,\n                        source: part.item.provider.displayName,\n                        message: err\n                    });\n                }\n            })));\n        }\n        // show context menu\n        const useShadowDOM = editor.getOption(121 /* EditorOption.useShadowDOM */);\n        contextMenuService.showContextMenu({\n            domForShadowRoot: useShadowDOM ? (_a = editor.getDomNode()) !== null && _a !== void 0 ? _a : undefined : undefined,\n            getAnchor: () => {\n                const box = dom.getDomNodePagePosition(anchor);\n                return { x: box.left, y: box.top + box.height + 8 };\n            },\n            getActions: () => menuActions,\n            onHide: () => {\n                editor.focus();\n            },\n            autoSelectFirstItem: true,\n        });\n    });\n}\nexport function goToDefinitionWithLocation(accessor, event, editor, location) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const resolverService = accessor.get(ITextModelService);\n        const ref = yield resolverService.createModelReference(location.uri);\n        yield editor.invokeWithinContext((accessor) => __awaiter(this, void 0, void 0, function* () {\n            const openToSide = event.hasSideBySideModifier;\n            const contextKeyService = accessor.get(IContextKeyService);\n            const isInPeek = PeekContext.inPeekEditor.getValue(contextKeyService);\n            const canPeek = !openToSide && editor.getOption(83 /* EditorOption.definitionLinkOpensInPeek */) && !isInPeek;\n            const action = new DefinitionAction({ openToSide, openInPeek: canPeek, muteMessage: true }, { title: { value: '', original: '' }, id: '', precondition: undefined });\n            return action.run(accessor, new SymbolNavigationAnchor(ref.object.textEditorModel, Range.getStartPosition(location.range)), Range.lift(location.range));\n        }));\n        ref.dispose();\n    });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const inlineSuggestCommitId = 'editor.action.inlineSuggest.commit';\nexport const showPreviousInlineSuggestionActionId = 'editor.action.inlineSuggest.showPrevious';\nexport const showNextInlineSuggestionActionId = 'editor.action.inlineSuggest.showNext';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nexport function createDisposableRef(object, disposable) {\n    return {\n        object,\n        dispose: () => disposable === null || disposable === void 0 ? void 0 : disposable.dispose(),\n    };\n}\nexport function applyEdits(text, edits) {\n    const transformer = new PositionOffsetTransformer(text);\n    const offsetEdits = edits.map(e => {\n        const range = Range.lift(e.range);\n        return ({\n            startOffset: transformer.getOffset(range.getStartPosition()),\n            endOffset: transformer.getOffset(range.getEndPosition()),\n            text: e.text\n        });\n    });\n    offsetEdits.sort((a, b) => b.startOffset - a.startOffset);\n    for (const edit of offsetEdits) {\n        text = text.substring(0, edit.startOffset) + edit.text + text.substring(edit.endOffset);\n    }\n    return text;\n}\nclass PositionOffsetTransformer {\n    constructor(text) {\n        this.lineStartOffsetByLineIdx = [];\n        this.lineStartOffsetByLineIdx.push(0);\n        for (let i = 0; i < text.length; i++) {\n            if (text.charAt(i) === '\\n') {\n                this.lineStartOffsetByLineIdx.push(i + 1);\n            }\n        }\n    }\n    getOffset(position) {\n        return this.lineStartOffsetByLineIdx[position.lineNumber - 1] + position.column - 1;\n    }\n}\nconst array = [];\nexport function getReadonlyEmptyArray() {\n    return array;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { applyEdits } from './utils.js';\nexport class GhostText {\n    constructor(lineNumber, parts, additionalReservedLineCount = 0) {\n        this.lineNumber = lineNumber;\n        this.parts = parts;\n        this.additionalReservedLineCount = additionalReservedLineCount;\n    }\n    renderForScreenReader(lineText) {\n        if (this.parts.length === 0) {\n            return '';\n        }\n        const lastPart = this.parts[this.parts.length - 1];\n        const cappedLineText = lineText.substr(0, lastPart.column - 1);\n        const text = applyEdits(cappedLineText, this.parts.map(p => ({\n            range: { startLineNumber: 1, endLineNumber: 1, startColumn: p.column, endColumn: p.column },\n            text: p.lines.join('\\n')\n        })));\n        return text.substring(this.parts[0].column - 1);\n    }\n    isEmpty() {\n        return this.parts.every(p => p.lines.length === 0);\n    }\n}\nexport class GhostTextPart {\n    constructor(column, lines, \n    /**\n     * Indicates if this part is a preview of an inline suggestion when a suggestion is previewed.\n    */\n    preview) {\n        this.column = column;\n        this.lines = lines;\n        this.preview = preview;\n    }\n}\nexport class GhostTextReplacement {\n    constructor(lineNumber, columnStart, length, newLines, additionalReservedLineCount = 0) {\n        this.lineNumber = lineNumber;\n        this.columnStart = columnStart;\n        this.length = length;\n        this.newLines = newLines;\n        this.additionalReservedLineCount = additionalReservedLineCount;\n        this.parts = [\n            new GhostTextPart(this.columnStart + this.length, this.newLines, false),\n        ];\n    }\n    renderForScreenReader(_lineText) {\n        return this.newLines.join('\\n');\n    }\n}\nexport class BaseGhostTextWidgetModel extends Disposable {\n    constructor(editor) {\n        super();\n        this.editor = editor;\n        this._expanded = undefined;\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(112 /* EditorOption.suggest */) && this._expanded === undefined) {\n                this.onDidChangeEmitter.fire();\n            }\n        }));\n    }\n    setExpanded(expanded) {\n        this._expanded = true;\n        this.onDidChangeEmitter.fire();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../../base/common/diff/diff.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { GhostText, GhostTextPart } from './ghostText.js';\nexport function minimizeInlineCompletion(model, inlineCompletion) {\n    if (!inlineCompletion) {\n        return inlineCompletion;\n    }\n    const valueToReplace = model.getValueInRange(inlineCompletion.range);\n    const commonPrefixLen = strings.commonPrefixLength(valueToReplace, inlineCompletion.insertText);\n    const startOffset = model.getOffsetAt(inlineCompletion.range.getStartPosition()) + commonPrefixLen;\n    const start = model.getPositionAt(startOffset);\n    const remainingValueToReplace = valueToReplace.substr(commonPrefixLen);\n    const commonSuffixLen = strings.commonSuffixLength(remainingValueToReplace, inlineCompletion.insertText);\n    const end = model.getPositionAt(Math.max(startOffset, model.getOffsetAt(inlineCompletion.range.getEndPosition()) - commonSuffixLen));\n    return {\n        range: Range.fromPositions(start, end),\n        insertText: inlineCompletion.insertText.substr(commonPrefixLen, inlineCompletion.insertText.length - commonPrefixLen - commonSuffixLen),\n        snippetInfo: inlineCompletion.snippetInfo,\n        filterText: inlineCompletion.filterText,\n        additionalTextEdits: inlineCompletion.additionalTextEdits,\n    };\n}\nexport function normalizedInlineCompletionsEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    return a.range.equalsRange(b.range) && a.insertText === b.insertText && a.command === b.command;\n}\n/**\n * @param previewSuffixLength Sets where to split `inlineCompletion.text`.\n * \tIf the text is `hello` and the suffix length is 2, the non-preview part is `hel` and the preview-part is `lo`.\n*/\nexport function inlineCompletionToGhostText(inlineCompletion, textModel, mode, cursorPosition, previewSuffixLength = 0) {\n    if (inlineCompletion.range.startLineNumber !== inlineCompletion.range.endLineNumber) {\n        // Only single line replacements are supported.\n        return undefined;\n    }\n    const sourceLine = textModel.getLineContent(inlineCompletion.range.startLineNumber);\n    const sourceIndentationLength = strings.getLeadingWhitespace(sourceLine).length;\n    const suggestionTouchesIndentation = inlineCompletion.range.startColumn - 1 <= sourceIndentationLength;\n    if (suggestionTouchesIndentation) {\n        // source:      ··········[······abc]\n        //                         ^^^^^^^^^ inlineCompletion.range\n        //              ^^^^^^^^^^ ^^^^^^ sourceIndentationLength\n        //                         ^^^^^^ replacedIndentation.length\n        //                               ^^^ rangeThatDoesNotReplaceIndentation\n        // inlineCompletion.text: '··foo'\n        //                         ^^ suggestionAddedIndentationLength\n        const suggestionAddedIndentationLength = strings.getLeadingWhitespace(inlineCompletion.insertText).length;\n        const replacedIndentation = sourceLine.substring(inlineCompletion.range.startColumn - 1, sourceIndentationLength);\n        const rangeThatDoesNotReplaceIndentation = Range.fromPositions(inlineCompletion.range.getStartPosition().delta(0, replacedIndentation.length), inlineCompletion.range.getEndPosition());\n        const suggestionWithoutIndentationChange = inlineCompletion.insertText.startsWith(replacedIndentation)\n            // Adds more indentation without changing existing indentation: We can add ghost text for this\n            ? inlineCompletion.insertText.substring(replacedIndentation.length)\n            // Changes or removes existing indentation. Only add ghost text for the non-indentation part.\n            : inlineCompletion.insertText.substring(suggestionAddedIndentationLength);\n        inlineCompletion = {\n            range: rangeThatDoesNotReplaceIndentation,\n            insertText: suggestionWithoutIndentationChange,\n            command: inlineCompletion.command,\n            snippetInfo: undefined,\n            filterText: inlineCompletion.filterText,\n            additionalTextEdits: inlineCompletion.additionalTextEdits,\n        };\n    }\n    // This is a single line string\n    const valueToBeReplaced = textModel.getValueInRange(inlineCompletion.range);\n    const changes = cachingDiff(valueToBeReplaced, inlineCompletion.insertText);\n    if (!changes) {\n        // No ghost text in case the diff would be too slow to compute\n        return undefined;\n    }\n    const lineNumber = inlineCompletion.range.startLineNumber;\n    const parts = new Array();\n    if (mode === 'prefix') {\n        const filteredChanges = changes.filter(c => c.originalLength === 0);\n        if (filteredChanges.length > 1 || filteredChanges.length === 1 && filteredChanges[0].originalStart !== valueToBeReplaced.length) {\n            // Prefixes only have a single change.\n            return undefined;\n        }\n    }\n    const previewStartInCompletionText = inlineCompletion.insertText.length - previewSuffixLength;\n    for (const c of changes) {\n        const insertColumn = inlineCompletion.range.startColumn + c.originalStart + c.originalLength;\n        if (mode === 'subwordSmart' && cursorPosition && cursorPosition.lineNumber === inlineCompletion.range.startLineNumber && insertColumn < cursorPosition.column) {\n            // No ghost text before cursor\n            return undefined;\n        }\n        if (c.originalLength > 0) {\n            return undefined;\n        }\n        if (c.modifiedLength === 0) {\n            continue;\n        }\n        const modifiedEnd = c.modifiedStart + c.modifiedLength;\n        const nonPreviewTextEnd = Math.max(c.modifiedStart, Math.min(modifiedEnd, previewStartInCompletionText));\n        const nonPreviewText = inlineCompletion.insertText.substring(c.modifiedStart, nonPreviewTextEnd);\n        const italicText = inlineCompletion.insertText.substring(nonPreviewTextEnd, Math.max(c.modifiedStart, modifiedEnd));\n        if (nonPreviewText.length > 0) {\n            const lines = strings.splitLines(nonPreviewText);\n            parts.push(new GhostTextPart(insertColumn, lines, false));\n        }\n        if (italicText.length > 0) {\n            const lines = strings.splitLines(italicText);\n            parts.push(new GhostTextPart(insertColumn, lines, true));\n        }\n    }\n    return new GhostText(lineNumber, parts, 0);\n}\nlet lastRequest = undefined;\nfunction cachingDiff(originalValue, newValue) {\n    if ((lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.originalValue) === originalValue && (lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.newValue) === newValue) {\n        return lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.changes;\n    }\n    else {\n        let changes = smartDiff(originalValue, newValue, true);\n        if (changes) {\n            const deletedChars = deletedCharacters(changes);\n            if (deletedChars > 0) {\n                // For performance reasons, don't compute diff if there is nothing to improve\n                const newChanges = smartDiff(originalValue, newValue, false);\n                if (newChanges && deletedCharacters(newChanges) < deletedChars) {\n                    // Disabling smartness seems to be better here\n                    changes = newChanges;\n                }\n            }\n        }\n        lastRequest = {\n            originalValue,\n            newValue,\n            changes\n        };\n        return changes;\n    }\n}\nfunction deletedCharacters(changes) {\n    let sum = 0;\n    for (const c of changes) {\n        sum += c.originalLength;\n    }\n    return sum;\n}\n/**\n * When matching `if ()` with `if (f() = 1) { g(); }`,\n * align it like this:        `if (       )`\n * Not like this:\t\t\t  `if (  )`\n * Also not like this:\t\t  `if (             )`.\n *\n * The parenthesis are preprocessed to ensure that they match correctly.\n */\nfunction smartDiff(originalValue, newValue, smartBracketMatching) {\n    if (originalValue.length > 5000 || newValue.length > 5000) {\n        // We don't want to work on strings that are too big\n        return undefined;\n    }\n    function getMaxCharCode(val) {\n        let maxCharCode = 0;\n        for (let i = 0, len = val.length; i < len; i++) {\n            const charCode = val.charCodeAt(i);\n            if (charCode > maxCharCode) {\n                maxCharCode = charCode;\n            }\n        }\n        return maxCharCode;\n    }\n    const maxCharCode = Math.max(getMaxCharCode(originalValue), getMaxCharCode(newValue));\n    function getUniqueCharCode(id) {\n        if (id < 0) {\n            throw new Error('unexpected');\n        }\n        return maxCharCode + id + 1;\n    }\n    function getElements(source) {\n        let level = 0;\n        let group = 0;\n        const characters = new Int32Array(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            // TODO support more brackets\n            if (smartBracketMatching && source[i] === '(') {\n                const id = group * 100 + level;\n                characters[i] = getUniqueCharCode(2 * id);\n                level++;\n            }\n            else if (smartBracketMatching && source[i] === ')') {\n                level = Math.max(level - 1, 0);\n                const id = group * 100 + level;\n                characters[i] = getUniqueCharCode(2 * id + 1);\n                if (level === 0) {\n                    group++;\n                }\n            }\n            else {\n                characters[i] = source.charCodeAt(i);\n            }\n        }\n        return characters;\n    }\n    const elements1 = getElements(originalValue);\n    const elements2 = getElements(newValue);\n    return new LcsDiff({ getElements: () => elements1 }, { getElements: () => elements2 }).ComputeDiff(false).changes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { assertNever } from '../../../../base/common/assert.js';\nimport { createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { matchesSubString } from '../../../../base/common/filters.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { fixBracketsInLine } from '../../../common/model/bracketPairsTextModelPart/fixBrackets.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { inlineSuggestCommitId } from './consts.js';\nimport { BaseGhostTextWidgetModel, GhostTextReplacement } from './ghostText.js';\nimport { inlineCompletionToGhostText } from './inlineCompletionToGhostText.js';\nimport { InlineSuggestionHintsContentWidget } from './inlineSuggestionHintsWidget.js';\nimport { getReadonlyEmptyArray } from './utils.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { SnippetParser, Text } from '../../snippet/browser/snippetParser.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nlet InlineCompletionsModel = class InlineCompletionsModel extends Disposable {\n    constructor(editor, cache, commandService, languageConfigurationService, languageFeaturesService, debounceService, configurationService) {\n        super();\n        this.editor = editor;\n        this.cache = cache;\n        this.commandService = commandService;\n        this.languageConfigurationService = languageConfigurationService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.debounceService = debounceService;\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.completionSession = this._register(new MutableDisposable());\n        this.active = false;\n        this.disposed = false;\n        this.debounceValue = this.debounceService.for(this.languageFeaturesService.inlineCompletionsProvider, 'InlineCompletionsDebounce', { min: 50, max: 50 });\n        this._register(commandService.onDidExecuteCommand((e) => {\n            // These commands don't trigger onDidType.\n            const commands = new Set([\n                CoreEditingCommands.Tab.id,\n                CoreEditingCommands.DeleteLeft.id,\n                CoreEditingCommands.DeleteRight.id,\n                inlineSuggestCommitId,\n                'acceptSelectedSuggestion',\n            ]);\n            if (commands.has(e.commandId) && editor.hasTextFocus()) {\n                this.handleUserInput();\n            }\n        }));\n        this._register(this.editor.onDidType((e) => {\n            this.handleUserInput();\n        }));\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\n            if (e.reason === 3 /* CursorChangeReason.Explicit */ ||\n                this.session && !this.session.isValid) {\n                this.hide();\n            }\n        }));\n        this._register(toDisposable(() => {\n            this.disposed = true;\n        }));\n        this._register(this.editor.onDidBlurEditorWidget(() => {\n            // This is a hidden setting very useful for debugging\n            if (configurationService.getValue('editor.inlineSuggest.hideOnBlur')) {\n                return;\n            }\n            if (InlineSuggestionHintsContentWidget.dropDownVisible) {\n                return;\n            }\n            this.hide();\n        }));\n    }\n    handleUserInput() {\n        if (this.session && !this.session.isValid) {\n            this.hide();\n        }\n        setTimeout(() => {\n            if (this.disposed) {\n                return;\n            }\n            // Wait for the cursor update that happens in the same iteration loop iteration\n            this.startSessionIfTriggered();\n        }, 0);\n    }\n    get session() {\n        return this.completionSession.value;\n    }\n    get ghostText() {\n        var _a;\n        return (_a = this.session) === null || _a === void 0 ? void 0 : _a.ghostText;\n    }\n    get minReservedLineCount() {\n        return this.session ? this.session.minReservedLineCount : 0;\n    }\n    setExpanded(expanded) {\n        var _a;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.setExpanded(expanded);\n    }\n    setActive(active) {\n        var _a;\n        this.active = active;\n        if (active) {\n            (_a = this.session) === null || _a === void 0 ? void 0 : _a.scheduleAutomaticUpdate();\n        }\n    }\n    startSessionIfTriggered() {\n        const suggestOptions = this.editor.getOption(59 /* EditorOption.inlineSuggest */);\n        if (!suggestOptions.enabled) {\n            return;\n        }\n        if (this.session && this.session.isValid) {\n            return;\n        }\n        this.trigger(InlineCompletionTriggerKind.Automatic);\n    }\n    trigger(triggerKind) {\n        if (this.completionSession.value) {\n            if (triggerKind === InlineCompletionTriggerKind.Explicit) {\n                void this.completionSession.value.ensureUpdateWithExplicitContext();\n            }\n            return;\n        }\n        this.completionSession.value = new InlineCompletionsSession(this.editor, this.editor.getPosition(), () => this.active, this.commandService, this.cache, triggerKind, this.languageConfigurationService, this.languageFeaturesService.inlineCompletionsProvider, this.debounceValue);\n        this.completionSession.value.takeOwnership(this.completionSession.value.onDidChange(() => {\n            this.onDidChangeEmitter.fire();\n        }));\n    }\n    hide() {\n        this.completionSession.clear();\n        this.onDidChangeEmitter.fire();\n    }\n    commitCurrentSuggestion() {\n        var _a;\n        // Don't dispose the session, so that after committing, more suggestions are shown.\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.commitCurrentCompletion();\n    }\n    commitCurrentSuggestionPartially() {\n        var _a;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.commitCurrentCompletionNextWord();\n    }\n    showNext() {\n        var _a;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.showNextInlineCompletion();\n    }\n    showPrevious() {\n        var _a;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.showPreviousInlineCompletion();\n    }\n};\nInlineCompletionsModel = __decorate([\n    __param(2, ICommandService),\n    __param(3, ILanguageConfigurationService),\n    __param(4, ILanguageFeaturesService),\n    __param(5, ILanguageFeatureDebounceService),\n    __param(6, IConfigurationService)\n], InlineCompletionsModel);\nexport { InlineCompletionsModel };\nexport class InlineCompletionsSession extends BaseGhostTextWidgetModel {\n    constructor(editor, triggerPosition, shouldUpdate, commandService, cache, initialTriggerKind, languageConfigurationService, registry, debounce) {\n        super(editor);\n        this.triggerPosition = triggerPosition;\n        this.shouldUpdate = shouldUpdate;\n        this.commandService = commandService;\n        this.cache = cache;\n        this.initialTriggerKind = initialTriggerKind;\n        this.languageConfigurationService = languageConfigurationService;\n        this.registry = registry;\n        this.debounce = debounce;\n        this.minReservedLineCount = 0;\n        this.updateOperation = this._register(new MutableDisposable());\n        this.updateSoon = this._register(new RunOnceScheduler(() => {\n            const triggerKind = this.initialTriggerKind;\n            // All subsequent triggers are automatic.\n            this.initialTriggerKind = InlineCompletionTriggerKind.Automatic;\n            return this.update(triggerKind);\n        }, 50));\n        this.filteredCompletions = [];\n        //#region Selection\n        // We use a semantic id to track the selection even if the cache changes.\n        this.currentlySelectedCompletionId = undefined;\n        let lastCompletionItem = undefined;\n        this._register(this.onDidChange(() => {\n            var _a;\n            const currentCompletion = this.currentCompletion;\n            if (currentCompletion && currentCompletion.sourceInlineCompletion !== lastCompletionItem) {\n                lastCompletionItem = currentCompletion.sourceInlineCompletion;\n                const provider = currentCompletion.sourceProvider;\n                (_a = provider.handleItemDidShow) === null || _a === void 0 ? void 0 : _a.call(provider, currentCompletion.sourceInlineCompletions, lastCompletionItem);\n            }\n        }));\n        this._register(toDisposable(() => {\n            this.cache.clear();\n        }));\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\n            var _a;\n            if (e.reason === 3 /* CursorChangeReason.Explicit */) {\n                return;\n            }\n            // Ghost text depends on the cursor position\n            (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.updateRanges();\n            if (this.cache.value) {\n                this.updateFilteredInlineCompletions();\n                this.onDidChangeEmitter.fire();\n            }\n        }));\n        this._register(this.editor.onDidChangeModelContent((e) => {\n            var _a;\n            // Call this in case `onDidChangeModelContent` calls us first.\n            (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.updateRanges();\n            this.updateFilteredInlineCompletions();\n            this.scheduleAutomaticUpdate();\n        }));\n        this._register(this.registry.onDidChange(() => {\n            this.updateSoon.schedule(this.debounce.get(this.editor.getModel()));\n        }));\n        this.scheduleAutomaticUpdate();\n    }\n    updateFilteredInlineCompletions() {\n        if (!this.cache.value) {\n            this.filteredCompletions = [];\n            return;\n        }\n        const model = this.editor.getModel();\n        const cursorPosition = model.validatePosition(this.editor.getPosition());\n        this.filteredCompletions = this.cache.value.completions.filter(c => {\n            const originalValue = model.getValueInRange(c.synchronizedRange).toLowerCase();\n            const filterText = c.inlineCompletion.filterText.toLowerCase();\n            const indent = model.getLineIndentColumn(c.synchronizedRange.startLineNumber);\n            const cursorPosIndex = Math.max(0, cursorPosition.column - c.synchronizedRange.startColumn);\n            let filterTextBefore = filterText.substring(0, cursorPosIndex);\n            let filterTextAfter = filterText.substring(cursorPosIndex);\n            let originalValueBefore = originalValue.substring(0, cursorPosIndex);\n            let originalValueAfter = originalValue.substring(cursorPosIndex);\n            if (c.synchronizedRange.startColumn <= indent) {\n                // Remove indentation\n                originalValueBefore = originalValueBefore.trimStart();\n                if (originalValueBefore.length === 0) {\n                    originalValueAfter = originalValueAfter.trimStart();\n                }\n                filterTextBefore = filterTextBefore.trimStart();\n                if (filterTextBefore.length === 0) {\n                    filterTextAfter = filterTextAfter.trimStart();\n                }\n            }\n            return filterTextBefore.startsWith(originalValueBefore)\n                && matchesSubString(originalValueAfter, filterTextAfter);\n        });\n    }\n    get currentlySelectedIndex() {\n        return this.fixAndGetIndexOfCurrentSelection();\n    }\n    fixAndGetIndexOfCurrentSelection() {\n        if (!this.currentlySelectedCompletionId || !this.cache.value) {\n            return 0;\n        }\n        if (this.cache.value.completions.length === 0) {\n            // don't reset the selection in this case\n            return 0;\n        }\n        const idx = this.filteredCompletions.findIndex(v => v.semanticId === this.currentlySelectedCompletionId);\n        if (idx === -1) {\n            // Reset the selection so that the selection does not jump back when it appears again\n            this.currentlySelectedCompletionId = undefined;\n            return 0;\n        }\n        return idx;\n    }\n    get currentCachedCompletion() {\n        if (!this.cache.value) {\n            return undefined;\n        }\n        return this.filteredCompletions[this.fixAndGetIndexOfCurrentSelection()];\n    }\n    showNextInlineCompletion() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ensureUpdateWithExplicitContext();\n            const completions = this.filteredCompletions || [];\n            if (completions.length > 0) {\n                const newIdx = (this.fixAndGetIndexOfCurrentSelection() + 1) % completions.length;\n                this.currentlySelectedCompletionId = completions[newIdx].semanticId;\n            }\n            else {\n                this.currentlySelectedCompletionId = undefined;\n            }\n            this.onDidChangeEmitter.fire();\n        });\n    }\n    showPreviousInlineCompletion() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ensureUpdateWithExplicitContext();\n            const completions = this.filteredCompletions || [];\n            if (completions.length > 0) {\n                const newIdx = (this.fixAndGetIndexOfCurrentSelection() + completions.length - 1) % completions.length;\n                this.currentlySelectedCompletionId = completions[newIdx].semanticId;\n            }\n            else {\n                this.currentlySelectedCompletionId = undefined;\n            }\n            this.onDidChangeEmitter.fire();\n        });\n    }\n    get hasBeenTriggeredExplicitly() {\n        var _a;\n        return ((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.triggerKind) === InlineCompletionTriggerKind.Explicit;\n    }\n    ensureUpdateWithExplicitContext() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.updateOperation.value) {\n                // Restart or wait for current update operation\n                if (this.updateOperation.value.triggerKind === InlineCompletionTriggerKind.Explicit) {\n                    yield this.updateOperation.value.promise;\n                }\n                else {\n                    yield this.update(InlineCompletionTriggerKind.Explicit);\n                }\n            }\n            else if (((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.triggerKind) !== InlineCompletionTriggerKind.Explicit) {\n                // Refresh cache\n                yield this.update(InlineCompletionTriggerKind.Explicit);\n            }\n        });\n    }\n    getInlineCompletionsCountSync() {\n        return this.filteredCompletions.length || 0;\n    }\n    //#endregion\n    get ghostText() {\n        const currentCompletion = this.currentCompletion;\n        if (!currentCompletion) {\n            return undefined;\n        }\n        const cursorPosition = this.editor.getPosition();\n        if (currentCompletion.range.getEndPosition().isBefore(cursorPosition)) {\n            return undefined;\n        }\n        const mode = this.editor.getOptions().get(59 /* EditorOption.inlineSuggest */).mode;\n        const ghostText = inlineCompletionToGhostText(currentCompletion, this.editor.getModel(), mode, cursorPosition);\n        if (ghostText) {\n            if (ghostText.isEmpty()) {\n                return undefined;\n            }\n            return ghostText;\n        }\n        return new GhostTextReplacement(currentCompletion.range.startLineNumber, currentCompletion.range.startColumn, currentCompletion.range.endColumn - currentCompletion.range.startColumn, currentCompletion.insertText.split('\\n'), 0);\n    }\n    get currentCompletion() {\n        const completion = this.currentCachedCompletion;\n        if (!completion) {\n            return undefined;\n        }\n        return completion.toLiveInlineCompletion();\n    }\n    get isValid() {\n        return this.editor.getPosition().lineNumber === this.triggerPosition.lineNumber;\n    }\n    scheduleAutomaticUpdate() {\n        // Since updateSoon debounces, starvation can happen.\n        // To prevent stale cache, we clear the current update operation.\n        this.updateOperation.clear();\n        this.updateSoon.schedule(this.debounce.get(this.editor.getModel()));\n    }\n    update(triggerKind) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.shouldUpdate()) {\n                return;\n            }\n            const position = this.editor.getPosition();\n            const startTime = new Date();\n            const promise = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                let result;\n                try {\n                    result = yield provideInlineCompletions(this.registry, position, this.editor.getModel(), { triggerKind, selectedSuggestionInfo: undefined }, token, this.languageConfigurationService);\n                    const endTime = new Date();\n                    this.debounce.update(this.editor.getModel(), endTime.getTime() - startTime.getTime());\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                    return;\n                }\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                this.cache.setValue(this.editor, result, triggerKind);\n                this.updateFilteredInlineCompletions();\n                this.onDidChangeEmitter.fire();\n            }));\n            const operation = new UpdateOperation(promise, triggerKind);\n            this.updateOperation.value = operation;\n            yield promise;\n            if (this.updateOperation.value === operation) {\n                this.updateOperation.clear();\n            }\n        });\n    }\n    takeOwnership(disposable) {\n        this._register(disposable);\n    }\n    commitCurrentCompletionNextWord() {\n        const ghostText = this.ghostText;\n        if (!ghostText) {\n            return;\n        }\n        const completion = this.currentCompletion;\n        if (!completion) {\n            return;\n        }\n        if (completion.snippetInfo || completion.filterText !== completion.insertText) {\n            // not in WYSIWYG mode, partial commit might change completion, thus it is not supported\n            this.commit(completion);\n            return;\n        }\n        if (ghostText.parts.length === 0) {\n            return;\n        }\n        const firstPart = ghostText.parts[0];\n        const position = new Position(ghostText.lineNumber, firstPart.column);\n        const line = firstPart.lines[0];\n        const langId = this.editor.getModel().getLanguageIdAtPosition(ghostText.lineNumber, 1);\n        const config = this.languageConfigurationService.getLanguageConfiguration(langId);\n        const wordRegExp = new RegExp(config.wordDefinition.source, config.wordDefinition.flags.replace('g', ''));\n        const m1 = line.match(wordRegExp);\n        let acceptUntilIndexExclusive = 0;\n        if (m1 && m1.index !== undefined) {\n            if (m1.index === 0) {\n                acceptUntilIndexExclusive = m1[0].length;\n            }\n            else {\n                acceptUntilIndexExclusive = m1.index;\n            }\n        }\n        else {\n            acceptUntilIndexExclusive = line.length;\n        }\n        const wsRegExp = /\\s/g;\n        let m2 = wsRegExp.exec(line);\n        if (m2 && m2.index === 0) {\n            m2 = wsRegExp.exec(line);\n        }\n        if (m2 && m2.index !== undefined) {\n            if (m2.index < acceptUntilIndexExclusive) {\n                acceptUntilIndexExclusive = m2.index;\n            }\n        }\n        const partialText = line.substring(0, acceptUntilIndexExclusive);\n        this.editor.pushUndoStop();\n        this.editor.executeEdits('inlineSuggestion.accept', [\n            EditOperation.replace(Range.fromPositions(position), partialText),\n        ]);\n        this.editor.setPosition(position.delta(0, partialText.length));\n        if (completion.sourceProvider.handlePartialAccept) {\n            const acceptedRange = Range.fromPositions(completion.range.getStartPosition(), position.delta(0, acceptUntilIndexExclusive));\n            // This assumes that the inline completion and the model use the same EOL style.\n            // This is not a problem at the moment, because partial acceptance only works for the first line of an\n            // inline completion.\n            const text = this.editor.getModel().getValueInRange(acceptedRange);\n            completion.sourceProvider.handlePartialAccept(completion.sourceInlineCompletions, completion.sourceInlineCompletion, text.length);\n        }\n    }\n    commitCurrentCompletion() {\n        const ghostText = this.ghostText;\n        if (!ghostText) {\n            // No ghost text was shown for this completion.\n            // Thus, we don't want to commit anything.\n            return;\n        }\n        const completion = this.currentCompletion;\n        if (completion) {\n            this.commit(completion);\n        }\n    }\n    commit(completion) {\n        var _a;\n        // Mark the cache as stale, but don't dispose it yet,\n        // otherwise command args might get disposed.\n        const cache = this.cache.clearAndLeak();\n        this.editor.pushUndoStop();\n        if (completion.snippetInfo) {\n            this.editor.executeEdits('inlineSuggestion.accept', [\n                EditOperation.replaceMove(completion.range, ''),\n                ...completion.additionalTextEdits\n            ]);\n            this.editor.setPosition(completion.snippetInfo.range.getStartPosition());\n            (_a = SnippetController2.get(this.editor)) === null || _a === void 0 ? void 0 : _a.insert(completion.snippetInfo.snippet, { undoStopBefore: false });\n        }\n        else {\n            this.editor.executeEdits('inlineSuggestion.accept', [\n                EditOperation.replaceMove(completion.range, completion.insertText),\n                ...completion.additionalTextEdits\n            ]);\n        }\n        if (completion.command) {\n            this.commandService\n                .executeCommand(completion.command.id, ...(completion.command.arguments || []))\n                .finally(() => {\n                cache === null || cache === void 0 ? void 0 : cache.dispose();\n            })\n                .then(undefined, onUnexpectedExternalError);\n        }\n        else {\n            cache === null || cache === void 0 ? void 0 : cache.dispose();\n        }\n        this.onDidChangeEmitter.fire();\n    }\n    get commands() {\n        var _a;\n        const lists = new Set(((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions.map(c => c.inlineCompletion.sourceInlineCompletions)) || []);\n        return [...lists].flatMap(l => l.commands || []);\n    }\n}\nexport class UpdateOperation {\n    constructor(promise, triggerKind) {\n        this.promise = promise;\n        this.triggerKind = triggerKind;\n    }\n    dispose() {\n        this.promise.cancel();\n    }\n}\n/**\n * The cache keeps itself in sync with the editor.\n * It also owns the completions result and disposes it when the cache is diposed.\n*/\nexport class SynchronizedInlineCompletionsCache extends Disposable {\n    constructor(completionsSource, editor, onChange, triggerKind) {\n        super();\n        this.editor = editor;\n        this.onChange = onChange;\n        this.triggerKind = triggerKind;\n        this.isDisposing = false;\n        const decorationIds = editor.changeDecorations((changeAccessor) => {\n            return changeAccessor.deltaDecorations([], completionsSource.items.map(i => ({\n                range: i.range,\n                options: {\n                    description: 'inline-completion-tracking-range'\n                },\n            })));\n        });\n        this._register(toDisposable(() => {\n            this.isDisposing = true;\n            editor.removeDecorations(decorationIds);\n        }));\n        this.completions = completionsSource.items.map((c, idx) => new CachedInlineCompletion(c, decorationIds[idx]));\n        this._register(editor.onDidChangeModelContent(() => {\n            this.updateRanges();\n        }));\n        this._register(completionsSource);\n    }\n    updateRanges() {\n        if (this.isDisposing) {\n            return;\n        }\n        let hasChanged = false;\n        const model = this.editor.getModel();\n        for (const c of this.completions) {\n            const newRange = model.getDecorationRange(c.decorationId);\n            if (!newRange) {\n                onUnexpectedError(new Error('Decoration has no range'));\n                continue;\n            }\n            if (!c.synchronizedRange.equalsRange(newRange)) {\n                hasChanged = true;\n                c.synchronizedRange = newRange;\n            }\n        }\n        if (hasChanged) {\n            this.onChange();\n        }\n    }\n}\nclass CachedInlineCompletion {\n    constructor(inlineCompletion, decorationId) {\n        this.inlineCompletion = inlineCompletion;\n        this.decorationId = decorationId;\n        this.semanticId = JSON.stringify({\n            text: this.inlineCompletion.insertText,\n            abbreviation: this.inlineCompletion.filterText,\n            startLine: this.inlineCompletion.range.startLineNumber,\n            startColumn: this.inlineCompletion.range.startColumn,\n            command: this.inlineCompletion.command\n        });\n        this.synchronizedRange = inlineCompletion.range;\n    }\n    toLiveInlineCompletion() {\n        return {\n            insertText: this.inlineCompletion.insertText,\n            range: this.synchronizedRange,\n            command: this.inlineCompletion.command,\n            sourceProvider: this.inlineCompletion.sourceProvider,\n            sourceInlineCompletions: this.inlineCompletion.sourceInlineCompletions,\n            sourceInlineCompletion: this.inlineCompletion.sourceInlineCompletion,\n            snippetInfo: this.inlineCompletion.snippetInfo,\n            filterText: this.inlineCompletion.filterText,\n            additionalTextEdits: this.inlineCompletion.additionalTextEdits,\n        };\n    }\n}\nexport function provideInlineCompletions(registry, position, model, context, token = CancellationToken.None, languageConfigurationService) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const defaultReplaceRange = getDefaultRange(position, model);\n        const providers = registry.all(model);\n        const results = yield Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\n            const completions = yield Promise.resolve(provider.provideInlineCompletions(model, position, context, token)).catch(onUnexpectedExternalError);\n            return ({\n                completions,\n                provider,\n                dispose: () => {\n                    if (completions) {\n                        provider.freeInlineCompletions(completions);\n                    }\n                }\n            });\n        })));\n        const itemsByHash = new Map();\n        for (const result of results) {\n            const completions = result.completions;\n            if (!completions) {\n                continue;\n            }\n            for (const item of completions.items) {\n                let range = item.range ? Range.lift(item.range) : defaultReplaceRange;\n                if (range.startLineNumber !== range.endLineNumber) {\n                    // Ignore invalid ranges.\n                    continue;\n                }\n                let insertText;\n                let snippetInfo;\n                if (typeof item.insertText === 'string') {\n                    insertText = item.insertText;\n                    if (languageConfigurationService && item.completeBracketPairs) {\n                        insertText = closeBrackets(insertText, range.getStartPosition(), model, languageConfigurationService);\n                        // Modify range depending on if brackets are added or removed\n                        const diff = insertText.length - item.insertText.length;\n                        if (diff !== 0) {\n                            range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n                        }\n                    }\n                    snippetInfo = undefined;\n                }\n                else if ('snippet' in item.insertText) {\n                    const preBracketCompletionLength = item.insertText.snippet.length;\n                    if (languageConfigurationService && item.completeBracketPairs) {\n                        item.insertText.snippet = closeBrackets(item.insertText.snippet, range.getStartPosition(), model, languageConfigurationService);\n                        // Modify range depending on if brackets are added or removed\n                        const diff = item.insertText.snippet.length - preBracketCompletionLength;\n                        if (diff !== 0) {\n                            range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n                        }\n                    }\n                    const snippet = new SnippetParser().parse(item.insertText.snippet);\n                    if (snippet.children.length === 1 && snippet.children[0] instanceof Text) {\n                        insertText = snippet.children[0].value;\n                        snippetInfo = undefined;\n                    }\n                    else {\n                        insertText = snippet.toString();\n                        snippetInfo = {\n                            snippet: item.insertText.snippet,\n                            range: range\n                        };\n                    }\n                }\n                else {\n                    assertNever(item.insertText);\n                }\n                const trackedItem = ({\n                    insertText,\n                    snippetInfo,\n                    range,\n                    command: item.command,\n                    sourceProvider: result.provider,\n                    sourceInlineCompletions: completions,\n                    sourceInlineCompletion: item,\n                    filterText: item.filterText || insertText,\n                    additionalTextEdits: item.additionalTextEdits || getReadonlyEmptyArray()\n                });\n                itemsByHash.set(JSON.stringify({ insertText, range: item.range }), trackedItem);\n            }\n        }\n        return {\n            items: [...itemsByHash.values()],\n            dispose: () => {\n                for (const result of results) {\n                    result.dispose();\n                }\n            },\n        };\n    });\n}\nfunction getDefaultRange(position, model) {\n    const word = model.getWordAtPosition(position);\n    const maxColumn = model.getLineMaxColumn(position.lineNumber);\n    // By default, always replace up until the end of the current line.\n    // This default might be subject to change!\n    return word\n        ? new Range(position.lineNumber, word.startColumn, position.lineNumber, maxColumn)\n        : Range.fromPositions(position, position.with(undefined, maxColumn));\n}\nfunction closeBrackets(text, position, model, languageConfigurationService) {\n    const lineStart = model.getLineContent(position.lineNumber).substring(0, position.column - 1);\n    const newLine = lineStart + text;\n    const newTokens = model.tokenization.tokenizeLineWithEdit(position, newLine.length - (position.column - 1), text);\n    const slicedTokens = newTokens === null || newTokens === void 0 ? void 0 : newTokens.sliceAndInflate(position.column - 1, newLine.length, 0);\n    if (!slicedTokens) {\n        return text;\n    }\n    const newText = fixBracketsInLine(slicedTokens, languageConfigurationService);\n    return newText;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { compareBy, findMaxBy, numberComparator } from '../../../../base/common/arrays.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { SnippetSession } from '../../snippet/browser/snippetSession.js';\nimport { SuggestController } from '../../suggest/browser/suggestController.js';\nimport { minimizeInlineCompletion, normalizedInlineCompletionsEquals } from './inlineCompletionToGhostText.js';\nexport class SuggestWidgetInlineCompletionProvider extends Disposable {\n    /**\n     * Returns undefined if the suggest widget is not active.\n    */\n    get state() {\n        if (!this._isActive) {\n            return undefined;\n        }\n        return { selectedItem: this._currentSuggestItemInfo };\n    }\n    constructor(editor, suggestControllerPreselector) {\n        super();\n        this.editor = editor;\n        this.suggestControllerPreselector = suggestControllerPreselector;\n        this.isSuggestWidgetVisible = false;\n        this.isShiftKeyPressed = false;\n        this._isActive = false;\n        this._currentSuggestItemInfo = undefined;\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\n        this._register(editor.onKeyDown(e => {\n            if (e.shiftKey && !this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = true;\n                this.update(this._isActive);\n            }\n        }));\n        this._register(editor.onKeyUp(e => {\n            if (e.shiftKey && this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = false;\n                this.update(this._isActive);\n            }\n        }));\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            this._register(suggestController.registerSelector({\n                priority: 100,\n                select: (model, pos, suggestItems) => {\n                    const textModel = this.editor.getModel();\n                    const normalizedItemToPreselect = minimizeInlineCompletion(textModel, this.suggestControllerPreselector());\n                    if (!normalizedItemToPreselect) {\n                        return -1;\n                    }\n                    const position = Position.lift(pos);\n                    const candidates = suggestItems\n                        .map((suggestItem, index) => {\n                        const inlineSuggestItem = suggestionToSuggestItemInfo(suggestController, position, suggestItem, this.isShiftKeyPressed);\n                        const normalizedSuggestItem = minimizeInlineCompletion(textModel, inlineSuggestItem === null || inlineSuggestItem === void 0 ? void 0 : inlineSuggestItem.normalizedInlineCompletion);\n                        if (!normalizedSuggestItem) {\n                            return undefined;\n                        }\n                        const valid = rangeStartsWith(normalizedItemToPreselect.range, normalizedSuggestItem.range) &&\n                            normalizedItemToPreselect.insertText.startsWith(normalizedSuggestItem.insertText);\n                        return { index, valid, prefixLength: normalizedSuggestItem.insertText.length, suggestItem };\n                    })\n                        .filter(item => item && item.valid);\n                    const result = findMaxBy(candidates, compareBy(s => s.prefixLength, numberComparator));\n                    return result ? result.index : -1;\n                }\n            }));\n            let isBoundToSuggestWidget = false;\n            const bindToSuggestWidget = () => {\n                if (isBoundToSuggestWidget) {\n                    return;\n                }\n                isBoundToSuggestWidget = true;\n                this._register(suggestController.widget.value.onDidShow(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n                this._register(suggestController.widget.value.onDidHide(() => {\n                    this.isSuggestWidgetVisible = false;\n                    this.update(false);\n                }));\n                this._register(suggestController.widget.value.onDidFocus(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n            };\n            this._register(Event.once(suggestController.model.onDidTrigger)(e => {\n                bindToSuggestWidget();\n            }));\n        }\n        this.update(this._isActive);\n    }\n    update(newActive) {\n        const newInlineCompletion = this.getSuggestItemInfo();\n        let shouldFire = false;\n        if (!suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\n            this._currentSuggestItemInfo = newInlineCompletion;\n            shouldFire = true;\n        }\n        if (this._isActive !== newActive) {\n            this._isActive = newActive;\n            shouldFire = true;\n        }\n        if (shouldFire) {\n            this.onDidChangeEmitter.fire();\n        }\n    }\n    getSuggestItemInfo() {\n        const suggestController = SuggestController.get(this.editor);\n        if (!suggestController) {\n            return undefined;\n        }\n        if (!this.isSuggestWidgetVisible) {\n            return undefined;\n        }\n        const focusedItem = suggestController.widget.value.getFocusedItem();\n        if (!focusedItem) {\n            return undefined;\n        }\n        // TODO: item.isResolved\n        return suggestionToSuggestItemInfo(suggestController, this.editor.getPosition(), focusedItem.item, this.isShiftKeyPressed);\n    }\n    stopForceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        suggestController === null || suggestController === void 0 ? void 0 : suggestController.stopForceRenderingAbove();\n    }\n    forceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        suggestController === null || suggestController === void 0 ? void 0 : suggestController.forceRenderingAbove();\n    }\n}\nexport function rangeStartsWith(rangeToTest, prefix) {\n    return (prefix.startLineNumber === rangeToTest.startLineNumber &&\n        prefix.startColumn === rangeToTest.startColumn &&\n        (prefix.endLineNumber < rangeToTest.endLineNumber ||\n            (prefix.endLineNumber === rangeToTest.endLineNumber &&\n                prefix.endColumn <= rangeToTest.endColumn)));\n}\nfunction suggestItemInfoEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    return a.completionItemKind === b.completionItemKind &&\n        a.isSnippetText === b.isSnippetText &&\n        normalizedInlineCompletionsEquals(a.normalizedInlineCompletion, b.normalizedInlineCompletion);\n}\nfunction suggestionToSuggestItemInfo(suggestController, position, item, toggleMode) {\n    // additionalTextEdits might not be resolved here, this could be problematic.\n    if (Array.isArray(item.completion.additionalTextEdits) && item.completion.additionalTextEdits.length > 0) {\n        // cannot represent additional text edits. TODO: Now we can.\n        return {\n            completionItemKind: item.completion.kind,\n            isSnippetText: false,\n            normalizedInlineCompletion: {\n                // Dummy element, so that space is reserved, but no text is shown\n                range: Range.fromPositions(position, position),\n                insertText: '',\n                filterText: '',\n                snippetInfo: undefined,\n                additionalTextEdits: [],\n            },\n        };\n    }\n    let { insertText } = item.completion;\n    let isSnippetText = false;\n    if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */) {\n        const snippet = new SnippetParser().parse(insertText);\n        const model = suggestController.editor.getModel();\n        // Ignore snippets that are too large.\n        // Adjust whitespace is expensive for them.\n        if (snippet.children.length > 100) {\n            return undefined;\n        }\n        SnippetSession.adjustWhitespace(model, position, true, snippet);\n        insertText = snippet.toString();\n        isSnippetText = true;\n    }\n    const info = suggestController.getOverwriteInfo(item, toggleMode);\n    return {\n        isSnippetText,\n        completionItemKind: item.completion.kind,\n        normalizedInlineCompletion: {\n            insertText: insertText,\n            filterText: insertText,\n            range: Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0))),\n            snippetInfo: undefined,\n            additionalTextEdits: [],\n        }\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { BaseGhostTextWidgetModel, GhostText } from './ghostText.js';\nimport { provideInlineCompletions, UpdateOperation } from './inlineCompletionsModel.js';\nimport { inlineCompletionToGhostText, minimizeInlineCompletion } from './inlineCompletionToGhostText.js';\nimport { SuggestWidgetInlineCompletionProvider } from './suggestWidgetInlineCompletionProvider.js';\nlet SuggestWidgetPreviewModel = class SuggestWidgetPreviewModel extends BaseGhostTextWidgetModel {\n    get isActive() {\n        return this.suggestionInlineCompletionSource.state !== undefined;\n    }\n    constructor(editor, cache, languageFeaturesService) {\n        super(editor);\n        this.cache = cache;\n        this.languageFeaturesService = languageFeaturesService;\n        this.suggestionInlineCompletionSource = this._register(new SuggestWidgetInlineCompletionProvider(this.editor, \n        // Use the first cache item (if any) as preselection.\n        () => {\n            var _a, _b, _c;\n            // We might get asked in a content change event before the cache has received that event.\n            (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.updateRanges();\n            return (_c = (_b = this.cache.value) === null || _b === void 0 ? void 0 : _b.completions[0]) === null || _c === void 0 ? void 0 : _c.toLiveInlineCompletion();\n        }));\n        this.updateOperation = this._register(new MutableDisposable());\n        this.updateCacheSoon = this._register(new RunOnceScheduler(() => this.updateCache(), 50));\n        this.minReservedLineCount = 0;\n        this._register(this.suggestionInlineCompletionSource.onDidChange(() => {\n            if (!this.editor.hasModel()) {\n                // onDidChange might be called when calling setModel on the editor, before we are disposed.\n                return;\n            }\n            this.updateCacheSoon.schedule();\n            const suggestWidgetState = this.suggestionInlineCompletionSource.state;\n            if (!suggestWidgetState) {\n                this.minReservedLineCount = 0;\n            }\n            const newGhostText = this.ghostText;\n            if (newGhostText) {\n                this.minReservedLineCount = Math.max(this.minReservedLineCount, sum(newGhostText.parts.map(p => p.lines.length - 1)));\n            }\n            if (this.minReservedLineCount >= 1) {\n                this.suggestionInlineCompletionSource.forceRenderingAbove();\n            }\n            else {\n                this.suggestionInlineCompletionSource.stopForceRenderingAbove();\n            }\n            this.onDidChangeEmitter.fire();\n        }));\n        this._register(this.cache.onDidChange(() => {\n            this.onDidChangeEmitter.fire();\n        }));\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\n            this.minReservedLineCount = 0;\n            this.updateCacheSoon.schedule();\n            this.onDidChangeEmitter.fire();\n        }));\n        this._register(toDisposable(() => this.suggestionInlineCompletionSource.stopForceRenderingAbove()));\n    }\n    isSuggestionPreviewEnabled() {\n        const suggestOptions = this.editor.getOption(112 /* EditorOption.suggest */);\n        return suggestOptions.preview;\n    }\n    updateCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const state = this.suggestionInlineCompletionSource.state;\n            if (!state || !state.selectedItem) {\n                return;\n            }\n            const info = {\n                text: state.selectedItem.normalizedInlineCompletion.insertText,\n                range: state.selectedItem.normalizedInlineCompletion.range,\n                isSnippetText: state.selectedItem.isSnippetText,\n                completionKind: state.selectedItem.completionItemKind,\n            };\n            const position = this.editor.getPosition();\n            if (state.selectedItem.isSnippetText ||\n                state.selectedItem.completionItemKind === 27 /* CompletionItemKind.Snippet */ ||\n                state.selectedItem.completionItemKind === 20 /* CompletionItemKind.File */ ||\n                state.selectedItem.completionItemKind === 23 /* CompletionItemKind.Folder */) {\n                // Don't ask providers for these types of suggestions.\n                this.cache.clear();\n                return;\n            }\n            const promise = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                let result;\n                try {\n                    result = yield provideInlineCompletions(this.languageFeaturesService.inlineCompletionsProvider, position, this.editor.getModel(), { triggerKind: InlineCompletionTriggerKind.Automatic, selectedSuggestionInfo: info }, token);\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                    return;\n                }\n                if (token.isCancellationRequested) {\n                    result.dispose();\n                    return;\n                }\n                this.cache.setValue(this.editor, result, InlineCompletionTriggerKind.Automatic);\n                this.onDidChangeEmitter.fire();\n            }));\n            const operation = new UpdateOperation(promise, InlineCompletionTriggerKind.Automatic);\n            this.updateOperation.value = operation;\n            yield promise;\n            if (this.updateOperation.value === operation) {\n                this.updateOperation.clear();\n            }\n        });\n    }\n    get ghostText() {\n        var _a, _b, _c;\n        const isSuggestionPreviewEnabled = this.isSuggestionPreviewEnabled();\n        const model = this.editor.getModel();\n        const augmentedCompletion = minimizeInlineCompletion(model, (_b = (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions[0]) === null || _b === void 0 ? void 0 : _b.toLiveInlineCompletion());\n        const suggestWidgetState = this.suggestionInlineCompletionSource.state;\n        const suggestInlineCompletion = minimizeInlineCompletion(model, (_c = suggestWidgetState === null || suggestWidgetState === void 0 ? void 0 : suggestWidgetState.selectedItem) === null || _c === void 0 ? void 0 : _c.normalizedInlineCompletion);\n        const isAugmentedCompletionValid = augmentedCompletion\n            && suggestInlineCompletion\n            // The intellisense completion must be a prefix of the augmented completion\n            && augmentedCompletion.insertText.startsWith(suggestInlineCompletion.insertText)\n            // The augmented completion must replace the intellisense completion range, but can replace even more\n            && rangeExtends(augmentedCompletion.range, suggestInlineCompletion.range);\n        if (!isSuggestionPreviewEnabled && !isAugmentedCompletionValid) {\n            return undefined;\n        }\n        // If the augmented completion is not valid and there is no suggest inline completion, we still show the augmented completion.\n        const finalCompletion = isAugmentedCompletionValid ? augmentedCompletion : (suggestInlineCompletion || augmentedCompletion);\n        const inlineCompletionPreviewLength = isAugmentedCompletionValid ? finalCompletion.insertText.length - suggestInlineCompletion.insertText.length : 0;\n        const newGhostText = this.toGhostText(finalCompletion, inlineCompletionPreviewLength);\n        return newGhostText;\n    }\n    toGhostText(completion, inlineCompletionPreviewLength) {\n        const mode = this.editor.getOptions().get(112 /* EditorOption.suggest */).previewMode;\n        return completion\n            ? (inlineCompletionToGhostText(completion, this.editor.getModel(), mode, this.editor.getPosition(), inlineCompletionPreviewLength) ||\n                // Show an invisible ghost text to reserve space\n                new GhostText(completion.range.endLineNumber, [], this.minReservedLineCount))\n            : undefined;\n    }\n};\nSuggestWidgetPreviewModel = __decorate([\n    __param(2, ILanguageFeaturesService)\n], SuggestWidgetPreviewModel);\nexport { SuggestWidgetPreviewModel };\nfunction sum(arr) {\n    return arr.reduce((a, b) => a + b, 0);\n}\nfunction rangeExtends(extendingRange, rangeToExtend) {\n    return extendingRange.startLineNumber === rangeToExtend.startLineNumber &&\n        extendingRange.startColumn === rangeToExtend.startColumn &&\n        ((extendingRange.endLineNumber === rangeToExtend.endLineNumber && extendingRange.endColumn >= rangeToExtend.endColumn)\n            || extendingRange.endLineNumber > rangeToExtend.endLineNumber);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { InlineCompletionsModel, SynchronizedInlineCompletionsCache } from './inlineCompletionsModel.js';\nimport { SuggestWidgetPreviewModel } from './suggestWidgetPreviewModel.js';\nimport { createDisposableRef } from './utils.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nexport class DelegatingModel extends Disposable {\n    constructor() {\n        super(...arguments);\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.hasCachedGhostText = false;\n        this.currentModelRef = this._register(new MutableDisposable());\n    }\n    get targetModel() {\n        var _a;\n        return (_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object;\n    }\n    setTargetModel(model) {\n        var _a;\n        if (((_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object) === model) {\n            return;\n        }\n        this.currentModelRef.clear();\n        this.currentModelRef.value = model ? createDisposableRef(model, model.onDidChange(() => {\n            this.hasCachedGhostText = false;\n            this.onDidChangeEmitter.fire();\n        })) : undefined;\n        this.hasCachedGhostText = false;\n        this.onDidChangeEmitter.fire();\n    }\n    get ghostText() {\n        var _a, _b;\n        if (!this.hasCachedGhostText) {\n            this.cachedGhostText = (_b = (_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object) === null || _b === void 0 ? void 0 : _b.ghostText;\n            this.hasCachedGhostText = true;\n        }\n        return this.cachedGhostText;\n    }\n    setExpanded(expanded) {\n        var _a;\n        (_a = this.targetModel) === null || _a === void 0 ? void 0 : _a.setExpanded(expanded);\n    }\n    get minReservedLineCount() {\n        return this.targetModel ? this.targetModel.minReservedLineCount : 0;\n    }\n}\n/**\n * A ghost text model that is both driven by inline completions and the suggest widget.\n*/\nlet GhostTextModel = class GhostTextModel extends DelegatingModel {\n    get activeInlineCompletionsModel() {\n        if (this.targetModel === this.inlineCompletionsModel) {\n            return this.inlineCompletionsModel;\n        }\n        return undefined;\n    }\n    constructor(editor, instantiationService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.sharedCache = this._register(new SharedInlineCompletionCache());\n        this.suggestWidgetAdapterModel = this._register(this.instantiationService.createInstance(SuggestWidgetPreviewModel, this.editor, this.sharedCache));\n        this.inlineCompletionsModel = this._register(this.instantiationService.createInstance(InlineCompletionsModel, this.editor, this.sharedCache));\n        this._register(this.suggestWidgetAdapterModel.onDidChange(() => {\n            this.updateModel();\n        }));\n        this.updateModel();\n    }\n    updateModel() {\n        this.setTargetModel(this.suggestWidgetAdapterModel.isActive\n            ? this.suggestWidgetAdapterModel\n            : this.inlineCompletionsModel);\n        this.inlineCompletionsModel.setActive(this.targetModel === this.inlineCompletionsModel);\n    }\n    shouldShowHoverAt(hoverRange) {\n        var _a;\n        const ghostText = (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.ghostText;\n        if (ghostText) {\n            return ghostText.parts.some(p => hoverRange.containsPosition(new Position(ghostText.lineNumber, p.column)));\n        }\n        return false;\n    }\n    triggerInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.trigger(InlineCompletionTriggerKind.Explicit);\n    }\n    commitInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.commitCurrentSuggestion();\n    }\n    commitInlineCompletionPartially() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.commitCurrentSuggestionPartially();\n    }\n    hideInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.hide();\n    }\n    showNextInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.showNext();\n    }\n    showPreviousInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.showPrevious();\n    }\n};\nGhostTextModel = __decorate([\n    __param(1, IInstantiationService)\n], GhostTextModel);\nexport { GhostTextModel };\nexport class SharedInlineCompletionCache extends Disposable {\n    constructor() {\n        super(...arguments);\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.cache = this._register(new MutableDisposable());\n    }\n    get value() {\n        return this.cache.value;\n    }\n    setValue(editor, completionsSource, triggerKind) {\n        this.cache.value = new SynchronizedInlineCompletionsCache(completionsSource, editor, () => this.onDidChangeEmitter.fire(), triggerKind);\n    }\n    clearAndLeak() {\n        return this.cache.clearAndLeak();\n    }\n    clear() {\n        this.cache.clear();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar _a;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './ghostText.css';\nimport { applyFontInfo } from '../../../browser/config/domFontInfo.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nimport { LineTokens } from '../../../common/tokens/lineTokens.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { StringBuilder } from '../../../common/core/stringBuilder.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { GhostTextReplacement } from './ghostText.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('editorGhostText', { createHTML: value => value });\nlet GhostTextWidget = class GhostTextWidget extends Disposable {\n    constructor(editor, model, instantiationService, languageService) {\n        super();\n        this.editor = editor;\n        this.model = model;\n        this.instantiationService = instantiationService;\n        this.languageService = languageService;\n        this.disposed = false;\n        this.partsWidget = this._register(this.instantiationService.createInstance(DecorationsWidget, this.editor));\n        this.additionalLinesWidget = this._register(new AdditionalLinesWidget(this.editor, this.languageService.languageIdCodec));\n        this.viewMoreContentWidget = undefined;\n        this.replacementDecoration = this._register(new DisposableDecorations(this.editor));\n        this._register(this.editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(30 /* EditorOption.disableMonospaceOptimizations */)\n                || e.hasChanged(111 /* EditorOption.stopRenderingLineAfter */)\n                || e.hasChanged(93 /* EditorOption.renderWhitespace */)\n                || e.hasChanged(88 /* EditorOption.renderControlCharacters */)\n                || e.hasChanged(48 /* EditorOption.fontLigatures */)\n                || e.hasChanged(47 /* EditorOption.fontInfo */)\n                || e.hasChanged(63 /* EditorOption.lineHeight */)) {\n                this.update();\n            }\n        }));\n        this._register(toDisposable(() => {\n            var _a;\n            this.disposed = true;\n            this.update();\n            (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.viewMoreContentWidget = undefined;\n        }));\n        this._register(model.onDidChange(() => {\n            this.update();\n        }));\n        this.update();\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        return (this.additionalLinesWidget.viewZoneId === viewZoneId);\n    }\n    update() {\n        var _a;\n        const ghostText = this.model.ghostText;\n        if (!this.editor.hasModel() || !ghostText || this.disposed) {\n            this.partsWidget.clear();\n            this.additionalLinesWidget.clear();\n            this.replacementDecoration.clear();\n            return;\n        }\n        const inlineTexts = new Array();\n        const additionalLines = new Array();\n        function addToAdditionalLines(lines, className) {\n            if (additionalLines.length > 0) {\n                const lastLine = additionalLines[additionalLines.length - 1];\n                if (className) {\n                    lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* InlineDecorationType.Regular */));\n                }\n                lastLine.content += lines[0];\n                lines = lines.slice(1);\n            }\n            for (const line of lines) {\n                additionalLines.push({\n                    content: line,\n                    decorations: className ? [new LineDecoration(1, line.length + 1, className, 0 /* InlineDecorationType.Regular */)] : []\n                });\n            }\n        }\n        if (ghostText instanceof GhostTextReplacement) {\n            this.replacementDecoration.setDecorations([\n                {\n                    range: new Range(ghostText.lineNumber, ghostText.columnStart, ghostText.lineNumber, ghostText.columnStart + ghostText.length),\n                    options: {\n                        inlineClassName: 'inline-completion-text-to-replace',\n                        description: 'GhostTextReplacement'\n                    }\n                },\n            ]);\n        }\n        else {\n            this.replacementDecoration.setDecorations([]);\n        }\n        const textBufferLine = this.editor.getModel().getLineContent(ghostText.lineNumber);\n        let hiddenTextStartColumn = undefined;\n        let lastIdx = 0;\n        for (const part of ghostText.parts) {\n            let lines = part.lines;\n            if (hiddenTextStartColumn === undefined) {\n                inlineTexts.push({\n                    column: part.column,\n                    text: lines[0],\n                    preview: part.preview,\n                });\n                lines = lines.slice(1);\n            }\n            else {\n                addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\n            }\n            if (lines.length > 0) {\n                addToAdditionalLines(lines, 'ghost-text');\n                if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\n                    hiddenTextStartColumn = part.column;\n                }\n            }\n            lastIdx = part.column - 1;\n        }\n        if (hiddenTextStartColumn !== undefined) {\n            addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\n        }\n        this.partsWidget.setParts(ghostText.lineNumber, inlineTexts, hiddenTextStartColumn !== undefined ? { column: hiddenTextStartColumn, length: textBufferLine.length + 1 - hiddenTextStartColumn } : undefined);\n        this.additionalLinesWidget.updateLines(ghostText.lineNumber, additionalLines, ghostText.additionalReservedLineCount);\n        if (0 < 0) {\n            // Not supported at the moment, condition is always false.\n            this.viewMoreContentWidget = this.renderViewMoreLines(new Position(ghostText.lineNumber, this.editor.getModel().getLineMaxColumn(ghostText.lineNumber)), '', 0);\n        }\n        else {\n            (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.viewMoreContentWidget = undefined;\n        }\n    }\n    renderViewMoreLines(position, firstLineText, remainingLinesLength) {\n        const fontInfo = this.editor.getOption(47 /* EditorOption.fontInfo */);\n        const domNode = document.createElement('div');\n        domNode.className = 'suggest-preview-additional-widget';\n        applyFontInfo(domNode, fontInfo);\n        const spacer = document.createElement('span');\n        spacer.className = 'content-spacer';\n        spacer.append(firstLineText);\n        domNode.append(spacer);\n        const newline = document.createElement('span');\n        newline.className = 'content-newline suggest-preview-text';\n        newline.append('⏎  ');\n        domNode.append(newline);\n        const disposableStore = new DisposableStore();\n        const button = document.createElement('div');\n        button.className = 'button suggest-preview-text';\n        button.append(`+${remainingLinesLength} lines…`);\n        disposableStore.add(dom.addStandardDisposableListener(button, 'mousedown', (e) => {\n            var _a;\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.setExpanded(true);\n            e.preventDefault();\n            this.editor.focus();\n        }));\n        domNode.append(button);\n        return new ViewMoreLinesContentWidget(this.editor, position, domNode, disposableStore);\n    }\n};\nGhostTextWidget = __decorate([\n    __param(2, IInstantiationService),\n    __param(3, ILanguageService)\n], GhostTextWidget);\nexport { GhostTextWidget };\nclass DisposableDecorations {\n    constructor(editor) {\n        this.editor = editor;\n        this.decorationIds = [];\n    }\n    setDecorations(decorations) {\n        // Using change decorations ensures that we update the id's before some event handler is called.\n        this.editor.changeDecorations(accessor => {\n            this.decorationIds = accessor.deltaDecorations(this.decorationIds, decorations);\n        });\n    }\n    clear() {\n        this.setDecorations([]);\n    }\n    dispose() {\n        this.clear();\n    }\n}\nclass DecorationsWidget {\n    constructor(editor) {\n        this.editor = editor;\n        this.decorationIds = [];\n    }\n    dispose() {\n        this.clear();\n    }\n    clear() {\n        // Using change decorations ensures that we update the id's before some event handler is called.\n        this.editor.changeDecorations(accessor => {\n            this.decorationIds = accessor.deltaDecorations(this.decorationIds, []);\n        });\n    }\n    setParts(lineNumber, parts, hiddenText) {\n        const textModel = this.editor.getModel();\n        if (!textModel) {\n            return;\n        }\n        const hiddenTextDecorations = new Array();\n        if (hiddenText) {\n            hiddenTextDecorations.push({\n                range: Range.fromPositions(new Position(lineNumber, hiddenText.column), new Position(lineNumber, hiddenText.column + hiddenText.length)),\n                options: {\n                    inlineClassName: 'ghost-text-hidden',\n                    description: 'ghost-text-hidden',\n                }\n            });\n        }\n        // Using change decorations ensures that we update the id's before some event handler is called.\n        this.editor.changeDecorations(accessor => {\n            this.decorationIds = accessor.deltaDecorations(this.decorationIds, parts.map(p => {\n                return ({\n                    range: Range.fromPositions(new Position(lineNumber, p.column)),\n                    options: {\n                        description: 'ghost-text',\n                        after: { content: p.text, inlineClassName: p.preview ? 'ghost-text-decoration-preview' : 'ghost-text-decoration', cursorStops: InjectedTextCursorStops.Left },\n                        showIfCollapsed: true,\n                    }\n                });\n            }).concat(hiddenTextDecorations));\n        });\n    }\n}\nclass AdditionalLinesWidget {\n    get viewZoneId() { return this._viewZoneId; }\n    constructor(editor, languageIdCodec) {\n        this.editor = editor;\n        this.languageIdCodec = languageIdCodec;\n        this._viewZoneId = undefined;\n    }\n    dispose() {\n        this.clear();\n    }\n    clear() {\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n        });\n    }\n    updateLines(lineNumber, additionalLines, minReservedLineCount) {\n        const textModel = this.editor.getModel();\n        if (!textModel) {\n            return;\n        }\n        const { tabSize } = textModel.getOptions();\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n            const heightInLines = Math.max(additionalLines.length, minReservedLineCount);\n            if (heightInLines > 0) {\n                const domNode = document.createElement('div');\n                renderLines(domNode, tabSize, additionalLines, this.editor.getOptions(), this.languageIdCodec);\n                this._viewZoneId = changeAccessor.addZone({\n                    afterLineNumber: lineNumber,\n                    heightInLines: heightInLines,\n                    domNode,\n                    afterColumnAffinity: 1 /* PositionAffinity.Right */\n                });\n            }\n        });\n    }\n}\nfunction renderLines(domNode, tabSize, lines, opts, languageIdCodec) {\n    const disableMonospaceOptimizations = opts.get(30 /* EditorOption.disableMonospaceOptimizations */);\n    const stopRenderingLineAfter = opts.get(111 /* EditorOption.stopRenderingLineAfter */);\n    // To avoid visual confusion, we don't want to render visible whitespace\n    const renderWhitespace = 'none';\n    const renderControlCharacters = opts.get(88 /* EditorOption.renderControlCharacters */);\n    const fontLigatures = opts.get(48 /* EditorOption.fontLigatures */);\n    const fontInfo = opts.get(47 /* EditorOption.fontInfo */);\n    const lineHeight = opts.get(63 /* EditorOption.lineHeight */);\n    const sb = new StringBuilder(10000);\n    sb.appendString('<div class=\"suggest-preview-text\">');\n    for (let i = 0, len = lines.length; i < len; i++) {\n        const lineData = lines[i];\n        const line = lineData.content;\n        sb.appendString('<div class=\"view-line');\n        sb.appendString('\" style=\"top:');\n        sb.appendString(String(i * lineHeight));\n        sb.appendString('px;width:1000000px;\">');\n        const isBasicASCII = strings.isBasicASCII(line);\n        const containsRTL = strings.containsRTL(line);\n        const lineTokens = LineTokens.createEmpty(line, languageIdCodec);\n        renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, line, false, isBasicASCII, containsRTL, 0, lineTokens, lineData.decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null), sb);\n        sb.appendString('</div>');\n    }\n    sb.appendString('</div>');\n    applyFontInfo(domNode, fontInfo);\n    const html = sb.build();\n    const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n    domNode.innerHTML = trustedhtml;\n}\nclass ViewMoreLinesContentWidget extends Disposable {\n    constructor(editor, position, domNode, disposableStore) {\n        super();\n        this.editor = editor;\n        this.position = position;\n        this.domNode = domNode;\n        this.allowEditorOverflow = false;\n        this.suppressMouseDown = false;\n        this._register(disposableStore);\n        this._register(toDisposable(() => {\n            this.editor.removeContentWidget(this);\n        }));\n        this.editor.addContentWidget(this);\n    }\n    getId() {\n        return 'editor.widget.viewMoreLinesWidget';\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    getPosition() {\n        return {\n            position: this.position,\n            preference: [0 /* ContentWidgetPositionPreference.EXACT */]\n        };\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { firstNonWhitespaceIndex } from '../../../../base/common/strings.js';\nimport { EditorAction } from '../../../browser/editorExtensions.js';\nimport { CursorColumns } from '../../../common/core/cursorColumns.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { inlineSuggestCommitId, showNextInlineSuggestionActionId, showPreviousInlineSuggestionActionId } from './consts.js';\nimport { GhostTextModel } from './ghostTextModel.js';\nimport { GhostTextWidget } from './ghostTextWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { Action2, MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nlet GhostTextController = class GhostTextController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(GhostTextController.ID);\n    }\n    get activeModel() {\n        var _a;\n        return (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.model;\n    }\n    constructor(editor, instantiationService, contextKeyService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.triggeredExplicitly = false;\n        this.activeController = this._register(new MutableDisposable());\n        this.activeModelDidChangeEmitter = this._register(new Emitter());\n        /**\n         * Tracks the first alternative version id until which only partial inline suggestions can be undone.\n         * Any other content change will invalidate this.\n         * This field is used to set the corresponding context key.\n         */\n        this.firstUndoableVersionId = undefined;\n        this.alwaysShowInlineSuggestionToolbar = GhostTextController.alwaysShowInlineSuggestionToolbar.bindTo(this.contextKeyService);\n        this._register(this.editor.onDidChangeModelContent((e) => {\n            var _a;\n            if (!e.isUndoing || this.firstUndoableVersionId && this.editor.getModel().getAlternativeVersionId() < this.firstUndoableVersionId) {\n                (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.contextKeys.canUndoInlineSuggestion.reset();\n                this.firstUndoableVersionId = undefined; // Will be set again if this change was caused by an inline suggestion.\n            }\n        }));\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\n            var _a;\n            if (e.reason === 3 /* CursorChangeReason.Explicit */) {\n                (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.contextKeys.canUndoInlineSuggestion.reset();\n                this.firstUndoableVersionId = undefined;\n            }\n        }));\n        this._register(this.editor.onDidChangeModel(() => {\n            this.update();\n        }));\n        this._register(this.editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(112 /* EditorOption.suggest */) || e.hasChanged(59 /* EditorOption.inlineSuggest */)) {\n                this.update();\n            }\n        }));\n        this.update();\n    }\n    // Don't call this method when not necessary. It will recreate the activeController.\n    update() {\n        const suggestOptions = this.editor.getOption(112 /* EditorOption.suggest */);\n        const inlineSuggestOptions = this.editor.getOption(59 /* EditorOption.inlineSuggest */);\n        this.alwaysShowInlineSuggestionToolbar.set(inlineSuggestOptions.showToolbar === 'always');\n        const shouldCreate = this.editor.hasModel() && (suggestOptions.preview || inlineSuggestOptions.enabled || this.triggeredExplicitly);\n        if (shouldCreate !== !!this.activeController.value) {\n            this.activeController.value = undefined;\n            // ActiveGhostTextController is only created if one of those settings is set or if the inline completions are triggered explicitly.\n            this.activeController.value =\n                shouldCreate ? this.instantiationService.createInstance(ActiveGhostTextController, this.editor)\n                    : undefined;\n            this.activeModelDidChangeEmitter.fire();\n        }\n    }\n    shouldShowHoverAt(hoverRange) {\n        var _a;\n        return ((_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.shouldShowHoverAt(hoverRange)) || false;\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        var _a, _b;\n        return ((_b = (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.widget) === null || _b === void 0 ? void 0 : _b.shouldShowHoverAtViewZone(viewZoneId)) || false;\n    }\n    trigger() {\n        var _a;\n        this.triggeredExplicitly = true;\n        if (!this.activeController.value) {\n            this.update();\n        }\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.triggerInlineCompletion();\n    }\n    commitPartially() {\n        var _a, _b, _c;\n        const nextVersion = this.firstUndoableVersionId; // Read this before committing, as it will be reset.\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.commitInlineCompletionPartially();\n        (_c = (_b = this.activeController) === null || _b === void 0 ? void 0 : _b.value) === null || _c === void 0 ? void 0 : _c.contextKeys.canUndoInlineSuggestion.set(true);\n        // Don't override this field if the previous command already accepted some inline suggestion.\n        this.firstUndoableVersionId = nextVersion !== null && nextVersion !== void 0 ? nextVersion : this.editor.getModel().getAlternativeVersionId();\n    }\n    commit() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.commitInlineCompletion();\n    }\n    hide() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.hideInlineCompletion();\n    }\n    showNextInlineCompletion() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.showNextInlineCompletion();\n    }\n    showPreviousInlineCompletion() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.showPreviousInlineCompletion();\n    }\n};\nGhostTextController.inlineSuggestionVisible = new RawContextKey('inlineSuggestionVisible', false, nls.localize('inlineSuggestionVisible', \"Whether an inline suggestion is visible\"));\nGhostTextController.inlineSuggestionHasIndentation = new RawContextKey('inlineSuggestionHasIndentation', false, nls.localize('inlineSuggestionHasIndentation', \"Whether the inline suggestion starts with whitespace\"));\nGhostTextController.inlineSuggestionHasIndentationLessThanTabSize = new RawContextKey('inlineSuggestionHasIndentationLessThanTabSize', true, nls.localize('inlineSuggestionHasIndentationLessThanTabSize', \"Whether the inline suggestion starts with whitespace that is less than what would be inserted by tab\"));\n/**\n * Enables to use Ctrl+Left to undo partially accepted inline completions.\n */\nGhostTextController.canUndoInlineSuggestion = new RawContextKey('canUndoInlineSuggestion', false, nls.localize('canUndoInlineSuggestion', \"Whether undo would undo an inline suggestion\"));\nGhostTextController.alwaysShowInlineSuggestionToolbar = new RawContextKey('alwaysShowInlineSuggestionToolbar', false, nls.localize('alwaysShowInlineSuggestionToolbar', \"Whether the inline suggestion toolbar should always be visible\"));\nGhostTextController.ID = 'editor.contrib.ghostTextController';\nGhostTextController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IContextKeyService)\n], GhostTextController);\nexport { GhostTextController };\nclass GhostTextContextKeys {\n    constructor(contextKeyService) {\n        this.contextKeyService = contextKeyService;\n        this.inlineCompletionVisible = GhostTextController.inlineSuggestionVisible.bindTo(this.contextKeyService);\n        this.inlineCompletionSuggestsIndentation = GhostTextController.inlineSuggestionHasIndentation.bindTo(this.contextKeyService);\n        this.inlineCompletionSuggestsIndentationLessThanTabSize = GhostTextController.inlineSuggestionHasIndentationLessThanTabSize.bindTo(this.contextKeyService);\n        this.canUndoInlineSuggestion = GhostTextController.canUndoInlineSuggestion.bindTo(this.contextKeyService);\n    }\n}\n/**\n * The controller for a text editor with an initialized text model.\n * Must be disposed as soon as the model detaches from the editor.\n*/\nlet ActiveGhostTextController = class ActiveGhostTextController extends Disposable {\n    constructor(editor, instantiationService, contextKeyService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.contextKeys = new GhostTextContextKeys(this.contextKeyService);\n        this.model = this._register(this.instantiationService.createInstance(GhostTextModel, this.editor));\n        this.widget = this._register(this.instantiationService.createInstance(GhostTextWidget, this.editor, this.model));\n        this._register(toDisposable(() => {\n            this.contextKeys.inlineCompletionVisible.set(false);\n            this.contextKeys.inlineCompletionSuggestsIndentation.set(false);\n            this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(true);\n        }));\n        this._register(this.model.onDidChange(() => {\n            this.updateContextKeys();\n        }));\n        this.updateContextKeys();\n    }\n    updateContextKeys() {\n        var _a;\n        this.contextKeys.inlineCompletionVisible.set(((_a = this.model.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.ghostText) !== undefined);\n        let startsWithIndentation = false;\n        let startsWithIndentationLessThanTabSize = true;\n        const ghostText = this.model.inlineCompletionsModel.ghostText;\n        if (!!this.model.activeInlineCompletionsModel && ghostText && ghostText.parts.length > 0) {\n            const { column, lines } = ghostText.parts[0];\n            const firstLine = lines[0];\n            const indentationEndColumn = this.editor.getModel().getLineIndentColumn(ghostText.lineNumber);\n            const inIndentation = column <= indentationEndColumn;\n            if (inIndentation) {\n                let firstNonWsIdx = firstNonWhitespaceIndex(firstLine);\n                if (firstNonWsIdx === -1) {\n                    firstNonWsIdx = firstLine.length - 1;\n                }\n                startsWithIndentation = firstNonWsIdx > 0;\n                const tabSize = this.editor.getModel().getOptions().tabSize;\n                const visibleColumnIndentation = CursorColumns.visibleColumnFromColumn(firstLine, firstNonWsIdx + 1, tabSize);\n                startsWithIndentationLessThanTabSize = visibleColumnIndentation < tabSize;\n            }\n        }\n        this.contextKeys.inlineCompletionSuggestsIndentation.set(startsWithIndentation);\n        this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(startsWithIndentationLessThanTabSize);\n    }\n};\nActiveGhostTextController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IContextKeyService)\n], ActiveGhostTextController);\nexport { ActiveGhostTextController };\nclass ShowNextInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: ShowNextInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showNext', \"Show Next Inline Suggestion\"),\n            alias: 'Show Next Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* KeyMod.Alt */ | 89 /* KeyCode.BracketRight */,\n            },\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            if (controller) {\n                controller.showNextInlineCompletion();\n                editor.focus();\n            }\n        });\n    }\n}\nShowNextInlineSuggestionAction.ID = showNextInlineSuggestionActionId;\nexport { ShowNextInlineSuggestionAction };\nclass ShowPreviousInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: ShowPreviousInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showPrevious', \"Show Previous Inline Suggestion\"),\n            alias: 'Show Previous Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* KeyMod.Alt */ | 87 /* KeyCode.BracketLeft */,\n            },\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            if (controller) {\n                controller.showPreviousInlineCompletion();\n                editor.focus();\n            }\n        });\n    }\n}\nShowPreviousInlineSuggestionAction.ID = showPreviousInlineSuggestionActionId;\nexport { ShowPreviousInlineSuggestionAction };\nexport class TriggerInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.trigger',\n            label: nls.localize('action.inlineSuggest.trigger', \"Trigger Inline Suggestion\"),\n            alias: 'Trigger Inline Suggestion',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            controller === null || controller === void 0 ? void 0 : controller.trigger();\n        });\n    }\n}\nexport class AcceptNextWordOfInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.acceptNextWord',\n            label: nls.localize('action.inlineSuggest.acceptNextWord', \"Accept Next Word Of Inline Suggestion\"),\n            alias: 'Accept Next Word Of Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */ + 1,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 17 /* KeyCode.RightArrow */,\n            },\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('acceptWord', 'Accept Word'),\n                    group: 'primary',\n                    order: 2,\n                }],\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            if (controller) {\n                controller.commitPartially();\n            }\n        });\n    }\n}\nexport class AcceptInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: inlineSuggestCommitId,\n            label: nls.localize('action.inlineSuggest.accept', \"Accept Inline Suggestion\"),\n            alias: 'Accept Inline Suggestion',\n            precondition: GhostTextController.inlineSuggestionVisible,\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('accept', \"Accept\"),\n                    group: 'primary',\n                    order: 1,\n                }],\n            kbOpts: {\n                primary: 2 /* KeyCode.Tab */,\n                weight: 200,\n                kbExpr: ContextKeyExpr.and(GhostTextController.inlineSuggestionVisible, EditorContextKeys.tabMovesFocus.toNegated(), GhostTextController.inlineSuggestionHasIndentationLessThanTabSize),\n            }\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            if (controller) {\n                controller.commit();\n                controller.editor.focus();\n            }\n        });\n    }\n}\nclass HideInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: HideInlineCompletion.ID,\n            label: nls.localize('action.inlineSuggest.hide', \"Hide Inline Suggestion\"),\n            alias: 'Hide Inline Suggestion',\n            precondition: GhostTextController.inlineSuggestionVisible,\n            kbOpts: {\n                weight: 100,\n                primary: 9 /* KeyCode.Escape */,\n            }\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            if (controller) {\n                controller.hide();\n            }\n        });\n    }\n}\nHideInlineCompletion.ID = 'editor.action.inlineSuggest.hide';\nexport { HideInlineCompletion };\nclass ToggleAlwaysShowInlineSuggestionToolbar extends Action2 {\n    constructor() {\n        super({\n            id: ToggleAlwaysShowInlineSuggestionToolbar.ID,\n            title: nls.localize('action.inlineSuggest.alwaysShowToolbar', \"Always Show Toolbar\"),\n            f1: false,\n            precondition: undefined,\n            menu: [{\n                    id: MenuId.InlineSuggestionToolbar,\n                    group: 'secondary',\n                    order: 10,\n                }],\n            toggled: GhostTextController.alwaysShowInlineSuggestionToolbar,\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const configService = accessor.get(IConfigurationService);\n            const currentValue = configService.getValue('editor.inlineSuggest.showToolbar');\n            const newValue = currentValue === 'always' ? 'onHover' : 'always';\n            configService.updateValue('editor.inlineSuggest.showToolbar', newValue);\n        });\n    }\n}\nToggleAlwaysShowInlineSuggestionToolbar.ID = 'editor.action.inlineSuggest.toggleAlwaysShowToolbar';\nexport { ToggleAlwaysShowInlineSuggestionToolbar };\nexport class UndoAcceptPart extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.undo',\n            label: nls.localize('action.inlineSuggest.undo', \"Undo Accept Word\"),\n            alias: 'Undo Accept Word',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.canUndoInlineSuggestion),\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */ + 1,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 15 /* KeyCode.LeftArrow */,\n                kbExpr: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.canUndoInlineSuggestion),\n            },\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('undoAcceptWord', 'Undo Accept Word'),\n                    group: 'secondary',\n                    order: 3,\n                }],\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            (_a = editor.getModel()) === null || _a === void 0 ? void 0 : _a.undo();\n        });\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { GhostTextController } from './ghostTextController.js';\nimport { InlineSuggestionHintsContentWidget } from './inlineSuggestionHintsWidget.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport * as nls from '../../../../nls.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nexport class InlineCompletionsHover {\n    constructor(owner, range, controller) {\n        this.owner = owner;\n        this.range = range;\n        this.controller = controller;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n    requestExplicitContext() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.controller.activeModel) === null || _a === void 0 ? void 0 : _a.activeInlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.completionSession.value) === null || _c === void 0 ? void 0 : _c.ensureUpdateWithExplicitContext();\n    }\n    getInlineCompletionsCount() {\n        var _a, _b;\n        const session = (_b = (_a = this.controller.activeModel) === null || _a === void 0 ? void 0 : _a.activeInlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.completionSession.value;\n        if (!(session === null || session === void 0 ? void 0 : session.hasBeenTriggeredExplicitly)) {\n            return undefined;\n        }\n        return session === null || session === void 0 ? void 0 : session.getInlineCompletionsCountSync();\n    }\n    getInlineCompletionIndex() {\n        var _a, _b, _c;\n        return (_c = (_b = (_a = this.controller.activeModel) === null || _a === void 0 ? void 0 : _a.activeInlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.completionSession.value) === null || _c === void 0 ? void 0 : _c.currentlySelectedIndex;\n    }\n    onDidChange(handler) {\n        var _a, _b;\n        const d = (_b = (_a = this.controller.activeModel) === null || _a === void 0 ? void 0 : _a.activeInlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.onDidChange(handler);\n        return d || Disposable.None;\n    }\n    get commands() {\n        var _a, _b, _c;\n        return ((_c = (_b = (_a = this.controller.activeModel) === null || _a === void 0 ? void 0 : _a.activeInlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.completionSession.value) === null || _c === void 0 ? void 0 : _c.commands) || [];\n    }\n}\nlet InlineCompletionsHoverParticipant = class InlineCompletionsHoverParticipant {\n    constructor(_editor, _languageService, _openerService, accessibilityService, _instantiationService, _telemetryService) {\n        this._editor = _editor;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this.accessibilityService = accessibilityService;\n        this._instantiationService = _instantiationService;\n        this._telemetryService = _telemetryService;\n        this.hoverOrdinal = 3;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        const controller = GhostTextController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        const target = mouseEvent.target;\n        if (target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */) {\n            // handle the case where the mouse is over the view zone\n            const viewZoneData = target.detail;\n            if (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) {\n                return new HoverForeignElementAnchor(1000, this, Range.fromPositions(this._editor.getModel().validatePosition(viewZoneData.positionBefore || viewZoneData.position)), mouseEvent.event.posx, mouseEvent.event.posy, false);\n            }\n        }\n        if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            // handle the case where the mouse is over the empty portion of a line following ghost text\n            if (controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n            }\n        }\n        if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            // handle the case where the mouse is directly over ghost text\n            const mightBeForeignElement = target.detail.mightBeForeignElement;\n            if (mightBeForeignElement && controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n            }\n        }\n        return null;\n    }\n    computeSync(anchor, lineDecorations) {\n        if (this._editor.getOption(59 /* EditorOption.inlineSuggest */).showToolbar === 'always') {\n            return [];\n        }\n        const controller = GhostTextController.get(this._editor);\n        if (controller && controller.shouldShowHoverAt(anchor.range)) {\n            return [new InlineCompletionsHover(this, anchor.range, controller)];\n        }\n        return [];\n    }\n    renderHoverParts(context, hoverParts) {\n        const disposableStore = new DisposableStore();\n        const part = hoverParts[0];\n        this._telemetryService.publicLog2('inlineCompletionHover.shown');\n        if (this.accessibilityService.isScreenReaderOptimized()) {\n            this.renderScreenReaderText(context, part, disposableStore);\n        }\n        const w = this._instantiationService.createInstance(InlineSuggestionHintsContentWidget, this._editor, false);\n        context.fragment.appendChild(w.getDomNode());\n        w.update(null, part.getInlineCompletionIndex() || 0, part.getInlineCompletionsCount(), part.commands);\n        part.requestExplicitContext();\n        disposableStore.add(part.onDidChange(() => {\n            w.update(null, part.getInlineCompletionIndex() || 0, part.getInlineCompletionsCount(), part.commands);\n        }));\n        return disposableStore;\n    }\n    renderScreenReaderText(context, part, disposableStore) {\n        var _a, _b;\n        const $ = dom.$;\n        const markdownHoverElement = $('div.hover-row.markdown-hover');\n        const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n        const renderer = disposableStore.add(new MarkdownRenderer({ editor: this._editor }, this._languageService, this._openerService));\n        const render = (code) => {\n            disposableStore.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const inlineSuggestionAvailable = nls.localize('inlineSuggestionFollows', \"Suggestion:\");\n            const renderedContents = disposableStore.add(renderer.render(new MarkdownString().appendText(inlineSuggestionAvailable).appendCodeblock('text', code)));\n            hoverContentsElement.replaceChildren(renderedContents.element);\n        };\n        const ghostText = (_b = (_a = part.controller.activeModel) === null || _a === void 0 ? void 0 : _a.inlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.ghostText;\n        if (ghostText) {\n            const lineText = this._editor.getModel().getLineContent(ghostText.lineNumber);\n            render(ghostText.renderForScreenReader(lineText));\n        }\n        context.fragment.appendChild(markdownHoverElement);\n    }\n};\nInlineCompletionsHoverParticipant = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IAccessibilityService),\n    __param(4, IInstantiationService),\n    __param(5, ITelemetryService)\n], InlineCompletionsHoverParticipant);\nexport { InlineCompletionsHoverParticipant };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { AcceptInlineCompletion, AcceptNextWordOfInlineCompletion, ToggleAlwaysShowInlineSuggestionToolbar, GhostTextController, HideInlineCompletion, ShowNextInlineSuggestionAction, ShowPreviousInlineSuggestionAction, TriggerInlineSuggestionAction, UndoAcceptPart } from './ghostTextController.js';\nimport { InlineCompletionsHoverParticipant } from './ghostTextHoverParticipant.js';\nimport { registerAction2 } from '../../../../platform/actions/common/actions.js';\nregisterEditorContribution(GhostTextController.ID, GhostTextController, 3 /* EditorContributionInstantiation.Eventually */);\nregisterEditorAction(TriggerInlineSuggestionAction);\nregisterEditorAction(ShowNextInlineSuggestionAction);\nregisterEditorAction(ShowPreviousInlineSuggestionAction);\nregisterEditorAction(AcceptNextWordOfInlineCompletion);\nregisterEditorAction(AcceptInlineCompletion);\nregisterEditorAction(HideInlineCompletion);\nregisterEditorAction(UndoAcceptPart);\nregisterAction2(ToggleAlwaysShowInlineSuggestionToolbar);\nHoverParticipantRegistry.register(InlineCompletionsHoverParticipant);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { h } from '../../../../base/browser/dom.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { KeybindingLabel, unthemedKeybindingLabelOptions } from '../../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { Action, Separator } from '../../../../base/common/actions.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { OS } from '../../../../base/common/platform.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './inlineSuggestionHintsWidget.css';\nimport { showNextInlineSuggestionActionId, showPreviousInlineSuggestionActionId } from './consts.js';\nimport { localize } from '../../../../nls.js';\nimport { createAndFillInActionBarActions, MenuEntryActionViewItem } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { WorkbenchToolBar } from '../../../../platform/actions/browser/toolbar.js';\nimport { IMenuService, MenuId, MenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nconst inlineSuggestionHintsNextIcon = registerIcon('inline-suggestion-hints-next', Codicon.chevronRight, localize('parameterHintsNextIcon', 'Icon for show next parameter hint.'));\nconst inlineSuggestionHintsPreviousIcon = registerIcon('inline-suggestion-hints-previous', Codicon.chevronLeft, localize('parameterHintsPreviousIcon', 'Icon for show previous parameter hint.'));\nlet InlineSuggestionHintsContentWidget = class InlineSuggestionHintsContentWidget extends Disposable {\n    static get dropDownVisible() { return this._dropDownVisible; }\n    createCommandAction(commandId, label, iconClassName) {\n        const action = new Action(commandId, label, iconClassName, true, () => this._commandService.executeCommand(commandId));\n        const kb = this.keybindingService.lookupKeybinding(commandId, this._contextKeyService);\n        let tooltip = label;\n        if (kb) {\n            tooltip = localize({ key: 'content', comment: ['A label', 'A keybinding'] }, '{0} ({1})', label, kb.getLabel());\n        }\n        action.tooltip = tooltip;\n        return action;\n    }\n    constructor(editor, withBorder, _commandService, instantiationService, keybindingService, _contextKeyService, _menuService) {\n        super();\n        this.editor = editor;\n        this.withBorder = withBorder;\n        this._commandService = _commandService;\n        this.keybindingService = keybindingService;\n        this._contextKeyService = _contextKeyService;\n        this._menuService = _menuService;\n        this.id = `InlineSuggestionHintsContentWidget${InlineSuggestionHintsContentWidget.id++}`;\n        this.allowEditorOverflow = true;\n        this.suppressMouseDown = false;\n        this.nodes = h('div.inlineSuggestionsHints', { className: this.withBorder ? '.withBorder' : '' }, [\n            h('div', { style: { display: 'flex' } }, [\n                h('div@actionBar', { className: 'custom-actions' }),\n                h('div@toolBar'),\n            ])\n        ]);\n        this.position = null;\n        this.previousAction = this.createCommandAction(showPreviousInlineSuggestionActionId, localize('previous', 'Previous'), ThemeIcon.asClassName(inlineSuggestionHintsPreviousIcon));\n        this.availableSuggestionCountAction = new Action('inlineSuggestionHints.availableSuggestionCount', '', undefined, false);\n        this.nextAction = this.createCommandAction(showNextInlineSuggestionActionId, localize('next', 'Next'), ThemeIcon.asClassName(inlineSuggestionHintsNextIcon));\n        // TODO@hediet: deprecate MenuId.InlineCompletionsActions\n        this.inlineCompletionsActionsMenus = this._register(this._menuService.createMenu(MenuId.InlineCompletionsActions, this._contextKeyService));\n        this.clearAvailableSuggestionCountLabelDebounced = this._register(new RunOnceScheduler(() => {\n            this.availableSuggestionCountAction.label = '';\n        }, 100));\n        this.disableButtonsDebounced = this._register(new RunOnceScheduler(() => {\n            this.previousAction.enabled = this.nextAction.enabled = false;\n        }, 100));\n        const actionBar = this._register(new ActionBar(this.nodes.actionBar));\n        actionBar.push(this.previousAction, { icon: true, label: false });\n        actionBar.push(this.availableSuggestionCountAction);\n        actionBar.push(this.nextAction, { icon: true, label: false });\n        this.toolBar = this._register(instantiationService.createInstance(CustomizedMenuWorkbenchToolBar, this.nodes.toolBar, MenuId.InlineSuggestionToolbar, {\n            menuOptions: { renderShortTitle: true },\n            toolbarOptions: { primaryGroup: g => g.startsWith('primary') },\n            actionViewItemProvider: (action, options) => {\n                return action instanceof MenuItemAction ? instantiationService.createInstance(StatusBarViewItem, action, undefined) : undefined;\n            },\n            telemetrySource: 'InlineSuggestionToolbar',\n        }));\n        this._register(this.toolBar.onDidChangeDropdownVisibility(e => {\n            InlineSuggestionHintsContentWidget._dropDownVisible = e;\n        }));\n    }\n    update(position, currentSuggestionIdx, suggestionCount, extraCommands) {\n        this.position = position;\n        if (suggestionCount !== undefined && suggestionCount > 1) {\n            this.disableButtonsDebounced.cancel();\n            this.previousAction.enabled = this.nextAction.enabled = true;\n        }\n        else {\n            this.disableButtonsDebounced.schedule();\n        }\n        if (suggestionCount !== undefined) {\n            this.clearAvailableSuggestionCountLabelDebounced.cancel();\n            this.availableSuggestionCountAction.label = `${currentSuggestionIdx + 1}/${suggestionCount}`;\n        }\n        else {\n            this.clearAvailableSuggestionCountLabelDebounced.schedule();\n        }\n        this.editor.layoutContentWidget(this);\n        const extraActions = extraCommands.map(c => ({\n            class: undefined,\n            id: c.id,\n            enabled: true,\n            tooltip: c.tooltip || '',\n            label: c.title,\n            run: (event) => {\n                return this._commandService.executeCommand(c.id);\n            },\n        }));\n        for (const [_, group] of this.inlineCompletionsActionsMenus.getActions()) {\n            for (const action of group) {\n                if (action instanceof MenuItemAction) {\n                    extraActions.push(action);\n                }\n            }\n        }\n        if (extraActions.length > 0) {\n            extraActions.unshift(new Separator());\n        }\n        this.toolBar.setAdditionalSecondaryActions(extraActions);\n    }\n    getId() { return this.id; }\n    getDomNode() {\n        return this.nodes.root;\n    }\n    getPosition() {\n        return {\n            position: this.position,\n            preference: [1 /* ContentWidgetPositionPreference.ABOVE */, 2 /* ContentWidgetPositionPreference.BELOW */],\n            positionAffinity: 3 /* PositionAffinity.LeftOfInjectedText */,\n        };\n    }\n};\nInlineSuggestionHintsContentWidget._dropDownVisible = false;\nInlineSuggestionHintsContentWidget.id = 0;\nInlineSuggestionHintsContentWidget = __decorate([\n    __param(2, ICommandService),\n    __param(3, IInstantiationService),\n    __param(4, IKeybindingService),\n    __param(5, IContextKeyService),\n    __param(6, IMenuService)\n], InlineSuggestionHintsContentWidget);\nexport { InlineSuggestionHintsContentWidget };\nclass StatusBarViewItem extends MenuEntryActionViewItem {\n    updateLabel() {\n        const kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\n        if (!kb) {\n            return super.updateLabel();\n        }\n        if (this.label) {\n            const div = h('div.keybinding').root;\n            const k = new KeybindingLabel(div, OS, Object.assign({ disableTitle: true }, unthemedKeybindingLabelOptions));\n            k.set(kb);\n            this.label.textContent = this._action.label;\n            this.label.appendChild(div);\n            this.label.classList.add('inlineSuggestionStatusBarItemLabel');\n        }\n    }\n}\nlet CustomizedMenuWorkbenchToolBar = class CustomizedMenuWorkbenchToolBar extends WorkbenchToolBar {\n    constructor(container, menuId, options2, menuService, contextKeyService, contextMenuService, keybindingService, telemetryService) {\n        super(container, Object.assign({ resetMenu: menuId }, options2), menuService, contextKeyService, contextMenuService, keybindingService, telemetryService);\n        this.menuId = menuId;\n        this.options2 = options2;\n        this.menuService = menuService;\n        this.contextKeyService = contextKeyService;\n        this.menu = this._store.add(this.menuService.createMenu(this.menuId, this.contextKeyService, { emitEventsForSubmenuChanges: true }));\n        this.additionalActions = [];\n        this._store.add(this.menu.onDidChange(() => this.updateToolbar()));\n        this.updateToolbar();\n    }\n    updateToolbar() {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const primary = [];\n        const secondary = [];\n        createAndFillInActionBarActions(this.menu, (_a = this.options2) === null || _a === void 0 ? void 0 : _a.menuOptions, { primary, secondary }, (_c = (_b = this.options2) === null || _b === void 0 ? void 0 : _b.toolbarOptions) === null || _c === void 0 ? void 0 : _c.primaryGroup, (_e = (_d = this.options2) === null || _d === void 0 ? void 0 : _d.toolbarOptions) === null || _e === void 0 ? void 0 : _e.shouldInlineSubmenu, (_g = (_f = this.options2) === null || _f === void 0 ? void 0 : _f.toolbarOptions) === null || _g === void 0 ? void 0 : _g.useSeparatorsInPrimaryActions);\n        secondary.push(...this.additionalActions);\n        this.setActions(primary, secondary);\n    }\n    setAdditionalSecondaryActions(actions) {\n        this.additionalActions = actions;\n        this.updateToolbar();\n    }\n};\nCustomizedMenuWorkbenchToolBar = __decorate([\n    __param(3, IMenuService),\n    __param(4, IContextKeyService),\n    __param(5, IContextMenuService),\n    __param(6, IKeybindingService),\n    __param(7, ITelemetryService)\n], CustomizedMenuWorkbenchToolBar);\nexport { CustomizedMenuWorkbenchToolBar };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { CursorMoveCommands } from '../../../common/cursor/cursorMoveCommands.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nexport class ExpandLineSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'expandLineSelection',\n            label: nls.localize('expandLineSelection', \"Expand Line Selection\"),\n            alias: 'Expand Line Selection',\n            precondition: undefined,\n            kbOpts: {\n                weight: 0 /* KeybindingWeight.EditorCore */,\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 42 /* KeyCode.KeyL */\n            },\n        });\n    }\n    run(_accessor, editor, args) {\n        args = args || {};\n        if (!editor.hasModel()) {\n            return;\n        }\n        const viewModel = editor._getViewModel();\n        viewModel.model.pushStackElement();\n        viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.expandLineSelection(viewModel, viewModel.getCursorStates()));\n        viewModel.revealPrimaryCursor(args.source, true);\n    }\n}\nregisterEditorAction(ExpandLineSelectionAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class CopyLinesCommand {\n    constructor(selection, isCopyingDown, noop) {\n        this._selection = selection;\n        this._isCopyingDown = isCopyingDown;\n        this._noop = noop || false;\n        this._selectionDirection = 0 /* SelectionDirection.LTR */;\n        this._selectionId = null;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n    }\n    getEditOperations(model, builder) {\n        let s = this._selection;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._endLineNumberDelta = 1;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const sourceLines = [];\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            sourceLines.push(model.getLineContent(i));\n        }\n        const sourceText = sourceLines.join('\\n');\n        if (sourceText === '') {\n            // Duplicating empty line\n            if (this._isCopyingDown) {\n                this._startLineNumberDelta++;\n                this._endLineNumberDelta++;\n            }\n        }\n        if (this._noop) {\n            builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber + 1, 1), s.endLineNumber === model.getLineCount() ? '' : '\\n');\n        }\n        else {\n            if (!this._isCopyingDown) {\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + sourceText);\n            }\n            else {\n                builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), sourceText + '\\n');\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n        this._selectionDirection = this._selection.getDirection();\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._startLineNumberDelta !== 0 || this._endLineNumberDelta !== 0) {\n            let startLineNumber = result.startLineNumber;\n            let startColumn = result.startColumn;\n            let endLineNumber = result.endLineNumber;\n            let endColumn = result.endColumn;\n            if (this._startLineNumberDelta !== 0) {\n                startLineNumber = startLineNumber + this._startLineNumberDelta;\n                startColumn = 1;\n            }\n            if (this._endLineNumberDelta !== 0) {\n                endLineNumber = endLineNumber + this._endLineNumberDelta;\n                endColumn = 1;\n            }\n            result = Selection.createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, this._selectionDirection);\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as strings from '../../../../base/common/strings.js';\nimport { ShiftCommand } from '../../../common/commands/shiftCommand.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IndentAction } from '../../../common/languages/languageConfiguration.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport * as indentUtils from '../../indentation/browser/indentUtils.js';\nimport { getGoodIndentForLine, getIndentMetadata } from '../../../common/languages/autoIndent.js';\nimport { getEnterAction } from '../../../common/languages/enterAction.js';\nlet MoveLinesCommand = class MoveLinesCommand {\n    constructor(selection, isMovingDown, autoIndent, _languageConfigurationService) {\n        this._languageConfigurationService = _languageConfigurationService;\n        this._selection = selection;\n        this._isMovingDown = isMovingDown;\n        this._autoIndent = autoIndent;\n        this._selectionId = null;\n        this._moveEndLineSelectionShrink = false;\n    }\n    getEditOperations(model, builder) {\n        const modelLineCount = model.getLineCount();\n        if (this._isMovingDown && this._selection.endLineNumber === modelLineCount) {\n            this._selectionId = builder.trackSelection(this._selection);\n            return;\n        }\n        if (!this._isMovingDown && this._selection.startLineNumber === 1) {\n            this._selectionId = builder.trackSelection(this._selection);\n            return;\n        }\n        this._moveEndPositionDown = false;\n        let s = this._selection;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._moveEndPositionDown = true;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\n        const indentConverter = this.buildIndentConverter(tabSize, indentSize, insertSpaces);\n        const virtualModel = {\n            tokenization: {\n                getLineTokens: (lineNumber) => {\n                    return model.tokenization.getLineTokens(lineNumber);\n                },\n                getLanguageId: () => {\n                    return model.getLanguageId();\n                },\n                getLanguageIdAtPosition: (lineNumber, column) => {\n                    return model.getLanguageIdAtPosition(lineNumber, column);\n                },\n            },\n            getLineContent: null,\n        };\n        if (s.startLineNumber === s.endLineNumber && model.getLineMaxColumn(s.startLineNumber) === 1) {\n            // Current line is empty\n            const lineNumber = s.startLineNumber;\n            const otherLineNumber = (this._isMovingDown ? lineNumber + 1 : lineNumber - 1);\n            if (model.getLineMaxColumn(otherLineNumber) === 1) {\n                // Other line number is empty too, so no editing is needed\n                // Add a no-op to force running by the model\n                builder.addEditOperation(new Range(1, 1, 1, 1), null);\n            }\n            else {\n                // Type content from other line number on line number\n                builder.addEditOperation(new Range(lineNumber, 1, lineNumber, 1), model.getLineContent(otherLineNumber));\n                // Remove content from other line number\n                builder.addEditOperation(new Range(otherLineNumber, 1, otherLineNumber, model.getLineMaxColumn(otherLineNumber)), null);\n            }\n            // Track selection at the other line number\n            s = new Selection(otherLineNumber, 1, otherLineNumber, 1);\n        }\n        else {\n            let movingLineNumber;\n            let movingLineText;\n            if (this._isMovingDown) {\n                movingLineNumber = s.endLineNumber + 1;\n                movingLineText = model.getLineContent(movingLineNumber);\n                // Delete line that needs to be moved\n                builder.addEditOperation(new Range(movingLineNumber - 1, model.getLineMaxColumn(movingLineNumber - 1), movingLineNumber, model.getLineMaxColumn(movingLineNumber)), null);\n                let insertingText = movingLineText;\n                if (this.shouldAutoIndent(model, s)) {\n                    const movingLineMatchResult = this.matchEnterRule(model, indentConverter, tabSize, movingLineNumber, s.startLineNumber - 1);\n                    // if s.startLineNumber - 1 matches onEnter rule, we still honor that.\n                    if (movingLineMatchResult !== null) {\n                        const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\n                        const newSpaceCnt = movingLineMatchResult + indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                        const newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                        insertingText = newIndentation + this.trimLeft(movingLineText);\n                    }\n                    else {\n                        // no enter rule matches, let's check indentatin rules then.\n                        virtualModel.getLineContent = (lineNumber) => {\n                            if (lineNumber === s.startLineNumber) {\n                                return model.getLineContent(movingLineNumber);\n                            }\n                            else {\n                                return model.getLineContent(lineNumber);\n                            }\n                        };\n                        const indentOfMovingLine = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber, indentConverter, this._languageConfigurationService);\n                        if (indentOfMovingLine !== null) {\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(indentOfMovingLine, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                                insertingText = newIndentation + this.trimLeft(movingLineText);\n                            }\n                        }\n                    }\n                    // add edit operations for moving line first to make sure it's executed after we make indentation change\n                    // to s.startLineNumber\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\n                    const ret = this.matchEnterRuleMovingDown(model, indentConverter, tabSize, s.startLineNumber, movingLineNumber, insertingText);\n                    // check if the line being moved before matches onEnter rules, if so let's adjust the indentation by onEnter rules.\n                    if (ret !== null) {\n                        if (ret !== 0) {\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\n                        }\n                    }\n                    else {\n                        // it doesn't match onEnter rules, let's check indentation rules then.\n                        virtualModel.getLineContent = (lineNumber) => {\n                            if (lineNumber === s.startLineNumber) {\n                                return insertingText;\n                            }\n                            else if (lineNumber >= s.startLineNumber + 1 && lineNumber <= s.endLineNumber + 1) {\n                                return model.getLineContent(lineNumber - 1);\n                            }\n                            else {\n                                return model.getLineContent(lineNumber);\n                            }\n                        };\n                        const newIndentatOfMovingBlock = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber + 1, indentConverter, this._languageConfigurationService);\n                        if (newIndentatOfMovingBlock !== null) {\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(newIndentatOfMovingBlock, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\n                            }\n                        }\n                    }\n                }\n                else {\n                    // Insert line that needs to be moved before\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\n                }\n            }\n            else {\n                movingLineNumber = s.startLineNumber - 1;\n                movingLineText = model.getLineContent(movingLineNumber);\n                // Delete line that needs to be moved\n                builder.addEditOperation(new Range(movingLineNumber, 1, movingLineNumber + 1, 1), null);\n                // Insert line that needs to be moved after\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + movingLineText);\n                if (this.shouldAutoIndent(model, s)) {\n                    virtualModel.getLineContent = (lineNumber) => {\n                        if (lineNumber === movingLineNumber) {\n                            return model.getLineContent(s.startLineNumber);\n                        }\n                        else {\n                            return model.getLineContent(lineNumber);\n                        }\n                    };\n                    const ret = this.matchEnterRule(model, indentConverter, tabSize, s.startLineNumber, s.startLineNumber - 2);\n                    // check if s.startLineNumber - 2 matches onEnter rules, if so adjust the moving block by onEnter rules.\n                    if (ret !== null) {\n                        if (ret !== 0) {\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\n                        }\n                    }\n                    else {\n                        // it doesn't match any onEnter rule, let's check indentation rules then.\n                        const indentOfFirstLine = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(s.startLineNumber, 1), movingLineNumber, indentConverter, this._languageConfigurationService);\n                        if (indentOfFirstLine !== null) {\n                            // adjust the indentation of the moving block\n                            const oldIndent = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndent, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n    }\n    buildIndentConverter(tabSize, indentSize, insertSpaces) {\n        return {\n            shiftIndent: (indentation) => {\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            },\n            unshiftIndent: (indentation) => {\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            }\n        };\n    }\n    parseEnterResult(model, indentConverter, tabSize, line, enter) {\n        if (enter) {\n            let enterPrefix = enter.indentation;\n            if (enter.indentAction === IndentAction.None) {\n                enterPrefix = enter.indentation + enter.appendText;\n            }\n            else if (enter.indentAction === IndentAction.Indent) {\n                enterPrefix = enter.indentation + enter.appendText;\n            }\n            else if (enter.indentAction === IndentAction.IndentOutdent) {\n                enterPrefix = enter.indentation;\n            }\n            else if (enter.indentAction === IndentAction.Outdent) {\n                enterPrefix = indentConverter.unshiftIndent(enter.indentation) + enter.appendText;\n            }\n            const movingLineText = model.getLineContent(line);\n            if (this.trimLeft(movingLineText).indexOf(this.trimLeft(enterPrefix)) >= 0) {\n                const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(line));\n                let newIndentation = strings.getLeadingWhitespace(enterPrefix);\n                const indentMetadataOfMovelingLine = getIndentMetadata(model, line, this._languageConfigurationService);\n                if (indentMetadataOfMovelingLine !== null && indentMetadataOfMovelingLine & 2 /* IndentConsts.DECREASE_MASK */) {\n                    newIndentation = indentConverter.unshiftIndent(newIndentation);\n                }\n                const newSpaceCnt = indentUtils.getSpaceCnt(newIndentation, tabSize);\n                const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                return newSpaceCnt - oldSpaceCnt;\n            }\n        }\n        return null;\n    }\n    /**\n     *\n     * @param model\n     * @param indentConverter\n     * @param tabSize\n     * @param line the line moving down\n     * @param futureAboveLineNumber the line which will be at the `line` position\n     * @param futureAboveLineText\n     */\n    matchEnterRuleMovingDown(model, indentConverter, tabSize, line, futureAboveLineNumber, futureAboveLineText) {\n        if (strings.lastNonWhitespaceIndex(futureAboveLineText) >= 0) {\n            // break\n            const maxColumn = model.getLineMaxColumn(futureAboveLineNumber);\n            const enter = getEnterAction(this._autoIndent, model, new Range(futureAboveLineNumber, maxColumn, futureAboveLineNumber, maxColumn), this._languageConfigurationService);\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n        }\n        else {\n            // go upwards, starting from `line - 1`\n            let validPrecedingLine = line - 1;\n            while (validPrecedingLine >= 1) {\n                const lineContent = model.getLineContent(validPrecedingLine);\n                const nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\n                if (nonWhitespaceIdx >= 0) {\n                    break;\n                }\n                validPrecedingLine--;\n            }\n            if (validPrecedingLine < 1 || line > model.getLineCount()) {\n                return null;\n            }\n            const maxColumn = model.getLineMaxColumn(validPrecedingLine);\n            const enter = getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn), this._languageConfigurationService);\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n        }\n    }\n    matchEnterRule(model, indentConverter, tabSize, line, oneLineAbove, previousLineText) {\n        let validPrecedingLine = oneLineAbove;\n        while (validPrecedingLine >= 1) {\n            // ship empty lines as empty lines just inherit indentation\n            let lineContent;\n            if (validPrecedingLine === oneLineAbove && previousLineText !== undefined) {\n                lineContent = previousLineText;\n            }\n            else {\n                lineContent = model.getLineContent(validPrecedingLine);\n            }\n            const nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\n            if (nonWhitespaceIdx >= 0) {\n                break;\n            }\n            validPrecedingLine--;\n        }\n        if (validPrecedingLine < 1 || line > model.getLineCount()) {\n            return null;\n        }\n        const maxColumn = model.getLineMaxColumn(validPrecedingLine);\n        const enter = getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn), this._languageConfigurationService);\n        return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n    }\n    trimLeft(str) {\n        return str.replace(/^\\s+/, '');\n    }\n    shouldAutoIndent(model, selection) {\n        if (this._autoIndent < 4 /* EditorAutoIndentStrategy.Full */) {\n            return false;\n        }\n        // if it's not easy to tokenize, we stop auto indent.\n        if (!model.tokenization.isCheapToTokenize(selection.startLineNumber)) {\n            return false;\n        }\n        const languageAtSelectionStart = model.getLanguageIdAtPosition(selection.startLineNumber, 1);\n        const languageAtSelectionEnd = model.getLanguageIdAtPosition(selection.endLineNumber, 1);\n        if (languageAtSelectionStart !== languageAtSelectionEnd) {\n            return false;\n        }\n        if (this._languageConfigurationService.getLanguageConfiguration(languageAtSelectionStart).indentRulesSupport === null) {\n            return false;\n        }\n        return true;\n    }\n    getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, offset) {\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            const lineContent = model.getLineContent(i);\n            const originalIndent = strings.getLeadingWhitespace(lineContent);\n            const originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\n            const newSpacesCnt = originalSpacesCnt + offset;\n            const newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\n            if (newIndent !== originalIndent) {\n                builder.addEditOperation(new Range(i, 1, i, originalIndent.length + 1), newIndent);\n                if (i === s.endLineNumber && s.endColumn <= originalIndent.length + 1 && newIndent === '') {\n                    // as users select part of the original indent white spaces\n                    // when we adjust the indentation of endLine, we should adjust the cursor position as well.\n                    this._moveEndLineSelectionShrink = true;\n                }\n            }\n        }\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._moveEndPositionDown) {\n            result = result.setEndPosition(result.endLineNumber + 1, 1);\n        }\n        if (this._moveEndLineSelectionShrink && result.startLineNumber < result.endLineNumber) {\n            result = result.setEndPosition(result.endLineNumber, 2);\n        }\n        return result;\n    }\n};\nMoveLinesCommand = __decorate([\n    __param(3, ILanguageConfigurationService)\n], MoveLinesCommand);\nexport { MoveLinesCommand };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nclass SortLinesCommand {\n    static getCollator() {\n        if (!SortLinesCommand._COLLATOR) {\n            SortLinesCommand._COLLATOR = new Intl.Collator();\n        }\n        return SortLinesCommand._COLLATOR;\n    }\n    constructor(selection, descending) {\n        this.selection = selection;\n        this.descending = descending;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        const op = sortLines(model, this.selection, this.descending);\n        if (op) {\n            builder.addEditOperation(op.range, op.text);\n        }\n        this.selectionId = builder.trackSelection(this.selection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n    static canRun(model, selection, descending) {\n        if (model === null) {\n            return false;\n        }\n        const data = getSortData(model, selection, descending);\n        if (!data) {\n            return false;\n        }\n        for (let i = 0, len = data.before.length; i < len; i++) {\n            if (data.before[i] !== data.after[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nSortLinesCommand._COLLATOR = null;\nexport { SortLinesCommand };\nfunction getSortData(model, selection, descending) {\n    const startLineNumber = selection.startLineNumber;\n    let endLineNumber = selection.endLineNumber;\n    if (selection.endColumn === 1) {\n        endLineNumber--;\n    }\n    // Nothing to sort if user didn't select anything.\n    if (startLineNumber >= endLineNumber) {\n        return null;\n    }\n    const linesToSort = [];\n    // Get the contents of the selection to be sorted.\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        linesToSort.push(model.getLineContent(lineNumber));\n    }\n    let sorted = linesToSort.slice(0);\n    sorted.sort(SortLinesCommand.getCollator().compare);\n    // If descending, reverse the order.\n    if (descending === true) {\n        sorted = sorted.reverse();\n    }\n    return {\n        startLineNumber: startLineNumber,\n        endLineNumber: endLineNumber,\n        before: linesToSort,\n        after: sorted\n    };\n}\n/**\n * Generate commands for sorting lines on a model.\n */\nfunction sortLines(model, selection, descending) {\n    const data = getSortData(model, selection, descending);\n    if (!data) {\n        return null;\n    }\n    return EditOperation.replace(new Range(data.startLineNumber, 1, data.endLineNumber, model.getLineMaxColumn(data.endLineNumber)), data.after.join('\\n'));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection, ReplaceCommandThatSelectsText } from '../../../common/commands/replaceCommand.js';\nimport { TrimTrailingWhitespaceCommand } from '../../../common/commands/trimTrailingWhitespaceCommand.js';\nimport { TypeOperations } from '../../../common/cursor/cursorTypeOperations.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { CopyLinesCommand } from './copyLinesCommand.js';\nimport { MoveLinesCommand } from './moveLinesCommand.js';\nimport { SortLinesCommand } from './sortLinesCommand.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\n// copy lines\nclass AbstractCopyLinesAction extends EditorAction {\n    constructor(down, opts) {\n        super(opts);\n        this.down = down;\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections().map((selection, index) => ({ selection, index, ignore: false }));\n        selections.sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\n        // Remove selections that would result in copying the same line\n        let prev = selections[0];\n        for (let i = 1; i < selections.length; i++) {\n            const curr = selections[i];\n            if (prev.selection.endLineNumber === curr.selection.startLineNumber) {\n                // these two selections would copy the same line\n                if (prev.index < curr.index) {\n                    // prev wins\n                    curr.ignore = true;\n                }\n                else {\n                    // curr wins\n                    prev.ignore = true;\n                    prev = curr;\n                }\n            }\n        }\n        const commands = [];\n        for (const selection of selections) {\n            commands.push(new CopyLinesCommand(selection.selection, this.down, selection.ignore));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass CopyLinesUpAction extends AbstractCopyLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.copyLinesUpAction',\n            label: nls.localize('lines.copyUp', \"Copy Line Up\"),\n            alias: 'Copy Line Up',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miCopyLinesUp', comment: ['&& denotes a mnemonic'] }, \"&&Copy Line Up\"),\n                order: 1\n            }\n        });\n    }\n}\nclass CopyLinesDownAction extends AbstractCopyLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.copyLinesDownAction',\n            label: nls.localize('lines.copyDown', \"Copy Line Down\"),\n            alias: 'Copy Line Down',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miCopyLinesDown', comment: ['&& denotes a mnemonic'] }, \"Co&&py Line Down\"),\n                order: 2\n            }\n        });\n    }\n}\nexport class DuplicateSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.duplicateSelection',\n            label: nls.localize('duplicateSelection', \"Duplicate Selection\"),\n            alias: 'Duplicate Selection',\n            precondition: EditorContextKeys.writable,\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miDuplicateSelection', comment: ['&& denotes a mnemonic'] }, \"&&Duplicate Selection\"),\n                order: 5\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const commands = [];\n        const selections = editor.getSelections();\n        const model = editor.getModel();\n        for (const selection of selections) {\n            if (selection.isEmpty()) {\n                commands.push(new CopyLinesCommand(selection, true));\n            }\n            else {\n                const insertSelection = new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn);\n                commands.push(new ReplaceCommandThatSelectsText(insertSelection, model.getValueInRange(selection)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\n// move lines\nclass AbstractMoveLinesAction extends EditorAction {\n    constructor(down, opts) {\n        super(opts);\n        this.down = down;\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const commands = [];\n        const selections = editor.getSelections() || [];\n        const autoIndent = editor.getOption(9 /* EditorOption.autoIndent */);\n        for (const selection of selections) {\n            commands.push(new MoveLinesCommand(selection, this.down, autoIndent, languageConfigurationService));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass MoveLinesUpAction extends AbstractMoveLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.moveLinesUpAction',\n            label: nls.localize('lines.moveUp', \"Move Line Up\"),\n            alias: 'Move Line Up',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */,\n                linux: { primary: 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miMoveLinesUp', comment: ['&& denotes a mnemonic'] }, \"Mo&&ve Line Up\"),\n                order: 3\n            }\n        });\n    }\n}\nclass MoveLinesDownAction extends AbstractMoveLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.moveLinesDownAction',\n            label: nls.localize('lines.moveDown', \"Move Line Down\"),\n            alias: 'Move Line Down',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */,\n                linux: { primary: 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miMoveLinesDown', comment: ['&& denotes a mnemonic'] }, \"Move &&Line Down\"),\n                order: 4\n            }\n        });\n    }\n}\nexport class AbstractSortLinesAction extends EditorAction {\n    constructor(descending, opts) {\n        super(opts);\n        this.descending = descending;\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections() || [];\n        for (const selection of selections) {\n            if (!SortLinesCommand.canRun(editor.getModel(), selection, this.descending)) {\n                return;\n            }\n        }\n        const commands = [];\n        for (let i = 0, len = selections.length; i < len; i++) {\n            commands[i] = new SortLinesCommand(selections[i], this.descending);\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nexport class SortLinesAscendingAction extends AbstractSortLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.sortLinesAscending',\n            label: nls.localize('lines.sortAscending', \"Sort Lines Ascending\"),\n            alias: 'Sort Lines Ascending',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nexport class SortLinesDescendingAction extends AbstractSortLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.sortLinesDescending',\n            label: nls.localize('lines.sortDescending', \"Sort Lines Descending\"),\n            alias: 'Sort Lines Descending',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nexport class DeleteDuplicateLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.removeDuplicateLines',\n            label: nls.localize('lines.deleteDuplicates', \"Delete Duplicate Lines\"),\n            alias: 'Delete Duplicate Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n            return;\n        }\n        const edits = [];\n        const endCursorState = [];\n        let linesDeleted = 0;\n        for (const selection of editor.getSelections()) {\n            const uniqueLines = new Set();\n            const lines = [];\n            for (let i = selection.startLineNumber; i <= selection.endLineNumber; i++) {\n                const line = model.getLineContent(i);\n                if (uniqueLines.has(line)) {\n                    continue;\n                }\n                lines.push(line);\n                uniqueLines.add(line);\n            }\n            const selectionToReplace = new Selection(selection.startLineNumber, 1, selection.endLineNumber, model.getLineMaxColumn(selection.endLineNumber));\n            const adjustedSelectionStart = selection.startLineNumber - linesDeleted;\n            const finalSelection = new Selection(adjustedSelectionStart, 1, adjustedSelectionStart + lines.length - 1, lines[lines.length - 1].length);\n            edits.push(EditOperation.replace(selectionToReplace, lines.join('\\n')));\n            endCursorState.push(finalSelection);\n            linesDeleted += (selection.endLineNumber - selection.startLineNumber + 1) - lines.length;\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nclass TrimTrailingWhitespaceAction extends EditorAction {\n    constructor() {\n        super({\n            id: TrimTrailingWhitespaceAction.ID,\n            label: nls.localize('lines.trimTrailingWhitespace', \"Trim Trailing Whitespace\"),\n            alias: 'Trim Trailing Whitespace',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 54 /* KeyCode.KeyX */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor, args) {\n        let cursors = [];\n        if (args.reason === 'auto-save') {\n            // See https://github.com/editorconfig/editorconfig-vscode/issues/47\n            // It is very convenient for the editor config extension to invoke this action.\n            // So, if we get a reason:'auto-save' passed in, let's preserve cursor positions.\n            cursors = (editor.getSelections() || []).map(s => new Position(s.positionLineNumber, s.positionColumn));\n        }\n        const selection = editor.getSelection();\n        if (selection === null) {\n            return;\n        }\n        const command = new TrimTrailingWhitespaceCommand(selection, cursors);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n    }\n}\nTrimTrailingWhitespaceAction.ID = 'editor.action.trimTrailingWhitespace';\nexport { TrimTrailingWhitespaceAction };\nexport class DeleteLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.deleteLines',\n            label: nls.localize('lines.delete', \"Delete Line\"),\n            alias: 'Delete Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 41 /* KeyCode.KeyK */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const ops = this._getLinesToRemove(editor);\n        const model = editor.getModel();\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n            // Model is empty\n            return;\n        }\n        let linesDeleted = 0;\n        const edits = [];\n        const cursorState = [];\n        for (let i = 0, len = ops.length; i < len; i++) {\n            const op = ops[i];\n            let startLineNumber = op.startLineNumber;\n            let endLineNumber = op.endLineNumber;\n            let startColumn = 1;\n            let endColumn = model.getLineMaxColumn(endLineNumber);\n            if (endLineNumber < model.getLineCount()) {\n                endLineNumber += 1;\n                endColumn = 1;\n            }\n            else if (startLineNumber > 1) {\n                startLineNumber -= 1;\n                startColumn = model.getLineMaxColumn(startLineNumber);\n            }\n            edits.push(EditOperation.replace(new Selection(startLineNumber, startColumn, endLineNumber, endColumn), ''));\n            cursorState.push(new Selection(startLineNumber - linesDeleted, op.positionColumn, startLineNumber - linesDeleted, op.positionColumn));\n            linesDeleted += (op.endLineNumber - op.startLineNumber + 1);\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, cursorState);\n        editor.pushUndoStop();\n    }\n    _getLinesToRemove(editor) {\n        // Construct delete operations\n        const operations = editor.getSelections().map((s) => {\n            let endLineNumber = s.endLineNumber;\n            if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n                endLineNumber -= 1;\n            }\n            return {\n                startLineNumber: s.startLineNumber,\n                selectionStartColumn: s.selectionStartColumn,\n                endLineNumber: endLineNumber,\n                positionColumn: s.positionColumn\n            };\n        });\n        // Sort delete operations\n        operations.sort((a, b) => {\n            if (a.startLineNumber === b.startLineNumber) {\n                return a.endLineNumber - b.endLineNumber;\n            }\n            return a.startLineNumber - b.startLineNumber;\n        });\n        // Merge delete operations which are adjacent or overlapping\n        const mergedOperations = [];\n        let previousOperation = operations[0];\n        for (let i = 1; i < operations.length; i++) {\n            if (previousOperation.endLineNumber + 1 >= operations[i].startLineNumber) {\n                // Merge current operations into the previous one\n                previousOperation.endLineNumber = operations[i].endLineNumber;\n            }\n            else {\n                // Push previous operation\n                mergedOperations.push(previousOperation);\n                previousOperation = operations[i];\n            }\n        }\n        // Push the last operation\n        mergedOperations.push(previousOperation);\n        return mergedOperations;\n    }\n}\nexport class IndentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.indentLines',\n            label: nls.localize('lines.indent', \"Indent Line\"),\n            alias: 'Indent Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 89 /* KeyCode.BracketRight */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.indent(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n        editor.pushUndoStop();\n    }\n}\nclass OutdentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.outdentLines',\n            label: nls.localize('lines.outdent', \"Outdent Line\"),\n            alias: 'Outdent Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 87 /* KeyCode.BracketLeft */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        CoreEditingCommands.Outdent.runEditorCommand(_accessor, editor, null);\n    }\n}\nexport class InsertLineBeforeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertLineBefore',\n            label: nls.localize('lines.insertBefore', \"Insert Line Above\"),\n            alias: 'Insert Line Above',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.lineInsertBefore(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n    }\n}\nexport class InsertLineAfterAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertLineAfter',\n            label: nls.localize('lines.insertAfter', \"Insert Line Below\"),\n            alias: 'Insert Line Below',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.lineInsertAfter(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n    }\n}\nexport class AbstractDeleteAllToBoundaryAction extends EditorAction {\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const primaryCursor = editor.getSelection();\n        const rangesToDelete = this._getRangesToDelete(editor);\n        // merge overlapping selections\n        const effectiveRanges = [];\n        for (let i = 0, count = rangesToDelete.length - 1; i < count; i++) {\n            const range = rangesToDelete[i];\n            const nextRange = rangesToDelete[i + 1];\n            if (Range.intersectRanges(range, nextRange) === null) {\n                effectiveRanges.push(range);\n            }\n            else {\n                rangesToDelete[i + 1] = Range.plusRange(range, nextRange);\n            }\n        }\n        effectiveRanges.push(rangesToDelete[rangesToDelete.length - 1]);\n        const endCursorState = this._getEndCursorState(primaryCursor, effectiveRanges);\n        const edits = effectiveRanges.map(range => {\n            return EditOperation.replace(range, '');\n        });\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class DeleteAllLeftAction extends AbstractDeleteAllToBoundaryAction {\n    constructor() {\n        super({\n            id: 'deleteAllLeft',\n            label: nls.localize('lines.deleteAllLeft', \"Delete All Left\"),\n            alias: 'Delete All Left',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1 /* KeyCode.Backspace */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _getEndCursorState(primaryCursor, rangesToDelete) {\n        let endPrimaryCursor = null;\n        const endCursorState = [];\n        let deletedLines = 0;\n        rangesToDelete.forEach(range => {\n            let endCursor;\n            if (range.endColumn === 1 && deletedLines > 0) {\n                const newStartLine = range.startLineNumber - deletedLines;\n                endCursor = new Selection(newStartLine, range.startColumn, newStartLine, range.startColumn);\n            }\n            else {\n                endCursor = new Selection(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n            }\n            deletedLines += range.endLineNumber - range.startLineNumber;\n            if (range.intersectRanges(primaryCursor)) {\n                endPrimaryCursor = endCursor;\n            }\n            else {\n                endCursorState.push(endCursor);\n            }\n        });\n        if (endPrimaryCursor) {\n            endCursorState.unshift(endPrimaryCursor);\n        }\n        return endCursorState;\n    }\n    _getRangesToDelete(editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return [];\n        }\n        let rangesToDelete = selections;\n        const model = editor.getModel();\n        if (model === null) {\n            return [];\n        }\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\n        rangesToDelete = rangesToDelete.map(selection => {\n            if (selection.isEmpty()) {\n                if (selection.startColumn === 1) {\n                    const deleteFromLine = Math.max(1, selection.startLineNumber - 1);\n                    const deleteFromColumn = selection.startLineNumber === 1 ? 1 : model.getLineContent(deleteFromLine).length + 1;\n                    return new Range(deleteFromLine, deleteFromColumn, selection.startLineNumber, 1);\n                }\n                else {\n                    return new Range(selection.startLineNumber, 1, selection.startLineNumber, selection.startColumn);\n                }\n            }\n            else {\n                return new Range(selection.startLineNumber, 1, selection.endLineNumber, selection.endColumn);\n            }\n        });\n        return rangesToDelete;\n    }\n}\nexport class DeleteAllRightAction extends AbstractDeleteAllToBoundaryAction {\n    constructor() {\n        super({\n            id: 'deleteAllRight',\n            label: nls.localize('lines.deleteAllRight', \"Delete All Right\"),\n            alias: 'Delete All Right',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 41 /* KeyCode.KeyK */, secondary: [2048 /* KeyMod.CtrlCmd */ | 20 /* KeyCode.Delete */] },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _getEndCursorState(primaryCursor, rangesToDelete) {\n        let endPrimaryCursor = null;\n        const endCursorState = [];\n        for (let i = 0, len = rangesToDelete.length, offset = 0; i < len; i++) {\n            const range = rangesToDelete[i];\n            const endCursor = new Selection(range.startLineNumber - offset, range.startColumn, range.startLineNumber - offset, range.startColumn);\n            if (range.intersectRanges(primaryCursor)) {\n                endPrimaryCursor = endCursor;\n            }\n            else {\n                endCursorState.push(endCursor);\n            }\n        }\n        if (endPrimaryCursor) {\n            endCursorState.unshift(endPrimaryCursor);\n        }\n        return endCursorState;\n    }\n    _getRangesToDelete(editor) {\n        const model = editor.getModel();\n        if (model === null) {\n            return [];\n        }\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return [];\n        }\n        const rangesToDelete = selections.map((sel) => {\n            if (sel.isEmpty()) {\n                const maxColumn = model.getLineMaxColumn(sel.startLineNumber);\n                if (sel.startColumn === maxColumn) {\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber + 1, 1);\n                }\n                else {\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber, maxColumn);\n                }\n            }\n            return sel;\n        });\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\n        return rangesToDelete;\n    }\n}\nexport class JoinLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.joinLines',\n            label: nls.localize('lines.joinLines', \"Join Lines\"),\n            alias: 'Join Lines',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 40 /* KeyCode.KeyJ */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        let primaryCursor = editor.getSelection();\n        if (primaryCursor === null) {\n            return;\n        }\n        selections.sort(Range.compareRangesUsingStarts);\n        const reducedSelections = [];\n        const lastSelection = selections.reduce((previousValue, currentValue) => {\n            if (previousValue.isEmpty()) {\n                if (previousValue.endLineNumber === currentValue.startLineNumber) {\n                    if (primaryCursor.equalsSelection(previousValue)) {\n                        primaryCursor = currentValue;\n                    }\n                    return currentValue;\n                }\n                if (currentValue.startLineNumber > previousValue.endLineNumber + 1) {\n                    reducedSelections.push(previousValue);\n                    return currentValue;\n                }\n                else {\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n                }\n            }\n            else {\n                if (currentValue.startLineNumber > previousValue.endLineNumber) {\n                    reducedSelections.push(previousValue);\n                    return currentValue;\n                }\n                else {\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n                }\n            }\n        });\n        reducedSelections.push(lastSelection);\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const edits = [];\n        const endCursorState = [];\n        let endPrimaryCursor = primaryCursor;\n        let lineOffset = 0;\n        for (let i = 0, len = reducedSelections.length; i < len; i++) {\n            const selection = reducedSelections[i];\n            const startLineNumber = selection.startLineNumber;\n            const startColumn = 1;\n            let columnDeltaOffset = 0;\n            let endLineNumber, endColumn;\n            const selectionEndPositionOffset = model.getLineContent(selection.endLineNumber).length - selection.endColumn;\n            if (selection.isEmpty() || selection.startLineNumber === selection.endLineNumber) {\n                const position = selection.getStartPosition();\n                if (position.lineNumber < model.getLineCount()) {\n                    endLineNumber = startLineNumber + 1;\n                    endColumn = model.getLineMaxColumn(endLineNumber);\n                }\n                else {\n                    endLineNumber = position.lineNumber;\n                    endColumn = model.getLineMaxColumn(position.lineNumber);\n                }\n            }\n            else {\n                endLineNumber = selection.endLineNumber;\n                endColumn = model.getLineMaxColumn(endLineNumber);\n            }\n            let trimmedLinesContent = model.getLineContent(startLineNumber);\n            for (let i = startLineNumber + 1; i <= endLineNumber; i++) {\n                const lineText = model.getLineContent(i);\n                const firstNonWhitespaceIdx = model.getLineFirstNonWhitespaceColumn(i);\n                if (firstNonWhitespaceIdx >= 1) {\n                    let insertSpace = true;\n                    if (trimmedLinesContent === '') {\n                        insertSpace = false;\n                    }\n                    if (insertSpace && (trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === ' ' ||\n                        trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === '\\t')) {\n                        insertSpace = false;\n                        trimmedLinesContent = trimmedLinesContent.replace(/[\\s\\uFEFF\\xA0]+$/g, ' ');\n                    }\n                    const lineTextWithoutIndent = lineText.substr(firstNonWhitespaceIdx - 1);\n                    trimmedLinesContent += (insertSpace ? ' ' : '') + lineTextWithoutIndent;\n                    if (insertSpace) {\n                        columnDeltaOffset = lineTextWithoutIndent.length + 1;\n                    }\n                    else {\n                        columnDeltaOffset = lineTextWithoutIndent.length;\n                    }\n                }\n                else {\n                    columnDeltaOffset = 0;\n                }\n            }\n            const deleteSelection = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n            if (!deleteSelection.isEmpty()) {\n                let resultSelection;\n                if (selection.isEmpty()) {\n                    edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                    resultSelection = new Selection(deleteSelection.startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1, startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1);\n                }\n                else {\n                    if (selection.startLineNumber === selection.endLineNumber) {\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.endLineNumber - lineOffset, selection.endColumn);\n                    }\n                    else {\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.startLineNumber - lineOffset, trimmedLinesContent.length - selectionEndPositionOffset);\n                    }\n                }\n                if (Range.intersectRanges(deleteSelection, primaryCursor) !== null) {\n                    endPrimaryCursor = resultSelection;\n                }\n                else {\n                    endCursorState.push(resultSelection);\n                }\n            }\n            lineOffset += deleteSelection.endLineNumber - deleteSelection.startLineNumber;\n        }\n        endCursorState.unshift(endPrimaryCursor);\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class TransposeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.transpose',\n            label: nls.localize('editor.transpose', \"Transpose characters around the cursor\"),\n            alias: 'Transpose characters around the cursor',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const commands = [];\n        for (let i = 0, len = selections.length; i < len; i++) {\n            const selection = selections[i];\n            if (!selection.isEmpty()) {\n                continue;\n            }\n            const cursor = selection.getStartPosition();\n            const maxColumn = model.getLineMaxColumn(cursor.lineNumber);\n            if (cursor.column >= maxColumn) {\n                if (cursor.lineNumber === model.getLineCount()) {\n                    continue;\n                }\n                // The cursor is at the end of current line and current line is not empty\n                // then we transpose the character before the cursor and the line break if there is any following line.\n                const deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1);\n                const chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n                commands.push(new ReplaceCommand(new Selection(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1), chars));\n            }\n            else {\n                const deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber, cursor.column + 1);\n                const chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n                commands.push(new ReplaceCommandThatPreservesSelection(deleteSelection, chars, new Selection(cursor.lineNumber, cursor.column + 1, cursor.lineNumber, cursor.column + 1)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nexport class AbstractCaseAction extends EditorAction {\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const wordSeparators = editor.getOption(124 /* EditorOption.wordSeparators */);\n        const textEdits = [];\n        for (const selection of selections) {\n            if (selection.isEmpty()) {\n                const cursor = selection.getStartPosition();\n                const word = editor.getConfiguredWordAtPosition(cursor);\n                if (!word) {\n                    continue;\n                }\n                const wordRange = new Range(cursor.lineNumber, word.startColumn, cursor.lineNumber, word.endColumn);\n                const text = model.getValueInRange(wordRange);\n                textEdits.push(EditOperation.replace(wordRange, this._modifyText(text, wordSeparators)));\n            }\n            else {\n                const text = model.getValueInRange(selection);\n                textEdits.push(EditOperation.replace(selection, this._modifyText(text, wordSeparators)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, textEdits);\n        editor.pushUndoStop();\n    }\n}\nexport class UpperCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToUppercase',\n            label: nls.localize('editor.transformToUppercase', \"Transform to Uppercase\"),\n            alias: 'Transform to Uppercase',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        return text.toLocaleUpperCase();\n    }\n}\nexport class LowerCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToLowercase',\n            label: nls.localize('editor.transformToLowercase', \"Transform to Lowercase\"),\n            alias: 'Transform to Lowercase',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        return text.toLocaleLowerCase();\n    }\n}\nclass BackwardsCompatibleRegExp {\n    constructor(_pattern, _flags) {\n        this._pattern = _pattern;\n        this._flags = _flags;\n        this._actual = null;\n        this._evaluated = false;\n    }\n    get() {\n        if (!this._evaluated) {\n            this._evaluated = true;\n            try {\n                this._actual = new RegExp(this._pattern, this._flags);\n            }\n            catch (err) {\n                // this browser does not support this regular expression\n            }\n        }\n        return this._actual;\n    }\n    isSupported() {\n        return (this.get() !== null);\n    }\n}\nclass TitleCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToTitlecase',\n            label: nls.localize('editor.transformToTitlecase', \"Transform to Title Case\"),\n            alias: 'Transform to Title Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const titleBoundary = TitleCaseAction.titleBoundary.get();\n        if (!titleBoundary) {\n            // cannot support this\n            return text;\n        }\n        return text\n            .toLocaleLowerCase()\n            .replace(titleBoundary, (b) => b.toLocaleUpperCase());\n    }\n}\nTitleCaseAction.titleBoundary = new BackwardsCompatibleRegExp('(^|[^\\\\p{L}\\\\p{N}\\']|((^|\\\\P{L})\\'))\\\\p{L}', 'gmu');\nexport { TitleCaseAction };\nclass SnakeCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToSnakecase',\n            label: nls.localize('editor.transformToSnakecase', \"Transform to Snake Case\"),\n            alias: 'Transform to Snake Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const caseBoundary = SnakeCaseAction.caseBoundary.get();\n        const singleLetters = SnakeCaseAction.singleLetters.get();\n        if (!caseBoundary || !singleLetters) {\n            // cannot support this\n            return text;\n        }\n        return (text\n            .replace(caseBoundary, '$1_$2')\n            .replace(singleLetters, '$1_$2$3')\n            .toLocaleLowerCase());\n    }\n}\nSnakeCaseAction.caseBoundary = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\nSnakeCaseAction.singleLetters = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu})(\\\\p{Ll})', 'gmu');\nexport { SnakeCaseAction };\nclass CamelCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToCamelcase',\n            label: nls.localize('editor.transformToCamelcase', \"Transform to Camel Case\"),\n            alias: 'Transform to Camel Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const wordBoundary = CamelCaseAction.wordBoundary.get();\n        if (!wordBoundary) {\n            // cannot support this\n            return text;\n        }\n        const words = text.split(wordBoundary);\n        const firstWord = words.shift();\n        return firstWord + words.map((word) => word.substring(0, 1).toLocaleUpperCase() + word.substring(1))\n            .join('');\n    }\n}\nCamelCaseAction.wordBoundary = new BackwardsCompatibleRegExp('[_\\\\s-]', 'gm');\nexport { CamelCaseAction };\nclass KebabCaseAction extends AbstractCaseAction {\n    static isSupported() {\n        const areAllRegexpsSupported = [\n            this.caseBoundary,\n            this.singleLetters,\n            this.underscoreBoundary,\n        ].every((regexp) => regexp.isSupported());\n        return areAllRegexpsSupported;\n    }\n    constructor() {\n        super({\n            id: 'editor.action.transformToKebabcase',\n            label: nls.localize('editor.transformToKebabcase', 'Transform to Kebab Case'),\n            alias: 'Transform to Kebab Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, _) {\n        const caseBoundary = KebabCaseAction.caseBoundary.get();\n        const singleLetters = KebabCaseAction.singleLetters.get();\n        const underscoreBoundary = KebabCaseAction.underscoreBoundary.get();\n        if (!caseBoundary || !singleLetters || !underscoreBoundary) {\n            // one or more regexps aren't supported\n            return text;\n        }\n        return text\n            .replace(underscoreBoundary, '$1-$3')\n            .replace(caseBoundary, '$1-$2')\n            .replace(singleLetters, '$1-$2')\n            .toLocaleLowerCase();\n    }\n}\nKebabCaseAction.caseBoundary = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\nKebabCaseAction.singleLetters = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu}\\\\p{Ll})', 'gmu');\nKebabCaseAction.underscoreBoundary = new BackwardsCompatibleRegExp('(\\\\S)(_)(\\\\S)', 'gm');\nexport { KebabCaseAction };\nregisterEditorAction(CopyLinesUpAction);\nregisterEditorAction(CopyLinesDownAction);\nregisterEditorAction(DuplicateSelectionAction);\nregisterEditorAction(MoveLinesUpAction);\nregisterEditorAction(MoveLinesDownAction);\nregisterEditorAction(SortLinesAscendingAction);\nregisterEditorAction(SortLinesDescendingAction);\nregisterEditorAction(DeleteDuplicateLinesAction);\nregisterEditorAction(TrimTrailingWhitespaceAction);\nregisterEditorAction(DeleteLinesAction);\nregisterEditorAction(IndentLinesAction);\nregisterEditorAction(OutdentLinesAction);\nregisterEditorAction(InsertLineBeforeAction);\nregisterEditorAction(InsertLineAfterAction);\nregisterEditorAction(DeleteAllLeftAction);\nregisterEditorAction(DeleteAllRightAction);\nregisterEditorAction(JoinLinesAction);\nregisterEditorAction(TransposeAction);\nregisterEditorAction(UpperCaseAction);\nregisterEditorAction(LowerCaseAction);\nif (SnakeCaseAction.caseBoundary.isSupported() && SnakeCaseAction.singleLetters.isSupported()) {\n    registerEditorAction(SnakeCaseAction);\n}\nif (CamelCaseAction.wordBoundary.isSupported()) {\n    registerEditorAction(CamelCaseAction);\n}\nif (TitleCaseAction.titleBoundary.isSupported()) {\n    registerEditorAction(TitleCaseAction);\n}\nif (KebabCaseAction.isSupported()) {\n    registerEditorAction(KebabCaseAction);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, Delayer, first } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { isCancellationError, onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution, registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport './linkedEditing.css';\nexport const CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE = new RawContextKey('LinkedEditingInputVisible', false);\nconst DECORATION_CLASS_NAME = 'linked-editing-decoration';\nlet LinkedEditingContribution = class LinkedEditingContribution extends Disposable {\n    static get(editor) {\n        return editor.getContribution(LinkedEditingContribution.ID);\n    }\n    constructor(editor, contextKeyService, languageFeaturesService, languageConfigurationService, languageFeatureDebounceService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        this._syncRangesToken = 0;\n        this._localToDispose = this._register(new DisposableStore());\n        this._editor = editor;\n        this._providers = languageFeaturesService.linkedEditingRangeProvider;\n        this._enabled = false;\n        this._visibleContextKey = CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\n        this._debounceInformation = languageFeatureDebounceService.for(this._providers, 'Linked Editing', { min: 200 });\n        this._currentDecorations = this._editor.createDecorationsCollection();\n        this._languageWordPattern = null;\n        this._currentWordPattern = null;\n        this._ignoreChangeEvent = false;\n        this._localToDispose = this._register(new DisposableStore());\n        this._rangeUpdateTriggerPromise = null;\n        this._rangeSyncTriggerPromise = null;\n        this._currentRequest = null;\n        this._currentRequestPosition = null;\n        this._currentRequestModelVersion = null;\n        this._register(this._editor.onDidChangeModel(() => this.reinitialize(true)));\n        this._register(this._editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(66 /* EditorOption.linkedEditing */) || e.hasChanged(87 /* EditorOption.renameOnType */)) {\n                this.reinitialize(false);\n            }\n        }));\n        this._register(this._providers.onDidChange(() => this.reinitialize(false)));\n        this._register(this._editor.onDidChangeModelLanguage(() => this.reinitialize(true)));\n        this.reinitialize(true);\n    }\n    reinitialize(forceRefresh) {\n        const model = this._editor.getModel();\n        const isEnabled = model !== null && (this._editor.getOption(66 /* EditorOption.linkedEditing */) || this._editor.getOption(87 /* EditorOption.renameOnType */)) && this._providers.has(model);\n        if (isEnabled === this._enabled && !forceRefresh) {\n            return;\n        }\n        this._enabled = isEnabled;\n        this.clearRanges();\n        this._localToDispose.clear();\n        if (!isEnabled || model === null) {\n            return;\n        }\n        this._localToDispose.add(Event.runAndSubscribe(model.onDidChangeLanguageConfiguration, () => {\n            this._languageWordPattern = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n        }));\n        const rangeUpdateScheduler = new Delayer(this._debounceInformation.get(model));\n        const triggerRangeUpdate = () => {\n            var _a;\n            this._rangeUpdateTriggerPromise = rangeUpdateScheduler.trigger(() => this.updateRanges(), (_a = this._debounceDuration) !== null && _a !== void 0 ? _a : this._debounceInformation.get(model));\n        };\n        const rangeSyncScheduler = new Delayer(0);\n        const triggerRangeSync = (token) => {\n            this._rangeSyncTriggerPromise = rangeSyncScheduler.trigger(() => this._syncRanges(token));\n        };\n        this._localToDispose.add(this._editor.onDidChangeCursorPosition(() => {\n            triggerRangeUpdate();\n        }));\n        this._localToDispose.add(this._editor.onDidChangeModelContent((e) => {\n            if (!this._ignoreChangeEvent) {\n                if (this._currentDecorations.length > 0) {\n                    const referenceRange = this._currentDecorations.getRange(0);\n                    if (referenceRange && e.changes.every(c => referenceRange.intersectRanges(c.range))) {\n                        triggerRangeSync(this._syncRangesToken);\n                        return;\n                    }\n                }\n            }\n            triggerRangeUpdate();\n        }));\n        this._localToDispose.add({\n            dispose: () => {\n                rangeUpdateScheduler.dispose();\n                rangeSyncScheduler.dispose();\n            }\n        });\n        this.updateRanges();\n    }\n    _syncRanges(token) {\n        // dalayed invocation, make sure we're still on\n        if (!this._editor.hasModel() || token !== this._syncRangesToken || this._currentDecorations.length === 0) {\n            // nothing to do\n            return;\n        }\n        const model = this._editor.getModel();\n        const referenceRange = this._currentDecorations.getRange(0);\n        if (!referenceRange || referenceRange.startLineNumber !== referenceRange.endLineNumber) {\n            return this.clearRanges();\n        }\n        const referenceValue = model.getValueInRange(referenceRange);\n        if (this._currentWordPattern) {\n            const match = referenceValue.match(this._currentWordPattern);\n            const matchLength = match ? match[0].length : 0;\n            if (matchLength !== referenceValue.length) {\n                return this.clearRanges();\n            }\n        }\n        const edits = [];\n        for (let i = 1, len = this._currentDecorations.length; i < len; i++) {\n            const mirrorRange = this._currentDecorations.getRange(i);\n            if (!mirrorRange) {\n                continue;\n            }\n            if (mirrorRange.startLineNumber !== mirrorRange.endLineNumber) {\n                edits.push({\n                    range: mirrorRange,\n                    text: referenceValue\n                });\n            }\n            else {\n                let oldValue = model.getValueInRange(mirrorRange);\n                let newValue = referenceValue;\n                let rangeStartColumn = mirrorRange.startColumn;\n                let rangeEndColumn = mirrorRange.endColumn;\n                const commonPrefixLength = strings.commonPrefixLength(oldValue, newValue);\n                rangeStartColumn += commonPrefixLength;\n                oldValue = oldValue.substr(commonPrefixLength);\n                newValue = newValue.substr(commonPrefixLength);\n                const commonSuffixLength = strings.commonSuffixLength(oldValue, newValue);\n                rangeEndColumn -= commonSuffixLength;\n                oldValue = oldValue.substr(0, oldValue.length - commonSuffixLength);\n                newValue = newValue.substr(0, newValue.length - commonSuffixLength);\n                if (rangeStartColumn !== rangeEndColumn || newValue.length !== 0) {\n                    edits.push({\n                        range: new Range(mirrorRange.startLineNumber, rangeStartColumn, mirrorRange.endLineNumber, rangeEndColumn),\n                        text: newValue\n                    });\n                }\n            }\n        }\n        if (edits.length === 0) {\n            return;\n        }\n        try {\n            this._editor.popUndoStop();\n            this._ignoreChangeEvent = true;\n            const prevEditOperationType = this._editor._getViewModel().getPrevEditOperationType();\n            this._editor.executeEdits('linkedEditing', edits);\n            this._editor._getViewModel().setPrevEditOperationType(prevEditOperationType);\n        }\n        finally {\n            this._ignoreChangeEvent = false;\n        }\n    }\n    dispose() {\n        this.clearRanges();\n        super.dispose();\n    }\n    clearRanges() {\n        this._visibleContextKey.set(false);\n        this._currentDecorations.clear();\n        if (this._currentRequest) {\n            this._currentRequest.cancel();\n            this._currentRequest = null;\n            this._currentRequestPosition = null;\n        }\n    }\n    updateRanges(force = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._editor.hasModel()) {\n                this.clearRanges();\n                return;\n            }\n            const position = this._editor.getPosition();\n            if (!this._enabled && !force || this._editor.getSelections().length > 1) {\n                // disabled or multicursor\n                this.clearRanges();\n                return;\n            }\n            const model = this._editor.getModel();\n            const modelVersionId = model.getVersionId();\n            if (this._currentRequestPosition && this._currentRequestModelVersion === modelVersionId) {\n                if (position.equals(this._currentRequestPosition)) {\n                    return; // same position\n                }\n                if (this._currentDecorations.length > 0) {\n                    const range = this._currentDecorations.getRange(0);\n                    if (range && range.containsPosition(position)) {\n                        return; // just moving inside the existing primary range\n                    }\n                }\n            }\n            this._currentRequestPosition = position;\n            this._currentRequestModelVersion = modelVersionId;\n            const request = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const sw = new StopWatch(false);\n                    const response = yield getLinkedEditingRanges(this._providers, model, position, token);\n                    this._debounceInformation.update(model, sw.elapsed());\n                    if (request !== this._currentRequest) {\n                        return;\n                    }\n                    this._currentRequest = null;\n                    if (modelVersionId !== model.getVersionId()) {\n                        return;\n                    }\n                    let ranges = [];\n                    if (response === null || response === void 0 ? void 0 : response.ranges) {\n                        ranges = response.ranges;\n                    }\n                    this._currentWordPattern = (response === null || response === void 0 ? void 0 : response.wordPattern) || this._languageWordPattern;\n                    let foundReferenceRange = false;\n                    for (let i = 0, len = ranges.length; i < len; i++) {\n                        if (Range.containsPosition(ranges[i], position)) {\n                            foundReferenceRange = true;\n                            if (i !== 0) {\n                                const referenceRange = ranges[i];\n                                ranges.splice(i, 1);\n                                ranges.unshift(referenceRange);\n                            }\n                            break;\n                        }\n                    }\n                    if (!foundReferenceRange) {\n                        // Cannot do linked editing if the ranges are not where the cursor is...\n                        this.clearRanges();\n                        return;\n                    }\n                    const decorations = ranges.map(range => ({ range: range, options: LinkedEditingContribution.DECORATION }));\n                    this._visibleContextKey.set(true);\n                    this._currentDecorations.set(decorations);\n                    this._syncRangesToken++; // cancel any pending syncRanges call\n                }\n                catch (err) {\n                    if (!isCancellationError(err)) {\n                        onUnexpectedError(err);\n                    }\n                    if (this._currentRequest === request || !this._currentRequest) {\n                        // stop if we are still the latest request\n                        this.clearRanges();\n                    }\n                }\n            }));\n            this._currentRequest = request;\n            return request;\n        });\n    }\n};\nLinkedEditingContribution.ID = 'editor.contrib.linkedEditing';\nLinkedEditingContribution.DECORATION = ModelDecorationOptions.register({\n    description: 'linked-editing',\n    stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n    className: DECORATION_CLASS_NAME\n});\nLinkedEditingContribution = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, ILanguageFeaturesService),\n    __param(3, ILanguageConfigurationService),\n    __param(4, ILanguageFeatureDebounceService)\n], LinkedEditingContribution);\nexport { LinkedEditingContribution };\nexport class LinkedEditingAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.linkedEditing',\n            label: nls.localize('linkedEditing.label', \"Start Linked Editing\"),\n            alias: 'Start Linked Editing',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 60 /* KeyCode.F2 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    runCommand(accessor, args) {\n        const editorService = accessor.get(ICodeEditorService);\n        const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\n        if (URI.isUri(uri) && Position.isIPosition(pos)) {\n            return editorService.openCodeEditor({ resource: uri }, editorService.getActiveCodeEditor()).then(editor => {\n                if (!editor) {\n                    return;\n                }\n                editor.setPosition(pos);\n                editor.invokeWithinContext(accessor => {\n                    this.reportTelemetry(accessor, editor);\n                    return this.run(accessor, editor);\n                });\n            }, onUnexpectedError);\n        }\n        return super.runCommand(accessor, args);\n    }\n    run(_accessor, editor) {\n        const controller = LinkedEditingContribution.get(editor);\n        if (controller) {\n            return Promise.resolve(controller.updateRanges(true));\n        }\n        return Promise.resolve();\n    }\n}\nconst LinkedEditingCommand = EditorCommand.bindToContribution(LinkedEditingContribution.get);\nregisterEditorCommand(new LinkedEditingCommand({\n    id: 'cancelLinkedEditingInput',\n    precondition: CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE,\n    handler: x => x.clearRanges(),\n    kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nfunction getLinkedEditingRanges(providers, model, position, token) {\n    const orderedByScore = providers.ordered(model);\n    // in order of score ask the linked editing range provider\n    // until someone response with a good result\n    // (good = not null)\n    return first(orderedByScore.map(provider => () => __awaiter(this, void 0, void 0, function* () {\n        try {\n            return yield provider.provideLinkedEditingRanges(model, position, token);\n        }\n        catch (e) {\n            onUnexpectedExternalError(e);\n            return undefined;\n        }\n    })), result => !!result && arrays.isNonEmptyArray(result === null || result === void 0 ? void 0 : result.ranges));\n}\nexport const editorLinkedEditingBackground = registerColor('editor.linkedEditingBackground', { dark: Color.fromHex('#f00').transparent(0.3), light: Color.fromHex('#f00').transparent(0.3), hcDark: Color.fromHex('#f00').transparent(0.3), hcLight: Color.white }, nls.localize('editorLinkedEditingBackground', 'Background color when the editor auto renames on type.'));\nregisterModelAndPositionCommand('_executeLinkedEditingProvider', (_accessor, model, position) => {\n    const { linkedEditingRangeProvider } = _accessor.get(ILanguageFeaturesService);\n    return getLinkedEditingRanges(linkedEditingRangeProvider, model, position, CancellationToken.None);\n});\nregisterEditorContribution(LinkedEditingContribution.ID, LinkedEditingContribution, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nregisterEditorAction(LinkedEditingAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore, isDisposable } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class Link {\n    constructor(link, provider) {\n        this._link = link;\n        this._provider = provider;\n    }\n    toJSON() {\n        return {\n            range: this.range,\n            url: this.url,\n            tooltip: this.tooltip\n        };\n    }\n    get range() {\n        return this._link.range;\n    }\n    get url() {\n        return this._link.url;\n    }\n    get tooltip() {\n        return this._link.tooltip;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._link.url) {\n                return this._link.url;\n            }\n            if (typeof this._provider.resolveLink === 'function') {\n                return Promise.resolve(this._provider.resolveLink(this._link, token)).then(value => {\n                    this._link = value || this._link;\n                    if (this._link.url) {\n                        // recurse\n                        return this.resolve(token);\n                    }\n                    return Promise.reject(new Error('missing'));\n                });\n            }\n            return Promise.reject(new Error('missing'));\n        });\n    }\n}\nexport class LinksList {\n    constructor(tuples) {\n        this._disposables = new DisposableStore();\n        let links = [];\n        for (const [list, provider] of tuples) {\n            // merge all links\n            const newLinks = list.links.map(link => new Link(link, provider));\n            links = LinksList._union(links, newLinks);\n            // register disposables\n            if (isDisposable(list)) {\n                this._disposables.add(list);\n            }\n        }\n        this.links = links;\n    }\n    dispose() {\n        this._disposables.dispose();\n        this.links.length = 0;\n    }\n    static _union(oldLinks, newLinks) {\n        // reunite oldLinks with newLinks and remove duplicates\n        const result = [];\n        let oldIndex;\n        let oldLen;\n        let newIndex;\n        let newLen;\n        for (oldIndex = 0, newIndex = 0, oldLen = oldLinks.length, newLen = newLinks.length; oldIndex < oldLen && newIndex < newLen;) {\n            const oldLink = oldLinks[oldIndex];\n            const newLink = newLinks[newIndex];\n            if (Range.areIntersectingOrTouching(oldLink.range, newLink.range)) {\n                // Remove the oldLink\n                oldIndex++;\n                continue;\n            }\n            const comparisonResult = Range.compareRangesUsingStarts(oldLink.range, newLink.range);\n            if (comparisonResult < 0) {\n                // oldLink is before\n                result.push(oldLink);\n                oldIndex++;\n            }\n            else {\n                // newLink is before\n                result.push(newLink);\n                newIndex++;\n            }\n        }\n        for (; oldIndex < oldLen; oldIndex++) {\n            result.push(oldLinks[oldIndex]);\n        }\n        for (; newIndex < newLen; newIndex++) {\n            result.push(newLinks[newIndex]);\n        }\n        return result;\n    }\n}\nexport function getLinks(providers, model, token) {\n    const lists = [];\n    // ask all providers for links in parallel\n    const promises = providers.ordered(model).reverse().map((provider, i) => {\n        return Promise.resolve(provider.provideLinks(model, token)).then(result => {\n            if (result) {\n                lists[i] = [result, provider];\n            }\n        }, onUnexpectedExternalError);\n    });\n    return Promise.all(promises).then(() => {\n        const result = new LinksList(coalesce(lists));\n        if (!token.isCancellationRequested) {\n            return result;\n        }\n        result.dispose();\n        return new LinksList([]);\n    });\n}\nCommandsRegistry.registerCommand('_executeLinkProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    let [uri, resolveCount] = args;\n    assertType(uri instanceof URI);\n    if (typeof resolveCount !== 'number') {\n        resolveCount = 0;\n    }\n    const { linkProvider } = accessor.get(ILanguageFeaturesService);\n    const model = accessor.get(IModelService).getModel(uri);\n    if (!model) {\n        return [];\n    }\n    const list = yield getLinks(linkProvider, model, CancellationToken.None);\n    if (!list) {\n        return [];\n    }\n    // resolve links\n    for (let i = 0; i < Math.min(resolveCount, list.links.length); i++) {\n        yield list.links[i].resolve(CancellationToken.None);\n    }\n    const result = list.links.slice(0);\n    list.dispose();\n    return result;\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as resources from '../../../../base/common/resources.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport './links.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { getLinks } from './getLinks.js';\nimport * as nls from '../../../../nls.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nlet LinkDetector = class LinkDetector extends Disposable {\n    static get(editor) {\n        return editor.getContribution(LinkDetector.ID);\n    }\n    constructor(editor, openerService, notificationService, languageFeaturesService, languageFeatureDebounceService) {\n        super();\n        this.editor = editor;\n        this.openerService = openerService;\n        this.notificationService = notificationService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.providers = this.languageFeaturesService.linkProvider;\n        this.debounceInformation = languageFeatureDebounceService.for(this.providers, 'Links', { min: 1000, max: 4000 });\n        this.computeLinks = this._register(new RunOnceScheduler(() => this.computeLinksNow(), 1000));\n        this.computePromise = null;\n        this.activeLinksList = null;\n        this.currentOccurrences = {};\n        this.activeLinkDecorationId = null;\n        const clickLinkGesture = this._register(new ClickLinkGesture(editor));\n        this._register(clickLinkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent]) => {\n            this._onEditorMouseMove(mouseEvent, keyboardEvent);\n        }));\n        this._register(clickLinkGesture.onExecute((e) => {\n            this.onEditorMouseUp(e);\n        }));\n        this._register(clickLinkGesture.onCancel((e) => {\n            this.cleanUpActiveLinkDecoration();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!e.hasChanged(67 /* EditorOption.links */)) {\n                return;\n            }\n            // Remove any links (for the getting disabled case)\n            this.updateDecorations([]);\n            // Stop any computation (for the getting disabled case)\n            this.stop();\n            // Start computing (for the getting enabled case)\n            this.computeLinks.schedule(0);\n        }));\n        this._register(editor.onDidChangeModelContent((e) => {\n            if (!this.editor.hasModel()) {\n                return;\n            }\n            this.computeLinks.schedule(this.debounceInformation.get(this.editor.getModel()));\n        }));\n        this._register(editor.onDidChangeModel((e) => {\n            this.currentOccurrences = {};\n            this.activeLinkDecorationId = null;\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this._register(editor.onDidChangeModelLanguage((e) => {\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this._register(this.providers.onDidChange((e) => {\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this.computeLinks.schedule(0);\n    }\n    computeLinksNow() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.editor.hasModel() || !this.editor.getOption(67 /* EditorOption.links */)) {\n                return;\n            }\n            const model = this.editor.getModel();\n            if (!this.providers.has(model)) {\n                return;\n            }\n            if (this.activeLinksList) {\n                this.activeLinksList.dispose();\n                this.activeLinksList = null;\n            }\n            this.computePromise = createCancelablePromise(token => getLinks(this.providers, model, token));\n            try {\n                const sw = new StopWatch(false);\n                this.activeLinksList = yield this.computePromise;\n                this.debounceInformation.update(model, sw.elapsed());\n                if (model.isDisposed()) {\n                    return;\n                }\n                this.updateDecorations(this.activeLinksList.links);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                this.computePromise = null;\n            }\n        });\n    }\n    updateDecorations(links) {\n        const useMetaKey = (this.editor.getOption(74 /* EditorOption.multiCursorModifier */) === 'altKey');\n        const oldDecorations = [];\n        const keys = Object.keys(this.currentOccurrences);\n        for (const decorationId of keys) {\n            const occurence = this.currentOccurrences[decorationId];\n            oldDecorations.push(occurence.decorationId);\n        }\n        const newDecorations = [];\n        if (links) {\n            // Not sure why this is sometimes null\n            for (const link of links) {\n                newDecorations.push(LinkOccurrence.decoration(link, useMetaKey));\n            }\n        }\n        this.editor.changeDecorations((changeAccessor) => {\n            const decorations = changeAccessor.deltaDecorations(oldDecorations, newDecorations);\n            this.currentOccurrences = {};\n            this.activeLinkDecorationId = null;\n            for (let i = 0, len = decorations.length; i < len; i++) {\n                const occurence = new LinkOccurrence(links[i], decorations[i]);\n                this.currentOccurrences[occurence.decorationId] = occurence;\n            }\n        });\n    }\n    _onEditorMouseMove(mouseEvent, withKey) {\n        const useMetaKey = (this.editor.getOption(74 /* EditorOption.multiCursorModifier */) === 'altKey');\n        if (this.isEnabled(mouseEvent, withKey)) {\n            this.cleanUpActiveLinkDecoration(); // always remove previous link decoration as their can only be one\n            const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\n            if (occurrence) {\n                this.editor.changeDecorations((changeAccessor) => {\n                    occurrence.activate(changeAccessor, useMetaKey);\n                    this.activeLinkDecorationId = occurrence.decorationId;\n                });\n            }\n        }\n        else {\n            this.cleanUpActiveLinkDecoration();\n        }\n    }\n    cleanUpActiveLinkDecoration() {\n        const useMetaKey = (this.editor.getOption(74 /* EditorOption.multiCursorModifier */) === 'altKey');\n        if (this.activeLinkDecorationId) {\n            const occurrence = this.currentOccurrences[this.activeLinkDecorationId];\n            if (occurrence) {\n                this.editor.changeDecorations((changeAccessor) => {\n                    occurrence.deactivate(changeAccessor, useMetaKey);\n                });\n            }\n            this.activeLinkDecorationId = null;\n        }\n    }\n    onEditorMouseUp(mouseEvent) {\n        if (!this.isEnabled(mouseEvent)) {\n            return;\n        }\n        const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\n        if (!occurrence) {\n            return;\n        }\n        this.openLinkOccurrence(occurrence, mouseEvent.hasSideBySideModifier, true /* from user gesture */);\n    }\n    openLinkOccurrence(occurrence, openToSide, fromUserGesture = false) {\n        if (!this.openerService) {\n            return;\n        }\n        const { link } = occurrence;\n        link.resolve(CancellationToken.None).then(uri => {\n            // Support for relative file URIs of the shape file://./relativeFile.txt or file:///./relativeFile.txt\n            if (typeof uri === 'string' && this.editor.hasModel()) {\n                const modelUri = this.editor.getModel().uri;\n                if (modelUri.scheme === Schemas.file && uri.startsWith(`${Schemas.file}:`)) {\n                    const parsedUri = URI.parse(uri);\n                    if (parsedUri.scheme === Schemas.file) {\n                        const fsPath = resources.originalFSPath(parsedUri);\n                        let relativePath = null;\n                        if (fsPath.startsWith('/./')) {\n                            relativePath = `.${fsPath.substr(1)}`;\n                        }\n                        else if (fsPath.startsWith('//./')) {\n                            relativePath = `.${fsPath.substr(2)}`;\n                        }\n                        if (relativePath) {\n                            uri = resources.joinPath(modelUri, relativePath);\n                        }\n                    }\n                }\n            }\n            return this.openerService.open(uri, { openToSide, fromUserGesture, allowContributedOpeners: true, allowCommands: true, fromWorkspace: true });\n        }, err => {\n            const messageOrError = err instanceof Error ? err.message : err;\n            // different error cases\n            if (messageOrError === 'invalid') {\n                this.notificationService.warn(nls.localize('invalid.url', 'Failed to open this link because it is not well-formed: {0}', link.url.toString()));\n            }\n            else if (messageOrError === 'missing') {\n                this.notificationService.warn(nls.localize('missing.url', 'Failed to open this link because its target is missing.'));\n            }\n            else {\n                onUnexpectedError(err);\n            }\n        });\n    }\n    getLinkOccurrence(position) {\n        if (!this.editor.hasModel() || !position) {\n            return null;\n        }\n        const decorations = this.editor.getModel().getDecorationsInRange({\n            startLineNumber: position.lineNumber,\n            startColumn: position.column,\n            endLineNumber: position.lineNumber,\n            endColumn: position.column\n        }, 0, true);\n        for (const decoration of decorations) {\n            const currentOccurrence = this.currentOccurrences[decoration.id];\n            if (currentOccurrence) {\n                return currentOccurrence;\n            }\n        }\n        return null;\n    }\n    isEnabled(mouseEvent, withKey) {\n        return Boolean((mouseEvent.target.type === 6 /* MouseTargetType.CONTENT_TEXT */)\n            && (mouseEvent.hasTriggerModifier || (withKey && withKey.keyCodeIsTriggerKey)));\n    }\n    stop() {\n        var _a;\n        this.computeLinks.cancel();\n        if (this.activeLinksList) {\n            (_a = this.activeLinksList) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.activeLinksList = null;\n        }\n        if (this.computePromise) {\n            this.computePromise.cancel();\n            this.computePromise = null;\n        }\n    }\n    dispose() {\n        super.dispose();\n        this.stop();\n    }\n};\nLinkDetector.ID = 'editor.linkDetector';\nLinkDetector = __decorate([\n    __param(1, IOpenerService),\n    __param(2, INotificationService),\n    __param(3, ILanguageFeaturesService),\n    __param(4, ILanguageFeatureDebounceService)\n], LinkDetector);\nexport { LinkDetector };\nconst decoration = {\n    general: ModelDecorationOptions.register({\n        description: 'detected-link',\n        stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n        collapseOnReplaceEdit: true,\n        inlineClassName: 'detected-link'\n    }),\n    active: ModelDecorationOptions.register({\n        description: 'detected-link-active',\n        stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n        collapseOnReplaceEdit: true,\n        inlineClassName: 'detected-link-active'\n    })\n};\nclass LinkOccurrence {\n    static decoration(link, useMetaKey) {\n        return {\n            range: link.range,\n            options: LinkOccurrence._getOptions(link, useMetaKey, false)\n        };\n    }\n    static _getOptions(link, useMetaKey, isActive) {\n        const options = Object.assign({}, (isActive ? decoration.active : decoration.general));\n        options.hoverMessage = getHoverMessage(link, useMetaKey);\n        return options;\n    }\n    constructor(link, decorationId) {\n        this.link = link;\n        this.decorationId = decorationId;\n    }\n    activate(changeAccessor, useMetaKey) {\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, true));\n    }\n    deactivate(changeAccessor, useMetaKey) {\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, false));\n    }\n}\nfunction getHoverMessage(link, useMetaKey) {\n    const executeCmd = link.url && /^command:/i.test(link.url.toString());\n    const label = link.tooltip\n        ? link.tooltip\n        : executeCmd\n            ? nls.localize('links.navigate.executeCmd', 'Execute command')\n            : nls.localize('links.navigate.follow', 'Follow link');\n    const kb = useMetaKey\n        ? platform.isMacintosh\n            ? nls.localize('links.navigate.kb.meta.mac', \"cmd + click\")\n            : nls.localize('links.navigate.kb.meta', \"ctrl + click\")\n        : platform.isMacintosh\n            ? nls.localize('links.navigate.kb.alt.mac', \"option + click\")\n            : nls.localize('links.navigate.kb.alt', \"alt + click\");\n    if (link.url) {\n        let nativeLabel = '';\n        if (/^command:/i.test(link.url.toString())) {\n            // Don't show complete command arguments in the native tooltip\n            const match = link.url.toString().match(/^command:([^?#]+)/);\n            if (match) {\n                const commandId = match[1];\n                nativeLabel = nls.localize('tooltip.explanation', \"Execute command {0}\", commandId);\n            }\n        }\n        const hoverMessage = new MarkdownString('', true)\n            .appendLink(link.url.toString(true).replace(/ /g, '%20'), label, nativeLabel)\n            .appendMarkdown(` (${kb})`);\n        return hoverMessage;\n    }\n    else {\n        return new MarkdownString().appendText(`${label} (${kb})`);\n    }\n}\nclass OpenLinkAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.openLink',\n            label: nls.localize('label', \"Open Link\"),\n            alias: 'Open Link',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const linkDetector = LinkDetector.get(editor);\n        if (!linkDetector) {\n            return;\n        }\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections();\n        for (const sel of selections) {\n            const link = linkDetector.getLinkOccurrence(sel.getEndPosition());\n            if (link) {\n                linkDetector.openLinkOccurrence(link, false);\n            }\n        }\n    }\n}\nregisterEditorContribution(LinkDetector.ID, LinkDetector, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nregisterEditorAction(OpenLinkAction);\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","InlayHintAnchor","_createClass","range","direction","_classCallCheck","this","InlayHintItem","hint","anchor","provider","_isResolved","key","delta","_currentResolve","token","_regeneratorRuntime","mark","_callee","_this","wrap","_context","prev","resolveInlayHint","abrupt","isCancellationRequested","_doResolve","finally","undefined","stop","_a","_b","_callee2","newHint","_context2","sent","tooltip","label","t0","onUnexpectedExternalError","InlayHintsFragments","ranges","data","model","_disposables","DisposableStore","Set","_step","items","_iterator","_createForOfIteratorHelper","s","n","_step$value","_slicedToArray","list","add","_step2","_iterator2","hints","position","validatePosition","wordRange","_getRangeAtPosition","getStartPosition","isBefore","Range","getEndPosition","push","err","f","sort","a","b","Position","dispose","registry","_callee4","promises","_this2","_context4","ordered","reverse","map","_callee3","_context3","provideInlayHints","length","all","flat","isDisposed","CancellationError","line","lineNumber","word","getWordAtPosition","startColumn","endColumn","tokenization","tokenizeIfCheap","tokens","getLineTokens","offset","column","idx","findTokenIndexAtOffset","start","getStartOffset","end","getEndOffset","getCount","__decorate","decorators","target","desc","d","c","arguments","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","InlayHintsCache","_entries","LRUCache","_key","get","set","concat","uri","toString","getVersionId","IInlayHintsCache","createDecorator","registerSingleton","RenderedInlayHintLabelPart","item","index","ActiveInlayHintInfo","part","hasTriggerModifier","InlayHintsController","_editor","_languageFeaturesService","_featureDebounce","_inlayHintsCache","_commandService","_notificationService","_instaService","_sessionDisposables","_decorationsMetadata","Map","_ruleFactory","DynamicCssRules","_activeRenderMode","_debounceInfo","for","inlayHintsProvider","min","onDidChange","_update","onDidChangeModel","onDidChangeModelLanguage","onDidChangeConfiguration","hasChanged","_removeAllDecorations","clear","options","getOption","enabled","getModel","has","cts","cached","_updateHintsDecorators","getFullModelRange","toDisposable","_cacheHintsForFastRestore","defaultMode","altMode","watchedProviders","scheduler","RunOnceScheduler","t1","listener","myToken","inlayHints","Date","now","CancellationTokenSource","onWillDispose","cancel","create","_getHintsRanges","delay","update","onDidChangeInlayHints","isScheduled","schedule","onUnexpectedError","finish","onDidScrollChange","scrollTopChanged","onDidChangeModelContent","Math","max","ModifierKeyEmitter","event","hasModel","newRenderMode","altKey","ctrlKey","shiftKey","metaKey","copies","_copyInlayHintsWithCurrentAnchor","_installDblClickGesture","_installLinkGesture","_installContextMenu","_this3","store","gesture","ClickLinkGesture","sessionStore","onMouseMoveOrRelevantKeyDown","mouseEvent","labelPart","_getInlayHintLabelPart","_activeInlayHintPart","command","location","getLineMaxColumn","lineHints","_getInlineHintsForRange","onCancel","onExecute","invokeFunction","goToDefinitionWithLocation","languages","_invokeCommand","values","containsRange","Array","from","updateInlayHints","_this4","onMouseUp","edits","detail","preventDefault","CancellationToken","isNonEmptyArray","textEdits","edit","EditOperation","text","executeEdits","_this5","onContextMenu","HTMLElement","showGoToContextMenu","type","injectedText","ModelDecorationInjectedTextOptions","attachedData","_callee5","_this$_commandService","_context5","executeCommand","id","_toConsumableArray","notify","severity","Severity","source","displayName","message","_step3","_iterator3","_step3$value","obj","getDecorationRange","copy","with","_step4","visibleRanges","getVisibleRangesPlusViewportAboveBelow","_iterator4","extendedRange","validateRange","startLineNumber","endLineNumber","_this6","newDecorationsData","addInjectedText","ref","content","cursorStops","opts","inlineClassNameAffectsLetterSpacing","inlineClassName","className","classNameRef","decoration","_defineProperty","description","showIfCollapsed","isEmpty","collapseOnReplaceEdit","stickiness","addInjectedWhitespace","isLast","marginRule","createClassNameRef","width","fontSize","display","InjectedTextCursorStops","_this$_getLayoutInfo","_getLayoutInfo","fontFamily","padding","isUniform","fontFamilyVar","getContainerDomNode","style","setProperty","_step5","_iterator5","paddingLeft","parts","isFirst","cssProperties","EDITOR_FONT_DEFAULTS","verticalAlign","cursor","_fillInColors","textDecoration","color","themeColorFromId","colors","borderRadius","fixSpace","paddingRight","_MAX_DECORATORS","_step6","decorationIdsToReplace","_iterator6","_step7","_iterator7","getDecorationsInRange","metadata","delete","scrollState","StableEditorScrollState","changeDecorations","accessor","newDecorationIds","deltaDecorations","restore","props","kind","backgroundColor","editorFontSize","editorFontFamily","removeDecorations","keys","_step8","_iterator8","editor","getContribution","ID","str","replace","ILanguageFeaturesService","ILanguageFeatureDebounceService","ICommandService","INotificationService","IInstantiationService","CommandsRegistry","_len","args","_key2","_callee6","_accessor$get","_context6","assertType","URI","ITextModelService","createModelReference","object","textEditorModel","setTimeout","__asyncValues","o","Symbol","asyncIterator","TypeError","m","call","__values","iterator","verb","v","settle","InlayHintsHoverAnchor","_HoverForeignElementA","_inherits","_super","_createSuper","owner","initialMousePosX","initialMousePosY","HoverForeignElementAnchor","InlayHintsHover","_MarkdownHoverPartici","_super2","languageService","openerService","configurationService","_resolverService","languageFeaturesService","hoverOrdinal","posx","posy","_lineDecorations","AsyncIterableObject","executor","e_1","_c","itemTooltip","partTooltip","linkHint","useMetaKey","kb","iterable","_d","iterable_1","iterable_1_1","MarkdownString","appendText","emitOne","MarkdownHover","localize","platform","scheme","Schemas","path","query","encodeURIComponent","JSON","stringify","title","isTrusted","_resolveInlayHintLabelPartHover","error","return","_part$part$location","hoverProvider","getHover","filter","isEmptyMarkdownString","hover","contents","ordinal","MarkdownHoverParticipant","ILanguageService","IOpenerService","IConfigurationService","registerEditorContribution","HoverParticipantRegistry","resolverService","contextMenuService","commandService","instaService","notificationService","menuActions","_loop","useShadowDOM","IContextMenuService","MenuRegistry","MenuId","isIMenuItem","SymbolNavigationAction","delegate","Action","MenuItemAction","renderShortTitle","run","bind","SymbolNavigationAnchor","delegateYield","Separator","showContextMenu","domForShadowRoot","getDomNode","getAnchor","box","dom","x","left","y","top","height","getActions","onHide","focus","autoSelectFirstItem","invokeWithinContext","openToSide","contextKeyService","isInPeek","canPeek","action","hasSideBySideModifier","IContextKeyService","PeekContext","DefinitionAction","openInPeek","muteMessage","original","precondition","inlineSuggestCommitId","showPreviousInlineSuggestionActionId","showNextInlineSuggestionActionId","PositionOffsetTransformer","lineStartOffsetByLineIdx","charAt","array","GhostText","additionalReservedLineCount","lineText","lastPart","transformer","offsetEdits","startOffset","getOffset","endOffset","substring","applyEdits","substr","p","lines","join","every","GhostTextPart","preview","GhostTextReplacement","columnStart","newLines","_lineText","BaseGhostTextWidgetModel","_Disposable","_expanded","onDidChangeEmitter","Emitter","_register","fire","expanded","Disposable","minimizeInlineCompletion","inlineCompletion","valueToReplace","getValueInRange","commonPrefixLen","strings","insertText","getOffsetAt","getPositionAt","remainingValueToReplace","commonSuffixLen","snippetInfo","filterText","additionalTextEdits","inlineCompletionToGhostText","textModel","mode","cursorPosition","previewSuffixLength","sourceLine","getLineContent","sourceIndentationLength","suggestionAddedIndentationLength","replacedIndentation","rangeThatDoesNotReplaceIndentation","suggestionWithoutIndentationChange","startsWith","valueToBeReplaced","changes","originalValue","newValue","lastRequest","smartDiff","deletedChars","deletedCharacters","newChanges","cachingDiff","filteredChanges","originalLength","originalStart","previewStartInCompletionText","insertColumn","modifiedLength","modifiedEnd","modifiedStart","nonPreviewTextEnd","nonPreviewText","italicText","sum","smartBracketMatching","maxCharCode","getMaxCharCode","elements1","getElements","elements2","LcsDiff","ComputeDiff","val","len","charCode","charCodeAt","getUniqueCharCode","Error","level","group","characters","Int32Array","InlineCompletionsModel","cache","languageConfigurationService","debounceService","completionSession","MutableDisposable","active","disposed","debounceValue","inlineCompletionsProvider","onDidExecuteCommand","CoreEditingCommands","commandId","hasTextFocus","handleUserInput","onDidType","onDidChangeCursorPosition","reason","session","isValid","hide","onDidBlurEditorWidget","getValue","InlineSuggestionHintsContentWidget","startSessionIfTriggered","ghostText","minReservedLineCount","setExpanded","scheduleAutomaticUpdate","trigger","InlineCompletionTriggerKind","triggerKind","ensureUpdateWithExplicitContext","InlineCompletionsSession","getPosition","takeOwnership","commitCurrentCompletion","commitCurrentCompletionNextWord","showNextInlineCompletion","showPreviousInlineCompletion","ILanguageConfigurationService","_BaseGhostTextWidgetM","triggerPosition","shouldUpdate","initialTriggerKind","debounce","updateOperation","updateSoon","filteredCompletions","currentlySelectedCompletionId","lastCompletionItem","currentCompletion","sourceInlineCompletion","sourceProvider","handleItemDidShow","sourceInlineCompletions","updateRanges","updateFilteredInlineCompletions","completions","synchronizedRange","toLowerCase","indent","getLineIndentColumn","cursorPosIndex","filterTextBefore","filterTextAfter","originalValueBefore","originalValueAfter","trimStart","matchesSubString","fixAndGetIndexOfCurrentSelection","findIndex","semanticId","newIdx","promise","getOptions","split","completion","currentCachedCompletion","toLiveInlineCompletion","startTime","operation","createCancelablePromise","endTime","provideInlineCompletions","selectedSuggestionInfo","getTime","setValue","UpdateOperation","disposable","commit","firstPart","langId","getLanguageIdAtPosition","config","getLanguageConfiguration","wordRegExp","RegExp","wordDefinition","flags","m1","match","acceptUntilIndexExclusive","wsRegExp","m2","exec","partialText","pushUndoStop","setPosition","handlePartialAccept","acceptedRange","_this$commandService","clearAndLeak","SnippetController2","insert","snippet","undoStopBefore","lists","flatMap","l","commands","SynchronizedInlineCompletionsCache","_Disposable2","_super3","completionsSource","onChange","_this7","isDisposing","decorationIds","changeAccessor","CachedInlineCompletion","newRange","decorationId","equalsRange","abbreviation","startLine","context","_callee7","defaultReplaceRange","providers","results","itemsByHash","diff","preBracketCompletionLength","_diff","trackedItem","_this8","_context7","getDefaultRange","catch","freeInlineCompletions","completeBracketPairs","closeBrackets","SnippetParser","parse","children","Text","assertNever","maxColumn","newLine","newTokens","tokenizeLineWithEdit","slicedTokens","sliceAndInflate","fixBracketsInLine","SuggestWidgetInlineCompletionProvider","suggestControllerPreselector","isSuggestWidgetVisible","isShiftKeyPressed","_isActive","_currentSuggestItemInfo","onKeyDown","onKeyUp","suggestController","SuggestController","registerSelector","priority","select","pos","suggestItems","normalizedItemToPreselect","candidates","suggestItem","rangeToTest","prefix","inlineSuggestItem","suggestionToSuggestItemInfo","normalizedSuggestItem","normalizedInlineCompletion","valid","prefixLength","findMaxBy","compareBy","numberComparator","isBoundToSuggestWidget","Event","onDidTrigger","widget","onDidShow","onDidHide","onDidFocus","selectedItem","newActive","newInlineCompletion","getSuggestItemInfo","shouldFire","completionItemKind","isSnippetText","normalizedInlineCompletionsEquals","suggestItemInfoEquals","focusedItem","getFocusedItem","stopForceRenderingAbove","forceRenderingAbove","toggleMode","isArray","insertTextRules","SnippetSession","info","getOverwriteInfo","overwriteBefore","overwriteAfter","SuggestWidgetPreviewModel","suggestionInlineCompletionSource","updateCacheSoon","updateCache","state","newGhostText","reduce","completionKind","extendingRange","rangeToExtend","isSuggestionPreviewEnabled","augmentedCompletion","suggestWidgetState","suggestInlineCompletion","isAugmentedCompletionValid","finalCompletion","inlineCompletionPreviewLength","toGhostText","previewMode","DelegatingModel","hasCachedGhostText","currentModelRef","cachedGhostText","targetModel","GhostTextModel","_DelegatingModel","instantiationService","sharedCache","SharedInlineCompletionCache","suggestWidgetAdapterModel","createInstance","inlineCompletionsModel","updateModel","setTargetModel","isActive","setActive","hoverRange","activeInlineCompletionsModel","some","containsPosition","commitCurrentSuggestion","commitCurrentSuggestionPartially","showNext","showPrevious","ttPolicy","window","trustedTypes","createPolicy","createHTML","GhostTextWidget","partsWidget","DecorationsWidget","additionalLinesWidget","AdditionalLinesWidget","languageIdCodec","viewMoreContentWidget","replacementDecoration","DisposableDecorations","viewZoneId","inlineTexts","additionalLines","addToAdditionalLines","lastLine","decorations","LineDecoration","slice","setDecorations","textBufferLine","hiddenTextStartColumn","lastIdx","setParts","updateLines","firstLineText","remainingLinesLength","fontInfo","domNode","document","createElement","applyFontInfo","spacer","append","newline","disposableStore","button","addStandardDisposableListener","ViewMoreLinesContentWidget","hiddenText","hiddenTextDecorations","after","_viewZoneId","changeViewZones","removeZone","tabSize","heightInLines","disableMonospaceOptimizations","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","lineHeight","sb","StringBuilder","appendString","lineData","String","isBasicASCII","containsRTL","lineTokens","LineTokens","renderViewLine","RenderLineInput","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","EditorFontLigatures","html","build","trustedhtml","innerHTML","renderLines","addZone","afterLineNumber","afterColumnAffinity","allowEditorOverflow","suppressMouseDown","removeContentWidget","_assertThisInitialized","addContentWidget","preference","GhostTextController","triggeredExplicitly","activeController","activeModelDidChangeEmitter","firstUndoableVersionId","alwaysShowInlineSuggestionToolbar","bindTo","isUndoing","getAlternativeVersionId","contextKeys","canUndoInlineSuggestion","reset","suggestOptions","inlineSuggestOptions","showToolbar","shouldCreate","ActiveGhostTextController","activeModel","shouldShowHoverAt","shouldShowHoverAtViewZone","triggerInlineCompletion","nextVersion","commitInlineCompletionPartially","commitInlineCompletion","hideInlineCompletion","inlineSuggestionVisible","RawContextKey","nls","inlineSuggestionHasIndentation","inlineSuggestionHasIndentationLessThanTabSize","GhostTextContextKeys","inlineCompletionVisible","inlineCompletionSuggestsIndentation","inlineCompletionSuggestsIndentationLessThanTabSize","updateContextKeys","startsWithIndentation","startsWithIndentationLessThanTabSize","_ghostText$parts$","firstLine","firstNonWsIdx","firstNonWhitespaceIndex","CursorColumns","ShowNextInlineSuggestionAction","_EditorAction","alias","ContextKeyExpr","EditorContextKeys","kbOpts","weight","primary","controller","EditorAction","ShowPreviousInlineSuggestionAction","_EditorAction2","_super4","TriggerInlineSuggestionAction","_EditorAction3","_super5","AcceptNextWordOfInlineCompletion","_EditorAction4","_super6","menuOpts","menuId","order","commitPartially","AcceptInlineCompletion","_EditorAction5","_super7","kbExpr","HideInlineCompletion","_EditorAction6","_super8","ToggleAlwaysShowInlineSuggestionToolbar","_Action","_super9","f1","menu","toggled","configService","currentValue","updateValue","Action2","UndoAcceptPart","_EditorAction7","_super10","_callee8","_context8","undo","InlineCompletionsHover","hasBeenTriggeredExplicitly","getInlineCompletionsCountSync","currentlySelectedIndex","handler","InlineCompletionsHoverParticipant","_languageService","_openerService","accessibilityService","_instantiationService","_telemetryService","viewZoneData","positionBefore","mightBeForeignElement","lineDecorations","hoverParts","publicLog2","isScreenReaderOptimized","renderScreenReaderText","w","fragment","appendChild","getInlineCompletionIndex","getInlineCompletionsCount","requestExplicitContext","$","markdownHoverElement","hoverContentsElement","renderer","MarkdownRenderer","code","onDidRenderAsync","onContentsChanged","inlineSuggestionAvailable","renderedContents","render","appendCodeblock","replaceChildren","element","renderForScreenReader","IAccessibilityService","ITelemetryService","registerEditorAction","registerAction2","inlineSuggestionHintsNextIcon","registerIcon","Codicon","inlineSuggestionHintsPreviousIcon","withBorder","keybindingService","_contextKeyService","_menuService","nodes","h","previousAction","createCommandAction","ThemeIcon","availableSuggestionCountAction","nextAction","inlineCompletionsActionsMenus","createMenu","clearAvailableSuggestionCountLabelDebounced","disableButtonsDebounced","actionBar","ActionBar","icon","toolBar","CustomizedMenuWorkbenchToolBar","menuOptions","toolbarOptions","primaryGroup","g","actionViewItemProvider","StatusBarViewItem","telemetrySource","onDidChangeDropdownVisibility","_dropDownVisible","iconClassName","lookupKeybinding","comment","getLabel","currentSuggestionIdx","suggestionCount","extraCommands","layoutContentWidget","extraActions","class","unshift","setAdditionalSecondaryActions","root","positionAffinity","IKeybindingService","IMenuService","_MenuEntryActionViewI","_keybindingService","_action","_get","_getPrototypeOf","prototype","div","KeybindingLabel","OS","assign","disableTitle","unthemedKeybindingLabelOptions","textContent","classList","MenuEntryActionViewItem","_WorkbenchToolBar","container","options2","menuService","telemetryService","resetMenu","_store","emitEventsForSubmenuChanges","additionalActions","updateToolbar","_e","_f","_g","secondary","createAndFillInActionBarActions","shouldInlineSubmenu","useSeparatorsInPrimaryActions","setActions","actions","WorkbenchToolBar","ExpandLineSelectionAction","_accessor","viewModel","_getViewModel","pushStackElement","setCursorStates","CursorMoveCommands","getCursorStates","revealPrimaryCursor","CopyLinesCommand","selection","isCopyingDown","noop","_selection","_isCopyingDown","_noop","_selectionDirection","_selectionId","_startLineNumberDelta","_endLineNumberDelta","builder","setEndPosition","sourceLines","sourceText","addEditOperation","getLineCount","trackSelection","getDirection","helper","getTrackedSelection","Selection","MoveLinesCommand","isMovingDown","autoIndent","_languageConfigurationService","_isMovingDown","_autoIndent","_moveEndLineSelectionShrink","modelLineCount","_moveEndPositionDown","_model$getOptions","indentSize","insertSpaces","indentConverter","buildIndentConverter","virtualModel","getLanguageId","otherLineNumber","movingLineNumber","movingLineText","insertingText","shouldAutoIndent","movingLineMatchResult","matchEnterRule","oldIndentation","newSpaceCnt","indentUtils","newIndentation","trimLeft","indentOfMovingLine","getGoodIndentForLine","ret","matchEnterRuleMovingDown","getIndentEditsOfMovingBlock","newIndentatOfMovingBlock","oldSpaceCnt","spaceCntOffset","indentOfFirstLine","oldIndent","shiftIndent","indentation","ShiftCommand","unshiftIndent","enter","enterPrefix","indentAction","IndentAction","indexOf","indentMetadataOfMovelingLine","getIndentMetadata","futureAboveLineNumber","futureAboveLineText","getEnterAction","parseEnterResult","validPrecedingLine","lineContent","oneLineAbove","previousLineText","isCheapToTokenize","languageAtSelectionStart","indentRulesSupport","originalIndent","newSpacesCnt","newIndent","SortLinesCommand","descending","selectionId","op","getSortData","sortLines","_COLLATOR","Intl","Collator","before","linesToSort","sorted","getCollator","compare","AbstractCopyLinesAction","down","selections","getSelections","ignore","curr","executeCommands","CopyLinesUpAction","_AbstractCopyLinesAct","linux","CopyLinesDownAction","_AbstractCopyLinesAct2","DuplicateSelectionAction","insertSelection","ReplaceCommandThatSelectsText","AbstractMoveLinesAction","MoveLinesUpAction","_AbstractMoveLinesAct","MoveLinesDownAction","_AbstractMoveLinesAct2","AbstractSortLinesAction","canRun","SortLinesAscendingAction","_AbstractSortLinesAct","SortLinesDescendingAction","_AbstractSortLinesAct2","DeleteDuplicateLinesAction","_super11","endCursorState","linesDeleted","uniqueLines","selectionToReplace","adjustedSelectionStart","finalSelection","TrimTrailingWhitespaceAction","_super12","KeyChord","cursors","positionLineNumber","positionColumn","getSelection","TrimTrailingWhitespaceCommand","DeleteLinesAction","_super13","ops","_getLinesToRemove","cursorState","operations","selectionStartColumn","mergedOperations","previousOperation","IndentLinesAction","_EditorAction8","_super14","TypeOperations","cursorConfig","OutdentLinesAction","_EditorAction9","_super15","InsertLineBeforeAction","_EditorAction10","_super16","InsertLineAfterAction","_EditorAction11","_super17","AbstractDeleteAllToBoundaryAction","_EditorAction12","_super18","primaryCursor","rangesToDelete","_getRangesToDelete","effectiveRanges","count","nextRange","_getEndCursorState","DeleteAllLeftAction","_AbstractDeleteAllToB","_super19","mac","endPrimaryCursor","deletedLines","forEach","endCursor","newStartLine","intersectRanges","deleteFromLine","deleteFromColumn","DeleteAllRightAction","_AbstractDeleteAllToB2","_super20","sel","JoinLinesAction","_EditorAction13","_super21","reducedSelections","lastSelection","previousValue","equalsSelection","lineOffset","columnDeltaOffset","selectionEndPositionOffset","trimmedLinesContent","firstNonWhitespaceIdx","getLineFirstNonWhitespaceColumn","insertSpace","lineTextWithoutIndent","deleteSelection","resultSelection","TransposeAction","_EditorAction14","_super22","chars","ReplaceCommand","ReplaceCommandThatPreservesSelection","AbstractCaseAction","_EditorAction15","_super23","wordSeparators","getConfiguredWordAtPosition","_modifyText","UpperCaseAction","_AbstractCaseAction","_super24","toLocaleUpperCase","LowerCaseAction","_AbstractCaseAction2","_super25","toLocaleLowerCase","BackwardsCompatibleRegExp","_pattern","_flags","_actual","_evaluated","TitleCaseAction","_AbstractCaseAction3","_super26","titleBoundary","SnakeCaseAction","_AbstractCaseAction4","_super27","caseBoundary","singleLetters","CamelCaseAction","_AbstractCaseAction5","_super28","wordBoundary","words","shift","KebabCaseAction","_AbstractCaseAction6","_super29","_","underscoreBoundary","regexp","isSupported","CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE","LinkedEditingContribution","languageFeatureDebounceService","_syncRangesToken","_localToDispose","_providers","linkedEditingRangeProvider","_enabled","_visibleContextKey","_debounceInformation","_currentDecorations","createDecorationsCollection","_languageWordPattern","_currentWordPattern","_ignoreChangeEvent","_rangeUpdateTriggerPromise","_rangeSyncTriggerPromise","_currentRequest","_currentRequestPosition","_currentRequestModelVersion","reinitialize","forceRefresh","isEnabled","clearRanges","onDidChangeLanguageConfiguration","getWordDefinition","rangeUpdateScheduler","Delayer","triggerRangeUpdate","_debounceDuration","rangeSyncScheduler","referenceRange","getRange","_syncRanges","referenceValue","mirrorRange","oldValue","rangeStartColumn","rangeEndColumn","commonPrefixLength","commonSuffixLength","popUndoStop","prevEditOperationType","getPrevEditOperationType","setPrevEditOperationType","force","modelVersionId","request","equals","sw","response","foundReferenceRange","StopWatch","getLinkedEditingRanges","elapsed","wordPattern","splice","DECORATION","isCancellationError","ModelDecorationOptions","LinkedEditingAction","editorService","ICodeEditorService","_ref","_ref2","openCodeEditor","resource","getActiveCodeEditor","reportTelemetry","LinkedEditingCommand","EditorCommand","orderedByScore","first","provideLinkedEditingRanges","arrays","registerEditorCommand","editorLinkedEditingBackground","registerColor","dark","Color","transparent","light","hcDark","hcLight","registerModelAndPositionCommand","Link","link","_link","_provider","url","resolveLink","LinksList","tuples","links","newLinks","_union","isDisposable","oldLinks","oldIndex","oldLen","newIndex","newLen","oldLink","newLink","getLinks","provideLinks","coalesce","resolveCount","linkProvider","IModelService","LinkDetector","debounceInformation","computeLinks","computeLinksNow","computePromise","activeLinksList","currentOccurrences","activeLinkDecorationId","clickLinkGesture","keyboardEvent","_onEditorMouseMove","onEditorMouseUp","cleanUpActiveLinkDecoration","updateDecorations","oldDecorations","_i","_keys","occurence","newDecorations","LinkOccurrence","withKey","occurrence","getLinkOccurrence","activate","deactivate","openLinkOccurrence","fromUserGesture","modelUri","parsedUri","fsPath","resources","relativePath","open","allowContributedOpeners","allowCommands","fromWorkspace","messageOrError","warn","currentOccurrence","Boolean","keyCodeIsTriggerKey","general","changeDecorationOptions","_getOptions","hoverMessage","executeCmd","test","nativeLabel","appendLink","appendMarkdown","getHoverMessage","OpenLinkAction","linkDetector"],"sourceRoot":""}