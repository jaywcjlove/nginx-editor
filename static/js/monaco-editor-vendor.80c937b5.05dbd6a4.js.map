{"version":3,"file":"static/js/monaco-editor-vendor.80c937b5.05dbd6a4.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/platform/log/common/log.js","../node_modules/monaco-editor/esm/vs/platform/markers/common/markerService.js","../node_modules/monaco-editor/esm/vs/platform/markers/common/markers.js","../node_modules/monaco-editor/esm/vs/platform/notification/common/notification.js","../node_modules/monaco-editor/esm/vs/platform/opener/browser/link.js","../node_modules/monaco-editor/esm/vs/platform/opener/common/opener.js","../node_modules/monaco-editor/esm/vs/platform/progress/common/progress.js","../node_modules/monaco-editor/esm/vs/platform/quickinput/browser/pickerQuickAccess.js","../node_modules/monaco-editor/esm/vs/platform/quickinput/browser/commandsQuickAccess.js","../node_modules/monaco-editor/esm/vs/platform/quickinput/browser/helpQuickAccess.js","../node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickAccess.js","../node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInput.js","../node_modules/monaco-editor/esm/vs/platform/quickinput/common/quickAccess.js","../node_modules/monaco-editor/esm/vs/platform/quickinput/common/quickInput.js","../node_modules/monaco-editor/esm/vs/platform/registry/common/platform.js","../node_modules/monaco-editor/esm/vs/platform/severityIcon/common/severityIcon.js","../node_modules/monaco-editor/esm/vs/platform/storage/common/storage.js","../node_modules/monaco-editor/esm/vs/platform/telemetry/common/telemetry.js","../node_modules/monaco-editor/esm/vs/platform/theme/browser/iconsStyleSheet.js","../node_modules/monaco-editor/esm/vs/platform/theme/common/colorRegistry.js","../node_modules/monaco-editor/esm/vs/platform/theme/common/iconRegistry.js","../node_modules/monaco-editor/esm/vs/platform/theme/common/styler.js","../node_modules/monaco-editor/esm/vs/platform/theme/common/theme.js","../node_modules/monaco-editor/esm/vs/platform/theme/common/themeService.js","../node_modules/monaco-editor/esm/vs/platform/undoRedo/common/undoRedo.js","../node_modules/monaco-editor/esm/vs/platform/undoRedo/common/undoRedoService.js","../node_modules/monaco-editor/esm/vs/platform/workspace/common/workspace.js","../node_modules/monaco-editor/esm/vs/platform/workspace/common/workspaceTrust.js"],"sourcesContent":["import { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ILogService = createDecorator('logService');\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\n    LogLevel[LogLevel[\"Off\"] = 6] = \"Off\";\n})(LogLevel || (LogLevel = {}));\nexport const DEFAULT_LOG_LEVEL = LogLevel.Info;\nexport class AbstractLogger extends Disposable {\n    constructor() {\n        super(...arguments);\n        this.level = DEFAULT_LOG_LEVEL;\n        this._onDidChangeLogLevel = this._register(new Emitter());\n    }\n    setLevel(level) {\n        if (this.level !== level) {\n            this.level = level;\n            this._onDidChangeLogLevel.fire(this.level);\n        }\n    }\n    getLevel() {\n        return this.level;\n    }\n}\nexport class ConsoleLogger extends AbstractLogger {\n    constructor(logLevel = DEFAULT_LOG_LEVEL) {\n        super();\n        this.setLevel(logLevel);\n    }\n    trace(message, ...args) {\n        if (this.getLevel() <= LogLevel.Trace) {\n            console.log('%cTRACE', 'color: #888', message, ...args);\n        }\n    }\n    debug(message, ...args) {\n        if (this.getLevel() <= LogLevel.Debug) {\n            console.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n        }\n    }\n    info(message, ...args) {\n        if (this.getLevel() <= LogLevel.Info) {\n            console.log('%c INFO', 'color: #33f', message, ...args);\n        }\n    }\n    error(message, ...args) {\n        if (this.getLevel() <= LogLevel.Error) {\n            console.log('%c  ERR', 'color: #f33', message, ...args);\n        }\n    }\n    dispose() {\n        // noop\n    }\n}\nexport class LogService extends Disposable {\n    constructor(logger) {\n        super();\n        this.logger = logger;\n        this._register(logger);\n    }\n    getLevel() {\n        return this.logger.getLevel();\n    }\n    trace(message, ...args) {\n        this.logger.trace(message, ...args);\n    }\n    debug(message, ...args) {\n        this.logger.debug(message, ...args);\n    }\n    info(message, ...args) {\n        this.logger.info(message, ...args);\n    }\n    error(message, ...args) {\n        this.logger.error(message, ...args);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isFalsyOrEmpty, isNonEmptyArray } from '../../../base/common/arrays.js';\nimport { DebounceEmitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { MarkerSeverity } from './markers.js';\nclass DoubleResourceMap {\n    constructor() {\n        this._byResource = new ResourceMap();\n        this._byOwner = new Map();\n    }\n    set(resource, owner, value) {\n        let ownerMap = this._byResource.get(resource);\n        if (!ownerMap) {\n            ownerMap = new Map();\n            this._byResource.set(resource, ownerMap);\n        }\n        ownerMap.set(owner, value);\n        let resourceMap = this._byOwner.get(owner);\n        if (!resourceMap) {\n            resourceMap = new ResourceMap();\n            this._byOwner.set(owner, resourceMap);\n        }\n        resourceMap.set(resource, value);\n    }\n    get(resource, owner) {\n        const ownerMap = this._byResource.get(resource);\n        return ownerMap === null || ownerMap === void 0 ? void 0 : ownerMap.get(owner);\n    }\n    delete(resource, owner) {\n        let removedA = false;\n        let removedB = false;\n        const ownerMap = this._byResource.get(resource);\n        if (ownerMap) {\n            removedA = ownerMap.delete(owner);\n        }\n        const resourceMap = this._byOwner.get(owner);\n        if (resourceMap) {\n            removedB = resourceMap.delete(resource);\n        }\n        if (removedA !== removedB) {\n            throw new Error('illegal state');\n        }\n        return removedA && removedB;\n    }\n    values(key) {\n        var _a, _b, _c, _d;\n        if (typeof key === 'string') {\n            return (_b = (_a = this._byOwner.get(key)) === null || _a === void 0 ? void 0 : _a.values()) !== null && _b !== void 0 ? _b : Iterable.empty();\n        }\n        if (URI.isUri(key)) {\n            return (_d = (_c = this._byResource.get(key)) === null || _c === void 0 ? void 0 : _c.values()) !== null && _d !== void 0 ? _d : Iterable.empty();\n        }\n        return Iterable.map(Iterable.concat(...this._byOwner.values()), map => map[1]);\n    }\n}\nclass MarkerStats {\n    constructor(service) {\n        this.errors = 0;\n        this.infos = 0;\n        this.warnings = 0;\n        this.unknowns = 0;\n        this._data = new ResourceMap();\n        this._service = service;\n        this._subscription = service.onMarkerChanged(this._update, this);\n    }\n    dispose() {\n        this._subscription.dispose();\n    }\n    _update(resources) {\n        for (const resource of resources) {\n            const oldStats = this._data.get(resource);\n            if (oldStats) {\n                this._substract(oldStats);\n            }\n            const newStats = this._resourceStats(resource);\n            this._add(newStats);\n            this._data.set(resource, newStats);\n        }\n    }\n    _resourceStats(resource) {\n        const result = { errors: 0, warnings: 0, infos: 0, unknowns: 0 };\n        // TODO this is a hack\n        if (resource.scheme === Schemas.inMemory || resource.scheme === Schemas.walkThrough || resource.scheme === Schemas.walkThroughSnippet || resource.scheme === Schemas.vscodeSourceControl) {\n            return result;\n        }\n        for (const { severity } of this._service.read({ resource })) {\n            if (severity === MarkerSeverity.Error) {\n                result.errors += 1;\n            }\n            else if (severity === MarkerSeverity.Warning) {\n                result.warnings += 1;\n            }\n            else if (severity === MarkerSeverity.Info) {\n                result.infos += 1;\n            }\n            else {\n                result.unknowns += 1;\n            }\n        }\n        return result;\n    }\n    _substract(op) {\n        this.errors -= op.errors;\n        this.warnings -= op.warnings;\n        this.infos -= op.infos;\n        this.unknowns -= op.unknowns;\n    }\n    _add(op) {\n        this.errors += op.errors;\n        this.warnings += op.warnings;\n        this.infos += op.infos;\n        this.unknowns += op.unknowns;\n    }\n}\nexport class MarkerService {\n    constructor() {\n        this._onMarkerChanged = new DebounceEmitter({\n            delay: 0,\n            merge: MarkerService._merge\n        });\n        this.onMarkerChanged = this._onMarkerChanged.event;\n        this._data = new DoubleResourceMap();\n        this._stats = new MarkerStats(this);\n    }\n    dispose() {\n        this._stats.dispose();\n        this._onMarkerChanged.dispose();\n    }\n    remove(owner, resources) {\n        for (const resource of resources || []) {\n            this.changeOne(owner, resource, []);\n        }\n    }\n    changeOne(owner, resource, markerData) {\n        if (isFalsyOrEmpty(markerData)) {\n            // remove marker for this (owner,resource)-tuple\n            const removed = this._data.delete(resource, owner);\n            if (removed) {\n                this._onMarkerChanged.fire([resource]);\n            }\n        }\n        else {\n            // insert marker for this (owner,resource)-tuple\n            const markers = [];\n            for (const data of markerData) {\n                const marker = MarkerService._toMarker(owner, resource, data);\n                if (marker) {\n                    markers.push(marker);\n                }\n            }\n            this._data.set(resource, owner, markers);\n            this._onMarkerChanged.fire([resource]);\n        }\n    }\n    static _toMarker(owner, resource, data) {\n        let { code, severity, message, source, startLineNumber, startColumn, endLineNumber, endColumn, relatedInformation, tags, } = data;\n        if (!message) {\n            return undefined;\n        }\n        // santize data\n        startLineNumber = startLineNumber > 0 ? startLineNumber : 1;\n        startColumn = startColumn > 0 ? startColumn : 1;\n        endLineNumber = endLineNumber >= startLineNumber ? endLineNumber : startLineNumber;\n        endColumn = endColumn > 0 ? endColumn : startColumn;\n        return {\n            resource,\n            owner,\n            code,\n            severity,\n            message,\n            source,\n            startLineNumber,\n            startColumn,\n            endLineNumber,\n            endColumn,\n            relatedInformation,\n            tags,\n        };\n    }\n    changeAll(owner, data) {\n        const changes = [];\n        // remove old marker\n        const existing = this._data.values(owner);\n        if (existing) {\n            for (const data of existing) {\n                const first = Iterable.first(data);\n                if (first) {\n                    changes.push(first.resource);\n                    this._data.delete(first.resource, owner);\n                }\n            }\n        }\n        // add new markers\n        if (isNonEmptyArray(data)) {\n            // group by resource\n            const groups = new ResourceMap();\n            for (const { resource, marker: markerData } of data) {\n                const marker = MarkerService._toMarker(owner, resource, markerData);\n                if (!marker) {\n                    // filter bad markers\n                    continue;\n                }\n                const array = groups.get(resource);\n                if (!array) {\n                    groups.set(resource, [marker]);\n                    changes.push(resource);\n                }\n                else {\n                    array.push(marker);\n                }\n            }\n            // insert all\n            for (const [resource, value] of groups) {\n                this._data.set(resource, owner, value);\n            }\n        }\n        if (changes.length > 0) {\n            this._onMarkerChanged.fire(changes);\n        }\n    }\n    read(filter = Object.create(null)) {\n        let { owner, resource, severities, take } = filter;\n        if (!take || take < 0) {\n            take = -1;\n        }\n        if (owner && resource) {\n            // exactly one owner AND resource\n            const data = this._data.get(resource, owner);\n            if (!data) {\n                return [];\n            }\n            else {\n                const result = [];\n                for (const marker of data) {\n                    if (MarkerService._accept(marker, severities)) {\n                        const newLen = result.push(marker);\n                        if (take > 0 && newLen === take) {\n                            break;\n                        }\n                    }\n                }\n                return result;\n            }\n        }\n        else if (!owner && !resource) {\n            // all\n            const result = [];\n            for (const markers of this._data.values()) {\n                for (const data of markers) {\n                    if (MarkerService._accept(data, severities)) {\n                        const newLen = result.push(data);\n                        if (take > 0 && newLen === take) {\n                            return result;\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n        else {\n            // of one resource OR owner\n            const iterable = this._data.values(resource !== null && resource !== void 0 ? resource : owner);\n            const result = [];\n            for (const markers of iterable) {\n                for (const data of markers) {\n                    if (MarkerService._accept(data, severities)) {\n                        const newLen = result.push(data);\n                        if (take > 0 && newLen === take) {\n                            return result;\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n    }\n    static _accept(marker, severities) {\n        return severities === undefined || (severities & marker.severity) === marker.severity;\n    }\n    // --- event debounce logic\n    static _merge(all) {\n        const set = new ResourceMap();\n        for (const array of all) {\n            for (const item of array) {\n                set.set(item, true);\n            }\n        }\n        return Array.from(set.keys());\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport Severity from '../../../base/common/severity.js';\nimport { localize } from '../../../nls.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\n(function (MarkerSeverity) {\n    function compare(a, b) {\n        return b - a;\n    }\n    MarkerSeverity.compare = compare;\n    const _displayStrings = Object.create(null);\n    _displayStrings[MarkerSeverity.Error] = localize('sev.error', \"Error\");\n    _displayStrings[MarkerSeverity.Warning] = localize('sev.warning', \"Warning\");\n    _displayStrings[MarkerSeverity.Info] = localize('sev.info', \"Info\");\n    function toString(a) {\n        return _displayStrings[a] || '';\n    }\n    MarkerSeverity.toString = toString;\n    function fromSeverity(severity) {\n        switch (severity) {\n            case Severity.Error: return MarkerSeverity.Error;\n            case Severity.Warning: return MarkerSeverity.Warning;\n            case Severity.Info: return MarkerSeverity.Info;\n            case Severity.Ignore: return MarkerSeverity.Hint;\n        }\n    }\n    MarkerSeverity.fromSeverity = fromSeverity;\n    function toSeverity(severity) {\n        switch (severity) {\n            case MarkerSeverity.Error: return Severity.Error;\n            case MarkerSeverity.Warning: return Severity.Warning;\n            case MarkerSeverity.Info: return Severity.Info;\n            case MarkerSeverity.Hint: return Severity.Ignore;\n        }\n    }\n    MarkerSeverity.toSeverity = toSeverity;\n})(MarkerSeverity || (MarkerSeverity = {}));\nexport var IMarkerData;\n(function (IMarkerData) {\n    const emptyString = '';\n    function makeKey(markerData) {\n        return makeKeyOptionalMessage(markerData, true);\n    }\n    IMarkerData.makeKey = makeKey;\n    function makeKeyOptionalMessage(markerData, useMessage) {\n        const result = [emptyString];\n        if (markerData.source) {\n            result.push(markerData.source.replace('¦', '\\\\¦'));\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.code) {\n            if (typeof markerData.code === 'string') {\n                result.push(markerData.code.replace('¦', '\\\\¦'));\n            }\n            else {\n                result.push(markerData.code.value.replace('¦', '\\\\¦'));\n            }\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.severity !== undefined && markerData.severity !== null) {\n            result.push(MarkerSeverity.toString(markerData.severity));\n        }\n        else {\n            result.push(emptyString);\n        }\n        // Modifed to not include the message as part of the marker key to work around\n        // https://github.com/microsoft/vscode/issues/77475\n        if (markerData.message && useMessage) {\n            result.push(markerData.message.replace('¦', '\\\\¦'));\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.startLineNumber !== undefined && markerData.startLineNumber !== null) {\n            result.push(markerData.startLineNumber.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.startColumn !== undefined && markerData.startColumn !== null) {\n            result.push(markerData.startColumn.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.endLineNumber !== undefined && markerData.endLineNumber !== null) {\n            result.push(markerData.endLineNumber.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.endColumn !== undefined && markerData.endColumn !== null) {\n            result.push(markerData.endColumn.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        result.push(emptyString);\n        return result.join('¦');\n    }\n    IMarkerData.makeKeyOptionalMessage = makeKeyOptionalMessage;\n})(IMarkerData || (IMarkerData = {}));\nexport const IMarkerService = createDecorator('markerService');\n","import BaseSeverity from '../../../base/common/severity.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport var Severity = BaseSeverity;\nexport const INotificationService = createDecorator('notificationService');\nexport class NoOpNotification {\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { $, append, EventHelper } from '../../../base/browser/dom.js';\nimport { DomEmitter } from '../../../base/browser/event.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { EventType as TouchEventType, Gesture } from '../../../base/browser/touch.js';\nimport { Event } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { IOpenerService } from '../common/opener.js';\nimport { textLinkActiveForeground, textLinkForeground } from '../../theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../theme/common/themeService.js';\nlet Link = class Link extends Disposable {\n    constructor(container, _link, options = {}, openerService) {\n        var _a;\n        super();\n        this._link = _link;\n        this._enabled = true;\n        this.el = append(container, $('a.monaco-link', {\n            tabIndex: (_a = _link.tabIndex) !== null && _a !== void 0 ? _a : 0,\n            href: _link.href,\n            title: _link.title\n        }, _link.label));\n        this.el.setAttribute('role', 'button');\n        const onClickEmitter = this._register(new DomEmitter(this.el, 'click'));\n        const onKeyPress = this._register(new DomEmitter(this.el, 'keypress'));\n        const onEnterPress = Event.chain(onKeyPress.event)\n            .map(e => new StandardKeyboardEvent(e))\n            .filter(e => e.keyCode === 3 /* KeyCode.Enter */)\n            .event;\n        const onTap = this._register(new DomEmitter(this.el, TouchEventType.Tap)).event;\n        this._register(Gesture.addTarget(this.el));\n        const onOpen = Event.any(onClickEmitter.event, onEnterPress, onTap);\n        this._register(onOpen(e => {\n            if (!this.enabled) {\n                return;\n            }\n            EventHelper.stop(e, true);\n            if (options === null || options === void 0 ? void 0 : options.opener) {\n                options.opener(this._link.href);\n            }\n            else {\n                openerService.open(this._link.href, { allowCommands: true });\n            }\n        }));\n        this.enabled = true;\n    }\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(enabled) {\n        if (enabled) {\n            this.el.setAttribute('aria-disabled', 'false');\n            this.el.tabIndex = 0;\n            this.el.style.pointerEvents = 'auto';\n            this.el.style.opacity = '1';\n            this.el.style.cursor = 'pointer';\n            this._enabled = false;\n        }\n        else {\n            this.el.setAttribute('aria-disabled', 'true');\n            this.el.tabIndex = -1;\n            this.el.style.pointerEvents = 'none';\n            this.el.style.opacity = '0.4';\n            this.el.style.cursor = 'default';\n            this._enabled = true;\n        }\n        this._enabled = enabled;\n    }\n};\nLink = __decorate([\n    __param(3, IOpenerService)\n], Link);\nexport { Link };\nregisterThemingParticipant((theme, collector) => {\n    const textLinkForegroundColor = theme.getColor(textLinkForeground);\n    if (textLinkForegroundColor) {\n        collector.addRule(`.monaco-link { color: ${textLinkForegroundColor}; }`);\n    }\n    const textLinkActiveForegroundColor = theme.getColor(textLinkActiveForeground);\n    if (textLinkActiveForegroundColor) {\n        collector.addRule(`.monaco-link:hover { color: ${textLinkActiveForegroundColor}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { equalsIgnoreCase, startsWithIgnoreCase } from '../../../base/common/strings.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IOpenerService = createDecorator('openerService');\nexport const NullOpenerService = Object.freeze({\n    _serviceBrand: undefined,\n    registerOpener() { return Disposable.None; },\n    registerValidator() { return Disposable.None; },\n    registerExternalUriResolver() { return Disposable.None; },\n    setDefaultExternalOpener() { },\n    registerExternalOpener() { return Disposable.None; },\n    open() {\n        return __awaiter(this, void 0, void 0, function* () { return false; });\n    },\n    resolveExternalUri(uri) {\n        return __awaiter(this, void 0, void 0, function* () { return { resolved: uri, dispose() { } }; });\n    },\n});\nexport function matchesScheme(target, scheme) {\n    if (URI.isUri(target)) {\n        return equalsIgnoreCase(target.scheme, scheme);\n    }\n    else {\n        return startsWithIgnoreCase(target, scheme + ':');\n    }\n}\nexport function matchesSomeScheme(target, ...schemes) {\n    return schemes.some(scheme => matchesScheme(target, scheme));\n}\n/**\n * file:///some/file.js#73\n * file:///some/file.js#L73\n * file:///some/file.js#73,84\n * file:///some/file.js#L73,84\n * file:///some/file.js#73-83\n * file:///some/file.js#L73-L83\n * file:///some/file.js#73,84-83,52\n * file:///some/file.js#L73,84-L83,52\n */\nexport function extractSelection(uri) {\n    let selection = undefined;\n    const match = /^L?(\\d+)(?:,(\\d+))?(-L?(\\d+)(?:,(\\d+))?)?/.exec(uri.fragment);\n    if (match) {\n        selection = {\n            startLineNumber: parseInt(match[1]),\n            startColumn: match[2] ? parseInt(match[2]) : 1,\n            endLineNumber: match[4] ? parseInt(match[4]) : undefined,\n            endColumn: match[4] ? (match[5] ? parseInt(match[5]) : 1) : undefined\n        };\n        uri = uri.with({ fragment: '' });\n    }\n    return { selection, uri };\n}\n","import { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IProgressService = createDecorator('progressService');\nexport const emptyProgressRunner = Object.freeze({\n    total() { },\n    worked() { },\n    done() { }\n});\nexport class Progress {\n    constructor(callback) {\n        this.callback = callback;\n    }\n    report(item) {\n        this._value = item;\n        this.callback(this._value);\n    }\n}\nProgress.None = Object.freeze({ report() { } });\nexport const IEditorProgressService = createDecorator('editorProgressService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { timeout } from '../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Disposable, DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\nexport var TriggerAction;\n(function (TriggerAction) {\n    /**\n     * Do nothing after the button was clicked.\n     */\n    TriggerAction[TriggerAction[\"NO_ACTION\"] = 0] = \"NO_ACTION\";\n    /**\n     * Close the picker.\n     */\n    TriggerAction[TriggerAction[\"CLOSE_PICKER\"] = 1] = \"CLOSE_PICKER\";\n    /**\n     * Update the results of the picker.\n     */\n    TriggerAction[TriggerAction[\"REFRESH_PICKER\"] = 2] = \"REFRESH_PICKER\";\n    /**\n     * Remove the item from the picker.\n     */\n    TriggerAction[TriggerAction[\"REMOVE_ITEM\"] = 3] = \"REMOVE_ITEM\";\n})(TriggerAction || (TriggerAction = {}));\nfunction isPicksWithActive(obj) {\n    const candidate = obj;\n    return Array.isArray(candidate.items);\n}\nfunction isFastAndSlowPicks(obj) {\n    const candidate = obj;\n    return !!candidate.picks && candidate.additionalPicks instanceof Promise;\n}\nexport class PickerQuickAccessProvider extends Disposable {\n    constructor(prefix, options) {\n        super();\n        this.prefix = prefix;\n        this.options = options;\n    }\n    provide(picker, token) {\n        var _a;\n        const disposables = new DisposableStore();\n        // Apply options if any\n        picker.canAcceptInBackground = !!((_a = this.options) === null || _a === void 0 ? void 0 : _a.canAcceptInBackground);\n        // Disable filtering & sorting, we control the results\n        picker.matchOnLabel = picker.matchOnDescription = picker.matchOnDetail = picker.sortByLabel = false;\n        // Set initial picks and update on type\n        let picksCts = undefined;\n        const picksDisposable = disposables.add(new MutableDisposable());\n        const updatePickerItems = () => __awaiter(this, void 0, void 0, function* () {\n            const picksDisposables = picksDisposable.value = new DisposableStore();\n            // Cancel any previous ask for picks and busy\n            picksCts === null || picksCts === void 0 ? void 0 : picksCts.dispose(true);\n            picker.busy = false;\n            // Create new cancellation source for this run\n            picksCts = new CancellationTokenSource(token);\n            // Collect picks and support both long running and short or combined\n            const picksToken = picksCts.token;\n            const picksFilter = picker.value.substr(this.prefix.length).trim();\n            const providedPicks = this._getPicks(picksFilter, picksDisposables, picksToken);\n            const applyPicks = (picks, skipEmpty) => {\n                var _a;\n                let items;\n                let activeItem = undefined;\n                if (isPicksWithActive(picks)) {\n                    items = picks.items;\n                    activeItem = picks.active;\n                }\n                else {\n                    items = picks;\n                }\n                if (items.length === 0) {\n                    if (skipEmpty) {\n                        return false;\n                    }\n                    if (picksFilter.length > 0 && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.noResultsPick)) {\n                        items = [this.options.noResultsPick];\n                    }\n                }\n                picker.items = items;\n                if (activeItem) {\n                    picker.activeItems = [activeItem];\n                }\n                return true;\n            };\n            // No Picks\n            if (providedPicks === null) {\n                // Ignore\n            }\n            // Fast and Slow Picks\n            else if (isFastAndSlowPicks(providedPicks)) {\n                let fastPicksApplied = false;\n                let slowPicksApplied = false;\n                yield Promise.all([\n                    // Fast Picks: to reduce amount of flicker, we race against\n                    // the slow picks over 500ms and then set the fast picks.\n                    // If the slow picks are faster, we reduce the flicker by\n                    // only setting the items once.\n                    (() => __awaiter(this, void 0, void 0, function* () {\n                        yield timeout(PickerQuickAccessProvider.FAST_PICKS_RACE_DELAY);\n                        if (picksToken.isCancellationRequested) {\n                            return;\n                        }\n                        if (!slowPicksApplied) {\n                            fastPicksApplied = applyPicks(providedPicks.picks, true /* skip over empty to reduce flicker */);\n                        }\n                    }))(),\n                    // Slow Picks: we await the slow picks and then set them at\n                    // once together with the fast picks, but only if we actually\n                    // have additional results.\n                    (() => __awaiter(this, void 0, void 0, function* () {\n                        picker.busy = true;\n                        try {\n                            const awaitedAdditionalPicks = yield providedPicks.additionalPicks;\n                            if (picksToken.isCancellationRequested) {\n                                return;\n                            }\n                            let picks;\n                            let activePick = undefined;\n                            if (isPicksWithActive(providedPicks.picks)) {\n                                picks = providedPicks.picks.items;\n                                activePick = providedPicks.picks.active;\n                            }\n                            else {\n                                picks = providedPicks.picks;\n                            }\n                            let additionalPicks;\n                            let additionalActivePick = undefined;\n                            if (isPicksWithActive(awaitedAdditionalPicks)) {\n                                additionalPicks = awaitedAdditionalPicks.items;\n                                additionalActivePick = awaitedAdditionalPicks.active;\n                            }\n                            else {\n                                additionalPicks = awaitedAdditionalPicks;\n                            }\n                            if (additionalPicks.length > 0 || !fastPicksApplied) {\n                                // If we do not have any activePick or additionalActivePick\n                                // we try to preserve the currently active pick from the\n                                // fast results. This fixes an issue where the user might\n                                // have made a pick active before the additional results\n                                // kick in.\n                                // See https://github.com/microsoft/vscode/issues/102480\n                                let fallbackActivePick = undefined;\n                                if (!activePick && !additionalActivePick) {\n                                    const fallbackActivePickCandidate = picker.activeItems[0];\n                                    if (fallbackActivePickCandidate && picks.indexOf(fallbackActivePickCandidate) !== -1) {\n                                        fallbackActivePick = fallbackActivePickCandidate;\n                                    }\n                                }\n                                applyPicks({\n                                    items: [...picks, ...additionalPicks],\n                                    active: activePick || additionalActivePick || fallbackActivePick\n                                });\n                            }\n                        }\n                        finally {\n                            if (!picksToken.isCancellationRequested) {\n                                picker.busy = false;\n                            }\n                            slowPicksApplied = true;\n                        }\n                    }))()\n                ]);\n            }\n            // Fast Picks\n            else if (!(providedPicks instanceof Promise)) {\n                applyPicks(providedPicks);\n            }\n            // Slow Picks\n            else {\n                picker.busy = true;\n                try {\n                    const awaitedPicks = yield providedPicks;\n                    if (picksToken.isCancellationRequested) {\n                        return;\n                    }\n                    applyPicks(awaitedPicks);\n                }\n                finally {\n                    if (!picksToken.isCancellationRequested) {\n                        picker.busy = false;\n                    }\n                }\n            }\n        });\n        disposables.add(picker.onDidChangeValue(() => updatePickerItems()));\n        updatePickerItems();\n        // Accept the pick on accept and hide picker\n        disposables.add(picker.onDidAccept(event => {\n            const [item] = picker.selectedItems;\n            if (typeof (item === null || item === void 0 ? void 0 : item.accept) === 'function') {\n                if (!event.inBackground) {\n                    picker.hide(); // hide picker unless we accept in background\n                }\n                item.accept(picker.keyMods, event);\n            }\n        }));\n        // Trigger the pick with button index if button triggered\n        disposables.add(picker.onDidTriggerItemButton(({ button, item }) => __awaiter(this, void 0, void 0, function* () {\n            var _b, _c;\n            if (typeof item.trigger === 'function') {\n                const buttonIndex = (_c = (_b = item.buttons) === null || _b === void 0 ? void 0 : _b.indexOf(button)) !== null && _c !== void 0 ? _c : -1;\n                if (buttonIndex >= 0) {\n                    const result = item.trigger(buttonIndex, picker.keyMods);\n                    const action = (typeof result === 'number') ? result : yield result;\n                    if (token.isCancellationRequested) {\n                        return;\n                    }\n                    switch (action) {\n                        case TriggerAction.NO_ACTION:\n                            break;\n                        case TriggerAction.CLOSE_PICKER:\n                            picker.hide();\n                            break;\n                        case TriggerAction.REFRESH_PICKER:\n                            updatePickerItems();\n                            break;\n                        case TriggerAction.REMOVE_ITEM: {\n                            const index = picker.items.indexOf(item);\n                            if (index !== -1) {\n                                const items = picker.items.slice();\n                                const removed = items.splice(index, 1);\n                                const activeItems = picker.activeItems.filter(activeItem => activeItem !== removed[0]);\n                                const keepScrollPositionBefore = picker.keepScrollPosition;\n                                picker.keepScrollPosition = true;\n                                picker.items = items;\n                                if (activeItems) {\n                                    picker.activeItems = activeItems;\n                                }\n                                picker.keepScrollPosition = keepScrollPositionBefore;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        })));\n        return disposables;\n    }\n}\nPickerQuickAccessProvider.FAST_PICKS_RACE_DELAY = 200; // timeout before we accept fast results before slow results are present\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { toErrorMessage } from '../../../base/common/errorMessage.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { matchesContiguousSubString, matchesPrefix, matchesWords, or } from '../../../base/common/filters.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../base/common/map.js';\nimport Severity from '../../../base/common/severity.js';\nimport { withNullAsUndefined } from '../../../base/common/types.js';\nimport { localize } from '../../../nls.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IDialogService } from '../../dialogs/common/dialogs.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { PickerQuickAccessProvider } from './pickerQuickAccess.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\nlet AbstractCommandsQuickAccessProvider = class AbstractCommandsQuickAccessProvider extends PickerQuickAccessProvider {\n    constructor(options, instantiationService, keybindingService, commandService, telemetryService, dialogService) {\n        super(AbstractCommandsQuickAccessProvider.PREFIX, options);\n        this.instantiationService = instantiationService;\n        this.keybindingService = keybindingService;\n        this.commandService = commandService;\n        this.telemetryService = telemetryService;\n        this.dialogService = dialogService;\n        this.commandsHistory = this._register(this.instantiationService.createInstance(CommandsHistory));\n        this.options = options;\n    }\n    _getPicks(filter, disposables, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Ask subclass for all command picks\n            const allCommandPicks = yield this.getCommandPicks(disposables, token);\n            if (token.isCancellationRequested) {\n                return [];\n            }\n            // Filter\n            const filteredCommandPicks = [];\n            for (const commandPick of allCommandPicks) {\n                const labelHighlights = withNullAsUndefined(AbstractCommandsQuickAccessProvider.WORD_FILTER(filter, commandPick.label));\n                const aliasHighlights = commandPick.commandAlias ? withNullAsUndefined(AbstractCommandsQuickAccessProvider.WORD_FILTER(filter, commandPick.commandAlias)) : undefined;\n                // Add if matching in label or alias\n                if (labelHighlights || aliasHighlights) {\n                    commandPick.highlights = {\n                        label: labelHighlights,\n                        detail: this.options.showAlias ? aliasHighlights : undefined\n                    };\n                    filteredCommandPicks.push(commandPick);\n                }\n                // Also add if we have a 100% command ID match\n                else if (filter === commandPick.commandId) {\n                    filteredCommandPicks.push(commandPick);\n                }\n            }\n            // Add description to commands that have duplicate labels\n            const mapLabelToCommand = new Map();\n            for (const commandPick of filteredCommandPicks) {\n                const existingCommandForLabel = mapLabelToCommand.get(commandPick.label);\n                if (existingCommandForLabel) {\n                    commandPick.description = commandPick.commandId;\n                    existingCommandForLabel.description = existingCommandForLabel.commandId;\n                }\n                else {\n                    mapLabelToCommand.set(commandPick.label, commandPick);\n                }\n            }\n            // Sort by MRU order and fallback to name otherwise\n            filteredCommandPicks.sort((commandPickA, commandPickB) => {\n                const commandACounter = this.commandsHistory.peek(commandPickA.commandId);\n                const commandBCounter = this.commandsHistory.peek(commandPickB.commandId);\n                if (commandACounter && commandBCounter) {\n                    return commandACounter > commandBCounter ? -1 : 1; // use more recently used command before older\n                }\n                if (commandACounter) {\n                    return -1; // first command was used, so it wins over the non used one\n                }\n                if (commandBCounter) {\n                    return 1; // other command was used so it wins over the command\n                }\n                // both commands were never used, so we sort by name\n                return commandPickA.label.localeCompare(commandPickB.label);\n            });\n            const commandPicks = [];\n            let addSeparator = false;\n            for (let i = 0; i < filteredCommandPicks.length; i++) {\n                const commandPick = filteredCommandPicks[i];\n                const keybinding = this.keybindingService.lookupKeybinding(commandPick.commandId);\n                const ariaLabel = keybinding ?\n                    localize('commandPickAriaLabelWithKeybinding', \"{0}, {1}\", commandPick.label, keybinding.getAriaLabel()) :\n                    commandPick.label;\n                // Separator: recently used\n                if (i === 0 && this.commandsHistory.peek(commandPick.commandId)) {\n                    commandPicks.push({ type: 'separator', label: localize('recentlyUsed', \"recently used\") });\n                    addSeparator = true;\n                }\n                // Separator: other commands\n                if (i !== 0 && addSeparator && !this.commandsHistory.peek(commandPick.commandId)) {\n                    commandPicks.push({ type: 'separator', label: localize('morecCommands', \"other commands\") });\n                    addSeparator = false; // only once\n                }\n                // Command\n                commandPicks.push(Object.assign(Object.assign({}, commandPick), { ariaLabel, detail: this.options.showAlias && commandPick.commandAlias !== commandPick.label ? commandPick.commandAlias : undefined, keybinding, accept: () => __awaiter(this, void 0, void 0, function* () {\n                        // Add to history\n                        this.commandsHistory.push(commandPick.commandId);\n                        // Telementry\n                        this.telemetryService.publicLog2('workbenchActionExecuted', {\n                            id: commandPick.commandId,\n                            from: 'quick open'\n                        });\n                        // Run\n                        try {\n                            yield this.commandService.executeCommand(commandPick.commandId);\n                        }\n                        catch (error) {\n                            if (!isCancellationError(error)) {\n                                this.dialogService.show(Severity.Error, localize('canNotRun', \"Command '{0}' resulted in an error ({1})\", commandPick.label, toErrorMessage(error)));\n                            }\n                        }\n                    }) }));\n            }\n            return commandPicks;\n        });\n    }\n};\nAbstractCommandsQuickAccessProvider.PREFIX = '>';\nAbstractCommandsQuickAccessProvider.WORD_FILTER = or(matchesPrefix, matchesWords, matchesContiguousSubString);\nAbstractCommandsQuickAccessProvider = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IKeybindingService),\n    __param(3, ICommandService),\n    __param(4, ITelemetryService),\n    __param(5, IDialogService)\n], AbstractCommandsQuickAccessProvider);\nexport { AbstractCommandsQuickAccessProvider };\nlet CommandsHistory = class CommandsHistory extends Disposable {\n    constructor(storageService, configurationService) {\n        super();\n        this.storageService = storageService;\n        this.configurationService = configurationService;\n        this.configuredCommandsHistoryLength = 0;\n        this.updateConfiguration();\n        this.load();\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.configurationService.onDidChangeConfiguration(() => this.updateConfiguration()));\n    }\n    updateConfiguration() {\n        this.configuredCommandsHistoryLength = CommandsHistory.getConfiguredCommandHistoryLength(this.configurationService);\n        if (CommandsHistory.cache && CommandsHistory.cache.limit !== this.configuredCommandsHistoryLength) {\n            CommandsHistory.cache.limit = this.configuredCommandsHistoryLength;\n            CommandsHistory.saveState(this.storageService);\n        }\n    }\n    load() {\n        const raw = this.storageService.get(CommandsHistory.PREF_KEY_CACHE, 0 /* StorageScope.PROFILE */);\n        let serializedCache;\n        if (raw) {\n            try {\n                serializedCache = JSON.parse(raw);\n            }\n            catch (error) {\n                // invalid data\n            }\n        }\n        const cache = CommandsHistory.cache = new LRUCache(this.configuredCommandsHistoryLength, 1);\n        if (serializedCache) {\n            let entries;\n            if (serializedCache.usesLRU) {\n                entries = serializedCache.entries;\n            }\n            else {\n                entries = serializedCache.entries.sort((a, b) => a.value - b.value);\n            }\n            entries.forEach(entry => cache.set(entry.key, entry.value));\n        }\n        CommandsHistory.counter = this.storageService.getNumber(CommandsHistory.PREF_KEY_COUNTER, 0 /* StorageScope.PROFILE */, CommandsHistory.counter);\n    }\n    push(commandId) {\n        if (!CommandsHistory.cache) {\n            return;\n        }\n        CommandsHistory.cache.set(commandId, CommandsHistory.counter++); // set counter to command\n        CommandsHistory.saveState(this.storageService);\n    }\n    peek(commandId) {\n        var _a;\n        return (_a = CommandsHistory.cache) === null || _a === void 0 ? void 0 : _a.peek(commandId);\n    }\n    static saveState(storageService) {\n        if (!CommandsHistory.cache) {\n            return;\n        }\n        const serializedCache = { usesLRU: true, entries: [] };\n        CommandsHistory.cache.forEach((value, key) => serializedCache.entries.push({ key, value }));\n        storageService.store(CommandsHistory.PREF_KEY_CACHE, JSON.stringify(serializedCache), 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n        storageService.store(CommandsHistory.PREF_KEY_COUNTER, CommandsHistory.counter, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n    }\n    static getConfiguredCommandHistoryLength(configurationService) {\n        var _a, _b;\n        const config = configurationService.getValue();\n        const configuredCommandHistoryLength = (_b = (_a = config.workbench) === null || _a === void 0 ? void 0 : _a.commandPalette) === null || _b === void 0 ? void 0 : _b.history;\n        if (typeof configuredCommandHistoryLength === 'number') {\n            return configuredCommandHistoryLength;\n        }\n        return CommandsHistory.DEFAULT_COMMANDS_HISTORY_LENGTH;\n    }\n};\nCommandsHistory.DEFAULT_COMMANDS_HISTORY_LENGTH = 50;\nCommandsHistory.PREF_KEY_CACHE = 'commandPalette.mru.cache';\nCommandsHistory.PREF_KEY_COUNTER = 'commandPalette.mru.counter';\nCommandsHistory.counter = 1;\nCommandsHistory = __decorate([\n    __param(0, IStorageService),\n    __param(1, IConfigurationService)\n], CommandsHistory);\nexport { CommandsHistory };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { localize } from '../../../nls.js';\nimport { Registry } from '../../registry/common/platform.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { Extensions } from '../common/quickAccess.js';\nimport { IQuickInputService } from '../common/quickInput.js';\nlet HelpQuickAccessProvider = class HelpQuickAccessProvider {\n    constructor(quickInputService, keybindingService) {\n        this.quickInputService = quickInputService;\n        this.keybindingService = keybindingService;\n        this.registry = Registry.as(Extensions.Quickaccess);\n    }\n    provide(picker) {\n        const disposables = new DisposableStore();\n        // Open a picker with the selected value if picked\n        disposables.add(picker.onDidAccept(() => {\n            const [item] = picker.selectedItems;\n            if (item) {\n                this.quickInputService.quickAccess.show(item.prefix, { preserveValue: true });\n            }\n        }));\n        // Also open a picker when we detect the user typed the exact\n        // name of a provider (e.g. `?term` for terminals)\n        disposables.add(picker.onDidChangeValue(value => {\n            const providerDescriptor = this.registry.getQuickAccessProvider(value.substr(HelpQuickAccessProvider.PREFIX.length));\n            if (providerDescriptor && providerDescriptor.prefix && providerDescriptor.prefix !== HelpQuickAccessProvider.PREFIX) {\n                this.quickInputService.quickAccess.show(providerDescriptor.prefix, { preserveValue: true });\n            }\n        }));\n        // Fill in all providers\n        picker.items = this.getQuickAccessProviders();\n        return disposables;\n    }\n    getQuickAccessProviders() {\n        const providers = [];\n        for (const provider of this.registry.getQuickAccessProviders().sort((providerA, providerB) => providerA.prefix.localeCompare(providerB.prefix))) {\n            if (provider.prefix === HelpQuickAccessProvider.PREFIX) {\n                continue; // exclude help which is already active\n            }\n            for (const helpEntry of provider.helpEntries) {\n                const prefix = helpEntry.prefix || provider.prefix;\n                const label = prefix || '\\u2026' /* ... */;\n                providers.push({\n                    prefix,\n                    label,\n                    keybinding: helpEntry.commandId ? this.keybindingService.lookupKeybinding(helpEntry.commandId) : undefined,\n                    ariaLabel: localize('helpPickAriaLabel', \"{0}, {1}\", label, helpEntry.description),\n                    description: helpEntry.description\n                });\n            }\n        }\n        return providers;\n    }\n};\nHelpQuickAccessProvider.PREFIX = '?';\nHelpQuickAccessProvider = __decorate([\n    __param(0, IQuickInputService),\n    __param(1, IKeybindingService)\n], HelpQuickAccessProvider);\nexport { HelpQuickAccessProvider };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { DeferredPromise } from '../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { once } from '../../../base/common/functional.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { DefaultQuickAccessFilterValue, Extensions } from '../common/quickAccess.js';\nimport { IQuickInputService, ItemActivation } from '../common/quickInput.js';\nimport { Registry } from '../../registry/common/platform.js';\nlet QuickAccessController = class QuickAccessController extends Disposable {\n    constructor(quickInputService, instantiationService) {\n        super();\n        this.quickInputService = quickInputService;\n        this.instantiationService = instantiationService;\n        this.registry = Registry.as(Extensions.Quickaccess);\n        this.mapProviderToDescriptor = new Map();\n        this.lastAcceptedPickerValues = new Map();\n        this.visibleQuickAccess = undefined;\n    }\n    show(value = '', options) {\n        this.doShowOrPick(value, false, options);\n    }\n    doShowOrPick(value, pick, options) {\n        var _a;\n        // Find provider for the value to show\n        const [provider, descriptor] = this.getOrInstantiateProvider(value);\n        // Return early if quick access is already showing on that same prefix\n        const visibleQuickAccess = this.visibleQuickAccess;\n        const visibleDescriptor = visibleQuickAccess === null || visibleQuickAccess === void 0 ? void 0 : visibleQuickAccess.descriptor;\n        if (visibleQuickAccess && descriptor && visibleDescriptor === descriptor) {\n            // Apply value only if it is more specific than the prefix\n            // from the provider and we are not instructed to preserve\n            if (value !== descriptor.prefix && !(options === null || options === void 0 ? void 0 : options.preserveValue)) {\n                visibleQuickAccess.picker.value = value;\n            }\n            // Always adjust selection\n            this.adjustValueSelection(visibleQuickAccess.picker, descriptor, options);\n            return;\n        }\n        // Rewrite the filter value based on certain rules unless disabled\n        if (descriptor && !(options === null || options === void 0 ? void 0 : options.preserveValue)) {\n            let newValue = undefined;\n            // If we have a visible provider with a value, take it's filter value but\n            // rewrite to new provider prefix in case they differ\n            if (visibleQuickAccess && visibleDescriptor && visibleDescriptor !== descriptor) {\n                const newValueCandidateWithoutPrefix = visibleQuickAccess.value.substr(visibleDescriptor.prefix.length);\n                if (newValueCandidateWithoutPrefix) {\n                    newValue = `${descriptor.prefix}${newValueCandidateWithoutPrefix}`;\n                }\n            }\n            // Otherwise, take a default value as instructed\n            if (!newValue) {\n                const defaultFilterValue = provider === null || provider === void 0 ? void 0 : provider.defaultFilterValue;\n                if (defaultFilterValue === DefaultQuickAccessFilterValue.LAST) {\n                    newValue = this.lastAcceptedPickerValues.get(descriptor);\n                }\n                else if (typeof defaultFilterValue === 'string') {\n                    newValue = `${descriptor.prefix}${defaultFilterValue}`;\n                }\n            }\n            if (typeof newValue === 'string') {\n                value = newValue;\n            }\n        }\n        // Create a picker for the provider to use with the initial value\n        // and adjust the filtering to exclude the prefix from filtering\n        const disposables = new DisposableStore();\n        const picker = disposables.add(this.quickInputService.createQuickPick());\n        picker.value = value;\n        this.adjustValueSelection(picker, descriptor, options);\n        picker.placeholder = descriptor === null || descriptor === void 0 ? void 0 : descriptor.placeholder;\n        picker.quickNavigate = options === null || options === void 0 ? void 0 : options.quickNavigateConfiguration;\n        picker.hideInput = !!picker.quickNavigate && !visibleQuickAccess; // only hide input if there was no picker opened already\n        if (typeof (options === null || options === void 0 ? void 0 : options.itemActivation) === 'number' || (options === null || options === void 0 ? void 0 : options.quickNavigateConfiguration)) {\n            picker.itemActivation = (_a = options === null || options === void 0 ? void 0 : options.itemActivation) !== null && _a !== void 0 ? _a : ItemActivation.SECOND /* quick nav is always second */;\n        }\n        picker.contextKey = descriptor === null || descriptor === void 0 ? void 0 : descriptor.contextKey;\n        picker.filterValue = (value) => value.substring(descriptor ? descriptor.prefix.length : 0);\n        if (descriptor === null || descriptor === void 0 ? void 0 : descriptor.placeholder) {\n            picker.ariaLabel = descriptor === null || descriptor === void 0 ? void 0 : descriptor.placeholder;\n        }\n        // Pick mode: setup a promise that can be resolved\n        // with the selected items and prevent execution\n        let pickPromise = undefined;\n        if (pick) {\n            pickPromise = new DeferredPromise();\n            disposables.add(once(picker.onWillAccept)(e => {\n                e.veto();\n                picker.hide();\n            }));\n        }\n        // Register listeners\n        disposables.add(this.registerPickerListeners(picker, provider, descriptor, value));\n        // Ask provider to fill the picker as needed if we have one\n        // and pass over a cancellation token that will indicate when\n        // the picker is hiding without a pick being made.\n        const cts = disposables.add(new CancellationTokenSource());\n        if (provider) {\n            disposables.add(provider.provide(picker, cts.token));\n        }\n        // Finally, trigger disposal and cancellation when the picker\n        // hides depending on items selected or not.\n        once(picker.onDidHide)(() => {\n            if (picker.selectedItems.length === 0) {\n                cts.cancel();\n            }\n            // Start to dispose once picker hides\n            disposables.dispose();\n            // Resolve pick promise with selected items\n            pickPromise === null || pickPromise === void 0 ? void 0 : pickPromise.complete(picker.selectedItems.slice(0));\n        });\n        // Finally, show the picker. This is important because a provider\n        // may not call this and then our disposables would leak that rely\n        // on the onDidHide event.\n        picker.show();\n        // Pick mode: return with promise\n        if (pick) {\n            return pickPromise === null || pickPromise === void 0 ? void 0 : pickPromise.p;\n        }\n    }\n    adjustValueSelection(picker, descriptor, options) {\n        var _a;\n        let valueSelection;\n        // Preserve: just always put the cursor at the end\n        if (options === null || options === void 0 ? void 0 : options.preserveValue) {\n            valueSelection = [picker.value.length, picker.value.length];\n        }\n        // Otherwise: select the value up until the prefix\n        else {\n            valueSelection = [(_a = descriptor === null || descriptor === void 0 ? void 0 : descriptor.prefix.length) !== null && _a !== void 0 ? _a : 0, picker.value.length];\n        }\n        picker.valueSelection = valueSelection;\n    }\n    registerPickerListeners(picker, provider, descriptor, value) {\n        const disposables = new DisposableStore();\n        // Remember as last visible picker and clean up once picker get's disposed\n        const visibleQuickAccess = this.visibleQuickAccess = { picker, descriptor, value };\n        disposables.add(toDisposable(() => {\n            if (visibleQuickAccess === this.visibleQuickAccess) {\n                this.visibleQuickAccess = undefined;\n            }\n        }));\n        // Whenever the value changes, check if the provider has\n        // changed and if so - re-create the picker from the beginning\n        disposables.add(picker.onDidChangeValue(value => {\n            const [providerForValue] = this.getOrInstantiateProvider(value);\n            if (providerForValue !== provider) {\n                this.show(value, { preserveValue: true } /* do not rewrite value from user typing! */);\n            }\n            else {\n                visibleQuickAccess.value = value; // remember the value in our visible one\n            }\n        }));\n        // Remember picker input for future use when accepting\n        if (descriptor) {\n            disposables.add(picker.onDidAccept(() => {\n                this.lastAcceptedPickerValues.set(descriptor, picker.value);\n            }));\n        }\n        return disposables;\n    }\n    getOrInstantiateProvider(value) {\n        const providerDescriptor = this.registry.getQuickAccessProvider(value);\n        if (!providerDescriptor) {\n            return [undefined, undefined];\n        }\n        let provider = this.mapProviderToDescriptor.get(providerDescriptor);\n        if (!provider) {\n            provider = this.instantiationService.createInstance(providerDescriptor.ctor);\n            this.mapProviderToDescriptor.set(providerDescriptor, provider);\n        }\n        return [provider, providerDescriptor];\n    }\n};\nQuickAccessController = __decorate([\n    __param(0, IQuickInputService),\n    __param(1, IInstantiationService)\n], QuickAccessController);\nexport { QuickAccessController };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { QuickInputController } from '../../../base/parts/quickinput/browser/quickInput.js';\nimport { IAccessibilityService } from '../../accessibility/common/accessibility.js';\nimport { IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { WorkbenchList } from '../../list/browser/listService.js';\nimport { QuickAccessController } from './quickAccess.js';\nimport { activeContrastBorder, badgeBackground, badgeForeground, buttonBackground, buttonForeground, buttonHoverBackground, contrastBorder, inputBackground, inputBorder, inputForeground, inputValidationErrorBackground, inputValidationErrorBorder, inputValidationErrorForeground, inputValidationInfoBackground, inputValidationInfoBorder, inputValidationInfoForeground, inputValidationWarningBackground, inputValidationWarningBorder, inputValidationWarningForeground, keybindingLabelBackground, keybindingLabelBorder, keybindingLabelBottomBorder, keybindingLabelForeground, pickerGroupBorder, pickerGroupForeground, progressBarBackground, quickInputBackground, quickInputForeground, quickInputListFocusBackground, quickInputListFocusForeground, quickInputListFocusIconForeground, quickInputTitleBackground, widgetShadow } from '../../theme/common/colorRegistry.js';\nimport { computeStyles } from '../../theme/common/styler.js';\nimport { IThemeService, Themable } from '../../theme/common/themeService.js';\nlet QuickInputService = class QuickInputService extends Themable {\n    constructor(instantiationService, contextKeyService, themeService, accessibilityService, layoutService) {\n        super(themeService);\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.accessibilityService = accessibilityService;\n        this.layoutService = layoutService;\n        this.contexts = new Map();\n    }\n    get controller() {\n        if (!this._controller) {\n            this._controller = this._register(this.createController());\n        }\n        return this._controller;\n    }\n    get quickAccess() {\n        if (!this._quickAccess) {\n            this._quickAccess = this._register(this.instantiationService.createInstance(QuickAccessController));\n        }\n        return this._quickAccess;\n    }\n    createController(host = this.layoutService, options) {\n        const defaultOptions = {\n            idPrefix: 'quickInput_',\n            container: host.container,\n            ignoreFocusOut: () => false,\n            isScreenReaderOptimized: () => this.accessibilityService.isScreenReaderOptimized(),\n            backKeybindingLabel: () => undefined,\n            setContextKey: (id) => this.setContextKey(id),\n            returnFocus: () => host.focus(),\n            createList: (user, container, delegate, renderers, options) => this.instantiationService.createInstance(WorkbenchList, user, container, delegate, renderers, options),\n            styles: this.computeStyles()\n        };\n        const controller = this._register(new QuickInputController(Object.assign(Object.assign({}, defaultOptions), options)));\n        controller.layout(host.dimension, host.offset.quickPickTop);\n        // Layout changes\n        this._register(host.onDidLayout(dimension => controller.layout(dimension, host.offset.quickPickTop)));\n        // Context keys\n        this._register(controller.onShow(() => this.resetContextKeys()));\n        this._register(controller.onHide(() => this.resetContextKeys()));\n        return controller;\n    }\n    setContextKey(id) {\n        let key;\n        if (id) {\n            key = this.contexts.get(id);\n            if (!key) {\n                key = new RawContextKey(id, false)\n                    .bindTo(this.contextKeyService);\n                this.contexts.set(id, key);\n            }\n        }\n        if (key && key.get()) {\n            return; // already active context\n        }\n        this.resetContextKeys();\n        key === null || key === void 0 ? void 0 : key.set(true);\n    }\n    resetContextKeys() {\n        this.contexts.forEach(context => {\n            if (context.get()) {\n                context.reset();\n            }\n        });\n    }\n    pick(picks, options = {}, token = CancellationToken.None) {\n        return this.controller.pick(picks, options, token);\n    }\n    createQuickPick() {\n        return this.controller.createQuickPick();\n    }\n    updateStyles() {\n        this.controller.applyStyles(this.computeStyles());\n    }\n    computeStyles() {\n        return {\n            widget: Object.assign({}, computeStyles(this.theme, {\n                quickInputBackground,\n                quickInputForeground,\n                quickInputTitleBackground,\n                contrastBorder,\n                widgetShadow\n            })),\n            inputBox: computeStyles(this.theme, {\n                inputForeground,\n                inputBackground,\n                inputBorder,\n                inputValidationInfoBackground,\n                inputValidationInfoForeground,\n                inputValidationInfoBorder,\n                inputValidationWarningBackground,\n                inputValidationWarningForeground,\n                inputValidationWarningBorder,\n                inputValidationErrorBackground,\n                inputValidationErrorForeground,\n                inputValidationErrorBorder\n            }),\n            countBadge: computeStyles(this.theme, {\n                badgeBackground,\n                badgeForeground,\n                badgeBorder: contrastBorder\n            }),\n            button: computeStyles(this.theme, {\n                buttonForeground,\n                buttonBackground,\n                buttonHoverBackground,\n                buttonBorder: contrastBorder\n            }),\n            progressBar: computeStyles(this.theme, {\n                progressBarBackground\n            }),\n            keybindingLabel: computeStyles(this.theme, {\n                keybindingLabelBackground,\n                keybindingLabelForeground,\n                keybindingLabelBorder,\n                keybindingLabelBottomBorder,\n                keybindingLabelShadow: widgetShadow\n            }),\n            list: computeStyles(this.theme, {\n                listBackground: quickInputBackground,\n                // Look like focused when inactive.\n                listInactiveFocusForeground: quickInputListFocusForeground,\n                listInactiveSelectionIconForeground: quickInputListFocusIconForeground,\n                listInactiveFocusBackground: quickInputListFocusBackground,\n                listFocusOutline: activeContrastBorder,\n                listInactiveFocusOutline: activeContrastBorder,\n                pickerGroupBorder,\n                pickerGroupForeground\n            })\n        };\n    }\n};\nQuickInputService = __decorate([\n    __param(0, IInstantiationService),\n    __param(1, IContextKeyService),\n    __param(2, IThemeService),\n    __param(3, IAccessibilityService),\n    __param(4, ILayoutService)\n], QuickInputService);\nexport { QuickInputService };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { coalesce } from '../../../base/common/arrays.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport var DefaultQuickAccessFilterValue;\n(function (DefaultQuickAccessFilterValue) {\n    /**\n     * Keep the value as it is given to quick access.\n     */\n    DefaultQuickAccessFilterValue[DefaultQuickAccessFilterValue[\"PRESERVE\"] = 0] = \"PRESERVE\";\n    /**\n     * Use the value that was used last time something was accepted from the picker.\n     */\n    DefaultQuickAccessFilterValue[DefaultQuickAccessFilterValue[\"LAST\"] = 1] = \"LAST\";\n})(DefaultQuickAccessFilterValue || (DefaultQuickAccessFilterValue = {}));\nexport const Extensions = {\n    Quickaccess: 'workbench.contributions.quickaccess'\n};\nexport class QuickAccessRegistry {\n    constructor() {\n        this.providers = [];\n        this.defaultProvider = undefined;\n    }\n    registerQuickAccessProvider(provider) {\n        // Extract the default provider when no prefix is present\n        if (provider.prefix.length === 0) {\n            this.defaultProvider = provider;\n        }\n        else {\n            this.providers.push(provider);\n        }\n        // sort the providers by decreasing prefix length, such that longer\n        // prefixes take priority: 'ext' vs 'ext install' - the latter should win\n        this.providers.sort((providerA, providerB) => providerB.prefix.length - providerA.prefix.length);\n        return toDisposable(() => {\n            this.providers.splice(this.providers.indexOf(provider), 1);\n            if (this.defaultProvider === provider) {\n                this.defaultProvider = undefined;\n            }\n        });\n    }\n    getQuickAccessProviders() {\n        return coalesce([this.defaultProvider, ...this.providers]);\n    }\n    getQuickAccessProvider(prefix) {\n        const result = prefix ? (this.providers.find(provider => prefix.startsWith(provider.prefix)) || undefined) : undefined;\n        return result || this.defaultProvider;\n    }\n}\nRegistry.add(Extensions.Quickaccess, new QuickAccessRegistry());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport * from '../../../base/parts/quickinput/common/quickInput.js';\nexport const IQuickInputService = createDecorator('quickInputService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Assert from '../../../base/common/assert.js';\nimport * as Types from '../../../base/common/types.js';\nclass RegistryImpl {\n    constructor() {\n        this.data = new Map();\n    }\n    add(id, data) {\n        Assert.ok(Types.isString(id));\n        Assert.ok(Types.isObject(data));\n        Assert.ok(!this.data.has(id), 'There is already an extension with this id');\n        this.data.set(id, data);\n    }\n    as(id) {\n        return this.data.get(id) || null;\n    }\n}\nexport const Registry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Codicon } from '../../../base/common/codicons.js';\nimport Severity from '../../../base/common/severity.js';\nimport { problemsErrorIconForeground, problemsInfoIconForeground, problemsWarningIconForeground } from '../../theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../theme/common/themeService.js';\nexport var SeverityIcon;\n(function (SeverityIcon) {\n    function className(severity) {\n        switch (severity) {\n            case Severity.Ignore:\n                return 'severity-ignore ' + Codicon.info.classNames;\n            case Severity.Info:\n                return Codicon.info.classNames;\n            case Severity.Warning:\n                return Codicon.warning.classNames;\n            case Severity.Error:\n                return Codicon.error.classNames;\n            default:\n                return '';\n        }\n    }\n    SeverityIcon.className = className;\n})(SeverityIcon || (SeverityIcon = {}));\nregisterThemingParticipant((theme, collector) => {\n    const errorIconForeground = theme.getColor(problemsErrorIconForeground);\n    if (errorIconForeground) {\n        const errorCodiconSelector = Codicon.error.cssSelector;\n        collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${errorCodiconSelector},\n\t\t\t.markers-panel .marker-icon${errorCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${errorCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${errorCodiconSelector} {\n\t\t\t\tcolor: ${errorIconForeground};\n\t\t\t}\n\t\t`);\n    }\n    const warningIconForeground = theme.getColor(problemsWarningIconForeground);\n    if (warningIconForeground) {\n        const warningCodiconSelector = Codicon.warning.cssSelector;\n        collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${warningCodiconSelector},\n\t\t\t.markers-panel .marker-icon${warningCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${warningCodiconSelector},\n\t\t\t.extension-editor ${warningCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${warningCodiconSelector},\n\t\t\t.preferences-editor ${warningCodiconSelector} {\n\t\t\t\tcolor: ${warningIconForeground};\n\t\t\t}\n\t\t`);\n    }\n    const infoIconForeground = theme.getColor(problemsInfoIconForeground);\n    if (infoIconForeground) {\n        const infoCodiconSelector = Codicon.info.cssSelector;\n        collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${infoCodiconSelector},\n\t\t\t.markers-panel .marker-icon${infoCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${infoCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${infoCodiconSelector},\n\t\t\t.extension-editor ${infoCodiconSelector} {\n\t\t\t\tcolor: ${infoIconForeground};\n\t\t\t}\n\t\t`);\n    }\n});\n","import { Emitter, PauseableEmitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { isUndefinedOrNull } from '../../../base/common/types.js';\nimport { InMemoryStorageDatabase, Storage } from '../../../base/parts/storage/common/storage.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nconst TARGET_KEY = '__$__targetStorageMarker';\nexport const IStorageService = createDecorator('storageService');\nexport var WillSaveStateReason;\n(function (WillSaveStateReason) {\n    /**\n     * No specific reason to save state.\n     */\n    WillSaveStateReason[WillSaveStateReason[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * A hint that the workbench is about to shutdown.\n     */\n    WillSaveStateReason[WillSaveStateReason[\"SHUTDOWN\"] = 1] = \"SHUTDOWN\";\n})(WillSaveStateReason || (WillSaveStateReason = {}));\nexport class AbstractStorageService extends Disposable {\n    constructor(options = { flushInterval: AbstractStorageService.DEFAULT_FLUSH_INTERVAL }) {\n        super();\n        this.options = options;\n        this._onDidChangeValue = this._register(new PauseableEmitter());\n        this.onDidChangeValue = this._onDidChangeValue.event;\n        this._onDidChangeTarget = this._register(new PauseableEmitter());\n        this._onWillSaveState = this._register(new Emitter());\n        this.onWillSaveState = this._onWillSaveState.event;\n        this._workspaceKeyTargets = undefined;\n        this._profileKeyTargets = undefined;\n        this._applicationKeyTargets = undefined;\n    }\n    emitDidChangeValue(scope, key) {\n        // Specially handle `TARGET_KEY`\n        if (key === TARGET_KEY) {\n            // Clear our cached version which is now out of date\n            switch (scope) {\n                case -1 /* StorageScope.APPLICATION */:\n                    this._applicationKeyTargets = undefined;\n                    break;\n                case 0 /* StorageScope.PROFILE */:\n                    this._profileKeyTargets = undefined;\n                    break;\n                case 1 /* StorageScope.WORKSPACE */:\n                    this._workspaceKeyTargets = undefined;\n                    break;\n            }\n            // Emit as `didChangeTarget` event\n            this._onDidChangeTarget.fire({ scope });\n        }\n        // Emit any other key to outside\n        else {\n            this._onDidChangeValue.fire({ scope, key, target: this.getKeyTargets(scope)[key] });\n        }\n    }\n    get(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.get(key, fallbackValue);\n    }\n    getBoolean(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.getBoolean(key, fallbackValue);\n    }\n    getNumber(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.getNumber(key, fallbackValue);\n    }\n    store(key, value, scope, target) {\n        // We remove the key for undefined/null values\n        if (isUndefinedOrNull(value)) {\n            this.remove(key, scope);\n            return;\n        }\n        // Update our datastructures but send events only after\n        this.withPausedEmitters(() => {\n            var _a;\n            // Update key-target map\n            this.updateKeyTarget(key, scope, target);\n            // Store actual value\n            (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.set(key, value);\n        });\n    }\n    remove(key, scope) {\n        // Update our datastructures but send events only after\n        this.withPausedEmitters(() => {\n            var _a;\n            // Update key-target map\n            this.updateKeyTarget(key, scope, undefined);\n            // Remove actual key\n            (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.delete(key);\n        });\n    }\n    withPausedEmitters(fn) {\n        // Pause emitters\n        this._onDidChangeValue.pause();\n        this._onDidChangeTarget.pause();\n        try {\n            fn();\n        }\n        finally {\n            // Resume emitters\n            this._onDidChangeValue.resume();\n            this._onDidChangeTarget.resume();\n        }\n    }\n    updateKeyTarget(key, scope, target) {\n        var _a, _b;\n        // Add\n        const keyTargets = this.getKeyTargets(scope);\n        if (typeof target === 'number') {\n            if (keyTargets[key] !== target) {\n                keyTargets[key] = target;\n                (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.set(TARGET_KEY, JSON.stringify(keyTargets));\n            }\n        }\n        // Remove\n        else {\n            if (typeof keyTargets[key] === 'number') {\n                delete keyTargets[key];\n                (_b = this.getStorage(scope)) === null || _b === void 0 ? void 0 : _b.set(TARGET_KEY, JSON.stringify(keyTargets));\n            }\n        }\n    }\n    get workspaceKeyTargets() {\n        if (!this._workspaceKeyTargets) {\n            this._workspaceKeyTargets = this.loadKeyTargets(1 /* StorageScope.WORKSPACE */);\n        }\n        return this._workspaceKeyTargets;\n    }\n    get profileKeyTargets() {\n        if (!this._profileKeyTargets) {\n            this._profileKeyTargets = this.loadKeyTargets(0 /* StorageScope.PROFILE */);\n        }\n        return this._profileKeyTargets;\n    }\n    get applicationKeyTargets() {\n        if (!this._applicationKeyTargets) {\n            this._applicationKeyTargets = this.loadKeyTargets(-1 /* StorageScope.APPLICATION */);\n        }\n        return this._applicationKeyTargets;\n    }\n    getKeyTargets(scope) {\n        switch (scope) {\n            case -1 /* StorageScope.APPLICATION */:\n                return this.applicationKeyTargets;\n            case 0 /* StorageScope.PROFILE */:\n                return this.profileKeyTargets;\n            default:\n                return this.workspaceKeyTargets;\n        }\n    }\n    loadKeyTargets(scope) {\n        const keysRaw = this.get(TARGET_KEY, scope);\n        if (keysRaw) {\n            try {\n                return JSON.parse(keysRaw);\n            }\n            catch (error) {\n                // Fail gracefully\n            }\n        }\n        return Object.create(null);\n    }\n}\nAbstractStorageService.DEFAULT_FLUSH_INTERVAL = 60 * 1000; // every minute\nexport class InMemoryStorageService extends AbstractStorageService {\n    constructor() {\n        super();\n        this.applicationStorage = this._register(new Storage(new InMemoryStorageDatabase()));\n        this.profileStorage = this._register(new Storage(new InMemoryStorageDatabase()));\n        this.workspaceStorage = this._register(new Storage(new InMemoryStorageDatabase()));\n        this._register(this.workspaceStorage.onDidChangeStorage(key => this.emitDidChangeValue(1 /* StorageScope.WORKSPACE */, key)));\n        this._register(this.profileStorage.onDidChangeStorage(key => this.emitDidChangeValue(0 /* StorageScope.PROFILE */, key)));\n        this._register(this.applicationStorage.onDidChangeStorage(key => this.emitDidChangeValue(-1 /* StorageScope.APPLICATION */, key)));\n    }\n    getStorage(scope) {\n        switch (scope) {\n            case -1 /* StorageScope.APPLICATION */:\n                return this.applicationStorage;\n            case 0 /* StorageScope.PROFILE */:\n                return this.profileStorage;\n            default:\n                return this.workspaceStorage;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ITelemetryService = createDecorator('telemetryService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { asCSSPropertyValue, asCSSUrl } from '../../../base/browser/dom.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { getIconRegistry } from '../common/iconRegistry.js';\nimport { ThemeIcon } from '../common/themeService.js';\nexport function getIconsStyleSheet(themeService) {\n    const onDidChangeEmmiter = new Emitter();\n    const iconRegistry = getIconRegistry();\n    iconRegistry.onDidChange(() => onDidChangeEmmiter.fire());\n    themeService === null || themeService === void 0 ? void 0 : themeService.onDidProductIconThemeChange(() => onDidChangeEmmiter.fire());\n    return {\n        onDidChange: onDidChangeEmmiter.event,\n        getCSS() {\n            const productIconTheme = themeService ? themeService.getProductIconTheme() : new UnthemedProductIconTheme();\n            const usedFontIds = {};\n            const formatIconRule = (contribution) => {\n                const definition = productIconTheme.getIcon(contribution);\n                if (!definition) {\n                    return undefined;\n                }\n                const fontContribution = definition.font;\n                if (fontContribution) {\n                    usedFontIds[fontContribution.id] = fontContribution.definition;\n                    return `.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; font-family: ${asCSSPropertyValue(fontContribution.id)}; }`;\n                }\n                // default font (codicon)\n                return `.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; }`;\n            };\n            const rules = [];\n            for (const contribution of iconRegistry.getIcons()) {\n                const rule = formatIconRule(contribution);\n                if (rule) {\n                    rules.push(rule);\n                }\n            }\n            for (const id in usedFontIds) {\n                const definition = usedFontIds[id];\n                const fontWeight = definition.weight ? `font-weight: ${definition.weight};` : '';\n                const fontStyle = definition.style ? `font-style: ${definition.style};` : '';\n                const src = definition.src.map(l => `${asCSSUrl(l.location)} format('${l.format}')`).join(', ');\n                rules.push(`@font-face { src: ${src}; font-family: ${asCSSPropertyValue(id)};${fontWeight}${fontStyle} font-display: block; }`);\n            }\n            return rules.join('\\n');\n        }\n    };\n}\nexport class UnthemedProductIconTheme {\n    getIcon(contribution) {\n        const iconRegistry = getIconRegistry();\n        let definition = contribution.defaults;\n        while (ThemeIcon.isThemeIcon(definition)) {\n            const c = iconRegistry.getIcon(definition.id);\n            if (!c) {\n                return undefined;\n            }\n            definition = c.defaults;\n        }\n        return definition;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Color, RGBA } from '../../../base/common/color.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { assertNever } from '../../../base/common/types.js';\nimport * as nls from '../../../nls.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport * as platform from '../../registry/common/platform.js';\n/**\n * Returns the css variable name for the given color identifier. Dots (`.`) are replaced with hyphens (`-`) and\n * everything is prefixed with `--vscode-`.\n *\n * @sample `editorSuggestWidget.background` is `--vscode-editorSuggestWidget-background`.\n */\nexport function asCssVariableName(colorIdent) {\n    return `--vscode-${colorIdent.replace(/\\./g, '-')}`;\n}\n// color registry\nexport const Extensions = {\n    ColorContribution: 'base.contributions.colors'\n};\nclass ColorRegistry {\n    constructor() {\n        this._onDidChangeSchema = new Emitter();\n        this.onDidChangeSchema = this._onDidChangeSchema.event;\n        this.colorSchema = { type: 'object', properties: {} };\n        this.colorReferenceSchema = { type: 'string', enum: [], enumDescriptions: [] };\n        this.colorsById = {};\n    }\n    registerColor(id, defaults, description, needsTransparency = false, deprecationMessage) {\n        const colorContribution = { id, description, defaults, needsTransparency, deprecationMessage };\n        this.colorsById[id] = colorContribution;\n        const propertySchema = { type: 'string', description, format: 'color-hex', defaultSnippets: [{ body: '${1:#ff0000}' }] };\n        if (deprecationMessage) {\n            propertySchema.deprecationMessage = deprecationMessage;\n        }\n        this.colorSchema.properties[id] = propertySchema;\n        this.colorReferenceSchema.enum.push(id);\n        this.colorReferenceSchema.enumDescriptions.push(description);\n        this._onDidChangeSchema.fire();\n        return id;\n    }\n    getColors() {\n        return Object.keys(this.colorsById).map(id => this.colorsById[id]);\n    }\n    resolveDefaultColor(id, theme) {\n        const colorDesc = this.colorsById[id];\n        if (colorDesc && colorDesc.defaults) {\n            const colorValue = colorDesc.defaults[theme.type];\n            return resolveColorValue(colorValue, theme);\n        }\n        return undefined;\n    }\n    getColorSchema() {\n        return this.colorSchema;\n    }\n    toString() {\n        const sorter = (a, b) => {\n            const cat1 = a.indexOf('.') === -1 ? 0 : 1;\n            const cat2 = b.indexOf('.') === -1 ? 0 : 1;\n            if (cat1 !== cat2) {\n                return cat1 - cat2;\n            }\n            return a.localeCompare(b);\n        };\n        return Object.keys(this.colorsById).sort(sorter).map(k => `- \\`${k}\\`: ${this.colorsById[k].description}`).join('\\n');\n    }\n}\nconst colorRegistry = new ColorRegistry();\nplatform.Registry.add(Extensions.ColorContribution, colorRegistry);\nfunction migrateColorDefaults(o) {\n    if (o === null) {\n        return o;\n    }\n    if (typeof o.hcLight === 'undefined') {\n        if (o.hcDark === null || typeof o.hcDark === 'string') {\n            o.hcLight = o.hcDark;\n        }\n        else {\n            o.hcLight = o.light;\n        }\n    }\n    return o;\n}\nexport function registerColor(id, defaults, description, needsTransparency, deprecationMessage) {\n    return colorRegistry.registerColor(id, migrateColorDefaults(defaults), description, needsTransparency, deprecationMessage);\n}\n// ----- base colors\nexport const foreground = registerColor('foreground', { dark: '#CCCCCC', light: '#616161', hcDark: '#FFFFFF', hcLight: '#292929' }, nls.localize('foreground', \"Overall foreground color. This color is only used if not overridden by a component.\"));\nexport const disabledForeground = registerColor('disabledForeground', { dark: '#CCCCCC80', light: '#61616180', hcDark: '#A5A5A5', hcLight: '#7F7F7F' }, nls.localize('disabledForeground', \"Overall foreground for disabled elements. This color is only used if not overridden by a component.\"));\nexport const errorForeground = registerColor('errorForeground', { dark: '#F48771', light: '#A1260D', hcDark: '#F48771', hcLight: '#B5200D' }, nls.localize('errorForeground', \"Overall foreground color for error messages. This color is only used if not overridden by a component.\"));\nexport const descriptionForeground = registerColor('descriptionForeground', { light: '#717171', dark: transparent(foreground, 0.7), hcDark: transparent(foreground, 0.7), hcLight: transparent(foreground, 0.7) }, nls.localize('descriptionForeground', \"Foreground color for description text providing additional information, for example for a label.\"));\nexport const iconForeground = registerColor('icon.foreground', { dark: '#C5C5C5', light: '#424242', hcDark: '#FFFFFF', hcLight: '#292929' }, nls.localize('iconForeground', \"The default color for icons in the workbench.\"));\nexport const focusBorder = registerColor('focusBorder', { dark: '#007FD4', light: '#0090F1', hcDark: '#F38518', hcLight: '#0F4A85' }, nls.localize('focusBorder', \"Overall border color for focused elements. This color is only used if not overridden by a component.\"));\nexport const contrastBorder = registerColor('contrastBorder', { light: null, dark: null, hcDark: '#6FC3DF', hcLight: '#0F4A85' }, nls.localize('contrastBorder', \"An extra border around elements to separate them from others for greater contrast.\"));\nexport const activeContrastBorder = registerColor('contrastActiveBorder', { light: null, dark: null, hcDark: focusBorder, hcLight: focusBorder }, nls.localize('activeContrastBorder', \"An extra border around active elements to separate them from others for greater contrast.\"));\nexport const selectionBackground = registerColor('selection.background', { light: null, dark: null, hcDark: null, hcLight: null }, nls.localize('selectionBackground', \"The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.\"));\n// ------ text colors\nexport const textSeparatorForeground = registerColor('textSeparator.foreground', { light: '#0000002e', dark: '#ffffff2e', hcDark: Color.black, hcLight: '#292929' }, nls.localize('textSeparatorForeground', \"Color for text separators.\"));\nexport const textLinkForeground = registerColor('textLink.foreground', { light: '#006AB1', dark: '#3794FF', hcDark: '#3794FF', hcLight: '#0F4A85' }, nls.localize('textLinkForeground', \"Foreground color for links in text.\"));\nexport const textLinkActiveForeground = registerColor('textLink.activeForeground', { light: '#006AB1', dark: '#3794FF', hcDark: '#3794FF', hcLight: '#0F4A85' }, nls.localize('textLinkActiveForeground', \"Foreground color for links in text when clicked on and on mouse hover.\"));\nexport const textPreformatForeground = registerColor('textPreformat.foreground', { light: '#A31515', dark: '#D7BA7D', hcDark: '#D7BA7D', hcLight: '#292929' }, nls.localize('textPreformatForeground', \"Foreground color for preformatted text segments.\"));\nexport const textBlockQuoteBackground = registerColor('textBlockQuote.background', { light: '#7f7f7f1a', dark: '#7f7f7f1a', hcDark: null, hcLight: '#F2F2F2' }, nls.localize('textBlockQuoteBackground', \"Background color for block quotes in text.\"));\nexport const textBlockQuoteBorder = registerColor('textBlockQuote.border', { light: '#007acc80', dark: '#007acc80', hcDark: Color.white, hcLight: '#292929' }, nls.localize('textBlockQuoteBorder', \"Border color for block quotes in text.\"));\nexport const textCodeBlockBackground = registerColor('textCodeBlock.background', { light: '#dcdcdc66', dark: '#0a0a0a66', hcDark: Color.black, hcLight: '#F2F2F2' }, nls.localize('textCodeBlockBackground', \"Background color for code blocks in text.\"));\n// ----- widgets\nexport const widgetShadow = registerColor('widget.shadow', { dark: transparent(Color.black, .36), light: transparent(Color.black, .16), hcDark: null, hcLight: null }, nls.localize('widgetShadow', 'Shadow color of widgets such as find/replace inside the editor.'));\nexport const inputBackground = registerColor('input.background', { dark: '#3C3C3C', light: Color.white, hcDark: Color.black, hcLight: Color.white }, nls.localize('inputBoxBackground', \"Input box background.\"));\nexport const inputForeground = registerColor('input.foreground', { dark: foreground, light: foreground, hcDark: foreground, hcLight: foreground }, nls.localize('inputBoxForeground', \"Input box foreground.\"));\nexport const inputBorder = registerColor('input.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputBoxBorder', \"Input box border.\"));\nexport const inputActiveOptionBorder = registerColor('inputOption.activeBorder', { dark: '#007ACC00', light: '#007ACC00', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputBoxActiveOptionBorder', \"Border color of activated options in input fields.\"));\nexport const inputActiveOptionHoverBackground = registerColor('inputOption.hoverBackground', { dark: '#5a5d5e80', light: '#b8b8b850', hcDark: null, hcLight: null }, nls.localize('inputOption.hoverBackground', \"Background color of activated options in input fields.\"));\nexport const inputActiveOptionBackground = registerColor('inputOption.activeBackground', { dark: transparent(focusBorder, 0.4), light: transparent(focusBorder, 0.2), hcDark: Color.transparent, hcLight: Color.transparent }, nls.localize('inputOption.activeBackground', \"Background hover color of options in input fields.\"));\nexport const inputActiveOptionForeground = registerColor('inputOption.activeForeground', { dark: Color.white, light: Color.black, hcDark: null, hcLight: foreground }, nls.localize('inputOption.activeForeground', \"Foreground color of activated options in input fields.\"));\nexport const inputPlaceholderForeground = registerColor('input.placeholderForeground', { light: transparent(foreground, 0.5), dark: transparent(foreground, 0.5), hcDark: transparent(foreground, 0.7), hcLight: transparent(foreground, 0.7) }, nls.localize('inputPlaceholderForeground', \"Input box foreground color for placeholder text.\"));\nexport const inputValidationInfoBackground = registerColor('inputValidation.infoBackground', { dark: '#063B49', light: '#D6ECF2', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationInfoBackground', \"Input validation background color for information severity.\"));\nexport const inputValidationInfoForeground = registerColor('inputValidation.infoForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationInfoForeground', \"Input validation foreground color for information severity.\"));\nexport const inputValidationInfoBorder = registerColor('inputValidation.infoBorder', { dark: '#007acc', light: '#007acc', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationInfoBorder', \"Input validation border color for information severity.\"));\nexport const inputValidationWarningBackground = registerColor('inputValidation.warningBackground', { dark: '#352A05', light: '#F6F5D2', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationWarningBackground', \"Input validation background color for warning severity.\"));\nexport const inputValidationWarningForeground = registerColor('inputValidation.warningForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationWarningForeground', \"Input validation foreground color for warning severity.\"));\nexport const inputValidationWarningBorder = registerColor('inputValidation.warningBorder', { dark: '#B89500', light: '#B89500', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationWarningBorder', \"Input validation border color for warning severity.\"));\nexport const inputValidationErrorBackground = registerColor('inputValidation.errorBackground', { dark: '#5A1D1D', light: '#F2DEDE', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationErrorBackground', \"Input validation background color for error severity.\"));\nexport const inputValidationErrorForeground = registerColor('inputValidation.errorForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationErrorForeground', \"Input validation foreground color for error severity.\"));\nexport const inputValidationErrorBorder = registerColor('inputValidation.errorBorder', { dark: '#BE1100', light: '#BE1100', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationErrorBorder', \"Input validation border color for error severity.\"));\nexport const selectBackground = registerColor('dropdown.background', { dark: '#3C3C3C', light: Color.white, hcDark: Color.black, hcLight: Color.white }, nls.localize('dropdownBackground', \"Dropdown background.\"));\nexport const selectListBackground = registerColor('dropdown.listBackground', { dark: null, light: null, hcDark: Color.black, hcLight: Color.white }, nls.localize('dropdownListBackground', \"Dropdown list background.\"));\nexport const selectForeground = registerColor('dropdown.foreground', { dark: '#F0F0F0', light: null, hcDark: Color.white, hcLight: foreground }, nls.localize('dropdownForeground', \"Dropdown foreground.\"));\nexport const selectBorder = registerColor('dropdown.border', { dark: selectBackground, light: '#CECECE', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('dropdownBorder', \"Dropdown border.\"));\nexport const checkboxBackground = registerColor('checkbox.background', { dark: selectBackground, light: selectBackground, hcDark: selectBackground, hcLight: selectBackground }, nls.localize('checkbox.background', \"Background color of checkbox widget.\"));\nexport const checkboxForeground = registerColor('checkbox.foreground', { dark: selectForeground, light: selectForeground, hcDark: selectForeground, hcLight: selectForeground }, nls.localize('checkbox.foreground', \"Foreground color of checkbox widget.\"));\nexport const checkboxBorder = registerColor('checkbox.border', { dark: selectBorder, light: selectBorder, hcDark: selectBorder, hcLight: selectBorder }, nls.localize('checkbox.border', \"Border color of checkbox widget.\"));\nexport const buttonForeground = registerColor('button.foreground', { dark: Color.white, light: Color.white, hcDark: Color.white, hcLight: Color.white }, nls.localize('buttonForeground', \"Button foreground color.\"));\nexport const buttonSeparator = registerColor('button.separator', { dark: transparent(buttonForeground, .4), light: transparent(buttonForeground, .4), hcDark: transparent(buttonForeground, .4), hcLight: transparent(buttonForeground, .4) }, nls.localize('buttonSeparator', \"Button separator color.\"));\nexport const buttonBackground = registerColor('button.background', { dark: '#0E639C', light: '#007ACC', hcDark: null, hcLight: '#0F4A85' }, nls.localize('buttonBackground', \"Button background color.\"));\nexport const buttonHoverBackground = registerColor('button.hoverBackground', { dark: lighten(buttonBackground, 0.2), light: darken(buttonBackground, 0.2), hcDark: null, hcLight: null }, nls.localize('buttonHoverBackground', \"Button background color when hovering.\"));\nexport const buttonBorder = registerColor('button.border', { dark: contrastBorder, light: contrastBorder, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('buttonBorder', \"Button border color.\"));\nexport const buttonSecondaryForeground = registerColor('button.secondaryForeground', { dark: Color.white, light: Color.white, hcDark: Color.white, hcLight: foreground }, nls.localize('buttonSecondaryForeground', \"Secondary button foreground color.\"));\nexport const buttonSecondaryBackground = registerColor('button.secondaryBackground', { dark: '#3A3D41', light: '#5F6A79', hcDark: null, hcLight: Color.white }, nls.localize('buttonSecondaryBackground', \"Secondary button background color.\"));\nexport const buttonSecondaryHoverBackground = registerColor('button.secondaryHoverBackground', { dark: lighten(buttonSecondaryBackground, 0.2), light: darken(buttonSecondaryBackground, 0.2), hcDark: null, hcLight: null }, nls.localize('buttonSecondaryHoverBackground', \"Secondary button background color when hovering.\"));\nexport const badgeBackground = registerColor('badge.background', { dark: '#4D4D4D', light: '#C4C4C4', hcDark: Color.black, hcLight: '#0F4A85' }, nls.localize('badgeBackground', \"Badge background color. Badges are small information labels, e.g. for search results count.\"));\nexport const badgeForeground = registerColor('badge.foreground', { dark: Color.white, light: '#333', hcDark: Color.white, hcLight: Color.white }, nls.localize('badgeForeground', \"Badge foreground color. Badges are small information labels, e.g. for search results count.\"));\nexport const scrollbarShadow = registerColor('scrollbar.shadow', { dark: '#000000', light: '#DDDDDD', hcDark: null, hcLight: null }, nls.localize('scrollbarShadow', \"Scrollbar shadow to indicate that the view is scrolled.\"));\nexport const scrollbarSliderBackground = registerColor('scrollbarSlider.background', { dark: Color.fromHex('#797979').transparent(0.4), light: Color.fromHex('#646464').transparent(0.4), hcDark: transparent(contrastBorder, 0.6), hcLight: transparent(contrastBorder, 0.4) }, nls.localize('scrollbarSliderBackground', \"Scrollbar slider background color.\"));\nexport const scrollbarSliderHoverBackground = registerColor('scrollbarSlider.hoverBackground', { dark: Color.fromHex('#646464').transparent(0.7), light: Color.fromHex('#646464').transparent(0.7), hcDark: transparent(contrastBorder, 0.8), hcLight: transparent(contrastBorder, 0.8) }, nls.localize('scrollbarSliderHoverBackground', \"Scrollbar slider background color when hovering.\"));\nexport const scrollbarSliderActiveBackground = registerColor('scrollbarSlider.activeBackground', { dark: Color.fromHex('#BFBFBF').transparent(0.4), light: Color.fromHex('#000000').transparent(0.6), hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('scrollbarSliderActiveBackground', \"Scrollbar slider background color when clicked on.\"));\nexport const progressBarBackground = registerColor('progressBar.background', { dark: Color.fromHex('#0E70C0'), light: Color.fromHex('#0E70C0'), hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('progressBarBackground', \"Background color of the progress bar that can show for long running operations.\"));\nexport const editorErrorBackground = registerColor('editorError.background', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('editorError.background', 'Background color of error text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorErrorForeground = registerColor('editorError.foreground', { dark: '#F14C4C', light: '#E51400', hcDark: '#F48771', hcLight: '#B5200D' }, nls.localize('editorError.foreground', 'Foreground color of error squigglies in the editor.'));\nexport const editorErrorBorder = registerColor('editorError.border', { dark: null, light: null, hcDark: Color.fromHex('#E47777').transparent(0.8), hcLight: '#B5200D' }, nls.localize('errorBorder', 'Border color of error boxes in the editor.'));\nexport const editorWarningBackground = registerColor('editorWarning.background', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('editorWarning.background', 'Background color of warning text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorWarningForeground = registerColor('editorWarning.foreground', { dark: '#CCA700', light: '#BF8803', hcDark: '#FFD37', hcLight: '#895503' }, nls.localize('editorWarning.foreground', 'Foreground color of warning squigglies in the editor.'));\nexport const editorWarningBorder = registerColor('editorWarning.border', { dark: null, light: null, hcDark: Color.fromHex('#FFCC00').transparent(0.8), hcLight: '#' }, nls.localize('warningBorder', 'Border color of warning boxes in the editor.'));\nexport const editorInfoBackground = registerColor('editorInfo.background', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('editorInfo.background', 'Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorInfoForeground = registerColor('editorInfo.foreground', { dark: '#3794FF', light: '#1a85ff', hcDark: '#3794FF', hcLight: '#1a85ff' }, nls.localize('editorInfo.foreground', 'Foreground color of info squigglies in the editor.'));\nexport const editorInfoBorder = registerColor('editorInfo.border', { dark: null, light: null, hcDark: Color.fromHex('#3794FF').transparent(0.8), hcLight: '#292929' }, nls.localize('infoBorder', 'Border color of info boxes in the editor.'));\nexport const editorHintForeground = registerColor('editorHint.foreground', { dark: Color.fromHex('#eeeeee').transparent(0.7), light: '#6c6c6c', hcDark: null, hcLight: null }, nls.localize('editorHint.foreground', 'Foreground color of hint squigglies in the editor.'));\nexport const editorHintBorder = registerColor('editorHint.border', { dark: null, light: null, hcDark: Color.fromHex('#eeeeee').transparent(0.8), hcLight: '#292929' }, nls.localize('hintBorder', 'Border color of hint boxes in the editor.'));\nexport const sashHoverBorder = registerColor('sash.hoverBorder', { dark: focusBorder, light: focusBorder, hcDark: focusBorder, hcLight: focusBorder }, nls.localize('sashActiveBorder', \"Border color of active sashes.\"));\n/**\n * Editor background color.\n */\nexport const editorBackground = registerColor('editor.background', { light: '#ffffff', dark: '#1E1E1E', hcDark: Color.black, hcLight: Color.white }, nls.localize('editorBackground', \"Editor background color.\"));\n/**\n * Editor foreground color.\n */\nexport const editorForeground = registerColor('editor.foreground', { light: '#333333', dark: '#BBBBBB', hcDark: Color.white, hcLight: foreground }, nls.localize('editorForeground', \"Editor default foreground color.\"));\n/**\n * Sticky scroll\n */\nexport const editorStickyScrollBackground = registerColor('editorStickyScroll.background', { light: editorBackground, dark: editorBackground, hcDark: editorBackground, hcLight: editorBackground }, nls.localize('editorStickyScrollBackground', \"Sticky scroll background color for the editor\"));\nexport const editorStickyScrollHoverBackground = registerColor('editorStickyScrollHover.background', { dark: '#2A2D2E', light: '#F0F0F0', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('editorStickyScrollHoverBackground', \"Sticky scroll on hover background color for the editor\"));\n/**\n * Editor widgets\n */\nexport const editorWidgetBackground = registerColor('editorWidget.background', { dark: '#252526', light: '#F3F3F3', hcDark: '#0C141F', hcLight: Color.white }, nls.localize('editorWidgetBackground', 'Background color of editor widgets, such as find/replace.'));\nexport const editorWidgetForeground = registerColor('editorWidget.foreground', { dark: foreground, light: foreground, hcDark: foreground, hcLight: foreground }, nls.localize('editorWidgetForeground', 'Foreground color of editor widgets, such as find/replace.'));\nexport const editorWidgetBorder = registerColor('editorWidget.border', { dark: '#454545', light: '#C8C8C8', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('editorWidgetBorder', 'Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.'));\nexport const editorWidgetResizeBorder = registerColor('editorWidget.resizeBorder', { light: null, dark: null, hcDark: null, hcLight: null }, nls.localize('editorWidgetResizeBorder', \"Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.\"));\n/**\n * Quick pick widget\n */\nexport const quickInputBackground = registerColor('quickInput.background', { dark: editorWidgetBackground, light: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('pickerBackground', \"Quick picker background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputForeground = registerColor('quickInput.foreground', { dark: editorWidgetForeground, light: editorWidgetForeground, hcDark: editorWidgetForeground, hcLight: editorWidgetForeground }, nls.localize('pickerForeground', \"Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputTitleBackground = registerColor('quickInputTitle.background', { dark: new Color(new RGBA(255, 255, 255, 0.105)), light: new Color(new RGBA(0, 0, 0, 0.06)), hcDark: '#000000', hcLight: Color.white }, nls.localize('pickerTitleBackground', \"Quick picker title background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const pickerGroupForeground = registerColor('pickerGroup.foreground', { dark: '#3794FF', light: '#0066BF', hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('pickerGroupForeground', \"Quick picker color for grouping labels.\"));\nexport const pickerGroupBorder = registerColor('pickerGroup.border', { dark: '#3F3F46', light: '#CCCEDB', hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('pickerGroupBorder', \"Quick picker color for grouping borders.\"));\n/**\n * Keybinding label\n */\nexport const keybindingLabelBackground = registerColor('keybindingLabel.background', { dark: new Color(new RGBA(128, 128, 128, 0.17)), light: new Color(new RGBA(221, 221, 221, 0.4)), hcDark: Color.transparent, hcLight: Color.transparent }, nls.localize('keybindingLabelBackground', \"Keybinding label background color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelForeground = registerColor('keybindingLabel.foreground', { dark: Color.fromHex('#CCCCCC'), light: Color.fromHex('#555555'), hcDark: Color.white, hcLight: foreground }, nls.localize('keybindingLabelForeground', \"Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBorder = registerColor('keybindingLabel.border', { dark: new Color(new RGBA(51, 51, 51, 0.6)), light: new Color(new RGBA(204, 204, 204, 0.4)), hcDark: new Color(new RGBA(111, 195, 223)), hcLight: contrastBorder }, nls.localize('keybindingLabelBorder', \"Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBottomBorder = registerColor('keybindingLabel.bottomBorder', { dark: new Color(new RGBA(68, 68, 68, 0.6)), light: new Color(new RGBA(187, 187, 187, 0.4)), hcDark: new Color(new RGBA(111, 195, 223)), hcLight: foreground }, nls.localize('keybindingLabelBottomBorder', \"Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut.\"));\n/**\n * Editor selection colors.\n */\nexport const editorSelectionBackground = registerColor('editor.selectionBackground', { light: '#ADD6FF', dark: '#264F78', hcDark: '#f3f518', hcLight: '#0F4A85' }, nls.localize('editorSelectionBackground', \"Color of the editor selection.\"));\nexport const editorSelectionForeground = registerColor('editor.selectionForeground', { light: null, dark: null, hcDark: '#000000', hcLight: Color.white }, nls.localize('editorSelectionForeground', \"Color of the selected text for high contrast.\"));\nexport const editorInactiveSelection = registerColor('editor.inactiveSelectionBackground', { light: transparent(editorSelectionBackground, 0.5), dark: transparent(editorSelectionBackground, 0.5), hcDark: transparent(editorSelectionBackground, 0.7), hcLight: transparent(editorSelectionBackground, 0.5) }, nls.localize('editorInactiveSelection', \"Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorSelectionHighlight = registerColor('editor.selectionHighlightBackground', { light: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), dark: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), hcDark: null, hcLight: null }, nls.localize('editorSelectionHighlight', 'Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSelectionHighlightBorder = registerColor('editor.selectionHighlightBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorSelectionHighlightBorder', \"Border color for regions with the same content as the selection.\"));\n/**\n * Editor find match colors.\n */\nexport const editorFindMatch = registerColor('editor.findMatchBackground', { light: '#A8AC94', dark: '#515C6A', hcDark: null, hcLight: null }, nls.localize('editorFindMatch', \"Color of the current search match.\"));\nexport const editorFindMatchHighlight = registerColor('editor.findMatchHighlightBackground', { light: '#EA5C0055', dark: '#EA5C0055', hcDark: null, hcLight: null }, nls.localize('findMatchHighlight', \"Color of the other search matches. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFindRangeHighlight = registerColor('editor.findRangeHighlightBackground', { dark: '#3a3d4166', light: '#b4b4b44d', hcDark: null, hcLight: null }, nls.localize('findRangeHighlight', \"Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFindMatchBorder = registerColor('editor.findMatchBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorFindMatchBorder', \"Border color of the current search match.\"));\nexport const editorFindMatchHighlightBorder = registerColor('editor.findMatchHighlightBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('findMatchHighlightBorder', \"Border color of the other search matches.\"));\nexport const editorFindRangeHighlightBorder = registerColor('editor.findRangeHighlightBorder', { dark: null, light: null, hcDark: transparent(activeContrastBorder, 0.4), hcLight: transparent(activeContrastBorder, 0.4) }, nls.localize('findRangeHighlightBorder', \"Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\n/**\n * Search Editor query match colors.\n *\n * Distinct from normal editor find match to allow for better differentiation\n */\nexport const searchEditorFindMatch = registerColor('searchEditor.findMatchBackground', { light: transparent(editorFindMatchHighlight, 0.66), dark: transparent(editorFindMatchHighlight, 0.66), hcDark: editorFindMatchHighlight, hcLight: editorFindMatchHighlight }, nls.localize('searchEditor.queryMatch', \"Color of the Search Editor query matches.\"));\nexport const searchEditorFindMatchBorder = registerColor('searchEditor.findMatchBorder', { light: transparent(editorFindMatchHighlightBorder, 0.66), dark: transparent(editorFindMatchHighlightBorder, 0.66), hcDark: editorFindMatchHighlightBorder, hcLight: editorFindMatchHighlightBorder }, nls.localize('searchEditor.editorFindMatchBorder', \"Border color of the Search Editor query matches.\"));\n/**\n * Editor hover\n */\nexport const editorHoverHighlight = registerColor('editor.hoverHighlightBackground', { light: '#ADD6FF26', dark: '#264f7840', hcDark: '#ADD6FF26', hcLight: null }, nls.localize('hoverHighlight', 'Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorHoverBackground = registerColor('editorHoverWidget.background', { light: editorWidgetBackground, dark: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('hoverBackground', 'Background color of the editor hover.'));\nexport const editorHoverForeground = registerColor('editorHoverWidget.foreground', { light: editorWidgetForeground, dark: editorWidgetForeground, hcDark: editorWidgetForeground, hcLight: editorWidgetForeground }, nls.localize('hoverForeground', 'Foreground color of the editor hover.'));\nexport const editorHoverBorder = registerColor('editorHoverWidget.border', { light: editorWidgetBorder, dark: editorWidgetBorder, hcDark: editorWidgetBorder, hcLight: editorWidgetBorder }, nls.localize('hoverBorder', 'Border color of the editor hover.'));\nexport const editorHoverStatusBarBackground = registerColor('editorHoverWidget.statusBarBackground', { dark: lighten(editorHoverBackground, 0.2), light: darken(editorHoverBackground, 0.05), hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('statusBarBackground', \"Background color of the editor hover status bar.\"));\n/**\n * Editor link colors\n */\nexport const editorActiveLinkForeground = registerColor('editorLink.activeForeground', { dark: '#4E94CE', light: Color.blue, hcDark: Color.cyan, hcLight: '#292929' }, nls.localize('activeLinkForeground', 'Color of active links.'));\n/**\n * Inline hints\n */\nexport const editorInlayHintForeground = registerColor('editorInlayHint.foreground', { dark: transparent(badgeForeground, .8), light: transparent(badgeForeground, .8), hcDark: badgeForeground, hcLight: badgeForeground }, nls.localize('editorInlayHintForeground', 'Foreground color of inline hints'));\nexport const editorInlayHintBackground = registerColor('editorInlayHint.background', { dark: transparent(badgeBackground, .6), light: transparent(badgeBackground, .3), hcDark: badgeBackground, hcLight: badgeBackground }, nls.localize('editorInlayHintBackground', 'Background color of inline hints'));\nexport const editorInlayHintTypeForeground = registerColor('editorInlayHint.typeForeground', { dark: editorInlayHintForeground, light: editorInlayHintForeground, hcDark: editorInlayHintForeground, hcLight: editorInlayHintForeground }, nls.localize('editorInlayHintForegroundTypes', 'Foreground color of inline hints for types'));\nexport const editorInlayHintTypeBackground = registerColor('editorInlayHint.typeBackground', { dark: editorInlayHintBackground, light: editorInlayHintBackground, hcDark: editorInlayHintBackground, hcLight: editorInlayHintBackground }, nls.localize('editorInlayHintBackgroundTypes', 'Background color of inline hints for types'));\nexport const editorInlayHintParameterForeground = registerColor('editorInlayHint.parameterForeground', { dark: editorInlayHintForeground, light: editorInlayHintForeground, hcDark: editorInlayHintForeground, hcLight: editorInlayHintForeground }, nls.localize('editorInlayHintForegroundParameter', 'Foreground color of inline hints for parameters'));\nexport const editorInlayHintParameterBackground = registerColor('editorInlayHint.parameterBackground', { dark: editorInlayHintBackground, light: editorInlayHintBackground, hcDark: editorInlayHintBackground, hcLight: editorInlayHintBackground }, nls.localize('editorInlayHintBackgroundParameter', 'Background color of inline hints for parameters'));\n/**\n * Editor lighbulb icon colors\n */\nexport const editorLightBulbForeground = registerColor('editorLightBulb.foreground', { dark: '#FFCC00', light: '#DDB100', hcDark: '#FFCC00', hcLight: '#007ACC' }, nls.localize('editorLightBulbForeground', \"The color used for the lightbulb actions icon.\"));\nexport const editorLightBulbAutoFixForeground = registerColor('editorLightBulbAutoFix.foreground', { dark: '#75BEFF', light: '#007ACC', hcDark: '#75BEFF', hcLight: '#007ACC' }, nls.localize('editorLightBulbAutoFixForeground', \"The color used for the lightbulb auto fix actions icon.\"));\n/**\n * Diff Editor Colors\n */\nexport const defaultInsertColor = new Color(new RGBA(155, 185, 85, .2));\nexport const defaultRemoveColor = new Color(new RGBA(255, 0, 0, .2));\nexport const diffInserted = registerColor('diffEditor.insertedTextBackground', { dark: '#9ccc2c33', light: '#9ccc2c66', hcDark: null, hcLight: null }, nls.localize('diffEditorInserted', 'Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffRemoved = registerColor('diffEditor.removedTextBackground', { dark: '#ff000066', light: '#ff00004d', hcDark: null, hcLight: null }, nls.localize('diffEditorRemoved', 'Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffInsertedLine = registerColor('diffEditor.insertedLineBackground', { dark: defaultInsertColor, light: defaultInsertColor, hcDark: null, hcLight: null }, nls.localize('diffEditorInsertedLines', 'Background color for lines that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffRemovedLine = registerColor('diffEditor.removedLineBackground', { dark: defaultRemoveColor, light: defaultRemoveColor, hcDark: null, hcLight: null }, nls.localize('diffEditorRemovedLines', 'Background color for lines that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffInsertedLineGutter = registerColor('diffEditorGutter.insertedLineBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('diffEditorInsertedLineGutter', 'Background color for the margin where lines got inserted.'));\nexport const diffRemovedLineGutter = registerColor('diffEditorGutter.removedLineBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('diffEditorRemovedLineGutter', 'Background color for the margin where lines got removed.'));\nexport const diffOverviewRulerInserted = registerColor('diffEditorOverview.insertedForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('diffEditorOverviewInserted', 'Diff overview ruler foreground for inserted content.'));\nexport const diffOverviewRulerRemoved = registerColor('diffEditorOverview.removedForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('diffEditorOverviewRemoved', 'Diff overview ruler foreground for removed content.'));\nexport const diffInsertedOutline = registerColor('diffEditor.insertedTextBorder', { dark: null, light: null, hcDark: '#33ff2eff', hcLight: '#374E06' }, nls.localize('diffEditorInsertedOutline', 'Outline color for the text that got inserted.'));\nexport const diffRemovedOutline = registerColor('diffEditor.removedTextBorder', { dark: null, light: null, hcDark: '#FF008F', hcLight: '#AD0707' }, nls.localize('diffEditorRemovedOutline', 'Outline color for text that got removed.'));\nexport const diffBorder = registerColor('diffEditor.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('diffEditorBorder', 'Border color between the two text editors.'));\nexport const diffDiagonalFill = registerColor('diffEditor.diagonalFill', { dark: '#cccccc33', light: '#22222233', hcDark: null, hcLight: null }, nls.localize('diffDiagonalFill', \"Color of the diff editor's diagonal fill. The diagonal fill is used in side-by-side diff views.\"));\n/**\n * List and tree colors\n */\nexport const listFocusBackground = registerColor('list.focusBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listFocusBackground', \"List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusForeground = registerColor('list.focusForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listFocusForeground', \"List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusOutline = registerColor('list.focusOutline', { dark: focusBorder, light: focusBorder, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('listFocusOutline', \"List/Tree outline color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusAndSelectionOutline = registerColor('list.focusAndSelectionOutline', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listFocusAndSelectionOutline', \"List/Tree outline color for the focused item when the list/tree is active and selected. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionBackground = registerColor('list.activeSelectionBackground', { dark: '#04395E', light: '#0060C0', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listActiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionForeground = registerColor('list.activeSelectionForeground', { dark: Color.white, light: Color.white, hcDark: null, hcLight: null }, nls.localize('listActiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionIconForeground = registerColor('list.activeSelectionIconForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listActiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionBackground = registerColor('list.inactiveSelectionBackground', { dark: '#37373D', light: '#E4E6F1', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listInactiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionForeground = registerColor('list.inactiveSelectionForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listInactiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionIconForeground = registerColor('list.inactiveSelectionIconForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listInactiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusBackground = registerColor('list.inactiveFocusBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listInactiveFocusBackground', \"List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusOutline = registerColor('list.inactiveFocusOutline', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listInactiveFocusOutline', \"List/Tree outline color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listHoverBackground = registerColor('list.hoverBackground', { dark: '#2A2D2E', light: '#F0F0F0', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listHoverBackground', \"List/Tree background when hovering over items using the mouse.\"));\nexport const listHoverForeground = registerColor('list.hoverForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listHoverForeground', \"List/Tree foreground when hovering over items using the mouse.\"));\nexport const listDropBackground = registerColor('list.dropBackground', { dark: '#062F4A', light: '#D6EBFF', hcDark: null, hcLight: null }, nls.localize('listDropBackground', \"List/Tree drag and drop background when moving items around using the mouse.\"));\nexport const listHighlightForeground = registerColor('list.highlightForeground', { dark: '#2AAAFF', light: '#0066BF', hcDark: focusBorder, hcLight: focusBorder }, nls.localize('highlight', 'List/Tree foreground color of the match highlights when searching inside the list/tree.'));\nexport const listFocusHighlightForeground = registerColor('list.focusHighlightForeground', { dark: listHighlightForeground, light: ifDefinedThenElse(listActiveSelectionBackground, listHighlightForeground, '#BBE7FF'), hcDark: listHighlightForeground, hcLight: listHighlightForeground }, nls.localize('listFocusHighlightForeground', 'List/Tree foreground color of the match highlights on actively focused items when searching inside the list/tree.'));\nexport const listInvalidItemForeground = registerColor('list.invalidItemForeground', { dark: '#B89500', light: '#B89500', hcDark: '#B89500', hcLight: '#B5200D' }, nls.localize('invalidItemForeground', 'List/Tree foreground color for invalid items, for example an unresolved root in explorer.'));\nexport const listErrorForeground = registerColor('list.errorForeground', { dark: '#F88070', light: '#B01011', hcDark: null, hcLight: null }, nls.localize('listErrorForeground', 'Foreground color of list items containing errors.'));\nexport const listWarningForeground = registerColor('list.warningForeground', { dark: '#CCA700', light: '#855F00', hcDark: null, hcLight: null }, nls.localize('listWarningForeground', 'Foreground color of list items containing warnings.'));\nexport const listFilterWidgetBackground = registerColor('listFilterWidget.background', { light: darken(editorWidgetBackground, 0), dark: lighten(editorWidgetBackground, 0), hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('listFilterWidgetBackground', 'Background color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetOutline = registerColor('listFilterWidget.outline', { dark: Color.transparent, light: Color.transparent, hcDark: '#f38518', hcLight: '#007ACC' }, nls.localize('listFilterWidgetOutline', 'Outline color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetNoMatchesOutline = registerColor('listFilterWidget.noMatchesOutline', { dark: '#BE1100', light: '#BE1100', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('listFilterWidgetNoMatchesOutline', 'Outline color of the type filter widget in lists and trees, when there are no matches.'));\nexport const listFilterWidgetShadow = registerColor('listFilterWidget.shadow', { dark: widgetShadow, light: widgetShadow, hcDark: widgetShadow, hcLight: widgetShadow }, nls.localize('listFilterWidgetShadow', 'Shadown color of the type filter widget in lists and trees.'));\nexport const listFilterMatchHighlight = registerColor('list.filterMatchBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hcDark: null, hcLight: null }, nls.localize('listFilterMatchHighlight', 'Background color of the filtered match.'));\nexport const listFilterMatchHighlightBorder = registerColor('list.filterMatchBorder', { dark: editorFindMatchHighlightBorder, light: editorFindMatchHighlightBorder, hcDark: contrastBorder, hcLight: activeContrastBorder }, nls.localize('listFilterMatchHighlightBorder', 'Border color of the filtered match.'));\nexport const treeIndentGuidesStroke = registerColor('tree.indentGuidesStroke', { dark: '#585858', light: '#a9a9a9', hcDark: '#a9a9a9', hcLight: '#a5a5a5' }, nls.localize('treeIndentGuidesStroke', \"Tree stroke color for the indentation guides.\"));\nexport const tableColumnsBorder = registerColor('tree.tableColumnsBorder', { dark: '#CCCCCC20', light: '#61616120', hcDark: null, hcLight: null }, nls.localize('tableColumnsBorder', \"Table border color between columns.\"));\nexport const tableOddRowsBackgroundColor = registerColor('tree.tableOddRowsBackground', { dark: transparent(foreground, 0.04), light: transparent(foreground, 0.04), hcDark: null, hcLight: null }, nls.localize('tableOddRowsBackgroundColor', \"Background color for odd table rows.\"));\nexport const listDeemphasizedForeground = registerColor('list.deemphasizedForeground', { dark: '#8C8C8C', light: '#8E8E90', hcDark: '#A7A8A9', hcLight: '#666666' }, nls.localize('listDeemphasizedForeground', \"List/Tree foreground color for items that are deemphasized. \"));\n/**\n * Quick pick widget (dependent on List and tree colors)\n */\nexport const _deprecatedQuickInputListFocusBackground = registerColor('quickInput.list.focusBackground', { dark: null, light: null, hcDark: null, hcLight: null }, '', undefined, nls.localize('quickInput.list.focusBackground deprecation', \"Please use quickInputList.focusBackground instead\"));\nexport const quickInputListFocusForeground = registerColor('quickInputList.focusForeground', { dark: listActiveSelectionForeground, light: listActiveSelectionForeground, hcDark: listActiveSelectionForeground, hcLight: listActiveSelectionForeground }, nls.localize('quickInput.listFocusForeground', \"Quick picker foreground color for the focused item.\"));\nexport const quickInputListFocusIconForeground = registerColor('quickInputList.focusIconForeground', { dark: listActiveSelectionIconForeground, light: listActiveSelectionIconForeground, hcDark: listActiveSelectionIconForeground, hcLight: listActiveSelectionIconForeground }, nls.localize('quickInput.listFocusIconForeground', \"Quick picker icon foreground color for the focused item.\"));\nexport const quickInputListFocusBackground = registerColor('quickInputList.focusBackground', { dark: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), light: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), hcDark: null, hcLight: null }, nls.localize('quickInput.listFocusBackground', \"Quick picker background color for the focused item.\"));\n/**\n * Menu colors\n */\nexport const menuBorder = registerColor('menu.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('menuBorder', \"Border color of menus.\"));\nexport const menuForeground = registerColor('menu.foreground', { dark: selectForeground, light: foreground, hcDark: selectForeground, hcLight: selectForeground }, nls.localize('menuForeground', \"Foreground color of menu items.\"));\nexport const menuBackground = registerColor('menu.background', { dark: selectBackground, light: selectBackground, hcDark: selectBackground, hcLight: selectBackground }, nls.localize('menuBackground', \"Background color of menu items.\"));\nexport const menuSelectionForeground = registerColor('menu.selectionForeground', { dark: listActiveSelectionForeground, light: listActiveSelectionForeground, hcDark: listActiveSelectionForeground, hcLight: listActiveSelectionForeground }, nls.localize('menuSelectionForeground', \"Foreground color of the selected menu item in menus.\"));\nexport const menuSelectionBackground = registerColor('menu.selectionBackground', { dark: listActiveSelectionBackground, light: listActiveSelectionBackground, hcDark: listActiveSelectionBackground, hcLight: listActiveSelectionBackground }, nls.localize('menuSelectionBackground', \"Background color of the selected menu item in menus.\"));\nexport const menuSelectionBorder = registerColor('menu.selectionBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('menuSelectionBorder', \"Border color of the selected menu item in menus.\"));\nexport const menuSeparatorBackground = registerColor('menu.separatorBackground', { dark: '#606060', light: '#D4D4D4', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('menuSeparatorBackground', \"Color of a separator menu item in menus.\"));\n/**\n * Toolbar colors\n */\nexport const toolbarHoverBackground = registerColor('toolbar.hoverBackground', { dark: '#5a5d5e50', light: '#b8b8b850', hcDark: null, hcLight: null }, nls.localize('toolbarHoverBackground', \"Toolbar background when hovering over actions using the mouse\"));\nexport const toolbarHoverOutline = registerColor('toolbar.hoverOutline', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('toolbarHoverOutline', \"Toolbar outline when hovering over actions using the mouse\"));\nexport const toolbarActiveBackground = registerColor('toolbar.activeBackground', { dark: lighten(toolbarHoverBackground, 0.1), light: darken(toolbarHoverBackground, 0.1), hcDark: null, hcLight: null }, nls.localize('toolbarActiveBackground', \"Toolbar background when holding the mouse over actions\"));\n/**\n * Snippet placeholder colors\n */\nexport const snippetTabstopHighlightBackground = registerColor('editor.snippetTabstopHighlightBackground', { dark: new Color(new RGBA(124, 124, 124, 0.3)), light: new Color(new RGBA(10, 50, 100, 0.2)), hcDark: new Color(new RGBA(124, 124, 124, 0.3)), hcLight: new Color(new RGBA(10, 50, 100, 0.2)) }, nls.localize('snippetTabstopHighlightBackground', \"Highlight background color of a snippet tabstop.\"));\nexport const snippetTabstopHighlightBorder = registerColor('editor.snippetTabstopHighlightBorder', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('snippetTabstopHighlightBorder', \"Highlight border color of a snippet tabstop.\"));\nexport const snippetFinalTabstopHighlightBackground = registerColor('editor.snippetFinalTabstopHighlightBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('snippetFinalTabstopHighlightBackground', \"Highlight background color of the final tabstop of a snippet.\"));\nexport const snippetFinalTabstopHighlightBorder = registerColor('editor.snippetFinalTabstopHighlightBorder', { dark: '#525252', light: new Color(new RGBA(10, 50, 100, 0.5)), hcDark: '#525252', hcLight: '#292929' }, nls.localize('snippetFinalTabstopHighlightBorder', \"Highlight border color of the final tabstop of a snippet.\"));\n/**\n * Breadcrumb colors\n */\nexport const breadcrumbsForeground = registerColor('breadcrumb.foreground', { light: transparent(foreground, 0.8), dark: transparent(foreground, 0.8), hcDark: transparent(foreground, 0.8), hcLight: transparent(foreground, 0.8) }, nls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\nexport const breadcrumbsBackground = registerColor('breadcrumb.background', { light: editorBackground, dark: editorBackground, hcDark: editorBackground, hcLight: editorBackground }, nls.localize('breadcrumbsBackground', \"Background color of breadcrumb items.\"));\nexport const breadcrumbsFocusForeground = registerColor('breadcrumb.focusForeground', { light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hcDark: lighten(foreground, 0.1), hcLight: lighten(foreground, 0.1) }, nls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\nexport const breadcrumbsActiveSelectionForeground = registerColor('breadcrumb.activeSelectionForeground', { light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hcDark: lighten(foreground, 0.1), hcLight: lighten(foreground, 0.1) }, nls.localize('breadcrumbsSelectedForeground', \"Color of selected breadcrumb items.\"));\nexport const breadcrumbsPickerBackground = registerColor('breadcrumbPicker.background', { light: editorWidgetBackground, dark: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('breadcrumbsSelectedBackground', \"Background color of breadcrumb item picker.\"));\n/**\n * Merge-conflict colors\n */\nconst headerTransparency = 0.5;\nconst currentBaseColor = Color.fromHex('#40C8AE').transparent(headerTransparency);\nconst incomingBaseColor = Color.fromHex('#40A6FF').transparent(headerTransparency);\nconst commonBaseColor = Color.fromHex('#606060').transparent(0.4);\nconst contentTransparency = 0.4;\nconst rulerTransparency = 1;\nexport const mergeCurrentHeaderBackground = registerColor('merge.currentHeaderBackground', { dark: currentBaseColor, light: currentBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeCurrentHeaderBackground', 'Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCurrentContentBackground = registerColor('merge.currentContentBackground', { dark: transparent(mergeCurrentHeaderBackground, contentTransparency), light: transparent(mergeCurrentHeaderBackground, contentTransparency), hcDark: transparent(mergeCurrentHeaderBackground, contentTransparency), hcLight: transparent(mergeCurrentHeaderBackground, contentTransparency) }, nls.localize('mergeCurrentContentBackground', 'Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeIncomingHeaderBackground = registerColor('merge.incomingHeaderBackground', { dark: incomingBaseColor, light: incomingBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeIncomingHeaderBackground', 'Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeIncomingContentBackground = registerColor('merge.incomingContentBackground', { dark: transparent(mergeIncomingHeaderBackground, contentTransparency), light: transparent(mergeIncomingHeaderBackground, contentTransparency), hcDark: transparent(mergeIncomingHeaderBackground, contentTransparency), hcLight: transparent(mergeIncomingHeaderBackground, contentTransparency) }, nls.localize('mergeIncomingContentBackground', 'Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCommonHeaderBackground = registerColor('merge.commonHeaderBackground', { dark: commonBaseColor, light: commonBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeCommonHeaderBackground', 'Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCommonContentBackground = registerColor('merge.commonContentBackground', { dark: transparent(mergeCommonHeaderBackground, contentTransparency), light: transparent(mergeCommonHeaderBackground, contentTransparency), hcDark: transparent(mergeCommonHeaderBackground, contentTransparency), hcLight: transparent(mergeCommonHeaderBackground, contentTransparency) }, nls.localize('mergeCommonContentBackground', 'Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeBorder = registerColor('merge.border', { dark: null, light: null, hcDark: '#C3DF6F', hcLight: '#007ACC' }, nls.localize('mergeBorder', 'Border color on headers and the splitter in inline merge-conflicts.'));\nexport const overviewRulerCurrentContentForeground = registerColor('editorOverviewRuler.currentContentForeground', { dark: transparent(mergeCurrentHeaderBackground, rulerTransparency), light: transparent(mergeCurrentHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerCurrentContentForeground', 'Current overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerIncomingContentForeground = registerColor('editorOverviewRuler.incomingContentForeground', { dark: transparent(mergeIncomingHeaderBackground, rulerTransparency), light: transparent(mergeIncomingHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerIncomingContentForeground', 'Incoming overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerCommonContentForeground = registerColor('editorOverviewRuler.commonContentForeground', { dark: transparent(mergeCommonHeaderBackground, rulerTransparency), light: transparent(mergeCommonHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerCommonContentForeground', 'Common ancestor overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerFindMatchForeground = registerColor('editorOverviewRuler.findMatchForeground', { dark: '#d186167e', light: '#d186167e', hcDark: '#AB5A00', hcLight: '' }, nls.localize('overviewRulerFindMatchForeground', 'Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerSelectionHighlightForeground = registerColor('editorOverviewRuler.selectionHighlightForeground', { dark: '#A0A0A0CC', light: '#A0A0A0CC', hcDark: '#A0A0A0CC', hcLight: '#A0A0A0CC' }, nls.localize('overviewRulerSelectionHighlightForeground', 'Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const minimapFindMatch = registerColor('minimap.findMatchHighlight', { light: '#d18616', dark: '#d18616', hcDark: '#AB5A00', hcLight: '#0F4A85' }, nls.localize('minimapFindMatchHighlight', 'Minimap marker color for find matches.'), true);\nexport const minimapSelectionOccurrenceHighlight = registerColor('minimap.selectionOccurrenceHighlight', { light: '#c9c9c9', dark: '#676767', hcDark: '#ffffff', hcLight: '#0F4A85' }, nls.localize('minimapSelectionOccurrenceHighlight', 'Minimap marker color for repeating editor selections.'), true);\nexport const minimapSelection = registerColor('minimap.selectionHighlight', { light: '#ADD6FF', dark: '#264F78', hcDark: '#ffffff', hcLight: '#0F4A85' }, nls.localize('minimapSelectionHighlight', 'Minimap marker color for the editor selection.'), true);\nexport const minimapError = registerColor('minimap.errorHighlight', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hcDark: new Color(new RGBA(255, 50, 50, 1)), hcLight: '#B5200D' }, nls.localize('minimapError', 'Minimap marker color for errors.'));\nexport const minimapWarning = registerColor('minimap.warningHighlight', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningBorder, hcLight: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Minimap marker color for warnings.'));\nexport const minimapBackground = registerColor('minimap.background', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('minimapBackground', \"Minimap background color.\"));\nexport const minimapForegroundOpacity = registerColor('minimap.foregroundOpacity', { dark: Color.fromHex('#000f'), light: Color.fromHex('#000f'), hcDark: Color.fromHex('#000f'), hcLight: Color.fromHex('#000f') }, nls.localize('minimapForegroundOpacity', 'Opacity of foreground elements rendered in the minimap. For example, \"#000000c0\" will render the elements with 75% opacity.'));\nexport const minimapSliderBackground = registerColor('minimapSlider.background', { light: transparent(scrollbarSliderBackground, 0.5), dark: transparent(scrollbarSliderBackground, 0.5), hcDark: transparent(scrollbarSliderBackground, 0.5), hcLight: transparent(scrollbarSliderBackground, 0.5) }, nls.localize('minimapSliderBackground', \"Minimap slider background color.\"));\nexport const minimapSliderHoverBackground = registerColor('minimapSlider.hoverBackground', { light: transparent(scrollbarSliderHoverBackground, 0.5), dark: transparent(scrollbarSliderHoverBackground, 0.5), hcDark: transparent(scrollbarSliderHoverBackground, 0.5), hcLight: transparent(scrollbarSliderHoverBackground, 0.5) }, nls.localize('minimapSliderHoverBackground', \"Minimap slider background color when hovering.\"));\nexport const minimapSliderActiveBackground = registerColor('minimapSlider.activeBackground', { light: transparent(scrollbarSliderActiveBackground, 0.5), dark: transparent(scrollbarSliderActiveBackground, 0.5), hcDark: transparent(scrollbarSliderActiveBackground, 0.5), hcLight: transparent(scrollbarSliderActiveBackground, 0.5) }, nls.localize('minimapSliderActiveBackground', \"Minimap slider background color when clicked on.\"));\nexport const problemsErrorIconForeground = registerColor('problemsErrorIcon.foreground', { dark: editorErrorForeground, light: editorErrorForeground, hcDark: editorErrorForeground, hcLight: editorErrorForeground }, nls.localize('problemsErrorIconForeground', \"The color used for the problems error icon.\"));\nexport const problemsWarningIconForeground = registerColor('problemsWarningIcon.foreground', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningForeground, hcLight: editorWarningForeground }, nls.localize('problemsWarningIconForeground', \"The color used for the problems warning icon.\"));\nexport const problemsInfoIconForeground = registerColor('problemsInfoIcon.foreground', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoForeground, hcLight: editorInfoForeground }, nls.localize('problemsInfoIconForeground', \"The color used for the problems info icon.\"));\n/**\n * Chart colors\n */\nexport const chartsForeground = registerColor('charts.foreground', { dark: foreground, light: foreground, hcDark: foreground, hcLight: foreground }, nls.localize('chartsForeground', \"The foreground color used in charts.\"));\nexport const chartsLines = registerColor('charts.lines', { dark: transparent(foreground, .5), light: transparent(foreground, .5), hcDark: transparent(foreground, .5), hcLight: transparent(foreground, .5) }, nls.localize('chartsLines', \"The color used for horizontal lines in charts.\"));\nexport const chartsRed = registerColor('charts.red', { dark: editorErrorForeground, light: editorErrorForeground, hcDark: editorErrorForeground, hcLight: editorErrorForeground }, nls.localize('chartsRed', \"The red color used in chart visualizations.\"));\nexport const chartsBlue = registerColor('charts.blue', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoForeground, hcLight: editorInfoForeground }, nls.localize('chartsBlue', \"The blue color used in chart visualizations.\"));\nexport const chartsYellow = registerColor('charts.yellow', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningForeground, hcLight: editorWarningForeground }, nls.localize('chartsYellow', \"The yellow color used in chart visualizations.\"));\nexport const chartsOrange = registerColor('charts.orange', { dark: minimapFindMatch, light: minimapFindMatch, hcDark: minimapFindMatch, hcLight: minimapFindMatch }, nls.localize('chartsOrange', \"The orange color used in chart visualizations.\"));\nexport const chartsGreen = registerColor('charts.green', { dark: '#89D185', light: '#388A34', hcDark: '#89D185', hcLight: '#374e06' }, nls.localize('chartsGreen', \"The green color used in chart visualizations.\"));\nexport const chartsPurple = registerColor('charts.purple', { dark: '#B180D7', light: '#652D90', hcDark: '#B180D7', hcLight: '#652D90' }, nls.localize('chartsPurple', \"The purple color used in chart visualizations.\"));\n// ----- color functions\nexport function executeTransform(transform, theme) {\n    var _a, _b, _c;\n    switch (transform.op) {\n        case 0 /* ColorTransformType.Darken */:\n            return (_a = resolveColorValue(transform.value, theme)) === null || _a === void 0 ? void 0 : _a.darken(transform.factor);\n        case 1 /* ColorTransformType.Lighten */:\n            return (_b = resolveColorValue(transform.value, theme)) === null || _b === void 0 ? void 0 : _b.lighten(transform.factor);\n        case 2 /* ColorTransformType.Transparent */:\n            return (_c = resolveColorValue(transform.value, theme)) === null || _c === void 0 ? void 0 : _c.transparent(transform.factor);\n        case 3 /* ColorTransformType.OneOf */:\n            for (const candidate of transform.values) {\n                const color = resolveColorValue(candidate, theme);\n                if (color) {\n                    return color;\n                }\n            }\n            return undefined;\n        case 5 /* ColorTransformType.IfDefinedThenElse */:\n            return resolveColorValue(theme.defines(transform.if) ? transform.then : transform.else, theme);\n        case 4 /* ColorTransformType.LessProminent */: {\n            const from = resolveColorValue(transform.value, theme);\n            if (!from) {\n                return undefined;\n            }\n            const backgroundColor = resolveColorValue(transform.background, theme);\n            if (!backgroundColor) {\n                return from.transparent(transform.factor * transform.transparency);\n            }\n            return from.isDarkerThan(backgroundColor)\n                ? Color.getLighterColor(from, backgroundColor, transform.factor).transparent(transform.transparency)\n                : Color.getDarkerColor(from, backgroundColor, transform.factor).transparent(transform.transparency);\n        }\n        default:\n            throw assertNever(transform);\n    }\n}\nexport function darken(colorValue, factor) {\n    return { op: 0 /* ColorTransformType.Darken */, value: colorValue, factor };\n}\nexport function lighten(colorValue, factor) {\n    return { op: 1 /* ColorTransformType.Lighten */, value: colorValue, factor };\n}\nexport function transparent(colorValue, factor) {\n    return { op: 2 /* ColorTransformType.Transparent */, value: colorValue, factor };\n}\nexport function oneOf(...colorValues) {\n    return { op: 3 /* ColorTransformType.OneOf */, values: colorValues };\n}\nexport function ifDefinedThenElse(ifArg, thenArg, elseArg) {\n    return { op: 5 /* ColorTransformType.IfDefinedThenElse */, if: ifArg, then: thenArg, else: elseArg };\n}\nfunction lessProminent(colorValue, backgroundColorValue, factor, transparency) {\n    return { op: 4 /* ColorTransformType.LessProminent */, value: colorValue, background: backgroundColorValue, factor, transparency };\n}\n// ----- implementation\n/**\n * @param colorValue Resolve a color value in the context of a theme\n */\nexport function resolveColorValue(colorValue, theme) {\n    if (colorValue === null) {\n        return undefined;\n    }\n    else if (typeof colorValue === 'string') {\n        if (colorValue[0] === '#') {\n            return Color.fromHex(colorValue);\n        }\n        return theme.getColor(colorValue);\n    }\n    else if (colorValue instanceof Color) {\n        return colorValue;\n    }\n    else if (typeof colorValue === 'object') {\n        return executeTransform(colorValue, theme);\n    }\n    return undefined;\n}\nexport const workbenchColorsSchemaId = 'vscode://schemas/workbench-colors';\nconst schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(workbenchColorsSchemaId, colorRegistry.getColorSchema());\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(workbenchColorsSchemaId), 200);\ncolorRegistry.onDidChangeSchema(() => {\n    if (!delayer.isScheduled()) {\n        delayer.schedule();\n    }\n});\n// setTimeout(_ => console.log(colorRegistry.toString()), 5000);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Codicon, CSSIcon } from '../../../base/common/codicons.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { isString } from '../../../base/common/types.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport * as platform from '../../registry/common/platform.js';\nimport { ThemeIcon } from './themeService.js';\n// icon registry\nexport const Extensions = {\n    IconContribution: 'base.contributions.icons'\n};\nexport var IconContribution;\n(function (IconContribution) {\n    function getDefinition(contribution, registry) {\n        let definition = contribution.defaults;\n        while (ThemeIcon.isThemeIcon(definition)) {\n            const c = iconRegistry.getIcon(definition.id);\n            if (!c) {\n                return undefined;\n            }\n            definition = c.defaults;\n        }\n        return definition;\n    }\n    IconContribution.getDefinition = getDefinition;\n})(IconContribution || (IconContribution = {}));\nexport var IconFontDefinition;\n(function (IconFontDefinition) {\n    function toJSONObject(iconFont) {\n        return {\n            weight: iconFont.weight,\n            style: iconFont.style,\n            src: iconFont.src.map(s => ({ format: s.format, location: s.location.toString() }))\n        };\n    }\n    IconFontDefinition.toJSONObject = toJSONObject;\n    function fromJSONObject(json) {\n        const stringOrUndef = (s) => isString(s) ? s : undefined;\n        if (json && Array.isArray(json.src) && json.src.every((s) => isString(s.format) && isString(s.location))) {\n            return {\n                weight: stringOrUndef(json.weight),\n                style: stringOrUndef(json.style),\n                src: json.src.map((s) => ({ format: s.format, location: URI.parse(s.location) }))\n            };\n        }\n        return undefined;\n    }\n    IconFontDefinition.fromJSONObject = fromJSONObject;\n})(IconFontDefinition || (IconFontDefinition = {}));\nclass IconRegistry {\n    constructor() {\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.iconSchema = {\n            definitions: {\n                icons: {\n                    type: 'object',\n                    properties: {\n                        fontId: { type: 'string', description: localize('iconDefinition.fontId', 'The id of the font to use. If not set, the font that is defined first is used.') },\n                        fontCharacter: { type: 'string', description: localize('iconDefinition.fontCharacter', 'The font character associated with the icon definition.') }\n                    },\n                    additionalProperties: false,\n                    defaultSnippets: [{ body: { fontCharacter: '\\\\\\\\e030' } }]\n                }\n            },\n            type: 'object',\n            properties: {}\n        };\n        this.iconReferenceSchema = { type: 'string', pattern: `^${CSSIcon.iconNameExpression}$`, enum: [], enumDescriptions: [] };\n        this.iconsById = {};\n        this.iconFontsById = {};\n    }\n    registerIcon(id, defaults, description, deprecationMessage) {\n        const existing = this.iconsById[id];\n        if (existing) {\n            if (description && !existing.description) {\n                existing.description = description;\n                this.iconSchema.properties[id].markdownDescription = `${description} $(${id})`;\n                const enumIndex = this.iconReferenceSchema.enum.indexOf(id);\n                if (enumIndex !== -1) {\n                    this.iconReferenceSchema.enumDescriptions[enumIndex] = description;\n                }\n                this._onDidChange.fire();\n            }\n            return existing;\n        }\n        const iconContribution = { id, description, defaults, deprecationMessage };\n        this.iconsById[id] = iconContribution;\n        const propertySchema = { $ref: '#/definitions/icons' };\n        if (deprecationMessage) {\n            propertySchema.deprecationMessage = deprecationMessage;\n        }\n        if (description) {\n            propertySchema.markdownDescription = `${description}: $(${id})`;\n        }\n        this.iconSchema.properties[id] = propertySchema;\n        this.iconReferenceSchema.enum.push(id);\n        this.iconReferenceSchema.enumDescriptions.push(description || '');\n        this._onDidChange.fire();\n        return { id };\n    }\n    getIcons() {\n        return Object.keys(this.iconsById).map(id => this.iconsById[id]);\n    }\n    getIcon(id) {\n        return this.iconsById[id];\n    }\n    getIconSchema() {\n        return this.iconSchema;\n    }\n    toString() {\n        const sorter = (i1, i2) => {\n            return i1.id.localeCompare(i2.id);\n        };\n        const classNames = (i) => {\n            while (ThemeIcon.isThemeIcon(i.defaults)) {\n                i = this.iconsById[i.defaults.id];\n            }\n            return `codicon codicon-${i ? i.id : ''}`;\n        };\n        const reference = [];\n        reference.push(`| preview     | identifier                        | default codicon ID                | description`);\n        reference.push(`| ----------- | --------------------------------- | --------------------------------- | --------------------------------- |`);\n        const contributions = Object.keys(this.iconsById).map(key => this.iconsById[key]);\n        for (const i of contributions.filter(i => !!i.description).sort(sorter)) {\n            reference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|${ThemeIcon.isThemeIcon(i.defaults) ? i.defaults.id : i.id}|${i.description || ''}|`);\n        }\n        reference.push(`| preview     | identifier                        `);\n        reference.push(`| ----------- | --------------------------------- |`);\n        for (const i of contributions.filter(i => !ThemeIcon.isThemeIcon(i.defaults)).sort(sorter)) {\n            reference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|`);\n        }\n        return reference.join('\\n');\n    }\n}\nconst iconRegistry = new IconRegistry();\nplatform.Registry.add(Extensions.IconContribution, iconRegistry);\nexport function registerIcon(id, defaults, description, deprecationMessage) {\n    return iconRegistry.registerIcon(id, defaults, description, deprecationMessage);\n}\nexport function getIconRegistry() {\n    return iconRegistry;\n}\nfunction initialize() {\n    for (const icon of Codicon.getAll()) {\n        iconRegistry.registerIcon(icon.id, icon.definition, icon.description);\n    }\n}\ninitialize();\nexport const iconsSchemaId = 'vscode://schemas/icons';\nconst schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(iconsSchemaId, iconRegistry.getIconSchema());\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(iconsSchemaId), 200);\niconRegistry.onDidChange(() => {\n    if (!delayer.isScheduled()) {\n        delayer.schedule();\n    }\n});\n//setTimeout(_ => console.log(iconRegistry.toString()), 5000);\n// common icons\nexport const widgetClose = registerIcon('widget-close', Codicon.close, localize('widgetClose', 'Icon for the close action in widgets.'));\nexport const gotoPreviousLocation = registerIcon('goto-previous-location', Codicon.arrowUp, localize('previousChangeIcon', 'Icon for goto previous editor location.'));\nexport const gotoNextLocation = registerIcon('goto-next-location', Codicon.arrowDown, localize('nextChangeIcon', 'Icon for goto next editor location.'));\nexport const syncing = ThemeIcon.modify(Codicon.sync, 'spin');\nexport const spinningLoading = ThemeIcon.modify(Codicon.loading, 'spin');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { activeContrastBorder, badgeBackground, badgeForeground, contrastBorder, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground, inputBackground, inputBorder, inputForeground, inputValidationErrorBackground, inputValidationErrorBorder, inputValidationErrorForeground, inputValidationInfoBackground, inputValidationInfoBorder, inputValidationInfoForeground, inputValidationWarningBackground, inputValidationWarningBorder, inputValidationWarningForeground, listActiveSelectionBackground, listActiveSelectionForeground, listActiveSelectionIconForeground, listDropBackground, listFilterWidgetBackground, listFilterWidgetNoMatchesOutline, listFilterWidgetOutline, listFocusBackground, listFocusForeground, listFocusOutline, listHoverBackground, listHoverForeground, listInactiveFocusBackground, listInactiveFocusOutline, listInactiveSelectionBackground, listInactiveSelectionForeground, listInactiveSelectionIconForeground, menuBackground, menuBorder, menuForeground, menuSelectionBackground, menuSelectionBorder, menuSelectionForeground, menuSeparatorBackground, resolveColorValue, scrollbarShadow, scrollbarSliderActiveBackground, scrollbarSliderBackground, scrollbarSliderHoverBackground, tableColumnsBorder, tableOddRowsBackgroundColor, treeIndentGuidesStroke, widgetShadow, listFocusAndSelectionOutline, listFilterWidgetShadow } from './colorRegistry.js';\nexport function computeStyles(theme, styleMap) {\n    const styles = Object.create(null);\n    for (const key in styleMap) {\n        const value = styleMap[key];\n        if (value) {\n            styles[key] = resolveColorValue(value, theme);\n        }\n    }\n    return styles;\n}\nexport function attachStyler(themeService, styleMap, widgetOrCallback) {\n    function applyStyles() {\n        const styles = computeStyles(themeService.getColorTheme(), styleMap);\n        if (typeof widgetOrCallback === 'function') {\n            widgetOrCallback(styles);\n        }\n        else {\n            widgetOrCallback.style(styles);\n        }\n    }\n    applyStyles();\n    return themeService.onDidColorThemeChange(applyStyles);\n}\nexport function attachBadgeStyler(widget, themeService, style) {\n    return attachStyler(themeService, {\n        badgeBackground: (style === null || style === void 0 ? void 0 : style.badgeBackground) || badgeBackground,\n        badgeForeground: (style === null || style === void 0 ? void 0 : style.badgeForeground) || badgeForeground,\n        badgeBorder: contrastBorder\n    }, widget);\n}\nexport function attachListStyler(widget, themeService, overrides) {\n    return attachStyler(themeService, Object.assign(Object.assign({}, defaultListStyles), (overrides || {})), widget);\n}\nexport const defaultListStyles = {\n    listFocusBackground,\n    listFocusForeground,\n    listFocusOutline,\n    listActiveSelectionBackground,\n    listActiveSelectionForeground,\n    listActiveSelectionIconForeground,\n    listFocusAndSelectionOutline,\n    listFocusAndSelectionBackground: listActiveSelectionBackground,\n    listFocusAndSelectionForeground: listActiveSelectionForeground,\n    listInactiveSelectionBackground,\n    listInactiveSelectionIconForeground,\n    listInactiveSelectionForeground,\n    listInactiveFocusBackground,\n    listInactiveFocusOutline,\n    listHoverBackground,\n    listHoverForeground,\n    listDropBackground,\n    listSelectionOutline: activeContrastBorder,\n    listHoverOutline: activeContrastBorder,\n    listFilterWidgetBackground,\n    listFilterWidgetOutline,\n    listFilterWidgetNoMatchesOutline,\n    listFilterWidgetShadow,\n    treeIndentGuidesStroke,\n    tableColumnsBorder,\n    tableOddRowsBackgroundColor,\n    inputActiveOptionBorder,\n    inputActiveOptionForeground,\n    inputActiveOptionBackground,\n    inputBackground,\n    inputForeground,\n    inputBorder,\n    inputValidationInfoBackground,\n    inputValidationInfoForeground,\n    inputValidationInfoBorder,\n    inputValidationWarningBackground,\n    inputValidationWarningForeground,\n    inputValidationWarningBorder,\n    inputValidationErrorBackground,\n    inputValidationErrorForeground,\n    inputValidationErrorBorder,\n};\nexport const defaultMenuStyles = {\n    shadowColor: widgetShadow,\n    borderColor: menuBorder,\n    foregroundColor: menuForeground,\n    backgroundColor: menuBackground,\n    selectionForegroundColor: menuSelectionForeground,\n    selectionBackgroundColor: menuSelectionBackground,\n    selectionBorderColor: menuSelectionBorder,\n    separatorColor: menuSeparatorBackground,\n    scrollbarShadow: scrollbarShadow,\n    scrollbarSliderBackground: scrollbarSliderBackground,\n    scrollbarSliderHoverBackground: scrollbarSliderHoverBackground,\n    scrollbarSliderActiveBackground: scrollbarSliderActiveBackground\n};\nexport function attachMenuStyler(widget, themeService, style) {\n    return attachStyler(themeService, Object.assign(Object.assign({}, defaultMenuStyles), style), widget);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Color scheme used by the OS and by color themes.\n */\nexport var ColorScheme;\n(function (ColorScheme) {\n    ColorScheme[\"DARK\"] = \"dark\";\n    ColorScheme[\"LIGHT\"] = \"light\";\n    ColorScheme[\"HIGH_CONTRAST_DARK\"] = \"hcDark\";\n    ColorScheme[\"HIGH_CONTRAST_LIGHT\"] = \"hcLight\";\n})(ColorScheme || (ColorScheme = {}));\nexport function isHighContrast(scheme) {\n    return scheme === ColorScheme.HIGH_CONTRAST_DARK || scheme === ColorScheme.HIGH_CONTRAST_LIGHT;\n}\nexport function isDark(scheme) {\n    return scheme === ColorScheme.DARK || scheme === ColorScheme.HIGH_CONTRAST_DARK;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CSSIcon } from '../../../base/common/codicons.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport * as platform from '../../registry/common/platform.js';\nimport { ColorScheme } from './theme.js';\nexport const IThemeService = createDecorator('themeService');\nexport var ThemeColor;\n(function (ThemeColor) {\n    function isThemeColor(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string';\n    }\n    ThemeColor.isThemeColor = isThemeColor;\n})(ThemeColor || (ThemeColor = {}));\nexport function themeColorFromId(id) {\n    return { id };\n}\nexport var ThemeIcon;\n(function (ThemeIcon) {\n    function isThemeIcon(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string' && (typeof obj.color === 'undefined' || ThemeColor.isThemeColor(obj.color));\n    }\n    ThemeIcon.isThemeIcon = isThemeIcon;\n    const _regexFromString = new RegExp(`^\\\\$\\\\((${CSSIcon.iconNameExpression}(?:${CSSIcon.iconModifierExpression})?)\\\\)$`);\n    function fromString(str) {\n        const match = _regexFromString.exec(str);\n        if (!match) {\n            return undefined;\n        }\n        const [, name] = match;\n        return { id: name };\n    }\n    ThemeIcon.fromString = fromString;\n    function fromId(id) {\n        return { id };\n    }\n    ThemeIcon.fromId = fromId;\n    function modify(icon, modifier) {\n        let id = icon.id;\n        const tildeIndex = id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            id = id.substring(0, tildeIndex);\n        }\n        if (modifier) {\n            id = `${id}~${modifier}`;\n        }\n        return { id };\n    }\n    ThemeIcon.modify = modify;\n    function getModifier(icon) {\n        const tildeIndex = icon.id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            return icon.id.substring(tildeIndex + 1);\n        }\n        return undefined;\n    }\n    ThemeIcon.getModifier = getModifier;\n    function isEqual(ti1, ti2) {\n        var _a, _b;\n        return ti1.id === ti2.id && ((_a = ti1.color) === null || _a === void 0 ? void 0 : _a.id) === ((_b = ti2.color) === null || _b === void 0 ? void 0 : _b.id);\n    }\n    ThemeIcon.isEqual = isEqual;\n    function asThemeIcon(codicon, color) {\n        return { id: codicon.id, color: color ? themeColorFromId(color) : undefined };\n    }\n    ThemeIcon.asThemeIcon = asThemeIcon;\n    ThemeIcon.asClassNameArray = CSSIcon.asClassNameArray;\n    ThemeIcon.asClassName = CSSIcon.asClassName;\n    ThemeIcon.asCSSSelector = CSSIcon.asCSSSelector;\n})(ThemeIcon || (ThemeIcon = {}));\nexport function getThemeTypeSelector(type) {\n    switch (type) {\n        case ColorScheme.DARK: return 'vs-dark';\n        case ColorScheme.HIGH_CONTRAST_DARK: return 'hc-black';\n        case ColorScheme.HIGH_CONTRAST_LIGHT: return 'hc-light';\n        default: return 'vs';\n    }\n}\n// static theming participant\nexport const Extensions = {\n    ThemingContribution: 'base.contributions.theming'\n};\nclass ThemingRegistry {\n    constructor() {\n        this.themingParticipants = [];\n        this.themingParticipants = [];\n        this.onThemingParticipantAddedEmitter = new Emitter();\n    }\n    onColorThemeChange(participant) {\n        this.themingParticipants.push(participant);\n        this.onThemingParticipantAddedEmitter.fire(participant);\n        return toDisposable(() => {\n            const idx = this.themingParticipants.indexOf(participant);\n            this.themingParticipants.splice(idx, 1);\n        });\n    }\n    getThemingParticipants() {\n        return this.themingParticipants;\n    }\n}\nconst themingRegistry = new ThemingRegistry();\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\nexport function registerThemingParticipant(participant) {\n    return themingRegistry.onColorThemeChange(participant);\n}\n/**\n * Utility base class for all themable components.\n */\nexport class Themable extends Disposable {\n    constructor(themeService) {\n        super();\n        this.themeService = themeService;\n        this.theme = themeService.getColorTheme();\n        // Hook up to theme changes\n        this._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\n    }\n    onThemeChange(theme) {\n        this.theme = theme;\n        this.updateStyles();\n    }\n    updateStyles() {\n        // Subclasses to override\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IUndoRedoService = createDecorator('undoRedoService');\nexport class ResourceEditStackSnapshot {\n    constructor(resource, elements) {\n        this.resource = resource;\n        this.elements = elements;\n    }\n}\nexport class UndoRedoGroup {\n    constructor() {\n        this.id = UndoRedoGroup._ID++;\n        this.order = 1;\n    }\n    nextOrder() {\n        if (this.id === 0) {\n            return 0;\n        }\n        return this.order++;\n    }\n}\nUndoRedoGroup._ID = 0;\nUndoRedoGroup.None = new UndoRedoGroup();\nexport class UndoRedoSource {\n    constructor() {\n        this.id = UndoRedoSource._ID++;\n        this.order = 1;\n    }\n    nextOrder() {\n        if (this.id === 0) {\n            return 0;\n        }\n        return this.order++;\n    }\n}\nUndoRedoSource._ID = 0;\nUndoRedoSource.None = new UndoRedoSource();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Disposable, isDisposable } from '../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport Severity from '../../../base/common/severity.js';\nimport * as nls from '../../../nls.js';\nimport { IDialogService } from '../../dialogs/common/dialogs.js';\nimport { registerSingleton } from '../../instantiation/common/extensions.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { IUndoRedoService, ResourceEditStackSnapshot, UndoRedoGroup, UndoRedoSource } from './undoRedo.js';\nconst DEBUG = false;\nfunction getResourceLabel(resource) {\n    return resource.scheme === Schemas.file ? resource.fsPath : resource.path;\n}\nlet stackElementCounter = 0;\nclass ResourceStackElement {\n    constructor(actual, resourceLabel, strResource, groupId, groupOrder, sourceId, sourceOrder) {\n        this.id = (++stackElementCounter);\n        this.type = 0 /* UndoRedoElementType.Resource */;\n        this.actual = actual;\n        this.label = actual.label;\n        this.confirmBeforeUndo = actual.confirmBeforeUndo || false;\n        this.resourceLabel = resourceLabel;\n        this.strResource = strResource;\n        this.resourceLabels = [this.resourceLabel];\n        this.strResources = [this.strResource];\n        this.groupId = groupId;\n        this.groupOrder = groupOrder;\n        this.sourceId = sourceId;\n        this.sourceOrder = sourceOrder;\n        this.isValid = true;\n    }\n    setValid(isValid) {\n        this.isValid = isValid;\n    }\n    toString() {\n        return `[id:${this.id}] [group:${this.groupId}] [${this.isValid ? '  VALID' : 'INVALID'}] ${this.actual.constructor.name} - ${this.actual}`;\n    }\n}\nclass ResourceReasonPair {\n    constructor(resourceLabel, reason) {\n        this.resourceLabel = resourceLabel;\n        this.reason = reason;\n    }\n}\nclass RemovedResources {\n    constructor() {\n        this.elements = new Map();\n    }\n    createMessage() {\n        const externalRemoval = [];\n        const noParallelUniverses = [];\n        for (const [, element] of this.elements) {\n            const dest = (element.reason === 0 /* RemovedResourceReason.ExternalRemoval */\n                ? externalRemoval\n                : noParallelUniverses);\n            dest.push(element.resourceLabel);\n        }\n        const messages = [];\n        if (externalRemoval.length > 0) {\n            messages.push(nls.localize({ key: 'externalRemoval', comment: ['{0} is a list of filenames'] }, \"The following files have been closed and modified on disk: {0}.\", externalRemoval.join(', ')));\n        }\n        if (noParallelUniverses.length > 0) {\n            messages.push(nls.localize({ key: 'noParallelUniverses', comment: ['{0} is a list of filenames'] }, \"The following files have been modified in an incompatible way: {0}.\", noParallelUniverses.join(', ')));\n        }\n        return messages.join('\\n');\n    }\n    get size() {\n        return this.elements.size;\n    }\n    has(strResource) {\n        return this.elements.has(strResource);\n    }\n    set(strResource, value) {\n        this.elements.set(strResource, value);\n    }\n    delete(strResource) {\n        return this.elements.delete(strResource);\n    }\n}\nclass WorkspaceStackElement {\n    constructor(actual, resourceLabels, strResources, groupId, groupOrder, sourceId, sourceOrder) {\n        this.id = (++stackElementCounter);\n        this.type = 1 /* UndoRedoElementType.Workspace */;\n        this.actual = actual;\n        this.label = actual.label;\n        this.confirmBeforeUndo = actual.confirmBeforeUndo || false;\n        this.resourceLabels = resourceLabels;\n        this.strResources = strResources;\n        this.groupId = groupId;\n        this.groupOrder = groupOrder;\n        this.sourceId = sourceId;\n        this.sourceOrder = sourceOrder;\n        this.removedResources = null;\n        this.invalidatedResources = null;\n    }\n    canSplit() {\n        return (typeof this.actual.split === 'function');\n    }\n    removeResource(resourceLabel, strResource, reason) {\n        if (!this.removedResources) {\n            this.removedResources = new RemovedResources();\n        }\n        if (!this.removedResources.has(strResource)) {\n            this.removedResources.set(strResource, new ResourceReasonPair(resourceLabel, reason));\n        }\n    }\n    setValid(resourceLabel, strResource, isValid) {\n        if (isValid) {\n            if (this.invalidatedResources) {\n                this.invalidatedResources.delete(strResource);\n                if (this.invalidatedResources.size === 0) {\n                    this.invalidatedResources = null;\n                }\n            }\n        }\n        else {\n            if (!this.invalidatedResources) {\n                this.invalidatedResources = new RemovedResources();\n            }\n            if (!this.invalidatedResources.has(strResource)) {\n                this.invalidatedResources.set(strResource, new ResourceReasonPair(resourceLabel, 0 /* RemovedResourceReason.ExternalRemoval */));\n            }\n        }\n    }\n    toString() {\n        return `[id:${this.id}] [group:${this.groupId}] [${this.invalidatedResources ? 'INVALID' : '  VALID'}] ${this.actual.constructor.name} - ${this.actual}`;\n    }\n}\nclass ResourceEditStack {\n    constructor(resourceLabel, strResource) {\n        this.resourceLabel = resourceLabel;\n        this.strResource = strResource;\n        this._past = [];\n        this._future = [];\n        this.locked = false;\n        this.versionId = 1;\n    }\n    dispose() {\n        for (const element of this._past) {\n            if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* RemovedResourceReason.ExternalRemoval */);\n            }\n        }\n        for (const element of this._future) {\n            if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* RemovedResourceReason.ExternalRemoval */);\n            }\n        }\n        this.versionId++;\n    }\n    toString() {\n        const result = [];\n        result.push(`* ${this.strResource}:`);\n        for (let i = 0; i < this._past.length; i++) {\n            result.push(`   * [UNDO] ${this._past[i]}`);\n        }\n        for (let i = this._future.length - 1; i >= 0; i--) {\n            result.push(`   * [REDO] ${this._future[i]}`);\n        }\n        return result.join('\\n');\n    }\n    flushAllElements() {\n        this._past = [];\n        this._future = [];\n        this.versionId++;\n    }\n    _setElementValidFlag(element, isValid) {\n        if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n            element.setValid(this.resourceLabel, this.strResource, isValid);\n        }\n        else {\n            element.setValid(isValid);\n        }\n    }\n    setElementsValidFlag(isValid, filter) {\n        for (const element of this._past) {\n            if (filter(element.actual)) {\n                this._setElementValidFlag(element, isValid);\n            }\n        }\n        for (const element of this._future) {\n            if (filter(element.actual)) {\n                this._setElementValidFlag(element, isValid);\n            }\n        }\n    }\n    pushElement(element) {\n        // remove the future\n        for (const futureElement of this._future) {\n            if (futureElement.type === 1 /* UndoRedoElementType.Workspace */) {\n                futureElement.removeResource(this.resourceLabel, this.strResource, 1 /* RemovedResourceReason.NoParallelUniverses */);\n            }\n        }\n        this._future = [];\n        this._past.push(element);\n        this.versionId++;\n    }\n    createSnapshot(resource) {\n        const elements = [];\n        for (let i = 0, len = this._past.length; i < len; i++) {\n            elements.push(this._past[i].id);\n        }\n        for (let i = this._future.length - 1; i >= 0; i--) {\n            elements.push(this._future[i].id);\n        }\n        return new ResourceEditStackSnapshot(resource, elements);\n    }\n    restoreSnapshot(snapshot) {\n        const snapshotLength = snapshot.elements.length;\n        let isOK = true;\n        let snapshotIndex = 0;\n        let removePastAfter = -1;\n        for (let i = 0, len = this._past.length; i < len; i++, snapshotIndex++) {\n            const element = this._past[i];\n            if (isOK && (snapshotIndex >= snapshotLength || element.id !== snapshot.elements[snapshotIndex])) {\n                isOK = false;\n                removePastAfter = 0;\n            }\n            if (!isOK && element.type === 1 /* UndoRedoElementType.Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* RemovedResourceReason.ExternalRemoval */);\n            }\n        }\n        let removeFutureBefore = -1;\n        for (let i = this._future.length - 1; i >= 0; i--, snapshotIndex++) {\n            const element = this._future[i];\n            if (isOK && (snapshotIndex >= snapshotLength || element.id !== snapshot.elements[snapshotIndex])) {\n                isOK = false;\n                removeFutureBefore = i;\n            }\n            if (!isOK && element.type === 1 /* UndoRedoElementType.Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* RemovedResourceReason.ExternalRemoval */);\n            }\n        }\n        if (removePastAfter !== -1) {\n            this._past = this._past.slice(0, removePastAfter);\n        }\n        if (removeFutureBefore !== -1) {\n            this._future = this._future.slice(removeFutureBefore + 1);\n        }\n        this.versionId++;\n    }\n    getElements() {\n        const past = [];\n        const future = [];\n        for (const element of this._past) {\n            past.push(element.actual);\n        }\n        for (const element of this._future) {\n            future.push(element.actual);\n        }\n        return { past, future };\n    }\n    getClosestPastElement() {\n        if (this._past.length === 0) {\n            return null;\n        }\n        return this._past[this._past.length - 1];\n    }\n    getSecondClosestPastElement() {\n        if (this._past.length < 2) {\n            return null;\n        }\n        return this._past[this._past.length - 2];\n    }\n    getClosestFutureElement() {\n        if (this._future.length === 0) {\n            return null;\n        }\n        return this._future[this._future.length - 1];\n    }\n    hasPastElements() {\n        return (this._past.length > 0);\n    }\n    hasFutureElements() {\n        return (this._future.length > 0);\n    }\n    splitPastWorkspaceElement(toRemove, individualMap) {\n        for (let j = this._past.length - 1; j >= 0; j--) {\n            if (this._past[j] === toRemove) {\n                if (individualMap.has(this.strResource)) {\n                    // gets replaced\n                    this._past[j] = individualMap.get(this.strResource);\n                }\n                else {\n                    // gets deleted\n                    this._past.splice(j, 1);\n                }\n                break;\n            }\n        }\n        this.versionId++;\n    }\n    splitFutureWorkspaceElement(toRemove, individualMap) {\n        for (let j = this._future.length - 1; j >= 0; j--) {\n            if (this._future[j] === toRemove) {\n                if (individualMap.has(this.strResource)) {\n                    // gets replaced\n                    this._future[j] = individualMap.get(this.strResource);\n                }\n                else {\n                    // gets deleted\n                    this._future.splice(j, 1);\n                }\n                break;\n            }\n        }\n        this.versionId++;\n    }\n    moveBackward(element) {\n        this._past.pop();\n        this._future.push(element);\n        this.versionId++;\n    }\n    moveForward(element) {\n        this._future.pop();\n        this._past.push(element);\n        this.versionId++;\n    }\n}\nclass EditStackSnapshot {\n    constructor(editStacks) {\n        this.editStacks = editStacks;\n        this._versionIds = [];\n        for (let i = 0, len = this.editStacks.length; i < len; i++) {\n            this._versionIds[i] = this.editStacks[i].versionId;\n        }\n    }\n    isValid() {\n        for (let i = 0, len = this.editStacks.length; i < len; i++) {\n            if (this._versionIds[i] !== this.editStacks[i].versionId) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nconst missingEditStack = new ResourceEditStack('', '');\nmissingEditStack.locked = true;\nlet UndoRedoService = class UndoRedoService {\n    constructor(_dialogService, _notificationService) {\n        this._dialogService = _dialogService;\n        this._notificationService = _notificationService;\n        this._editStacks = new Map();\n        this._uriComparisonKeyComputers = [];\n    }\n    getUriComparisonKey(resource) {\n        for (const uriComparisonKeyComputer of this._uriComparisonKeyComputers) {\n            if (uriComparisonKeyComputer[0] === resource.scheme) {\n                return uriComparisonKeyComputer[1].getComparisonKey(resource);\n            }\n        }\n        return resource.toString();\n    }\n    _print(label) {\n        console.log(`------------------------------------`);\n        console.log(`AFTER ${label}: `);\n        const str = [];\n        for (const element of this._editStacks) {\n            str.push(element[1].toString());\n        }\n        console.log(str.join('\\n'));\n    }\n    pushElement(element, group = UndoRedoGroup.None, source = UndoRedoSource.None) {\n        if (element.type === 0 /* UndoRedoElementType.Resource */) {\n            const resourceLabel = getResourceLabel(element.resource);\n            const strResource = this.getUriComparisonKey(element.resource);\n            this._pushElement(new ResourceStackElement(element, resourceLabel, strResource, group.id, group.nextOrder(), source.id, source.nextOrder()));\n        }\n        else {\n            const seen = new Set();\n            const resourceLabels = [];\n            const strResources = [];\n            for (const resource of element.resources) {\n                const resourceLabel = getResourceLabel(resource);\n                const strResource = this.getUriComparisonKey(resource);\n                if (seen.has(strResource)) {\n                    continue;\n                }\n                seen.add(strResource);\n                resourceLabels.push(resourceLabel);\n                strResources.push(strResource);\n            }\n            if (resourceLabels.length === 1) {\n                this._pushElement(new ResourceStackElement(element, resourceLabels[0], strResources[0], group.id, group.nextOrder(), source.id, source.nextOrder()));\n            }\n            else {\n                this._pushElement(new WorkspaceStackElement(element, resourceLabels, strResources, group.id, group.nextOrder(), source.id, source.nextOrder()));\n            }\n        }\n        if (DEBUG) {\n            this._print('pushElement');\n        }\n    }\n    _pushElement(element) {\n        for (let i = 0, len = element.strResources.length; i < len; i++) {\n            const resourceLabel = element.resourceLabels[i];\n            const strResource = element.strResources[i];\n            let editStack;\n            if (this._editStacks.has(strResource)) {\n                editStack = this._editStacks.get(strResource);\n            }\n            else {\n                editStack = new ResourceEditStack(resourceLabel, strResource);\n                this._editStacks.set(strResource, editStack);\n            }\n            editStack.pushElement(element);\n        }\n    }\n    getLastElement(resource) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            if (editStack.hasFutureElements()) {\n                return null;\n            }\n            const closestPastElement = editStack.getClosestPastElement();\n            return closestPastElement ? closestPastElement.actual : null;\n        }\n        return null;\n    }\n    _splitPastWorkspaceElement(toRemove, ignoreResources) {\n        const individualArr = toRemove.actual.split();\n        const individualMap = new Map();\n        for (const _element of individualArr) {\n            const resourceLabel = getResourceLabel(_element.resource);\n            const strResource = this.getUriComparisonKey(_element.resource);\n            const element = new ResourceStackElement(_element, resourceLabel, strResource, 0, 0, 0, 0);\n            individualMap.set(element.strResource, element);\n        }\n        for (const strResource of toRemove.strResources) {\n            if (ignoreResources && ignoreResources.has(strResource)) {\n                continue;\n            }\n            const editStack = this._editStacks.get(strResource);\n            editStack.splitPastWorkspaceElement(toRemove, individualMap);\n        }\n    }\n    _splitFutureWorkspaceElement(toRemove, ignoreResources) {\n        const individualArr = toRemove.actual.split();\n        const individualMap = new Map();\n        for (const _element of individualArr) {\n            const resourceLabel = getResourceLabel(_element.resource);\n            const strResource = this.getUriComparisonKey(_element.resource);\n            const element = new ResourceStackElement(_element, resourceLabel, strResource, 0, 0, 0, 0);\n            individualMap.set(element.strResource, element);\n        }\n        for (const strResource of toRemove.strResources) {\n            if (ignoreResources && ignoreResources.has(strResource)) {\n                continue;\n            }\n            const editStack = this._editStacks.get(strResource);\n            editStack.splitFutureWorkspaceElement(toRemove, individualMap);\n        }\n    }\n    removeElements(resource) {\n        const strResource = typeof resource === 'string' ? resource : this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            editStack.dispose();\n            this._editStacks.delete(strResource);\n        }\n        if (DEBUG) {\n            this._print('removeElements');\n        }\n    }\n    setElementsValidFlag(resource, isValid, filter) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            editStack.setElementsValidFlag(isValid, filter);\n        }\n        if (DEBUG) {\n            this._print('setElementsValidFlag');\n        }\n    }\n    createSnapshot(resource) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.createSnapshot(resource);\n        }\n        return new ResourceEditStackSnapshot(resource, []);\n    }\n    restoreSnapshot(snapshot) {\n        const strResource = this.getUriComparisonKey(snapshot.resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            editStack.restoreSnapshot(snapshot);\n            if (!editStack.hasPastElements() && !editStack.hasFutureElements()) {\n                // the edit stack is now empty, just remove it entirely\n                editStack.dispose();\n                this._editStacks.delete(strResource);\n            }\n        }\n        if (DEBUG) {\n            this._print('restoreSnapshot');\n        }\n    }\n    getElements(resource) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.getElements();\n        }\n        return { past: [], future: [] };\n    }\n    _findClosestUndoElementWithSource(sourceId) {\n        if (!sourceId) {\n            return [null, null];\n        }\n        // find an element with the sourceId and with the highest sourceOrder ready to be undone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestPastElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.sourceId === sourceId) {\n                if (!matchedElement || candidate.sourceOrder > matchedElement.sourceOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    canUndo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestUndoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? true : false;\n        }\n        const strResource = this.getUriComparisonKey(resourceOrSource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.hasPastElements();\n        }\n        return false;\n    }\n    _onError(err, element) {\n        onUnexpectedError(err);\n        // An error occurred while undoing or redoing => drop the undo/redo stack for all affected resources\n        for (const strResource of element.strResources) {\n            this.removeElements(strResource);\n        }\n        this._notificationService.error(err);\n    }\n    _acquireLocks(editStackSnapshot) {\n        // first, check if all locks can be acquired\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.locked) {\n                throw new Error('Cannot acquire edit stack lock');\n            }\n        }\n        // can acquire all locks\n        for (const editStack of editStackSnapshot.editStacks) {\n            editStack.locked = true;\n        }\n        return () => {\n            // release all locks\n            for (const editStack of editStackSnapshot.editStacks) {\n                editStack.locked = false;\n            }\n        };\n    }\n    _safeInvokeWithLocks(element, invoke, editStackSnapshot, cleanup, continuation) {\n        const releaseLocks = this._acquireLocks(editStackSnapshot);\n        let result;\n        try {\n            result = invoke();\n        }\n        catch (err) {\n            releaseLocks();\n            cleanup.dispose();\n            return this._onError(err, element);\n        }\n        if (result) {\n            // result is Promise<void>\n            return result.then(() => {\n                releaseLocks();\n                cleanup.dispose();\n                return continuation();\n            }, (err) => {\n                releaseLocks();\n                cleanup.dispose();\n                return this._onError(err, element);\n            });\n        }\n        else {\n            // result is void\n            releaseLocks();\n            cleanup.dispose();\n            return continuation();\n        }\n    }\n    _invokeWorkspacePrepare(element) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof element.actual.prepareUndoRedo === 'undefined') {\n                return Disposable.None;\n            }\n            const result = element.actual.prepareUndoRedo();\n            if (typeof result === 'undefined') {\n                return Disposable.None;\n            }\n            return result;\n        });\n    }\n    _invokeResourcePrepare(element, callback) {\n        if (element.actual.type !== 1 /* UndoRedoElementType.Workspace */ || typeof element.actual.prepareUndoRedo === 'undefined') {\n            // no preparation needed\n            return callback(Disposable.None);\n        }\n        const r = element.actual.prepareUndoRedo();\n        if (!r) {\n            // nothing to clean up\n            return callback(Disposable.None);\n        }\n        if (isDisposable(r)) {\n            return callback(r);\n        }\n        return r.then((disposable) => {\n            return callback(disposable);\n        });\n    }\n    _getAffectedEditStacks(element) {\n        const affectedEditStacks = [];\n        for (const strResource of element.strResources) {\n            affectedEditStacks.push(this._editStacks.get(strResource) || missingEditStack);\n        }\n        return new EditStackSnapshot(affectedEditStacks);\n    }\n    _tryToSplitAndUndo(strResource, element, ignoreResources, message) {\n        if (element.canSplit()) {\n            this._splitPastWorkspaceElement(element, ignoreResources);\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError(this._undo(strResource, 0, true));\n        }\n        else {\n            // Cannot safely split this workspace element => flush all undo/redo stacks\n            for (const strResource of element.strResources) {\n                this.removeElements(strResource);\n            }\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError();\n        }\n    }\n    _checkWorkspaceUndo(strResource, element, editStackSnapshot, checkInvalidatedResources) {\n        if (element.removedResources) {\n            return this._tryToSplitAndUndo(strResource, element, element.removedResources, nls.localize({ key: 'cannotWorkspaceUndo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not undo '{0}' across all files. {1}\", element.label, element.removedResources.createMessage()));\n        }\n        if (checkInvalidatedResources && element.invalidatedResources) {\n            return this._tryToSplitAndUndo(strResource, element, element.invalidatedResources, nls.localize({ key: 'cannotWorkspaceUndo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not undo '{0}' across all files. {1}\", element.label, element.invalidatedResources.createMessage()));\n        }\n        // this must be the last past element in all the impacted resources!\n        const cannotUndoDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.getClosestPastElement() !== element) {\n                cannotUndoDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotUndoDueToResources.length > 0) {\n            return this._tryToSplitAndUndo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceUndoDueToChanges', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not undo '{0}' across all files because changes were made to {1}\", element.label, cannotUndoDueToResources.join(', ')));\n        }\n        const cannotLockDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.locked) {\n                cannotLockDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotLockDueToResources.length > 0) {\n            return this._tryToSplitAndUndo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceUndoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not undo '{0}' across all files because there is already an undo or redo operation running on {1}\", element.label, cannotLockDueToResources.join(', ')));\n        }\n        // check if new stack elements were added in the meantime...\n        if (!editStackSnapshot.isValid()) {\n            return this._tryToSplitAndUndo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceUndoDueToInMeantimeUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not undo '{0}' across all files because an undo or redo operation occurred in the meantime\", element.label));\n        }\n        return null;\n    }\n    _workspaceUndo(strResource, element, undoConfirmed) {\n        const affectedEditStacks = this._getAffectedEditStacks(element);\n        const verificationError = this._checkWorkspaceUndo(strResource, element, affectedEditStacks, /*invalidated resources will be checked after the prepare call*/ false);\n        if (verificationError) {\n            return verificationError.returnValue;\n        }\n        return this._confirmAndExecuteWorkspaceUndo(strResource, element, affectedEditStacks, undoConfirmed);\n    }\n    _isPartOfUndoGroup(element) {\n        if (!element.groupId) {\n            return false;\n        }\n        // check that there is at least another element with the same groupId ready to be undone\n        for (const [, editStack] of this._editStacks) {\n            const pastElement = editStack.getClosestPastElement();\n            if (!pastElement) {\n                continue;\n            }\n            if (pastElement === element) {\n                const secondPastElement = editStack.getSecondClosestPastElement();\n                if (secondPastElement && secondPastElement.groupId === element.groupId) {\n                    // there is another element with the same group id in the same stack!\n                    return true;\n                }\n            }\n            if (pastElement.groupId === element.groupId) {\n                // there is another element with the same group id in another stack!\n                return true;\n            }\n        }\n        return false;\n    }\n    _confirmAndExecuteWorkspaceUndo(strResource, element, editStackSnapshot, undoConfirmed) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (element.canSplit() && !this._isPartOfUndoGroup(element)) {\n                // this element can be split\n                const result = yield this._dialogService.show(Severity.Info, nls.localize('confirmWorkspace', \"Would you like to undo '{0}' across all files?\", element.label), [\n                    nls.localize({ key: 'ok', comment: ['{0} denotes a number that is > 1'] }, \"Undo in {0} Files\", editStackSnapshot.editStacks.length),\n                    nls.localize('nok', \"Undo this File\"),\n                    nls.localize('cancel', \"Cancel\"),\n                ], {\n                    cancelId: 2\n                });\n                if (result.choice === 2) {\n                    // choice: cancel\n                    return;\n                }\n                if (result.choice === 1) {\n                    // choice: undo this file\n                    this._splitPastWorkspaceElement(element, null);\n                    return this._undo(strResource, 0, true);\n                }\n                // choice: undo in all files\n                // At this point, it is possible that the element has been made invalid in the meantime (due to the confirmation await)\n                const verificationError1 = this._checkWorkspaceUndo(strResource, element, editStackSnapshot, /*invalidated resources will be checked after the prepare call*/ false);\n                if (verificationError1) {\n                    return verificationError1.returnValue;\n                }\n                undoConfirmed = true;\n            }\n            // prepare\n            let cleanup;\n            try {\n                cleanup = yield this._invokeWorkspacePrepare(element);\n            }\n            catch (err) {\n                return this._onError(err, element);\n            }\n            // At this point, it is possible that the element has been made invalid in the meantime (due to the prepare await)\n            const verificationError2 = this._checkWorkspaceUndo(strResource, element, editStackSnapshot, /*now also check that there are no more invalidated resources*/ true);\n            if (verificationError2) {\n                cleanup.dispose();\n                return verificationError2.returnValue;\n            }\n            for (const editStack of editStackSnapshot.editStacks) {\n                editStack.moveBackward(element);\n            }\n            return this._safeInvokeWithLocks(element, () => element.actual.undo(), editStackSnapshot, cleanup, () => this._continueUndoInGroup(element.groupId, undoConfirmed));\n        });\n    }\n    _resourceUndo(editStack, element, undoConfirmed) {\n        if (!element.isValid) {\n            // invalid element => immediately flush edit stack!\n            editStack.flushAllElements();\n            return;\n        }\n        if (editStack.locked) {\n            const message = nls.localize({ key: 'cannotResourceUndoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation.'] }, \"Could not undo '{0}' because there is already an undo or redo operation running.\", element.label);\n            this._notificationService.warn(message);\n            return;\n        }\n        return this._invokeResourcePrepare(element, (cleanup) => {\n            editStack.moveBackward(element);\n            return this._safeInvokeWithLocks(element, () => element.actual.undo(), new EditStackSnapshot([editStack]), cleanup, () => this._continueUndoInGroup(element.groupId, undoConfirmed));\n        });\n    }\n    _findClosestUndoElementInGroup(groupId) {\n        if (!groupId) {\n            return [null, null];\n        }\n        // find another element with the same groupId and with the highest groupOrder ready to be undone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestPastElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.groupId === groupId) {\n                if (!matchedElement || candidate.groupOrder > matchedElement.groupOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    _continueUndoInGroup(groupId, undoConfirmed) {\n        if (!groupId) {\n            return;\n        }\n        const [, matchedStrResource] = this._findClosestUndoElementInGroup(groupId);\n        if (matchedStrResource) {\n            return this._undo(matchedStrResource, 0, undoConfirmed);\n        }\n    }\n    undo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestUndoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? this._undo(matchedStrResource, resourceOrSource.id, false) : undefined;\n        }\n        if (typeof resourceOrSource === 'string') {\n            return this._undo(resourceOrSource, 0, false);\n        }\n        return this._undo(this.getUriComparisonKey(resourceOrSource), 0, false);\n    }\n    _undo(strResource, sourceId = 0, undoConfirmed) {\n        if (!this._editStacks.has(strResource)) {\n            return;\n        }\n        const editStack = this._editStacks.get(strResource);\n        const element = editStack.getClosestPastElement();\n        if (!element) {\n            return;\n        }\n        if (element.groupId) {\n            // this element is a part of a group, we need to make sure undoing in a group is in order\n            const [matchedElement, matchedStrResource] = this._findClosestUndoElementInGroup(element.groupId);\n            if (element !== matchedElement && matchedStrResource) {\n                // there is an element in the same group that should be undone before this one\n                return this._undo(matchedStrResource, sourceId, undoConfirmed);\n            }\n        }\n        const shouldPromptForConfirmation = (element.sourceId !== sourceId || element.confirmBeforeUndo);\n        if (shouldPromptForConfirmation && !undoConfirmed) {\n            // Hit a different source or the element asks for prompt before undo, prompt for confirmation\n            return this._confirmAndContinueUndo(strResource, sourceId, element);\n        }\n        try {\n            if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n                return this._workspaceUndo(strResource, element, undoConfirmed);\n            }\n            else {\n                return this._resourceUndo(editStack, element, undoConfirmed);\n            }\n        }\n        finally {\n            if (DEBUG) {\n                this._print('undo');\n            }\n        }\n    }\n    _confirmAndContinueUndo(strResource, sourceId, element) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this._dialogService.show(Severity.Info, nls.localize('confirmDifferentSource', \"Would you like to undo '{0}'?\", element.label), [\n                nls.localize('confirmDifferentSource.yes', \"Yes\"),\n                nls.localize('confirmDifferentSource.no', \"No\"),\n            ], {\n                cancelId: 1\n            });\n            if (result.choice === 1) {\n                // choice: cancel\n                return;\n            }\n            // choice: undo\n            return this._undo(strResource, sourceId, true);\n        });\n    }\n    _findClosestRedoElementWithSource(sourceId) {\n        if (!sourceId) {\n            return [null, null];\n        }\n        // find an element with sourceId and with the lowest sourceOrder ready to be redone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestFutureElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.sourceId === sourceId) {\n                if (!matchedElement || candidate.sourceOrder < matchedElement.sourceOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    canRedo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestRedoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? true : false;\n        }\n        const strResource = this.getUriComparisonKey(resourceOrSource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.hasFutureElements();\n        }\n        return false;\n    }\n    _tryToSplitAndRedo(strResource, element, ignoreResources, message) {\n        if (element.canSplit()) {\n            this._splitFutureWorkspaceElement(element, ignoreResources);\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError(this._redo(strResource));\n        }\n        else {\n            // Cannot safely split this workspace element => flush all undo/redo stacks\n            for (const strResource of element.strResources) {\n                this.removeElements(strResource);\n            }\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError();\n        }\n    }\n    _checkWorkspaceRedo(strResource, element, editStackSnapshot, checkInvalidatedResources) {\n        if (element.removedResources) {\n            return this._tryToSplitAndRedo(strResource, element, element.removedResources, nls.localize({ key: 'cannotWorkspaceRedo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not redo '{0}' across all files. {1}\", element.label, element.removedResources.createMessage()));\n        }\n        if (checkInvalidatedResources && element.invalidatedResources) {\n            return this._tryToSplitAndRedo(strResource, element, element.invalidatedResources, nls.localize({ key: 'cannotWorkspaceRedo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not redo '{0}' across all files. {1}\", element.label, element.invalidatedResources.createMessage()));\n        }\n        // this must be the last future element in all the impacted resources!\n        const cannotRedoDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.getClosestFutureElement() !== element) {\n                cannotRedoDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotRedoDueToResources.length > 0) {\n            return this._tryToSplitAndRedo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceRedoDueToChanges', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not redo '{0}' across all files because changes were made to {1}\", element.label, cannotRedoDueToResources.join(', ')));\n        }\n        const cannotLockDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.locked) {\n                cannotLockDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotLockDueToResources.length > 0) {\n            return this._tryToSplitAndRedo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceRedoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not redo '{0}' across all files because there is already an undo or redo operation running on {1}\", element.label, cannotLockDueToResources.join(', ')));\n        }\n        // check if new stack elements were added in the meantime...\n        if (!editStackSnapshot.isValid()) {\n            return this._tryToSplitAndRedo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceRedoDueToInMeantimeUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not redo '{0}' across all files because an undo or redo operation occurred in the meantime\", element.label));\n        }\n        return null;\n    }\n    _workspaceRedo(strResource, element) {\n        const affectedEditStacks = this._getAffectedEditStacks(element);\n        const verificationError = this._checkWorkspaceRedo(strResource, element, affectedEditStacks, /*invalidated resources will be checked after the prepare call*/ false);\n        if (verificationError) {\n            return verificationError.returnValue;\n        }\n        return this._executeWorkspaceRedo(strResource, element, affectedEditStacks);\n    }\n    _executeWorkspaceRedo(strResource, element, editStackSnapshot) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // prepare\n            let cleanup;\n            try {\n                cleanup = yield this._invokeWorkspacePrepare(element);\n            }\n            catch (err) {\n                return this._onError(err, element);\n            }\n            // At this point, it is possible that the element has been made invalid in the meantime (due to the prepare await)\n            const verificationError = this._checkWorkspaceRedo(strResource, element, editStackSnapshot, /*now also check that there are no more invalidated resources*/ true);\n            if (verificationError) {\n                cleanup.dispose();\n                return verificationError.returnValue;\n            }\n            for (const editStack of editStackSnapshot.editStacks) {\n                editStack.moveForward(element);\n            }\n            return this._safeInvokeWithLocks(element, () => element.actual.redo(), editStackSnapshot, cleanup, () => this._continueRedoInGroup(element.groupId));\n        });\n    }\n    _resourceRedo(editStack, element) {\n        if (!element.isValid) {\n            // invalid element => immediately flush edit stack!\n            editStack.flushAllElements();\n            return;\n        }\n        if (editStack.locked) {\n            const message = nls.localize({ key: 'cannotResourceRedoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation.'] }, \"Could not redo '{0}' because there is already an undo or redo operation running.\", element.label);\n            this._notificationService.warn(message);\n            return;\n        }\n        return this._invokeResourcePrepare(element, (cleanup) => {\n            editStack.moveForward(element);\n            return this._safeInvokeWithLocks(element, () => element.actual.redo(), new EditStackSnapshot([editStack]), cleanup, () => this._continueRedoInGroup(element.groupId));\n        });\n    }\n    _findClosestRedoElementInGroup(groupId) {\n        if (!groupId) {\n            return [null, null];\n        }\n        // find another element with the same groupId and with the lowest groupOrder ready to be redone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestFutureElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.groupId === groupId) {\n                if (!matchedElement || candidate.groupOrder < matchedElement.groupOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    _continueRedoInGroup(groupId) {\n        if (!groupId) {\n            return;\n        }\n        const [, matchedStrResource] = this._findClosestRedoElementInGroup(groupId);\n        if (matchedStrResource) {\n            return this._redo(matchedStrResource);\n        }\n    }\n    redo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestRedoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? this._redo(matchedStrResource) : undefined;\n        }\n        if (typeof resourceOrSource === 'string') {\n            return this._redo(resourceOrSource);\n        }\n        return this._redo(this.getUriComparisonKey(resourceOrSource));\n    }\n    _redo(strResource) {\n        if (!this._editStacks.has(strResource)) {\n            return;\n        }\n        const editStack = this._editStacks.get(strResource);\n        const element = editStack.getClosestFutureElement();\n        if (!element) {\n            return;\n        }\n        if (element.groupId) {\n            // this element is a part of a group, we need to make sure redoing in a group is in order\n            const [matchedElement, matchedStrResource] = this._findClosestRedoElementInGroup(element.groupId);\n            if (element !== matchedElement && matchedStrResource) {\n                // there is an element in the same group that should be redone before this one\n                return this._redo(matchedStrResource);\n            }\n        }\n        try {\n            if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n                return this._workspaceRedo(strResource, element);\n            }\n            else {\n                return this._resourceRedo(editStack, element);\n            }\n        }\n        finally {\n            if (DEBUG) {\n                this._print('redo');\n            }\n        }\n    }\n};\nUndoRedoService = __decorate([\n    __param(0, IDialogService),\n    __param(1, INotificationService)\n], UndoRedoService);\nexport { UndoRedoService };\nclass WorkspaceVerificationError {\n    constructor(returnValue) {\n        this.returnValue = returnValue;\n    }\n}\nregisterSingleton(IUndoRedoService, UndoRedoService);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { localize } from '../../../nls.js';\nimport { TernarySearchTree } from '../../../base/common/map.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IWorkspaceContextService = createDecorator('contextService');\nexport function isSingleFolderWorkspaceIdentifier(obj) {\n    const singleFolderIdentifier = obj;\n    return typeof (singleFolderIdentifier === null || singleFolderIdentifier === void 0 ? void 0 : singleFolderIdentifier.id) === 'string' && URI.isUri(singleFolderIdentifier.uri);\n}\nexport function toWorkspaceIdentifier(workspace) {\n    // Multi root\n    if (workspace.configuration) {\n        return {\n            id: workspace.id,\n            configPath: workspace.configuration\n        };\n    }\n    // Single folder\n    if (workspace.folders.length === 1) {\n        return {\n            id: workspace.id,\n            uri: workspace.folders[0].uri\n        };\n    }\n    // Empty workspace\n    return undefined;\n}\nexport class Workspace {\n    constructor(_id, folders, _transient, _configuration, _ignorePathCasing) {\n        this._id = _id;\n        this._transient = _transient;\n        this._configuration = _configuration;\n        this._ignorePathCasing = _ignorePathCasing;\n        this._foldersMap = TernarySearchTree.forUris(this._ignorePathCasing, () => true);\n        this.folders = folders;\n    }\n    get folders() {\n        return this._folders;\n    }\n    set folders(folders) {\n        this._folders = folders;\n        this.updateFoldersMap();\n    }\n    get id() {\n        return this._id;\n    }\n    get transient() {\n        return this._transient;\n    }\n    get configuration() {\n        return this._configuration;\n    }\n    set configuration(configuration) {\n        this._configuration = configuration;\n    }\n    getFolder(resource) {\n        if (!resource) {\n            return null;\n        }\n        return this._foldersMap.findSubstr(resource) || null;\n    }\n    updateFoldersMap() {\n        this._foldersMap = TernarySearchTree.forUris(this._ignorePathCasing, () => true);\n        for (const folder of this.folders) {\n            this._foldersMap.set(folder.uri, folder);\n        }\n    }\n    toJSON() {\n        return { id: this.id, folders: this.folders, transient: this.transient, configuration: this.configuration };\n    }\n}\nexport class WorkspaceFolder {\n    constructor(data, \n    /**\n     * Provides access to the original metadata for this workspace\n     * folder. This can be different from the metadata provided in\n     * this class:\n     * - raw paths can be relative\n     * - raw paths are not normalized\n     */\n    raw) {\n        this.raw = raw;\n        this.uri = data.uri;\n        this.index = data.index;\n        this.name = data.name;\n    }\n    toJSON() {\n        return { uri: this.uri, name: this.name, index: this.index };\n    }\n}\nexport const WORKSPACE_EXTENSION = 'code-workspace';\nexport const WORKSPACE_FILTER = [{ name: localize('codeWorkspace', \"Code Workspace\"), extensions: [WORKSPACE_EXTENSION] }];\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IWorkspaceTrustManagementService = createDecorator('workspaceTrustManagementService');\n"],"names":["LogLevel","ILogService","createDecorator","DEFAULT_LOG_LEVEL","Info","AbstractLogger","arguments","level","_onDidChangeLogLevel","_register","Emitter","this","fire","Disposable","ConsoleLogger","logLevel","setLevel","message","getLevel","Trace","args","console","log","Debug","Error","LogService","logger","trace","debug","info","error","DoubleResourceMap","_byResource","ResourceMap","_byOwner","Map","resource","owner","value","ownerMap","get","set","resourceMap","removedA","removedB","delete","key","_a","_b","_c","_d","values","Iterable","URI","map","MarkerStats","service","errors","infos","warnings","unknowns","_data","_service","_subscription","onMarkerChanged","_update","dispose","resources","oldStats","_substract","newStats","_resourceStats","_add","result","scheme","Schemas","read","severity","MarkerSeverity","op","MarkerService","_onMarkerChanged","DebounceEmitter","delay","merge","_merge","event","_stats","changeOne","markerData","isFalsyOrEmpty","markers","data","marker","_toMarker","push","changes","existing","first","isNonEmptyArray","groups","array","length","filter","Object","create","severities","take","_accept","newLen","iterable","code","source","startLineNumber","startColumn","endLineNumber","endColumn","relatedInformation","tags","undefined","all","item","Array","from","keys","IMarkerData","compare","a","b","_displayStrings","localize","Warning","toString","fromSeverity","Severity","Hint","toSeverity","emptyString","makeKeyOptionalMessage","useMessage","replace","join","makeKey","IMarkerService","BaseSeverity","INotificationService","NoOpNotification","__decorate","decorators","target","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","Link","container","_link","options","openerService","_enabled","el","append","$","tabIndex","href","title","label","setAttribute","onClickEmitter","DomEmitter","onKeyPress","onEnterPress","Event","e","StandardKeyboardEvent","keyCode","onTap","TouchEventType","Gesture","onOpen","enabled","EventHelper","opener","open","allowCommands","style","pointerEvents","opacity","cursor","IOpenerService","registerThemingParticipant","theme","collector","textLinkForegroundColor","getColor","textLinkForeground","addRule","textLinkActiveForegroundColor","textLinkActiveForeground","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","apply","NullOpenerService","freeze","_serviceBrand","registerOpener","registerValidator","registerExternalUriResolver","setDefaultExternalOpener","registerExternalOpener","resolveExternalUri","uri","resolved","matchesScheme","equalsIgnoreCase","startsWithIgnoreCase","matchesSomeScheme","schemes","some","extractSelection","selection","match","exec","fragment","parseInt","with","IProgressService","Progress","total","worked","callback","_value","None","report","IEditorProgressService","TriggerAction","isPicksWithActive","obj","candidate","isArray","items","isFastAndSlowPicks","picks","additionalPicks","PickerQuickAccessProvider","prefix","picker","token","disposables","DisposableStore","canAcceptInBackground","matchOnLabel","matchOnDescription","matchOnDetail","sortByLabel","picksCts","picksDisposable","add","MutableDisposable","updatePickerItems","picksDisposables","busy","CancellationTokenSource","picksToken","picksFilter","substr","trim","providedPicks","_getPicks","applyPicks","skipEmpty","activeItem","active","noResultsPick","activeItems","fastPicksApplied","slowPicksApplied","timeout","FAST_PICKS_RACE_DELAY","isCancellationRequested","awaitedAdditionalPicks","activePick","additionalActivePick","fallbackActivePick","fallbackActivePickCandidate","indexOf","awaitedPicks","onDidChangeValue","onDidAccept","selectedItems","accept","inBackground","hide","keyMods","onDidTriggerItemButton","button","trigger","buttonIndex","buttons","action","NO_ACTION","CLOSE_PICKER","REFRESH_PICKER","REMOVE_ITEM","index","slice","removed","splice","keepScrollPositionBefore","keepScrollPosition","AbstractCommandsQuickAccessProvider","instantiationService","keybindingService","commandService","telemetryService","dialogService","PREFIX","commandsHistory","createInstance","CommandsHistory","getCommandPicks","allCommandPicks","filteredCommandPicks","commandPick","labelHighlights","withNullAsUndefined","WORD_FILTER","aliasHighlights","commandAlias","highlights","detail","showAlias","commandId","f","mapLabelToCommand","existingCommandForLabel","description","sort","commandPickA","commandPickB","commandACounter","peek","commandBCounter","localeCompare","commandPicks","addSeparator","keybinding","lookupKeybinding","ariaLabel","getAriaLabel","type","assign","publicLog2","id","executeCommand","isCancellationError","show","toErrorMessage","or","matchesPrefix","matchesWords","matchesContiguousSubString","IInstantiationService","IKeybindingService","ICommandService","ITelemetryService","IDialogService","storageService","configurationService","configuredCommandsHistoryLength","updateConfiguration","load","registerListeners","onDidChangeConfiguration","getConfiguredCommandHistoryLength","cache","limit","saveState","serializedCache","raw","PREF_KEY_CACHE","JSON","parse","LRUCache","usesLRU","entries","forEach","entry","counter","getNumber","PREF_KEY_COUNTER","store","stringify","configuredCommandHistoryLength","getValue","workbench","commandPalette","history","DEFAULT_COMMANDS_HISTORY_LENGTH","IStorageService","IConfigurationService","HelpQuickAccessProvider","quickInputService","registry","Registry","Extensions","quickAccess","preserveValue","providerDescriptor","getQuickAccessProvider","getQuickAccessProviders","providers","providerA","providerB","provider","helpEntries","helpEntry","IQuickInputService","QuickAccessController","mapProviderToDescriptor","lastAcceptedPickerValues","visibleQuickAccess","doShowOrPick","pick","getOrInstantiateProvider","descriptor","visibleDescriptor","adjustValueSelection","newValue","newValueCandidateWithoutPrefix","defaultFilterValue","DefaultQuickAccessFilterValue","createQuickPick","placeholder","quickNavigate","quickNavigateConfiguration","hideInput","itemActivation","ItemActivation","contextKey","filterValue","substring","pickPromise","DeferredPromise","once","onWillAccept","veto","registerPickerListeners","cts","provide","onDidHide","cancel","complete","p","valueSelection","toDisposable","ctor","QuickInputService","contextKeyService","themeService","accessibilityService","layoutService","contexts","_controller","createController","_quickAccess","host","defaultOptions","idPrefix","ignoreFocusOut","isScreenReaderOptimized","backKeybindingLabel","setContextKey","returnFocus","focus","createList","user","delegate","renderers","WorkbenchList","styles","computeStyles","controller","QuickInputController","layout","dimension","offset","quickPickTop","onDidLayout","onShow","resetContextKeys","onHide","RawContextKey","bindTo","context","reset","CancellationToken","applyStyles","widget","quickInputBackground","quickInputForeground","quickInputTitleBackground","contrastBorder","widgetShadow","inputBox","inputForeground","inputBackground","inputBorder","inputValidationInfoBackground","inputValidationInfoForeground","inputValidationInfoBorder","inputValidationWarningBackground","inputValidationWarningForeground","inputValidationWarningBorder","inputValidationErrorBackground","inputValidationErrorForeground","inputValidationErrorBorder","countBadge","badgeBackground","badgeForeground","badgeBorder","buttonForeground","buttonBackground","buttonHoverBackground","buttonBorder","progressBar","progressBarBackground","keybindingLabel","keybindingLabelBackground","keybindingLabelForeground","keybindingLabelBorder","keybindingLabelBottomBorder","keybindingLabelShadow","list","listBackground","listInactiveFocusForeground","quickInputListFocusForeground","listInactiveSelectionIconForeground","quickInputListFocusIconForeground","listInactiveFocusBackground","quickInputListFocusBackground","listFocusOutline","activeContrastBorder","listInactiveFocusOutline","pickerGroupBorder","pickerGroupForeground","Themable","IContextKeyService","IThemeService","IAccessibilityService","ILayoutService","Quickaccess","QuickAccessRegistry","defaultProvider","coalesce","find","startsWith","RegistryImpl","Assert","Types","has","SeverityIcon","className","Codicon","errorIconForeground","problemsErrorIconForeground","errorCodiconSelector","warningIconForeground","problemsWarningIconForeground","warningCodiconSelector","infoIconForeground","problemsInfoIconForeground","infoCodiconSelector","WillSaveStateReason","TARGET_KEY","AbstractStorageService","flushInterval","DEFAULT_FLUSH_INTERVAL","_onDidChangeValue","PauseableEmitter","_onDidChangeTarget","_onWillSaveState","onWillSaveState","_workspaceKeyTargets","_profileKeyTargets","_applicationKeyTargets","scope","getKeyTargets","fallbackValue","getStorage","getBoolean","isUndefinedOrNull","remove","withPausedEmitters","updateKeyTarget","fn","pause","resume","keyTargets","loadKeyTargets","applicationKeyTargets","profileKeyTargets","workspaceKeyTargets","keysRaw","InMemoryStorageService","applicationStorage","Storage","InMemoryStorageDatabase","profileStorage","workspaceStorage","onDidChangeStorage","emitDidChangeValue","getIconsStyleSheet","onDidChangeEmmiter","iconRegistry","getIconRegistry","onDidChange","onDidProductIconThemeChange","getCSS","productIconTheme","getProductIconTheme","UnthemedProductIconTheme","usedFontIds","formatIconRule","contribution","definition","getIcon","fontContribution","font","fontCharacter","asCSSPropertyValue","rules","getIcons","rule","fontWeight","weight","fontStyle","src","l","asCSSUrl","location","format","defaults","ThemeIcon","asCssVariableName","colorIdent","ColorContribution","ColorRegistry","_onDidChangeSchema","onDidChangeSchema","colorSchema","properties","colorReferenceSchema","enum","enumDescriptions","colorsById","needsTransparency","deprecationMessage","colorContribution","propertySchema","defaultSnippets","body","colorDesc","resolveColorValue","cat1","cat2","k","colorRegistry","registerColor","o","hcLight","hcDark","light","platform","ifArg","thenArg","elseArg","foreground","dark","nls","errorForeground","iconForeground","transparent","focusBorder","Color","textCodeBlockBackground","inputActiveOptionBorder","inputActiveOptionBackground","inputActiveOptionForeground","selectBackground","selectForeground","selectBorder","lighten","darken","buttonSecondaryBackground","scrollbarShadow","scrollbarSliderBackground","scrollbarSliderHoverBackground","scrollbarSliderActiveBackground","editorErrorBackground","editorErrorForeground","editorErrorBorder","editorWarningBackground","editorWarningForeground","editorWarningBorder","editorInfoBackground","editorInfoForeground","editorInfoBorder","editorHintForeground","editorHintBorder","editorBackground","editorForeground","editorWidgetBackground","editorWidgetForeground","editorWidgetBorder","editorWidgetResizeBorder","RGBA","editorSelectionBackground","editorSelectionForeground","editorInactiveSelection","editorSelectionHighlight","lessProminent","editorSelectionHighlightBorder","editorFindMatch","editorFindMatchHighlight","editorFindRangeHighlight","editorFindMatchBorder","editorFindMatchHighlightBorder","editorFindRangeHighlightBorder","editorHoverHighlight","editorHoverBackground","editorHoverForeground","editorHoverBorder","editorHoverStatusBarBackground","editorActiveLinkForeground","editorInlayHintForeground","editorInlayHintBackground","editorInlayHintTypeForeground","editorInlayHintTypeBackground","editorInlayHintParameterForeground","editorInlayHintParameterBackground","editorLightBulbForeground","editorLightBulbAutoFixForeground","defaultInsertColor","defaultRemoveColor","diffInserted","diffRemoved","diffInsertedLine","diffRemovedLine","diffInsertedLineGutter","diffRemovedLineGutter","diffOverviewRulerInserted","diffOverviewRulerRemoved","diffInsertedOutline","diffRemovedOutline","diffBorder","diffDiagonalFill","listFocusBackground","listFocusForeground","listFocusAndSelectionOutline","listActiveSelectionBackground","listActiveSelectionForeground","listActiveSelectionIconForeground","listInactiveSelectionBackground","listInactiveSelectionForeground","listHoverBackground","listHoverForeground","listDropBackground","listHighlightForeground","listFocusHighlightForeground","if","else","listFilterWidgetBackground","listFilterWidgetOutline","listFilterWidgetNoMatchesOutline","listFilterWidgetShadow","treeIndentGuidesStroke","tableColumnsBorder","tableOddRowsBackgroundColor","_deprecatedQuickInputListFocusBackground","oneOf","menuBorder","menuForeground","menuBackground","menuSelectionForeground","menuSelectionBackground","menuSelectionBorder","menuSeparatorBackground","toolbarHoverBackground","currentBaseColor","incomingBaseColor","commonBaseColor","contentTransparency","mergeCurrentHeaderBackground","mergeIncomingHeaderBackground","mergeCommonHeaderBackground","mergeBorder","overviewRulerFindMatchForeground","overviewRulerSelectionHighlightForeground","minimapFindMatch","minimapSelectionOccurrenceHighlight","minimapSelection","minimapError","minimapWarning","minimapBackground","minimapForegroundOpacity","minimapSliderBackground","minimapSliderHoverBackground","minimapSliderActiveBackground","colorValue","factor","colorValues","backgroundColorValue","transparency","background","transform","color","defines","backgroundColor","isDarkerThan","assertNever","executeTransform","workbenchColorsSchemaId","schemaRegistry","JSONExtensions","registerSchema","getColorSchema","delayer","RunOnceScheduler","notifySchemaChanged","isScheduled","schedule","IconContribution","IconFontDefinition","getDefinition","toJSONObject","iconFont","s","fromJSONObject","json","stringOrUndef","isString","every","IconRegistry","_onDidChange","iconSchema","definitions","icons","fontId","additionalProperties","iconReferenceSchema","pattern","CSSIcon","iconsById","iconFontsById","markdownDescription","enumIndex","iconContribution","$ref","sorter","i1","i2","classNames","reference","contributions","registerIcon","icon","initialize","iconsSchemaId","getIconSchema","widgetClose","styleMap","attachStyler","widgetOrCallback","getColorTheme","onDidColorThemeChange","attachBadgeStyler","attachListStyler","overrides","defaultListStyles","listFocusAndSelectionBackground","listFocusAndSelectionForeground","listSelectionOutline","listHoverOutline","defaultMenuStyles","shadowColor","borderColor","foregroundColor","selectionForegroundColor","selectionBackgroundColor","selectionBorderColor","separatorColor","attachMenuStyler","ColorScheme","isHighContrast","HIGH_CONTRAST_DARK","HIGH_CONTRAST_LIGHT","isDark","DARK","ThemeColor","themeColorFromId","getThemeTypeSelector","isThemeColor","isThemeIcon","_regexFromString","RegExp","fromString","str","fromId","modify","modifier","tildeIndex","lastIndexOf","getModifier","isEqual","ti1","ti2","asThemeIcon","codicon","asClassNameArray","asClassName","asCSSSelector","ThemingContribution","themingRegistry","ThemingRegistry","themingParticipants","onThemingParticipantAddedEmitter","participant","idx","onColorThemeChange","onThemeChange","updateStyles","IUndoRedoService","ResourceEditStackSnapshot","elements","UndoRedoGroup","_ID","order","UndoRedoSource","DEBUG","getResourceLabel","fsPath","path","stackElementCounter","ResourceStackElement","actual","resourceLabel","strResource","groupId","groupOrder","sourceId","sourceOrder","confirmBeforeUndo","resourceLabels","strResources","isValid","constructor","name","ResourceReasonPair","reason","RemovedResources","externalRemoval","noParallelUniverses","element","messages","comment","size","WorkspaceStackElement","removedResources","invalidatedResources","split","ResourceEditStack","_past","_future","locked","versionId","removeResource","setValid","_setElementValidFlag","futureElement","len","snapshot","snapshotLength","isOK","snapshotIndex","removePastAfter","removeFutureBefore","past","future","toRemove","individualMap","j","pop","EditStackSnapshot","editStacks","_versionIds","missingEditStack","UndoRedoService","_dialogService","_notificationService","_editStacks","_uriComparisonKeyComputers","uriComparisonKeyComputer","getComparisonKey","group","getUriComparisonKey","_pushElement","nextOrder","seen","Set","editStack","pushElement","hasFutureElements","closestPastElement","getClosestPastElement","ignoreResources","individualArr","_element","splitPastWorkspaceElement","splitFutureWorkspaceElement","setElementsValidFlag","createSnapshot","restoreSnapshot","hasPastElements","getElements","matchedElement","matchedStrResource","resourceOrSource","_findClosestUndoElementWithSource","err","onUnexpectedError","removeElements","editStackSnapshot","invoke","cleanup","continuation","releaseLocks","_acquireLocks","_onError","prepareUndoRedo","isDisposable","disposable","affectedEditStacks","canSplit","_splitPastWorkspaceElement","warn","WorkspaceVerificationError","_undo","checkInvalidatedResources","_tryToSplitAndUndo","createMessage","cannotUndoDueToResources","cannotLockDueToResources","undoConfirmed","_getAffectedEditStacks","verificationError","_checkWorkspaceUndo","returnValue","_confirmAndExecuteWorkspaceUndo","pastElement","secondPastElement","getSecondClosestPastElement","_isPartOfUndoGroup","cancelId","choice","verificationError1","_invokeWorkspacePrepare","verificationError2","moveBackward","_safeInvokeWithLocks","undo","_continueUndoInGroup","_invokeResourcePrepare","flushAllElements","_findClosestUndoElementInGroup","shouldPromptForConfirmation","_confirmAndContinueUndo","_workspaceUndo","_resourceUndo","getClosestFutureElement","_findClosestRedoElementWithSource","_splitFutureWorkspaceElement","_redo","_tryToSplitAndRedo","cannotRedoDueToResources","_checkWorkspaceRedo","_executeWorkspaceRedo","moveForward","redo","_continueRedoInGroup","_findClosestRedoElementInGroup","_workspaceRedo","_resourceRedo","registerSingleton","IWorkspaceContextService","isSingleFolderWorkspaceIdentifier","singleFolderIdentifier","toWorkspaceIdentifier","workspace","configuration","configPath","folders","WorkspaceFolder","WORKSPACE_EXTENSION","IWorkspaceTrustManagementService"],"sourceRoot":""}