{"version":3,"file":"static/js/monaco-editor-vendor.b74e11c3.e5a2173e.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/contrib/dnd/browser/dragAndDropCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dnd/browser/dnd.js","../node_modules/monaco-editor/esm/vs/editor/contrib/documentSymbols/browser/documentSymbols.js","../node_modules/monaco-editor/esm/vs/editor/contrib/documentSymbols/browser/outlineModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dropIntoEditor/browser/dropIntoEditorContribution.js","../node_modules/monaco-editor/esm/vs/editor/contrib/editorState/browser/keybindingCancellation.js","../node_modules/monaco-editor/esm/vs/editor/contrib/editorState/browser/editorState.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findDecorations.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/replaceAllCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/replacePattern.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findOptionsWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findState.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class DragAndDropCommand {\n    constructor(selection, targetPosition, copy) {\n        this.selection = selection;\n        this.targetPosition = targetPosition;\n        this.copy = copy;\n        this.targetSelection = null;\n    }\n    getEditOperations(model, builder) {\n        const text = model.getValueInRange(this.selection);\n        if (!this.copy) {\n            builder.addEditOperation(this.selection, null);\n        }\n        builder.addEditOperation(new Range(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column), text);\n        if (this.selection.containsPosition(this.targetPosition) && !(this.copy && (this.selection.getEndPosition().equals(this.targetPosition) || this.selection.getStartPosition().equals(this.targetPosition)) // we allow users to paste content beside the selection\n        )) {\n            this.targetSelection = this.selection;\n            return;\n        }\n        if (this.copy) {\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.selection.endLineNumber - this.selection.startLineNumber + this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        if (this.targetPosition.lineNumber > this.selection.endLineNumber) {\n            // Drag the selection downwards\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        if (this.targetPosition.lineNumber < this.selection.endLineNumber) {\n            // Drag the selection upwards\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber + this.selection.endLineNumber - this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        // The target position is at the same line as the selection's end position.\n        if (this.selection.endColumn <= this.targetPosition.column) {\n            // The target position is after the selection's end position\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn :\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column :\n                this.selection.endColumn);\n        }\n        else {\n            // The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column + this.selection.endColumn - this.selection.startColumn);\n        }\n    }\n    computeCursorState(model, helper) {\n        return this.targetSelection;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { isMacintosh } from '../../../../base/common/platform.js';\nimport './dnd.css';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { DragAndDropCommand } from './dragAndDropCommand.js';\nfunction hasTriggerModifier(e) {\n    if (isMacintosh) {\n        return e.altKey;\n    }\n    else {\n        return e.ctrlKey;\n    }\n}\nexport class DragAndDropController extends Disposable {\n    constructor(editor) {\n        super();\n        this._editor = editor;\n        this._dndDecorationIds = this._editor.createDecorationsCollection();\n        this._register(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\n        this._register(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\n        this._register(this._editor.onMouseDrag((e) => this._onEditorMouseDrag(e)));\n        this._register(this._editor.onMouseDrop((e) => this._onEditorMouseDrop(e)));\n        this._register(this._editor.onMouseDropCanceled(() => this._onEditorMouseDropCanceled()));\n        this._register(this._editor.onKeyDown((e) => this.onEditorKeyDown(e)));\n        this._register(this._editor.onKeyUp((e) => this.onEditorKeyUp(e)));\n        this._register(this._editor.onDidBlurEditorWidget(() => this.onEditorBlur()));\n        this._register(this._editor.onDidBlurEditorText(() => this.onEditorBlur()));\n        this._mouseDown = false;\n        this._modifierPressed = false;\n        this._dragSelection = null;\n    }\n    onEditorBlur() {\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n        this._modifierPressed = false;\n    }\n    onEditorKeyDown(e) {\n        if (!this._editor.getOption(31 /* EditorOption.dragAndDrop */) || this._editor.getOption(18 /* EditorOption.columnSelection */)) {\n            return;\n        }\n        if (hasTriggerModifier(e)) {\n            this._modifierPressed = true;\n        }\n        if (this._mouseDown && hasTriggerModifier(e)) {\n            this._editor.updateOptions({\n                mouseStyle: 'copy'\n            });\n        }\n    }\n    onEditorKeyUp(e) {\n        if (!this._editor.getOption(31 /* EditorOption.dragAndDrop */) || this._editor.getOption(18 /* EditorOption.columnSelection */)) {\n            return;\n        }\n        if (hasTriggerModifier(e)) {\n            this._modifierPressed = false;\n        }\n        if (this._mouseDown && e.keyCode === DragAndDropController.TRIGGER_KEY_VALUE) {\n            this._editor.updateOptions({\n                mouseStyle: 'default'\n            });\n        }\n    }\n    _onEditorMouseDown(mouseEvent) {\n        this._mouseDown = true;\n    }\n    _onEditorMouseUp(mouseEvent) {\n        this._mouseDown = false;\n        // Whenever users release the mouse, the drag and drop operation should finish and the cursor should revert to text.\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n    }\n    _onEditorMouseDrag(mouseEvent) {\n        const target = mouseEvent.target;\n        if (this._dragSelection === null) {\n            const selections = this._editor.getSelections() || [];\n            const possibleSelections = selections.filter(selection => target.position && selection.containsPosition(target.position));\n            if (possibleSelections.length === 1) {\n                this._dragSelection = possibleSelections[0];\n            }\n            else {\n                return;\n            }\n        }\n        if (hasTriggerModifier(mouseEvent.event)) {\n            this._editor.updateOptions({\n                mouseStyle: 'copy'\n            });\n        }\n        else {\n            this._editor.updateOptions({\n                mouseStyle: 'default'\n            });\n        }\n        if (target.position) {\n            if (this._dragSelection.containsPosition(target.position)) {\n                this._removeDecoration();\n            }\n            else {\n                this.showAt(target.position);\n            }\n        }\n    }\n    _onEditorMouseDropCanceled() {\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n    }\n    _onEditorMouseDrop(mouseEvent) {\n        if (mouseEvent.target && (this._hitContent(mouseEvent.target) || this._hitMargin(mouseEvent.target)) && mouseEvent.target.position) {\n            const newCursorPosition = new Position(mouseEvent.target.position.lineNumber, mouseEvent.target.position.column);\n            if (this._dragSelection === null) {\n                let newSelections = null;\n                if (mouseEvent.event.shiftKey) {\n                    const primarySelection = this._editor.getSelection();\n                    if (primarySelection) {\n                        const { selectionStartLineNumber, selectionStartColumn } = primarySelection;\n                        newSelections = [new Selection(selectionStartLineNumber, selectionStartColumn, newCursorPosition.lineNumber, newCursorPosition.column)];\n                    }\n                }\n                else {\n                    newSelections = (this._editor.getSelections() || []).map(selection => {\n                        if (selection.containsPosition(newCursorPosition)) {\n                            return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\n                        }\n                        else {\n                            return selection;\n                        }\n                    });\n                }\n                // Use `mouse` as the source instead of `api` and setting the reason to explicit (to behave like any other mouse operation).\n                this._editor.setSelections(newSelections || [], 'mouse', 3 /* CursorChangeReason.Explicit */);\n            }\n            else if (!this._dragSelection.containsPosition(newCursorPosition) ||\n                ((hasTriggerModifier(mouseEvent.event) ||\n                    this._modifierPressed) && (this._dragSelection.getEndPosition().equals(newCursorPosition) || this._dragSelection.getStartPosition().equals(newCursorPosition)) // we allow users to paste content beside the selection\n                )) {\n                this._editor.pushUndoStop();\n                this._editor.executeCommand(DragAndDropController.ID, new DragAndDropCommand(this._dragSelection, newCursorPosition, hasTriggerModifier(mouseEvent.event) || this._modifierPressed));\n                this._editor.pushUndoStop();\n            }\n        }\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n    }\n    showAt(position) {\n        this._dndDecorationIds.set([{\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n                options: DragAndDropController._DECORATION_OPTIONS\n            }]);\n        this._editor.revealPosition(position, 1 /* ScrollType.Immediate */);\n    }\n    _removeDecoration() {\n        this._dndDecorationIds.clear();\n    }\n    _hitContent(target) {\n        return target.type === 6 /* MouseTargetType.CONTENT_TEXT */ ||\n            target.type === 7 /* MouseTargetType.CONTENT_EMPTY */;\n    }\n    _hitMargin(target) {\n        return target.type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */ ||\n            target.type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */ ||\n            target.type === 4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */;\n    }\n    dispose() {\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n        this._modifierPressed = false;\n        super.dispose();\n    }\n}\nDragAndDropController.ID = 'editor.contrib.dragAndDrop';\nDragAndDropController.TRIGGER_KEY_VALUE = isMacintosh ? 6 /* KeyCode.Alt */ : 5 /* KeyCode.Ctrl */;\nDragAndDropController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n    description: 'dnd-target',\n    className: 'dnd-target'\n});\nregisterEditorContribution(DragAndDropController.ID, DragAndDropController);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { IOutlineModelService } from './outlineModel.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nCommandsRegistry.registerCommand('_executeDocumentSymbolProvider', function (accessor, ...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [resource] = args;\n        assertType(URI.isUri(resource));\n        const outlineService = accessor.get(IOutlineModelService);\n        const modelService = accessor.get(ITextModelService);\n        const reference = yield modelService.createModelReference(resource);\n        try {\n            return (yield outlineService.getOrCreate(reference.object.textEditorModel, CancellationToken.None)).getTopLevelSymbols();\n        }\n        finally {\n            reference.dispose();\n        }\n    });\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { equals } from '../../../../base/common/arrays.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class TreeElement {\n    remove() {\n        var _a;\n        (_a = this.parent) === null || _a === void 0 ? void 0 : _a.children.delete(this.id);\n    }\n    static findId(candidate, container) {\n        // complex id-computation which contains the origin/extension,\n        // the parent path, and some dedupe logic when names collide\n        let candidateId;\n        if (typeof candidate === 'string') {\n            candidateId = `${container.id}/${candidate}`;\n        }\n        else {\n            candidateId = `${container.id}/${candidate.name}`;\n            if (container.children.get(candidateId) !== undefined) {\n                candidateId = `${container.id}/${candidate.name}_${candidate.range.startLineNumber}_${candidate.range.startColumn}`;\n            }\n        }\n        let id = candidateId;\n        for (let i = 0; container.children.get(id) !== undefined; i++) {\n            id = `${candidateId}_${i}`;\n        }\n        return id;\n    }\n    static empty(element) {\n        return element.children.size === 0;\n    }\n}\nexport class OutlineElement extends TreeElement {\n    constructor(id, parent, symbol) {\n        super();\n        this.id = id;\n        this.parent = parent;\n        this.symbol = symbol;\n        this.children = new Map();\n    }\n}\nexport class OutlineGroup extends TreeElement {\n    constructor(id, parent, label, order) {\n        super();\n        this.id = id;\n        this.parent = parent;\n        this.label = label;\n        this.order = order;\n        this.children = new Map();\n    }\n}\nexport class OutlineModel extends TreeElement {\n    constructor(uri) {\n        super();\n        this.uri = uri;\n        this.id = 'root';\n        this.parent = undefined;\n        this._groups = new Map();\n        this.children = new Map();\n        this.id = 'root';\n        this.parent = undefined;\n    }\n    static create(registry, textModel, token) {\n        const cts = new CancellationTokenSource(token);\n        const result = new OutlineModel(textModel.uri);\n        const provider = registry.ordered(textModel);\n        const promises = provider.map((provider, index) => {\n            var _a;\n            const id = TreeElement.findId(`provider_${index}`, result);\n            const group = new OutlineGroup(id, result, (_a = provider.displayName) !== null && _a !== void 0 ? _a : 'Unknown Outline Provider', index);\n            return Promise.resolve(provider.provideDocumentSymbols(textModel, cts.token)).then(result => {\n                for (const info of result || []) {\n                    OutlineModel._makeOutlineElement(info, group);\n                }\n                return group;\n            }, err => {\n                onUnexpectedExternalError(err);\n                return group;\n            }).then(group => {\n                if (!TreeElement.empty(group)) {\n                    result._groups.set(id, group);\n                }\n                else {\n                    group.remove();\n                }\n            });\n        });\n        const listener = registry.onDidChange(() => {\n            const newProvider = registry.ordered(textModel);\n            if (!equals(newProvider, provider)) {\n                cts.cancel();\n            }\n        });\n        return Promise.all(promises).then(() => {\n            if (cts.token.isCancellationRequested && !token.isCancellationRequested) {\n                return OutlineModel.create(registry, textModel, token);\n            }\n            else {\n                return result._compact();\n            }\n        }).finally(() => {\n            listener.dispose();\n        });\n    }\n    static _makeOutlineElement(info, container) {\n        const id = TreeElement.findId(info, container);\n        const res = new OutlineElement(id, container, info);\n        if (info.children) {\n            for (const childInfo of info.children) {\n                OutlineModel._makeOutlineElement(childInfo, res);\n            }\n        }\n        container.children.set(res.id, res);\n    }\n    _compact() {\n        let count = 0;\n        for (const [key, group] of this._groups) {\n            if (group.children.size === 0) { // empty\n                this._groups.delete(key);\n            }\n            else {\n                count += 1;\n            }\n        }\n        if (count !== 1) {\n            //\n            this.children = this._groups;\n        }\n        else {\n            // adopt all elements of the first group\n            const group = Iterable.first(this._groups.values());\n            for (const [, child] of group.children) {\n                child.parent = this;\n                this.children.set(child.id, child);\n            }\n        }\n        return this;\n    }\n    getTopLevelSymbols() {\n        const roots = [];\n        for (const child of this.children.values()) {\n            if (child instanceof OutlineElement) {\n                roots.push(child.symbol);\n            }\n            else {\n                roots.push(...Iterable.map(child.children.values(), child => child.symbol));\n            }\n        }\n        return roots.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n    }\n    asListOfDocumentSymbols() {\n        const roots = this.getTopLevelSymbols();\n        const bucket = [];\n        OutlineModel._flattenDocumentSymbols(bucket, roots, '');\n        return bucket.sort((a, b) => Position.compare(Range.getStartPosition(a.range), Range.getStartPosition(b.range)) || Position.compare(Range.getEndPosition(b.range), Range.getEndPosition(a.range)));\n    }\n    static _flattenDocumentSymbols(bucket, entries, overrideContainerLabel) {\n        for (const entry of entries) {\n            bucket.push({\n                kind: entry.kind,\n                tags: entry.tags,\n                name: entry.name,\n                detail: entry.detail,\n                containerName: entry.containerName || overrideContainerLabel,\n                range: entry.range,\n                selectionRange: entry.selectionRange,\n                children: undefined, // we flatten it...\n            });\n            // Recurse over children\n            if (entry.children) {\n                OutlineModel._flattenDocumentSymbols(bucket, entry.children, entry.name);\n            }\n        }\n    }\n}\nexport const IOutlineModelService = createDecorator('IOutlineModelService');\nlet OutlineModelService = class OutlineModelService {\n    constructor(_languageFeaturesService, debounces, modelService) {\n        this._languageFeaturesService = _languageFeaturesService;\n        this._disposables = new DisposableStore();\n        this._cache = new LRUCache(10, 0.7);\n        this._debounceInformation = debounces.for(_languageFeaturesService.documentSymbolProvider, 'DocumentSymbols', { min: 350 });\n        // don't cache outline models longer than their text model\n        this._disposables.add(modelService.onModelRemoved(textModel => {\n            this._cache.delete(textModel.id);\n        }));\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    getOrCreate(textModel, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const registry = this._languageFeaturesService.documentSymbolProvider;\n            const provider = registry.ordered(textModel);\n            let data = this._cache.get(textModel.id);\n            if (!data || data.versionId !== textModel.getVersionId() || !equals(data.provider, provider)) {\n                const source = new CancellationTokenSource();\n                data = {\n                    versionId: textModel.getVersionId(),\n                    provider,\n                    promiseCnt: 0,\n                    source,\n                    promise: OutlineModel.create(registry, textModel, source.token),\n                    model: undefined,\n                };\n                this._cache.set(textModel.id, data);\n                const now = Date.now();\n                data.promise.then(outlineModel => {\n                    data.model = outlineModel;\n                    this._debounceInformation.update(textModel, Date.now() - now);\n                }).catch(_err => {\n                    this._cache.delete(textModel.id);\n                });\n            }\n            if (data.model) {\n                // resolved -> return data\n                return data.model;\n            }\n            // increase usage counter\n            data.promiseCnt += 1;\n            const listener = token.onCancellationRequested(() => {\n                // last -> cancel provider request, remove cached promise\n                if (--data.promiseCnt === 0) {\n                    data.source.cancel();\n                    this._cache.delete(textModel.id);\n                }\n            });\n            try {\n                return yield data.promise;\n            }\n            finally {\n                listener.dispose();\n            }\n        });\n    }\n};\nOutlineModelService = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, ILanguageFeatureDebounceService),\n    __param(2, IModelService)\n], OutlineModelService);\nexport { OutlineModelService };\nregisterSingleton(IOutlineModelService, OutlineModelService, true);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { raceCancellation } from '../../../../base/common/async.js';\nimport { VSDataTransfer } from '../../../../base/common/dataTransfer.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../../base/common/mime.js';\nimport { relativePath } from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { addExternalEditorsDropData, toVSDataTransfer, UriList } from '../../../browser/dnd.js';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { IBulkEditService, ResourceEdit } from '../../../browser/services/bulkEditService.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { performSnippetEdit } from '../../snippet/browser/snippetController2.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { localize } from '../../../../nls.js';\nimport { IProgressService } from '../../../../platform/progress/common/progress.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nlet DropIntoEditorController = class DropIntoEditorController extends Disposable {\n    constructor(editor, _bulkEditService, _languageFeaturesService, _progressService, workspaceContextService) {\n        super();\n        this._bulkEditService = _bulkEditService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._progressService = _progressService;\n        this._register(editor.onDropIntoEditor(e => this.onDropIntoEditor(editor, e.position, e.event)));\n        this._languageFeaturesService.documentOnDropEditProvider.register('*', new DefaultOnDropProvider(workspaceContextService));\n    }\n    onDropIntoEditor(editor, position, dragEvent) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!dragEvent.dataTransfer || !editor.hasModel()) {\n                return;\n            }\n            const model = editor.getModel();\n            const initialModelVersion = model.getVersionId();\n            const ourDataTransfer = yield this.extractDataTransferData(dragEvent);\n            if (ourDataTransfer.size === 0) {\n                return;\n            }\n            if (editor.getModel().getVersionId() !== initialModelVersion) {\n                return;\n            }\n            const tokenSource = new EditorStateCancellationTokenSource(editor, 1 /* CodeEditorStateFlag.Value */);\n            try {\n                const providers = this._languageFeaturesService.documentOnDropEditProvider.ordered(model);\n                const edit = yield this._progressService.withProgress({\n                    location: 15 /* ProgressLocation.Notification */,\n                    delay: 750,\n                    title: localize('dropProgressTitle', \"Running drop handlers...\"),\n                    cancellable: true,\n                }, () => {\n                    return raceCancellation((() => __awaiter(this, void 0, void 0, function* () {\n                        for (const provider of providers) {\n                            const edit = yield provider.provideDocumentOnDropEdits(model, position, ourDataTransfer, tokenSource.token);\n                            if (tokenSource.token.isCancellationRequested) {\n                                return undefined;\n                            }\n                            if (edit) {\n                                return edit;\n                            }\n                        }\n                        return undefined;\n                    }))(), tokenSource.token);\n                }, () => {\n                    tokenSource.cancel();\n                });\n                if (tokenSource.token.isCancellationRequested || editor.getModel().getVersionId() !== initialModelVersion) {\n                    return;\n                }\n                if (edit) {\n                    const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n                    performSnippetEdit(editor, typeof edit.insertText === 'string' ? SnippetParser.escape(edit.insertText) : edit.insertText.snippet, [Selection.fromRange(range, 0 /* SelectionDirection.LTR */)]);\n                    if (edit.additionalEdit) {\n                        yield this._bulkEditService.apply(ResourceEdit.convert(edit.additionalEdit), { editor });\n                    }\n                    return;\n                }\n            }\n            finally {\n                tokenSource.dispose();\n            }\n        });\n    }\n    extractDataTransferData(dragEvent) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!dragEvent.dataTransfer) {\n                return new VSDataTransfer();\n            }\n            const textEditorDataTransfer = toVSDataTransfer(dragEvent.dataTransfer);\n            addExternalEditorsDropData(textEditorDataTransfer, dragEvent);\n            return textEditorDataTransfer;\n        });\n    }\n};\nDropIntoEditorController.ID = 'editor.contrib.dropIntoEditorController';\nDropIntoEditorController = __decorate([\n    __param(1, IBulkEditService),\n    __param(2, ILanguageFeaturesService),\n    __param(3, IProgressService),\n    __param(4, IWorkspaceContextService)\n], DropIntoEditorController);\nexport { DropIntoEditorController };\nlet DefaultOnDropProvider = class DefaultOnDropProvider {\n    constructor(_workspaceContextService) {\n        this._workspaceContextService = _workspaceContextService;\n    }\n    provideDocumentOnDropEdits(_model, _position, dataTransfer, _token) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const urlListEntry = dataTransfer.get(Mimes.uriList);\n            if (urlListEntry) {\n                const urlList = yield urlListEntry.asString();\n                const snippet = this.getUriListInsertText(urlList);\n                if (snippet) {\n                    return { insertText: snippet };\n                }\n            }\n            const textEntry = (_a = dataTransfer.get('text')) !== null && _a !== void 0 ? _a : dataTransfer.get(Mimes.text);\n            if (textEntry) {\n                const text = yield textEntry.asString();\n                return { insertText: text };\n            }\n            return undefined;\n        });\n    }\n    getUriListInsertText(strUriList) {\n        const uris = [];\n        for (const resource of UriList.parse(strUriList)) {\n            try {\n                uris.push(URI.parse(resource));\n            }\n            catch (_a) {\n                // noop\n            }\n        }\n        if (!uris.length) {\n            return;\n        }\n        return uris\n            .map(uri => {\n            const root = this._workspaceContextService.getWorkspaceFolder(uri);\n            if (root) {\n                const rel = relativePath(root.uri, uri);\n                if (rel) {\n                    return rel;\n                }\n            }\n            return uri.fsPath;\n        })\n            .join(' ');\n    }\n};\nDefaultOnDropProvider = __decorate([\n    __param(0, IWorkspaceContextService)\n], DefaultOnDropProvider);\nregisterEditorContribution(DropIntoEditorController.ID, DropIntoEditorController);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorCommand, registerEditorCommand } from '../../../browser/editorExtensions.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { LinkedList } from '../../../../base/common/linkedList.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { localize } from '../../../../nls.js';\nconst IEditorCancellationTokens = createDecorator('IEditorCancelService');\nconst ctxCancellableOperation = new RawContextKey('cancellableOperation', false, localize('cancellableOperation', 'Whether the editor runs a cancellable operation, e.g. like \\'Peek References\\''));\nregisterSingleton(IEditorCancellationTokens, class {\n    constructor() {\n        this._tokens = new WeakMap();\n    }\n    add(editor, cts) {\n        let data = this._tokens.get(editor);\n        if (!data) {\n            data = editor.invokeWithinContext(accessor => {\n                const key = ctxCancellableOperation.bindTo(accessor.get(IContextKeyService));\n                const tokens = new LinkedList();\n                return { key, tokens };\n            });\n            this._tokens.set(editor, data);\n        }\n        let removeFn;\n        data.key.set(true);\n        removeFn = data.tokens.push(cts);\n        return () => {\n            // remove w/o cancellation\n            if (removeFn) {\n                removeFn();\n                data.key.set(!data.tokens.isEmpty());\n                removeFn = undefined;\n            }\n        };\n    }\n    cancel(editor) {\n        const data = this._tokens.get(editor);\n        if (!data) {\n            return;\n        }\n        // remove with cancellation\n        const cts = data.tokens.pop();\n        if (cts) {\n            cts.cancel();\n            data.key.set(!data.tokens.isEmpty());\n        }\n    }\n}, true);\nexport class EditorKeybindingCancellationTokenSource extends CancellationTokenSource {\n    constructor(editor, parent) {\n        super(parent);\n        this.editor = editor;\n        this._unregister = editor.invokeWithinContext(accessor => accessor.get(IEditorCancellationTokens).add(editor, this));\n    }\n    dispose() {\n        this._unregister();\n        super.dispose();\n    }\n}\nregisterEditorCommand(new class extends EditorCommand {\n    constructor() {\n        super({\n            id: 'editor.cancelOperation',\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */,\n                primary: 9 /* KeyCode.Escape */\n            },\n            precondition: ctxCancellableOperation\n        });\n    }\n    runEditorCommand(accessor, editor) {\n        accessor.get(IEditorCancellationTokens).cancel(editor);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorKeybindingCancellationTokenSource } from './keybindingCancellation.js';\nexport class EditorState {\n    constructor(editor, flags) {\n        this.flags = flags;\n        if ((this.flags & 1 /* CodeEditorStateFlag.Value */) !== 0) {\n            const model = editor.getModel();\n            this.modelVersionId = model ? strings.format('{0}#{1}', model.uri.toString(), model.getVersionId()) : null;\n        }\n        else {\n            this.modelVersionId = null;\n        }\n        if ((this.flags & 4 /* CodeEditorStateFlag.Position */) !== 0) {\n            this.position = editor.getPosition();\n        }\n        else {\n            this.position = null;\n        }\n        if ((this.flags & 2 /* CodeEditorStateFlag.Selection */) !== 0) {\n            this.selection = editor.getSelection();\n        }\n        else {\n            this.selection = null;\n        }\n        if ((this.flags & 8 /* CodeEditorStateFlag.Scroll */) !== 0) {\n            this.scrollLeft = editor.getScrollLeft();\n            this.scrollTop = editor.getScrollTop();\n        }\n        else {\n            this.scrollLeft = -1;\n            this.scrollTop = -1;\n        }\n    }\n    _equals(other) {\n        if (!(other instanceof EditorState)) {\n            return false;\n        }\n        const state = other;\n        if (this.modelVersionId !== state.modelVersionId) {\n            return false;\n        }\n        if (this.scrollLeft !== state.scrollLeft || this.scrollTop !== state.scrollTop) {\n            return false;\n        }\n        if (!this.position && state.position || this.position && !state.position || this.position && state.position && !this.position.equals(state.position)) {\n            return false;\n        }\n        if (!this.selection && state.selection || this.selection && !state.selection || this.selection && state.selection && !this.selection.equalsRange(state.selection)) {\n            return false;\n        }\n        return true;\n    }\n    validate(editor) {\n        return this._equals(new EditorState(editor, this.flags));\n    }\n}\n/**\n * A cancellation token source that cancels when the editor changes as expressed\n * by the provided flags\n * @param range If provided, changes in position and selection within this range will not trigger cancellation\n */\nexport class EditorStateCancellationTokenSource extends EditorKeybindingCancellationTokenSource {\n    constructor(editor, flags, range, parent) {\n        super(editor, parent);\n        this._listener = new DisposableStore();\n        if (flags & 4 /* CodeEditorStateFlag.Position */) {\n            this._listener.add(editor.onDidChangeCursorPosition(e => {\n                if (!range || !Range.containsPosition(range, e.position)) {\n                    this.cancel();\n                }\n            }));\n        }\n        if (flags & 2 /* CodeEditorStateFlag.Selection */) {\n            this._listener.add(editor.onDidChangeCursorSelection(e => {\n                if (!range || !Range.containsRange(range, e.selection)) {\n                    this.cancel();\n                }\n            }));\n        }\n        if (flags & 8 /* CodeEditorStateFlag.Scroll */) {\n            this._listener.add(editor.onDidScrollChange(_ => this.cancel()));\n        }\n        if (flags & 1 /* CodeEditorStateFlag.Value */) {\n            this._listener.add(editor.onDidChangeModel(_ => this.cancel()));\n            this._listener.add(editor.onDidChangeModelContent(_ => this.cancel()));\n        }\n    }\n    dispose() {\n        this._listener.dispose();\n        super.dispose();\n    }\n}\n/**\n * A cancellation token source that cancels when the provided model changes\n */\nexport class TextModelCancellationTokenSource extends CancellationTokenSource {\n    constructor(model, parent) {\n        super(parent);\n        this._listener = model.onDidChangeContent(() => this.cancel());\n    }\n    dispose() {\n        this._listener.dispose();\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { MinimapPosition, OverviewRulerLane } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { minimapFindMatch, overviewRulerFindMatchForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nexport class FindDecorations {\n    constructor(editor) {\n        this._editor = editor;\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n        this._startPosition = this._editor.getPosition();\n    }\n    dispose() {\n        this._editor.removeDecorations(this._allDecorations());\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n    }\n    reset() {\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n    }\n    getCount() {\n        return this._decorations.length;\n    }\n    /** @deprecated use getFindScopes to support multiple selections */\n    getFindScope() {\n        if (this._findScopeDecorationIds[0]) {\n            return this._editor.getModel().getDecorationRange(this._findScopeDecorationIds[0]);\n        }\n        return null;\n    }\n    getFindScopes() {\n        if (this._findScopeDecorationIds.length) {\n            const scopes = this._findScopeDecorationIds.map(findScopeDecorationId => this._editor.getModel().getDecorationRange(findScopeDecorationId)).filter(element => !!element);\n            if (scopes.length) {\n                return scopes;\n            }\n        }\n        return null;\n    }\n    getStartPosition() {\n        return this._startPosition;\n    }\n    setStartPosition(newStartPosition) {\n        this._startPosition = newStartPosition;\n        this.setCurrentFindMatch(null);\n    }\n    _getDecorationIndex(decorationId) {\n        const index = this._decorations.indexOf(decorationId);\n        if (index >= 0) {\n            return index + 1;\n        }\n        return 1;\n    }\n    getCurrentMatchesPosition(desiredRange) {\n        const candidates = this._editor.getModel().getDecorationsInRange(desiredRange);\n        for (const candidate of candidates) {\n            const candidateOpts = candidate.options;\n            if (candidateOpts === FindDecorations._FIND_MATCH_DECORATION || candidateOpts === FindDecorations._CURRENT_FIND_MATCH_DECORATION) {\n                return this._getDecorationIndex(candidate.id);\n            }\n        }\n        // We don't know the current match position, so returns zero to show '?' in find widget\n        return 0;\n    }\n    setCurrentFindMatch(nextMatch) {\n        let newCurrentDecorationId = null;\n        let matchPosition = 0;\n        if (nextMatch) {\n            for (let i = 0, len = this._decorations.length; i < len; i++) {\n                const range = this._editor.getModel().getDecorationRange(this._decorations[i]);\n                if (nextMatch.equalsRange(range)) {\n                    newCurrentDecorationId = this._decorations[i];\n                    matchPosition = (i + 1);\n                    break;\n                }\n            }\n        }\n        if (this._highlightedDecorationId !== null || newCurrentDecorationId !== null) {\n            this._editor.changeDecorations((changeAccessor) => {\n                if (this._highlightedDecorationId !== null) {\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._FIND_MATCH_DECORATION);\n                    this._highlightedDecorationId = null;\n                }\n                if (newCurrentDecorationId !== null) {\n                    this._highlightedDecorationId = newCurrentDecorationId;\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._CURRENT_FIND_MATCH_DECORATION);\n                }\n                if (this._rangeHighlightDecorationId !== null) {\n                    changeAccessor.removeDecoration(this._rangeHighlightDecorationId);\n                    this._rangeHighlightDecorationId = null;\n                }\n                if (newCurrentDecorationId !== null) {\n                    let rng = this._editor.getModel().getDecorationRange(newCurrentDecorationId);\n                    if (rng.startLineNumber !== rng.endLineNumber && rng.endColumn === 1) {\n                        const lineBeforeEnd = rng.endLineNumber - 1;\n                        const lineBeforeEndMaxColumn = this._editor.getModel().getLineMaxColumn(lineBeforeEnd);\n                        rng = new Range(rng.startLineNumber, rng.startColumn, lineBeforeEnd, lineBeforeEndMaxColumn);\n                    }\n                    this._rangeHighlightDecorationId = changeAccessor.addDecoration(rng, FindDecorations._RANGE_HIGHLIGHT_DECORATION);\n                }\n            });\n        }\n        return matchPosition;\n    }\n    set(findMatches, findScopes) {\n        this._editor.changeDecorations((accessor) => {\n            let findMatchesOptions = FindDecorations._FIND_MATCH_DECORATION;\n            const newOverviewRulerApproximateDecorations = [];\n            if (findMatches.length > 1000) {\n                // we go into a mode where the overview ruler gets \"approximate\" decorations\n                // the reason is that the overview ruler paints all the decorations in the file and we don't want to cause freezes\n                findMatchesOptions = FindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION;\n                // approximate a distance in lines where matches should be merged\n                const lineCount = this._editor.getModel().getLineCount();\n                const height = this._editor.getLayoutInfo().height;\n                const approxPixelsPerLine = height / lineCount;\n                const mergeLinesDelta = Math.max(2, Math.ceil(3 / approxPixelsPerLine));\n                // merge decorations as much as possible\n                let prevStartLineNumber = findMatches[0].range.startLineNumber;\n                let prevEndLineNumber = findMatches[0].range.endLineNumber;\n                for (let i = 1, len = findMatches.length; i < len; i++) {\n                    const range = findMatches[i].range;\n                    if (prevEndLineNumber + mergeLinesDelta >= range.startLineNumber) {\n                        if (range.endLineNumber > prevEndLineNumber) {\n                            prevEndLineNumber = range.endLineNumber;\n                        }\n                    }\n                    else {\n                        newOverviewRulerApproximateDecorations.push({\n                            range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n                            options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n                        });\n                        prevStartLineNumber = range.startLineNumber;\n                        prevEndLineNumber = range.endLineNumber;\n                    }\n                }\n                newOverviewRulerApproximateDecorations.push({\n                    range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n                    options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n                });\n            }\n            // Find matches\n            const newFindMatchesDecorations = new Array(findMatches.length);\n            for (let i = 0, len = findMatches.length; i < len; i++) {\n                newFindMatchesDecorations[i] = {\n                    range: findMatches[i].range,\n                    options: findMatchesOptions\n                };\n            }\n            this._decorations = accessor.deltaDecorations(this._decorations, newFindMatchesDecorations);\n            // Overview ruler approximate decorations\n            this._overviewRulerApproximateDecorations = accessor.deltaDecorations(this._overviewRulerApproximateDecorations, newOverviewRulerApproximateDecorations);\n            // Range highlight\n            if (this._rangeHighlightDecorationId) {\n                accessor.removeDecoration(this._rangeHighlightDecorationId);\n                this._rangeHighlightDecorationId = null;\n            }\n            // Find scope\n            if (this._findScopeDecorationIds.length) {\n                this._findScopeDecorationIds.forEach(findScopeDecorationId => accessor.removeDecoration(findScopeDecorationId));\n                this._findScopeDecorationIds = [];\n            }\n            if (findScopes === null || findScopes === void 0 ? void 0 : findScopes.length) {\n                this._findScopeDecorationIds = findScopes.map(findScope => accessor.addDecoration(findScope, FindDecorations._FIND_SCOPE_DECORATION));\n            }\n        });\n    }\n    matchBeforePosition(position) {\n        if (this._decorations.length === 0) {\n            return null;\n        }\n        for (let i = this._decorations.length - 1; i >= 0; i--) {\n            const decorationId = this._decorations[i];\n            const r = this._editor.getModel().getDecorationRange(decorationId);\n            if (!r || r.endLineNumber > position.lineNumber) {\n                continue;\n            }\n            if (r.endLineNumber < position.lineNumber) {\n                return r;\n            }\n            if (r.endColumn > position.column) {\n                continue;\n            }\n            return r;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorations[this._decorations.length - 1]);\n    }\n    matchAfterPosition(position) {\n        if (this._decorations.length === 0) {\n            return null;\n        }\n        for (let i = 0, len = this._decorations.length; i < len; i++) {\n            const decorationId = this._decorations[i];\n            const r = this._editor.getModel().getDecorationRange(decorationId);\n            if (!r || r.startLineNumber < position.lineNumber) {\n                continue;\n            }\n            if (r.startLineNumber > position.lineNumber) {\n                return r;\n            }\n            if (r.startColumn < position.column) {\n                continue;\n            }\n            return r;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorations[0]);\n    }\n    _allDecorations() {\n        let result = [];\n        result = result.concat(this._decorations);\n        result = result.concat(this._overviewRulerApproximateDecorations);\n        if (this._findScopeDecorationIds.length) {\n            result.push(...this._findScopeDecorationIds);\n        }\n        if (this._rangeHighlightDecorationId) {\n            result.push(this._rangeHighlightDecorationId);\n        }\n        return result;\n    }\n}\nFindDecorations._CURRENT_FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n    description: 'current-find-match',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    zIndex: 13,\n    className: 'currentFindMatch',\n    showIfCollapsed: true,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    },\n    minimap: {\n        color: themeColorFromId(minimapFindMatch),\n        position: MinimapPosition.Inline\n    }\n});\nFindDecorations._FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    zIndex: 10,\n    className: 'findMatch',\n    showIfCollapsed: true,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    },\n    minimap: {\n        color: themeColorFromId(minimapFindMatch),\n        position: MinimapPosition.Inline\n    }\n});\nFindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match-no-overview',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'findMatch',\n    showIfCollapsed: true\n});\nFindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match-only-overview',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    }\n});\nFindDecorations._RANGE_HIGHLIGHT_DECORATION = ModelDecorationOptions.register({\n    description: 'find-range-highlight',\n    stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n    className: 'rangeHighlight',\n    isWholeLine: true\n});\nFindDecorations._FIND_SCOPE_DECORATION = ModelDecorationOptions.register({\n    description: 'find-scope',\n    className: 'findScope',\n    isWholeLine: true\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nexport class ReplaceAllCommand {\n    constructor(editorSelection, ranges, replaceStrings) {\n        this._editorSelection = editorSelection;\n        this._ranges = ranges;\n        this._replaceStrings = replaceStrings;\n        this._trackedEditorSelectionId = null;\n    }\n    getEditOperations(model, builder) {\n        if (this._ranges.length > 0) {\n            // Collect all edit operations\n            const ops = [];\n            for (let i = 0; i < this._ranges.length; i++) {\n                ops.push({\n                    range: this._ranges[i],\n                    text: this._replaceStrings[i]\n                });\n            }\n            // Sort them in ascending order by range starts\n            ops.sort((o1, o2) => {\n                return Range.compareRangesUsingStarts(o1.range, o2.range);\n            });\n            // Merge operations that touch each other\n            const resultOps = [];\n            let previousOp = ops[0];\n            for (let i = 1; i < ops.length; i++) {\n                if (previousOp.range.endLineNumber === ops[i].range.startLineNumber && previousOp.range.endColumn === ops[i].range.startColumn) {\n                    // These operations are one after another and can be merged\n                    previousOp.range = previousOp.range.plusRange(ops[i].range);\n                    previousOp.text = previousOp.text + ops[i].text;\n                }\n                else {\n                    resultOps.push(previousOp);\n                    previousOp = ops[i];\n                }\n            }\n            resultOps.push(previousOp);\n            for (const op of resultOps) {\n                builder.addEditOperation(op.range, op.text);\n            }\n        }\n        this._trackedEditorSelectionId = builder.trackSelection(this._editorSelection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._trackedEditorSelectionId);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { buildReplaceStringWithCasePreserved } from '../../../../base/common/search.js';\n/**\n * Assigned when the replace pattern is entirely static.\n */\nclass StaticValueReplacePattern {\n    constructor(staticValue) {\n        this.staticValue = staticValue;\n        this.kind = 0 /* ReplacePatternKind.StaticValue */;\n    }\n}\n/**\n * Assigned when the replace pattern has replacement patterns.\n */\nclass DynamicPiecesReplacePattern {\n    constructor(pieces) {\n        this.pieces = pieces;\n        this.kind = 1 /* ReplacePatternKind.DynamicPieces */;\n    }\n}\nexport class ReplacePattern {\n    constructor(pieces) {\n        if (!pieces || pieces.length === 0) {\n            this._state = new StaticValueReplacePattern('');\n        }\n        else if (pieces.length === 1 && pieces[0].staticValue !== null) {\n            this._state = new StaticValueReplacePattern(pieces[0].staticValue);\n        }\n        else {\n            this._state = new DynamicPiecesReplacePattern(pieces);\n        }\n    }\n    static fromStaticValue(value) {\n        return new ReplacePattern([ReplacePiece.staticValue(value)]);\n    }\n    get hasReplacementPatterns() {\n        return (this._state.kind === 1 /* ReplacePatternKind.DynamicPieces */);\n    }\n    buildReplaceString(matches, preserveCase) {\n        if (this._state.kind === 0 /* ReplacePatternKind.StaticValue */) {\n            if (preserveCase) {\n                return buildReplaceStringWithCasePreserved(matches, this._state.staticValue);\n            }\n            else {\n                return this._state.staticValue;\n            }\n        }\n        let result = '';\n        for (let i = 0, len = this._state.pieces.length; i < len; i++) {\n            const piece = this._state.pieces[i];\n            if (piece.staticValue !== null) {\n                // static value ReplacePiece\n                result += piece.staticValue;\n                continue;\n            }\n            // match index ReplacePiece\n            let match = ReplacePattern._substitute(piece.matchIndex, matches);\n            if (piece.caseOps !== null && piece.caseOps.length > 0) {\n                const repl = [];\n                const lenOps = piece.caseOps.length;\n                let opIdx = 0;\n                for (let idx = 0, len = match.length; idx < len; idx++) {\n                    if (opIdx >= lenOps) {\n                        repl.push(match.slice(idx));\n                        break;\n                    }\n                    switch (piece.caseOps[opIdx]) {\n                        case 'U':\n                            repl.push(match[idx].toUpperCase());\n                            break;\n                        case 'u':\n                            repl.push(match[idx].toUpperCase());\n                            opIdx++;\n                            break;\n                        case 'L':\n                            repl.push(match[idx].toLowerCase());\n                            break;\n                        case 'l':\n                            repl.push(match[idx].toLowerCase());\n                            opIdx++;\n                            break;\n                        default:\n                            repl.push(match[idx]);\n                    }\n                }\n                match = repl.join('');\n            }\n            result += match;\n        }\n        return result;\n    }\n    static _substitute(matchIndex, matches) {\n        if (matches === null) {\n            return '';\n        }\n        if (matchIndex === 0) {\n            return matches[0];\n        }\n        let remainder = '';\n        while (matchIndex > 0) {\n            if (matchIndex < matches.length) {\n                // A match can be undefined\n                const match = (matches[matchIndex] || '');\n                return match + remainder;\n            }\n            remainder = String(matchIndex % 10) + remainder;\n            matchIndex = Math.floor(matchIndex / 10);\n        }\n        return '$' + remainder;\n    }\n}\n/**\n * A replace piece can either be a static string or an index to a specific match.\n */\nexport class ReplacePiece {\n    constructor(staticValue, matchIndex, caseOps) {\n        this.staticValue = staticValue;\n        this.matchIndex = matchIndex;\n        if (!caseOps || caseOps.length === 0) {\n            this.caseOps = null;\n        }\n        else {\n            this.caseOps = caseOps.slice(0);\n        }\n    }\n    static staticValue(value) {\n        return new ReplacePiece(value, -1, null);\n    }\n    static caseOps(index, caseOps) {\n        return new ReplacePiece(null, index, caseOps);\n    }\n}\nclass ReplacePieceBuilder {\n    constructor(source) {\n        this._source = source;\n        this._lastCharIndex = 0;\n        this._result = [];\n        this._resultLen = 0;\n        this._currentStaticPiece = '';\n    }\n    emitUnchanged(toCharIndex) {\n        this._emitStatic(this._source.substring(this._lastCharIndex, toCharIndex));\n        this._lastCharIndex = toCharIndex;\n    }\n    emitStatic(value, toCharIndex) {\n        this._emitStatic(value);\n        this._lastCharIndex = toCharIndex;\n    }\n    _emitStatic(value) {\n        if (value.length === 0) {\n            return;\n        }\n        this._currentStaticPiece += value;\n    }\n    emitMatchIndex(index, toCharIndex, caseOps) {\n        if (this._currentStaticPiece.length !== 0) {\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\n            this._currentStaticPiece = '';\n        }\n        this._result[this._resultLen++] = ReplacePiece.caseOps(index, caseOps);\n        this._lastCharIndex = toCharIndex;\n    }\n    finalize() {\n        this.emitUnchanged(this._source.length);\n        if (this._currentStaticPiece.length !== 0) {\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\n            this._currentStaticPiece = '';\n        }\n        return new ReplacePattern(this._result);\n    }\n}\n/**\n * \\n\t\t\t=> inserts a LF\n * \\t\t\t\t=> inserts a TAB\n * \\\\\t\t\t=> inserts a \"\\\".\n * \\u\t\t\t=> upper-cases one character in a match.\n * \\U\t\t\t=> upper-cases ALL remaining characters in a match.\n * \\l\t\t\t=> lower-cases one character in a match.\n * \\L\t\t\t=> lower-cases ALL remaining characters in a match.\n * $$\t\t\t=> inserts a \"$\".\n * $& and $0\t=> inserts the matched substring.\n * $n\t\t\t=> Where n is a non-negative integer lesser than 100, inserts the nth parenthesized submatch string\n * everything else stays untouched\n *\n * Also see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter\n */\nexport function parseReplaceString(replaceString) {\n    if (!replaceString || replaceString.length === 0) {\n        return new ReplacePattern(null);\n    }\n    const caseOps = [];\n    const result = new ReplacePieceBuilder(replaceString);\n    for (let i = 0, len = replaceString.length; i < len; i++) {\n        const chCode = replaceString.charCodeAt(i);\n        if (chCode === 92 /* CharCode.Backslash */) {\n            // move to next char\n            i++;\n            if (i >= len) {\n                // string ends with a \\\n                break;\n            }\n            const nextChCode = replaceString.charCodeAt(i);\n            // let replaceWithCharacter: string | null = null;\n            switch (nextChCode) {\n                case 92 /* CharCode.Backslash */:\n                    // \\\\ => inserts a \"\\\"\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\\\', i + 1);\n                    break;\n                case 110 /* CharCode.n */:\n                    // \\n => inserts a LF\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\n', i + 1);\n                    break;\n                case 116 /* CharCode.t */:\n                    // \\t => inserts a TAB\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\t', i + 1);\n                    break;\n                // Case modification of string replacements, patterned after Boost, but only applied\n                // to the replacement text, not subsequent content.\n                case 117 /* CharCode.u */:\n                // \\u => upper-cases one character.\n                case 85 /* CharCode.U */:\n                // \\U => upper-cases ALL following characters.\n                case 108 /* CharCode.l */:\n                // \\l => lower-cases one character.\n                case 76 /* CharCode.L */:\n                    // \\L => lower-cases ALL following characters.\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('', i + 1);\n                    caseOps.push(String.fromCharCode(nextChCode));\n                    break;\n            }\n            continue;\n        }\n        if (chCode === 36 /* CharCode.DollarSign */) {\n            // move to next char\n            i++;\n            if (i >= len) {\n                // string ends with a $\n                break;\n            }\n            const nextChCode = replaceString.charCodeAt(i);\n            if (nextChCode === 36 /* CharCode.DollarSign */) {\n                // $$ => inserts a \"$\"\n                result.emitUnchanged(i - 1);\n                result.emitStatic('$', i + 1);\n                continue;\n            }\n            if (nextChCode === 48 /* CharCode.Digit0 */ || nextChCode === 38 /* CharCode.Ampersand */) {\n                // $& and $0 => inserts the matched substring.\n                result.emitUnchanged(i - 1);\n                result.emitMatchIndex(0, i + 1, caseOps);\n                caseOps.length = 0;\n                continue;\n            }\n            if (49 /* CharCode.Digit1 */ <= nextChCode && nextChCode <= 57 /* CharCode.Digit9 */) {\n                // $n\n                let matchIndex = nextChCode - 48 /* CharCode.Digit0 */;\n                // peek next char to probe for $nn\n                if (i + 1 < len) {\n                    const nextNextChCode = replaceString.charCodeAt(i + 1);\n                    if (48 /* CharCode.Digit0 */ <= nextNextChCode && nextNextChCode <= 57 /* CharCode.Digit9 */) {\n                        // $nn\n                        // move to next char\n                        i++;\n                        matchIndex = matchIndex * 10 + (nextNextChCode - 48 /* CharCode.Digit0 */);\n                        result.emitUnchanged(i - 2);\n                        result.emitMatchIndex(matchIndex, i + 1, caseOps);\n                        caseOps.length = 0;\n                        continue;\n                    }\n                }\n                result.emitUnchanged(i - 1);\n                result.emitMatchIndex(matchIndex, i + 1, caseOps);\n                caseOps.length = 0;\n                continue;\n            }\n        }\n    }\n    return result.finalize();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { findFirstInSorted } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler, TimeoutTimer } from '../../../../base/common/async.js';\nimport { DisposableStore, dispose } from '../../../../base/common/lifecycle.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection } from '../../../common/commands/replaceCommand.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { SearchParams } from '../../../common/model/textModelSearch.js';\nimport { FindDecorations } from './findDecorations.js';\nimport { ReplaceAllCommand } from './replaceAllCommand.js';\nimport { parseReplaceString, ReplacePattern } from './replacePattern.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nexport const CONTEXT_FIND_WIDGET_VISIBLE = new RawContextKey('findWidgetVisible', false);\nexport const CONTEXT_FIND_WIDGET_NOT_VISIBLE = CONTEXT_FIND_WIDGET_VISIBLE.toNegated();\n// Keep ContextKey use of 'Focussed' to not break when clauses\nexport const CONTEXT_FIND_INPUT_FOCUSED = new RawContextKey('findInputFocussed', false);\nexport const CONTEXT_REPLACE_INPUT_FOCUSED = new RawContextKey('replaceInputFocussed', false);\nexport const ToggleCaseSensitiveKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 33 /* KeyCode.KeyC */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 33 /* KeyCode.KeyC */ }\n};\nexport const ToggleWholeWordKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 53 /* KeyCode.KeyW */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 53 /* KeyCode.KeyW */ }\n};\nexport const ToggleRegexKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 48 /* KeyCode.KeyR */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 48 /* KeyCode.KeyR */ }\n};\nexport const ToggleSearchScopeKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 42 /* KeyCode.KeyL */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 42 /* KeyCode.KeyL */ }\n};\nexport const TogglePreserveCaseKeybinding = {\n    primary: 512 /* KeyMod.Alt */ | 46 /* KeyCode.KeyP */,\n    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 46 /* KeyCode.KeyP */ }\n};\nexport const FIND_IDS = {\n    StartFindAction: 'actions.find',\n    StartFindWithSelection: 'actions.findWithSelection',\n    StartFindWithArgs: 'editor.actions.findWithArgs',\n    NextMatchFindAction: 'editor.action.nextMatchFindAction',\n    PreviousMatchFindAction: 'editor.action.previousMatchFindAction',\n    NextSelectionMatchFindAction: 'editor.action.nextSelectionMatchFindAction',\n    PreviousSelectionMatchFindAction: 'editor.action.previousSelectionMatchFindAction',\n    StartFindReplaceAction: 'editor.action.startFindReplaceAction',\n    CloseFindWidgetCommand: 'closeFindWidget',\n    ToggleCaseSensitiveCommand: 'toggleFindCaseSensitive',\n    ToggleWholeWordCommand: 'toggleFindWholeWord',\n    ToggleRegexCommand: 'toggleFindRegex',\n    ToggleSearchScopeCommand: 'toggleFindInSelection',\n    TogglePreserveCaseCommand: 'togglePreserveCase',\n    ReplaceOneAction: 'editor.action.replaceOne',\n    ReplaceAllAction: 'editor.action.replaceAll',\n    SelectAllMatchesAction: 'editor.action.selectAllMatches'\n};\nexport const MATCHES_LIMIT = 19999;\nconst RESEARCH_DELAY = 240;\nexport class FindModelBoundToEditorModel {\n    constructor(editor, state) {\n        this._toDispose = new DisposableStore();\n        this._editor = editor;\n        this._state = state;\n        this._isDisposed = false;\n        this._startSearchingTimer = new TimeoutTimer();\n        this._decorations = new FindDecorations(editor);\n        this._toDispose.add(this._decorations);\n        this._updateDecorationsScheduler = new RunOnceScheduler(() => this.research(false), 100);\n        this._toDispose.add(this._updateDecorationsScheduler);\n        this._toDispose.add(this._editor.onDidChangeCursorPosition((e) => {\n            if (e.reason === 3 /* CursorChangeReason.Explicit */\n                || e.reason === 5 /* CursorChangeReason.Undo */\n                || e.reason === 6 /* CursorChangeReason.Redo */) {\n                this._decorations.setStartPosition(this._editor.getPosition());\n            }\n        }));\n        this._ignoreModelContentChanged = false;\n        this._toDispose.add(this._editor.onDidChangeModelContent((e) => {\n            if (this._ignoreModelContentChanged) {\n                return;\n            }\n            if (e.isFlush) {\n                // a model.setValue() was called\n                this._decorations.reset();\n            }\n            this._decorations.setStartPosition(this._editor.getPosition());\n            this._updateDecorationsScheduler.schedule();\n        }));\n        this._toDispose.add(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this.research(false, this._state.searchScope);\n    }\n    dispose() {\n        this._isDisposed = true;\n        dispose(this._startSearchingTimer);\n        this._toDispose.dispose();\n    }\n    _onStateChanged(e) {\n        if (this._isDisposed) {\n            // The find model is disposed during a find state changed event\n            return;\n        }\n        if (!this._editor.hasModel()) {\n            // The find model will be disposed momentarily\n            return;\n        }\n        if (e.searchString || e.isReplaceRevealed || e.isRegex || e.wholeWord || e.matchCase || e.searchScope) {\n            const model = this._editor.getModel();\n            if (model.isTooLargeForSyncing()) {\n                this._startSearchingTimer.cancel();\n                this._startSearchingTimer.setIfNotSet(() => {\n                    if (e.searchScope) {\n                        this.research(e.moveCursor, this._state.searchScope);\n                    }\n                    else {\n                        this.research(e.moveCursor);\n                    }\n                }, RESEARCH_DELAY);\n            }\n            else {\n                if (e.searchScope) {\n                    this.research(e.moveCursor, this._state.searchScope);\n                }\n                else {\n                    this.research(e.moveCursor);\n                }\n            }\n        }\n    }\n    static _getSearchRange(model, findScope) {\n        // If we have set now or before a find scope, use it for computing the search range\n        if (findScope) {\n            return findScope;\n        }\n        return model.getFullModelRange();\n    }\n    research(moveCursor, newFindScope) {\n        let findScopes = null;\n        if (typeof newFindScope !== 'undefined') {\n            if (newFindScope !== null) {\n                if (!Array.isArray(newFindScope)) {\n                    findScopes = [newFindScope];\n                }\n                else {\n                    findScopes = newFindScope;\n                }\n            }\n        }\n        else {\n            findScopes = this._decorations.getFindScopes();\n        }\n        if (findScopes !== null) {\n            findScopes = findScopes.map(findScope => {\n                if (findScope.startLineNumber !== findScope.endLineNumber) {\n                    let endLineNumber = findScope.endLineNumber;\n                    if (findScope.endColumn === 1) {\n                        endLineNumber = endLineNumber - 1;\n                    }\n                    return new Range(findScope.startLineNumber, 1, endLineNumber, this._editor.getModel().getLineMaxColumn(endLineNumber));\n                }\n                return findScope;\n            });\n        }\n        const findMatches = this._findMatches(findScopes, false, MATCHES_LIMIT);\n        this._decorations.set(findMatches, findScopes);\n        const editorSelection = this._editor.getSelection();\n        let currentMatchesPosition = this._decorations.getCurrentMatchesPosition(editorSelection);\n        if (currentMatchesPosition === 0 && findMatches.length > 0) {\n            // current selection is not on top of a match\n            // try to find its nearest result from the top of the document\n            const matchAfterSelection = findFirstInSorted(findMatches.map(match => match.range), range => Range.compareRangesUsingStarts(range, editorSelection) >= 0);\n            currentMatchesPosition = matchAfterSelection > 0 ? matchAfterSelection - 1 + 1 /** match position is one based */ : currentMatchesPosition;\n        }\n        this._state.changeMatchInfo(currentMatchesPosition, this._decorations.getCount(), undefined);\n        if (moveCursor && this._editor.getOption(37 /* EditorOption.find */).cursorMoveOnType) {\n            this._moveToNextMatch(this._decorations.getStartPosition());\n        }\n    }\n    _hasMatches() {\n        return (this._state.matchesCount > 0);\n    }\n    _cannotFind() {\n        if (!this._hasMatches()) {\n            const findScope = this._decorations.getFindScope();\n            if (findScope) {\n                // Reveal the selection so user is reminded that 'selection find' is on.\n                this._editor.revealRangeInCenterIfOutsideViewport(findScope, 0 /* ScrollType.Smooth */);\n            }\n            return true;\n        }\n        return false;\n    }\n    _setCurrentFindMatch(match) {\n        const matchesPosition = this._decorations.setCurrentFindMatch(match);\n        this._state.changeMatchInfo(matchesPosition, this._decorations.getCount(), match);\n        this._editor.setSelection(match);\n        this._editor.revealRangeInCenterIfOutsideViewport(match, 0 /* ScrollType.Smooth */);\n    }\n    _prevSearchPosition(before) {\n        const isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\n            || this._state.searchString.indexOf('$') >= 0);\n        let { lineNumber, column } = before;\n        const model = this._editor.getModel();\n        if (isUsingLineStops || column === 1) {\n            if (lineNumber === 1) {\n                lineNumber = model.getLineCount();\n            }\n            else {\n                lineNumber--;\n            }\n            column = model.getLineMaxColumn(lineNumber);\n        }\n        else {\n            column--;\n        }\n        return new Position(lineNumber, column);\n    }\n    _moveToPrevMatch(before, isRecursed = false) {\n        if (!this._state.canNavigateBack()) {\n            // we are beyond the first matched find result\n            // instead of doing nothing, we should refocus the first item\n            const nextMatchRange = this._decorations.matchAfterPosition(before);\n            if (nextMatchRange) {\n                this._setCurrentFindMatch(nextMatchRange);\n            }\n            return;\n        }\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\n            let prevMatchRange = this._decorations.matchBeforePosition(before);\n            if (prevMatchRange && prevMatchRange.isEmpty() && prevMatchRange.getStartPosition().equals(before)) {\n                before = this._prevSearchPosition(before);\n                prevMatchRange = this._decorations.matchBeforePosition(before);\n            }\n            if (prevMatchRange) {\n                this._setCurrentFindMatch(prevMatchRange);\n            }\n            return;\n        }\n        if (this._cannotFind()) {\n            return;\n        }\n        const findScope = this._decorations.getFindScope();\n        const searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n        // ...(----)...|...\n        if (searchRange.getEndPosition().isBefore(before)) {\n            before = searchRange.getEndPosition();\n        }\n        // ...|...(----)...\n        if (before.isBefore(searchRange.getStartPosition())) {\n            before = searchRange.getEndPosition();\n        }\n        const { lineNumber, column } = before;\n        const model = this._editor.getModel();\n        let position = new Position(lineNumber, column);\n        let prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(119 /* EditorOption.wordSeparators */) : null, false);\n        if (prevMatch && prevMatch.range.isEmpty() && prevMatch.range.getStartPosition().equals(position)) {\n            // Looks like we're stuck at this position, unacceptable!\n            position = this._prevSearchPosition(position);\n            prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(119 /* EditorOption.wordSeparators */) : null, false);\n        }\n        if (!prevMatch) {\n            // there is precisely one match and selection is on top of it\n            return;\n        }\n        if (!isRecursed && !searchRange.containsRange(prevMatch.range)) {\n            return this._moveToPrevMatch(prevMatch.range.getStartPosition(), true);\n        }\n        this._setCurrentFindMatch(prevMatch.range);\n    }\n    moveToPrevMatch() {\n        this._moveToPrevMatch(this._editor.getSelection().getStartPosition());\n    }\n    _nextSearchPosition(after) {\n        const isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\n            || this._state.searchString.indexOf('$') >= 0);\n        let { lineNumber, column } = after;\n        const model = this._editor.getModel();\n        if (isUsingLineStops || column === model.getLineMaxColumn(lineNumber)) {\n            if (lineNumber === model.getLineCount()) {\n                lineNumber = 1;\n            }\n            else {\n                lineNumber++;\n            }\n            column = 1;\n        }\n        else {\n            column++;\n        }\n        return new Position(lineNumber, column);\n    }\n    _moveToNextMatch(after) {\n        if (!this._state.canNavigateForward()) {\n            // we are beyond the last matched find result\n            // instead of doing nothing, we should refocus the last item\n            const prevMatchRange = this._decorations.matchBeforePosition(after);\n            if (prevMatchRange) {\n                this._setCurrentFindMatch(prevMatchRange);\n            }\n            return;\n        }\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\n            let nextMatchRange = this._decorations.matchAfterPosition(after);\n            if (nextMatchRange && nextMatchRange.isEmpty() && nextMatchRange.getStartPosition().equals(after)) {\n                // Looks like we're stuck at this position, unacceptable!\n                after = this._nextSearchPosition(after);\n                nextMatchRange = this._decorations.matchAfterPosition(after);\n            }\n            if (nextMatchRange) {\n                this._setCurrentFindMatch(nextMatchRange);\n            }\n            return;\n        }\n        const nextMatch = this._getNextMatch(after, false, true);\n        if (nextMatch) {\n            this._setCurrentFindMatch(nextMatch.range);\n        }\n    }\n    _getNextMatch(after, captureMatches, forceMove, isRecursed = false) {\n        if (this._cannotFind()) {\n            return null;\n        }\n        const findScope = this._decorations.getFindScope();\n        const searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n        // ...(----)...|...\n        if (searchRange.getEndPosition().isBefore(after)) {\n            after = searchRange.getStartPosition();\n        }\n        // ...|...(----)...\n        if (after.isBefore(searchRange.getStartPosition())) {\n            after = searchRange.getStartPosition();\n        }\n        const { lineNumber, column } = after;\n        const model = this._editor.getModel();\n        let position = new Position(lineNumber, column);\n        let nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(119 /* EditorOption.wordSeparators */) : null, captureMatches);\n        if (forceMove && nextMatch && nextMatch.range.isEmpty() && nextMatch.range.getStartPosition().equals(position)) {\n            // Looks like we're stuck at this position, unacceptable!\n            position = this._nextSearchPosition(position);\n            nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(119 /* EditorOption.wordSeparators */) : null, captureMatches);\n        }\n        if (!nextMatch) {\n            // there is precisely one match and selection is on top of it\n            return null;\n        }\n        if (!isRecursed && !searchRange.containsRange(nextMatch.range)) {\n            return this._getNextMatch(nextMatch.range.getEndPosition(), captureMatches, forceMove, true);\n        }\n        return nextMatch;\n    }\n    moveToNextMatch() {\n        this._moveToNextMatch(this._editor.getSelection().getEndPosition());\n    }\n    _getReplacePattern() {\n        if (this._state.isRegex) {\n            return parseReplaceString(this._state.replaceString);\n        }\n        return ReplacePattern.fromStaticValue(this._state.replaceString);\n    }\n    replace() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const replacePattern = this._getReplacePattern();\n        const selection = this._editor.getSelection();\n        const nextMatch = this._getNextMatch(selection.getStartPosition(), true, false);\n        if (nextMatch) {\n            if (selection.equalsRange(nextMatch.range)) {\n                // selection sits on a find match => replace it!\n                const replaceString = replacePattern.buildReplaceString(nextMatch.matches, this._state.preserveCase);\n                const command = new ReplaceCommand(selection, replaceString);\n                this._executeEditorCommand('replace', command);\n                this._decorations.setStartPosition(new Position(selection.startLineNumber, selection.startColumn + replaceString.length));\n                this.research(true);\n            }\n            else {\n                this._decorations.setStartPosition(this._editor.getPosition());\n                this._setCurrentFindMatch(nextMatch.range);\n            }\n        }\n    }\n    _findMatches(findScopes, captureMatches, limitResultCount) {\n        const searchRanges = (findScopes || [null]).map((scope) => FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), scope));\n        return this._editor.getModel().findMatches(this._state.searchString, searchRanges, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(119 /* EditorOption.wordSeparators */) : null, captureMatches, limitResultCount);\n    }\n    replaceAll() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const findScopes = this._decorations.getFindScopes();\n        if (findScopes === null && this._state.matchesCount >= MATCHES_LIMIT) {\n            // Doing a replace on the entire file that is over ${MATCHES_LIMIT} matches\n            this._largeReplaceAll();\n        }\n        else {\n            this._regularReplaceAll(findScopes);\n        }\n        this.research(false);\n    }\n    _largeReplaceAll() {\n        const searchParams = new SearchParams(this._state.searchString, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(119 /* EditorOption.wordSeparators */) : null);\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return;\n        }\n        let searchRegex = searchData.regex;\n        if (!searchRegex.multiline) {\n            let mod = 'mu';\n            if (searchRegex.ignoreCase) {\n                mod += 'i';\n            }\n            if (searchRegex.global) {\n                mod += 'g';\n            }\n            searchRegex = new RegExp(searchRegex.source, mod);\n        }\n        const model = this._editor.getModel();\n        const modelText = model.getValue(1 /* EndOfLinePreference.LF */);\n        const fullModelRange = model.getFullModelRange();\n        const replacePattern = this._getReplacePattern();\n        let resultText;\n        const preserveCase = this._state.preserveCase;\n        if (replacePattern.hasReplacementPatterns || preserveCase) {\n            resultText = modelText.replace(searchRegex, function () {\n                return replacePattern.buildReplaceString(arguments, preserveCase);\n            });\n        }\n        else {\n            resultText = modelText.replace(searchRegex, replacePattern.buildReplaceString(null, preserveCase));\n        }\n        const command = new ReplaceCommandThatPreservesSelection(fullModelRange, resultText, this._editor.getSelection());\n        this._executeEditorCommand('replaceAll', command);\n    }\n    _regularReplaceAll(findScopes) {\n        const replacePattern = this._getReplacePattern();\n        // Get all the ranges (even more than the highlighted ones)\n        const matches = this._findMatches(findScopes, replacePattern.hasReplacementPatterns || this._state.preserveCase, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n        const replaceStrings = [];\n        for (let i = 0, len = matches.length; i < len; i++) {\n            replaceStrings[i] = replacePattern.buildReplaceString(matches[i].matches, this._state.preserveCase);\n        }\n        const command = new ReplaceAllCommand(this._editor.getSelection(), matches.map(m => m.range), replaceStrings);\n        this._executeEditorCommand('replaceAll', command);\n    }\n    selectAllMatches() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const findScopes = this._decorations.getFindScopes();\n        // Get all the ranges (even more than the highlighted ones)\n        const matches = this._findMatches(findScopes, false, 1073741824 /* Constants.MAX_SAFE_SMALL_INTEGER */);\n        let selections = matches.map(m => new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn));\n        // If one of the ranges is the editor selection, then maintain it as primary\n        const editorSelection = this._editor.getSelection();\n        for (let i = 0, len = selections.length; i < len; i++) {\n            const sel = selections[i];\n            if (sel.equalsRange(editorSelection)) {\n                selections = [editorSelection].concat(selections.slice(0, i)).concat(selections.slice(i + 1));\n                break;\n            }\n        }\n        this._editor.setSelections(selections);\n    }\n    _executeEditorCommand(source, command) {\n        try {\n            this._ignoreModelContentChanged = true;\n            this._editor.pushUndoStop();\n            this._editor.executeCommand(source, command);\n            this._editor.pushUndoStop();\n        }\n        finally {\n            this._ignoreModelContentChanged = false;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { CaseSensitiveToggle, RegexToggle, WholeWordsToggle } from '../../../../base/browser/ui/findinput/findInputToggles.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { FIND_IDS } from './findModel.js';\nimport { contrastBorder, editorWidgetBackground, editorWidgetForeground, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground, widgetShadow } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nexport class FindOptionsWidget extends Widget {\n    constructor(editor, state, keybindingService, themeService) {\n        super();\n        this._hideSoon = this._register(new RunOnceScheduler(() => this._hide(), 2000));\n        this._isVisible = false;\n        this._editor = editor;\n        this._state = state;\n        this._keybindingService = keybindingService;\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'findOptionsWidget';\n        this._domNode.style.display = 'none';\n        this._domNode.style.top = '10px';\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        const inputActiveOptionBorderColor = themeService.getColorTheme().getColor(inputActiveOptionBorder);\n        const inputActiveOptionForegroundColor = themeService.getColorTheme().getColor(inputActiveOptionForeground);\n        const inputActiveOptionBackgroundColor = themeService.getColorTheme().getColor(inputActiveOptionBackground);\n        this.caseSensitive = this._register(new CaseSensitiveToggle({\n            appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\n            isChecked: this._state.matchCase,\n            inputActiveOptionBorder: inputActiveOptionBorderColor,\n            inputActiveOptionForeground: inputActiveOptionForegroundColor,\n            inputActiveOptionBackground: inputActiveOptionBackgroundColor\n        }));\n        this._domNode.appendChild(this.caseSensitive.domNode);\n        this._register(this.caseSensitive.onChange(() => {\n            this._state.change({\n                matchCase: this.caseSensitive.checked\n            }, false);\n        }));\n        this.wholeWords = this._register(new WholeWordsToggle({\n            appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\n            isChecked: this._state.wholeWord,\n            inputActiveOptionBorder: inputActiveOptionBorderColor,\n            inputActiveOptionForeground: inputActiveOptionForegroundColor,\n            inputActiveOptionBackground: inputActiveOptionBackgroundColor\n        }));\n        this._domNode.appendChild(this.wholeWords.domNode);\n        this._register(this.wholeWords.onChange(() => {\n            this._state.change({\n                wholeWord: this.wholeWords.checked\n            }, false);\n        }));\n        this.regex = this._register(new RegexToggle({\n            appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\n            isChecked: this._state.isRegex,\n            inputActiveOptionBorder: inputActiveOptionBorderColor,\n            inputActiveOptionForeground: inputActiveOptionForegroundColor,\n            inputActiveOptionBackground: inputActiveOptionBackgroundColor\n        }));\n        this._domNode.appendChild(this.regex.domNode);\n        this._register(this.regex.onChange(() => {\n            this._state.change({\n                isRegex: this.regex.checked\n            }, false);\n        }));\n        this._editor.addOverlayWidget(this);\n        this._register(this._state.onFindReplaceStateChange((e) => {\n            let somethingChanged = false;\n            if (e.isRegex) {\n                this.regex.checked = this._state.isRegex;\n                somethingChanged = true;\n            }\n            if (e.wholeWord) {\n                this.wholeWords.checked = this._state.wholeWord;\n                somethingChanged = true;\n            }\n            if (e.matchCase) {\n                this.caseSensitive.checked = this._state.matchCase;\n                somethingChanged = true;\n            }\n            if (!this._state.isRevealed && somethingChanged) {\n                this._revealTemporarily();\n            }\n        }));\n        this._register(dom.addDisposableListener(this._domNode, dom.EventType.MOUSE_LEAVE, (e) => this._onMouseLeave()));\n        this._register(dom.addDisposableListener(this._domNode, 'mouseover', (e) => this._onMouseOver()));\n        this._applyTheme(themeService.getColorTheme());\n        this._register(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\n    }\n    _keybindingLabelFor(actionId) {\n        const kb = this._keybindingService.lookupKeybinding(actionId);\n        if (!kb) {\n            return '';\n        }\n        return ` (${kb.getLabel()})`;\n    }\n    dispose() {\n        this._editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n    // ----- IOverlayWidget API\n    getId() {\n        return FindOptionsWidget.ID;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        return {\n            preference: 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */\n        };\n    }\n    highlightFindOptions() {\n        this._revealTemporarily();\n    }\n    _revealTemporarily() {\n        this._show();\n        this._hideSoon.schedule();\n    }\n    _onMouseLeave() {\n        this._hideSoon.schedule();\n    }\n    _onMouseOver() {\n        this._hideSoon.cancel();\n    }\n    _show() {\n        if (this._isVisible) {\n            return;\n        }\n        this._isVisible = true;\n        this._domNode.style.display = 'block';\n    }\n    _hide() {\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this._domNode.style.display = 'none';\n    }\n    _applyTheme(theme) {\n        const inputStyles = {\n            inputActiveOptionBorder: theme.getColor(inputActiveOptionBorder),\n            inputActiveOptionForeground: theme.getColor(inputActiveOptionForeground),\n            inputActiveOptionBackground: theme.getColor(inputActiveOptionBackground)\n        };\n        this.caseSensitive.style(inputStyles);\n        this.wholeWords.style(inputStyles);\n        this.regex.style(inputStyles);\n    }\n}\nFindOptionsWidget.ID = 'editor.contrib.findOptionsWidget';\nregisterThemingParticipant((theme, collector) => {\n    const widgetBackground = theme.getColor(editorWidgetBackground);\n    if (widgetBackground) {\n        collector.addRule(`.monaco-editor .findOptionsWidget { background-color: ${widgetBackground}; }`);\n    }\n    const widgetForeground = theme.getColor(editorWidgetForeground);\n    if (widgetForeground) {\n        collector.addRule(`.monaco-editor .findOptionsWidget { color: ${widgetForeground}; }`);\n    }\n    const widgetShadowColor = theme.getColor(widgetShadow);\n    if (widgetShadowColor) {\n        collector.addRule(`.monaco-editor .findOptionsWidget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);\n    }\n    const hcBorder = theme.getColor(contrastBorder);\n    if (hcBorder) {\n        collector.addRule(`.monaco-editor .findOptionsWidget { border: 2px solid ${hcBorder}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MATCHES_LIMIT } from './findModel.js';\nfunction effectiveOptionValue(override, value) {\n    if (override === 1 /* FindOptionOverride.True */) {\n        return true;\n    }\n    if (override === 2 /* FindOptionOverride.False */) {\n        return false;\n    }\n    return value;\n}\nexport class FindReplaceState extends Disposable {\n    constructor() {\n        super();\n        this._onFindReplaceStateChange = this._register(new Emitter());\n        this.onFindReplaceStateChange = this._onFindReplaceStateChange.event;\n        this._searchString = '';\n        this._replaceString = '';\n        this._isRevealed = false;\n        this._isReplaceRevealed = false;\n        this._isRegex = false;\n        this._isRegexOverride = 0 /* FindOptionOverride.NotSet */;\n        this._wholeWord = false;\n        this._wholeWordOverride = 0 /* FindOptionOverride.NotSet */;\n        this._matchCase = false;\n        this._matchCaseOverride = 0 /* FindOptionOverride.NotSet */;\n        this._preserveCase = false;\n        this._preserveCaseOverride = 0 /* FindOptionOverride.NotSet */;\n        this._searchScope = null;\n        this._matchesPosition = 0;\n        this._matchesCount = 0;\n        this._currentMatch = null;\n        this._loop = true;\n        this._isSearching = false;\n        this._filters = null;\n    }\n    get searchString() { return this._searchString; }\n    get replaceString() { return this._replaceString; }\n    get isRevealed() { return this._isRevealed; }\n    get isReplaceRevealed() { return this._isReplaceRevealed; }\n    get isRegex() { return effectiveOptionValue(this._isRegexOverride, this._isRegex); }\n    get wholeWord() { return effectiveOptionValue(this._wholeWordOverride, this._wholeWord); }\n    get matchCase() { return effectiveOptionValue(this._matchCaseOverride, this._matchCase); }\n    get preserveCase() { return effectiveOptionValue(this._preserveCaseOverride, this._preserveCase); }\n    get actualIsRegex() { return this._isRegex; }\n    get actualWholeWord() { return this._wholeWord; }\n    get actualMatchCase() { return this._matchCase; }\n    get actualPreserveCase() { return this._preserveCase; }\n    get searchScope() { return this._searchScope; }\n    get matchesPosition() { return this._matchesPosition; }\n    get matchesCount() { return this._matchesCount; }\n    get currentMatch() { return this._currentMatch; }\n    changeMatchInfo(matchesPosition, matchesCount, currentMatch) {\n        const changeEvent = {\n            moveCursor: false,\n            updateHistory: false,\n            searchString: false,\n            replaceString: false,\n            isRevealed: false,\n            isReplaceRevealed: false,\n            isRegex: false,\n            wholeWord: false,\n            matchCase: false,\n            preserveCase: false,\n            searchScope: false,\n            matchesPosition: false,\n            matchesCount: false,\n            currentMatch: false,\n            loop: false,\n            isSearching: false,\n            filters: false\n        };\n        let somethingChanged = false;\n        if (matchesCount === 0) {\n            matchesPosition = 0;\n        }\n        if (matchesPosition > matchesCount) {\n            matchesPosition = matchesCount;\n        }\n        if (this._matchesPosition !== matchesPosition) {\n            this._matchesPosition = matchesPosition;\n            changeEvent.matchesPosition = true;\n            somethingChanged = true;\n        }\n        if (this._matchesCount !== matchesCount) {\n            this._matchesCount = matchesCount;\n            changeEvent.matchesCount = true;\n            somethingChanged = true;\n        }\n        if (typeof currentMatch !== 'undefined') {\n            if (!Range.equalsRange(this._currentMatch, currentMatch)) {\n                this._currentMatch = currentMatch;\n                changeEvent.currentMatch = true;\n                somethingChanged = true;\n            }\n        }\n        if (somethingChanged) {\n            this._onFindReplaceStateChange.fire(changeEvent);\n        }\n    }\n    change(newState, moveCursor, updateHistory = true) {\n        var _a;\n        const changeEvent = {\n            moveCursor: moveCursor,\n            updateHistory: updateHistory,\n            searchString: false,\n            replaceString: false,\n            isRevealed: false,\n            isReplaceRevealed: false,\n            isRegex: false,\n            wholeWord: false,\n            matchCase: false,\n            preserveCase: false,\n            searchScope: false,\n            matchesPosition: false,\n            matchesCount: false,\n            currentMatch: false,\n            loop: false,\n            isSearching: false,\n            filters: false\n        };\n        let somethingChanged = false;\n        const oldEffectiveIsRegex = this.isRegex;\n        const oldEffectiveWholeWords = this.wholeWord;\n        const oldEffectiveMatchCase = this.matchCase;\n        const oldEffectivePreserveCase = this.preserveCase;\n        if (typeof newState.searchString !== 'undefined') {\n            if (this._searchString !== newState.searchString) {\n                this._searchString = newState.searchString;\n                changeEvent.searchString = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.replaceString !== 'undefined') {\n            if (this._replaceString !== newState.replaceString) {\n                this._replaceString = newState.replaceString;\n                changeEvent.replaceString = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isRevealed !== 'undefined') {\n            if (this._isRevealed !== newState.isRevealed) {\n                this._isRevealed = newState.isRevealed;\n                changeEvent.isRevealed = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isReplaceRevealed !== 'undefined') {\n            if (this._isReplaceRevealed !== newState.isReplaceRevealed) {\n                this._isReplaceRevealed = newState.isReplaceRevealed;\n                changeEvent.isReplaceRevealed = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isRegex !== 'undefined') {\n            this._isRegex = newState.isRegex;\n        }\n        if (typeof newState.wholeWord !== 'undefined') {\n            this._wholeWord = newState.wholeWord;\n        }\n        if (typeof newState.matchCase !== 'undefined') {\n            this._matchCase = newState.matchCase;\n        }\n        if (typeof newState.preserveCase !== 'undefined') {\n            this._preserveCase = newState.preserveCase;\n        }\n        if (typeof newState.searchScope !== 'undefined') {\n            if (!((_a = newState.searchScope) === null || _a === void 0 ? void 0 : _a.every((newSearchScope) => {\n                var _a;\n                return (_a = this._searchScope) === null || _a === void 0 ? void 0 : _a.some(existingSearchScope => {\n                    return !Range.equalsRange(existingSearchScope, newSearchScope);\n                });\n            }))) {\n                this._searchScope = newState.searchScope;\n                changeEvent.searchScope = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.loop !== 'undefined') {\n            if (this._loop !== newState.loop) {\n                this._loop = newState.loop;\n                changeEvent.loop = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isSearching !== 'undefined') {\n            if (this._isSearching !== newState.isSearching) {\n                this._isSearching = newState.isSearching;\n                changeEvent.isSearching = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.filters !== 'undefined') {\n            if (this._filters) {\n                this._filters.update(newState.filters);\n            }\n            else {\n                this._filters = newState.filters;\n            }\n            changeEvent.filters = true;\n            somethingChanged = true;\n        }\n        // Overrides get set when they explicitly come in and get reset anytime something else changes\n        this._isRegexOverride = (typeof newState.isRegexOverride !== 'undefined' ? newState.isRegexOverride : 0 /* FindOptionOverride.NotSet */);\n        this._wholeWordOverride = (typeof newState.wholeWordOverride !== 'undefined' ? newState.wholeWordOverride : 0 /* FindOptionOverride.NotSet */);\n        this._matchCaseOverride = (typeof newState.matchCaseOverride !== 'undefined' ? newState.matchCaseOverride : 0 /* FindOptionOverride.NotSet */);\n        this._preserveCaseOverride = (typeof newState.preserveCaseOverride !== 'undefined' ? newState.preserveCaseOverride : 0 /* FindOptionOverride.NotSet */);\n        if (oldEffectiveIsRegex !== this.isRegex) {\n            somethingChanged = true;\n            changeEvent.isRegex = true;\n        }\n        if (oldEffectiveWholeWords !== this.wholeWord) {\n            somethingChanged = true;\n            changeEvent.wholeWord = true;\n        }\n        if (oldEffectiveMatchCase !== this.matchCase) {\n            somethingChanged = true;\n            changeEvent.matchCase = true;\n        }\n        if (oldEffectivePreserveCase !== this.preserveCase) {\n            somethingChanged = true;\n            changeEvent.preserveCase = true;\n        }\n        if (somethingChanged) {\n            this._onFindReplaceStateChange.fire(changeEvent);\n        }\n    }\n    canNavigateBack() {\n        return this.canNavigateInLoop() || (this.matchesPosition !== 1);\n    }\n    canNavigateForward() {\n        return this.canNavigateInLoop() || (this.matchesPosition < this.matchesCount);\n    }\n    canNavigateInLoop() {\n        return this._loop || (this.matchesCount >= MATCHES_LIMIT);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { alert as alertFn } from '../../../../base/browser/ui/aria/aria.js';\nimport { Toggle } from '../../../../base/browser/ui/toggle/toggle.js';\nimport { Sash } from '../../../../base/browser/ui/sash/sash.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './findWidget.css';\nimport { Range } from '../../../common/core/range.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_REPLACE_INPUT_FOCUSED, FIND_IDS, MATCHES_LIMIT } from './findModel.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextScopedFindInput, ContextScopedReplaceInput } from '../../../../platform/history/browser/contextScopedHistoryWidget.js';\nimport { showHistoryKeybindingHint } from '../../../../platform/history/browser/historyWidgetKeybindingHint.js';\nimport { contrastBorder, editorFindMatch, editorFindMatchBorder, editorFindMatchHighlight, editorFindMatchHighlightBorder, editorFindRangeHighlight, editorFindRangeHighlightBorder, editorWidgetBackground, editorWidgetBorder, editorWidgetForeground, editorWidgetResizeBorder, errorForeground, focusBorder, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground, inputBackground, inputBorder, inputForeground, inputValidationErrorBackground, inputValidationErrorBorder, inputValidationErrorForeground, inputValidationInfoBackground, inputValidationInfoBorder, inputValidationInfoForeground, inputValidationWarningBackground, inputValidationWarningBorder, inputValidationWarningForeground, toolbarHoverBackground, widgetShadow } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerIcon, widgetClose } from '../../../../platform/theme/common/iconRegistry.js';\nimport { registerThemingParticipant, ThemeIcon } from '../../../../platform/theme/common/themeService.js';\nimport { isHighContrast } from '../../../../platform/theme/common/theme.js';\nconst findSelectionIcon = registerIcon('find-selection', Codicon.selection, nls.localize('findSelectionIcon', 'Icon for \\'Find in Selection\\' in the editor find widget.'));\nconst findCollapsedIcon = registerIcon('find-collapsed', Codicon.chevronRight, nls.localize('findCollapsedIcon', 'Icon to indicate that the editor find widget is collapsed.'));\nconst findExpandedIcon = registerIcon('find-expanded', Codicon.chevronDown, nls.localize('findExpandedIcon', 'Icon to indicate that the editor find widget is expanded.'));\nexport const findReplaceIcon = registerIcon('find-replace', Codicon.replace, nls.localize('findReplaceIcon', 'Icon for \\'Replace\\' in the editor find widget.'));\nexport const findReplaceAllIcon = registerIcon('find-replace-all', Codicon.replaceAll, nls.localize('findReplaceAllIcon', 'Icon for \\'Replace All\\' in the editor find widget.'));\nexport const findPreviousMatchIcon = registerIcon('find-previous-match', Codicon.arrowUp, nls.localize('findPreviousMatchIcon', 'Icon for \\'Find Previous\\' in the editor find widget.'));\nexport const findNextMatchIcon = registerIcon('find-next-match', Codicon.arrowDown, nls.localize('findNextMatchIcon', 'Icon for \\'Find Next\\' in the editor find widget.'));\nconst NLS_FIND_INPUT_LABEL = nls.localize('label.find', \"Find\");\nconst NLS_FIND_INPUT_PLACEHOLDER = nls.localize('placeholder.find', \"Find\");\nconst NLS_PREVIOUS_MATCH_BTN_LABEL = nls.localize('label.previousMatchButton', \"Previous Match\");\nconst NLS_NEXT_MATCH_BTN_LABEL = nls.localize('label.nextMatchButton', \"Next Match\");\nconst NLS_TOGGLE_SELECTION_FIND_TITLE = nls.localize('label.toggleSelectionFind', \"Find in Selection\");\nconst NLS_CLOSE_BTN_LABEL = nls.localize('label.closeButton', \"Close\");\nconst NLS_REPLACE_INPUT_LABEL = nls.localize('label.replace', \"Replace\");\nconst NLS_REPLACE_INPUT_PLACEHOLDER = nls.localize('placeholder.replace', \"Replace\");\nconst NLS_REPLACE_BTN_LABEL = nls.localize('label.replaceButton', \"Replace\");\nconst NLS_REPLACE_ALL_BTN_LABEL = nls.localize('label.replaceAllButton', \"Replace All\");\nconst NLS_TOGGLE_REPLACE_MODE_BTN_LABEL = nls.localize('label.toggleReplaceButton', \"Toggle Replace\");\nconst NLS_MATCHES_COUNT_LIMIT_TITLE = nls.localize('title.matchesCountLimit', \"Only the first {0} results are highlighted, but all find operations work on the entire text.\", MATCHES_LIMIT);\nexport const NLS_MATCHES_LOCATION = nls.localize('label.matchesLocation', \"{0} of {1}\");\nexport const NLS_NO_RESULTS = nls.localize('label.noResults', \"No results\");\nconst FIND_WIDGET_INITIAL_WIDTH = 419;\nconst PART_WIDTH = 275;\nconst FIND_INPUT_AREA_WIDTH = PART_WIDTH - 54;\nlet MAX_MATCHES_COUNT_WIDTH = 69;\n// let FIND_ALL_CONTROLS_WIDTH = 17/** Find Input margin-left */ + (MAX_MATCHES_COUNT_WIDTH + 3 + 1) /** Match Results */ + 23 /** Button */ * 4 + 2/** sash */;\nconst FIND_INPUT_AREA_HEIGHT = 33; // The height of Find Widget when Replace Input is not visible.\nconst ctrlEnterReplaceAllWarningPromptedKey = 'ctrlEnterReplaceAll.windows.donotask';\nconst ctrlKeyMod = (platform.isMacintosh ? 256 /* KeyMod.WinCtrl */ : 2048 /* KeyMod.CtrlCmd */);\nexport class FindWidgetViewZone {\n    constructor(afterLineNumber) {\n        this.afterLineNumber = afterLineNumber;\n        this.heightInPx = FIND_INPUT_AREA_HEIGHT;\n        this.suppressMouseDown = false;\n        this.domNode = document.createElement('div');\n        this.domNode.className = 'dock-find-viewzone';\n    }\n}\nfunction stopPropagationForMultiLineUpwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && isMultiline && textarea.selectionStart > 0) {\n        event.stopPropagation();\n        return;\n    }\n}\nfunction stopPropagationForMultiLineDownwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && isMultiline && textarea.selectionEnd < textarea.value.length) {\n        event.stopPropagation();\n        return;\n    }\n}\nexport class FindWidget extends Widget {\n    constructor(codeEditor, controller, state, contextViewProvider, keybindingService, contextKeyService, themeService, storageService, notificationService) {\n        super();\n        this._cachedHeight = null;\n        this._revealTimeouts = [];\n        this._codeEditor = codeEditor;\n        this._controller = controller;\n        this._state = state;\n        this._contextViewProvider = contextViewProvider;\n        this._keybindingService = keybindingService;\n        this._contextKeyService = contextKeyService;\n        this._storageService = storageService;\n        this._notificationService = notificationService;\n        this._ctrlEnterReplaceAllWarningPrompted = !!storageService.getBoolean(ctrlEnterReplaceAllWarningPromptedKey, 0 /* StorageScope.PROFILE */);\n        this._isVisible = false;\n        this._isReplaceVisible = false;\n        this._ignoreChangeEvent = false;\n        this._updateHistoryDelayer = new Delayer(500);\n        this._register(toDisposable(() => this._updateHistoryDelayer.cancel()));\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this._buildDomNode();\n        this._updateButtons();\n        this._tryUpdateWidgetWidth();\n        this._findInput.inputBox.layout();\n        this._register(this._codeEditor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(83 /* EditorOption.readOnly */)) {\n                if (this._codeEditor.getOption(83 /* EditorOption.readOnly */)) {\n                    // Hide replace part if editor becomes read only\n                    this._state.change({ isReplaceRevealed: false }, false);\n                }\n                this._updateButtons();\n            }\n            if (e.hasChanged(133 /* EditorOption.layoutInfo */)) {\n                this._tryUpdateWidgetWidth();\n            }\n            if (e.hasChanged(2 /* EditorOption.accessibilitySupport */)) {\n                this.updateAccessibilitySupport();\n            }\n            if (e.hasChanged(37 /* EditorOption.find */)) {\n                const addExtraSpaceOnTop = this._codeEditor.getOption(37 /* EditorOption.find */).addExtraSpaceOnTop;\n                if (addExtraSpaceOnTop && !this._viewZone) {\n                    this._viewZone = new FindWidgetViewZone(0);\n                    this._showViewZone();\n                }\n                if (!addExtraSpaceOnTop && this._viewZone) {\n                    this._removeViewZone();\n                }\n            }\n        }));\n        this.updateAccessibilitySupport();\n        this._register(this._codeEditor.onDidChangeCursorSelection(() => {\n            if (this._isVisible) {\n                this._updateToggleSelectionFindButton();\n            }\n        }));\n        this._register(this._codeEditor.onDidFocusEditorWidget(() => __awaiter(this, void 0, void 0, function* () {\n            if (this._isVisible) {\n                const globalBufferTerm = yield this._controller.getGlobalBufferTerm();\n                if (globalBufferTerm && globalBufferTerm !== this._state.searchString) {\n                    this._state.change({ searchString: globalBufferTerm }, false);\n                    this._findInput.select();\n                }\n            }\n        })));\n        this._findInputFocused = CONTEXT_FIND_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._findFocusTracker = this._register(dom.trackFocus(this._findInput.inputBox.inputElement));\n        this._register(this._findFocusTracker.onDidFocus(() => {\n            this._findInputFocused.set(true);\n            this._updateSearchScope();\n        }));\n        this._register(this._findFocusTracker.onDidBlur(() => {\n            this._findInputFocused.set(false);\n        }));\n        this._replaceInputFocused = CONTEXT_REPLACE_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._replaceFocusTracker = this._register(dom.trackFocus(this._replaceInput.inputBox.inputElement));\n        this._register(this._replaceFocusTracker.onDidFocus(() => {\n            this._replaceInputFocused.set(true);\n            this._updateSearchScope();\n        }));\n        this._register(this._replaceFocusTracker.onDidBlur(() => {\n            this._replaceInputFocused.set(false);\n        }));\n        this._codeEditor.addOverlayWidget(this);\n        if (this._codeEditor.getOption(37 /* EditorOption.find */).addExtraSpaceOnTop) {\n            this._viewZone = new FindWidgetViewZone(0); // Put it before the first line then users can scroll beyond the first line.\n        }\n        this._applyTheme(themeService.getColorTheme());\n        this._register(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\n        this._register(this._codeEditor.onDidChangeModel(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._viewZoneId = undefined;\n        }));\n        this._register(this._codeEditor.onDidScrollChange((e) => {\n            if (e.scrollTopChanged) {\n                this._layoutViewZone();\n                return;\n            }\n            // for other scroll changes, layout the viewzone in next tick to avoid ruining current rendering.\n            setTimeout(() => {\n                this._layoutViewZone();\n            }, 0);\n        }));\n    }\n    // ----- IOverlayWidget API\n    getId() {\n        return FindWidget.ID;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        if (this._isVisible) {\n            return {\n                preference: 0 /* OverlayWidgetPositionPreference.TOP_RIGHT_CORNER */\n            };\n        }\n        return null;\n    }\n    // ----- React to state changes\n    _onStateChanged(e) {\n        if (e.searchString) {\n            try {\n                this._ignoreChangeEvent = true;\n                this._findInput.setValue(this._state.searchString);\n            }\n            finally {\n                this._ignoreChangeEvent = false;\n            }\n            this._updateButtons();\n        }\n        if (e.replaceString) {\n            this._replaceInput.inputBox.value = this._state.replaceString;\n        }\n        if (e.isRevealed) {\n            if (this._state.isRevealed) {\n                this._reveal();\n            }\n            else {\n                this._hide(true);\n            }\n        }\n        if (e.isReplaceRevealed) {\n            if (this._state.isReplaceRevealed) {\n                if (!this._codeEditor.getOption(83 /* EditorOption.readOnly */) && !this._isReplaceVisible) {\n                    this._isReplaceVisible = true;\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                    this._updateButtons();\n                    this._replaceInput.inputBox.layout();\n                }\n            }\n            else {\n                if (this._isReplaceVisible) {\n                    this._isReplaceVisible = false;\n                    this._updateButtons();\n                }\n            }\n        }\n        if ((e.isRevealed || e.isReplaceRevealed) && (this._state.isRevealed || this._state.isReplaceRevealed)) {\n            if (this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }\n        if (e.isRegex) {\n            this._findInput.setRegex(this._state.isRegex);\n        }\n        if (e.wholeWord) {\n            this._findInput.setWholeWords(this._state.wholeWord);\n        }\n        if (e.matchCase) {\n            this._findInput.setCaseSensitive(this._state.matchCase);\n        }\n        if (e.preserveCase) {\n            this._replaceInput.setPreserveCase(this._state.preserveCase);\n        }\n        if (e.searchScope) {\n            if (this._state.searchScope) {\n                this._toggleSelectionFind.checked = true;\n            }\n            else {\n                this._toggleSelectionFind.checked = false;\n            }\n            this._updateToggleSelectionFindButton();\n        }\n        if (e.searchString || e.matchesCount || e.matchesPosition) {\n            const showRedOutline = (this._state.searchString.length > 0 && this._state.matchesCount === 0);\n            this._domNode.classList.toggle('no-results', showRedOutline);\n            this._updateMatchesCount();\n            this._updateButtons();\n        }\n        if (e.searchString || e.currentMatch) {\n            this._layoutViewZone();\n        }\n        if (e.updateHistory) {\n            this._delayedUpdateHistory();\n        }\n        if (e.loop) {\n            this._updateButtons();\n        }\n    }\n    _delayedUpdateHistory() {\n        this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(undefined, onUnexpectedError);\n    }\n    _updateHistory() {\n        if (this._state.searchString) {\n            this._findInput.inputBox.addToHistory();\n        }\n        if (this._state.replaceString) {\n            this._replaceInput.inputBox.addToHistory();\n        }\n    }\n    _updateMatchesCount() {\n        this._matchesCount.style.minWidth = MAX_MATCHES_COUNT_WIDTH + 'px';\n        if (this._state.matchesCount >= MATCHES_LIMIT) {\n            this._matchesCount.title = NLS_MATCHES_COUNT_LIMIT_TITLE;\n        }\n        else {\n            this._matchesCount.title = '';\n        }\n        // remove previous content\n        if (this._matchesCount.firstChild) {\n            this._matchesCount.removeChild(this._matchesCount.firstChild);\n        }\n        let label;\n        if (this._state.matchesCount > 0) {\n            let matchesCount = String(this._state.matchesCount);\n            if (this._state.matchesCount >= MATCHES_LIMIT) {\n                matchesCount += '+';\n            }\n            let matchesPosition = String(this._state.matchesPosition);\n            if (matchesPosition === '0') {\n                matchesPosition = '?';\n            }\n            label = strings.format(NLS_MATCHES_LOCATION, matchesPosition, matchesCount);\n        }\n        else {\n            label = NLS_NO_RESULTS;\n        }\n        this._matchesCount.appendChild(document.createTextNode(label));\n        alertFn(this._getAriaLabel(label, this._state.currentMatch, this._state.searchString));\n        MAX_MATCHES_COUNT_WIDTH = Math.max(MAX_MATCHES_COUNT_WIDTH, this._matchesCount.clientWidth);\n    }\n    // ----- actions\n    _getAriaLabel(label, currentMatch, searchString) {\n        if (label === NLS_NO_RESULTS) {\n            return searchString === ''\n                ? nls.localize('ariaSearchNoResultEmpty', \"{0} found\", label)\n                : nls.localize('ariaSearchNoResult', \"{0} found for '{1}'\", label, searchString);\n        }\n        if (currentMatch) {\n            const ariaLabel = nls.localize('ariaSearchNoResultWithLineNum', \"{0} found for '{1}', at {2}\", label, searchString, currentMatch.startLineNumber + ':' + currentMatch.startColumn);\n            const model = this._codeEditor.getModel();\n            if (model && (currentMatch.startLineNumber <= model.getLineCount()) && (currentMatch.startLineNumber >= 1)) {\n                const lineContent = model.getLineContent(currentMatch.startLineNumber);\n                return `${lineContent}, ${ariaLabel}`;\n            }\n            return ariaLabel;\n        }\n        return nls.localize('ariaSearchNoResultWithLineNumNoCurrentMatch', \"{0} found for '{1}'\", label, searchString);\n    }\n    /**\n     * If 'selection find' is ON we should not disable the button (its function is to cancel 'selection find').\n     * If 'selection find' is OFF we enable the button only if there is a selection.\n     */\n    _updateToggleSelectionFindButton() {\n        const selection = this._codeEditor.getSelection();\n        const isSelection = selection ? (selection.startLineNumber !== selection.endLineNumber || selection.startColumn !== selection.endColumn) : false;\n        const isChecked = this._toggleSelectionFind.checked;\n        if (this._isVisible && (isChecked || isSelection)) {\n            this._toggleSelectionFind.enable();\n        }\n        else {\n            this._toggleSelectionFind.disable();\n        }\n    }\n    _updateButtons() {\n        this._findInput.setEnabled(this._isVisible);\n        this._replaceInput.setEnabled(this._isVisible && this._isReplaceVisible);\n        this._updateToggleSelectionFindButton();\n        this._closeBtn.setEnabled(this._isVisible);\n        const findInputIsNonEmpty = (this._state.searchString.length > 0);\n        const matchesCount = this._state.matchesCount ? true : false;\n        this._prevBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateBack());\n        this._nextBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateForward());\n        this._replaceBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n        this._replaceAllBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n        this._domNode.classList.toggle('replaceToggled', this._isReplaceVisible);\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n        const canReplace = !this._codeEditor.getOption(83 /* EditorOption.readOnly */);\n        this._toggleReplaceBtn.setEnabled(this._isVisible && canReplace);\n    }\n    _reveal() {\n        this._revealTimeouts.forEach(e => {\n            clearTimeout(e);\n        });\n        this._revealTimeouts = [];\n        if (!this._isVisible) {\n            this._isVisible = true;\n            const selection = this._codeEditor.getSelection();\n            switch (this._codeEditor.getOption(37 /* EditorOption.find */).autoFindInSelection) {\n                case 'always':\n                    this._toggleSelectionFind.checked = true;\n                    break;\n                case 'never':\n                    this._toggleSelectionFind.checked = false;\n                    break;\n                case 'multiline': {\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n                    this._toggleSelectionFind.checked = isSelectionMultipleLine;\n                    break;\n                }\n                default:\n                    break;\n            }\n            this._tryUpdateWidgetWidth();\n            this._updateButtons();\n            this._revealTimeouts.push(setTimeout(() => {\n                this._domNode.classList.add('visible');\n                this._domNode.setAttribute('aria-hidden', 'false');\n            }, 0));\n            // validate query again as it's being dismissed when we hide the find widget.\n            this._revealTimeouts.push(setTimeout(() => {\n                this._findInput.validate();\n            }, 200));\n            this._codeEditor.layoutOverlayWidget(this);\n            let adjustEditorScrollTop = true;\n            if (this._codeEditor.getOption(37 /* EditorOption.find */).seedSearchStringFromSelection && selection) {\n                const domNode = this._codeEditor.getDomNode();\n                if (domNode) {\n                    const editorCoords = dom.getDomNodePagePosition(domNode);\n                    const startCoords = this._codeEditor.getScrolledVisiblePosition(selection.getStartPosition());\n                    const startLeft = editorCoords.left + (startCoords ? startCoords.left : 0);\n                    const startTop = startCoords ? startCoords.top : 0;\n                    if (this._viewZone && startTop < this._viewZone.heightInPx) {\n                        if (selection.endLineNumber > selection.startLineNumber) {\n                            adjustEditorScrollTop = false;\n                        }\n                        const leftOfFindWidget = dom.getTopLeftOffset(this._domNode).left;\n                        if (startLeft > leftOfFindWidget) {\n                            adjustEditorScrollTop = false;\n                        }\n                        const endCoords = this._codeEditor.getScrolledVisiblePosition(selection.getEndPosition());\n                        const endLeft = editorCoords.left + (endCoords ? endCoords.left : 0);\n                        if (endLeft > leftOfFindWidget) {\n                            adjustEditorScrollTop = false;\n                        }\n                    }\n                }\n            }\n            this._showViewZone(adjustEditorScrollTop);\n        }\n    }\n    _hide(focusTheEditor) {\n        this._revealTimeouts.forEach(e => {\n            clearTimeout(e);\n        });\n        this._revealTimeouts = [];\n        if (this._isVisible) {\n            this._isVisible = false;\n            this._updateButtons();\n            this._domNode.classList.remove('visible');\n            this._domNode.setAttribute('aria-hidden', 'true');\n            this._findInput.clearMessage();\n            if (focusTheEditor) {\n                this._codeEditor.focus();\n            }\n            this._codeEditor.layoutOverlayWidget(this);\n            this._removeViewZone();\n        }\n    }\n    _layoutViewZone(targetScrollTop) {\n        const addExtraSpaceOnTop = this._codeEditor.getOption(37 /* EditorOption.find */).addExtraSpaceOnTop;\n        if (!addExtraSpaceOnTop) {\n            this._removeViewZone();\n            return;\n        }\n        if (!this._isVisible) {\n            return;\n        }\n        const viewZone = this._viewZone;\n        if (this._viewZoneId !== undefined || !viewZone) {\n            return;\n        }\n        this._codeEditor.changeViewZones((accessor) => {\n            viewZone.heightInPx = this._getHeight();\n            this._viewZoneId = accessor.addZone(viewZone);\n            // scroll top adjust to make sure the editor doesn't scroll when adding viewzone at the beginning.\n            this._codeEditor.setScrollTop(targetScrollTop || this._codeEditor.getScrollTop() + viewZone.heightInPx);\n        });\n    }\n    _showViewZone(adjustScroll = true) {\n        if (!this._isVisible) {\n            return;\n        }\n        const addExtraSpaceOnTop = this._codeEditor.getOption(37 /* EditorOption.find */).addExtraSpaceOnTop;\n        if (!addExtraSpaceOnTop) {\n            return;\n        }\n        if (this._viewZone === undefined) {\n            this._viewZone = new FindWidgetViewZone(0);\n        }\n        const viewZone = this._viewZone;\n        this._codeEditor.changeViewZones((accessor) => {\n            if (this._viewZoneId !== undefined) {\n                // the view zone already exists, we need to update the height\n                const newHeight = this._getHeight();\n                if (newHeight === viewZone.heightInPx) {\n                    return;\n                }\n                const scrollAdjustment = newHeight - viewZone.heightInPx;\n                viewZone.heightInPx = newHeight;\n                accessor.layoutZone(this._viewZoneId);\n                if (adjustScroll) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n                }\n                return;\n            }\n            else {\n                let scrollAdjustment = this._getHeight();\n                // if the editor has top padding, factor that into the zone height\n                scrollAdjustment -= this._codeEditor.getOption(77 /* EditorOption.padding */).top;\n                if (scrollAdjustment <= 0) {\n                    return;\n                }\n                viewZone.heightInPx = scrollAdjustment;\n                this._viewZoneId = accessor.addZone(viewZone);\n                if (adjustScroll) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n                }\n            }\n        });\n    }\n    _removeViewZone() {\n        this._codeEditor.changeViewZones((accessor) => {\n            if (this._viewZoneId !== undefined) {\n                accessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n                if (this._viewZone) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() - this._viewZone.heightInPx);\n                    this._viewZone = undefined;\n                }\n            }\n        });\n    }\n    _applyTheme(theme) {\n        const inputStyles = {\n            inputActiveOptionBorder: theme.getColor(inputActiveOptionBorder),\n            inputActiveOptionBackground: theme.getColor(inputActiveOptionBackground),\n            inputActiveOptionForeground: theme.getColor(inputActiveOptionForeground),\n            inputBackground: theme.getColor(inputBackground),\n            inputForeground: theme.getColor(inputForeground),\n            inputBorder: theme.getColor(inputBorder),\n            inputValidationInfoBackground: theme.getColor(inputValidationInfoBackground),\n            inputValidationInfoForeground: theme.getColor(inputValidationInfoForeground),\n            inputValidationInfoBorder: theme.getColor(inputValidationInfoBorder),\n            inputValidationWarningBackground: theme.getColor(inputValidationWarningBackground),\n            inputValidationWarningForeground: theme.getColor(inputValidationWarningForeground),\n            inputValidationWarningBorder: theme.getColor(inputValidationWarningBorder),\n            inputValidationErrorBackground: theme.getColor(inputValidationErrorBackground),\n            inputValidationErrorForeground: theme.getColor(inputValidationErrorForeground),\n            inputValidationErrorBorder: theme.getColor(inputValidationErrorBorder),\n        };\n        this._findInput.style(inputStyles);\n        this._replaceInput.style(inputStyles);\n        this._toggleSelectionFind.style(inputStyles);\n    }\n    _tryUpdateWidgetWidth() {\n        if (!this._isVisible) {\n            return;\n        }\n        if (!dom.isInDOM(this._domNode)) {\n            // the widget is not in the DOM\n            return;\n        }\n        const layoutInfo = this._codeEditor.getLayoutInfo();\n        const editorContentWidth = layoutInfo.contentWidth;\n        if (editorContentWidth <= 0) {\n            // for example, diff view original editor\n            this._domNode.classList.add('hiddenEditor');\n            return;\n        }\n        else if (this._domNode.classList.contains('hiddenEditor')) {\n            this._domNode.classList.remove('hiddenEditor');\n        }\n        const editorWidth = layoutInfo.width;\n        const minimapWidth = layoutInfo.minimap.minimapWidth;\n        let collapsedFindWidget = false;\n        let reducedFindWidget = false;\n        let narrowFindWidget = false;\n        if (this._resized) {\n            const widgetWidth = dom.getTotalWidth(this._domNode);\n            if (widgetWidth > FIND_WIDGET_INITIAL_WIDTH) {\n                // as the widget is resized by users, we may need to change the max width of the widget as the editor width changes.\n                this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                return;\n            }\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth >= editorWidth) {\n            reducedFindWidget = true;\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth) {\n            narrowFindWidget = true;\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth + 50) {\n            collapsedFindWidget = true;\n        }\n        this._domNode.classList.toggle('collapsed-find-widget', collapsedFindWidget);\n        this._domNode.classList.toggle('narrow-find-widget', narrowFindWidget);\n        this._domNode.classList.toggle('reduced-find-widget', reducedFindWidget);\n        if (!narrowFindWidget && !collapsedFindWidget) {\n            // the minimal left offset of findwidget is 15px.\n            this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n        }\n        if (this._resized) {\n            this._findInput.inputBox.layout();\n            const findInputWidth = this._findInput.inputBox.element.clientWidth;\n            if (findInputWidth > 0) {\n                this._replaceInput.width = findInputWidth;\n            }\n        }\n        else if (this._isReplaceVisible) {\n            this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n        }\n    }\n    _getHeight() {\n        let totalheight = 0;\n        // find input margin top\n        totalheight += 4;\n        // find input height\n        totalheight += this._findInput.inputBox.height + 2 /** input box border */;\n        if (this._isReplaceVisible) {\n            // replace input margin\n            totalheight += 4;\n            totalheight += this._replaceInput.inputBox.height + 2 /** input box border */;\n        }\n        // margin bottom\n        totalheight += 4;\n        return totalheight;\n    }\n    _tryUpdateHeight() {\n        const totalHeight = this._getHeight();\n        if (this._cachedHeight !== null && this._cachedHeight === totalHeight) {\n            return false;\n        }\n        this._cachedHeight = totalHeight;\n        this._domNode.style.height = `${totalHeight}px`;\n        return true;\n    }\n    // ----- Public\n    focusFindInput() {\n        this._findInput.select();\n        // Edge browser requires focus() in addition to select()\n        this._findInput.focus();\n    }\n    focusReplaceInput() {\n        this._replaceInput.select();\n        // Edge browser requires focus() in addition to select()\n        this._replaceInput.focus();\n    }\n    highlightFindOptions() {\n        this._findInput.highlightFindOptions();\n    }\n    _updateSearchScope() {\n        if (!this._codeEditor.hasModel()) {\n            return;\n        }\n        if (this._toggleSelectionFind.checked) {\n            const selections = this._codeEditor.getSelections();\n            selections.map(selection => {\n                if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                    selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                }\n                const currentMatch = this._state.currentMatch;\n                if (selection.startLineNumber !== selection.endLineNumber) {\n                    if (!Range.equalsRange(selection, currentMatch)) {\n                        return selection;\n                    }\n                }\n                return null;\n            }).filter(element => !!element);\n            if (selections.length) {\n                this._state.change({ searchScope: selections }, true);\n            }\n        }\n    }\n    _onFindInputMouseDown(e) {\n        // on linux, middle key does pasting.\n        if (e.middleButton) {\n            e.stopPropagation();\n        }\n    }\n    _onFindInputKeyDown(e) {\n        if (e.equals(ctrlKeyMod | 3 /* KeyCode.Enter */)) {\n            if (this._keybindingService.dispatchEvent(e, e.target)) {\n                e.preventDefault();\n                return;\n            }\n            else {\n                this._findInput.inputBox.insertAtCursor('\\n');\n                e.preventDefault();\n                return;\n            }\n        }\n        if (e.equals(2 /* KeyCode.Tab */)) {\n            if (this._isReplaceVisible) {\n                this._replaceInput.focus();\n            }\n            else {\n                this._findInput.focusOnCaseSensitive();\n            }\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)) {\n            this._codeEditor.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(16 /* KeyCode.UpArrow */)) {\n            return stopPropagationForMultiLineUpwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n        }\n        if (e.equals(18 /* KeyCode.DownArrow */)) {\n            return stopPropagationForMultiLineDownwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n        }\n    }\n    _onReplaceInputKeyDown(e) {\n        if (e.equals(ctrlKeyMod | 3 /* KeyCode.Enter */)) {\n            if (this._keybindingService.dispatchEvent(e, e.target)) {\n                e.preventDefault();\n                return;\n            }\n            else {\n                if (platform.isWindows && platform.isNative && !this._ctrlEnterReplaceAllWarningPrompted) {\n                    // this is the first time when users press Ctrl + Enter to replace all\n                    this._notificationService.info(nls.localize('ctrlEnter.keybindingChanged', 'Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.'));\n                    this._ctrlEnterReplaceAllWarningPrompted = true;\n                    this._storageService.store(ctrlEnterReplaceAllWarningPromptedKey, true, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n                }\n                this._replaceInput.inputBox.insertAtCursor('\\n');\n                e.preventDefault();\n                return;\n            }\n        }\n        if (e.equals(2 /* KeyCode.Tab */)) {\n            this._findInput.focusOnCaseSensitive();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n            this._findInput.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */)) {\n            this._codeEditor.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(16 /* KeyCode.UpArrow */)) {\n            return stopPropagationForMultiLineUpwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n        }\n        if (e.equals(18 /* KeyCode.DownArrow */)) {\n            return stopPropagationForMultiLineDownwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n        }\n    }\n    // ----- sash\n    getVerticalSashLeft(_sash) {\n        return 0;\n    }\n    // ----- initialization\n    _keybindingLabelFor(actionId) {\n        const kb = this._keybindingService.lookupKeybinding(actionId);\n        if (!kb) {\n            return '';\n        }\n        return ` (${kb.getLabel()})`;\n    }\n    _buildDomNode() {\n        const flexibleHeight = true;\n        const flexibleWidth = true;\n        // Find input\n        this._findInput = this._register(new ContextScopedFindInput(null, this._contextViewProvider, {\n            width: FIND_INPUT_AREA_WIDTH,\n            label: NLS_FIND_INPUT_LABEL,\n            placeholder: NLS_FIND_INPUT_PLACEHOLDER,\n            appendCaseSensitiveLabel: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\n            appendWholeWordsLabel: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\n            appendRegexLabel: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\n            validation: (value) => {\n                if (value.length === 0 || !this._findInput.getRegex()) {\n                    return null;\n                }\n                try {\n                    // use `g` and `u` which are also used by the TextModel search\n                    new RegExp(value, 'gu');\n                    return null;\n                }\n                catch (e) {\n                    return { content: e.message };\n                }\n            },\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight: 118,\n            showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService)\n        }, this._contextKeyService, true));\n        this._findInput.setRegex(!!this._state.isRegex);\n        this._findInput.setCaseSensitive(!!this._state.matchCase);\n        this._findInput.setWholeWords(!!this._state.wholeWord);\n        this._register(this._findInput.onKeyDown((e) => this._onFindInputKeyDown(e)));\n        this._register(this._findInput.inputBox.onDidChange(() => {\n            if (this._ignoreChangeEvent) {\n                return;\n            }\n            this._state.change({ searchString: this._findInput.getValue() }, true);\n        }));\n        this._register(this._findInput.onDidOptionChange(() => {\n            this._state.change({\n                isRegex: this._findInput.getRegex(),\n                wholeWord: this._findInput.getWholeWords(),\n                matchCase: this._findInput.getCaseSensitive()\n            }, true);\n        }));\n        this._register(this._findInput.onCaseSensitiveKeyDown((e) => {\n            if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n                if (this._isReplaceVisible) {\n                    this._replaceInput.focus();\n                    e.preventDefault();\n                }\n            }\n        }));\n        this._register(this._findInput.onRegexKeyDown((e) => {\n            if (e.equals(2 /* KeyCode.Tab */)) {\n                if (this._isReplaceVisible) {\n                    this._replaceInput.focusOnPreserve();\n                    e.preventDefault();\n                }\n            }\n        }));\n        this._register(this._findInput.inputBox.onDidHeightChange((e) => {\n            if (this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }));\n        if (platform.isLinux) {\n            this._register(this._findInput.onMouseDown((e) => this._onFindInputMouseDown(e)));\n        }\n        this._matchesCount = document.createElement('div');\n        this._matchesCount.className = 'matchesCount';\n        this._updateMatchesCount();\n        // Previous button\n        this._prevBtn = this._register(new SimpleButton({\n            label: NLS_PREVIOUS_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.PreviousMatchFindAction),\n            icon: findPreviousMatchIcon,\n            onTrigger: () => {\n                this._codeEditor.getAction(FIND_IDS.PreviousMatchFindAction).run().then(undefined, onUnexpectedError);\n            }\n        }));\n        // Next button\n        this._nextBtn = this._register(new SimpleButton({\n            label: NLS_NEXT_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.NextMatchFindAction),\n            icon: findNextMatchIcon,\n            onTrigger: () => {\n                this._codeEditor.getAction(FIND_IDS.NextMatchFindAction).run().then(undefined, onUnexpectedError);\n            }\n        }));\n        const findPart = document.createElement('div');\n        findPart.className = 'find-part';\n        findPart.appendChild(this._findInput.domNode);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'find-actions';\n        findPart.appendChild(actionsContainer);\n        actionsContainer.appendChild(this._matchesCount);\n        actionsContainer.appendChild(this._prevBtn.domNode);\n        actionsContainer.appendChild(this._nextBtn.domNode);\n        // Toggle selection button\n        this._toggleSelectionFind = this._register(new Toggle({\n            icon: findSelectionIcon,\n            title: NLS_TOGGLE_SELECTION_FIND_TITLE + this._keybindingLabelFor(FIND_IDS.ToggleSearchScopeCommand),\n            isChecked: false\n        }));\n        this._register(this._toggleSelectionFind.onChange(() => {\n            if (this._toggleSelectionFind.checked) {\n                if (this._codeEditor.hasModel()) {\n                    const selections = this._codeEditor.getSelections();\n                    selections.map(selection => {\n                        if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                            selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                        }\n                        if (!selection.isEmpty()) {\n                            return selection;\n                        }\n                        return null;\n                    }).filter(element => !!element);\n                    if (selections.length) {\n                        this._state.change({ searchScope: selections }, true);\n                    }\n                }\n            }\n            else {\n                this._state.change({ searchScope: null }, true);\n            }\n        }));\n        actionsContainer.appendChild(this._toggleSelectionFind.domNode);\n        // Close button\n        this._closeBtn = this._register(new SimpleButton({\n            label: NLS_CLOSE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.CloseFindWidgetCommand),\n            icon: widgetClose,\n            onTrigger: () => {\n                this._state.change({ isRevealed: false, searchScope: null }, false);\n            },\n            onKeyDown: (e) => {\n                if (e.equals(2 /* KeyCode.Tab */)) {\n                    if (this._isReplaceVisible) {\n                        if (this._replaceBtn.isEnabled()) {\n                            this._replaceBtn.focus();\n                        }\n                        else {\n                            this._codeEditor.focus();\n                        }\n                        e.preventDefault();\n                    }\n                }\n            }\n        }));\n        actionsContainer.appendChild(this._closeBtn.domNode);\n        // Replace input\n        this._replaceInput = this._register(new ContextScopedReplaceInput(null, undefined, {\n            label: NLS_REPLACE_INPUT_LABEL,\n            placeholder: NLS_REPLACE_INPUT_PLACEHOLDER,\n            appendPreserveCaseLabel: this._keybindingLabelFor(FIND_IDS.TogglePreserveCaseCommand),\n            history: [],\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight: 118,\n            showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService)\n        }, this._contextKeyService, true));\n        this._replaceInput.setPreserveCase(!!this._state.preserveCase);\n        this._register(this._replaceInput.onKeyDown((e) => this._onReplaceInputKeyDown(e)));\n        this._register(this._replaceInput.inputBox.onDidChange(() => {\n            this._state.change({ replaceString: this._replaceInput.inputBox.value }, false);\n        }));\n        this._register(this._replaceInput.inputBox.onDidHeightChange((e) => {\n            if (this._isReplaceVisible && this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }));\n        this._register(this._replaceInput.onDidOptionChange(() => {\n            this._state.change({\n                preserveCase: this._replaceInput.getPreserveCase()\n            }, true);\n        }));\n        this._register(this._replaceInput.onPreserveCaseKeyDown((e) => {\n            if (e.equals(2 /* KeyCode.Tab */)) {\n                if (this._prevBtn.isEnabled()) {\n                    this._prevBtn.focus();\n                }\n                else if (this._nextBtn.isEnabled()) {\n                    this._nextBtn.focus();\n                }\n                else if (this._toggleSelectionFind.enabled) {\n                    this._toggleSelectionFind.focus();\n                }\n                else if (this._closeBtn.isEnabled()) {\n                    this._closeBtn.focus();\n                }\n                e.preventDefault();\n            }\n        }));\n        // Replace one button\n        this._replaceBtn = this._register(new SimpleButton({\n            label: NLS_REPLACE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceOneAction),\n            icon: findReplaceIcon,\n            onTrigger: () => {\n                this._controller.replace();\n            },\n            onKeyDown: (e) => {\n                if (e.equals(1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */)) {\n                    this._closeBtn.focus();\n                    e.preventDefault();\n                }\n            }\n        }));\n        // Replace all button\n        this._replaceAllBtn = this._register(new SimpleButton({\n            label: NLS_REPLACE_ALL_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceAllAction),\n            icon: findReplaceAllIcon,\n            onTrigger: () => {\n                this._controller.replaceAll();\n            }\n        }));\n        const replacePart = document.createElement('div');\n        replacePart.className = 'replace-part';\n        replacePart.appendChild(this._replaceInput.domNode);\n        const replaceActionsContainer = document.createElement('div');\n        replaceActionsContainer.className = 'replace-actions';\n        replacePart.appendChild(replaceActionsContainer);\n        replaceActionsContainer.appendChild(this._replaceBtn.domNode);\n        replaceActionsContainer.appendChild(this._replaceAllBtn.domNode);\n        // Toggle replace button\n        this._toggleReplaceBtn = this._register(new SimpleButton({\n            label: NLS_TOGGLE_REPLACE_MODE_BTN_LABEL,\n            className: 'codicon toggle left',\n            onTrigger: () => {\n                this._state.change({ isReplaceRevealed: !this._isReplaceVisible }, false);\n                if (this._isReplaceVisible) {\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                    this._replaceInput.inputBox.layout();\n                }\n                this._showViewZone();\n            }\n        }));\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n        // Widget\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'editor-widget find-widget';\n        this._domNode.setAttribute('aria-hidden', 'true');\n        // We need to set this explicitly, otherwise on IE11, the width inheritence of flex doesn't work.\n        this._domNode.style.width = `${FIND_WIDGET_INITIAL_WIDTH}px`;\n        this._domNode.appendChild(this._toggleReplaceBtn.domNode);\n        this._domNode.appendChild(findPart);\n        this._domNode.appendChild(replacePart);\n        this._resizeSash = new Sash(this._domNode, this, { orientation: 0 /* Orientation.VERTICAL */, size: 2 });\n        this._resized = false;\n        let originalWidth = FIND_WIDGET_INITIAL_WIDTH;\n        this._register(this._resizeSash.onDidStart(() => {\n            originalWidth = dom.getTotalWidth(this._domNode);\n        }));\n        this._register(this._resizeSash.onDidChange((evt) => {\n            this._resized = true;\n            const width = originalWidth + evt.startX - evt.currentX;\n            if (width < FIND_WIDGET_INITIAL_WIDTH) {\n                // narrow down the find widget should be handled by CSS.\n                return;\n            }\n            const maxWidth = parseFloat(dom.getComputedStyle(this._domNode).maxWidth) || 0;\n            if (width > maxWidth) {\n                return;\n            }\n            this._domNode.style.width = `${width}px`;\n            if (this._isReplaceVisible) {\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            }\n            this._findInput.inputBox.layout();\n            this._tryUpdateHeight();\n        }));\n        this._register(this._resizeSash.onDidReset(() => {\n            // users double click on the sash\n            const currentWidth = dom.getTotalWidth(this._domNode);\n            if (currentWidth < FIND_WIDGET_INITIAL_WIDTH) {\n                // The editor is narrow and the width of the find widget is controlled fully by CSS.\n                return;\n            }\n            let width = FIND_WIDGET_INITIAL_WIDTH;\n            if (!this._resized || currentWidth === FIND_WIDGET_INITIAL_WIDTH) {\n                // 1. never resized before, double click should maximizes it\n                // 2. users resized it already but its width is the same as default\n                const layoutInfo = this._codeEditor.getLayoutInfo();\n                width = layoutInfo.width - 28 - layoutInfo.minimap.minimapWidth - 15;\n                this._resized = true;\n            }\n            else {\n                /**\n                 * no op, the find widget should be shrinked to its default size.\n                 */\n            }\n            this._domNode.style.width = `${width}px`;\n            if (this._isReplaceVisible) {\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            }\n            this._findInput.inputBox.layout();\n        }));\n    }\n    updateAccessibilitySupport() {\n        const value = this._codeEditor.getOption(2 /* EditorOption.accessibilitySupport */);\n        this._findInput.setFocusInputOnOptionClick(value !== 2 /* AccessibilitySupport.Enabled */);\n    }\n}\nFindWidget.ID = 'editor.contrib.findWidget';\nexport class SimpleButton extends Widget {\n    constructor(opts) {\n        super();\n        this._opts = opts;\n        let className = 'button';\n        if (this._opts.className) {\n            className = className + ' ' + this._opts.className;\n        }\n        if (this._opts.icon) {\n            className = className + ' ' + ThemeIcon.asClassName(this._opts.icon);\n        }\n        this._domNode = document.createElement('div');\n        this._domNode.title = this._opts.label;\n        this._domNode.tabIndex = 0;\n        this._domNode.className = className;\n        this._domNode.setAttribute('role', 'button');\n        this._domNode.setAttribute('aria-label', this._opts.label);\n        this.onclick(this._domNode, (e) => {\n            this._opts.onTrigger();\n            e.preventDefault();\n        });\n        this.onkeydown(this._domNode, (e) => {\n            var _a, _b;\n            if (e.equals(10 /* KeyCode.Space */) || e.equals(3 /* KeyCode.Enter */)) {\n                this._opts.onTrigger();\n                e.preventDefault();\n                return;\n            }\n            (_b = (_a = this._opts).onKeyDown) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n        });\n    }\n    get domNode() {\n        return this._domNode;\n    }\n    isEnabled() {\n        return (this._domNode.tabIndex >= 0);\n    }\n    focus() {\n        this._domNode.focus();\n    }\n    setEnabled(enabled) {\n        this._domNode.classList.toggle('disabled', !enabled);\n        this._domNode.setAttribute('aria-disabled', String(!enabled));\n        this._domNode.tabIndex = enabled ? 0 : -1;\n    }\n    setExpanded(expanded) {\n        this._domNode.setAttribute('aria-expanded', String(!!expanded));\n        if (expanded) {\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findExpandedIcon));\n        }\n        else {\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findExpandedIcon));\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n        }\n    }\n}\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const addBackgroundColorRule = (selector, color) => {\n        if (color) {\n            collector.addRule(`.monaco-editor ${selector} { background-color: ${color}; }`);\n        }\n    };\n    addBackgroundColorRule('.findMatch', theme.getColor(editorFindMatchHighlight));\n    addBackgroundColorRule('.currentFindMatch', theme.getColor(editorFindMatch));\n    addBackgroundColorRule('.findScope', theme.getColor(editorFindRangeHighlight));\n    const widgetBackground = theme.getColor(editorWidgetBackground);\n    addBackgroundColorRule('.find-widget', widgetBackground);\n    const widgetShadowColor = theme.getColor(widgetShadow);\n    if (widgetShadowColor) {\n        collector.addRule(`.monaco-editor .find-widget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);\n    }\n    const findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\n    if (findMatchHighlightBorder) {\n        collector.addRule(`.monaco-editor .findMatch { border: 1px ${isHighContrast(theme.type) ? 'dotted' : 'solid'} ${findMatchHighlightBorder}; box-sizing: border-box; }`);\n    }\n    const findMatchBorder = theme.getColor(editorFindMatchBorder);\n    if (findMatchBorder) {\n        collector.addRule(`.monaco-editor .currentFindMatch { border: 2px solid ${findMatchBorder}; padding: 1px; box-sizing: border-box; }`);\n    }\n    const findRangeHighlightBorder = theme.getColor(editorFindRangeHighlightBorder);\n    if (findRangeHighlightBorder) {\n        collector.addRule(`.monaco-editor .findScope { border: 1px ${isHighContrast(theme.type) ? 'dashed' : 'solid'} ${findRangeHighlightBorder}; }`);\n    }\n    const hcBorder = theme.getColor(contrastBorder);\n    if (hcBorder) {\n        collector.addRule(`.monaco-editor .find-widget { border: 1px solid ${hcBorder}; }`);\n    }\n    const foreground = theme.getColor(editorWidgetForeground);\n    if (foreground) {\n        collector.addRule(`.monaco-editor .find-widget { color: ${foreground}; }`);\n    }\n    const error = theme.getColor(errorForeground);\n    if (error) {\n        collector.addRule(`.monaco-editor .find-widget.no-results .matchesCount { color: ${error}; }`);\n    }\n    const resizeBorderBackground = theme.getColor(editorWidgetResizeBorder);\n    if (resizeBorderBackground) {\n        collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${resizeBorderBackground}; }`);\n    }\n    else {\n        const border = theme.getColor(editorWidgetBorder);\n        if (border) {\n            collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${border}; }`);\n        }\n    }\n    // Action bars\n    const toolbarHoverBackgroundColor = theme.getColor(toolbarHoverBackground);\n    if (toolbarHoverBackgroundColor) {\n        collector.addRule(`\n\t\t.monaco-editor .find-widget .button:not(.disabled):hover,\n\t\t.monaco-editor .find-widget .codicon-find-selection:hover {\n\t\t\tbackground-color: ${toolbarHoverBackgroundColor} !important;\n\t\t}\n\t`);\n    }\n    // This rule is used to override the outline color for synthetic-focus find input.\n    const focusOutline = theme.getColor(focusBorder);\n    if (focusOutline) {\n        collector.addRule(`.monaco-editor .find-widget .monaco-inputbox.synthetic-focus { outline-color: ${focusOutline}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, EditorCommand, MultiEditorAction, registerEditorAction, registerEditorCommand, registerEditorContribution, registerMultiEditorAction } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_FIND_WIDGET_VISIBLE, CONTEXT_REPLACE_INPUT_FOCUSED, FindModelBoundToEditorModel, FIND_IDS, ToggleCaseSensitiveKeybinding, TogglePreserveCaseKeybinding, ToggleRegexKeybinding, ToggleSearchScopeKeybinding, ToggleWholeWordKeybinding } from './findModel.js';\nimport { FindOptionsWidget } from './findOptionsWidget.js';\nimport { FindReplaceState } from './findState.js';\nimport { FindWidget } from './findWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nconst SEARCH_STRING_MAX_LENGTH = 524288;\nexport function getSelectionSearchString(editor, seedSearchStringFromSelection = 'single', seedSearchStringFromNonEmptySelection = false) {\n    if (!editor.hasModel()) {\n        return null;\n    }\n    const selection = editor.getSelection();\n    // if selection spans multiple lines, default search string to empty\n    if ((seedSearchStringFromSelection === 'single' && selection.startLineNumber === selection.endLineNumber)\n        || seedSearchStringFromSelection === 'multiple') {\n        if (selection.isEmpty()) {\n            const wordAtPosition = editor.getConfiguredWordAtPosition(selection.getStartPosition());\n            if (wordAtPosition && (false === seedSearchStringFromNonEmptySelection)) {\n                return wordAtPosition.word;\n            }\n        }\n        else {\n            if (editor.getModel().getValueLengthInRange(selection) < SEARCH_STRING_MAX_LENGTH) {\n                return editor.getModel().getValueInRange(selection);\n            }\n        }\n    }\n    return null;\n}\nlet CommonFindController = class CommonFindController extends Disposable {\n    constructor(editor, contextKeyService, storageService, clipboardService) {\n        super();\n        this._editor = editor;\n        this._findWidgetVisible = CONTEXT_FIND_WIDGET_VISIBLE.bindTo(contextKeyService);\n        this._contextKeyService = contextKeyService;\n        this._storageService = storageService;\n        this._clipboardService = clipboardService;\n        this._updateHistoryDelayer = new Delayer(500);\n        this._state = this._register(new FindReplaceState());\n        this.loadQueryState();\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this._model = null;\n        this._register(this._editor.onDidChangeModel(() => {\n            const shouldRestartFind = (this._editor.getModel() && this._state.isRevealed);\n            this.disposeModel();\n            this._state.change({\n                searchScope: null,\n                matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, false),\n                wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, false),\n                isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, false),\n                preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, false)\n            }, false);\n            if (shouldRestartFind) {\n                this._start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'none',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: false,\n                    updateSearchScope: false,\n                    loop: this._editor.getOption(37 /* EditorOption.find */).loop\n                });\n            }\n        }));\n    }\n    get editor() {\n        return this._editor;\n    }\n    static get(editor) {\n        return editor.getContribution(CommonFindController.ID);\n    }\n    dispose() {\n        this.disposeModel();\n        super.dispose();\n    }\n    disposeModel() {\n        if (this._model) {\n            this._model.dispose();\n            this._model = null;\n        }\n    }\n    _onStateChanged(e) {\n        this.saveQueryState(e);\n        if (e.isRevealed) {\n            if (this._state.isRevealed) {\n                this._findWidgetVisible.set(true);\n            }\n            else {\n                this._findWidgetVisible.reset();\n                this.disposeModel();\n            }\n        }\n        if (e.searchString) {\n            this.setGlobalBufferTerm(this._state.searchString);\n        }\n    }\n    saveQueryState(e) {\n        if (e.isRegex) {\n            this._storageService.store('editor.isRegex', this._state.actualIsRegex, 1 /* StorageScope.WORKSPACE */, 0 /* StorageTarget.USER */);\n        }\n        if (e.wholeWord) {\n            this._storageService.store('editor.wholeWord', this._state.actualWholeWord, 1 /* StorageScope.WORKSPACE */, 0 /* StorageTarget.USER */);\n        }\n        if (e.matchCase) {\n            this._storageService.store('editor.matchCase', this._state.actualMatchCase, 1 /* StorageScope.WORKSPACE */, 0 /* StorageTarget.USER */);\n        }\n        if (e.preserveCase) {\n            this._storageService.store('editor.preserveCase', this._state.actualPreserveCase, 1 /* StorageScope.WORKSPACE */, 0 /* StorageTarget.USER */);\n        }\n    }\n    loadQueryState() {\n        this._state.change({\n            matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* StorageScope.WORKSPACE */, this._state.matchCase),\n            wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* StorageScope.WORKSPACE */, this._state.wholeWord),\n            isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* StorageScope.WORKSPACE */, this._state.isRegex),\n            preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* StorageScope.WORKSPACE */, this._state.preserveCase)\n        }, false);\n    }\n    isFindInputFocused() {\n        return !!CONTEXT_FIND_INPUT_FOCUSED.getValue(this._contextKeyService);\n    }\n    getState() {\n        return this._state;\n    }\n    closeFindWidget() {\n        this._state.change({\n            isRevealed: false,\n            searchScope: null\n        }, false);\n        this._editor.focus();\n    }\n    toggleCaseSensitive() {\n        this._state.change({ matchCase: !this._state.matchCase }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleWholeWords() {\n        this._state.change({ wholeWord: !this._state.wholeWord }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleRegex() {\n        this._state.change({ isRegex: !this._state.isRegex }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    togglePreserveCase() {\n        this._state.change({ preserveCase: !this._state.preserveCase }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleSearchScope() {\n        if (this._state.searchScope) {\n            this._state.change({ searchScope: null }, true);\n        }\n        else {\n            if (this._editor.hasModel()) {\n                const selections = this._editor.getSelections();\n                selections.map(selection => {\n                    if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                        selection = selection.setEndPosition(selection.endLineNumber - 1, this._editor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                    }\n                    if (!selection.isEmpty()) {\n                        return selection;\n                    }\n                    return null;\n                }).filter(element => !!element);\n                if (selections.length) {\n                    this._state.change({ searchScope: selections }, true);\n                }\n            }\n        }\n    }\n    setSearchString(searchString) {\n        if (this._state.isRegex) {\n            searchString = strings.escapeRegExpCharacters(searchString);\n        }\n        this._state.change({ searchString: searchString }, false);\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n        // overwritten in subclass\n    }\n    _start(opts, newState) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.disposeModel();\n            if (!this._editor.hasModel()) {\n                // cannot do anything with an editor that doesn't have a model...\n                return;\n            }\n            const stateChanges = Object.assign(Object.assign({}, newState), { isRevealed: true });\n            if (opts.seedSearchStringFromSelection === 'single') {\n                const selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection, opts.seedSearchStringFromNonEmptySelection);\n                if (selectionSearchString) {\n                    if (this._state.isRegex) {\n                        stateChanges.searchString = strings.escapeRegExpCharacters(selectionSearchString);\n                    }\n                    else {\n                        stateChanges.searchString = selectionSearchString;\n                    }\n                }\n            }\n            else if (opts.seedSearchStringFromSelection === 'multiple' && !opts.updateSearchScope) {\n                const selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection);\n                if (selectionSearchString) {\n                    stateChanges.searchString = selectionSearchString;\n                }\n            }\n            if (!stateChanges.searchString && opts.seedSearchStringFromGlobalClipboard) {\n                const selectionSearchString = yield this.getGlobalBufferTerm();\n                if (!this._editor.hasModel()) {\n                    // the editor has lost its model in the meantime\n                    return;\n                }\n                if (selectionSearchString) {\n                    stateChanges.searchString = selectionSearchString;\n                }\n            }\n            // Overwrite isReplaceRevealed\n            if (opts.forceRevealReplace || stateChanges.isReplaceRevealed) {\n                stateChanges.isReplaceRevealed = true;\n            }\n            else if (!this._findWidgetVisible.get()) {\n                stateChanges.isReplaceRevealed = false;\n            }\n            if (opts.updateSearchScope) {\n                const currentSelections = this._editor.getSelections();\n                if (currentSelections.some(selection => !selection.isEmpty())) {\n                    stateChanges.searchScope = currentSelections;\n                }\n            }\n            stateChanges.loop = opts.loop;\n            this._state.change(stateChanges, false);\n            if (!this._model) {\n                this._model = new FindModelBoundToEditorModel(this._editor, this._state);\n            }\n        });\n    }\n    start(opts, newState) {\n        return this._start(opts, newState);\n    }\n    moveToNextMatch() {\n        if (this._model) {\n            this._model.moveToNextMatch();\n            return true;\n        }\n        return false;\n    }\n    moveToPrevMatch() {\n        if (this._model) {\n            this._model.moveToPrevMatch();\n            return true;\n        }\n        return false;\n    }\n    replace() {\n        if (this._model) {\n            this._model.replace();\n            return true;\n        }\n        return false;\n    }\n    replaceAll() {\n        if (this._model) {\n            this._model.replaceAll();\n            return true;\n        }\n        return false;\n    }\n    selectAllMatches() {\n        if (this._model) {\n            this._model.selectAllMatches();\n            this._editor.focus();\n            return true;\n        }\n        return false;\n    }\n    getGlobalBufferTerm() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._editor.getOption(37 /* EditorOption.find */).globalFindClipboard\n                && this._editor.hasModel()\n                && !this._editor.getModel().isTooLargeForSyncing()) {\n                return this._clipboardService.readFindText();\n            }\n            return '';\n        });\n    }\n    setGlobalBufferTerm(text) {\n        if (this._editor.getOption(37 /* EditorOption.find */).globalFindClipboard\n            && this._editor.hasModel()\n            && !this._editor.getModel().isTooLargeForSyncing()) {\n            // intentionally not awaited\n            this._clipboardService.writeFindText(text);\n        }\n    }\n};\nCommonFindController.ID = 'editor.contrib.findController';\nCommonFindController = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, IStorageService),\n    __param(3, IClipboardService)\n], CommonFindController);\nexport { CommonFindController };\nlet FindController = class FindController extends CommonFindController {\n    constructor(editor, _contextViewService, _contextKeyService, _keybindingService, _themeService, _notificationService, _storageService, clipboardService) {\n        super(editor, _contextKeyService, _storageService, clipboardService);\n        this._contextViewService = _contextViewService;\n        this._keybindingService = _keybindingService;\n        this._themeService = _themeService;\n        this._notificationService = _notificationService;\n        this._widget = null;\n        this._findOptionsWidget = null;\n    }\n    _start(opts, newState) {\n        const _super = Object.create(null, {\n            _start: { get: () => super._start }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._widget) {\n                this._createFindWidget();\n            }\n            const selection = this._editor.getSelection();\n            let updateSearchScope = false;\n            switch (this._editor.getOption(37 /* EditorOption.find */).autoFindInSelection) {\n                case 'always':\n                    updateSearchScope = true;\n                    break;\n                case 'never':\n                    updateSearchScope = false;\n                    break;\n                case 'multiline': {\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n                    updateSearchScope = isSelectionMultipleLine;\n                    break;\n                }\n                default:\n                    break;\n            }\n            opts.updateSearchScope = opts.updateSearchScope || updateSearchScope;\n            yield _super._start.call(this, opts, newState);\n            if (this._widget) {\n                if (opts.shouldFocus === 2 /* FindStartFocusAction.FocusReplaceInput */) {\n                    this._widget.focusReplaceInput();\n                }\n                else if (opts.shouldFocus === 1 /* FindStartFocusAction.FocusFindInput */) {\n                    this._widget.focusFindInput();\n                }\n            }\n        });\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n        if (!this._widget) {\n            this._createFindWidget();\n        }\n        if (this._state.isRevealed && !ignoreWhenVisible) {\n            this._widget.highlightFindOptions();\n        }\n        else {\n            this._findOptionsWidget.highlightFindOptions();\n        }\n    }\n    _createFindWidget() {\n        this._widget = this._register(new FindWidget(this._editor, this, this._state, this._contextViewService, this._keybindingService, this._contextKeyService, this._themeService, this._storageService, this._notificationService));\n        this._findOptionsWidget = this._register(new FindOptionsWidget(this._editor, this._state, this._keybindingService, this._themeService));\n    }\n};\nFindController = __decorate([\n    __param(1, IContextViewService),\n    __param(2, IContextKeyService),\n    __param(3, IKeybindingService),\n    __param(4, IThemeService),\n    __param(5, INotificationService),\n    __param(6, IStorageService),\n    __param(7, IClipboardService)\n], FindController);\nexport { FindController };\nexport const StartFindAction = registerMultiEditorAction(new MultiEditorAction({\n    id: FIND_IDS.StartFindAction,\n    label: nls.localize('startFindAction', \"Find\"),\n    alias: 'Find',\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n    kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 36 /* KeyCode.KeyF */,\n        weight: 100 /* KeybindingWeight.EditorContrib */\n    },\n    menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({ key: 'miFind', comment: ['&& denotes a mnemonic'] }, \"&&Find\"),\n        order: 1\n    }\n}));\nStartFindAction.addImplementation(0, (accessor, editor, args) => {\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n        return false;\n    }\n    return controller.start({\n        forceRevealReplace: false,\n        seedSearchStringFromSelection: editor.getOption(37 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n        seedSearchStringFromNonEmptySelection: editor.getOption(37 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n        seedSearchStringFromGlobalClipboard: editor.getOption(37 /* EditorOption.find */).globalFindClipboard,\n        shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n        shouldAnimate: true,\n        updateSearchScope: false,\n        loop: editor.getOption(37 /* EditorOption.find */).loop\n    });\n});\nconst findArgDescription = {\n    description: 'Open a new In-Editor Find Widget.',\n    args: [{\n            name: 'Open a new In-Editor Find Widget args',\n            schema: {\n                properties: {\n                    searchString: { type: 'string' },\n                    replaceString: { type: 'string' },\n                    regex: { type: 'boolean' },\n                    regexOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.isRegexOverride', 'Overrides \"Use Regular Expression\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    wholeWord: { type: 'boolean' },\n                    wholeWordOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.wholeWordOverride', 'Overrides \"Match Whole Word\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    matchCase: { type: 'boolean' },\n                    matchCaseOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.matchCaseOverride', 'Overrides \"Math Case\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    preserveCase: { type: 'boolean' },\n                    preserveCaseOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.preserveCaseOverride', 'Overrides \"Preserve Case\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    findInSelection: { type: 'boolean' },\n                }\n            }\n        }]\n};\nexport class StartFindWithArgsAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.StartFindWithArgs,\n            label: nls.localize('startFindWithArgsAction', \"Find With Arguments\"),\n            alias: 'Find With Arguments',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 0,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            description: findArgDescription\n        });\n    }\n    run(accessor, editor, args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller) {\n                const newState = args ? {\n                    searchString: args.searchString,\n                    replaceString: args.replaceString,\n                    isReplaceRevealed: args.replaceString !== undefined,\n                    isRegex: args.isRegex,\n                    // isRegexOverride: args.regexOverride,\n                    wholeWord: args.matchWholeWord,\n                    // wholeWordOverride: args.wholeWordOverride,\n                    matchCase: args.isCaseSensitive,\n                    // matchCaseOverride: args.matchCaseOverride,\n                    preserveCase: args.preserveCase,\n                    // preserveCaseOverride: args.preserveCaseOverride,\n                } : {};\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(37 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                    seedSearchStringFromNonEmptySelection: editor.getOption(37 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n                    seedSearchStringFromGlobalClipboard: true,\n                    shouldFocus: 1 /* FindStartFocusAction.FocusFindInput */,\n                    shouldAnimate: true,\n                    updateSearchScope: (args === null || args === void 0 ? void 0 : args.findInSelection) || false,\n                    loop: editor.getOption(37 /* EditorOption.find */).loop\n                }, newState);\n                controller.setGlobalBufferTerm(controller.getState().searchString);\n            }\n        });\n    }\n}\nexport class StartFindWithSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.StartFindWithSelection,\n            label: nls.localize('startFindWithSelectionAction', \"Find With Selection\"),\n            alias: 'Find With Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 0,\n                mac: {\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 35 /* KeyCode.KeyE */,\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'multiple',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(37 /* EditorOption.find */).loop\n                });\n                controller.setGlobalBufferTerm(controller.getState().searchString);\n            }\n        });\n    }\n}\nexport class MatchFindAction extends EditorAction {\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller && !this._run(controller)) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(37 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                    seedSearchStringFromNonEmptySelection: editor.getOption(37 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n                    seedSearchStringFromGlobalClipboard: true,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(37 /* EditorOption.find */).loop\n                });\n                this._run(controller);\n            }\n        });\n    }\n}\nexport class NextMatchFindAction extends MatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.NextMatchFindAction,\n            label: nls.localize('findNextMatchAction', \"Find Next\"),\n            alias: 'Find Next',\n            precondition: undefined,\n            kbOpts: [{\n                    kbExpr: EditorContextKeys.focus,\n                    primary: 61 /* KeyCode.F3 */,\n                    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 37 /* KeyCode.KeyG */, secondary: [61 /* KeyCode.F3 */] },\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n                    primary: 3 /* KeyCode.Enter */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }]\n        });\n    }\n    _run(controller) {\n        const result = controller.moveToNextMatch();\n        if (result) {\n            controller.editor.pushUndoStop();\n            return true;\n        }\n        return false;\n    }\n}\nexport class PreviousMatchFindAction extends MatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.PreviousMatchFindAction,\n            label: nls.localize('findPreviousMatchAction', \"Find Previous\"),\n            alias: 'Find Previous',\n            precondition: undefined,\n            kbOpts: [{\n                    kbExpr: EditorContextKeys.focus,\n                    primary: 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n                    mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 37 /* KeyCode.KeyG */, secondary: [1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */] },\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }, {\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n                    primary: 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n                    weight: 100 /* KeybindingWeight.EditorContrib */\n                }\n            ]\n        });\n    }\n    _run(controller) {\n        return controller.moveToPrevMatch();\n    }\n}\nexport class SelectionMatchFindAction extends EditorAction {\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (!controller) {\n                return;\n            }\n            const seedSearchStringFromNonEmptySelection = editor.getOption(37 /* EditorOption.find */).seedSearchStringFromSelection === 'selection';\n            let selectionSearchString = null;\n            if (editor.getOption(37 /* EditorOption.find */).seedSearchStringFromSelection !== 'never') {\n                selectionSearchString = getSelectionSearchString(editor, 'single', seedSearchStringFromNonEmptySelection);\n            }\n            if (selectionSearchString) {\n                controller.setSearchString(selectionSearchString);\n            }\n            if (!this._run(controller)) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: editor.getOption(37 /* EditorOption.find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                    seedSearchStringFromNonEmptySelection: seedSearchStringFromNonEmptySelection,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* FindStartFocusAction.NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(37 /* EditorOption.find */).loop\n                });\n                this._run(controller);\n            }\n        });\n    }\n}\nexport class NextSelectionMatchFindAction extends SelectionMatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.NextSelectionMatchFindAction,\n            label: nls.localize('nextSelectionMatchFindAction', \"Find Next Selection\"),\n            alias: 'Find Next Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 61 /* KeyCode.F3 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _run(controller) {\n        return controller.moveToNextMatch();\n    }\n}\nexport class PreviousSelectionMatchFindAction extends SelectionMatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.PreviousSelectionMatchFindAction,\n            label: nls.localize('previousSelectionMatchFindAction', \"Find Previous Selection\"),\n            alias: 'Find Previous Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 61 /* KeyCode.F3 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _run(controller) {\n        return controller.moveToPrevMatch();\n    }\n}\nexport const StartFindReplaceAction = registerMultiEditorAction(new MultiEditorAction({\n    id: FIND_IDS.StartFindReplaceAction,\n    label: nls.localize('startReplace', \"Replace\"),\n    alias: 'Replace',\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n    kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 38 /* KeyCode.KeyH */,\n        mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 36 /* KeyCode.KeyF */ },\n        weight: 100 /* KeybindingWeight.EditorContrib */\n    },\n    menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({ key: 'miReplace', comment: ['&& denotes a mnemonic'] }, \"&&Replace\"),\n        order: 2\n    }\n}));\nStartFindReplaceAction.addImplementation(0, (accessor, editor, args) => {\n    if (!editor.hasModel() || editor.getOption(83 /* EditorOption.readOnly */)) {\n        return false;\n    }\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n        return false;\n    }\n    const currentSelection = editor.getSelection();\n    const findInputFocused = controller.isFindInputFocused();\n    // we only seed search string from selection when the current selection is single line and not empty,\n    // + the find input is not focused\n    const seedSearchStringFromSelection = !currentSelection.isEmpty()\n        && currentSelection.startLineNumber === currentSelection.endLineNumber\n        && (editor.getOption(37 /* EditorOption.find */).seedSearchStringFromSelection !== 'never')\n        && !findInputFocused;\n    /*\n    * if the existing search string in find widget is empty and we don't seed search string from selection, it means the Find Input is still empty, so we should focus the Find Input instead of Replace Input.\n\n    * findInputFocused true -> seedSearchStringFromSelection false, FocusReplaceInput\n    * findInputFocused false, seedSearchStringFromSelection true FocusReplaceInput\n    * findInputFocused false seedSearchStringFromSelection false FocusFindInput\n    */\n    const shouldFocus = (findInputFocused || seedSearchStringFromSelection) ?\n        2 /* FindStartFocusAction.FocusReplaceInput */ : 1 /* FindStartFocusAction.FocusFindInput */;\n    return controller.start({\n        forceRevealReplace: true,\n        seedSearchStringFromSelection: seedSearchStringFromSelection ? 'single' : 'none',\n        seedSearchStringFromNonEmptySelection: editor.getOption(37 /* EditorOption.find */).seedSearchStringFromSelection === 'selection',\n        seedSearchStringFromGlobalClipboard: editor.getOption(37 /* EditorOption.find */).seedSearchStringFromSelection !== 'never',\n        shouldFocus: shouldFocus,\n        shouldAnimate: true,\n        updateSearchScope: false,\n        loop: editor.getOption(37 /* EditorOption.find */).loop\n    });\n});\nregisterEditorContribution(CommonFindController.ID, FindController);\nregisterEditorAction(StartFindWithArgsAction);\nregisterEditorAction(StartFindWithSelectionAction);\nregisterEditorAction(NextMatchFindAction);\nregisterEditorAction(PreviousMatchFindAction);\nregisterEditorAction(NextSelectionMatchFindAction);\nregisterEditorAction(PreviousSelectionMatchFindAction);\nconst FindCommand = EditorCommand.bindToContribution(CommonFindController.get);\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.CloseFindWidgetCommand,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.closeFindWidget(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleCaseSensitiveCommand,\n    precondition: undefined,\n    handler: x => x.toggleCaseSensitive(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleCaseSensitiveKeybinding.primary,\n        mac: ToggleCaseSensitiveKeybinding.mac,\n        win: ToggleCaseSensitiveKeybinding.win,\n        linux: ToggleCaseSensitiveKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleWholeWordCommand,\n    precondition: undefined,\n    handler: x => x.toggleWholeWords(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleWholeWordKeybinding.primary,\n        mac: ToggleWholeWordKeybinding.mac,\n        win: ToggleWholeWordKeybinding.win,\n        linux: ToggleWholeWordKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleRegexCommand,\n    precondition: undefined,\n    handler: x => x.toggleRegex(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleRegexKeybinding.primary,\n        mac: ToggleRegexKeybinding.mac,\n        win: ToggleRegexKeybinding.win,\n        linux: ToggleRegexKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleSearchScopeCommand,\n    precondition: undefined,\n    handler: x => x.toggleSearchScope(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleSearchScopeKeybinding.primary,\n        mac: ToggleSearchScopeKeybinding.mac,\n        win: ToggleSearchScopeKeybinding.win,\n        linux: ToggleSearchScopeKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.TogglePreserveCaseCommand,\n    precondition: undefined,\n    handler: x => x.togglePreserveCase(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: TogglePreserveCaseKeybinding.primary,\n        mac: TogglePreserveCaseKeybinding.mac,\n        win: TogglePreserveCaseKeybinding.win,\n        linux: TogglePreserveCaseKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceOneAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replace(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 22 /* KeyCode.Digit1 */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceOneAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replace(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n        primary: 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceAllAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replaceAll(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceAllAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replaceAll(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n        primary: undefined,\n        mac: {\n            primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n        }\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.SelectAllMatchesAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.selectAllMatches(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 512 /* KeyMod.Alt */ | 3 /* KeyCode.Enter */\n    }\n}));\n"],"names":["DragAndDropCommand","selection","targetPosition","copy","this","targetSelection","model","builder","text","getValueInRange","addEditOperation","Range","lineNumber","column","containsPosition","getEndPosition","equals","getStartPosition","Selection","endLineNumber","startLineNumber","endColumn","startColumn","helper","hasTriggerModifier","e","isMacintosh","altKey","ctrlKey","DragAndDropController","editor","_editor","_dndDecorationIds","createDecorationsCollection","_register","onMouseDown","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onMouseDrag","_onEditorMouseDrag","onMouseDrop","_onEditorMouseDrop","onMouseDropCanceled","_onEditorMouseDropCanceled","onKeyDown","onEditorKeyDown","onKeyUp","onEditorKeyUp","onDidBlurEditorWidget","onEditorBlur","onDidBlurEditorText","_mouseDown","_modifierPressed","_dragSelection","_removeDecoration","getOption","updateOptions","mouseStyle","keyCode","TRIGGER_KEY_VALUE","mouseEvent","target","possibleSelections","getSelections","filter","position","length","event","showAt","_hitContent","_hitMargin","newCursorPosition","Position","newSelections","shiftKey","primarySelection","getSelection","selectionStartLineNumber","selectionStartColumn","map","setSelections","pushUndoStop","executeCommand","ID","set","range","options","_DECORATION_OPTIONS","revealPosition","clear","type","Disposable","ModelDecorationOptions","description","className","registerEditorContribution","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","apply","CommandsRegistry","accessor","args","resource","assertType","URI","outlineService","get","IOutlineModelService","modelService","ITextModelService","createModelReference","reference","getOrCreate","object","textEditorModel","CancellationToken","getTopLevelSymbols","dispose","__decorate","decorators","key","desc","d","c","arguments","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","TreeElement","_a","parent","children","delete","id","candidate","container","candidateId","name","undefined","element","size","OutlineElement","symbol","Map","OutlineGroup","label","order","OutlineModel","uri","_groups","count","group","Iterable","values","child","roots","push","sort","a","b","bucket","_flattenDocumentSymbols","registry","textModel","token","cts","CancellationTokenSource","provider","ordered","promises","index","findId","displayName","provideDocumentSymbols","info","_makeOutlineElement","err","onUnexpectedExternalError","empty","remove","listener","onDidChange","newProvider","cancel","all","isCancellationRequested","create","_compact","finally","res","childInfo","entries","overrideContainerLabel","entry","kind","tags","detail","containerName","selectionRange","createDecorator","OutlineModelService","_languageFeaturesService","debounces","_disposables","DisposableStore","_cache","LRUCache","_debounceInformation","for","documentSymbolProvider","min","add","onModelRemoved","data","versionId","getVersionId","source","promiseCnt","promise","now","Date","outlineModel","update","catch","_err","onCancellationRequested","ILanguageFeaturesService","ILanguageFeatureDebounceService","IModelService","registerSingleton","DropIntoEditorController","_bulkEditService","_progressService","workspaceContextService","onDropIntoEditor","documentOnDropEditProvider","register","DefaultOnDropProvider","dragEvent","dataTransfer","hasModel","getModel","initialModelVersion","extractDataTransferData","ourDataTransfer","tokenSource","EditorStateCancellationTokenSource","providers","withProgress","location","delay","title","localize","cancellable","raceCancellation","provideDocumentOnDropEdits","edit","f","performSnippetEdit","insertText","SnippetParser","snippet","additionalEdit","ResourceEdit","VSDataTransfer","textEditorDataTransfer","toVSDataTransfer","addExternalEditorsDropData","IBulkEditService","IProgressService","IWorkspaceContextService","_workspaceContextService","_model","_position","_token","urlListEntry","Mimes","asString","urlList","getUriListInsertText","textEntry","strUriList","uris","UriList","root","getWorkspaceFolder","rel","relativePath","fsPath","join","IEditorCancellationTokens","ctxCancellableOperation","RawContextKey","_tokens","WeakMap","removeFn","invokeWithinContext","bindTo","IContextKeyService","tokens","LinkedList","isEmpty","pop","EditorKeybindingCancellationTokenSource","_unregister","registerEditorCommand","kbOpts","weight","primary","precondition","EditorCommand","EditorState","flags","modelVersionId","strings","toString","getPosition","scrollLeft","getScrollLeft","scrollTop","getScrollTop","other","state","equalsRange","_equals","_listener","onDidChangeCursorPosition","onDidChangeCursorSelection","onDidScrollChange","_","onDidChangeModel","onDidChangeModelContent","TextModelCancellationTokenSource","onDidChangeContent","FindDecorations","_decorations","_overviewRulerApproximateDecorations","_findScopeDecorationIds","_rangeHighlightDecorationId","_highlightedDecorationId","_startPosition","removeDecorations","_allDecorations","getDecorationRange","scopes","findScopeDecorationId","newStartPosition","setCurrentFindMatch","decorationId","indexOf","desiredRange","candidates","getDecorationsInRange","candidateOpts","_FIND_MATCH_DECORATION","_CURRENT_FIND_MATCH_DECORATION","_getDecorationIndex","nextMatch","newCurrentDecorationId","matchPosition","len","changeDecorations","changeAccessor","changeDecorationOptions","removeDecoration","rng","lineBeforeEnd","lineBeforeEndMaxColumn","getLineMaxColumn","addDecoration","_RANGE_HIGHLIGHT_DECORATION","findMatches","findScopes","findMatchesOptions","newOverviewRulerApproximateDecorations","_FIND_MATCH_NO_OVERVIEW_DECORATION","lineCount","getLineCount","approxPixelsPerLine","getLayoutInfo","height","mergeLinesDelta","Math","max","ceil","prevStartLineNumber","prevEndLineNumber","_FIND_MATCH_ONLY_OVERVIEW_DECORATION","newFindMatchesDecorations","Array","deltaDecorations","forEach","findScope","_FIND_SCOPE_DECORATION","concat","stickiness","zIndex","showIfCollapsed","overviewRuler","color","themeColorFromId","overviewRulerFindMatchForeground","OverviewRulerLane","minimap","minimapFindMatch","MinimapPosition","isWholeLine","ReplaceAllCommand","editorSelection","ranges","replaceStrings","_editorSelection","_ranges","_replaceStrings","_trackedEditorSelectionId","ops","o1","o2","resultOps","previousOp","plusRange","op","trackSelection","getTrackedSelection","StaticValueReplacePattern","staticValue","DynamicPiecesReplacePattern","pieces","ReplacePattern","_state","matches","preserveCase","buildReplaceStringWithCasePreserved","piece","match","_substitute","matchIndex","caseOps","repl","lenOps","opIdx","idx","slice","toUpperCase","toLowerCase","ReplacePiece","remainder","String","floor","ReplacePieceBuilder","_source","_lastCharIndex","_result","_resultLen","_currentStaticPiece","toCharIndex","_emitStatic","substring","emitUnchanged","CONTEXT_FIND_WIDGET_VISIBLE","CONTEXT_FIND_INPUT_FOCUSED","toNegated","CONTEXT_REPLACE_INPUT_FOCUSED","ToggleCaseSensitiveKeybinding","mac","ToggleWholeWordKeybinding","ToggleRegexKeybinding","ToggleSearchScopeKeybinding","TogglePreserveCaseKeybinding","FIND_IDS","MATCHES_LIMIT","FindModelBoundToEditorModel","_toDispose","_isDisposed","_startSearchingTimer","TimeoutTimer","_updateDecorationsScheduler","RunOnceScheduler","research","reason","setStartPosition","_ignoreModelContentChanged","isFlush","reset","schedule","onFindReplaceStateChange","_onStateChanged","searchScope","searchString","isReplaceRevealed","isRegex","wholeWord","matchCase","isTooLargeForSyncing","setIfNotSet","moveCursor","newFindScope","isArray","getFindScopes","_findMatches","currentMatchesPosition","getCurrentMatchesPosition","matchAfterSelection","findFirstInSorted","changeMatchInfo","getCount","cursorMoveOnType","_moveToNextMatch","matchesCount","_hasMatches","getFindScope","revealRangeInCenterIfOutsideViewport","matchesPosition","setSelection","before","isUsingLineStops","isRecursed","canNavigateBack","prevMatchRange","matchBeforePosition","_prevSearchPosition","_setCurrentFindMatch","_cannotFind","searchRange","_getSearchRange","isBefore","prevMatch","findPreviousMatch","containsRange","_moveToPrevMatch","nextMatchRange","matchAfterPosition","after","canNavigateForward","_nextSearchPosition","_getNextMatch","captureMatches","forceMove","findNextMatch","replaceString","chCode","charCodeAt","nextChCode","emitStatic","emitMatchIndex","nextNextChCode","fromCharCode","finalize","parseReplaceString","fromStaticValue","replacePattern","_getReplacePattern","buildReplaceString","command","ReplaceCommand","_executeEditorCommand","limitResultCount","searchRanges","scope","_largeReplaceAll","_regularReplaceAll","searchData","SearchParams","parseSearchRequest","searchRegex","regex","multiline","mod","ignoreCase","global","RegExp","resultText","modelText","getValue","fullModelRange","getFullModelRange","hasReplacementPatterns","replace","ReplaceCommandThatPreservesSelection","m","selections","FindOptionsWidget","keybindingService","themeService","_hideSoon","_hide","_isVisible","_keybindingService","_domNode","document","createElement","style","display","top","setAttribute","inputActiveOptionBorderColor","getColorTheme","getColor","inputActiveOptionBorder","inputActiveOptionForegroundColor","inputActiveOptionForeground","inputActiveOptionBackgroundColor","inputActiveOptionBackground","caseSensitive","CaseSensitiveToggle","appendTitle","_keybindingLabelFor","isChecked","appendChild","domNode","onChange","change","checked","wholeWords","WholeWordsToggle","RegexToggle","addOverlayWidget","somethingChanged","isRevealed","_revealTemporarily","dom","addDisposableListener","EventType","MOUSE_LEAVE","_onMouseLeave","_onMouseOver","_applyTheme","onDidColorThemeChange","bind","actionId","kb","lookupKeybinding","getLabel","removeOverlayWidget","preference","_show","theme","inputStyles","Widget","registerThemingParticipant","collector","widgetBackground","editorWidgetBackground","addRule","widgetForeground","editorWidgetForeground","widgetShadowColor","widgetShadow","hcBorder","contrastBorder","effectiveOptionValue","override","FindReplaceState","_onFindReplaceStateChange","Emitter","_searchString","_replaceString","_isRevealed","_isReplaceRevealed","_isRegex","_isRegexOverride","_wholeWord","_wholeWordOverride","_matchCase","_matchCaseOverride","_preserveCase","_preserveCaseOverride","_searchScope","_matchesPosition","_matchesCount","_currentMatch","_loop","_isSearching","_filters","currentMatch","changeEvent","updateHistory","loop","isSearching","filters","fire","newState","oldEffectiveIsRegex","oldEffectiveWholeWords","oldEffectiveMatchCase","oldEffectivePreserveCase","every","newSearchScope","some","existingSearchScope","isRegexOverride","wholeWordOverride","matchCaseOverride","preserveCaseOverride","canNavigateInLoop","findSelectionIcon","registerIcon","Codicon","nls","findCollapsedIcon","findExpandedIcon","findReplaceIcon","findReplaceAllIcon","findPreviousMatchIcon","findNextMatchIcon","NLS_FIND_INPUT_LABEL","NLS_FIND_INPUT_PLACEHOLDER","NLS_PREVIOUS_MATCH_BTN_LABEL","NLS_NEXT_MATCH_BTN_LABEL","NLS_TOGGLE_SELECTION_FIND_TITLE","NLS_CLOSE_BTN_LABEL","NLS_REPLACE_INPUT_LABEL","NLS_REPLACE_INPUT_PLACEHOLDER","NLS_REPLACE_BTN_LABEL","NLS_REPLACE_ALL_BTN_LABEL","NLS_TOGGLE_REPLACE_MODE_BTN_LABEL","NLS_MATCHES_COUNT_LIMIT_TITLE","NLS_MATCHES_LOCATION","NLS_NO_RESULTS","FIND_WIDGET_INITIAL_WIDTH","MAX_MATCHES_COUNT_WIDTH","ctrlEnterReplaceAllWarningPromptedKey","ctrlKeyMod","platform","FindWidgetViewZone","afterLineNumber","heightInPx","suppressMouseDown","stopPropagationForMultiLineUpwards","textarea","isMultiline","selectionStart","stopPropagation","stopPropagationForMultiLineDownwards","selectionEnd","FindWidget","codeEditor","controller","contextViewProvider","contextKeyService","storageService","notificationService","_cachedHeight","_revealTimeouts","_codeEditor","_controller","_contextViewProvider","_contextKeyService","_storageService","_notificationService","_ctrlEnterReplaceAllWarningPrompted","getBoolean","_isReplaceVisible","_ignoreChangeEvent","_updateHistoryDelayer","Delayer","toDisposable","_buildDomNode","_updateButtons","_tryUpdateWidgetWidth","_findInput","inputBox","layout","onDidChangeConfiguration","hasChanged","updateAccessibilitySupport","addExtraSpaceOnTop","_viewZone","_showViewZone","_removeViewZone","_updateToggleSelectionFindButton","onDidFocusEditorWidget","getGlobalBufferTerm","globalBufferTerm","select","_findInputFocused","_findFocusTracker","trackFocus","inputElement","onDidFocus","_updateSearchScope","onDidBlur","_replaceInputFocused","_replaceFocusTracker","_replaceInput","_viewZoneId","scrollTopChanged","_layoutViewZone","setTimeout","setValue","_reveal","width","getTotalWidth","_tryUpdateHeight","setRegex","setWholeWords","setCaseSensitive","setPreserveCase","_toggleSelectionFind","showRedOutline","classList","toggle","_updateMatchesCount","_delayedUpdateHistory","trigger","_updateHistory","onUnexpectedError","addToHistory","minWidth","firstChild","removeChild","createTextNode","alertFn","_getAriaLabel","clientWidth","ariaLabel","lineContent","getLineContent","isSelection","enable","disable","setEnabled","_closeBtn","findInputIsNonEmpty","_prevBtn","_nextBtn","_replaceBtn","_replaceAllBtn","_toggleReplaceBtn","setExpanded","canReplace","clearTimeout","autoFindInSelection","isSelectionMultipleLine","validate","layoutOverlayWidget","adjustEditorScrollTop","seedSearchStringFromSelection","getDomNode","editorCoords","getDomNodePagePosition","startCoords","getScrolledVisiblePosition","startLeft","left","startTop","leftOfFindWidget","getTopLeftOffset","endCoords","focusTheEditor","clearMessage","focus","targetScrollTop","viewZone","changeViewZones","_getHeight","addZone","setScrollTop","adjustScroll","newHeight","scrollAdjustment","layoutZone","removeZone","inputBackground","inputForeground","inputBorder","inputValidationInfoBackground","inputValidationInfoForeground","inputValidationInfoBorder","inputValidationWarningBackground","inputValidationWarningForeground","inputValidationWarningBorder","inputValidationErrorBackground","inputValidationErrorForeground","inputValidationErrorBorder","isInDOM","layoutInfo","contentWidth","contains","editorWidth","minimapWidth","collapsedFindWidget","reducedFindWidget","narrowFindWidget","_resized","maxWidth","findInputWidth","totalheight","totalHeight","highlightFindOptions","setEndPosition","middleButton","dispatchEvent","insertAtCursor","preventDefault","focusOnCaseSensitive","querySelector","store","_sash","ContextScopedFindInput","PART_WIDTH","placeholder","appendCaseSensitiveLabel","appendWholeWordsLabel","appendRegexLabel","validation","getRegex","content","message","flexibleHeight","flexibleWidth","flexibleMaxHeight","showHistoryHint","showHistoryKeybindingHint","_onFindInputKeyDown","onDidOptionChange","getWholeWords","getCaseSensitive","onCaseSensitiveKeyDown","onRegexKeyDown","focusOnPreserve","onDidHeightChange","_onFindInputMouseDown","SimpleButton","icon","onTrigger","getAction","run","findPart","actionsContainer","Toggle","widgetClose","isEnabled","ContextScopedReplaceInput","appendPreserveCaseLabel","history","_onReplaceInputKeyDown","getPreserveCase","onPreserveCaseKeyDown","enabled","replaceAll","replacePart","replaceActionsContainer","_resizeSash","Sash","orientation","originalWidth","onDidStart","evt","startX","currentX","parseFloat","getComputedStyle","onDidReset","currentWidth","setFocusInputOnOptionClick","opts","_opts","ThemeIcon","tabIndex","onclick","onkeydown","_b","call","expanded","addBackgroundColorRule","selector","editorFindMatchHighlight","editorFindMatch","editorFindRangeHighlight","findMatchHighlightBorder","editorFindMatchHighlightBorder","isHighContrast","findMatchBorder","editorFindMatchBorder","findRangeHighlightBorder","editorFindRangeHighlightBorder","foreground","error","errorForeground","resizeBorderBackground","editorWidgetResizeBorder","border","editorWidgetBorder","toolbarHoverBackgroundColor","toolbarHoverBackground","focusOutline","focusBorder","SEARCH_STRING_MAX_LENGTH","getSelectionSearchString","seedSearchStringFromNonEmptySelection","wordAtPosition","getConfiguredWordAtPosition","word","getValueLengthInRange","CommonFindController","clipboardService","_findWidgetVisible","_clipboardService","loadQueryState","shouldRestartFind","disposeModel","_start","forceRevealReplace","seedSearchStringFromGlobalClipboard","shouldFocus","shouldAnimate","updateSearchScope","saveQueryState","setGlobalBufferTerm","actualIsRegex","actualWholeWord","actualMatchCase","actualPreserveCase","stateChanges","assign","selectionSearchString","currentSelections","moveToNextMatch","moveToPrevMatch","selectAllMatches","globalFindClipboard","readFindText","writeFindText","getContribution","FindController","_contextViewService","_themeService","_widget","_findOptionsWidget","_super","_createFindWidget","focusReplaceInput","focusFindInput","ignoreWhenVisible","IStorageService","IClipboardService","IContextViewService","IKeybindingService","IThemeService","INotificationService","StartFindAction","registerMultiEditorAction","MultiEditorAction","alias","ContextKeyExpr","EditorContextKeys","kbExpr","menuOpts","menuId","MenuId","comment","addImplementation","start","findArgDescription","schema","properties","regexOverride","findInSelection","StartFindWithArgsAction","matchWholeWord","isCaseSensitive","getState","EditorAction","StartFindWithSelectionAction","MatchFindAction","_run","NextMatchFindAction","secondary","PreviousMatchFindAction","SelectionMatchFindAction","setSearchString","NextSelectionMatchFindAction","PreviousSelectionMatchFindAction","StartFindReplaceAction","currentSelection","findInputFocused","isFindInputFocused","registerEditorAction","FindCommand","handler","x","closeFindWidget","toggleCaseSensitive","win","linux","toggleWholeWords","toggleRegex","toggleSearchScope","togglePreserveCase"],"sourceRoot":""}