{"version":3,"file":"static/js/monaco-editor-vendor.dbdc571d.0e5f0f95.js","mappings":"6PAIIA,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAMaO,GAAmB,QAC5B,WAAYC,EAAUC,EAAOC,IAAS,eAClCC,KAAKH,SAAWA,EAChBG,KAAKF,MAAQA,EACbE,KAAKD,QAAUA,CACnB,IAgBG,SAASE,EAASC,EAAUC,EAAOC,EAAUC,GAChD,IACMC,EADYJ,EAASK,QAAQJ,GACRK,KAAI,SAACX,EAAUY,GAAK,OAhBnD,SAAyBZ,EAAUE,EAASI,EAAOC,EAAUC,GACzD,OAAO3B,EAAUsB,UAAM,OAAQ,GAAM,eAAE,yFAEhB,OAFgB,kBAEVjB,QAAQC,QAAQa,EAASa,aAAaP,EAAOC,EAAUC,IAAO,OAAvE,KAANb,EAAS,EAAH,QACEmB,EAAQnB,GAAO,yCAClB,IAAII,EAAoBC,EAAUL,EAAQO,IAAQ,wDAI7Da,EAAAA,EAAAA,IAA0B,EAAD,IAAM,sCAE5BC,GAAS,wDAExB,CAGwDC,CAAgBjB,EAAUY,EAAON,EAAOC,EAAUC,EAAM,IAC5G,OAAOU,EAAAA,GAAAA,aAAiCT,GAAUU,UACtD,CAQA,SAASL,EAAQnB,GACb,IAAMyB,EAAoC,qBAAjBzB,EAAO0B,MAC1BC,EAA4C,qBAApB3B,EAAO4B,UAA4B5B,EAAO4B,UAAY5B,EAAO4B,SAASC,OAAS,EAC7G,OAAOJ,GAAYE,CACvB,EARAG,EAAAA,EAAAA,IAAgC,yBAAyB,SAACC,EAAUpB,EAAOC,GAEvE,OALG,SAAyBF,EAAUC,EAAOC,EAAUC,GACvD,OAAOJ,EAASC,EAAUC,EAAOC,EAAUC,GAAOG,KAAI,SAAAgB,GAAI,OAAIA,EAAK1B,KAAK,IAAE2B,WAC9E,CAGWC,CADyBH,EAASI,IAAIC,EAAAA,GACEC,cAAe1B,EAAOC,EAAU0B,EAAAA,EAAAA,KACnF,G,yWC9CIpD,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EACI0C,EAAgD,SAAUC,GAC1D,IAAKC,OAAOC,cAAe,MAAM,IAAIC,UAAU,wCAC/C,IAAiCC,EAA7BC,EAAIL,EAAEC,OAAOC,eACjB,OAAOG,EAAIA,EAAEC,KAAKN,IAAMA,EAAwB,oBAAbO,SAA0BA,SAASP,GAAKA,EAAEC,OAAOO,YAAaJ,EAAI,CAAC,EAAGK,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAWL,EAAEH,OAAOC,eAAiB,WAAc,OAAOlC,IAAM,EAAGoC,GAC9M,SAASK,EAAKC,GAAKN,EAAEM,GAAKV,EAAEU,IAAM,SAAUC,GAAK,OAAO,IAAI5D,SAAQ,SAAUC,EAASC,IACvF,SAAgBD,EAASC,EAAQ2D,EAAGD,GAAK5D,QAAQC,QAAQ2D,GAAGjD,MAAK,SAASiD,GAAK3D,EAAQ,CAAEG,MAAOwD,EAAGlD,KAAMmD,GAAM,GAAG3D,EAAS,EADb4D,CAAO7D,EAASC,GAA7B0D,EAAIX,EAAEU,GAAGC,IAA8BlD,KAAMkD,EAAExD,MAAQ,GAAI,CAAG,CAEnK,EAKa2D,GAAW,QACpB,WAAY3D,EAAO4D,EAAYC,IAAmB,eAC9ChD,KAAKb,MAAQA,EACba,KAAK+C,WAAaA,EAClB/C,KAAKgD,kBAAoBA,CAC7B,IAYSC,EAAc,0CACvB,WAAYC,EAASC,GAAW,MAYV,OAZU,gBAC5B,gBACKD,QAAUA,EACf,EAAKC,UAAYA,EACjB,EAAKC,UAAY,EAAKC,UAAU,IAAIC,EAAAA,IACpC,EAAKC,SAAW,EAAKH,UAAUI,MAC/B,EAAKC,oBAAsB,EAAKJ,UAAU,IAAIK,EAAAA,IAAiB,kBAAM,EAAKC,0BAA0B,GAAE,IACtG,EAAKC,qBAAuB,EAAKP,UAAU,IAAIK,EAAAA,IAAiB,kBAAM,EAAKG,yBAAyB,GAAE,IACtG,EAAKC,yBAA2B,EAAKT,UAAU,IAAIK,EAAAA,IAAiB,kBAAM,EAAKK,wBAAwB,GAAE,IACzG,EAAKC,OAAS,EACd,EAAKC,eAAiB,KACtB,EAAKC,oBAAqB,EAC1B,EAAKC,QAAU,GAAG,CACtB,CAqHC,OArHA,+BACD,WACQnE,KAAKiE,iBACLjE,KAAKiE,eAAeG,SACpBpE,KAAKiE,eAAiB,OAE1B,sDACJ,GAAC,sBACD,WACI,OAAOjE,KAAKkD,QAAQmB,UAAU,IAA6BC,KAC/D,GAAC,0BACD,WACI,OAAOtE,KAAKuE,WAAa,CAC7B,GAAC,2BACD,WACI,OAAOvE,KAAKuE,WAAavE,KAAKwE,cAClC,GAAC,+BACD,WACI,OAAO,EAAIxE,KAAKuE,UACpB,GAAC,uBACD,SAAUE,GAA0B,IAAnBC,IAAa,UAAH,+CACvB1E,KAAKgE,OAASS,EACVC,GACA1E,KAAK2E,aAEb,GAAC,sCACD,WAA2B,WACvB3E,KAAK4E,UAAU,GACf5E,KAAK4D,qBAAqBiB,SAAS7E,KAAK8E,iBACpC9E,KAAKmD,UAAU4B,cACf/E,KAAKkE,oBAAqB,EAC1BlE,KAAKiE,gBAAiBe,EAAAA,EAAAA,KAA8B,SAAA3E,GAAK,OAAI,EAAK8C,UAAU4B,aAAa1E,EAAM,IACxF3B,EAAU,OAAM,OAAQ,GAAM,eAAE,mHAIlBuG,EAAKlD,EAAc/B,KAAKiE,gBAAe,OAAW,OAAX,SAAiBgB,EAAG5F,OAAM,OAAlB,IAAF6F,EAAK,EAAH,MAAwBzF,KAAI,kBAC1E+B,EAAO0D,EAAG/F,SAEZa,KAAKmE,QAAQgB,KAAK3D,GAClBxB,KAAK2E,eACR,gFAGOS,EAAM,CAAEC,MAAO,EAAF,IAAU,gCAG3BH,GAAOA,EAAGzF,QAAS6F,EAAKL,EAAGM,QAAO,iBAAE,OAAF,UAAQD,EAAGhD,KAAK2C,GAAG,sBAE/CG,EAAK,CAAF,sBAAQA,EAAIC,MAAK,gEAEtCrF,KAAKkE,oBAAqB,EACN,IAAhBlE,KAAKgE,QAA0E,IAAhBhE,KAAKgE,QACpEhE,KAAK4E,UAAU,GAClB,mDAGDY,EAAAA,EAAAA,IAAkB,EAAD,IAAI,oFAK7BxF,KAAKkE,oBAAqB,CAElC,GAAC,qCACD,WACQlE,KAAKmD,UAAUsC,cACfzF,KAAKmE,QAAUnE,KAAKmE,QAAQuB,OAAO1F,KAAKmD,UAAUsC,gBAEtDzF,KAAK4E,UAAU5E,KAAKkE,mBAAqB,EAAmC,EAChF,GAAC,oCACD,WACwB,IAAhBlE,KAAKgE,QACLhE,KAAK4E,UAAU,EAEvB,GAAC,yBACD,WACI,GAAoB,IAAhB5E,KAAKgE,QAAoE,IAAhBhE,KAAKgE,OAAlE,CAIA,IAAMjB,EAA8B,IAAhB/C,KAAKgE,OACnBhB,EAAqC,IAAhBhD,KAAKgE,OAChChE,KAAKoD,UAAUuC,KAAK,IAAI7C,EAAY9C,KAAKmE,QAAQyB,MAAM,GAAI7C,EAAYC,GAHvE,CAIJ,GAAC,mBACD,SAAM6C,GACF,GAAa,IAATA,EACoB,IAAhB7F,KAAKgE,SACLhE,KAAK4E,UAAU,GACf5E,KAAKyD,oBAAoBoB,SAAS7E,KAAKwE,gBACvCxE,KAAK8D,yBAAyBe,SAAS7E,KAAK8F,2BAIhD,OAAQ9F,KAAKgE,QACT,KAAK,EACDhE,KAAK2D,2BACL3D,KAAK4D,qBAAqBQ,SAC1BpE,KAAK6D,0BACL,MACJ,KAAK,EACD7D,KAAK4D,qBAAqBQ,SAC1BpE,KAAK6D,0BAIrB,GAAC,oBACD,WACI7D,KAAKyD,oBAAoBW,SACzBpE,KAAK4D,qBAAqBQ,SAC1BpE,KAAK8D,yBAAyBM,SAC1BpE,KAAKiE,iBACLjE,KAAKiE,eAAeG,SACpBpE,KAAKiE,eAAiB,MAE1BjE,KAAKmE,QAAU,GACfnE,KAAK4E,UAAU,GAAkC,EACrD,KAAC,EAnIsB,CAASmB,EAAAA,I,sDCrChCC,EAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HxD,EAAvHyD,EAAIC,UAAUjF,OAAQkF,EAAIF,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOI,OAAOC,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,kBAAZM,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIhE,EAAI6D,EAAW5E,OAAS,EAAGe,GAAK,EAAGA,KAASQ,EAAIqD,EAAW7D,MAAImE,GAAKF,EAAI,EAAIzD,EAAE2D,GAAKF,EAAI,EAAIzD,EAAEsD,EAAQC,EAAKI,GAAK3D,EAAEsD,EAAQC,KAASI,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOI,eAAeV,EAAQC,EAAKI,GAAIA,CAChE,EACIM,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUb,EAAQC,GAAOY,EAAUb,EAAQC,EAAKW,EAAa,CACxE,EAiBME,EAAIC,EAAID,EACVE,EAAsB,0CACtB,WAAYhE,EAASiE,EAAuBC,GAAoB,uBAC5D,gBACKlE,QAAUA,EACf,EAAKiE,sBAAwBA,EAC7B,EAAKC,mBAAqBA,EAC1B,EAAKC,QAAU,EAAKhE,UAAU,EAAK8D,sBAAsBG,eAAeC,EAAoB,EAAKrE,UACjG,EAAKsE,wBAAyB,EAC9B,EAAKC,UAAY,GACjB,EAAKC,sBAAuB,EAE5B,EAAKC,cAAgB,GAAG,IACmC,EADnC,UACEC,EAAAA,GAAAA,UAAiC,IAA3D,IAAK,EAAL,qBAA6D,KAAlDC,EAAW,QAClB,EAAKF,cAAcxC,KAAK,EAAKgC,sBAAsBG,eAAeO,EAAa,EAAK3E,SACxF,CAAC,+BAuBG,OAtBJ,EAAKyE,cAAcG,MAAK,SAACC,EAAIC,GAAE,OAAKD,EAAGE,aAAeD,EAAGC,YAAY,IACrE,EAAK9E,UAAY,IAAI+E,EAAqB,EAAKhF,QAAS,EAAKyE,eAC7D,EAAKQ,gBAAkB,EAAK9E,UAAU,IAAIJ,EAAe,EAAKC,QAAS,EAAKC,YAC5E,EAAKE,UAAU,EAAK8E,gBAAgB5E,UAAS,SAAC/D,GAC1C,EAAK4I,YAAY5I,EAAOL,MAAOK,EAAOuD,WAAYvD,EAAOwD,kBAC7D,KACA,EAAKK,UAAU,EAAKH,QAAQmF,6BAA4B,WAChD,EAAKb,wBAGT,EAAKc,4BACT,KACA,EAAKjF,UAAU4D,EAAIsB,8BAA8B,EAAKlB,QAAQmB,aAAc,WAAW,SAAClJ,GAChFA,EAAEmJ,OAAO,IACT,EAAKC,MAEb,KACA,EAAKrF,UAAUsF,EAAAA,GAAAA,aAAiC,WACxC,EAAKtB,QAAQjH,UAAY,EAAK+C,UAAUyF,QAAU,EAAKnB,UAAUpG,OAAS,IAC1E,EAAKgG,QAAQwB,QACb,EAAKC,gBAAgB,EAAK3F,UAAUyF,OAAQ,EAAKnB,WAEzD,KAAI,CACR,CAqLC,OArLA,kDACD,WACQzH,KAAKqH,QAAQjH,WAGbJ,KAAKmI,gBAAgB/D,SAChBpE,KAAKqH,QAAQ0B,sBACd/I,KAAKmI,gBAAgBa,MAAM,GAGvC,GAAC,yBACD,SAAYC,GACR,IAC4C,EADtCC,EAAmB,GAAG,UACFlJ,KAAK2H,eAAa,IAA5C,IAAK,EAAL,qBAA8C,KAAnCE,EAAW,QAClB,GAAIA,EAAYsB,mBAAoB,CAChC,IAAMP,EAASf,EAAYsB,mBAAmBF,GAC1CL,GACAM,EAAiB/D,KAAKyD,EAE9B,CACJ,CAAC,+BACD,IAAM1C,EAAS+C,EAAW/C,OAI1B,GAHoB,IAAhBA,EAAOkD,MACPF,EAAiB/D,KAAK,IAAIkE,EAAAA,GAAiB,EAAGnD,EAAOhF,QAErC,IAAhBgF,EAAOkD,KAAgD,CACvD,IAAME,EAAUtJ,KAAKkD,QAAQmB,UAAU,IAAgCkF,+BAAiC,GACnGrD,EAAOsD,OAAOC,cAAkE,kBAA3CvD,EAAOsD,OAAOE,0BAAyCxD,EAAOsD,OAAOE,yBAA2BJ,GAEtIJ,EAAiB/D,KAAK,IAAIkE,EAAAA,GAAiB,EAAGnD,EAAOhF,OAE7D,CACA,OAAgC,IAA5BgI,EAAiB7H,SAGrB6H,EAAiBpB,MAAK,SAAC6B,EAAGC,GAAC,OAAKA,EAAEC,SAAWF,EAAEE,QAAQ,IACvD7J,KAAK8J,gBAAgBZ,EAAiB,GAAI,GAAgC,IACnE,EACX,GAAC,iCACD,SAAoBhI,EAAO2E,EAAMkE,GAC7B/J,KAAK8J,gBAAgB,IAAIT,EAAAA,GAAiB,EAAGnI,GAAQ2E,EAAMkE,EAC/D,GAAC,6BACD,SAAgBnB,EAAQ/C,EAAMkE,GAC1B,IAAI/J,KAAKmD,UAAUyF,SAAU5I,KAAKmD,UAAUyF,OAAOH,OAAOG,GAA1D,CAKA,GADA5I,KAAKmI,gBAAgB/D,SACjBpE,KAAKqH,QAAQjH,SAIb,GAAKJ,KAAKmD,UAAUyF,QAAWA,EAAOoB,qBAAqBhK,KAAKmD,UAAUyF,OAAQ5I,KAAKqH,QAAQjH,UAG1F,CACD,IAAM6J,EAAmBjK,KAAKyH,UAAUyC,QAAO,SAAC7H,GAAC,OAAKA,EAAE8H,sBAAsBvB,EAAO,IACrF,GAAgC,IAA5BqB,EAAiB5I,OACjBrB,KAAK0I,WAEJ,IAAIuB,EAAiB5I,SAAWrB,KAAKyH,UAAUpG,QAAUrB,KAAK0H,qBAE/D,OAGA1H,KAAK8I,gBAAgBF,EAAQqB,EACjC,CACJ,MAdIjK,KAAK0I,OAgBb1I,KAAKmD,UAAUyF,OAASA,EACxB5I,KAAKmD,UAAUiH,YAAcL,EAC7B/J,KAAKmI,gBAAgBa,MAAMnD,EAzB3B,CA0BJ,GAAC,kBACD,WACI7F,KAAKmD,UAAUyF,OAAS,KACxB5I,KAAKmI,gBAAgB/D,SACrBpE,KAAKqH,QAAQqB,MACjB,GAAC,kCACD,WACI,OAAO1I,KAAKqH,QAAQ0B,oBACxB,GAAC,0BACD,SAAasB,GACT,OAAOrK,KAAKqH,QAAQmB,aAAa8B,SAASD,EAC9C,GAAC,gCACD,SAAmB7K,GACf,GAAIQ,KAAKmD,UAAUyF,OAAQ,KACqB,EADrB,UACG5I,KAAK2H,eAAa,IAA5C,IAAK,EAAL,qBAA8C,KAAnCE,EAAW,QAClB,GAAIA,EAAY0C,qBAAsB,CAClC,IAAMC,EAAiB3C,EAAY0C,qBAAqBvK,KAAKmD,UAAUyF,QACvE,GAAI4B,EACA,OAAOhL,EAAOoG,MAAM,GAAGF,OAAO,CAAC8E,GAEvC,CACJ,CAAC,+BACL,CACA,OAAOhL,CACX,GAAC,yBACD,SAAYA,EAAQuD,EAAYC,GAC5BhD,KAAKyH,UAAazE,EAAoBhD,KAAKyK,mBAAmBjL,GAAUA,EACxEQ,KAAK0H,qBAAuB3E,EACxB/C,KAAKmD,UAAUyF,QAAU5I,KAAKyH,UAAUpG,OAAS,EACjDrB,KAAK8I,gBAAgB9I,KAAKmD,UAAUyF,OAAQ5I,KAAKyH,WAE5C1E,GACL/C,KAAK0I,MAEb,GAAC,6BACD,SAAgBE,EAAQ8B,GAAU,IAac,EAbd,OAC9B,EAAwDxD,EAAuByD,mBAAmB/B,EAAO1H,MAAOwJ,GAAxGE,EAAc,EAAdA,eAAgBC,EAAW,EAAXA,YAAaC,EAAc,EAAdA,eAC/BC,EAAc,IAAIC,EAAAA,GAClBC,EAAYF,EAAYG,IAAI,IAAIC,EAAqBnL,KAAKoH,qBAC1DgE,EAAWC,SAASC,yBACtBC,EAAc,KACZC,EAAU,CACZJ,SAAAA,EACAH,UAAAA,EACAQ,eAAgB,SAACC,GAAM,OAAKH,EAAcG,CAAM,EAChDC,kBAAmB,kBAAM,EAAKtE,QAAQsE,mBAAmB,EACzDjD,KAAM,kBAAM,EAAKA,MAAM,GACzB,UACwB1I,KAAK2H,eAAa,qBAAE,IAAnCE,EAAW,QACZ+D,EAAalB,EAASR,QAAO,SAAA2B,GAAG,OAAIA,EAAIC,QAAUjE,CAAW,IAC/D+D,EAAWvK,OAAS,GACpB0J,EAAYG,IAAIrD,EAAYkE,iBAAiBP,EAASI,GAE9D,EALA,IAAK,EAAL,wBAKC,+BAID,GAHIX,EAAUe,YACVZ,EAASa,YAAYhB,EAAUiB,cAE/Bd,EAASe,gBAAiB,CAC1B,GAAIrB,EAAgB,CAChB,IAAMsB,EAAsBpM,KAAKkD,QAAQmJ,8BACzC,IACIrM,KAAKwH,wBAAyB,EAC9B4E,EAAoBE,IAAI,CAAC,CACjBpL,MAAO4J,EACPyB,QAASrF,EAAuBsF,sBAK5C,CAHC,QAEGxM,KAAKwH,wBAAyB,CAClC,CACAuD,EAAYG,KAAIuB,EAAAA,EAAAA,KAAa,WACzB,IACI,EAAKjF,wBAAyB,EAC9B4E,EAAoBvD,OAIxB,CAHC,QAEG,EAAKrB,wBAAyB,CAClC,CACJ,IACJ,CACAxH,KAAKqH,QAAQqF,OAAOtB,EAAU,IAAIuB,EAAwBpB,EAAaX,EAAgBC,EAAa7K,KAAKkD,QAAQmB,UAAU,IAA6BuI,MAAO5M,KAAKmD,UAAUiH,YAAaW,GAC/L,MAEIA,EAAY8B,SAEpB,IAAC,iCACD,SAA0BC,EAAapC,GAEnC,IAK0B,EALpBqC,EAAmBD,EAAYE,gBACjCC,EAAoBH,EAAYI,YAChCC,EAAkBL,EAAYM,UAC9BtC,EAAiBJ,EAAS,GAAGxJ,MAC7BmM,EAAmB,KAAK,UACV3C,GAAQ,IAA1B,IAAK,EAAL,qBAA4B,KAAjBmB,EAAG,QACVf,EAAiBwC,EAAAA,EAAAA,UAAgBxC,EAAgBe,EAAI3K,OACjD2K,EAAI3K,MAAM8L,kBAAoBD,GAAoBlB,EAAI3K,MAAMqM,gBAAkBR,IAE9EE,EAAoBO,KAAKC,IAAIR,EAAmBpB,EAAI3K,MAAMgM,aAC1DC,EAAkBK,KAAKE,IAAIP,EAAiBtB,EAAI3K,MAAMkM,YAEtDvB,EAAIwB,mBACJA,EAAmBxB,EAAI3K,MAE/B,CAAC,+BACD,MAAO,CACH0J,eAAgByC,EAAmBA,EAAiBM,mBAAqB,IAAIC,EAAAA,EAASd,EAAYE,gBAAiBC,GACnHpC,YAAawC,GAAsC,IAAIC,EAAAA,EAAMP,EAAkBE,EAAmBF,EAAkBI,GACpHrC,eAAAA,EAER,KAAC,EA3NqB,CAAwC/E,EAAAA,IA6NlEmB,EAAuBsF,oBAAsBqB,EAAAA,GAAAA,SAAgC,CACzEC,YAAa,0BACbC,UAAW,mBAEf7G,EAAyBlB,EAAW,CAChCa,EAAQ,EAAGmH,EAAAA,IACXnH,EAAQ,EAAGoH,EAAAA,IACZ/G,GAC+B,IAC5ByF,GAAuB,QACzB,WAAYpB,EAAaX,EAAgBC,EAAaqD,EAAaC,EAAYpD,IAAa,eACxF/K,KAAKuL,YAAcA,EACnBvL,KAAK4K,eAAiBA,EACtB5K,KAAK6K,YAAcA,EACnB7K,KAAKkO,YAAcA,EACnBlO,KAAKmO,WAAaA,EAClBnO,KAAK+K,YAAcA,CACvB,IAEAxD,EAAkB,0CAClB,WAAYrE,EAASkL,GAAoB,MAgBD,OAhBC,gBACrC,gBACKlL,QAAUA,EACf,EAAKkL,mBAAqBA,EAC1B,EAAKC,qBAAsB,EAC3B,EAAKC,iBAAmBC,EAAAA,EAAAA,aAAAA,OAAsC,EAAKH,oBACnE,EAAKI,OAAS,EAAKnL,UAAU,IAAIoL,EAAAA,GACjC,EAAKC,aAAe,KACpB,EAAKrL,UAAU,EAAKH,QAAQyL,mBAAkB,kBAAM,EAAKC,SAAS,KAClE,EAAKvL,UAAU,EAAKH,QAAQ2L,0BAAyB,SAACvP,GAC9CA,EAAEwP,WAAW,KACb,EAAKC,aAEb,KACA,EAAKC,gBAAgB,MACrB,EAAKJ,UACL,EAAK1L,QAAQ+L,kBAAiB,WAAM,CACxC,CA6GC,OA5GD,8BAGA,WACI,IAAI3J,EAAIL,EACR,OAAkG,QAA1FA,EAAkC,QAA5BK,EAAKtF,KAAK0O,oBAAiC,IAAPpJ,OAAgB,EAASA,EAAGsF,sBAAmC,IAAP3F,EAAgBA,EAAK,IACnI,GAAC,gCACD,WACI,IAAIK,EACJ,OAAO4J,QAAqC,QAA5B5J,EAAKtF,KAAK0O,oBAAiC,IAAPpJ,OAAgB,EAASA,EAAGiG,YACpF,GAAC,qBACD,WACIvL,KAAKkD,QAAQiM,oBAAoBnP,MAC7BA,KAAK0O,cACL1O,KAAK0O,aAAa3D,YAAY8B,WAElC,sDACJ,GAAC,mBACD,WACI,OAAOtF,EAAmB6H,EAC9B,GAAC,wBACD,WACI,OAAOpP,KAAKwO,OAAOa,gBACvB,GAAC,yBACD,WACI,IAAKrP,KAAK0O,aACN,OAAO,KAEX,IAAIR,EAAclO,KAAK0O,aAAaR,YAKpC,OAJKA,GAAelO,KAAKoO,mBAAmBkB,mBAAmBC,EAAAA,GAAAA,QAAAA,OAE3DrB,GAAc,GAEX,CACH9N,SAAUJ,KAAK0O,aAAa9D,eAC5B1J,MAAOlB,KAAK0O,aAAa7D,YACzB2E,WAAatB,EACP,CAAC,EAA+C,GAChD,CAAC,EAA+C,GAE9D,GAAC,6BACD,SAAgBuB,GACRzP,KAAK0O,cACL1O,KAAK0O,aAAa3D,YAAY8B,UAElC7M,KAAK0O,aAAee,EACpBzP,KAAKsO,iBAAiBhC,MAAMtM,KAAK0O,cACjC1O,KAAKwO,OAAOa,iBAAiBK,UAAUC,OAAO,UAAW3P,KAAK0O,aAClE,GAAC,qBACD,WACI,IAAMkB,EAASpC,KAAKE,IAAI1N,KAAKkD,QAAQ2M,gBAAgBD,OAAS,EAAG,KACjE,EAAiC5P,KAAKkD,QAAQmB,UAAU,IAAhDyL,EAAQ,EAARA,SAAUC,EAAU,EAAVA,WAClB/P,KAAKwO,OAAOwB,gBAAgBC,MAAMH,SAAW,GAAH,OAAMA,EAAQ,MACxD9P,KAAKwO,OAAOwB,gBAAgBC,MAAMF,WAAa,GAAH,OAAMA,EAAaD,GAC/D9P,KAAKwO,OAAOwB,gBAAgBC,MAAMC,UAAY,GAAH,OAAMN,EAAM,MACvD5P,KAAKwO,OAAOwB,gBAAgBC,MAAME,SAAW,GAAH,OAAM3C,KAAKE,IAAyC,IAArC1N,KAAKkD,QAAQ2M,gBAAgBO,MAAc,KAAI,KAC5G,GAAC,yBACD,WAAc,WACUC,MAAMC,UAAU1K,MAAMtD,KAAKtC,KAAKwO,OAAOwB,gBAAgBO,uBAAuB,SACtFC,SAAQ,SAAAnG,GAAI,OAAI,EAAKnH,QAAQuN,cAAcpG,EAAK,GAChE,GAAC,oBACD,SAAOA,EAAMoF,GACTzP,KAAKgP,gBAAgBS,GACrBzP,KAAKwO,OAAOwB,gBAAgBU,YAAc,GAC1C1Q,KAAKwO,OAAOwB,gBAAgB/D,YAAY5B,GACxCrK,KAAKwO,OAAOwB,gBAAgBC,MAAMU,cAAgB,GAClD3Q,KAAK+O,cACL/O,KAAK2L,oBAGL3L,KAAKkD,QAAQ0N,SAGb5Q,KAAK2L,oBACD8D,EAAYtB,YACZnO,KAAKwO,OAAOa,iBAAiBtF,QAE7B0F,EAAYlE,aACZkE,EAAYlE,YAAYsF,QAEhC,GAAC,kBACD,WACI,GAAI7Q,KAAK0O,aAAc,CACnB,IAAMP,EAAanO,KAAK0O,aAAaP,WACrCnO,KAAKgP,gBAAgB,MACrBhP,KAAKkD,QAAQ4N,oBAAoB9Q,MAC7BmO,GACAnO,KAAKkD,QAAQ6G,OAErB,CACJ,GAAC,+BACD,WACI/J,KAAKkD,QAAQ4N,oBAAoB9Q,MACjCA,KAAKwO,OAAO7C,oBACZ,IAAMoF,EAAmB/Q,KAAKwO,OAAOwC,UAAUC,sBAE/C,GADgCF,EAAiBG,YAAcH,EAAiBX,MACpD,CAExB,IAAMe,EAAqB,GAAH,OAAMnR,KAAKwO,OAAOwC,UAAUzE,QAAQ6E,wBAAuB,MAC/EpR,KAAKwO,OAAOwB,gBAAgBC,MAAMU,gBAAkBQ,IACpDnR,KAAKwO,OAAOwB,gBAAgBC,MAAMU,cAAgBQ,EAClDnR,KAAKkD,QAAQ4N,oBAAoB9Q,MACjCA,KAAKwO,OAAO7C,oBAEpB,CACJ,GAAC,mBACD,WACI3L,KAAKwO,OAAOwB,gBAAgBU,YAAc,EAC9C,KAAC,EA/HiB,CAAoC3K,EAAAA,IAiI1DwB,EAAmB6H,GAAK,oCACxB7H,EAAqBvB,EAAW,CAC5Ba,EAAQ,EAAGwK,EAAAA,KACZ9J,GAEH,IAAI4D,EAAoB,0CACpB,WAAY/D,GAAoB,MAK0C,OAL1C,gBAC5B,gBACKA,mBAAqBA,EAC1B,EAAKkK,aAAc,EACnB,EAAKpF,aAAelF,EAAE,4BACtB,EAAKuK,eAAiBtK,EAAIuK,OAAO,EAAKtF,aAAclF,EAAE,gBAAgB,CAC1E,CAcC,OAdA,gCACD,WACI,OAAOhH,KAAKsR,WAChB,GAAC,uBACD,SAAUG,GACN,IAAMC,EAAa1R,KAAKoH,mBAAmBuK,iBAAiBF,EAAcG,WACpEC,EAAkBH,EAAaA,EAAWI,WAAa,KAE7D,OADA9R,KAAKsR,aAAc,EACZtR,KAAKqD,UAAU0O,EAAAA,EAAAA,OAAmB/R,KAAKuR,eAAgBE,EAAeI,GACjF,GAAC,oBACD,SAAOG,GACH,IAAMxS,EAASyH,EAAIuK,OAAOxR,KAAKuR,eAAgBS,GAE/C,OADAhS,KAAKsR,aAAc,EACZ9R,CACX,KAAC,EArBmB,CAAsCuG,EAAAA,IAuB9DoF,EAAuBnF,EAAW,CAC9Ba,EAAQ,EAAGoH,EAAAA,IACZ9C,GAAsB,IACnBjD,EAAoB,WACtB,WAAYhF,EAASyE,IAAe,eAChC3H,KAAKkD,QAAUA,EACflD,KAAK2H,cAAgBA,EACrB3H,KAAKiS,QAAU,KACfjS,KAAKkS,cAAe,CACxB,CAmCC,OAnCA,4BACD,WAAe,OAAOlS,KAAKiS,OAAS,EAAC,IACrC,SAAW9S,GAASa,KAAKiS,QAAU9S,CAAO,GAAC,uBAC3C,WAAoB,OAAOa,KAAKkS,YAAc,EAAC,IAC/C,SAAgB/S,GAASa,KAAKkS,aAAe/S,CAAO,GAAC,0BAgCrD,SAAakB,GACT,IAAMuI,EAAS5I,KAAKiS,QACpB,IAAKjS,KAAKkD,QAAQiP,aAAevJ,EAC7B,OAAO7H,EAAAA,GAAAA,MAEX,IAAMqR,EAAkBlK,EAAqBmK,oBAAoBrS,KAAKkD,QAAS0F,GAC/E,OAAO7H,EAAAA,GAAAA,MAA0Bf,KAAK2H,cAAcnH,KAAI,SAACqH,GACrD,OAAKA,EAAY9C,aAGV8C,EAAY9C,aAAa6D,EAAQwJ,EAAiB/R,GAF9CU,EAAAA,GAAAA,KAGf,IACJ,GAAC,yBACD,WACI,IAAKf,KAAKkD,QAAQiP,aAAenS,KAAKiS,QAClC,MAAO,GAEX,IAE4C,EAFtCG,EAAkBlK,EAAqBmK,oBAAoBrS,KAAKkD,QAASlD,KAAKiS,SAChFzS,EAAS,GAAG,UACUQ,KAAK2H,eAAa,IAA5C,IAAK,EAAL,qBAA8C,KAAnCE,EAAW,QAClBrI,EAASA,EAAOkG,OAAOmC,EAAYpC,YAAYzF,KAAKiS,QAASG,GACjE,CAAC,+BACD,OAAOpR,EAAAA,EAAAA,IAASxB,EACpB,IAAC,kCAtDD,SAA2B8S,EAAQ1J,GAC/B,GAAoB,IAAhBA,EAAOQ,KACP,MAAO,GAEX,IAAMjJ,EAAQmS,EAAOC,WACfC,EAAa5J,EAAO1H,MAAM8L,gBAChC,GAAIwF,EAAarS,EAAMsS,eAEnB,MAAO,GAEX,IAAMC,EAAYvS,EAAMwS,iBAAiBH,GACzC,OAAOF,EAAOM,mBAAmBJ,GAAYtI,QAAO,SAACtH,GACjD,GAAIA,EAAE2J,QAAQsG,YACV,OAAO,EAEX,IAAM3F,EAAetK,EAAE1B,MAAM8L,kBAAoBwF,EAAc5P,EAAE1B,MAAMgM,YAAc,EAC/EE,EAAaxK,EAAE1B,MAAMqM,gBAAkBiF,EAAc5P,EAAE1B,MAAMkM,UAAYsF,EAC/E,GAAI9P,EAAE2J,QAAQuG,iBAEV,GAAI5F,EAActE,EAAO1H,MAAMgM,YAAc,GAAKtE,EAAO1H,MAAMkM,UAAY,EAAIA,EAC3E,OAAO,OAIX,GAAIF,EAActE,EAAO1H,MAAMgM,aAAetE,EAAO1H,MAAMkM,UAAYA,EACnE,OAAO,EAGf,OAAO,CACX,GACJ,KAAC,EAzCqB,G,4CClapBpG,EAAIC,EAAID,EACD+L,EAAiB,0CAC1B,WAAYT,EAAQU,GAAoD,MAAnCC,EAAgB,UAAH,6CAAGC,EAAAA,GAoBb,OApB8B,gBAClE,gBACKC,oBAAsB,EAAK9P,UAAU,IAAI2H,EAAAA,IAC9C,EAAK9H,QAAUoP,EACf,EAAKc,YAAa,EAClB,EAAK3L,UAAY,GACjB,EAAK+G,OAAS,EAAKnL,UAAU,IAAIoL,EAAAA,GACjC,EAAKD,OAAOa,iBAAiBK,UAAUC,OAAO,UAAW,EAAKyD,YAC9D,EAAKC,kBAAoB,EAAKhQ,UAAU,IAAIiQ,EAAAA,EAAiB,CAAEhB,OAAQ,EAAKpP,SAAW8P,EAAiBC,IACxG,EAAK9P,UAAY,IAAIoQ,EAAoB,EAAKrQ,SAC9C,EAAKiF,gBAAkB,EAAK9E,UAAU,IAAIJ,EAAe,EAAKC,QAAS,EAAKC,YAC5E,EAAKE,UAAU,EAAK8E,gBAAgB5E,UAAS,SAAC/D,GAC1C,EAAK4I,YAAY5I,EAAOL,MAC5B,KACA,EAAKkE,UAAU,EAAKH,QAAQmF,6BAA4B,kBAAM,EAAKC,4BAA4B,KAC/F,EAAKjF,UAAU,EAAKH,QAAQ2L,0BAAyB,SAACvP,GAC9CA,EAAEwP,WAAW,KACb,EAAKC,aAEb,KACA,EAAK7L,QAAQsQ,kBAAiB,WAAM,CACxC,CAqFC,OArFA,+BACD,WACIxT,KAAKkD,QAAQuQ,oBAAoBzT,OACjC,sDACJ,GAAC,mBACD,WACI,OAAO+S,EAAkB3D,EAC7B,GAAC,wBACD,WACI,OAAOpP,KAAKwO,OAAOa,gBACvB,GAAC,yBACD,WACI,OAAO,IACX,GAAC,yBACD,WAAc,WACUgB,MAAMC,UAAU1K,MAAMtD,KAAKtC,KAAKwO,OAAOwB,gBAAgBO,uBAAuB,SACtFC,SAAQ,SAAAnG,GAAI,OAAI,EAAKnH,QAAQuN,cAAcpG,EAAK,GAChE,GAAC,wCACD,WACQrK,KAAKoT,aAGLpT,KAAKmI,gBAAgB/D,SACrBpE,KAAKmI,gBAAgBa,MAAM,GAEnC,GAAC,4BACD,SAAewJ,GACPxS,KAAKmD,UAAUqP,aAAeA,IAIlCxS,KAAKmI,gBAAgB/D,SACrBpE,KAAK0I,OACL1I,KAAKmD,UAAUqP,WAAaA,EAC5BxS,KAAKmI,gBAAgBa,MAAM,GAC/B,GAAC,kBACD,WACIhJ,KAAKmD,UAAUqP,YAAc,EAC7BxS,KAAKmI,gBAAgB/D,SAChBpE,KAAKoT,aAGVpT,KAAKoT,YAAa,EAClBpT,KAAKwO,OAAOa,iBAAiBK,UAAUC,OAAO,UAAW3P,KAAKoT,YAClE,GAAC,yBACD,SAAY5T,GACRQ,KAAKyH,UAAYjI,EACbQ,KAAKyH,UAAUpG,OAAS,EACxBrB,KAAK8I,gBAAgB9I,KAAKmD,UAAUqP,WAAYxS,KAAKyH,WAGrDzH,KAAK0I,MAEb,GAAC,6BACD,SAAgB8J,EAAY9H,GACxB1K,KAAKmT,oBAAoBtK,QACzB,IAC0B,EADpBuC,EAAWC,SAASC,yBAAyB,UACjCZ,GAAQ,IAA1B,IAAK,EAAL,qBAA4B,KAAjBmB,EAAG,QACJ6H,EAAuB1M,EAAE,gCACzB2M,EAAuB1M,EAAIuK,OAAOkC,EAAsB1M,EAAE,uBAC1D4M,EAAmB5T,KAAKmT,oBAAoBjI,IAAIlL,KAAKqT,kBAAkBzC,OAAO/E,EAAI1M,QACxFwU,EAAqB1H,YAAY2H,EAAiB5B,SAClD5G,EAASa,YAAYyH,EACzB,CAAC,+BACD1T,KAAK6T,gBAAgBzI,GACrBpL,KAAK8T,QAAQtB,EACjB,GAAC,6BACD,SAAgBnI,GACZrK,KAAKwO,OAAOwB,gBAAgBU,YAAc,GAC1C1Q,KAAKwO,OAAOwB,gBAAgB/D,YAAY5B,GACxCrK,KAAK+O,aACT,GAAC,qBACD,SAAQyD,GACCxS,KAAKoT,aACNpT,KAAKoT,YAAa,EAClBpT,KAAKwO,OAAOa,iBAAiBK,UAAUC,OAAO,UAAW3P,KAAKoT,aAElE,IAAMW,EAAe/T,KAAKkD,QAAQ2M,gBAC5BmE,EAAmBhU,KAAKkD,QAAQ+Q,oBAAoBzB,GACpD0B,EAAkBlU,KAAKkD,QAAQiR,eAC/BpE,EAAa/P,KAAKkD,QAAQmB,UAAU,IAEpC+P,EAAMJ,EAAmBE,GADZlU,KAAKwO,OAAOa,iBAAiBgF,aACgBtE,GAAc,EAC9E/P,KAAKwO,OAAOa,iBAAiBY,MAAMqE,KAAO,GAAH,OAAMP,EAAaQ,gBAAkBR,EAAaS,iBAAgB,MACzGxU,KAAKwO,OAAOa,iBAAiBY,MAAMmE,IAAM,GAAH,OAAM5G,KAAKE,IAAIF,KAAKiH,MAAML,GAAM,GAAE,KAC5E,KAAC,EA3GyB,CAASrO,EAAAA,IA6GvCgN,EAAkB3D,GAAK,uCAAuC,IACxDmE,EAAmB,WACrB,WAAYrQ,IAAS,eACjBlD,KAAKkD,QAAUA,EACflD,KAAK0U,aAAe,CACxB,CA6BC,OA7BA,gCACD,WACI,OAAO1U,KAAK0U,WAChB,EAAC,IACD,SAAevV,GACXa,KAAK0U,YAAcvV,CACvB,GAAC,yBACD,WACI,IAAMwV,EAAiB,SAACvT,GACpB,MAAO,CACHjC,MAAOiC,EAEf,EACMgR,EAAkBpS,KAAKkD,QAAQ0P,mBAAmB5S,KAAK0U,aACvDlV,EAAS,GACf,IAAK4S,EACD,OAAO5S,EACV,IAC8B,EAD9B,UACe4S,GAAe,IAA/B,IAAK,EAAL,qBAAiC,KAAtBxP,EAAC,QACR,GAAKA,EAAE2J,QAAQqI,qBAAf,CAGA,IAAMC,EAAejS,EAAE2J,QAAQuI,wBAC1BD,KAAgBE,EAAAA,EAAAA,IAAsBF,IAG3CrV,EAAO2F,KAAI,MAAX3F,GAAM,QAASwV,EAAAA,EAAAA,IAAQH,GAAcrU,IAAImU,IALzC,CAMJ,CAAC,+BACD,OAAOnV,CACX,KAAC,EAjCoB,G,wJCvHrBwG,GAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HxD,EAAvHyD,EAAIC,UAAUjF,OAAQkF,EAAIF,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOI,OAAOC,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,kBAAZM,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIhE,EAAI6D,EAAW5E,OAAS,EAAGe,GAAK,EAAGA,KAASQ,EAAIqD,EAAW7D,MAAImE,GAAKF,EAAI,EAAIzD,EAAE2D,GAAKF,EAAI,EAAIzD,EAAEsD,EAAQC,EAAKI,GAAK3D,EAAEsD,EAAQC,KAASI,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOI,eAAeV,EAAQC,EAAKI,GAAIA,CAChE,EACIM,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUb,EAAQC,GAAOY,EAAUb,EAAQC,EAAKW,EAAa,CACxE,EAoBME,GAAIC,EAAID,EACDiO,GAAW,WACpB,WAAYnJ,EAAO5K,EAAOgU,IAAQ,eAC9BlV,KAAK8L,MAAQA,EACb9L,KAAKkB,MAAQA,EACblB,KAAKkV,OAASA,CAClB,CAKC,OALA,6CACD,SAAsBtM,GAClB,OAAwB,IAAhBA,EAAOQ,MACRpJ,KAAKkB,MAAMgM,aAAetE,EAAO1H,MAAMgM,aACvClN,KAAKkB,MAAMkM,WAAaxE,EAAO1H,MAAMkM,SAChD,KAAC,EAVmB,GAYlB+H,GAA0B,CAC5B/L,KAAM,EACNc,OAAQ,CAAEkL,QAASC,GAAAA,GAAAA,UACnBC,cAAeC,GAAAA,GAAAA,eAEfC,GAAsB,WACtB,WAAYtS,EAASuS,EAA2BC,EAAgBC,IAA0B,eACtF3V,KAAKkD,QAAUA,EACflD,KAAKyV,0BAA4BA,EACjCzV,KAAK0V,eAAiBA,EACtB1V,KAAK2V,yBAA2BA,EAChC3V,KAAKiI,aAAe,EACpBjI,KAAK4V,iCAA8B/U,CACvC,CAmKC,OAnKA,mCACD,SAAY+H,EAAQwJ,GAChB,IAAKpS,KAAKkD,QAAQiP,YAA8B,IAAhBvJ,EAAOQ,KACnC,MAAO,GAEX,IAI+B,EAJzBjJ,EAAQH,KAAKkD,QAAQqP,WACrBC,EAAa5J,EAAO1H,MAAM8L,gBAC1B0F,EAAYvS,EAAMwS,iBAAiBH,GACnChT,EAAS,GAAG,UACF4S,GAAe,IAA/B,IAAK,EAAL,qBAAiC,KAAtBxP,EAAC,QACFsK,EAAetK,EAAE1B,MAAM8L,kBAAoBwF,EAAc5P,EAAE1B,MAAMgM,YAAc,EAC/EE,EAAaxK,EAAE1B,MAAMqM,gBAAkBiF,EAAc5P,EAAE1B,MAAMkM,UAAYsF,EACzEwC,EAASlV,KAAKyV,0BAA0BI,UAAU1V,EAAM2V,IAAKlT,GACnE,GAAKsS,EAAL,CAGA,IAAMhU,EAAQ,IAAIoM,EAAAA,EAAM1E,EAAO1H,MAAM8L,gBAAiBE,EAAatE,EAAO1H,MAAM8L,gBAAiBI,GACjG5N,EAAO2F,KAAK,IAAI8P,GAAYjV,KAAMkB,EAAOgU,GAFzC,CAGJ,CAAC,+BACD,OAAO1V,CACX,GAAC,8BACD,SAAiBgM,EAASI,GAAY,WAClC,IAAKA,EAAWvK,OACZ,OAAO0E,EAAAA,GAAAA,KAEX,IAAMgF,EAAc,IAAIC,EAAAA,GACxBY,EAAW4E,SAAQ,SAAA3E,GAAG,OAAIL,EAAQJ,SAASa,YAAY,EAAK8J,kBAAkBlK,EAAKd,GAAa,IAChG,IAAMiL,EAAgD,IAAtBpK,EAAWvK,OAAeuK,EAAW,GAAKA,EAAW9D,MAAK,SAAC6B,EAAGC,GAAC,OAAKqM,GAAAA,GAAAA,QAAuBtM,EAAEuL,OAAOgB,SAAUtM,EAAEsL,OAAOgB,SAAS,IAAE,GAElK,OADAlW,KAAKmW,sBAAsB3K,EAASwK,EAAyBjL,GACtDA,CACX,GAAC,+BACD,SAAkBqL,EAAarL,GAAa,WAClCmB,EAAelF,GAAE,iBACjBqP,EAAgBpP,EAAIuK,OAAOtF,EAAclF,GAAE,8BACjD,EAAsDoP,EAAYlB,OAA1DoB,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAASC,EAAI,EAAJA,KAAMC,EAAkB,EAAlBA,mBAC/BzW,KAAKkD,QAAQuN,cAAc4F,GAC3B,IAAMK,EAAiBzP,EAAIuK,OAAO6E,EAAerP,GAAE,SAGnD,GAFA0P,EAAezG,MAAM0G,WAAa,WAClCD,EAAeE,UAAYL,EACvBD,GAAUE,EAEV,GAAIA,GAAwB,kBAATA,EAAmB,CAClC,IAAMK,EAAuB7P,GAAE,QAC/B,GAAIsP,EACsBrP,EAAIuK,OAAOqF,EAAsB7P,GAAE,SAC3C4P,UAAYN,EAE9B,IAAMQ,EAAW7P,EAAIuK,OAAOqF,EAAsB7P,GAAE,gBACpD8P,EAASC,aAAa,OAAQP,EAAKtQ,OAAO8Q,YAC1CjM,EAAYG,IAAIjE,EAAIgQ,sBAAsBH,EAAU,SAAS,SAACxX,GAC1D,EAAKoW,eAAewB,KAAKV,EAAKtQ,OAAQ,CAAEiR,eAAe,IACvD7X,EAAE8X,iBACF9X,EAAE+X,iBACN,KACoBpQ,EAAIuK,OAAOsF,EAAU9P,GAAE,SAC/B4P,UAAYJ,EAAKrX,MAC7B,IAAMmY,EAAiBrQ,EAAIuK,OAAO6E,EAAeQ,GACjDS,EAAerH,MAAMsH,QAAU,MAC/BD,EAAerH,MAAMuH,YAAc,KACvC,KACK,CACD,IAAMF,EAAiBrQ,EAAIuK,OAAO6E,EAAerP,GAAE,SACnDsQ,EAAerH,MAAMsH,QAAU,MAC/BD,EAAerH,MAAMuH,YAAc,MACnCF,EAAeV,UAAYN,GAAUE,EAAO,GAAH,OAAMF,EAAM,YAAIE,EAAI,KAAMF,GAAkB,IAAH,OAAOE,EAAI,IACjG,CAEJ,IAAIiB,EAAAA,EAAAA,IAAgBhB,GAAqB,KAC+C,EAD/C,UAC6BA,GAAkB,qBAAE,cAAzEF,EAAO,EAAPA,QAASmB,EAAQ,EAARA,SAAU1K,EAAe,EAAfA,gBAAiBE,EAAW,EAAXA,YACvCyK,EAAuB1Q,EAAIuK,OAAO6E,EAAerP,GAAE,QACzD2Q,EAAqB1H,MAAM2H,UAAY,MACvC,IAAMjO,EAAI1C,EAAIuK,OAAOmG,EAAsB3Q,GAAE,MAC7C2C,EAAEiN,UAAY,GAAH,QAAMiB,EAAAA,GAAAA,IAASH,GAAS,YAAI1K,EAAe,aAAKE,EAAW,OACtEvD,EAAEsG,MAAM6H,OAAS,UACjB/M,EAAYG,IAAIjE,EAAIgQ,sBAAsBtN,EAAG,SAAS,SAACrK,GACnDA,EAAE+X,kBACF/X,EAAE8X,iBACE,EAAK1B,gBACL,EAAKA,eAAewB,KAAKQ,EAAU,CAC/BK,iBAAiB,EACjBC,cAAe,CAAEC,UAAW,CAAEjL,gBAAAA,EAAiBE,YAAAA,MAChDgL,MAAM1S,EAAAA,GAEjB,KACA,IAAMkR,EAAiBzP,EAAIuK,OAAOmG,EAAsB3Q,GAAE,SAC1D0P,EAAeE,UAAYL,EAC3B,EAAKrT,QAAQuN,cAAciG,EAC/B,EAnBA,IAAK,EAAL,wBAmBC,+BACL,CACA,OAAOxK,CACX,GAAC,mCACD,SAAsBV,EAAS4K,EAAarL,GAAa,WAarD,GAZIqL,EAAYlB,OAAOgB,WAAaD,GAAAA,GAAAA,OAAwBG,EAAYlB,OAAOgB,WAAaD,GAAAA,GAAAA,SAA0BG,EAAYlB,OAAOgB,WAAaD,GAAAA,GAAAA,MAClJzK,EAAQP,UAAUkN,UAAU,CACxBC,MAAOC,EAAAA,GAAa,eAAgB,gBACpCzG,UAAW0G,GAAAA,iBAAAA,GACXC,IAAK,WACD,IAAIjT,EACJkG,EAAQ9C,OACsC,QAA7CpD,EAAKkT,GAAAA,iBAAAA,IAAqB,EAAKtV,gBAA6B,IAAPoC,GAAyBA,EAAGmT,aAAarC,EAAYlB,QAC3G,EAAKhS,QAAQ6G,OACjB,KAGH/J,KAAKkD,QAAQmB,UAAU,IAAiC,CACzD,IAAMqU,EAA6BlN,EAAQP,UAAUuG,OAAOxK,GAAE,QAC1DhH,KAAK4V,8BACD+C,GAAAA,GAAAA,QAAoB3Y,KAAK4V,4BAA4BV,UAAYyD,GAAAA,GAAAA,QAAoBvC,EAAYlB,QAC5FlV,KAAK4V,4BAA4BgD,iBAClCF,EAA2BhI,YAAc2H,EAAAA,GAAa,eAAgB,6BAI1ErY,KAAK4V,iCAA8B/U,GAG3C,IAAMgY,EAA8B7Y,KAAK4V,8BAAgC5V,KAAK4V,4BAA4BgD,eAAiB7S,EAAAA,GAAAA,KAAkBgF,EAAYG,KAAI4N,EAAAA,EAAAA,KAAkB,kBAAMJ,EAA2BhI,YAAc2H,EAAAA,GAAa,wBAAyB,8BAA8B,GAAE,MAC/RK,EAA2BhI,cAE5BgI,EAA2BhI,YAAcqI,OAAOC,aAAa,MAEjE,IAAMC,EAAqBjZ,KAAKkZ,eAAe9C,EAAYlB,QAC3DnK,EAAYG,KAAIuB,EAAAA,EAAAA,KAAa,kBAAMwM,EAAmB7U,QAAQ,KAC9D6U,EAAmBvZ,MAAK,SAAAyZ,GAGpB,GAFAN,EAA4BhM,UAC5B,EAAK+I,4BAA8B,CAAEV,OAAQkB,EAAYlB,OAAQ0D,eAAgBO,EAAQC,aAAa/X,OAAS,IAC1G,EAAKuU,4BAA4BgD,eAGlC,OAFAO,EAAQtM,eACR6L,EAA2BhI,YAAc2H,EAAAA,GAAa,eAAgB,6BAG1EK,EAA2BzI,MAAMoJ,QAAU,OAC3C,IAAIC,GAAU,EACdvO,EAAYG,KAAIuB,EAAAA,EAAAA,KAAa,WACpB6M,GACDH,EAAQtM,SAEhB,KACArB,EAAQP,UAAUkN,UAAU,CACxBC,MAAOC,EAAAA,GAAa,cAAe,gBACnCzG,UAAW2H,GAAAA,GAAAA,GACXhB,IAAK,SAACrS,GACFoT,GAAU,EACV,IAAME,EAAaC,GAAAA,GAAAA,IAAuB,EAAKvW,SACzCwW,EAAkBzS,EAAI0S,uBAAuBzT,GAGnDsF,EAAQ9C,OACO,OAAf8Q,QAAsC,IAAfA,GAAiCA,EAAWI,gBAAgBzE,GAAyBgE,EAAS,CACjHU,EAAGH,EAAgBpF,KAAO,EAC1BwF,EAAGJ,EAAgBtF,IAAMsF,EAAgB9J,OAAS,EAClDQ,MAAOsJ,EAAgBtJ,MACvBR,OAAQ8J,EAAgB9J,QAEhC,GAER,GAAGpK,EAAAA,GACP,CACJ,GAAC,4BACD,SAAe0P,GAAQ,WACnB,OAAO6E,EAAAA,EAAAA,KAAwB,SAAAC,GAC3B,OAAOd,EAAAA,GAAAA,IAAe,EAAKvD,yBAAyBsE,mBAAoB,EAAK/W,QAAQqP,WAAY,IAAIjF,EAAAA,EAAM4H,EAAOlI,gBAAiBkI,EAAOhI,YAAagI,EAAO3H,cAAe2H,EAAO9H,WAAY+H,GAAyB+E,GAAAA,GAAAA,KAAeF,EAC5O,GACJ,KAAC,EA3KqB,GA6K1BxE,GAAyBxP,GAAW,CAChCa,GAAQ,EAAGsT,GAAAA,GACXtT,GAAQ,EAAGuT,EAAAA,IACXvT,GAAQ,EAAGjF,GAAAA,IACZ4T,KAEH6E,EAAAA,GAAAA,KAA2B,SAACC,EAAOC,GAC/B,IAAMC,EAASF,EAAMG,SAASC,EAAAA,KAC1BF,GACAD,EAAUI,QAAQ,2DAAD,OAA4DH,EAAM,QAEvF,IAAMI,EAAeN,EAAMG,SAASI,EAAAA,KAChCD,GACAL,EAAUI,QAAQ,iEAAD,OAAkEC,EAAY,OAEvG,IC1OA,IAAI5U,GAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HxD,EAAvHyD,EAAIC,UAAUjF,OAAQkF,EAAIF,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOI,OAAOC,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,kBAAZM,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIhE,EAAI6D,EAAW5E,OAAS,EAAGe,GAAK,EAAGA,KAASQ,EAAIqD,EAAW7D,MAAImE,GAAKF,EAAI,EAAIzD,EAAE2D,GAAKF,EAAI,EAAIzD,EAAEsD,EAAQC,EAAKI,GAAK3D,EAAEsD,EAAQC,KAASI,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOI,eAAeV,EAAQC,EAAKI,GAAIA,CAChE,EACIM,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUb,EAAQC,GAAOY,EAAUb,EAAQC,EAAKW,EAAa,CACxE,EAmBIgU,GAAoB,WACpB,WAAY5X,EAASiE,EAAuBuO,EAAgBqF,EAAkB3M,GAAoB,2BAC9FpO,KAAKkD,QAAUA,EACflD,KAAKmH,sBAAwBA,EAC7BnH,KAAK0V,eAAiBA,EACtB1V,KAAK+a,iBAAmBA,EACxB/a,KAAKgb,UAAY,IAAIhQ,EAAAA,GACrBhL,KAAKib,cAAe,EACpBjb,KAAKkb,eAAgB,EACrBlb,KAAKmb,eAAiB,KACtBnb,KAAKob,aAAe,KACpBpb,KAAKqb,cACLrb,KAAKsb,+BAAiCtb,KAAKkD,QAAQ2L,0BAAyB,SAACvP,GACrEA,EAAEwP,WAAW,MACb,EAAKyM,gBACL,EAAKF,cAEb,GACJ,CAGC,OAHA,mCAID,WAAc,WAEJG,EAAYxb,KAAKkD,QAAQmB,UAAU,IACzCrE,KAAKyb,gBAAkBD,EAAUE,QACjC1b,KAAK2b,eAAiBH,EAAUI,OAC5B5b,KAAKyb,iBACLzb,KAAKgb,UAAU9P,IAAIlL,KAAKkD,QAAQ2Y,aAAY,SAACvc,GAAC,OAAK,EAAKwc,mBAAmBxc,EAAE,KAC7EU,KAAKgb,UAAU9P,IAAIlL,KAAKkD,QAAQ6Y,WAAU,SAACzc,GAAC,OAAK,EAAK0c,iBAAiB1c,EAAE,KACzEU,KAAKgb,UAAU9P,IAAIlL,KAAKkD,QAAQ+Y,aAAY,SAAC3c,GAAC,OAAK,EAAK4c,mBAAmB5c,EAAE,KAC7EU,KAAKgb,UAAU9P,IAAIlL,KAAKkD,QAAQiZ,WAAU,SAAC7c,GAAC,OAAK,EAAK8c,WAAW9c,EAAE,OAGnEU,KAAKgb,UAAU9P,IAAIlL,KAAKkD,QAAQ+Y,aAAY,SAAC3c,GAAC,OAAK,EAAK4c,mBAAmB5c,EAAE,KAC7EU,KAAKgb,UAAU9P,IAAIlL,KAAKkD,QAAQiZ,WAAU,SAAC7c,GAAC,OAAK,EAAK8c,WAAW9c,EAAE,MAEvEU,KAAKgb,UAAU9P,IAAIlL,KAAKkD,QAAQmZ,cAAa,SAAC/c,GAAC,OAAK,EAAKgd,oBAAoBhd,EAAE,KAC/EU,KAAKgb,UAAU9P,IAAIlL,KAAKkD,QAAQqZ,kBAfA,WAAH,OAAS,EAAKC,cAAc,KAgBzDxc,KAAKgb,UAAU9P,IAAIlL,KAAKkD,QAAQuZ,mBAAkB,SAACnd,GAAC,OAAK,EAAKod,uBAAuBpd,EAAE,IAC3F,GAAC,2BACD,WACIU,KAAKgb,UAAUnS,OACnB,GAAC,oCACD,SAAuBvJ,IACfA,EAAEqd,kBAAoBrd,EAAEsd,oBACxB5c,KAAKwc,cAEb,GAAC,gCACD,SAAmBvT,GACfjJ,KAAKib,cAAe,EACpB,IAAM/U,EAAS+C,EAAW/C,OACN,IAAhBA,EAAOkD,MAAmDlD,EAAOsD,SAAWjC,EAAmB6H,GAK/E,KAAhBlJ,EAAOkD,MAAoDlD,EAAOsD,SAAWuJ,EAAkB3D,KAI/E,KAAhBlJ,EAAOkD,OACPpJ,KAAKkb,eAAgB,GAEzBlb,KAAKwc,gBAXDxc,KAAKkb,eAAgB,CAY7B,GAAC,8BACD,SAAiBjS,GACbjJ,KAAKib,cAAe,CACxB,GAAC,iCACD,SAAoBhS,GAChB,IAAI3D,EACEuX,EAAY5T,EAAWzF,MAAMsZ,aAAaC,eACb,QAA9BzX,EAAKtF,KAAKmb,sBAAmC,IAAP7V,OAAgB,EAASA,EAAG0X,aAAaH,KAIpF7c,KAAKwc,cACT,GAAC,gCACD,SAAmBvT,GACf,IAAI3D,EAAIL,EAAIC,EAAI+X,EAAIC,EACdhX,EAAS+C,EAAW/C,OAC1B,KAAIlG,KAAKib,eAAgBjb,KAAKkb,kBAG1Blb,KAAK2b,gBAAkC,IAAhBzV,EAAOkD,MAAmDlD,EAAOsD,SAAWjC,EAAmB6H,OAItHpP,KAAK2b,iBAAgI,QAA3G1W,EAAmD,QAA7CK,EAAK2D,EAAWzF,MAAMsZ,aAAaK,YAAyB,IAAP7X,OAAgB,EAASA,EAAG8X,sBAAmC,IAAPnY,OAAgB,EAASA,EAAGoY,gBAIxKrd,KAAK2b,gBAAkC,IAAhBzV,EAAOkD,MAAmDlD,EAAOsD,SAAWjC,EAAmB6H,MACpF,QAA9BlK,EAAKlF,KAAKmb,sBAAmC,IAAPjW,OAAgB,EAASA,EAAG6D,4BAIvE/I,KAAK2b,gBAAkC,KAAhBzV,EAAOkD,MAAoDlD,EAAOsD,SAAWuJ,EAAkB3D,IAI1H,GAAKpP,KAAKyb,gBAAV,CAKA,IADsBzb,KAAKsd,4BACTC,YAAYtU,GAI9B,OAAoB,IAAhB/C,EAAOkD,MAAwDlD,EAAO9F,UACvC,QAA9B8c,EAAKld,KAAKmb,sBAAmC,IAAP+B,GAAyBA,EAAGxU,OAC9D1I,KAAKob,eACNpb,KAAKob,aAAe,IAAIrI,EAAkB/S,KAAKkD,QAASlD,KAAK+a,iBAAkB/a,KAAK0V,sBAExF1V,KAAKob,aAAaoC,eAAetX,EAAO9F,SAASoS,kBAGrDxS,KAAKwc,eAX4B,QAA5BS,EAAKjd,KAAKob,oBAAiC,IAAP6B,GAAyBA,EAAGvU,MAHrE,MAFI1I,KAAKwc,cAiBb,GAAC,wBACD,SAAWld,GACW,IAAdA,EAAEme,SAAkD,IAAdne,EAAEme,SAAiD,KAAdne,EAAEme,SAAmD,IAAdne,EAAEme,SAEpHzd,KAAKwc,cAEb,GAAC,0BACD,WACI,IAAIlX,EAAIL,EAAIC,EACPlF,KAAKib,cAAgBjb,KAAKkb,gBAAiD,QAA9B5V,EAAKtF,KAAKmb,sBAAmC,IAAP7V,OAAgB,EAASA,EAAGyD,0BAGpH/I,KAAKkb,eAAgB,EACQ,QAA5BjW,EAAKjF,KAAKob,oBAAiC,IAAPnW,GAAyBA,EAAGyD,OAClC,QAA9BxD,EAAKlF,KAAKmb,sBAAmC,IAAPjW,GAAyBA,EAAGwD,OACvE,GAAC,uCACD,WAII,OAHK1I,KAAKmb,iBACNnb,KAAKmb,eAAiBnb,KAAKmH,sBAAsBG,eAAeJ,EAAwBlH,KAAKkD,UAE1FlD,KAAKmb,cAChB,GAAC,kCACD,WACI,IAAI7V,EACJ,OAAuC,QAA9BA,EAAKtF,KAAKmb,sBAAmC,IAAP7V,OAAgB,EAASA,EAAGyD,0BAA2B,CAC1G,GAAC,8BACD,SAAiB7H,EAAO2E,EAAMkE,GAC1B/J,KAAKsd,4BAA4BI,oBAAoBxc,EAAO2E,EAAMkE,EACtE,GAAC,qBACD,WACI,IAAIzE,EAAIL,EACRjF,KAAKub,gBACLvb,KAAKgb,UAAUnO,UACf7M,KAAKsb,+BAA+BzO,UACP,QAA5BvH,EAAKtF,KAAKob,oBAAiC,IAAP9V,GAAyBA,EAAGuH,UAClC,QAA9B5H,EAAKjF,KAAKmb,sBAAmC,IAAPlW,GAAyBA,EAAG4H,SACvE,IAAC,kBAxID,SAAWyF,GACP,OAAOA,EAAOqL,gBAAgB7C,EAAqB1L,GACvD,KAAC,EArBmB,GA6JxB0L,GAAqB1L,GAAK,uBAC1B0L,GAAuB9U,GAAW,CAC9Ba,GAAQ,EAAGmH,EAAAA,IACXnH,GAAQ,EAAGuT,EAAAA,IACXvT,GAAQ,EAAG+W,EAAAA,GACX/W,GAAQ,EAAGwK,EAAAA,KACZyJ,IAC6B,IAC1B+C,GAAe,0CACjB,aAAc,kCACJ,CACFC,GAAI,0BACJ1F,MAAOC,EAAAA,GAAa,CAChBlS,IAAK,YACL4X,QAAS,CACL,2EACA,qEAEL,cACHC,MAAO,aACPC,kBAAcpd,EACdqd,OAAQ,CACJC,OAAQ5P,EAAAA,EAAAA,gBACR6P,SAASC,EAAAA,EAAAA,IAAS,KAAmD,MACrEC,OAAQ,MAGpB,CAaC,OAbA,2BACD,SAAI/c,EAAU+Q,GACV,GAAKA,EAAOH,WAAZ,CAGA,IAAMqH,EAAasB,GAAqBnZ,IAAI2Q,GAC5C,GAAKkH,EAAL,CAGA,IAAMpZ,EAAWkS,EAAOiM,cAClBrd,EAAQ,IAAIoM,EAAAA,EAAMlN,EAASoS,WAAYpS,EAASoe,OAAQpe,EAASoS,WAAYpS,EAASoe,QACtFzU,EAAwE,IAAhEuI,EAAOjO,UAAU,GAC/BmV,EAAWiF,iBAAiBvd,EAAO,EAAkC6I,EAJrE,CAJA,CASJ,KAAC,EAhCgB,CAAS2U,EAAAA,IAkCxBC,GAAgC,0CAClC,aAAc,kCACJ,CACFb,GAAI,2CACJ1F,MAAOC,EAAAA,GAAa,CAChBlS,IAAK,6BACL4X,QAAS,CACL,4FACA,wFAEL,iCACHC,MAAO,gCACPC,kBAAcpd,GAEtB,CAmBC,OAnBA,2BACD,SAAIU,EAAU+Q,GACV,IAAMkH,EAAasB,GAAqBnZ,IAAI2Q,GAC5C,GAAKkH,EAAL,CAGA,IAAMpZ,EAAWkS,EAAOiM,cACxB,GAAKne,EAAL,CAGA,IAAMc,EAAQ,IAAIoM,EAAAA,EAAMlN,EAASoS,WAAYpS,EAASoe,OAAQpe,EAASoS,WAAYpS,EAASoe,QACtFI,EAAOC,EAAAA,2CAAAA,IAA+CvM,GAC5D,GAAKsM,EAGWA,EAAKE,8BAA8B1e,GAC3CV,MAAK,WACT8Z,EAAWiF,iBAAiBvd,EAAO,GAAkC,EACzE,GATA,CAJA,CAcJ,KAAC,EAjCiC,CAASwd,EAAAA,KAmC/CK,EAAAA,EAAAA,IAA2BjE,GAAqB1L,GAAI0L,KACpDkE,EAAAA,EAAAA,IAAqBnB,KACrBmB,EAAAA,EAAAA,IAAqBL,IACrB/W,EAAAA,GAAAA,SAAkCqX,GAAAA,IAClCrX,EAAAA,GAAAA,SAAkC4N,KAElC6E,EAAAA,GAAAA,KAA2B,SAACC,EAAOC,GAC/B,IAAM2E,EAA4B5E,EAAMG,SAAS0E,EAAAA,KAC7CD,GACA3E,EAAUI,QAAQ,sDAAD,OAAuDuE,EAAyB,QAErG,IAAME,EAAkB9E,EAAMG,SAAS4E,EAAAA,KACnCD,GACA7E,EAAUI,QAAQ,oDAAD,OAAqDyE,EAAe,QAEzF,IAAME,EAAchF,EAAMG,SAAS8E,EAAAA,KAC/BD,IACA/E,EAAUI,QAAQ,oDAAD,OAAqD2E,EAAW,QACjF/E,EAAUI,QAAQ,iGAAD,OAAkG2E,EAAYE,YAAY,IAAI,QAC/IjF,EAAUI,QAAQ,2DAAD,OAA4D2E,EAAYE,YAAY,IAAI,QACzGjF,EAAUI,QAAQ,8DAAD,OAA+D2E,EAAYE,YAAY,IAAI,SAEhH,IAAMC,EAAOnF,EAAMG,SAASC,EAAAA,KACxB+E,GACAlF,EAAUI,QAAQ,2CAAD,OAA4C8E,EAAI,QAErE,IAAMC,EAAYpF,EAAMG,SAASI,EAAAA,KAC7B6E,GACAnF,EAAUI,QAAQ,iDAAD,OAAkD+E,EAAS,QAEhF,IAAMC,EAAkBrF,EAAMG,SAASmF,EAAAA,KACnCD,GACApF,EAAUI,QAAQ,yCAAD,OAA0CgF,EAAe,QAE9E,IAAME,EAAoBvF,EAAMG,SAASqF,EAAAA,KACrCD,GACAtF,EAAUI,QAAQ,wEAAD,OAAyEkF,EAAiB,QAE/G,IAAME,EAAiBzF,EAAMG,SAASuF,EAAAA,KAClCD,GACAxF,EAAUI,QAAQ,yDAAD,OAA0DoF,EAAc,OAEjG,G,mIC/Sa1W,EAAgB,WACzB,WAAYQ,EAAU3I,IAAO,eACzBlB,KAAK6J,SAAWA,EAChB7J,KAAKkB,MAAQA,EACblB,KAAKoJ,KAAO,CAChB,CAMC,OANA,8BACD,SAAO6W,GACH,OAAuB,IAAfA,EAAM7W,MAA0CpJ,KAAKkB,MAAMgf,YAAYD,EAAM/e,MACzF,GAAC,kCACD,SAAqBif,EAAYvV,GAC7B,OAA4B,IAApBuV,EAAW/W,MAA0CwB,EAAe4H,aAAexS,KAAKkB,MAAM8L,eAC1G,KAAC,EAXwB,GAahBoT,EAAyB,WAClC,WAAYvW,EAAUiC,EAAO5K,IAAO,eAChClB,KAAK6J,SAAWA,EAChB7J,KAAK8L,MAAQA,EACb9L,KAAKkB,MAAQA,EACblB,KAAKoJ,KAAO,CAChB,CAMC,OANA,8BACD,SAAO6W,GACH,OAAuB,IAAfA,EAAM7W,MAAmDpJ,KAAK8L,QAAUmU,EAAMnU,KAC1F,GAAC,kCACD,SAAqBqU,EAAYvV,GAC7B,OAA4B,IAApBuV,EAAW/W,MAAmDpJ,KAAK8L,QAAUqU,EAAWrU,KACpG,KAAC,EAZiC,GAczBlE,EAA4B,eACrC,cAAc,eACV5H,KAAK2H,cAAgB,EACzB,CAMC,OANA,gCACD,SAAS0Y,GACLrgB,KAAK2H,cAAcxC,KAAKkb,EAC5B,GAAC,oBACD,WACI,OAAOrgB,KAAK2H,aAChB,KAAC,EATwC,G,uSC3BzC3B,EAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HxD,EAAvHyD,EAAIC,UAAUjF,OAAQkF,EAAIF,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOI,OAAOC,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,kBAAZM,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIhE,EAAI6D,EAAW5E,OAAS,EAAGe,GAAK,EAAGA,KAASQ,EAAIqD,EAAW7D,MAAImE,GAAKF,EAAI,EAAIzD,EAAE2D,GAAKF,EAAI,EAAIzD,EAAEsD,EAAQC,EAAKI,GAAK3D,EAAEsD,EAAQC,KAASI,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOI,eAAeV,EAAQC,EAAKI,GAAIA,CAChE,EACIM,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUb,EAAQC,GAAOY,EAAUb,EAAQC,EAAKW,EAAa,CACxE,EAeME,EAAIC,EAAAA,EACGqZ,EAAa,WACtB,WAAYxU,EAAO5K,EAAOE,EAAUrB,IAAS,eACzCC,KAAK8L,MAAQA,EACb9L,KAAKkB,MAAQA,EACblB,KAAKoB,SAAWA,EAChBpB,KAAKD,QAAUA,CACnB,CAKC,OALA,6CACD,SAAsB6I,GAClB,OAAwB,IAAhBA,EAAOQ,MACRpJ,KAAKkB,MAAMgM,aAAetE,EAAO1H,MAAMgM,aACvClN,KAAKkB,MAAMkM,WAAaxE,EAAO1H,MAAMkM,SAChD,KAAC,EAXqB,GAatB6R,EAAwB,WACxB,WAAY/b,EAAS6X,EAAkBrF,EAAgB6K,EAAuB5K,IAA0B,eACpG3V,KAAKkD,QAAUA,EACflD,KAAK+a,iBAAmBA,EACxB/a,KAAK0V,eAAiBA,EACtB1V,KAAKugB,sBAAwBA,EAC7BvgB,KAAK2V,yBAA2BA,EAChC3V,KAAKiI,aAAe,CACxB,CAqDC,OArDA,4CACD,SAAqBW,GACjB,OAAO,IAAI0X,EAActgB,KAAM4I,EAAO1H,MAAO,EAAC,IAAIsf,EAAAA,IAAiBC,WAAWpI,EAAAA,GAAa,4BAA6B,gBAAiB,IAC7I,GAAC,yBACD,SAAYzP,EAAQwJ,GAChB,IAAKpS,KAAKkD,QAAQiP,YAA8B,IAAhBvJ,EAAOQ,KACnC,MAAO,GAEX,IAAMjJ,EAAQH,KAAKkD,QAAQqP,WACrBC,EAAa5J,EAAO1H,MAAM8L,gBAC1B0F,EAAYvS,EAAMwS,iBAAiBH,GACnChT,EAAS,GACXiB,EAAQ,IACNigB,EAAavgB,EAAMwgB,cAAcnO,GACjCoO,EAAazgB,EAAM0gB,wBAAwBjY,EAAO1H,MAAM8L,gBAAiBpE,EAAO1H,MAAMgM,aACtF4T,EAA4B9gB,KAAKugB,sBAAsBQ,SAAS,mCAAoC,CACtGC,mBAAoBJ,IAEiB,kBAA9BE,GAA0CJ,GAAcI,GAC/DthB,EAAO2F,KAAK,IAAImb,EAActgB,KAAM4I,EAAO1H,MAAO,CAAC,CAC3C/B,MAAOkZ,EAAAA,GAAa,sBAAuB,oIAC3C5X,MACX,IAC8B,EAD9B,UACe2R,GAAe,IAA/B,IAAK,EAAL,qBAAiC,KAAtBxP,EAAC,QACFsK,EAAetK,EAAE1B,MAAM8L,kBAAoBwF,EAAc5P,EAAE1B,MAAMgM,YAAc,EAC/EE,EAAaxK,EAAE1B,MAAMqM,gBAAkBiF,EAAc5P,EAAE1B,MAAMkM,UAAYsF,EACzEmC,EAAejS,EAAE2J,QAAQsI,aAC/B,GAAKA,KAAgBE,EAAAA,EAAAA,IAAsBF,GAA3C,CAGA,IAAM3T,EAAQ,IAAIoM,EAAAA,EAAM1E,EAAO1H,MAAM8L,gBAAiBE,EAAatE,EAAO1H,MAAM8L,gBAAiBI,GACjG5N,EAAO2F,KAAK,IAAImb,EAActgB,KAAMkB,GAAO8T,EAAAA,EAAAA,IAAQH,GAAepU,KAFlE,CAGJ,CAAC,+BACD,OAAOjB,CACX,GAAC,0BACD,SAAaoJ,EAAQwJ,EAAiB/R,GAAO,WACzC,IAAKL,KAAKkD,QAAQiP,YAA8B,IAAhBvJ,EAAOQ,KACnC,OAAOrI,EAAAA,GAAAA,MAEX,IAAMZ,EAAQH,KAAKkD,QAAQqP,WAC3B,IAAKvS,KAAK2V,yBAAyB9T,cAAcof,IAAI9gB,GACjD,OAAOY,EAAAA,GAAAA,MAEX,IAAMX,EAAW,IAAIwN,EAAAA,EAAShF,EAAO1H,MAAM8L,gBAAiBpE,EAAO1H,MAAMgM,aACzE,OAAOjN,EAAAA,EAAAA,IAASD,KAAK2V,yBAAyB9T,cAAe1B,EAAOC,EAAUC,GACzE6J,QAAO,SAAA1I,GAAI,QAAKuT,EAAAA,EAAAA,IAAsBvT,EAAK1B,MAAMsB,SAAS,IAC1DZ,KAAI,SAAAgB,GACL,IAAM0f,EAAM1f,EAAK1B,MAAMoB,MAAQoM,EAAAA,EAAAA,KAAW9L,EAAK1B,MAAMoB,OAAS0H,EAAO1H,MACrE,OAAO,IAAIof,EAAc,EAAMY,EAAK1f,EAAK1B,MAAMsB,SAAUI,EAAKzB,QAClE,GACJ,GAAC,8BACD,SAAiByL,EAASI,GACtB,OAAOuV,EAAqB3V,EAASI,EAAY5L,KAAKkD,QAASlD,KAAK+a,iBAAkB/a,KAAK0V,eAC/F,KAAC,EA7DuB,GAsErB,SAASyL,EAAqB3V,EAASI,EAAY0G,EAAQU,EAAiBC,GAE/ErH,EAAW9D,MAAK,SAAC6B,EAAGC,GAAC,OAAKD,EAAE5J,QAAU6J,EAAE7J,OAAO,IAC/C,IACkC,EAD5BgL,EAAc,IAAIC,EAAAA,GAAkB,UAClBY,GAAU,IAAlC,IAAK,EAAL,qBAAoC,KACS,EADlCwV,EAAS,kBACOA,EAAUhgB,UAAQ,qBAAE,IAAhCA,EAAQ,QACf,IAAI2T,EAAAA,EAAAA,IAAsB3T,GAAW,iBAGrC,IAAMsS,EAAuB1M,EAAE,gCACzB2M,EAAuB1M,EAAAA,OAAWyM,EAAsB1M,EAAE,uBAC1Dqa,EAAWtW,EAAYG,IAAI,IAAIoI,EAAAA,EAAiB,CAAEhB,OAAAA,GAAUU,EAAiBC,IACnFlI,EAAYG,IAAImW,EAASC,kBAAiB,WACtC3N,EAAqB5F,UAAY,qCACjCvC,EAAQG,mBACZ,KACA,IAAMiI,EAAmB7I,EAAYG,IAAImW,EAASzQ,OAAOxP,IACzDuS,EAAqB1H,YAAY2H,EAAiB5B,SAClDxG,EAAQJ,SAASa,YAAYyH,EACjC,EAdA,IAAK,EAAL,wBAcC,+BACL,CAAC,+BACD,OAAO3I,CACX,CA7BAkU,EAA2BjZ,EAAW,CAClCa,EAAQ,EAAG+W,EAAAA,GACX/W,EAAQ,EAAGuT,EAAAA,IACXvT,EAAQ,EAAG0a,EAAAA,IACX1a,EAAQ,EAAGjF,EAAAA,IACZqd,E,iNCxGUuC,EAAqB,WAC9B,WAAYC,EAAWC,EAAmBC,IAAM,eAC5C3hB,KAAK4hB,WAAaH,EAClBzhB,KAAK6hB,mBAAqBH,EAC1B1hB,KAAK8hB,MAAQH,CACjB,CAYC,OAZA,yCACD,SAAkBxhB,EAAO4hB,GACrBA,EAAQC,wBAAwBhiB,KAAK4hB,WAAY5hB,KAAK8hB,MAC1D,GAAC,gCACD,SAAmB3hB,EAAO8hB,GACtB,IACMC,EADwBD,EAAOE,2BACE,GAAGjhB,MAC1C,OAAKlB,KAAK6hB,mBAAmBO,UAItB,IAAIC,EAAAA,EAAUH,EAAS3U,cAAeC,KAAKC,IAAIzN,KAAK6hB,mBAAmBS,eAAgBJ,EAAS9U,WAAY8U,EAAS3U,cAAeC,KAAKC,IAAIzN,KAAK6hB,mBAAmBS,eAAgBJ,EAAS9U,YAF1L,IAAIiV,EAAAA,EAAUH,EAAS3U,cAAe2U,EAAS9U,UAAYpN,KAAK8hB,MAAMzgB,OAAQ6gB,EAAS3U,cAAe2U,EAAS9U,UAG9H,KAAC,EAjB6B,GCD9BpH,EAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HxD,EAAvHyD,EAAIC,UAAUjF,OAAQkF,EAAIF,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOI,OAAOC,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,kBAAZM,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIhE,EAAI6D,EAAW5E,OAAS,EAAGe,GAAK,EAAGA,KAASQ,EAAIqD,EAAW7D,MAAImE,GAAKF,EAAI,EAAIzD,EAAE2D,GAAKF,EAAI,EAAIzD,EAAEsD,EAAQC,EAAKI,GAAK3D,EAAEsD,EAAQC,KAASI,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOI,eAAeV,EAAQC,EAAKI,GAAIA,CAChE,EACIM,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUb,EAAQC,GAAOY,EAAUb,EAAQC,EAAKW,EAAa,CACxE,EAcIyb,EAAwB,WACxB,WAAYjQ,EAAQkQ,IAAqB,eACrCxiB,KAAKsS,OAASA,EACdtS,KAAKwiB,oBAAsBA,EAC3BxiB,KAAKyiB,YAAcziB,KAAKsS,OAAOjG,6BACnC,CAGC,OAHA,+BAID,WACA,GAAC,iBACD,SAAIiK,EAAQoM,GAAI,WAER1iB,KAAK2iB,gBACL3iB,KAAK2iB,eAAeve,SAExB,IAAMwe,EAAkB5iB,KAAKsS,OAAO8K,eAC9Bjd,EAAQH,KAAKsS,OAAOC,WAC1B,GAAKpS,GAAUyiB,EAAf,CAGA,IAAI3K,EAAY2K,EAChB,GAAI3K,EAAUjL,kBAAoBiL,EAAU1K,cAA5C,CAIA,IAAM9I,EAAQ,IAAIoe,EAAAA,GAAY7iB,KAAKsS,OAAQ,GACrCwQ,EAAW3iB,EAAM2V,IACvB,OAAK9V,KAAKwiB,oBAAoBO,oBAAoBD,IAGlD9iB,KAAK2iB,gBAAiB5I,EAAAA,EAAAA,KAAwB,SAAA1Z,GAAK,OAAI,EAAKmiB,oBAAoBQ,iBAAiBF,EAAU7K,EAAWyK,EAAG,IAClH1iB,KAAK2iB,eAAejjB,MAAK,SAAAF,GAC5B,GAAKA,GAAWA,EAAO0B,OAAU1B,EAAOL,OAInCsF,EAAMwe,SAAS,EAAK3Q,QAAzB,CAKA,IAAMmP,EAAYnU,EAAAA,EAAAA,KAAW9N,EAAO0B,OAChC4J,EAAiBtL,EAAO0B,MACtBgiB,EAAO1jB,EAAOL,MAAMkC,QAAU4W,EAAU7K,UAAY6K,EAAU/K,aAEpEpC,EAAiB,CACbkC,gBAAiBlC,EAAekC,gBAChCE,YAAapC,EAAeoC,YAC5BK,cAAezC,EAAeyC,cAC9BH,UAAWtC,EAAeoC,YAAc1N,EAAOL,MAAMkC,QAErD6hB,EAAO,IACPjL,EAAY,IAAIoK,EAAAA,EAAUpK,EAAUjL,gBAAiBiL,EAAU/K,YAAa+K,EAAU1K,cAAe0K,EAAU7K,UAAY8V,EAAO,IAGtI,IAAMC,EAAU,IAAI3B,EAAsBC,EAAWxJ,EAAWzY,EAAOL,OACvE,EAAKmT,OAAO8Q,eACZ,EAAK9Q,OAAO+Q,eAAe/M,EAAQ6M,GACnC,EAAK7Q,OAAO8Q,eAEZ,EAAKX,YAAYnW,IAAI,CAAC,CACdpL,MAAO4J,EACPyB,QAASgW,EAAyBe,cAGtC,EAAKC,mBACL,EAAKA,kBAAkBnf,SAE3B,EAAKmf,mBAAoBC,EAAAA,EAAAA,IAAQ,KACjC,EAAKD,kBAAkB7jB,MAAK,kBAAM,EAAK+iB,YAAY5Z,OAAO,IAAEqP,MAAM1S,EAAAA,GA9BlE,CA+BJ,IAAG0S,MAAM1S,EAAAA,KA1CEzG,QAAQC,aAAQ6B,EAJ3B,CALA,CAoDJ,IAAC,kBAlED,SAAWyR,GACP,OAAOA,EAAOqL,gBAAgB4E,EAAyBnT,GAC3D,KAAC,EARuB,GA0E5BmT,EAAyBnT,GAAK,0CAC9BmT,EAAyBe,WAAazV,EAAAA,GAAAA,SAAgC,CAClEC,YAAa,mBACbC,UAAW,wBAEfwU,EAA2Bvc,EAAW,CAClCa,EAAQ,EAAG4c,EAAAA,IACZlB,GAA0B,IACvBmB,EAAgB,0CAClB,aAAc,kCACJ,CACF5F,GAAI,kCACJ1F,MAAOC,EAAAA,GAAa,sCAAuC,+BAC3D2F,MAAO,8BACPC,aAAc1P,EAAAA,EAAAA,SACd2P,OAAQ,CACJC,OAAQ5P,EAAAA,EAAAA,gBACR6P,QAAS,KACTE,OAAQ,MAGpB,CAOC,OAPA,2BACD,SAAI/c,EAAU+Q,GACV,IAAMkH,EAAa+I,EAAyB5gB,IAAI2Q,GAChD,OAAKkH,EAGEA,EAAWjB,IAAIvY,KAAK8d,IAAI,GAFpB/e,QAAQC,aAAQ6B,EAG/B,KAAC,EApBiB,CAAS6d,EAAAA,IAsBzBiF,EAAkB,0CACpB,aAAc,kCACJ,CACF7F,GAAI,oCACJ1F,MAAOC,EAAAA,GAAa,kCAAmC,2BACvD2F,MAAO,0BACPC,aAAc1P,EAAAA,EAAAA,SACd2P,OAAQ,CACJC,OAAQ5P,EAAAA,EAAAA,gBACR6P,QAAS,KACTE,OAAQ,MAGpB,CAOC,OAPA,2BACD,SAAI/c,EAAU+Q,GACV,IAAMkH,EAAa+I,EAAyB5gB,IAAI2Q,GAChD,OAAKkH,EAGEA,EAAWjB,IAAIvY,KAAK8d,IAAI,GAFpB/e,QAAQC,aAAQ6B,EAG/B,KAAC,EApBmB,CAAS6d,EAAAA,KAsBjCK,EAAAA,EAAAA,IAA2BwD,EAAyBnT,GAAImT,IACxDvD,EAAAA,EAAAA,IAAqB0E,IACrB1E,EAAAA,EAAAA,IAAqB2E,IACrBtJ,EAAAA,EAAAA,KAA2B,SAACC,EAAOC,GAC/B,IAAMqJ,EAAStJ,EAAMG,SAASoJ,EAAAA,IAC1BD,GACArJ,EAAUI,QAAQ,+DAAD,OAAgEiJ,EAAM,OAE/F,G,wBC5JO,SAASE,EAAYC,EAAKC,GAE7B,IADA,IAAIC,EAAY,EACP7hB,EAAI,EAAGA,EAAI2hB,EAAI1iB,OAAQe,IACN,OAAlB2hB,EAAIG,OAAO9hB,GACX6hB,GAAaD,EAGbC,IAGR,OAAOA,CACX,CACO,SAASE,EAAeF,EAAWD,EAASI,GAC/CH,EAAYA,EAAY,EAAI,EAAIA,EAChC,IAAIzkB,EAAS,GACb,IAAK4kB,EAAc,CACf,IAAMC,EAAU7W,KAAK8W,MAAML,EAAYD,GACvCC,GAAwBD,EACxB,IAAK,IAAI5hB,EAAI,EAAGA,EAAIiiB,EAASjiB,IACzB5C,GAAU,IAElB,CACA,IAAK,IAAI4C,EAAI,EAAGA,EAAI6hB,EAAW7hB,IAC3B5C,GAAU,IAEd,OAAOA,CACX,C,o4BC1BIwG,EAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HxD,EAAvHyD,EAAIC,UAAUjF,OAAQkF,EAAIF,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOI,OAAOC,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,kBAAZM,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIhE,EAAI6D,EAAW5E,OAAS,EAAGe,GAAK,EAAGA,KAASQ,EAAIqD,EAAW7D,MAAImE,GAAKF,EAAI,EAAIzD,EAAE2D,GAAKF,EAAI,EAAIzD,EAAEsD,EAAQC,EAAKI,GAAK3D,EAAEsD,EAAQC,KAASI,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOI,eAAeV,EAAQC,EAAKI,GAAIA,CAChE,EACIM,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUb,EAAQC,GAAOY,EAAUb,EAAQC,EAAKW,EAAa,CACxE,EAgBO,SAASyd,EAA0BpkB,EAAOqkB,EAA8BxX,EAAiBO,EAAekX,GAC3G,GAA6B,IAAzBtkB,EAAMsS,gBAAsD,IAA9BtS,EAAMwS,iBAAiB,GAErD,MAAO,GAEX,IAAM+R,EAAmBF,EAA6BG,yBAAyBxkB,EAAMykB,iBAAiBF,iBACtG,IAAKA,EACD,MAAO,GAIX,IAFAnX,EAAgBC,KAAKC,IAAIF,EAAepN,EAAMsS,gBAEvCzF,GAAmBO,GACjBmX,EAAiBG,uBADe,CAIrC,IAAMlD,EAAOxhB,EAAM2kB,eAAe9X,GAClC,IAAK0X,EAAiBG,sBAAsBE,KAAKpD,GAC7C,MAEJ3U,GACJ,CACA,GAAIA,EAAkBO,EAAgB,EAClC,MAAO,GAEX,IAWIyX,EAXJ,EAA8C7kB,EAAM8kB,aAA5CjB,EAAO,EAAPA,QAASkB,EAAU,EAAVA,WAAYd,EAAY,EAAZA,aACvBe,EAAc,SAACC,EAAaC,GAE9B,OADAA,EAAQA,GAAS,EACVC,EAAAA,EAAAA,YAAyBF,EAAaA,EAAY/jB,OAASgkB,EAAOrB,EAASkB,EAAYd,EAClG,EACMmB,EAAgB,SAACH,EAAaC,GAEhC,OADAA,EAAQA,GAAS,EACVC,EAAAA,EAAAA,cAA2BF,EAAaA,EAAY/jB,OAASgkB,EAAOrB,EAASkB,EAAYd,EACpG,EACMoB,EAAc,GAKdC,EAAkBtlB,EAAM2kB,eAAe9X,GACzC0Y,EAAsBD,EAC1B,QAAwB5kB,IAApB4jB,GAAqD,OAApBA,EAA0B,CAC3DO,EAAeP,EACf,IAAMkB,EAAiBC,EAAAA,GAA6BH,GACpDC,EAAsBV,EAAeS,EAAgBI,UAAUF,EAAetkB,QAC1EqjB,EAAiBoB,uBAAyBpB,EAAiBoB,sBAAsBf,KAAKW,KAEtFA,GADAV,EAAeO,EAAcP,IACQS,EAAgBI,UAAUF,EAAetkB,SAE9EokB,IAAoBC,GACpBF,EAAYrgB,KAAK4gB,EAAAA,EAAAA,YAA0B,IAAI1D,EAAAA,EAAUrV,EAAiB,EAAGA,EAAiB2Y,EAAetkB,OAAS,IAAI2kB,EAAAA,EAAAA,GAAqBhB,EAAcE,EAAYd,IAEjL,MAEIY,EAAeY,EAAAA,GAA6BH,GAGhD,IAAIQ,EAAyBjB,EACzBN,EAAiBwB,uBAAyBxB,EAAiBwB,sBAAsBnB,KAAKW,IACtFO,EAAyBd,EAAYc,GACrCjB,EAAeG,EAAYH,IAEtBN,EAAiByB,uBAAyBzB,EAAiByB,sBAAsBpB,KAAKW,KAC3FO,EAAyBd,EAAYc,IAIzC,IAAK,IAAIzT,IAFTxF,EAEuCwF,GAAcjF,EAAeiF,IAAc,CAC9E,IAAMmP,EAAOxhB,EAAM2kB,eAAetS,GAC5BmT,EAAiBC,EAAAA,GAA6BjE,GAC9C+D,EAAsBO,EAAyBtE,EAAKkE,UAAUF,EAAetkB,QAC/EqjB,EAAiBoB,uBAAyBpB,EAAiBoB,sBAAsBf,KAAKW,KACtFO,EAAyBV,EAAcU,GACvCjB,EAAeO,EAAcP,IAE7BW,IAAmBM,GACnBT,EAAYrgB,KAAK4gB,EAAAA,EAAAA,YAA0B,IAAI1D,EAAAA,EAAU7P,EAAY,EAAGA,EAAYmT,EAAetkB,OAAS,IAAI2kB,EAAAA,EAAAA,GAAqBC,EAAwBf,EAAYd,KAGzKM,EAAiBG,uBAAyBH,EAAiBG,sBAAsBE,KAAKpD,KAOtFsE,EAFKvB,EAAiBwB,uBAAyBxB,EAAiBwB,sBAAsBnB,KAAKW,GAC3FV,EAAeG,EAAYH,GAGtBN,EAAiByB,uBAAyBzB,EAAiByB,sBAAsBpB,KAAKW,GAClEP,EAAYc,GAGZjB,EAEjC,CACA,OAAOQ,CACX,CACO,IAAMY,EAAyB,0CAClC,aAAc,kCACJ,CACFtI,GAAIsI,EAA0BhX,GAC9BgJ,MAAOC,EAAAA,GAAa,sBAAuB,iCAC3C2F,MAAO,gCACPC,aAAc1P,EAAAA,EAAAA,UAEtB,CAkBC,OAlBA,2BACD,SAAIhN,EAAU+Q,GACV,IAAMnS,EAAQmS,EAAOC,WACrB,GAAKpS,EAAL,CAGA,IAAMkmB,EAAYlmB,EAAM8kB,aAClBhN,EAAY3F,EAAO8K,eACzB,GAAKnF,EAAL,CAGA,IAAMkL,EAAU,IAAImD,EAA2BrO,EAAWoO,EAAUrC,SACpE1R,EAAO8Q,eACP9Q,EAAOiU,gBAAgBvmB,KAAK8d,GAAI,CAACqF,IACjC7Q,EAAO8Q,eACPjjB,EAAMqmB,cAAc,CAChBpC,cAAc,GANlB,CALA,CAaJ,KAAC,EA1BiC,CAAS1F,EAAAA,IA4B/C0H,EAA0BhX,GAAK,oCACxB,IAAMqX,EAAuB,0CAChC,aAAc,kCACJ,CACF3I,GAAI2I,EAAwBrX,GAC5BgJ,MAAOC,EAAAA,GAAa,oBAAqB,+BACzC2F,MAAO,8BACPC,aAAc1P,EAAAA,EAAAA,UAEtB,CAkBC,OAlBA,2BACD,SAAIhN,EAAU+Q,GACV,IAAMnS,EAAQmS,EAAOC,WACrB,GAAKpS,EAAL,CAGA,IAAMkmB,EAAYlmB,EAAM8kB,aAClBhN,EAAY3F,EAAO8K,eACzB,GAAKnF,EAAL,CAGA,IAAMkL,EAAU,IAAIuD,EAAyBzO,EAAWoO,EAAUrC,SAClE1R,EAAO8Q,eACP9Q,EAAOiU,gBAAgBvmB,KAAK8d,GAAI,CAACqF,IACjC7Q,EAAO8Q,eACPjjB,EAAMqmB,cAAc,CAChBpC,cAAc,GANlB,CALA,CAaJ,KAAC,EA1B+B,CAAS1F,EAAAA,IA4B7C+H,EAAwBrX,GAAK,kCACtB,IAAMuX,EAA2B,0CACpC,WAAYvC,EAAcwC,GAAM,MAEK,OAFL,gBAC5B,cAAMA,IACDxC,aAAeA,EAAa,CACrC,CA6BC,OA7BA,2BACD,SAAI7iB,EAAU+Q,GAAQ,WACZuU,EAAoBtlB,EAASI,IAAImlB,EAAAA,IACjCC,EAAexlB,EAASI,IAAIqlB,EAAAA,GAC5B7mB,EAAQmS,EAAOC,WACrB,GAAKpS,EAAL,CAGA,IAAM8mB,EAAeF,EAAaG,mBAAmB/mB,EAAMykB,gBAAiBzkB,EAAM2V,IAAK3V,EAAMgnB,mBACvFC,EAAQ,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAG5mB,KAAI,SAAAkC,GAAC,MAAK,CAC7Cob,GAAIpb,EAAEsU,WACNoB,MAAO1V,EAAEsU,WAETlJ,YAAapL,IAAMukB,EAAajD,QAAU3L,EAAAA,GAAa,oBAAqB,4BAAyBxX,EACxG,IAEKwmB,EAAiB7Z,KAAKC,IAAItN,EAAM8kB,aAAajB,QAAU,EAAG,GAChEsD,YAAW,WACPT,EAAkBU,KAAKH,EAAO,CAAEI,YAAanP,EAAAA,GAAa,CAAElS,IAAK,iBAAkB4X,QAAS,CAAC,mCAAqC,oCAAqC0J,WAAYL,EAAMC,KAAmB3nB,MAAK,SAAA6nB,GACzMA,GACIpnB,IAAUA,EAAMunB,cAChBvnB,EAAMqmB,cAAc,CAChBxC,QAAS2D,SAASJ,EAAKnP,MAAO,IAC9BgM,aAAc,EAAKA,cAInC,GACJ,GAAG,GArBH,CAsBJ,KAAC,EAjCmC,CAAS1F,EAAAA,IAmCpCkJ,EAAe,0CACxB,aAAc,mCACJ,EAAO,CACT9J,GAAI8J,EAAgBxY,GACpBgJ,MAAOC,EAAAA,GAAa,kBAAmB,qBACvC2F,MAAO,oBACPC,kBAAcpd,GAEtB,CAAC,iBARuB,CAAS8lB,GAUrCiB,EAAgBxY,GAAK,gCACd,IAAMyY,EAAiB,0CAC1B,aAAc,mCACJ,EAAM,CACR/J,GAAI+J,EAAkBzY,GACtBgJ,MAAOC,EAAAA,GAAa,oBAAqB,uBACzC2F,MAAO,sBACPC,kBAAcpd,GAEtB,CAAC,iBARyB,CAAS8lB,GAUvCkB,EAAkBzY,GAAK,kCAChB,IAAM0Y,EAAiB,0CAC1B,aAAc,kCACJ,CACFhK,GAAIgK,EAAkB1Y,GACtBgJ,MAAOC,EAAAA,GAAa,oBAAqB,mCACzC2F,MAAO,kCACPC,kBAAcpd,GAEtB,CASC,OATA,2BACD,SAAIU,EAAU+Q,GACV,IAAMyU,EAAexlB,EAASI,IAAIqlB,EAAAA,GAC5B7mB,EAAQmS,EAAOC,WACrB,GAAKpS,EAAL,CAGA,IAAM8mB,EAAeF,EAAaG,mBAAmB/mB,EAAMykB,gBAAiBzkB,EAAM2V,IAAK3V,EAAMgnB,mBAC7FhnB,EAAM4nB,kBAAkBd,EAAa7C,aAAc6C,EAAajD,QAFhE,CAGJ,KAAC,EAjByB,CAAStF,EAAAA,IAmBvCoJ,EAAkB1Y,GAAK,kCAChB,IAAM4Y,EAAmB,0CAC5B,aAAc,kCACJ,CACFlK,GAAI,8BACJ1F,MAAOC,EAAAA,GAAa,uBAAwB,kBAC5C2F,MAAO,iBACPC,aAAc1P,EAAAA,EAAAA,UAEtB,CAaC,OAbA,2BACD,SAAIhN,EAAU+Q,GACV,IAAMkS,EAA+BjjB,EAASI,IAAIsmB,EAAAA,IAC5C9nB,EAAQmS,EAAOC,WACrB,GAAKpS,EAAL,CAGA,IAAM+nB,EAAQ3D,EAA0BpkB,EAAOqkB,EAA8B,EAAGrkB,EAAMsS,gBAClFyV,EAAM7mB,OAAS,IACfiR,EAAO8Q,eACP9Q,EAAO6V,aAAanoB,KAAK8d,GAAIoK,GAC7B5V,EAAO8Q,eALX,CAOJ,KAAC,EArB2B,CAAS1E,EAAAA,IAuB5B0J,EAA2B,0CACpC,aAAc,kCACJ,CACFtK,GAAI,sCACJ1F,MAAOC,EAAAA,GAAa,+BAAgC,2BACpD2F,MAAO,0BACPC,aAAc1P,EAAAA,EAAAA,UAEtB,CAkCC,OAlCA,2BACD,SAAIhN,EAAU+Q,GACV,IAAMkS,EAA+BjjB,EAASI,IAAIsmB,EAAAA,IAC5C9nB,EAAQmS,EAAOC,WACrB,GAAKpS,EAAL,CAGA,IAAMkoB,EAAa/V,EAAOgW,gBAC1B,GAAmB,OAAfD,EAAJ,CAGA,IACkC,EAD5BH,EAAQ,GAAG,UACOG,GAAU,IAAlC,IAAK,EAAL,qBAAoC,KAAzBpQ,EAAS,QACZjL,EAAkBiL,EAAUjL,gBAC5BO,EAAgB0K,EAAU1K,cAI9B,GAHIP,IAAoBO,GAAyC,IAAxB0K,EAAU7K,WAC/CG,IAEoB,IAApBP,GACA,GAAIA,IAAoBO,EACpB,cAIJP,IAEJ,IAAMub,EAAiBhE,EAA0BpkB,EAAOqkB,EAA8BxX,EAAiBO,GACvG2a,EAAM/iB,KAAI,MAAV+iB,GAAK,OAASK,GAClB,CAAC,+BACGL,EAAM7mB,OAAS,IACfiR,EAAO8Q,eACP9Q,EAAO6V,aAAanoB,KAAK8d,GAAIoK,GAC7B5V,EAAO8Q,eAtBX,CAJA,CA4BJ,KAAC,EA1CmC,CAAS1E,EAAAA,IA4CpC8J,EAAwB,WACjC,WAAYN,EAAOO,IAAkB,eACjCzoB,KAAK0oB,kBAAoBD,EACzBzoB,KAAK2oB,OAAS,GACd3oB,KAAK4oB,aAAe,KAAK,IACD,EADC,UACNV,GAAK,IAAxB,IAAK,EAAL,qBAA0B,KAAfW,EAAI,QACPA,EAAK3nB,OAA8B,kBAAd2nB,EAAKlH,MAC1B3hB,KAAK2oB,OAAOxjB,KAAK0jB,EAEzB,CAAC,+BACL,CAwBC,OAxBA,yCACD,SAAkB1oB,EAAO4hB,GAAS,IACA,EADA,UACX/hB,KAAK2oB,QAAM,IAA9B,IAAK,EAAL,qBAAgC,KAArBE,EAAI,QACX9G,EAAQ+G,iBAAiBxb,EAAAA,EAAAA,KAAWub,EAAK3nB,OAAQ2nB,EAAKlH,KAC1D,CAAC,+BACD,IAAIoH,GAAiB,EACjB1Y,MAAM2Y,QAAQhpB,KAAK2oB,SAAkC,IAAvB3oB,KAAK2oB,OAAOtnB,QAAgBrB,KAAK0oB,kBAAkBtG,YAC7EpiB,KAAK2oB,OAAO,GAAGznB,MAAMgM,cAAgBlN,KAAK0oB,kBAAkBtb,WAC5DpN,KAAK2oB,OAAO,GAAGznB,MAAM8L,kBAAoBhN,KAAK0oB,kBAAkBnb,eAChEwb,GAAiB,EACjB/oB,KAAK4oB,aAAe7G,EAAQkH,eAAejpB,KAAK0oB,mBAAmB,IAE9D1oB,KAAK2oB,OAAO,GAAGznB,MAAMkM,YAAcpN,KAAK0oB,kBAAkBxb,aAC/DlN,KAAK2oB,OAAO,GAAGznB,MAAMqM,gBAAkBvN,KAAK0oB,kBAAkB1b,kBAC9D+b,GAAiB,EACjB/oB,KAAK4oB,aAAe7G,EAAQkH,eAAejpB,KAAK0oB,mBAAmB,KAGtEK,IACD/oB,KAAK4oB,aAAe7G,EAAQkH,eAAejpB,KAAK0oB,mBAExD,GAAC,gCACD,SAAmBvoB,EAAO8hB,GACtB,OAAOA,EAAOiH,oBAAoBlpB,KAAK4oB,aAC3C,KAAC,EAlCgC,GAoCjCO,EAAiB,WACjB,WAAY7W,EAAQ8W,GAA+B,2BAC/CppB,KAAKsS,OAASA,EACdtS,KAAKopB,8BAAgCA,EACrCppB,KAAKqpB,cAAgB,IAAIre,EAAAA,GACzBhL,KAAKspB,YAAc,IAAIte,EAAAA,GACvBhL,KAAKqpB,cAAcne,IAAIoH,EAAOzD,0BAAyB,kBAAM,EAAK0a,QAAQ,KAC1EvpB,KAAKqpB,cAAcne,IAAIoH,EAAOiK,kBAAiB,kBAAM,EAAKgN,QAAQ,KAClEvpB,KAAKqpB,cAAcne,IAAIoH,EAAOkX,0BAAyB,kBAAM,EAAKD,QAAQ,IAC9E,CA2JC,OA3JA,8BACD,WAAS,WAELvpB,KAAKspB,YAAYzgB,QAEb7I,KAAKsS,OAAOjO,UAAU,GAAmC,GAAyCrE,KAAKsS,OAAOjO,UAAU,KAIvHrE,KAAKsS,OAAOH,YAGjBnS,KAAKspB,YAAYpe,IAAIlL,KAAKsS,OAAOmX,YAAW,YAAe,IAAZvoB,EAAK,EAALA,MAC3C,EAAKwoB,QAAQxoB,EACjB,IACJ,GAAC,qBACD,SAAQA,GACJ,IAAMmnB,EAAaroB,KAAKsS,OAAOgW,gBAC/B,KAAmB,OAAfD,GAAuBA,EAAWhnB,OAAS,GAA/C,CAGA,IAAMlB,EAAQH,KAAKsS,OAAOC,WAC1B,GAAKpS,GAGAA,EAAMwpB,aAAaC,kBAAkB1oB,EAAMyM,mBAAmB6E,YAAnE,CAeA,IAZA,IAAMqX,EAAa7pB,KAAKsS,OAAOjO,UAAU,GACzC,EAA8ClE,EAAM8kB,aAA5CjB,EAAO,EAAPA,QAASkB,EAAU,EAAVA,WAAYd,EAAY,EAAZA,aACvB0F,EAAY,GACZC,EAAkB,CACpB5E,YAAa,SAACC,GACV,OAAOE,EAAAA,EAAAA,YAAyBF,EAAaA,EAAY/jB,OAAS,EAAG2iB,EAASkB,EAAYd,EAC9F,EACAmB,cAAe,SAACH,GACZ,OAAOE,EAAAA,EAAAA,cAA2BF,EAAaA,EAAY/jB,OAAS,EAAG2iB,EAASkB,EAAYd,EAChG,GAEApX,EAAkB9L,EAAM8L,gBACrBA,GAAmB9L,EAAMqM,eACxBvN,KAAKgqB,iBAAiB7pB,EAAO6M,IAC7BA,IAKR,KAAIA,EAAkB9L,EAAMqM,eAA5B,CAGA,IAAI0c,EAAgB9pB,EAAM2kB,eAAe9X,GACzC,IAAK,KAAK+X,KAAKkF,EAAcpE,UAAU,EAAG3kB,EAAMgM,YAAc,IAAK,CAC/D,IAAMgd,GAAoBC,EAAAA,EAAAA,IAAqBN,EAAY1pB,EAAOA,EAAMykB,gBAAiB5X,EAAiB+c,EAAiB/pB,KAAKopB,+BAChI,GAA0B,OAAtBc,EAA4B,CAC5B,IAAMvE,EAAiBC,EAAAA,GAA6BqE,GAC9CG,EAAcC,EAAAA,EAAwBH,EAAmBlG,GAE/D,GAAIoG,IADgBC,EAAAA,EAAwB1E,EAAgB3B,GAC3B,CAC7B,IAAMsG,EAAYD,EAAAA,EAA2BD,EAAapG,EAASI,GACnE0F,EAAU3kB,KAAK,CACXjE,MAAO,IAAIoM,EAAAA,EAAMN,EAAiB,EAAGA,EAAiB2Y,EAAetkB,OAAS,GAC9EsgB,KAAM2I,IAEVL,EAAgBK,EAAYL,EAAcM,OAAO5E,EAAetkB,OACpE,KACK,CACD,IAAMmpB,GAAiBC,EAAAA,EAAAA,IAAkBtqB,EAAO6M,EAAiBhN,KAAKopB,+BACtE,GAAuB,IAAnBoB,GAA2C,IAAnBA,EAKxB,MAER,CACJ,CACJ,CAGA,IAFA,IAAME,EAAkB1d,EAEjBA,EAAkB9L,EAAMqM,gBACtB,KAAKwX,KAAK5kB,EAAM2kB,eAAe9X,EAAkB,KAClDA,IAKR,GAAIA,IAAoB9L,EAAMqM,cAAe,CACzC,IAAMod,EAAe,CACjBhB,aAAc,CACViB,cAAe,SAACpY,GACZ,OAAOrS,EAAMwpB,aAAaiB,cAAcpY,EAC5C,EACAoS,cAAe,WACX,OAAOzkB,EAAMykB,eACjB,EACA/D,wBAAyB,SAACrO,EAAYgM,GAClC,OAAOre,EAAM0gB,wBAAwBrO,EAAYgM,EACrD,GAEJsG,eAAgB,SAACtS,GACb,OAAIA,IAAekY,EACRT,EAGA9pB,EAAM2kB,eAAetS,EAEpC,GAEEqY,GAAqBV,EAAAA,EAAAA,IAAqBN,EAAYc,EAAcxqB,EAAMykB,gBAAiB5X,EAAkB,EAAG+c,EAAiB/pB,KAAKopB,+BAC5I,GAA2B,OAAvByB,EAA6B,CAC7B,IAAMC,EAA0BT,EAAAA,EAAwBQ,EAAoB7G,GACtE+G,EAA0BV,EAAAA,EAAwBzE,EAAAA,GAA6BzlB,EAAM2kB,eAAe9X,EAAkB,IAAKgX,GACjI,GAAI8G,IAA4BC,EAE5B,IADA,IAAMC,EAAiBF,EAA0BC,EACxC3oB,EAAI4K,EAAkB,EAAG5K,GAAKlB,EAAMqM,cAAenL,IAAK,CAC7D,IAAM6oB,EAAc9qB,EAAM2kB,eAAe1iB,GACnC8oB,EAAiBtF,EAAAA,GAA6BqF,GAE9CE,EADoBd,EAAAA,EAAwBa,EAAgBlH,GACzBgH,EACnCV,EAAYD,EAAAA,EAA2Bc,EAAcnH,EAASI,GAChEkG,IAAcY,GACdpB,EAAU3kB,KAAK,CACXjE,MAAO,IAAIoM,EAAAA,EAAMlL,EAAG,EAAGA,EAAG8oB,EAAe7pB,OAAS,GAClDsgB,KAAM2I,GAGlB,CAER,CACJ,CACA,GAAIR,EAAUzoB,OAAS,EAAG,CACtBrB,KAAKsS,OAAO8Q,eACZ,IAAMgI,EAAM,IAAI5C,EAAyBsB,EAAW9pB,KAAKsS,OAAO8K,gBAChEpd,KAAKsS,OAAO+Q,eAAe,oBAAqB+H,GAChDprB,KAAKsS,OAAO8Q,cAChB,CAtFA,CAtBA,CAPA,CAoHJ,GAAC,8BACD,SAAiBjjB,EAAOqS,GACpBrS,EAAMwpB,aAAa0B,kBAAkB7Y,GACrC,IAAM8Y,EAAsBnrB,EAAMorB,gCAAgC/Y,GAClE,GAA4B,IAAxB8Y,EACA,OAAO,EAEX,IAAME,EAASrrB,EAAMwpB,aAAaiB,cAAcpY,GAChD,GAAIgZ,EAAOC,WAAa,EAAG,CACvB,IAAMC,EAA+BF,EAAOG,uBAAuBL,GACnE,GAAII,GAAgC,GAAmE,IAA9DF,EAAOI,qBAAqBF,GACjE,OAAO,CAEf,CACA,OAAO,CACX,GAAC,qBACD,WACI1rB,KAAKqpB,cAAcxc,UACnB7M,KAAKspB,YAAYzc,SACrB,KAAC,EApKgB,GA2KrB,SAASgf,EAA6B1rB,EAAO4hB,EAASiC,EAAS8H,GAC3D,GAA6B,IAAzB3rB,EAAMsS,gBAAsD,IAA9BtS,EAAMwS,iBAAiB,GAAzD,CAKA,IADA,IAAIoZ,EAAS,GACJ3pB,EAAI,EAAGA,EAAI4hB,EAAS5hB,IACzB2pB,GAAU,IAGd,IADA,IAAMC,EAAe,IAAIC,OAAOF,EAAQ,MAC/BvZ,EAAa,EAAG0Z,EAAY/rB,EAAMsS,eAAgBD,GAAc0Z,EAAW1Z,IAAc,CAC9F,IAAI2Z,EAAwBhsB,EAAMorB,gCAAgC/Y,GAIlE,GAH8B,IAA1B2Z,IACAA,EAAwBhsB,EAAMwS,iBAAiBH,IAErB,IAA1B2Z,EAAJ,CAGA,IAAMC,EAA2B,IAAI9e,EAAAA,EAAMkF,EAAY,EAAGA,EAAY2Z,GAChEE,EAAsBlsB,EAAMmsB,gBAAgBF,GAC5CG,EAAkBT,EAClBO,EAAoBG,QAAQ,OAAQT,GACpCM,EAAoBG,QAAQR,EAAc,MAChDjK,EAAQ+G,iBAAiBsD,EAA0BG,EANnD,CAOJ,CApBA,CAqBJ,CA9BApD,EAAkB/Z,GAAK,mCACvB+Z,EAAoBnjB,EAAW,CAC3Ba,EAAQ,EAAGohB,EAAAA,KACZkB,GA4BI,IAAM7C,EAA0B,WACnC,WAAYrO,EAAW+L,IAAS,eAC5BhkB,KAAKiY,UAAYA,EACjBjY,KAAKgkB,QAAUA,EACfhkB,KAAKysB,YAAc,IACvB,CAOC,OAPA,yCACD,SAAkBtsB,EAAO4hB,GACrB/hB,KAAKysB,YAAc1K,EAAQkH,eAAejpB,KAAKiY,WAC/C4T,EAA6B1rB,EAAO4hB,EAAS/hB,KAAKgkB,SAAS,EAC/D,GAAC,gCACD,SAAmB7jB,EAAO8hB,GACtB,OAAOA,EAAOiH,oBAAoBlpB,KAAKysB,YAC3C,KAAC,EAZkC,GAc1B/F,EAAwB,WACjC,WAAYzO,EAAW+L,IAAS,eAC5BhkB,KAAKiY,UAAYA,EACjBjY,KAAKgkB,QAAUA,EACfhkB,KAAKysB,YAAc,IACvB,CAOC,OAPA,yCACD,SAAkBtsB,EAAO4hB,GACrB/hB,KAAKysB,YAAc1K,EAAQkH,eAAejpB,KAAKiY,WAC/C4T,EAA6B1rB,EAAO4hB,EAAS/hB,KAAKgkB,SAAS,EAC/D,GAAC,gCACD,SAAmB7jB,EAAO8hB,GACtB,OAAOA,EAAOiH,oBAAoBlpB,KAAKysB,YAC3C,KAAC,EAZgC,IAcrC1N,EAAAA,EAAAA,IAA2BoK,EAAkB/Z,GAAI+Z,IACjDnK,EAAAA,EAAAA,IAAqBoH,IACrBpH,EAAAA,EAAAA,IAAqByH,IACrBzH,EAAAA,EAAAA,IAAqB4I,IACrB5I,EAAAA,EAAAA,IAAqB6I,IACrB7I,EAAAA,EAAAA,IAAqB8I,IACrB9I,EAAAA,EAAAA,IAAqBgJ,IACrBhJ,EAAAA,EAAAA,IAAqBoJ,E,uXC9kBjB1pB,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAOaqtB,GAAe,QACxB,WAAYxrB,EAAOyrB,IAAW,eAC1B3sB,KAAKkB,MAAQA,EACblB,KAAK2sB,UAAYA,CACrB,IAESC,EAAa,WACtB,WAAYC,EAAMjkB,EAAQ/I,IAAU,eAChCG,KAAK6sB,KAAOA,EACZ7sB,KAAK4I,OAASA,EACd5I,KAAKH,SAAWA,EAChBG,KAAK8sB,aAAc,CACvB,CA0CC,OA1CA,4BACD,SAAKC,GACD,IAAMvtB,EAAS,IAAIotB,EAAc5sB,KAAK6sB,KAAME,EAAMnkB,OAAQ5I,KAAKH,UAG/D,OAFAL,EAAOstB,YAAc9sB,KAAK8sB,YAC1BttB,EAAOwtB,gBAAkBhtB,KAAKgtB,gBACvBxtB,CACX,GAAC,qBACD,SAAQa,GACJ,OAAO3B,EAAUsB,UAAM,OAAQ,GAAM,eAAE,iGACW,oBAAnCA,KAAKH,SAASotB,iBAA+B,qDAGpDjtB,KAAKgtB,gBAAiB,CAAF,eAGpB,OAHoB,SAGdhtB,KAAKgtB,gBAAe,WACtB3sB,EAAM6sB,wBAAyB,CAAF,yEAG1BltB,KAAKhB,QAAQqB,IAAM,OAM9B,OAJKL,KAAK8sB,cACN9sB,KAAKgtB,gBAAkBhtB,KAAKmtB,WAAW9sB,GAClC+sB,SAAQ,kBAAM,EAAKJ,qBAAkBnsB,CAAS,KACtD,UACKb,KAAKgtB,gBAAe,gDAElC,GAAC,wBACD,SAAW3sB,GACP,IAAIiF,EAAIL,EACR,OAAOvG,EAAUsB,UAAM,OAAQ,GAAM,eAAE,yFAEf,OAFe,kBAETjB,QAAQC,QAAQgB,KAAKH,SAASotB,iBAAiBjtB,KAAK6sB,KAAMxsB,IAAO,OAAjFgtB,EAAU,EAAH,KACbrtB,KAAK6sB,KAAKS,QAAuF,QAA5EhoB,EAAiB,OAAZ+nB,QAAgC,IAAZA,OAAqB,EAASA,EAAQC,eAA4B,IAAPhoB,EAAgBA,EAAKtF,KAAK6sB,KAAKS,QACxIttB,KAAK6sB,KAAKzU,MAAmF,QAA1EnT,EAAiB,OAAZooB,QAAgC,IAAZA,OAAqB,EAASA,EAAQjV,aAA0B,IAAPnT,EAAgBA,EAAKjF,KAAK6sB,KAAKzU,MACpIpY,KAAK8sB,aAAc,EAAK,iDAGxBlsB,EAAAA,EAAAA,IAA0B,EAAD,IACzBZ,KAAK8sB,aAAc,EAAM,wDAGrC,KAAC,EAhDqB,GAkDbS,EAAmB,WAC5B,WAAYC,EAAQC,EAAMttB,IAAO,eAC7BH,KAAK0tB,aAAe,IAAI1iB,EAAAA,GACxBhL,KAAKwtB,OAASA,EACdxtB,KAAKH,SAAW,IAAI8tB,IACpB,IACmC,EAD7BC,EAAQ,GAAG,UACcH,GAAI,IAAnC,IAAK,EAAL,qBAAqC,0BAAzBI,EAAI,KAAEhuB,EAAQ,KACtBG,KAAK0tB,aAAaxiB,IAAI2iB,GACtB7tB,KAAKH,SAASqL,IAAIrL,GAAU,IACC,EADD,UACTguB,EAAKC,OAAK,IAA7B,IAAK,EAAL,qBAA+B,KAApBjB,EAAI,QAELzsB,EAAWD,EAAM4tB,iBAAiBlB,EAAKzsB,UACzCusB,EAAY,SACVqB,EAAYT,EAAoBU,oBAAoB9tB,EAAOC,GAC7Dc,OAAK,EACL8sB,EAAUrgB,mBAAmBugB,SAAS9tB,IACtCc,EAAQoM,EAAAA,EAAAA,cAAoB0gB,EAAUrgB,mBAAoBvN,GAC1DusB,EAAY,UAGZzrB,EAAQoM,EAAAA,EAAAA,cAAoBlN,EAAU4tB,EAAUG,kBAChDxB,EAAY,UAEhBiB,EAAMzoB,KAAK,IAAIynB,EAAcC,EAAM,IAAIH,EAAgBxrB,EAAOyrB,GAAY9sB,GAC9E,CAAC,+BACL,CAAC,+BACDG,KAAK4tB,MAAQA,EAAM9lB,MAAK,SAAC6B,EAAGC,GAAC,OAAKgE,EAAAA,EAAAA,QAAiBjE,EAAEkjB,KAAKzsB,SAAUwJ,EAAEijB,KAAKzsB,SAAS,GACxF,CAoDC,OApDA,+BAsBD,WACIJ,KAAK0tB,aAAa7gB,SACtB,IAAC,qBAvBD,SAAc3M,EAAUC,EAAOqtB,EAAQntB,GACnC,OAAO3B,EAAUsB,UAAM,OAAQ,GAAM,eAAE,kGAanC,OAZMytB,EAAO,GACPntB,EAAWJ,EAASK,QAAQJ,GAAOiuB,UAAU5tB,KAAI,SAAAX,GAAQ,OAAI2tB,EAAOhtB,KAAI,SAACU,GAAK,OAAKxC,EAAU,OAAM,OAAQ,GAAM,eAAE,yFAElG,OAFkG,kBAE5FmB,EAASwuB,kBAAkBluB,EAAOe,EAAOb,GAAM,QACrD,QADTb,EAAS,EAAH,YACsB,IAAXA,OAAoB,EAASA,EAAOsuB,MAAMzsB,SAC7DosB,EAAKtoB,KAAK,CAAC3F,EAAQK,IACtB,iDAGDe,EAAAA,EAAAA,IAA0B,EAAD,IAAM,wDAErC,GAAC,IAAC,SACE7B,QAAQuvB,IAAIhuB,EAASiuB,QAAO,WAC9BluB,EAAM6sB,0BAA2B/sB,EAAMunB,aAAY,sBAC7C,IAAI8G,EAAAA,GAAmB,gCAE1B,IAAIjB,EAAoBC,EAAQC,EAAMttB,IAAM,0CAE3D,GAAC,iCAID,SAA2BA,EAAOC,GAC9B,IAAMquB,EAAOruB,EAASoS,WAChBkc,EAAOvuB,EAAMwuB,kBAAkBvuB,GACrC,GAAIsuB,EAEA,OAAO,IAAIphB,EAAAA,EAAMmhB,EAAMC,EAAKxhB,YAAauhB,EAAMC,EAAKthB,WAExDjN,EAAMwpB,aAAaiF,gBAAgBH,GACnC,IAAMjD,EAASrrB,EAAMwpB,aAAaiB,cAAc6D,GAC1CI,EAASzuB,EAASoe,OAAS,EAC3BsQ,EAAMtD,EAAOG,uBAAuBkD,GACtC7lB,EAAQwiB,EAAOuD,eAAeD,GAC9BE,EAAMxD,EAAOyD,aAAaH,GAc9B,OAbIE,EAAMhmB,IAAU,IAEZA,IAAU6lB,GAAUC,EAAM,GAE1B9lB,EAAQwiB,EAAOuD,eAAeD,EAAM,GACpCE,EAAMxD,EAAOyD,aAAaH,EAAM,IAE3BE,IAAQH,GAAUC,EAAMtD,EAAOC,WAAa,IAEjDziB,EAAQwiB,EAAOuD,eAAeD,EAAM,GACpCE,EAAMxD,EAAOyD,aAAaH,EAAM,KAGjC,IAAIxhB,EAAAA,EAAMmhB,EAAMzlB,EAAQ,EAAGylB,EAAMO,EAAM,EAClD,KAAC,EA/E2B,G,sGCvE5BtwB,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAeO,SAAS6vB,EAAoB3tB,EAAU+Q,EAAQ1J,EAAQumB,GAC1D,IAAI7pB,EACJ,OAAO5G,EAAUsB,UAAM,OAAQ,GAAM,eAAE,wHAMnC,OALMovB,EAAkB7tB,EAASI,IAAI0tB,EAAAA,GAC/BC,EAAqB/tB,EAASI,IAAI4tB,EAAAA,GAClCC,EAAiBjuB,EAASI,IAAI8tB,EAAAA,IAC9BC,EAAenuB,EAASI,IAAIqM,EAAAA,IAC5B2hB,EAAsBpuB,EAASI,IAAIiuB,EAAAA,IAAqB,SACxDT,EAAK3tB,KAAKxC,QAAQ8C,EAAAA,EAAAA,MAAuB,UAC1CqtB,EAAKA,KAAKU,SAAU,CAAF,gDAGjBA,EAAWV,EAAKA,KAAKU,SACrBC,EAAc,GAGd5lB,EAAS,IAAIyjB,IAAIoC,EAAAA,GAAAA,aAA0BC,EAAAA,GAAAA,eAC5CxvB,KAAI,SAAAgB,GAAI,OAAIyuB,EAAAA,EAAAA,IAAYzuB,GAAQA,EAAK2hB,QAAQrF,GAAK,EAAE,KAAE,UACpCoS,EAAAA,GAAAA,oBAA2C,sHAAvDC,EAAQ,mBACSC,EAAAA,wBAA0BlmB,EAAO+W,IAAIkP,EAASrS,KAClEgS,EAAY3qB,KAAK,IAAIkrB,EAAAA,GAAOF,EAASrS,GAAIqS,EAAS/X,WAAOvX,GAAW,GAAM,kBAAMnC,EAAU,OAAM,OAAQ,GAAM,eAAE,yFAChG,OADgG,SAC1F0wB,EAAgBkB,qBAAqBT,EAAS/Z,KAAI,OAEhE,OAFEya,EAAM,EAAH,uBAECb,EAAac,eAAeL,EAAS5X,IAAIkY,KAAKN,GAAW7d,EAAQ,IAAIoe,EAAAA,uBAAuBH,EAAII,OAAOC,gBAAiBtjB,EAAAA,EAAAA,iBAAuBuiB,EAAS3uB,SAAQ,OAGxJ,OAHwJ,SAGtKqvB,EAAI1jB,UAAU,sEAEpB,KACL,gRAEDsiB,EAAKA,KAAKhM,UACFA,EAAYgM,EAAKA,KAAjBhM,QACR2M,EAAY3qB,KAAK,IAAI0rB,EAAAA,IACrBf,EAAY3qB,KAAK,IAAIkrB,EAAAA,GAAOlN,EAAQrF,GAAIqF,EAAQ2N,WAAOjwB,GAAW,GAAM,kBAAMnC,EAAU,OAAM,OAAQ,GAAM,eAAE,yFAGtG,OAHsG,kBAGhG8wB,EAAenM,eAAc,MAA7BmM,EAAc,CAAgBrM,EAAQrF,IAAE,eAAmC,QAA5B7Y,EAAKke,EAAQ7c,iBAA8B,IAAPrB,EAAgBA,EAAK,MAAI,sDAGlH0qB,EAAoBoB,OAAO,CACvB7a,SAAU8a,EAAAA,GAAAA,MACV1a,OAAQ6Y,EAAK3tB,KAAK3B,SAASoxB,YAC3B1a,QAAS,EAAF,KACR,uDAET,MAGA2a,EAAe5e,EAAOjO,UAAU,KACtCirB,EAAmB6B,gBAAgB,CAC/BC,iBAAkBF,GAA8C,QAA9B5rB,EAAKgN,EAAO9J,oBAAiC,IAAPlD,EAAgBA,OAAiBzE,EACzGwwB,UAAW,WACP,IAAMC,EAAMrqB,EAAI0S,uBAAuB/Q,GACvC,MAAO,CAAEiR,EAAGyX,EAAIhd,KAAMwF,EAAGwX,EAAIld,IAAMkd,EAAI1hB,OAAS,EACpD,EACA2hB,WAAY,kBAAMzB,CAAW,EAC7B0B,OAAQ,WACJlf,EAAOvI,OACX,EACA0nB,qBAAqB,IACtB,gEAEX,CACO,SAASC,EAA2BnwB,EAAUiC,EAAO8O,EAAQud,GAChE,OAAOnxB,EAAUsB,UAAM,OAAQ,GAAM,eAAE,kGAEvB,OADNovB,EAAkB7tB,EAASI,IAAI0tB,EAAAA,GAAkB,SACrCD,EAAgBkB,qBAAqBT,EAAS/Z,KAAI,OACpE,OADMya,EAAM,EAAH,cACHje,EAAOqf,qBAAoB,SAACpwB,GAAQ,OAAK7C,EAAU,OAAM,OAAQ,GAAM,eAAE,iGAK2E,OAJhJkzB,EAAapuB,EAAMquB,sBACnBC,EAAoBvwB,EAASI,IAAI0P,EAAAA,IACjC0gB,EAAWC,EAAAA,GAAAA,aAAAA,SAAkCF,GAC7CG,GAAWL,GAActf,EAAOjO,UAAU,MAAqD0tB,EAC/FG,EAAS,IAAIC,EAAAA,iBAAiB,CAAEP,WAAAA,EAAYQ,WAAYH,EAASI,aAAa,GAAQ,CAAErU,MAAO,GAAI5F,MAAO,GAAI0F,GAAI,GAAIG,kBAAcpd,IAAY,kBAC/IqxB,EAAO3Z,IAAIhX,EAAU+Q,EAAQ,CAAEnS,MAAOowB,EAAII,OAAOC,gBAAiBxwB,SAAUkN,EAAAA,EAAAA,iBAAuBuiB,EAAS3uB,UAAS,0CAC9H,IAAC,OACHqvB,EAAI1jB,UAAU,0CAEtB,C,mCCrGI7G,EAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HxD,EAAvHyD,EAAIC,UAAUjF,OAAQkF,EAAIF,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOI,OAAOC,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,kBAAZM,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIhE,EAAI6D,EAAW5E,OAAS,EAAGe,GAAK,EAAGA,KAASQ,EAAIqD,EAAW7D,MAAImE,GAAKF,EAAI,EAAIzD,EAAE2D,GAAKF,EAAI,EAAIzD,EAAEsD,EAAQC,EAAKI,GAAK3D,EAAEsD,EAAQC,KAASI,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOI,eAAeV,EAAQC,EAAKI,GAAIA,CAChE,EACIM,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUb,EAAQC,GAAOY,EAAUb,EAAQC,EAAKW,EAAa,CACxE,EACIpI,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EA8BMizB,GAAe,WACjB,cAAc,eACVtyB,KAAKuyB,SAAW,IAAIC,EAAAA,GAAS,GACjC,CAWC,OAXA,2BACD,SAAIryB,GACA,IAAMgG,EAAMmsB,EAAgBG,KAAKtyB,GACjC,OAAOH,KAAKuyB,SAAS5wB,IAAIwE,EAC7B,GAAC,iBACD,SAAIhG,EAAOhB,GACP,IAAMgH,EAAMmsB,EAAgBG,KAAKtyB,GACjCH,KAAKuyB,SAASjmB,IAAInG,EAAKhH,EAC3B,IAAC,mBACD,SAAYgB,GACR,MAAO,GAAP,OAAUA,EAAM2V,IAAIkB,WAAU,YAAI7W,EAAMuyB,eAC5C,KAAC,EAdgB,GAgBfC,IAAmBC,EAAAA,EAAAA,IAAgB,qBACzCC,EAAAA,EAAAA,GAAkBF,GAAkBL,IAAiB,GAE9C,IAAMQ,GAA0B,WACnC,WAAYtxB,EAAMf,IAAO,eACrBT,KAAKwB,KAAOA,EACZxB,KAAKS,MAAQA,CACjB,CASC,OATA,0BACD,WACI,IAAM2X,EAAQpY,KAAKwB,KAAKqrB,KAAKzU,MAC7B,MAAqB,kBAAVA,EACA,CAAEA,MAAAA,GAGFA,EAAMpY,KAAKS,MAE1B,KAAC,EAbkC,GAejCsyB,IAAmB,QACrB,WAAY5D,EAAM6D,IAAoB,eAClChzB,KAAKmvB,KAAOA,EACZnvB,KAAKgzB,mBAAqBA,CAC9B,IAGAC,GAAoB,WACpB,WAAY/vB,EAASyS,EAA0Bud,EAAkBC,EAAkBC,EAAiBC,EAAsBC,GAAe,2BACrItzB,KAAKkD,QAAUA,EACflD,KAAK2V,yBAA2BA,EAChC3V,KAAKmzB,iBAAmBA,EACxBnzB,KAAKozB,gBAAkBA,EACvBpzB,KAAKqzB,qBAAuBA,EAC5BrzB,KAAKszB,cAAgBA,EACrBtzB,KAAK0tB,aAAe,IAAI1iB,EAAAA,GACxBhL,KAAKuzB,oBAAsB,IAAIvoB,EAAAA,GAC/BhL,KAAKwzB,qBAAuB,IAAIC,IAChCzzB,KAAK0zB,aAAe,IAAIC,EAAAA,GAAgB3zB,KAAKkD,SAC7ClD,KAAK4zB,kBAAoB,EACzB5zB,KAAK6zB,cAAgBX,EAAiBY,IAAIne,EAAyBoe,mBAAoB,YAAa,CAAEtmB,IAAK,KAC3GzN,KAAK0tB,aAAaxiB,IAAIyK,EAAyBoe,mBAAmBC,aAAY,kBAAM,EAAKC,SAAS,KAClGj0B,KAAK0tB,aAAaxiB,IAAIhI,EAAQqZ,kBAAiB,kBAAM,EAAK0X,SAAS,KACnEj0B,KAAK0tB,aAAaxiB,IAAIhI,EAAQsmB,0BAAyB,kBAAM,EAAKyK,SAAS,KAC3Ej0B,KAAK0tB,aAAaxiB,IAAIhI,EAAQ2L,0BAAyB,SAAAvP,GAC/CA,EAAEwP,WAAW,MACb,EAAKmlB,SAEb,KACAj0B,KAAKi0B,SACT,CAIC,OAJA,+BAKD,WACIj0B,KAAKuzB,oBAAoB1mB,UACzB7M,KAAKk0B,wBACLl0B,KAAK0tB,aAAa7gB,SACtB,GAAC,qBACD,WAAU,WACN7M,KAAKuzB,oBAAoB1qB,QACzB7I,KAAKk0B,wBACL,IAAM3nB,EAAUvM,KAAKkD,QAAQmB,UAAU,KACvC,GAAwB,QAApBkI,EAAQmP,QAAZ,CAGA,IAAMvb,EAAQH,KAAKkD,QAAQqP,WAC3B,GAAKpS,GAAUH,KAAK2V,yBAAyBoe,mBAAmB9S,IAAI9gB,GAApE,CAIA,IAUIg0B,EAVEC,EAASp0B,KAAKmzB,iBAAiBxxB,IAAIxB,GACrCi0B,GACAp0B,KAAKq0B,uBAAuB,CAACl0B,EAAMm0B,qBAAsBF,GAE7Dp0B,KAAKuzB,oBAAoBroB,KAAIuB,EAAAA,EAAAA,KAAa,WAEjCtM,EAAMunB,cACP,EAAK6M,0BAA0Bp0B,EAEvC,KAEA,IA2DQq0B,EACAC,EA5DFC,EAAmB,IAAI/G,IACvBgH,EAAY,IAAIjxB,EAAAA,IAAiB,kBAAMhF,GAAU,OAAM,OAAQ,GAAM,eAAE,qGAOlD,OANjBk2B,EAAKC,KAAKC,MACR,OAARX,QAAwB,IAARA,GAA0BA,EAAItnB,SAAQ,GACtDsnB,EAAM,IAAIY,EAAAA,EACJC,EAAW70B,EAAM80B,eAAc,kBAAc,OAARd,QAAwB,IAARA,OAAiB,EAASA,EAAI/vB,QAAQ,IAAC,SAExF8wB,EAAUf,EAAI9zB,MAAK,SACAktB,EAAoB4H,OAAOn1B,KAAK2V,yBAAyBoe,mBAAoB5zB,EAAOH,KAAKo1B,kBAAmBF,GAAQ,OACzE,GAD9DG,EAAa,EAAH,KAChBV,EAAUrwB,MAAQtE,KAAK6zB,cAActK,OAAOppB,EAAO00B,KAAKC,MAAQF,IAC5DM,EAAQhI,wBAAyB,CAAF,gBACV,OAArBmI,EAAWxoB,UAAU,2BAGzB,UACuBwoB,EAAWx1B,UAAQ,IAA1C,IAAK,EAAL,qBACkD,oBADvCA,EAAQ,SACKy1B,uBAAyCZ,EAAiBzT,IAAIphB,KAC9E60B,EAAiBxpB,IAAIrL,GACrBG,KAAKuzB,oBAAoBroB,IAAIrL,EAASy1B,uBAAsB,WACnDX,EAAUY,eACXZ,EAAU9vB,UAElB,KAEP,+BACD7E,KAAKuzB,oBAAoBroB,IAAImqB,GAC7Br1B,KAAKq0B,uBAAuBgB,EAAW7H,OAAQ6H,EAAWzH,OAC1D5tB,KAAKu0B,0BAA0Bp0B,GAAO,mDAGtCqF,EAAAA,EAAAA,IAAkB,EAAD,IAAM,QAIJ,OAJI,UAGvB2uB,EAAItnB,UACJmoB,EAASnoB,UAAU,4EAEzB,GAAE7M,KAAK6zB,cAAclyB,IAAIxB,IAiB3B,GAhBAH,KAAKuzB,oBAAoBroB,IAAIypB,GAC7B30B,KAAKuzB,oBAAoBroB,KAAIuB,EAAAA,EAAAA,KAAa,kBAAc,OAAR0nB,QAAwB,IAARA,OAAiB,EAASA,EAAItnB,SAAQ,EAAK,KAC3G8nB,EAAU9vB,SAAS,GACnB7E,KAAKuzB,oBAAoBroB,IAAIlL,KAAKkD,QAAQuZ,mBAAkB,SAACnd,IAIrDA,EAAEqd,kBAAqBgY,EAAUY,eACjCZ,EAAU9vB,UAElB,KACA7E,KAAKuzB,oBAAoBroB,IAAIlL,KAAKkD,QAAQsyB,yBAAwB,SAACl2B,GAE/D,IAAMgF,EAAQkJ,KAAKE,IAAIinB,EAAUrwB,MAAO,MACxCqwB,EAAU9vB,SAASP,EACvB,KACwB,OAApBiI,EAAQmP,QAER1b,KAAK4zB,kBAAoB,MAMD,oBAApBrnB,EAAQmP,SACR8Y,EAAc,EACdC,EAAU,IAGVD,EAAc,EACdC,EAAU,GAEdz0B,KAAK4zB,kBAAoBY,EACzBx0B,KAAKuzB,oBAAoBroB,IAAIuqB,EAAAA,mBAAAA,cAAiCjyB,OAAM,SAAAlE,GAChE,GAAK,EAAK4D,QAAQiP,WAAlB,CAGA,IAAMujB,EAAgBp2B,EAAEq2B,QAAUr2B,EAAEs2B,QAAUnB,EAAUD,EACxD,GAAIkB,IAAkB,EAAK9B,kBAAmB,CAC1C,EAAKA,kBAAoB8B,EACzB,IAAMv1B,EAAQ,EAAK+C,QAAQqP,WACrBsjB,EAAS,EAAKC,iCAAiC31B,GACrD,EAAKk0B,uBAAuB,CAACl0B,EAAMm0B,qBAAsBuB,GACzDlB,EAAU9vB,SAAS,EACvB,CARA,CASJ,KAGJ7E,KAAKuzB,oBAAoBroB,IAAIlL,KAAK+1B,yBAAwB,kBAAMpB,EAAU9vB,SAAS,EAAE,KACrF7E,KAAKuzB,oBAAoBroB,IAAIlL,KAAKg2B,uBAClCh2B,KAAKuzB,oBAAoBroB,IAAIlL,KAAKi2B,sBApGlC,CAJA,CAyGJ,GAAC,iCACD,WAAsB,WACZC,EAAQ,IAAIlrB,EAAAA,GACZmrB,EAAUD,EAAMhrB,IAAI,IAAIkrB,EAAAA,GAAiBp2B,KAAKkD,UAE9CmzB,EAAe,IAAIrrB,EAAAA,GA0CzB,OAzCAkrB,EAAMhrB,IAAImrB,GACVH,EAAMhrB,IAAIirB,EAAQG,8BAA6B,SAAAh3B,GAC3C,IAAO2J,GAAP,OAAqB3J,EAAC,GAAL,GACXi3B,EAAY,EAAKC,uBAAuBvtB,GACxC9I,EAAQ,EAAK+C,QAAQqP,WAC3B,GAAKgkB,GAAcp2B,EAAnB,CAKA,IAAMg0B,EAAM,IAAIY,EAAAA,EAChBsB,EAAanrB,KAAIuB,EAAAA,EAAAA,KAAa,kBAAM0nB,EAAItnB,SAAQ,EAAK,KACrD0pB,EAAU/0B,KAAKxC,QAAQm1B,EAAI9zB,OAE3B,EAAKo2B,qBAAuBF,EAAUpH,KAAKhM,SAAWoT,EAAUpH,KAAKU,SAC/D,IAAIkD,GAAoBwD,EAAWttB,EAAW+pB,yBAC9CnyB,EACN,IAAM2R,EAAa+jB,EAAU/0B,KAAKqrB,KAAKzsB,SAASoS,WAC1CtR,EAAQ,IAAIoM,EAAAA,EAAMkF,EAAY,EAAGA,EAAYrS,EAAMwS,iBAAiBH,IACpEkkB,EAAY,EAAKC,wBAAwBz1B,GAC/C,EAAKmzB,uBAAuB,CAACnzB,GAAQw1B,GACrCL,EAAanrB,KAAIuB,EAAAA,EAAAA,KAAa,WAC1B,EAAKgqB,0BAAuB51B,EAC5B,EAAKwzB,uBAAuB,CAACnzB,GAAQw1B,EACzC,IAhBA,MAFIL,EAAaxtB,OAmBrB,KACAqtB,EAAMhrB,IAAIirB,EAAQS,UAAS,kBAAMP,EAAaxtB,OAAO,KACrDqtB,EAAMhrB,IAAIirB,EAAQU,WAAU,SAACv3B,GAAC,OAAKZ,GAAU,OAAM,OAAQ,GAAM,eAAE,2FACnB,KAAtC0Z,EAAQpY,KAAKw2B,uBAAuBl3B,IAC/B,CAAF,gBACkB,KAAjB6vB,EAAO/W,EAAM+W,MACVU,SAAU,CAAF,eAEb7vB,KAAKszB,cAAc9C,eAAekB,EAA4BpyB,EAAGU,KAAKkD,QAASisB,EAAKU,UAAU,2BAEzFiH,EAAAA,GAAAA,GAAqB3H,EAAKhM,SAAU,CAAF,gBAEvC,OAFuC,UAEjCnjB,KAAK+2B,eAAe5H,EAAKhM,QAAS/K,EAAM5W,MAAK,gDAG7D,KACK00B,CACX,GAAC,qCACD,SAAwBh1B,GACpB,IACqD,EAD/Cw1B,EAAY,IAAI/I,IAAM,UACT3tB,KAAKwzB,qBAAqBwD,UAAQ,IAArD,IAAK,EAAL,qBAAuD,KAA5CvJ,EAAI,QACPvsB,EAAM+1B,cAAcxJ,EAAKjsB,KAAKoH,OAAO1H,QACrCw1B,EAAUxrB,IAAIuiB,EAAKjsB,KAE3B,CAAC,+BACD,OAAO6O,MAAM6mB,KAAKR,EACtB,GAAC,qCACD,SAAwBS,GAAkB,WACtC,OAAOn3B,KAAKkD,QAAQ6Y,WAAU,SAACzc,GAAC,OAAKZ,GAAU,OAAM,OAAQ,GAAM,eAAE,8FAC1C,IAAnBY,EAAEkE,MAAMgG,OAAY,iDAGmB,GAArC2lB,EAAOnvB,KAAKw2B,uBAAuBl3B,GAC9B,CAAF,gDAIT,OADAA,EAAEkE,MAAM4T,iBAAiB,SACnB+X,EAAK3tB,KAAKxC,QAAQ8C,EAAAA,EAAAA,MAAuB,QAC3C2V,EAAAA,EAAAA,IAAgB0X,EAAK3tB,KAAKqrB,KAAK/C,aACzB5B,EAAQiH,EAAK3tB,KAAKqrB,KAAK/C,UAAUtpB,KAAI,SAAAqoB,GAAI,OAAI9C,EAAAA,EAAAA,QAAsBzY,EAAAA,EAAAA,KAAWub,EAAK3nB,OAAQ2nB,EAAKlH,KAAK,IAC3G3hB,KAAKkD,QAAQilB,aAAa,oBAAqBD,GAC/CiP,KACH,+CACH,GACN,GAAC,iCACD,WAAsB,WAClB,OAAOn3B,KAAKkD,QAAQk0B,eAAc,SAAC93B,GAAC,OAAKZ,GAAU,OAAM,OAAQ,GAAM,eAAE,4FAC/DY,EAAEkE,MAAM0C,kBAAkBmxB,YAAW,iDAGA,KAArClI,EAAOnvB,KAAKw2B,uBAAuBl3B,IAC/B,CAAF,eACJ,OADI,SACEU,KAAKszB,cAAc9C,eAAetB,EAAqBlvB,KAAKkD,QAAS5D,EAAEkE,MAAM0C,OAAQipB,GAAK,+CAEtG,GACN,GAAC,oCACD,SAAuB7vB,GACnB,IAAIgG,EACJ,GAAsB,IAAlBhG,EAAE4G,OAAOkD,KAAb,CAGA,IAAMmD,EAAkD,QAAvCjH,EAAKhG,EAAE4G,OAAOsD,OAAO8tB,oBAAiC,IAAPhyB,OAAgB,EAASA,EAAGiH,QAC5F,OAAIA,aAAmBgrB,EAAAA,KAAmD,OAAZhrB,QAAgC,IAAZA,OAAqB,EAASA,EAAQirB,wBAAyB1E,GACtIvmB,EAAQirB,kBADnB,CAFA,CAMJ,GAAC,4BACD,SAAerU,EAAS3hB,GACpB,IAAI8D,EACJ,OAAO5G,GAAUsB,UAAM,OAAQ,GAAM,eAAE,yFAE/B,OAF+B,mBAEzB,EAAAA,KAAKozB,iBAAgB/P,eAAc,SAACF,EAAQrF,IAAE,eAAmC,QAA5BxY,EAAK6d,EAAQ7c,iBAA8B,IAAPhB,EAAgBA,EAAK,MAAI,sDAGxHtF,KAAKqzB,qBAAqBtC,OAAO,CAC7B7a,SAAU8a,EAAAA,GAAAA,MACV1a,OAAQ9U,EAAK3B,SAASoxB,YACtB1a,QAAS,EAAF,KACR,uDAGf,GAAC,uCACD,SAA0BpW,GACtB,IAAM2tB,EAAQ9tB,KAAK81B,iCAAiC31B,GACpDH,KAAKmzB,iBAAiB7mB,IAAInM,EAAO2tB,EACrC,GAEA,8CACA,SAAiC3tB,GAC7B,IACiD,EAD3CytB,EAAQ,IAAI6F,IAAM,UACAzzB,KAAKwzB,sBAAoB,IAAjD,IAAK,EAAL,qBAAmD,0BAAvC1V,EAAE,KAAE2Z,EAAG,KACf,IAAI7J,EAAM3M,IAAIwW,EAAIj2B,MAAlB,CAKA,IAAMN,EAAQf,EAAMu3B,mBAAmB5Z,GACvC,GAAI5c,EAAO,CAEP,IAAM0H,EAAS,IAAI8jB,EAAgBxrB,EAAOu2B,EAAIj2B,KAAKoH,OAAO+jB,WACpDgL,EAAOF,EAAIj2B,KAAKo2B,KAAK,CAAEhvB,OAAAA,IAC7BglB,EAAMthB,IAAImrB,EAAIj2B,KAAMm2B,EACxB,CAPA,CAQJ,CAAC,+BACD,OAAOtnB,MAAM6mB,KAAKtJ,EAAMoJ,SAC5B,GAAC,6BACD,WACI,IAIsE,EAHhE72B,EAAQH,KAAKkD,QAAQqP,WACrBslB,EAAgB73B,KAAKkD,QAAQ40B,yCAC7Bt4B,EAAS,GAAG,UACEq4B,EAAc/vB,KAAKwF,EAAAA,EAAAA,2BAA+B,IAAtE,IAAK,EAAL,qBAAwE,KAA7DpM,EAAK,QACN62B,EAAgB53B,EAAM63B,cAAc,IAAI1qB,EAAAA,EAAMpM,EAAM8L,gBALhD,GAKyE9L,EAAMgM,YAAahM,EAAMqM,cALlG,GAKyHrM,EAAMkM,YACnH,IAAlB5N,EAAO6B,QAAiBiM,EAAAA,EAAAA,0BAAgC9N,EAAOA,EAAO6B,OAAS,GAAI02B,GAInFv4B,EAAOA,EAAO6B,OAAS,GAAKiM,EAAAA,EAAAA,UAAgB9N,EAAOA,EAAO6B,OAAS,GAAI02B,GAHvEv4B,EAAO2F,KAAK4yB,EAKpB,CAAC,+BACD,OAAOv4B,CACX,GAAC,oCACD,SAAuBguB,EAAQI,GAAO,IAC9BtoB,EAAIL,EAD0B,OAG5BgzB,EAAqB,GACrBC,EAAkB,SAAC12B,EAAM+uB,EAAK4H,EAASC,EAAaZ,GACtD,IAAM5Q,EAAO,CACTuR,QAAAA,EACAE,qCAAqC,EACrCC,gBAAiB/H,EAAIxiB,UACrBqqB,YAAAA,EACAZ,aAAAA,GAEJS,EAAmB9yB,KAAK,CACpB3D,KAAAA,EACA+2B,aAAchI,EACdiI,WAAY,CACRt3B,MAAOM,EAAKoH,OAAO1H,MACnBqL,SAAS,QAELuB,YAAa,YACbgF,gBAAiBtR,EAAKoH,OAAO1H,MAAMkhB,UACnCqW,uBAAwBj3B,EAAKoH,OAAO1H,MAAMkhB,UAC1CsW,WAAY,GACXl3B,EAAKoH,OAAO+jB,UAAuC,IAA3B,EAAKiH,kBAAkDhN,OAAO/lB,KAIvG,EACM83B,EAAwB,SAACn3B,EAAMo3B,GACjC,IAAMC,EAAa,EAAKnF,aAAaoF,mBAAmB,CACpD1oB,MAAO,GAAF,OAAMN,EAAW,EAAK,EAAC,MAC5BuJ,QAAS,iBAEb6e,EAAgB12B,EAAMq3B,EAAY,SAAUD,EAASG,EAAAA,GAAAA,MAAgCA,EAAAA,GAAAA,KACzF,EAEA,EAAqD/4B,KAAKg5B,iBAAlDlpB,EAAQ,EAARA,SAAUmpB,EAAU,EAAVA,WAAYC,EAAO,EAAPA,QAASC,EAAS,EAATA,UACjCC,EAAgB,oCACtBp5B,KAAKkD,QAAQm2B,sBAAsBppB,MAAMqpB,YAAYF,EAAeH,GAAY,IACxD,EADwD,UAC7DrL,GAAK,IAAxB,IAAK,EAAL,qBAA0B,KAAfpsB,EAAI,QAEPA,EAAKqrB,KAAKrV,aACVmhB,EAAsBn3B,GAAM,GAMhC,IAHA,IAAM+3B,EAAmC,kBAApB/3B,EAAKqrB,KAAKzU,MACzB,CAAC,CAAEA,MAAO5W,EAAKqrB,KAAKzU,QACpB5W,EAAKqrB,KAAKzU,MACPhW,EAAI,EAAGA,EAAIm3B,EAAMl4B,OAAQe,IAAK,CACnC,IAAM+sB,EAAOoK,EAAMn3B,GACbo3B,EAAgB,IAANp3B,EACVw2B,EAASx2B,IAAMm3B,EAAMl4B,OAAS,EAC9Bo4B,EAAgB,CAClB3pB,SAAU,GAAF,OAAKA,EAAQ,MACrBmpB,WAAY,OAAF,OAASG,EAAa,cAAMM,EAAAA,GAAAA,YACtCC,cAAeR,EAAY,WAAa,WAExC1hB,EAAAA,EAAAA,IAAgBjW,EAAKqrB,KAAK/C,aAC1B2P,EAAc3hB,OAAS,WAE3B9X,KAAK45B,cAAcH,EAAej4B,EAAKqrB,OAClCsC,EAAKhM,SAAWgM,EAAKU,YAAmD,QAApCvqB,EAAKtF,KAAKy2B,4BAAyC,IAAPnxB,OAAgB,EAASA,EAAG6pB,KAAK3tB,QAAUA,GAAQxB,KAAKy2B,qBAAqBtH,KAAK1uB,QAAU2B,IAE7Kq3B,EAAcI,eAAiB,YAC3B75B,KAAKy2B,qBAAqBzD,qBAC1ByG,EAAcK,OAAQC,EAAAA,EAAAA,IAAiBC,EAAAA,KACvCP,EAAc3hB,OAAS,YAG3BohB,IACIM,GAAWZ,GAEXa,EAAcP,QAAU,OAAH,OAAsC,EAA5B1rB,KAAKE,IAAI,EAAGoC,EAAW,GAAM,MAC5D2pB,EAAcQ,aAAe,GAAH,OAAOnqB,EAAW,EAAK,EAAC,OAE7C0pB,GAELC,EAAcP,QAAU,aAAH,OAA4C,EAA5B1rB,KAAKE,IAAI,EAAGoC,EAAW,GAAM,MAClE2pB,EAAcQ,aAAe,GAAH,OAAOnqB,EAAW,EAAK,EAAC,kBAAWA,EAAW,EAAK,EAAC,OAEzE8oB,GAELa,EAAcP,QAAU,OAAH,OAAsC,EAA5B1rB,KAAKE,IAAI,EAAGoC,EAAW,GAAM,YAC5D2pB,EAAcQ,aAAe,KAAH,OAASnqB,EAAW,EAAK,EAAC,cAAOA,EAAW,EAAK,EAAC,SAG5E2pB,EAAcP,QAAU,eAGhChB,EAAgB12B,EAAMxB,KAAK0zB,aAAaoF,mBAAmBW,GAAgBS,GAAS/K,EAAK/W,OAAQwgB,IAAWp3B,EAAKqrB,KAAKsN,aAAepB,EAAAA,GAAAA,MAAgCA,EAAAA,GAAAA,KAA8B,IAAIjG,GAA2BtxB,EAAMY,GAC5O,CAKA,GAHIZ,EAAKqrB,KAAKsN,cACVxB,EAAsBn3B,GAAM,GAE5By2B,EAAmB52B,OAAS4xB,EAAqBmH,gBACjD,KAER,CAEA,+BACA,IAC0B,EADpBC,EAAyB,GAAG,UACd7M,GAAM,IAA1B,IAAK,EAAL,qBAA4B,KACiF,EADlGtsB,EAAK,kBAC8D,QAApD+D,EAAKjF,KAAKkD,QAAQo3B,sBAAsBp5B,UAA2B,IAAP+D,EAAgBA,EAAK,IAAE,IAAzG,IAAK,EAAL,qBAA2G,KAA9F6Y,EAAE,QAAFA,GACHyc,EAAWv6B,KAAKwzB,qBAAqB7xB,IAAImc,GAC3Cyc,IACAF,EAAuBl1B,KAAK2Y,GAC5Byc,EAAShC,aAAa1rB,UACtB7M,KAAKwzB,qBAAqBgH,OAAO1c,GAEzC,CAAC,+BACL,CAAC,+BACD9d,KAAKkD,QAAQu3B,mBAAkB,SAAAl5B,GAE3B,IADA,IAAMm5B,EAAmBn5B,EAASo5B,iBAAiBN,EAAwBpC,EAAmBz3B,KAAI,SAAAoC,GAAC,OAAIA,EAAE41B,UAAU,KAC1Gp2B,EAAI,EAAGA,EAAIs4B,EAAiBr5B,OAAQe,IAAK,CAC9C,IAAMqrB,EAAOwK,EAAmB71B,GAChC,EAAKoxB,qBAAqBlnB,IAAIouB,EAAiBt4B,GAAIqrB,EACvD,CACJ,GACJ,GAAC,2BACD,SAAcmN,EAAO/N,GACbA,EAAKgO,OAAS/D,EAAAA,GAAAA,WACd8D,EAAME,iBAAkBf,EAAAA,EAAAA,IAAiBC,EAAAA,KACzCY,EAAMd,OAAQC,EAAAA,EAAAA,IAAiBC,EAAAA,MAE1BnN,EAAKgO,OAAS/D,EAAAA,GAAAA,MACnB8D,EAAME,iBAAkBf,EAAAA,EAAAA,IAAiBC,EAAAA,KACzCY,EAAMd,OAAQC,EAAAA,EAAAA,IAAiBC,EAAAA,OAG/BY,EAAME,iBAAkBf,EAAAA,EAAAA,IAAiBC,EAAAA,KACzCY,EAAMd,OAAQC,EAAAA,EAAAA,IAAiBC,EAAAA,KAEvC,GAAC,4BACD,WACI,IAAMztB,EAAUvM,KAAKkD,QAAQmB,UAAU,KACjC60B,EAAU3sB,EAAQ2sB,QAClB6B,EAAiB/6B,KAAKkD,QAAQmB,UAAU,IACxC22B,EAAmBh7B,KAAKkD,QAAQmB,UAAU,IAC5CyL,EAAWvD,EAAQuD,WAClBA,GAAYA,EAAW,GAAKA,EAAWirB,KACxCjrB,EAAWirB,GAEf,IAAM9B,EAAa1sB,EAAQ0sB,YAAc+B,EAIzC,MAAO,CAAElrB,SAAAA,EAAUmpB,WAAAA,EAAYC,QAAAA,EAASC,WAHrBD,GACZD,IAAe+B,GACflrB,IAAairB,EAExB,GAAC,mCACD,WACI/6B,KAAKkD,QAAQ+3B,kBAAkB5qB,MAAM6mB,KAAKl3B,KAAKwzB,qBAAqB0H,SAAS,IACzB,EADyB,UAC3Dl7B,KAAKwzB,qBAAqBwD,UAAQ,IAApD,IAAK,EAAL,qBAAsD,CAAxC,QACNuB,aAAa1rB,SACrB,CAAC,+BACD7M,KAAKwzB,qBAAqB3qB,OAC9B,IAAC,kBA5aD,SAAWyJ,GACP,IAAIhN,EACJ,OAAkE,QAA1DA,EAAKgN,EAAOqL,gBAAgBsV,EAAqB7jB,WAAwB,IAAP9J,EAAgBA,OAAKzE,CACnG,KAAC,EA3BmB,GAkdxB,SAASq5B,GAASnW,GAEd,OAAOA,EAAIyI,QAAQ,SADO,OAE9B,CAfAyG,GAAqB7jB,GAAK,4BAC1B6jB,GAAqBmH,gBAAkB,KACvCnH,GAAuBjtB,EAAW,CAC9Ba,GAAQ,EAAGjF,EAAAA,GACXiF,GAAQ,EAAGs0B,EAAAA,GACXt0B,GAAQ,EAAG8rB,IACX9rB,GAAQ,EAAG4oB,EAAAA,IACX5oB,GAAQ,EAAG+oB,EAAAA,IACX/oB,GAAQ,EAAGmH,EAAAA,KACZilB,IAOHmI,EAAAA,GAAAA,gBAAiC,6BAA6B,SAAC75B,GAAQ,2BAAK85B,EAAI,iCAAJA,EAAI,yBAAK38B,QAAU,OAAQ,OAAQ,GAAM,eAAE,qGAKvG,OAJLoX,EAAculB,EAAI,GAAbn6B,EAASm6B,EAAI,IACzBC,EAAAA,EAAAA,IAAWC,EAAAA,EAAAA,MAAUzlB,KACrBwlB,EAAAA,EAAAA,IAAWhuB,EAAAA,EAAAA,SAAepM,IAAQ,EACHK,EAASI,IAAIC,EAAAA,GAApCmyB,EAAkB,EAAlBA,mBAAkB,SACRxyB,EAASI,IAAI0tB,EAAAA,GAAmBiB,qBAAqBxa,GAAI,OAEzD,OAFZya,EAAM,EAAH,wBAEehD,EAAoB4H,OAAOpB,EAAoBxD,EAAII,OAAOC,gBAAiB,CAACtjB,EAAAA,EAAAA,KAAWpM,IAASY,EAAAA,EAAAA,MAAuB,QAErG,OAFhC3B,EAAQ,EAAH,KACLX,EAASW,EAAMytB,MAAMptB,KAAI,SAAA4B,GAAC,OAAIA,EAAEyqB,IAAI,IAC1CvF,YAAW,kBAAMnnB,EAAM0M,SAAS,GAAE,GAAI,kBAC/BrN,GAAM,QAGC,OAHD,UAGb+wB,EAAI1jB,UAAU,0EAEpB,I,2HC7jBE7G,GAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HxD,EAAvHyD,EAAIC,UAAUjF,OAAQkF,EAAIF,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOI,OAAOC,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,kBAAZM,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIhE,EAAI6D,EAAW5E,OAAS,EAAGe,GAAK,EAAGA,KAASQ,EAAIqD,EAAW7D,MAAImE,GAAKF,EAAI,EAAIzD,EAAE2D,GAAKF,EAAI,EAAIzD,EAAEsD,EAAQC,EAAKI,GAAK3D,EAAEsD,EAAQC,KAASI,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOI,eAAeV,EAAQC,EAAKI,GAAIA,CAChE,EACIM,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUb,EAAQC,GAAOY,EAAUb,EAAQC,EAAKW,EAAa,CACxE,EACIpI,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EACI0C,GAAgD,SAAUC,GAC1D,IAAKC,OAAOC,cAAe,MAAM,IAAIC,UAAU,wCAC/C,IAAiCC,EAA7BC,EAAIL,EAAEC,OAAOC,eACjB,OAAOG,EAAIA,EAAEC,KAAKN,IAAMA,EAAwB,oBAAbO,SAA0BA,SAASP,GAAKA,EAAEC,OAAOO,YAAaJ,EAAI,CAAC,EAAGK,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAWL,EAAEH,OAAOC,eAAiB,WAAc,OAAOlC,IAAM,EAAGoC,GAC9M,SAASK,EAAKC,GAAKN,EAAEM,GAAKV,EAAEU,IAAM,SAAUC,GAAK,OAAO,IAAI5D,SAAQ,SAAUC,EAASC,IACvF,SAAgBD,EAASC,EAAQ2D,EAAGD,GAAK5D,QAAQC,QAAQ2D,GAAGjD,MAAK,SAASiD,GAAK3D,EAAQ,CAAEG,MAAOwD,EAAGlD,KAAMmD,GAAM,GAAG3D,EAAS,EADb4D,CAAO7D,EAASC,GAA7B0D,EAAIX,EAAEU,GAAGC,IAA8BlD,KAAMkD,EAAExD,MAAQ,GAAI,CAAG,CAEnK,EAkBMq8B,GAAqB,4CACvB,WAAYrM,EAAMrjB,GAAO,MAEJ,OAFI,gBACrB,cAAM,GAAIA,EAAOqjB,EAAK3tB,KAAKoH,OAAO1H,QAC7BiuB,KAAOA,EAAK,CACrB,CAAC,iBAJsB,CAAS/O,EAAAA,IAMhCqb,GAAe,4CACf,WAAYnpB,EAAQU,EAAiBC,EAAeyoB,EAAsBC,EAAkBC,GAAyB,MAG3F,OAH2F,gBACjH,cAAMtpB,EAAQU,EAAiBC,EAAeyoB,EAAsBE,IAC/DD,iBAAmBA,EACxB,EAAK1zB,aAAe,EAAE,CAC1B,CAqHC,OArHA,0CACD,SAAmBgB,GACf,IAAI3D,EAEJ,IADmB2tB,GAAqBtxB,IAAI3B,KAAKkD,SAE7C,OAAO,KAEX,GAA+B,IAA3B+F,EAAW/C,OAAOkD,KAClB,OAAO,KAEX,IAAMmD,EAA2D,QAAhDjH,EAAK2D,EAAW/C,OAAOsD,OAAO8tB,oBAAiC,IAAPhyB,OAAgB,EAASA,EAAGiH,QACrG,OAAMA,aAAmBgrB,EAAAA,IAAsChrB,EAAQirB,wBAAwB1E,GAGxF,IAAI0I,GAAsBjvB,EAAQirB,aAAcx3B,MAF5C,IAGf,GAAC,yBACD,WACI,MAAO,EACX,GAAC,0BACD,SAAa4I,EAAQizB,EAAkBx7B,GAAO,WAC1C,OAAMuI,aAAkB4yB,GAGjB,IAAIz6B,EAAAA,IAAoB,SAAC+6B,GAAQ,OAAKp9B,GAAU,OAAM,OAAQ,GAAM,eAAE,+GAGzE,OADQywB,EAASvmB,EAATumB,KAAI,SACNA,EAAK3tB,KAAKxC,QAAQqB,GAAM,WAC1BA,EAAM6sB,wBAAyB,CAAF,gDAsDhB,MAjDqB,kBAA3BiC,EAAK3tB,KAAKqrB,KAAKS,QACtByO,GAAc,IAAIvb,GAAAA,IAAiBC,WAAW0O,EAAK3tB,KAAKqrB,KAAKS,SAExD6B,EAAK3tB,KAAKqrB,KAAKS,UACpByO,EAAc5M,EAAK3tB,KAAKqrB,KAAKS,SAE7ByO,GACAD,EAASE,QAAQ,IAAI1b,GAAAA,GAActgB,KAAM4I,EAAO1H,MAAO,CAAC66B,GAAc,KAGtEtkB,EAAAA,EAAAA,IAAgB0X,EAAK3tB,KAAKqrB,KAAK/C,YAC/BgS,EAASE,QAAQ,IAAI1b,GAAAA,GAActgB,KAAM4I,EAAO1H,MAAO,EAAC,IAAIsf,GAAAA,IAAiBC,YAAWwb,EAAAA,GAAAA,IAAS,WAAY,4BAA6B,QAI7G,kBAAtB9M,EAAKA,KAAK7B,QACjB4O,GAAc,IAAI1b,GAAAA,IAAiBC,WAAW0O,EAAKA,KAAK7B,SAEnD6B,EAAKA,KAAK7B,UACf4O,EAAc/M,EAAKA,KAAK7B,SAExB4O,GACAJ,EAASE,QAAQ,IAAI1b,GAAAA,GAActgB,KAAM4I,EAAO1H,MAAO,CAACg7B,GAAc,KAGtE/M,EAAKA,KAAKU,UAAYV,EAAKA,KAAKhM,WAE1BgZ,EAAmF,WAAtEn8B,KAAKkD,QAAQmB,UAAU,IACpC+3B,EAAKD,EACLE,GAAAA,IACIJ,EAAAA,GAAAA,IAAS,6BAA8B,gBACvCA,EAAAA,GAAAA,IAAS,yBAA0B,gBACvCI,GAAAA,IACIJ,EAAAA,GAAAA,IAAS,4BAA6B,mBACtCA,EAAAA,GAAAA,IAAS,wBAAyB,eACxC9M,EAAKA,KAAKU,UAAYV,EAAKA,KAAKhM,QAChCmZ,GAAW,IAAI9b,GAAAA,IAAiBC,YAAWwb,EAAAA,GAAAA,IAAS,qBAAsB,+CAAgDG,IAErHjN,EAAKA,KAAKU,SACfyM,GAAW,IAAI9b,GAAAA,IAAiBC,YAAWwb,EAAAA,GAAAA,IAAS,WAAY,yBAA0BG,IAErFjN,EAAKA,KAAKhM,UACfmZ,EAAW,IAAI9b,GAAAA,GAAe,IAAD,QAAKyb,EAAAA,GAAAA,IAAS,WAAY,mBAAkB,cHyB/D9Y,EGzBkFgM,EAAKA,KAAKhM,QH0B/GoY,EAAAA,EAAAA,KAAS,CACZgB,OAAQC,EAAAA,GAAAA,QACRC,KAAMtZ,EAAQrF,GACd4e,MAAOvZ,EAAQ7c,WAAaq2B,mBAAmBC,KAAKC,UAAU1Z,EAAQ7c,cACvE0Q,YG9B2H,aAAKmY,EAAKA,KAAKhM,QAAQ2N,MAAK,eAAOsL,EAAE,KAAK,CAAEU,WAAW,KAErKR,GACAR,EAASE,QAAQ,IAAI1b,GAAAA,GAActgB,KAAM4I,EAAO1H,MAAO,CAACo7B,GAAW,OAG3E,UACuBt8B,KAAK+8B,gCAAgC5N,EAAM9uB,GAAM,QAAlE28B,EAAW,EAAH,eAEDC,EAAal7B,GAAci7B,GAAS,QAA+B,OAA/B,UAAqCC,EAAW59B,OAAM,QAA1B,IAAZ69B,EAAe,EAAH,MAA0Cz9B,KAAI,iBAC7G+B,EAAO07B,EAAa/9B,MAC1B28B,EAASE,QAAQx6B,GAAM,mFAGf4D,EAAM,CAAEC,MAAO,EAAF,IAAU,gCAG3B63B,GAAiBA,EAAaz9B,QAAS6F,EAAK23B,EAAW13B,QAAO,iBAAE,OAAF,UAAQD,EAAGhD,KAAK26B,GAAW,sBAEnF73B,EAAK,CAAF,sBAAQA,EAAIC,MAAK,0FHM3C,IAAuB8d,CGNoB,0CAExC,IA1ESpiB,EAAAA,GAAAA,KA2Ef,GAAC,6CACD,SAAgCouB,EAAM9uB,GAClC,OAAO3B,GAAUsB,UAAM,OAAQ,GAAM,eAAE,2GAC9BmvB,EAAKA,KAAKU,SAAU,CAAF,wCACZ9uB,EAAAA,GAAAA,OAAyB,OAGxB,OAHwB,EAEbouB,EAAKA,KAAKU,SAAzB/Z,EAAG,EAAHA,IAAK5U,EAAK,EAALA,MAAK,SACAlB,KAAK27B,iBAAiBrL,qBAAqBxa,GAAI,OAErB,GAFtCya,EAAM,EAAH,cAECpwB,EAAQowB,EAAII,OAAOC,gBACpB5wB,KAAK2V,yBAAyB9T,cAAcof,IAAI9gB,GAAQ,CAAF,yCAChDY,EAAAA,GAAAA,OAAyB,kCAE7Bd,EAAAA,GAAAA,IAASD,KAAK2V,yBAAyB9T,cAAe1B,EAAO,IAAIyN,EAAAA,EAAS1M,EAAM8L,gBAAiB9L,EAAMgM,aAAc7M,GACvH6J,QAAO,SAAA1I,GAAI,QAAKuT,EAAAA,GAAAA,IAAsBvT,EAAK1B,MAAMsB,SAAS,IAC1DZ,KAAI,SAAAgB,GAAI,OAAI,IAAI8e,GAAAA,GAAc,EAAM6O,EAAK3tB,KAAKoH,OAAO1H,MAAOM,EAAK1B,MAAMsB,SAAU,EAAII,EAAKzB,QAAQ,KAAC,QAG1F,OAH0F,UAGxGwwB,EAAI1jB,UAAU,0EAG1B,KAAC,EA1Hc,CAAiCoS,GAAAA,IA4HpDwc,GAAkBz1B,GAAW,CACzBa,GAAQ,EAAG+W,GAAAA,GACX/W,GAAQ,EAAGuT,GAAAA,IACXvT,GAAQ,EAAG0a,GAAAA,IACX1a,GAAQ,EAAGwoB,EAAAA,GACXxoB,GAAQ,EAAGjF,EAAAA,IACZ65B,KC9KH1c,EAAAA,EAAAA,IAA2BkU,GAAqB7jB,GAAI6jB,IACpDrrB,EAAAA,GAAAA,SAAkC6zB,G,gICLrB0B,EAAwB,qC,iNCsBpC,IACKC,EAAyB,WAC3B,WAAYzb,IAAM,eACd3hB,KAAKq9B,yBAA2B,GAChCr9B,KAAKq9B,yBAAyBl4B,KAAK,GACnC,IAAK,IAAI/C,EAAI,EAAGA,EAAIuf,EAAKtgB,OAAQe,IACN,OAAnBuf,EAAKuC,OAAO9hB,IACZpC,KAAKq9B,yBAAyBl4B,KAAK/C,EAAI,EAGnD,CAGC,OAHA,iCACD,SAAUhC,GACN,OAAOJ,KAAKq9B,yBAAyBj9B,EAASoS,WAAa,GAAKpS,EAASoe,OAAS,CACtF,KAAC,EAZ0B,GAczB8e,EAAQ,GACP,SAASC,IACZ,OAAOD,CACX,CCrCO,IAAME,EAAS,WAClB,WAAYhrB,EAAY+mB,GAAwC,IAAjCkE,EAA8B,UAAH,6CAAG,GAAC,eAC1Dz9B,KAAKwS,WAAaA,EAClBxS,KAAKu5B,MAAQA,EACbv5B,KAAKy9B,4BAA8BA,CACvC,CAeC,OAfA,6CACD,SAAsBC,GAClB,GAA0B,IAAtB19B,KAAKu5B,MAAMl4B,OACX,MAAO,GAEX,IAAMs8B,EAAW39B,KAAKu5B,MAAMv5B,KAAKu5B,MAAMl4B,OAAS,GAMhD,ODZD,SAAoBsgB,EAAMuG,GAC7B,IAAM0V,EAAc,IAAIR,EAA0Bzb,GAC5Ckc,EAAc3V,EAAM1nB,KAAI,SAAAlB,GAC1B,IAAM4B,EAAQoM,EAAAA,EAAAA,KAAWhO,EAAE4B,OAC3B,MAAQ,CACJ48B,YAAaF,EAAYG,UAAU78B,EAAMyM,oBACzCqwB,UAAWJ,EAAYG,UAAU78B,EAAMitB,kBACvCxM,KAAMriB,EAAEqiB,KAEhB,IACAkc,EAAY/1B,MAAK,SAAC6B,EAAGC,GAAC,OAAKA,EAAEk0B,YAAcn0B,EAAEm0B,WAAW,IAAE,IAC5B,EAD4B,UACvCD,GAAW,IAA9B,IAAK,EAAL,qBAAgC,KAArBhV,EAAI,QACXlH,EAAOA,EAAKkE,UAAU,EAAGgD,EAAKiV,aAAejV,EAAKlH,KAAOA,EAAKkE,UAAUgD,EAAKmV,UACjF,CAAC,+BACD,OAAOrc,CACX,CCPqBsc,CADUP,EAASnT,OAAO,EAAGoT,EAASnf,OAAS,GACpBxe,KAAKu5B,MAAM/4B,KAAI,SAAA09B,GAAC,MAAK,CACzDh9B,MAAO,CAAE8L,gBAAiB,EAAGO,cAAe,EAAGL,YAAagxB,EAAE1f,OAAQpR,UAAW8wB,EAAE1f,QACnFmD,KAAMuc,EAAEC,MAAMC,KAAK,MACtB,KACWvY,UAAU7lB,KAAKu5B,MAAM,GAAG/a,OAAS,EACjD,GAAC,qBACD,WACI,OAAOxe,KAAKu5B,MAAM8E,OAAM,SAAAH,GAAC,OAAuB,IAAnBA,EAAEC,MAAM98B,MAAY,GACrD,KAAC,EApBiB,GAsBTi9B,GAAa,QACtB,WAAY9f,EAAQ2f,EAIpBI,IAAS,eACLv+B,KAAKwe,OAASA,EACdxe,KAAKm+B,MAAQA,EACbn+B,KAAKu+B,QAAUA,CACnB,IAESC,EAAoB,WAC7B,WAAYhsB,EAAYisB,EAAap9B,EAAQq9B,GAA2C,IAAjCjB,EAA8B,UAAH,6CAAG,GAAC,eAClFz9B,KAAKwS,WAAaA,EAClBxS,KAAKy+B,YAAcA,EACnBz+B,KAAKqB,OAASA,EACdrB,KAAK0+B,SAAWA,EAChB1+B,KAAKy9B,4BAA8BA,EACnCz9B,KAAKu5B,MAAQ,CACT,IAAI+E,EAAct+B,KAAKy+B,YAAcz+B,KAAKqB,OAAQrB,KAAK0+B,UAAU,GAEzE,CAGC,OAHA,6CACD,SAAsBC,GAClB,OAAO3+B,KAAK0+B,SAASN,KAAK,KAC9B,KAAC,EAb4B,GAepBQ,EAAwB,0CACjC,WAAYtsB,GAAQ,MAUZ,OAVY,gBAChB,gBACKA,OAASA,EACd,EAAKusB,eAAYh+B,EACjB,EAAKi+B,mBAAqB,IAAIx7B,EAAAA,GAC9B,EAAK0wB,YAAc,EAAK8K,mBAAmBt7B,MAC3C,EAAKH,UAAUiP,EAAOzD,0BAAyB,SAACvP,GACxCA,EAAEwP,WAAW,WAAsDjO,IAAnB,EAAKg+B,WACrD,EAAKC,mBAAmBn5B,MAEhC,KAAI,CACR,CAIC,OAJA,mCACD,SAAYo5B,GACR/+B,KAAK6+B,WAAY,EACjB7+B,KAAK8+B,mBAAmBn5B,MAC5B,KAAC,EAhBgC,CAASI,EAAAA,I,sBC/CvC,SAASi5B,EAAyB7+B,EAAO8+B,GAC5C,IAAKA,EACD,OAAOA,EAEX,IAAMC,EAAiB/+B,EAAMmsB,gBAAgB2S,EAAiB/9B,OACxDi+B,EAAkBvZ,EAAAA,GAA2BsZ,EAAgBD,EAAiBG,YAC9EtB,EAAc39B,EAAMk/B,YAAYJ,EAAiB/9B,MAAMyM,oBAAsBwxB,EAC7En2B,EAAQ7I,EAAMm/B,cAAcxB,GAC5ByB,EAA0BL,EAAe3U,OAAO4U,GAChDK,EAAkB5Z,EAAAA,GAA2B2Z,EAAyBN,EAAiBG,YACvFpQ,EAAM7uB,EAAMm/B,cAAc9xB,KAAKE,IAAIowB,EAAa39B,EAAMk/B,YAAYJ,EAAiB/9B,MAAMitB,kBAAoBqR,IACnH,MAAO,CACHt+B,MAAOoM,EAAAA,EAAAA,cAAoBtE,EAAOgmB,GAClCoQ,WAAYH,EAAiBG,WAAW7U,OAAO4U,EAAiBF,EAAiBG,WAAW/9B,OAAS89B,EAAkBK,GACvHC,YAAaR,EAAiBQ,YAC9BC,WAAYT,EAAiBS,WAC7BC,oBAAqBV,EAAiBU,oBAE9C,CAcO,SAASC,EAA4BX,EAAkBY,EAAWh6B,EAAMi6B,GAAyC,IAAzBC,EAAsB,UAAH,6CAAG,EACjH,GAAId,EAAiB/9B,MAAM8L,kBAAoBiyB,EAAiB/9B,MAAMqM,cAAtE,CAIA,IAAMyyB,EAAaH,EAAU/a,eAAema,EAAiB/9B,MAAM8L,iBAC7DizB,EAA0Bra,EAAAA,GAA6Boa,GAAY3+B,OACnE6+B,EAA+BjB,EAAiB/9B,MAAMgM,YAAc,GAAK+yB,EAC/E,GAAIC,EAA8B,CAQ9B,IAAMC,EAAmCva,EAAAA,GAA6BqZ,EAAiBG,YAAY/9B,OAC7F++B,EAAsBJ,EAAWna,UAAUoZ,EAAiB/9B,MAAMgM,YAAc,EAAG+yB,GACnFI,EAAqC/yB,EAAAA,EAAAA,cAAoB2xB,EAAiB/9B,MAAMyM,mBAAmBof,MAAM,EAAGqT,EAAoB/+B,QAAS49B,EAAiB/9B,MAAMitB,kBAChKmS,EAAqCrB,EAAiBG,WAAWmB,WAAWH,GAE5EnB,EAAiBG,WAAWvZ,UAAUua,EAAoB/+B,QAE1D49B,EAAiBG,WAAWvZ,UAAUsa,GAC5ClB,EAAmB,CACf/9B,MAAOm/B,EACPjB,WAAYkB,EACZnd,QAAS8b,EAAiB9b,QAC1Bsc,iBAAa5+B,EACb6+B,WAAYT,EAAiBS,WAC7BC,oBAAqBV,EAAiBU,oBAE9C,CAEA,IAAMa,EAAoBX,EAAUvT,gBAAgB2S,EAAiB/9B,OAC/Du/B,EAAUC,EAAYF,EAAmBvB,EAAiBG,YAChE,GAAKqB,EAAL,CAIA,IAAMjuB,EAAaysB,EAAiB/9B,MAAM8L,gBACpCusB,EAAQ,IAAIlpB,MAClB,GAAa,WAATxK,EAAmB,CACnB,IAAM86B,EAAkBF,EAAQv2B,QAAO,SAAA7D,GAAC,OAAyB,IAArBA,EAAEu6B,cAAoB,IAClE,GAAID,EAAgBt/B,OAAS,GAAgC,IAA3Bs/B,EAAgBt/B,QAAgBs/B,EAAgB,GAAGE,gBAAkBL,EAAkBn/B,OAErH,MAER,CACA,IACuB,EADjBy/B,EAA+B7B,EAAiBG,WAAW/9B,OAAS0+B,EAAoB,UAC9EU,GAAO,IAAvB,IAAK,EAAL,qBAAyB,KAAdp6B,EAAC,QACF06B,EAAe9B,EAAiB/9B,MAAMgM,YAAc7G,EAAEw6B,cAAgBx6B,EAAEu6B,eAC9E,GAAa,iBAAT/6B,GAA2Bi6B,GAAkBA,EAAettB,aAAeysB,EAAiB/9B,MAAM8L,iBAAmB+zB,EAAejB,EAAethB,OAEnJ,OAEJ,GAAInY,EAAEu6B,eAAiB,EACnB,OAEJ,GAAyB,IAArBv6B,EAAE26B,eAAN,CAGA,IAAMC,EAAc56B,EAAE66B,cAAgB76B,EAAE26B,eAClCG,EAAoB3zB,KAAKE,IAAIrH,EAAE66B,cAAe1zB,KAAKC,IAAIwzB,EAAaH,IACpEM,EAAiBnC,EAAiBG,WAAWvZ,UAAUxf,EAAE66B,cAAeC,GACxEE,EAAapC,EAAiBG,WAAWvZ,UAAUsb,EAAmB3zB,KAAKE,IAAIrH,EAAE66B,cAAeD,IACtG,GAAIG,EAAe//B,OAAS,EAAG,CAC3B,IAAM88B,EAAQvY,EAAAA,GAAmBwb,GACjC7H,EAAMp0B,KAAK,IAAIm5B,EAAcyC,EAAc5C,GAAO,GACtD,CACA,GAAIkD,EAAWhgC,OAAS,EAAG,CACvB,IAAM88B,EAAQvY,EAAAA,GAAmByb,GACjC9H,EAAMp0B,KAAK,IAAIm5B,EAAcyC,EAAc5C,GAAO,GACtD,CAZA,CAaJ,CAAC,+BACD,OAAO,IAAIX,EAAUhrB,EAAY+mB,EAAO,EApCxC,CAnCA,CAwEJ,CACA,IAAI+H,OAAczgC,EAClB,SAAS6/B,EAAYa,EAAeC,GAChC,IAAqB,OAAhBF,QAAwC,IAAhBA,OAAyB,EAASA,EAAYC,iBAAmBA,IAAkC,OAAhBD,QAAwC,IAAhBA,OAAyB,EAASA,EAAYE,YAAcA,EAChM,OAAuB,OAAhBF,QAAwC,IAAhBA,OAAyB,EAASA,EAAYb,QAG7E,IAAIA,EAAUgB,EAAUF,EAAeC,GAAU,GACjD,GAAIf,EAAS,CACT,IAAMiB,EAAeC,EAAkBlB,GACvC,GAAIiB,EAAe,EAAG,CAElB,IAAME,EAAaH,EAAUF,EAAeC,GAAU,GAClDI,GAAcD,EAAkBC,GAAcF,IAE9CjB,EAAUmB,EAElB,CACJ,CAMA,OALAN,EAAc,CACVC,cAAAA,EACAC,SAAAA,EACAf,QAAAA,GAEGA,CAEf,CACA,SAASkB,EAAkBlB,GACvB,IACuB,EADnBoB,EAAM,EAAE,UACIpB,GAAO,IAAvB,IAAK,EAAL,qBAAyB,KAAdp6B,EAAC,QACRw7B,GAAOr0B,KAAKE,IAAIrH,EAAEu6B,eAAiBv6B,EAAE26B,eAAgB,EACzD,CAAC,+BACD,OAAOa,CACX,CASA,SAASJ,EAAUF,EAAeC,EAAUM,GACxC,KAAIP,EAAclgC,OAAS,KAAQmgC,EAASngC,OAAS,KAArD,CAcA,IAAM0gC,EAAcv0B,KAAKE,IAAIs0B,EAAeT,GAAgBS,EAAeR,IAgCrES,EAAYC,EAAYX,GACxBY,EAAYD,EAAYV,GAC9B,OAAO,IAAIY,EAAAA,GAAQ,CAAEF,YAAa,kBAAMD,CAAS,GAAI,CAAEC,YAAa,kBAAMC,CAAS,IAAIE,aAAY,GAAO5B,OA7C1G,CACA,SAASuB,EAAeM,GAEpB,IADA,IAAIP,EAAc,EACT3/B,EAAI,EAAGmgC,EAAMD,EAAIjhC,OAAQe,EAAImgC,EAAKngC,IAAK,CAC5C,IAAMogC,EAAWF,EAAIG,WAAWrgC,GAC5BogC,EAAWT,IACXA,EAAcS,EAEtB,CACA,OAAOT,CACX,CAEA,SAASW,EAAkB5kB,GACvB,GAAIA,EAAK,EACL,MAAM,IAAI6kB,MAAM,cAEpB,OAAOZ,EAAcjkB,EAAK,CAC9B,CACA,SAASokB,EAAY5rB,GAIjB,IAHA,IAAIssB,EAAQ,EACRC,EAAQ,EACNC,EAAa,IAAIC,WAAWzsB,EAAOjV,QAChCe,EAAI,EAAGmgC,EAAMjsB,EAAOjV,OAAQe,EAAImgC,EAAKngC,IAE1C,GAAI0/B,GAAsC,MAAdxrB,EAAOlU,GAAY,CAC3C,IAAM0b,EAAa,IAAR+kB,EAAcD,EACzBE,EAAW1gC,GAAKsgC,EAAkB,EAAI5kB,GACtC8kB,GACJ,MACK,GAAId,GAAsC,MAAdxrB,EAAOlU,GAAY,CAEhD,IAAM0b,EAAa,IAAR+kB,GADXD,EAAQp1B,KAAKE,IAAIk1B,EAAQ,EAAG,IAE5BE,EAAW1gC,GAAKsgC,EAAkB,EAAI5kB,EAAK,GAC7B,IAAV8kB,GACAC,GAER,MAEIC,EAAW1gC,GAAKkU,EAAOmsB,WAAWrgC,GAG1C,OAAO0gC,CACX,CAIJ,C,uGC5MI98B,EAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HxD,EAAvHyD,EAAIC,UAAUjF,OAAQkF,EAAIF,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOI,OAAOC,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,kBAAZM,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIhE,EAAI6D,EAAW5E,OAAS,EAAGe,GAAK,EAAGA,KAASQ,EAAIqD,EAAW7D,MAAImE,GAAKF,EAAI,EAAIzD,EAAE2D,GAAKF,EAAI,EAAIzD,EAAEsD,EAAQC,EAAKI,GAAK3D,EAAEsD,EAAQC,KAASI,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOI,eAAeV,EAAQC,EAAKI,GAAIA,CAChE,EACIM,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUb,EAAQC,GAAOY,EAAUb,EAAQC,EAAKW,EAAa,CACxE,EACIpI,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAwBI2jC,EAAsB,0CACtB,WAAY1wB,EAAQ2wB,EAAOzT,EAAgBhL,EAA8BoX,EAAyBsH,EAAiBxH,GAAsB,MA6CjI,OA7CiI,gBACrI,gBACKppB,OAASA,EACd,EAAK2wB,MAAQA,EACb,EAAKzT,eAAiBA,EACtB,EAAKhL,6BAA+BA,EACpC,EAAKoX,wBAA0BA,EAC/B,EAAKsH,gBAAkBA,EACvB,EAAKpE,mBAAqB,IAAIx7B,EAAAA,GAC9B,EAAK0wB,YAAc,EAAK8K,mBAAmBt7B,MAC3C,EAAK2/B,kBAAoB,EAAK9/B,UAAU,IAAI+/B,EAAAA,IAC5C,EAAKC,QAAS,EACd,EAAKC,UAAW,EAChB,EAAKC,cAAgB,EAAKL,gBAAgBpP,IAAI,EAAK8H,wBAAwB4H,0BAA2B,4BAA6B,CAAE/1B,IAAK,GAAIC,IAAK,KACnJ,EAAKrK,UAAUmsB,EAAeiU,qBAAoB,SAACnkC,GAE9B,IAAIquB,IAAI,CACrB+V,EAAAA,oBAAAA,IAAAA,GACAA,EAAAA,oBAAAA,WAAAA,GACAA,EAAAA,oBAAAA,YAAAA,GACAvG,EACA,6BAESlc,IAAI3hB,EAAEsS,YAAcU,EAAOqxB,gBACpC,EAAKC,iBAEb,KACA,EAAKvgC,UAAU,EAAKiP,OAAOuxB,WAAU,SAACvkC,GAClC,EAAKskC,iBACT,KACA,EAAKvgC,UAAU,EAAKiP,OAAOwxB,2BAA0B,SAACxkC,IACjC,IAAbA,EAAEykC,QACF,EAAKC,UAAY,EAAKA,QAAQrjC,UAC9B,EAAK+H,MAEb,KACA,EAAKrF,WAAUoJ,EAAAA,EAAAA,KAAa,WACxB,EAAK62B,UAAW,CACpB,KACA,EAAKjgC,UAAU,EAAKiP,OAAO2xB,uBAAsB,WAEzCvI,EAAqB3a,SAAS,oCAGlC,EAAKrY,MACT,KAAI,CACR,CA+EC,OA/EA,uCACD,WAAkB,WACV1I,KAAKgkC,UAAYhkC,KAAKgkC,QAAQrjC,SAC9BX,KAAK0I,OAET4e,YAAW,WACH,EAAKgc,UAIT,EAAKY,yBACT,GAAG,EACP,GAAC,mBACD,WACI,OAAOlkC,KAAKmjC,kBAAkBhkC,KAClC,GAAC,qBACD,WACI,IAAImG,EACJ,OAA+B,QAAvBA,EAAKtF,KAAKgkC,eAA4B,IAAP1+B,OAAgB,EAASA,EAAG6+B,SACvE,GAAC,gCACD,WACI,OAAOnkC,KAAKgkC,QAAUhkC,KAAKgkC,QAAQI,qBAAuB,CAC9D,GAAC,yBACD,SAAYrF,GACR,IAAIz5B,EACoB,QAAvBA,EAAKtF,KAAKgkC,eAA4B,IAAP1+B,GAAyBA,EAAG++B,YAAYtF,EAC5E,GAAC,uBACD,SAAUsE,GACN,IAAI/9B,EACJtF,KAAKqjC,OAASA,EACVA,IACwB,QAAvB/9B,EAAKtF,KAAKgkC,eAA4B,IAAP1+B,GAAyBA,EAAGg/B,0BAEpE,GAAC,qCACD,WAC2BtkC,KAAKsS,OAAOjO,UAAU,IACzBqX,UAGhB1b,KAAKgkC,SAAWhkC,KAAKgkC,QAAQrjC,SAGjCX,KAAK0pB,QAAQ6a,EAAAA,GAAAA,WACjB,GAAC,qBACD,SAAQC,GAAa,WACbxkC,KAAKmjC,kBAAkBhkC,MACnBqlC,IAAgBD,EAAAA,GAAAA,UACXvkC,KAAKmjC,kBAAkBhkC,MAAMslC,mCAI1CzkC,KAAKmjC,kBAAkBhkC,MAAQ,IAAIulC,GAAyB1kC,KAAKsS,OAAQtS,KAAKsS,OAAOiM,eAAe,kBAAM,EAAK8kB,MAAM,GAAErjC,KAAKwvB,eAAgBxvB,KAAKijC,MAAOuB,EAAaxkC,KAAKwkB,6BAA8BxkB,KAAK47B,wBAAwB4H,0BAA2BxjC,KAAKujC,eACrQvjC,KAAKmjC,kBAAkBhkC,MAAMwlC,cAAc3kC,KAAKmjC,kBAAkBhkC,MAAM60B,aAAY,WAChF,EAAK8K,mBAAmBn5B,MAC5B,KACJ,GAAC,kBACD,WACI3F,KAAKmjC,kBAAkBt6B,QACvB7I,KAAK8+B,mBAAmBn5B,MAC5B,GAAC,qCACD,WACI,IAAIL,EAEoB,QAAvBA,EAAKtF,KAAKgkC,eAA4B,IAAP1+B,GAAyBA,EAAGs/B,yBAChE,GAAC,sBACD,WACI,IAAIt/B,EACoB,QAAvBA,EAAKtF,KAAKgkC,eAA4B,IAAP1+B,GAAyBA,EAAGu/B,0BAChE,GAAC,0BACD,WACI,IAAIv/B,EACoB,QAAvBA,EAAKtF,KAAKgkC,eAA4B,IAAP1+B,GAAyBA,EAAGw/B,8BAChE,GAAC,0CACD,WACI,IAAIx/B,EACJ,OAAO5G,EAAUsB,UAAM,OAAQ,GAAM,eAAE,yFACpB,OADoB,SACW,QAAvBsF,EAAKtF,KAAKgkC,eAA4B,IAAP1+B,OAAgB,EAASA,EAAGy/B,+BAA+B,OAArG,OAANvlC,EAAS,EAAH,4BACMqB,IAAXrB,GAAuBA,GAAc,+CAEpD,KAAC,EA9HqB,CAAwCuG,EAAAA,IAgIlEi9B,EAAyBh9B,EAAW,CAChCa,EAAQ,EAAG4oB,EAAAA,IACX5oB,EAAQ,EAAGohB,EAAAA,IACXphB,EAAQ,EAAGjF,EAAAA,GACXiF,EAAQ,EAAGs0B,EAAAA,GACXt0B,EAAQ,EAAG0a,EAAAA,KACZyhB,GAEI,IAAM0B,GAAwB,0CACjC,WAAYpyB,EAAQ0yB,EAAiBC,EAAczV,EAAgByT,EAAOiC,EAAoB1gB,EAA8BtkB,EAAUilC,GAAU,uBAC5I,cAAM7yB,IACD0yB,gBAAkBA,EACvB,EAAKC,aAAeA,EACpB,EAAKzV,eAAiBA,EACtB,EAAKyT,MAAQA,EACb,EAAKiC,mBAAqBA,EAC1B,EAAK1gB,6BAA+BA,EACpC,EAAKtkB,SAAWA,EAChB,EAAKilC,SAAWA,EAChB,EAAKf,qBAAuB,EAC5B,EAAKgB,gBAAkB,EAAK/hC,UAAU,IAAI+/B,EAAAA,IAC1C,EAAKiC,WAAa,EAAKhiC,UAAU,IAAIK,EAAAA,IAAiB,WAClD,IAAM8gC,EAAc,EAAKU,mBAGzB,OADA,EAAKA,mBAAqBX,EAAAA,GAAAA,UACnB,EAAKhb,OAAOib,EACvB,GAAG,KACH,EAAKc,oBAAsB,GAG3B,EAAKC,mCAAgC1kC,EACrC,IAAI2kC,OAAqB3kC,EAmCM,OAlC/B,EAAKwC,UAAU,EAAK2wB,aAAY,WAC5B,IAAI1uB,EACEmgC,EAAoB,EAAKA,kBAC/B,GAAIA,GAAqBA,EAAkBC,yBAA2BF,EAAoB,CACtFA,EAAqBC,EAAkBC,uBACvC,IAAM7lC,EAAW4lC,EAAkBE,eACG,QAArCrgC,EAAKzF,EAAS+lC,yBAAsC,IAAPtgC,GAAyBA,EAAGhD,KAAKzC,EAAU4lC,EAAkBI,wBAAyBL,EACxI,CACJ,KACA,EAAKniC,WAAUoJ,EAAAA,EAAAA,KAAa,WACxB,EAAKw2B,MAAMp6B,OACf,KACA,EAAKxF,UAAU,EAAKiP,OAAOwxB,2BAA0B,SAACxkC,GAClD,IAAIgG,EACa,IAAbhG,EAAEykC,SAIsB,QAA3Bz+B,EAAK,EAAK29B,MAAM9jC,aAA0B,IAAPmG,GAAyBA,EAAGwgC,eAC5D,EAAK7C,MAAM9jC,QACX,EAAK4mC,kCACL,EAAKjH,mBAAmBn5B,QAEhC,KACA,EAAKtC,UAAU,EAAKiP,OAAOkjB,yBAAwB,SAACl2B,GAChD,IAAIgG,EAEwB,QAA3BA,EAAK,EAAK29B,MAAM9jC,aAA0B,IAAPmG,GAAyBA,EAAGwgC,eAChE,EAAKC,kCACL,EAAKzB,yBACT,KACA,EAAKjhC,UAAU,EAAKnD,SAAS8zB,aAAY,WACrC,EAAKqR,WAAWxgC,SAAS,EAAKsgC,SAASxjC,IAAI,EAAK2Q,OAAOC,YAC3D,KACA,EAAK+xB,0BAA0B,CACnC,CAmOC,OAnOA,uDACD,WACI,GAAKtkC,KAAKijC,MAAM9jC,MAAhB,CAIA,IAAMgB,EAAQH,KAAKsS,OAAOC,WACpButB,EAAiB3/B,EAAM4tB,iBAAiB/tB,KAAKsS,OAAOiM,eAC1Dve,KAAKslC,oBAAsBtlC,KAAKijC,MAAM9jC,MAAM6mC,YAAY97B,QAAO,SAAA7D,GAC3D,IAAMk7B,EAAgBphC,EAAMmsB,gBAAgBjmB,EAAE4/B,mBAAmBC,cAC3DxG,EAAar5B,EAAE44B,iBAAiBS,WAAWwG,cAC3CC,EAAShmC,EAAMimC,oBAAoB//B,EAAE4/B,kBAAkBj5B,iBACvDq5B,EAAiB74B,KAAKE,IAAI,EAAGoyB,EAAethB,OAASnY,EAAE4/B,kBAAkB/4B,aAC3Eo5B,EAAmB5G,EAAW7Z,UAAU,EAAGwgB,GAC3CE,EAAkB7G,EAAW7Z,UAAUwgB,GACvCG,EAAsBjF,EAAc1b,UAAU,EAAGwgB,GACjDI,EAAqBlF,EAAc1b,UAAUwgB,GAYjD,OAXIhgC,EAAE4/B,kBAAkB/4B,aAAei5B,IAGA,KADnCK,EAAsBA,EAAoBE,aAClBrlC,SACpBolC,EAAqBA,EAAmBC,aAGZ,KADhCJ,EAAmBA,EAAiBI,aACfrlC,SACjBklC,EAAkBA,EAAgBG,cAGnCJ,EAAiB/F,WAAWiG,KAC5BG,EAAAA,EAAAA,IAAiBF,EAAoBF,EAChD,GAzBA,MAFIvmC,KAAKslC,oBAAsB,EA4BnC,GAAC,8CACD,WAAmC,WAC/B,IAAKtlC,KAAKulC,gCAAkCvlC,KAAKijC,MAAM9jC,MACnD,OAAO,EAEX,GAA4C,IAAxCa,KAAKijC,MAAM9jC,MAAM6mC,YAAY3kC,OAE7B,OAAO,EAEX,IAAMytB,EAAM9uB,KAAKslC,oBAAoBsB,WAAU,SAAAjkC,GAAC,OAAIA,EAAEkkC,aAAe,EAAKtB,6BAA6B,IACvG,OAAa,IAATzW,GAEA9uB,KAAKulC,mCAAgC1kC,EAC9B,GAEJiuB,CACX,GAAC,mCACD,WACI,GAAK9uB,KAAKijC,MAAM9jC,MAGhB,OAAOa,KAAKslC,oBAAoBtlC,KAAK8mC,mCACzC,GAAC,sCACD,WACI,OAAOpoC,EAAUsB,UAAM,OAAQ,GAAM,eAAE,2FACnC,OADmC,SAC7BA,KAAKykC,kCAAiC,QACtCuB,EAAchmC,KAAKslC,qBAAuB,IAChCjkC,OAAS,GACf0lC,GAAU/mC,KAAK8mC,mCAAqC,GAAKd,EAAY3kC,OAC3ErB,KAAKulC,8BAAgCS,EAAYe,GAAQF,YAGzD7mC,KAAKulC,mCAAgC1kC,EAEzCb,KAAK8+B,mBAAmBn5B,OAAO,+CAEvC,GAAC,0CACD,WACI,OAAOjH,EAAUsB,UAAM,OAAQ,GAAM,eAAE,2FACnC,OADmC,SAC7BA,KAAKykC,kCAAiC,QACtCuB,EAAchmC,KAAKslC,qBAAuB,IAChCjkC,OAAS,GACf0lC,GAAU/mC,KAAK8mC,mCAAqCd,EAAY3kC,OAAS,GAAK2kC,EAAY3kC,OAChGrB,KAAKulC,8BAAgCS,EAAYe,GAAQF,YAGzD7mC,KAAKulC,mCAAgC1kC,EAEzCb,KAAK8+B,mBAAmBn5B,OAAO,+CAEvC,GAAC,6CACD,WACI,IAAIL,EACJ,OAAO5G,EAAUsB,UAAM,OAAQ,GAAM,eAAE,uFAC/BA,KAAKolC,gBAAgBjmC,MAAO,CAAF,mBAEtBa,KAAKolC,gBAAgBjmC,MAAMqlC,cAAgBD,EAAAA,GAAAA,SAAoC,gBAC/E,OAD+E,SACzEvkC,KAAKolC,gBAAgBjmC,MAAM6nC,QAAO,6BAGxC,OAHwC,SAGlChnC,KAAKupB,OAAOgb,EAAAA,GAAAA,UAAqC,mCAGzB,QAA3Bj/B,EAAKtF,KAAKijC,MAAM9jC,aAA0B,IAAPmG,OAAgB,EAASA,EAAGk/B,eAAiBD,EAAAA,GAAAA,SAAoC,iBAE3H,OAF2H,UAErHvkC,KAAKupB,OAAOgb,EAAAA,GAAAA,UAAqC,gDAGnE,GAAC,0CACD,WACI,IAAIj/B,EACJ,OAAO5G,EAAUsB,UAAM,OAAQ,GAAM,eAAE,mFACnC,OADmC,SAC7BA,KAAKykC,kCAAiC,kCACP,QAA3Bn/B,EAAKtF,KAAKijC,MAAM9jC,aAA0B,IAAPmG,OAAgB,EAASA,EAAG0gC,YAAY3kC,SAAW,GAAK,GAAC,+CAE9G,GACA,qBACA,WACI,IAAMokC,EAAoBzlC,KAAKylC,kBAC/B,GAAKA,EAAL,CAGA,IAAM3F,EAAiB9/B,KAAKsS,OAAOiM,cACnC,IAAIknB,EAAkBvkC,MAAMitB,iBAAiBD,SAAS4R,GAAtD,CAGA,IAAMj6B,EAAO7F,KAAKsS,OAAO2S,aAAatjB,IAAI,IAAqCkE,KACzEs+B,EAAYvE,EAA4B6F,EAAmBzlC,KAAKsS,OAAOC,WAAY1M,EAAMi6B,GAC/F,GAAIqE,EAAW,CACX,GAAIA,EAAU/hB,UACV,OAEJ,OAAO+hB,CACX,CACA,OAAO,IAAI3F,EAAqBiH,EAAkBvkC,MAAM8L,gBAAiBy4B,EAAkBvkC,MAAMgM,YAAau4B,EAAkBvkC,MAAMkM,UAAYq4B,EAAkBvkC,MAAMgM,YAAau4B,EAAkBrG,WAAW6H,MAAM,MAAO,EATjO,CAJA,CAcJ,GAAC,6BACD,WACI,IAAMC,EAAalnC,KAAKmnC,wBACxB,GAAKD,EAGL,OAAOA,EAAWE,wBACtB,GAAC,mBACD,WACI,OAAOpnC,KAAKsS,OAAOiM,cAAc/L,aAAexS,KAAKglC,gBAAgBxyB,UACzE,GAAC,qCACD,WAGIxS,KAAKolC,gBAAgBv8B,QACrB7I,KAAKqlC,WAAWxgC,SAAS7E,KAAKmlC,SAASxjC,IAAI3B,KAAKsS,OAAOC,YAC3D,GAAC,oBACD,SAAOiyB,GACH,OAAO9lC,EAAUsB,UAAM,OAAQ,GAAM,eAAE,yGAC9BA,KAAKilC,eAAgB,CAAF,gDAyBxB,OAtBM7kC,EAAWJ,KAAKsS,OAAOiM,cACvB8oB,EAAY,IAAIxS,KAChBmS,GAAUjtB,EAAAA,EAAAA,KAAwB,SAAC1Z,GAAK,OAAK3B,EAAU,OAAM,OAAQ,GAAM,eAAE,2FAGlE,OAHkE,kBAG5D4oC,GAAyBtnC,KAAKE,SAAUE,EAAUJ,KAAKsS,OAAOC,WAAY,CAAEiyB,YAAAA,EAAa+C,4BAAwB1mC,GAAaR,EAAOL,KAAKwkB,8BAA6B,OAAtLhlB,EAAS,EAAH,KACAgoC,EAAU,IAAI3S,KACpB70B,KAAKmlC,SAAS5b,OAAOvpB,KAAKsS,OAAOC,WAAYi1B,EAAQC,UAAYJ,EAAUI,WAAW,uBAGjE,OAHiE,0BAGtFjiC,EAAAA,EAAAA,IAAkB,EAAD,IAAI,+BAGrBnF,EAAM6sB,wBAAyB,CAAF,kDAGjCltB,KAAKijC,MAAMyE,SAAS1nC,KAAKsS,OAAQ9S,EAAQglC,GACzCxkC,KAAK+lC,kCACL/lC,KAAK8+B,mBAAmBn5B,OAAO,wDACjC,IACIgiC,EAAY,IAAIC,GAAgBZ,EAASxC,GAC/CxkC,KAAKolC,gBAAgBjmC,MAAQwoC,EAAU,SACjCX,EAAO,OACThnC,KAAKolC,gBAAgBjmC,QAAUwoC,GAC/B3nC,KAAKolC,gBAAgBv8B,QACxB,gDAET,GAAC,2BACD,SAAcg/B,GACV7nC,KAAKqD,UAAUwkC,EACnB,GAAC,qCACD,WAEI,GADkB7nC,KAAKmkC,UACvB,CAKA,IAAM+C,EAAalnC,KAAKylC,kBACpByB,GACAlnC,KAAK8nC,OAAOZ,EAHhB,CAKJ,GAAC,oBACD,SAAOA,GACH,IAAI5hC,EAkBoB,EAflB29B,EAAQjjC,KAAKijC,MAAM8E,gBACrBb,EAAWzH,aACXz/B,KAAKsS,OAAO6V,aAAa,0BAA2B,CAChDpC,EAAAA,EAAAA,YAA0BmhB,EAAWhmC,MAAO,KAAG,eAC5CgmC,EAAWvH,uBAElB3/B,KAAKsS,OAAO01B,YAAYd,EAAWzH,YAAYv+B,MAAMyM,oBACN,QAA9CrI,EAAK2iC,EAAAA,mBAAAA,IAAuBjoC,KAAKsS,eAA4B,IAAPhN,GAAyBA,EAAG4iC,OAAOhB,EAAWzH,YAAY0I,UAGjHnoC,KAAKsS,OAAO6V,aAAa,0BAA2B,CAChDpC,EAAAA,EAAAA,YAA0BmhB,EAAWhmC,MAAOgmC,EAAW9H,aAAW,eAC/D8H,EAAWvH,uBAGlBuH,EAAW/jB,UACX,EAAAnjB,KAAKwvB,gBACAnM,eAAc,SAAC6jB,EAAW/jB,QAAQrF,IAAE,eAAMopB,EAAW/jB,QAAQ7c,WAAa,MAC1E8mB,SAAQ,WACC,OAAV6V,QAA4B,IAAVA,GAA4BA,EAAMp2B,SACxD,IACKnN,UAAKmB,EAAWD,EAAAA,IAGX,OAAVqiC,QAA4B,IAAVA,GAA4BA,EAAMp2B,UAExD7M,KAAK8+B,mBAAmBn5B,MAC5B,GAAC,oBACD,WACI,IAAIL,EACE8iC,EAAQ,IAAIza,KAAiC,QAA3BroB,EAAKtF,KAAKijC,MAAM9jC,aAA0B,IAAPmG,OAAgB,EAASA,EAAG0gC,YAAYxlC,KAAI,SAAA6F,GAAC,OAAIA,EAAE44B,iBAAiB4G,uBAAuB,MAAM,IAC5J,OAAO,OAAIuC,GAAOC,SAAQ,SAAAC,GAAC,OAAIA,EAAEC,UAAY,EAAE,GACnD,KAAC,EA9RgC,CAAS3J,GAgSjCgJ,GAAe,WACxB,WAAYZ,EAASxC,IAAa,eAC9BxkC,KAAKgnC,QAAUA,EACfhnC,KAAKwkC,YAAcA,CACvB,CAGC,OAHA,+BACD,WACIxkC,KAAKgnC,QAAQ5iC,QACjB,KAAC,EAPuB,GAafokC,GAAkC,0CAC3C,WAAYC,EAAmBn2B,EAAQo2B,EAAUlE,GAAa,uBAC1D,gBACKlyB,OAASA,EACd,EAAKo2B,SAAWA,EAChB,EAAKlE,YAAcA,EACnB,EAAKmE,aAAc,EACnB,IAAMC,EAAgBt2B,EAAOmoB,mBAAkB,SAACoO,GAC5C,OAAOA,EAAelO,iBAAiB,GAAI8N,EAAkB7a,MAAMptB,KAAI,SAAA4B,GAAC,MAAK,CACzElB,MAAOkB,EAAElB,MACTqL,QAAS,CACLuB,YAAa,oCAEpB,IACL,IASkC,OARlC,EAAKzK,WAAUoJ,EAAAA,EAAAA,KAAa,WACxB,EAAKk8B,aAAc,EACnBr2B,EAAO2oB,kBAAkB2N,EAC7B,KACA,EAAK5C,YAAcyC,EAAkB7a,MAAMptB,KAAI,SAAC6F,EAAGyoB,GAAG,OAAK,IAAIga,GAAuBziC,EAAGuiC,EAAc9Z,GAAK,IAC5G,EAAKzrB,UAAUiP,EAAOkjB,yBAAwB,WAC1C,EAAKsQ,cACT,KACA,EAAKziC,UAAUolC,GAAmB,CACtC,CAqBC,OArBA,oCACD,WACI,IAAIzoC,KAAK2oC,YAAT,CAGA,IAEgC,EAF5B75B,GAAa,EACX3O,EAAQH,KAAKsS,OAAOC,WAAW,UACrBvS,KAAKgmC,aAAW,IAAhC,IAAK,EAAL,qBAAkC,KAAvB3/B,EAAC,QACF0iC,EAAW5oC,EAAMu3B,mBAAmBrxB,EAAE2iC,cACvCD,EAIA1iC,EAAE4/B,kBAAkB/lB,YAAY6oB,KACjCj6B,GAAa,EACbzI,EAAE4/B,kBAAoB8C,IALtBvjC,EAAAA,EAAAA,IAAkB,IAAIm9B,MAAM,2BAOpC,CAAC,+BACG7zB,GACA9O,KAAK0oC,UAfT,CAiBJ,KAAC,EA7C0C,CAAS3iC,EAAAA,IA+ClD+iC,GAAsB,WACxB,WAAY7J,EAAkB+J,IAAc,eACxChpC,KAAKi/B,iBAAmBA,EACxBj/B,KAAKgpC,aAAeA,EACpBhpC,KAAK6mC,WAAajK,KAAKC,UAAU,CAC7Blb,KAAM3hB,KAAKi/B,iBAAiBG,WAC5B6J,aAAcjpC,KAAKi/B,iBAAiBS,WACpCwJ,UAAWlpC,KAAKi/B,iBAAiB/9B,MAAM8L,gBACvCE,YAAalN,KAAKi/B,iBAAiB/9B,MAAMgM,YACzCiW,QAASnjB,KAAKi/B,iBAAiB9b,UAEnCnjB,KAAKimC,kBAAoBhH,EAAiB/9B,KAC9C,CAaC,OAbA,8CACD,WACI,MAAO,CACHk+B,WAAYp/B,KAAKi/B,iBAAiBG,WAClCl+B,MAAOlB,KAAKimC,kBACZ9iB,QAASnjB,KAAKi/B,iBAAiB9b,QAC/BwiB,eAAgB3lC,KAAKi/B,iBAAiB0G,eACtCE,wBAAyB7lC,KAAKi/B,iBAAiB4G,wBAC/CH,uBAAwB1lC,KAAKi/B,iBAAiByG,uBAC9CjG,YAAaz/B,KAAKi/B,iBAAiBQ,YACnCC,WAAY1/B,KAAKi/B,iBAAiBS,WAClCC,oBAAqB3/B,KAAKi/B,iBAAiBU,oBAEnD,KAAC,EAzBuB,GA2BrB,SAAS2H,GAAyBpnC,EAAUE,EAAUD,EAAOqL,GAAuE,IAA9DnL,EAAQ,UAAH,6CAAGyB,EAAAA,EAAAA,KAAwB0iB,EAA4B,uCACrI,OAAO9lB,EAAUsB,UAAM,OAAQ,GAAM,eAAE,gIAGnB,OAFVmpC,EAAsBC,GAAgBhpC,EAAUD,GAChDkpC,EAAYnpC,EAASouB,IAAInuB,GAAM,SACfpB,QAAQuvB,IAAI+a,EAAU7oC,KAAI,SAACX,GAAQ,OAAKnB,EAAU,OAAM,OAAQ,GAAM,eAAE,yFACtE,OADsE,SAChEK,QAAQC,QAAQa,EAASynC,yBAAyBnnC,EAAOC,EAAUoL,EAASnL,IAAQ6X,MAAMtX,EAAAA,IAA0B,OAA7H,OAAXolC,EAAc,EAAH,uBACT,CACJA,YAAAA,EACAnmC,SAAAA,EACAgN,QAAS,WACDm5B,GACAnmC,EAASypC,sBAAsBtD,EAEvC,IACH,0CACH,KAAE,OAXEuD,EAAU,EAAH,KAYPC,EAAc,IAAI/V,IAAK,UACR8V,GAAO,yDACc,GAD/B/pC,EAAM,QACPwmC,EAAcxmC,EAAOwmC,YACT,CAAF,iEAGGA,EAAYpY,OAAK,2DACqC,GAD9DpsB,EAAI,SACPN,EAAQM,EAAKN,MAAQoM,EAAAA,EAAAA,KAAW9L,EAAKN,OAASioC,GACxCn8B,kBAAoB9L,EAAMqM,cAAa,wDAI7C6xB,OAAU,EACVK,OAAW,EACgB,kBAApBj+B,EAAK49B,YACZA,EAAa59B,EAAK49B,WACd5a,GAAgChjB,EAAKioC,uBACrCrK,EAAasK,GAActK,EAAYl+B,EAAMyM,mBAAoBxN,EAAOqkB,GAG3D,KADPtB,EAAOkc,EAAW/9B,OAASG,EAAK49B,WAAW/9B,UAE7CH,EAAQ,IAAIoM,EAAAA,EAAMpM,EAAM8L,gBAAiB9L,EAAMgM,YAAahM,EAAMqM,cAAerM,EAAMkM,UAAY8V,KAG3Guc,OAAc5+B,GAET,YAAaW,EAAK49B,YACjB+I,GAAU,IAAIwB,EAAAA,IAAgBC,MAAMpoC,EAAK49B,WAAW+I,SAC1D/I,EAAa+I,EAAQnxB,WACrByoB,EAAc,CACV0I,QAAS3mC,EAAK49B,WAAW+I,QACzBjnC,MAAOA,KAIX2oC,EAAAA,EAAAA,IAAYroC,EAAK49B,YAEf0K,EAAe,CACjB1K,WAAAA,EACAK,YAAAA,EACAv+B,MAAAA,EACAiiB,QAAS3hB,EAAK2hB,QACdwiB,eAAgBnmC,EAAOK,SACvBgmC,wBAAyBG,EACzBN,uBAAwBlkC,EACxBk+B,WAAYl+B,EAAKk+B,YAAcN,EAC/BO,oBAAqBn+B,EAAKm+B,qBAAuBpC,KAErDiM,EAAYl9B,IAAIswB,KAAKC,UAAU,CAAEuC,WAAAA,EAAYl+B,MAAOM,EAAKN,QAAU4oC,GAAa,iTAGjF,CACHlc,OAAO,OAAI4b,EAAYxS,UACvBnqB,QAAS,WAAM,IACiB,EADjB,UACU08B,GAAO,IAA5B,IAAK,EAAL,qBAA8B,CAAb,QACN18B,SACX,CAAC,+BACL,IACH,6EAET,CACA,SAASu8B,GAAgBhpC,EAAUD,GAC/B,IAAMuuB,EAAOvuB,EAAMwuB,kBAAkBvuB,GAC/BsS,EAAYvS,EAAMwS,iBAAiBvS,EAASoS,YAGlD,OAAOkc,EACD,IAAIphB,EAAAA,EAAMlN,EAASoS,WAAYkc,EAAKxhB,YAAa9M,EAASoS,WAAYE,GACtEpF,EAAAA,EAAAA,cAAoBlN,EAAUA,EAASw3B,UAAK/2B,EAAW6R,GACjE,CACA,SAASg3B,GAAc/nB,EAAMvhB,EAAUD,EAAOqkB,GAC1C,IACMulB,EADY5pC,EAAM2kB,eAAe1kB,EAASoS,YAAYqT,UAAU,EAAGzlB,EAASoe,OAAS,GAC/DmD,EACtBqoB,EAAY7pC,EAAMwpB,aAAasgB,qBAAqB7pC,EAAU2pC,EAAQ1oC,QAAUjB,EAASoe,OAAS,GAAImD,GACtGuoB,EAA6B,OAAdF,QAAoC,IAAdA,OAAuB,EAASA,EAAUG,gBAAgB/pC,EAASoe,OAAS,EAAGurB,EAAQ1oC,OAAQ,GAC1I,OAAK6oC,GAGWE,EAAAA,EAAAA,GAAkBF,EAAc1lB,GAFrC7C,CAIf,C,wCC9nBa0oB,GAAqC,0CAC9C,WAAY/3B,EAAQg4B,GAA8B,uBAC9C,gBACKh4B,OAASA,EACd,EAAKg4B,6BAA+BA,EACpC,EAAKC,wBAAyB,EAC9B,EAAKC,mBAAoB,EACzB,EAAKC,WAAY,EACjB,EAAKC,6BAA0B7pC,EAC/B,EAAKi+B,mBAAqB,IAAIx7B,EAAAA,GAC9B,EAAK0wB,YAAc,EAAK8K,mBAAmBt7B,MAE3C,EAAKmnC,mBAAqB,EAAKtnC,UAAU,IAAIK,EAAAA,IAAiB,WACrD,EAAK6mC,wBACF,EAAKE,YACL,EAAKA,WAAY,EACjB,EAAK3L,mBAAmBn5B,OAGpC,GAAG,MAEH,EAAKtC,UAAUiP,EAAO6J,WAAU,SAAA7c,GACxBA,EAAEsrC,WAAa,EAAKJ,oBACpB,EAAKA,mBAAoB,EACzB,EAAKjhB,OAAO,EAAKkhB,WAEzB,KACA,EAAKpnC,UAAUiP,EAAOu4B,SAAQ,SAAAvrC,GACtBA,EAAEsrC,UAAY,EAAKJ,oBACnB,EAAKA,mBAAoB,EACzB,EAAKjhB,OAAO,EAAKkhB,WAEzB,KACA,IAAMK,EAAoBC,GAAAA,kBAAAA,IAAsB,EAAKz4B,QACrD,GAAIw4B,EAAmB,CACnB,EAAKznC,UAAUynC,EAAkBE,iBAAiB,CAC9CnhC,SAAU,IACVohC,OAAQ,SAAC9qC,EAAO+qC,EAAKC,GACjB,IAAMtL,EAAY,EAAKvtB,OAAOC,WACxB64B,EAA4BpM,EAAyBa,EAAW,EAAKyK,gCAC3E,IAAKc,EACD,OAAQ,EAEZ,IAAMhrC,EAAWwN,EAAAA,EAAAA,KAAcs9B,GACzBG,EAAaF,EACd3qC,KAAI,SAAC8qC,EAAa7qC,GACnB,IA4FQ8qC,EAAaC,EA5FfC,EAAoBC,GAA4BZ,EAAmB1qC,EAAUkrC,EAAa,EAAKd,mBAC/FmB,EAAwB3M,EAAyBa,EAAiC,OAAtB4L,QAAoD,IAAtBA,OAA+B,EAASA,EAAkBG,4BAC1J,GAAKD,EAKL,MAAO,CAAElrC,MAAAA,EAAOorC,OAqFRN,EAvFsBH,EAA0BlqC,OAuFnCsqC,EAvF0CG,EAAsBzqC,OAwF1F8L,kBAAoBu+B,EAAYv+B,iBAC3Cw+B,EAAOt+B,cAAgBq+B,EAAYr+B,cAClCs+B,EAAOj+B,cAAgBg+B,EAAYh+B,eAC/Bi+B,EAAOj+B,gBAAkBg+B,EAAYh+B,eAClCi+B,EAAOp+B,WAAam+B,EAAYn+B,YA3FpBg+B,EAA0BhM,WAAWmB,WAAWoL,EAAsBvM,aACnD0M,aAAcH,EAAsBvM,WAAW/9B,OAAQiqC,YAAAA,EAClF,IACKphC,QAAO,SAAA1I,GAAI,OAAIA,GAAQA,EAAKqqC,KAAK,IAChCrsC,GAASusC,EAAAA,GAAAA,IAAUV,GAAYW,EAAAA,GAAAA,KAAU,SAAAC,GAAC,OAAIA,EAAEH,YAAY,GAAEI,GAAAA,KACpE,OAAO1sC,EAASA,EAAOiB,OAAS,CACpC,KAEJ,IAAI0rC,GAAyB,EAoB7B,EAAK9oC,UAAU+oC,EAAAA,GAAAA,KAAWtB,EAAkB3qC,MAAMksC,aAAnCD,EAAiD,SAAA9sC,GAlBxD6sC,IAGJA,GAAyB,EACzB,EAAK9oC,UAAUynC,EAAkBp/B,OAAOvM,MAAMmtC,WAAU,WACpD,EAAK/B,wBAAyB,EAC9B,EAAKhhB,QAAO,EAChB,KACA,EAAKlmB,UAAUynC,EAAkBp/B,OAAOvM,MAAMotC,WAAU,WACpD,EAAKhC,wBAAyB,EAC9B,EAAKI,mBAAmB9lC,WACxB,EAAK0kB,OAAO,EAAKkhB,UACrB,KACA,EAAKpnC,UAAUynC,EAAkBp/B,OAAOvM,MAAMqtC,YAAW,WACrD,EAAKjC,wBAAyB,EAC9B,EAAKhhB,QAAO,EAChB,KAIJ,IACJ,CAC4B,OAA5B,EAAKA,OAAO,EAAKkhB,WAAW,CAChC,CAmDC,OAlDD,2BAGA,WACI,GAAKzqC,KAAKyqC,UAGV,MAAO,CAAEgC,aAAczsC,KAAK0qC,wBAChC,GAAC,oBACD,SAAOgC,GACH,IAAMC,EAAsB3sC,KAAK4sC,qBAC7BC,GAAa,GAgDzB,SAA+BljC,EAAGC,GAC9B,GAAID,IAAMC,EACN,OAAO,EAEX,IAAKD,IAAMC,EACP,OAAO,EAEX,OAAOD,EAAEmjC,qBAAuBljC,EAAEkjC,oBAC9BnjC,EAAEojC,gBAAkBnjC,EAAEmjC,eF5IvB,SAA2CpjC,EAAGC,GACjD,OAAID,IAAMC,MAGLD,IAAMC,IAGJD,EAAEzI,MAAMgf,YAAYtW,EAAE1I,QAAUyI,EAAEy1B,aAAex1B,EAAEw1B,YAAcz1B,EAAEwZ,UAAYvZ,EAAEuZ,OAC5F,CEqIQ6pB,CAAkCrjC,EAAEiiC,2BAA4BhiC,EAAEgiC,2BAC1E,EAzDaqB,CAAsBjtC,KAAK0qC,wBAAyBiC,KACrD3sC,KAAK0qC,wBAA0BiC,EAC/BE,GAAa,GAEb7sC,KAAKyqC,YAAciC,IACnB1sC,KAAKyqC,UAAYiC,EACjBG,GAAa,GAEbA,GACA7sC,KAAK8+B,mBAAmBn5B,MAEhC,GAAC,gCACD,WACI,IAAMmlC,EAAoBC,GAAAA,kBAAAA,IAAsB/qC,KAAKsS,QACrD,GAAKw4B,GAGA9qC,KAAKuqC,uBAAV,CAGA,IAAM2C,EAAcpC,EAAkBp/B,OAAOvM,MAAMguC,iBACnD,GAAKD,EAIL,OAAOxB,GAA4BZ,EAAmB9qC,KAAKsS,OAAOiM,cAAe2uB,EAAY1rC,KAAMxB,KAAKwqC,kBANxG,CAOJ,GAAC,qCACD,WACI,IAAMM,EAAoBC,GAAAA,kBAAAA,IAAsB/qC,KAAKsS,QACjDw4B,GACAA,EAAkBsC,yBAE1B,GAAC,iCACD,WACI,IAAMtC,EAAoBC,GAAAA,kBAAAA,IAAsB/qC,KAAKsS,QACjDw4B,GACAA,EAAkBuC,qBAE1B,KAAC,EAxI6C,CAAStnC,EAAAA,IA4J3D,SAAS2lC,GAA4BZ,EAAmB1qC,EAAUoB,EAAM8rC,GAEpE,GAAIj9B,MAAM2Y,QAAQxnB,EAAK0lC,WAAWvH,sBAAwBn+B,EAAK0lC,WAAWvH,oBAAoBt+B,OAAS,EAEnG,MAAO,CACHyrC,mBAAoBtrC,EAAK0lC,WAAWrM,KACpCkS,eAAe,EACfnB,2BAA4B,CAExB1qC,MAAOoM,EAAAA,EAAAA,cAAoBlN,EAAUA,GACrCg/B,WAAY,GACZM,WAAY,GACZD,iBAAa5+B,EACb8+B,oBAAqB,KAIjC,IAAMP,EAAe59B,EAAK0lC,WAApB9H,WACF2N,GAAgB,EACpB,GAAsC,EAAlCvrC,EAAK0lC,WAAWqG,gBAAwE,CACxF,IAAMpF,GAAU,IAAIwB,EAAAA,IAAgBC,MAAMxK,GACpCj/B,EAAQ2qC,EAAkBx4B,OAAOC,WAGvC,GAAI41B,EAAQqF,SAASnsC,OAAS,IAC1B,OAEJosC,GAAAA,EAAAA,iBAAgCttC,EAAOC,EAAU+nC,GAAS,GAAM,GAChE/I,EAAa+I,EAAQnxB,WACrB+1B,GAAgB,CACpB,CACA,IAAMW,EAAO5C,EAAkB6C,iBAAiBnsC,EAAM8rC,GACtD,MAAO,CACHP,cAAAA,EACAD,mBAAoBtrC,EAAK0lC,WAAWrM,KACpC+Q,2BAA4B,CACxBxM,WAAYA,EACZM,WAAYN,EACZl+B,MAAOoM,EAAAA,EAAAA,cAAoBlN,EAAS2sB,MAAM,GAAI2gB,EAAKE,iBAAkBxtC,EAAS2sB,MAAM,EAAGvf,KAAKE,IAAIggC,EAAKG,eAAgB,KACrHpO,iBAAa5+B,EACb8+B,oBAAqB,IAGjC,CCjNA,IAAI35B,GAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HxD,EAAvHyD,EAAIC,UAAUjF,OAAQkF,EAAIF,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOI,OAAOC,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,kBAAZM,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIhE,EAAI6D,EAAW5E,OAAS,EAAGe,GAAK,EAAGA,KAASQ,EAAIqD,EAAW7D,MAAImE,GAAKF,EAAI,EAAIzD,EAAE2D,GAAKF,EAAI,EAAIzD,EAAEsD,EAAQC,EAAKI,GAAK3D,EAAEsD,EAAQC,KAASI,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOI,eAAeV,EAAQC,EAAKI,GAAIA,CAChE,EACIM,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUb,EAAQC,GAAOY,EAAUb,EAAQC,EAAKW,EAAa,CACxE,EACIpI,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAUIyuC,GAAyB,0CACzB,WAAYx7B,EAAQ2wB,EAAOrH,GAAyB,MAwCoD,OAxCpD,gBAChD,cAAMtpB,IACD2wB,MAAQA,EACb,EAAKrH,wBAA0BA,EAC/B,EAAKmS,iCAAmC,EAAK1qC,UAAU,IAAIgnC,GAAsC,EAAK/3B,QAEtG,WAAQ,IAAIhN,EAAIL,EAAI,OAAiG,QAAzFA,EAAiC,QAA3BK,EAAK,EAAK29B,MAAM9jC,aAA0B,IAAPmG,OAAgB,EAASA,EAAG0gC,YAAY,UAAuB,IAAP/gC,OAAgB,EAASA,EAAGmiC,wBAA0B,KACnL,EAAKhC,gBAAkB,EAAK/hC,UAAU,IAAI+/B,EAAAA,IAC1C,EAAK4K,gBAAkB,EAAK3qC,UAAU,IAAIK,EAAAA,IAAiB,kBAAM,EAAKuqC,aAAa,GAAE,KACrF,EAAK7J,qBAAuB,EAC5B,EAAK/gC,UAAU,EAAK0qC,iCAAiC/Z,aAAY,WAC7D,GAAK,EAAK1hB,OAAOH,WAAjB,CAIA,EAAK67B,gBAAgBnpC,WACM,EAAKkpC,iCAAiCtpC,QAE7D,EAAK2/B,qBAAuB,GAEhC,IAAM8J,EAAe,EAAK/J,UACtB+J,IACA,EAAK9J,qBAAuB52B,KAAKE,IAAI,EAAK02B,qBAA0B8J,EAAa3U,MAAM/4B,KAAI,SAAA09B,GAAC,OAAIA,EAAEC,MAAM98B,OAAS,CAAC,IA0GnH8sC,QAAO,SAACxkC,EAAGC,GAAC,OAAKD,EAAIC,CAAC,GAAE,KAxGvB,EAAKw6B,sBAAwB,EAC7B,EAAK2J,iCAAiCV,sBAGtC,EAAKU,iCAAiCX,0BAE1C,EAAKtO,mBAAmBn5B,MAhBxB,CAiBJ,KACA,EAAKtC,UAAU,EAAK4/B,MAAMjP,aAAY,WAClC,EAAK8K,mBAAmBn5B,MAC5B,KACA,EAAKtC,UAAU,EAAKiP,OAAOwxB,2BAA0B,SAACxkC,GAClD,EAAK8kC,qBAAuB,EAC5B,EAAK4J,gBAAgBnpC,WACrB,EAAKi6B,mBAAmBn5B,MAC5B,KACA,EAAKtC,WAAUoJ,EAAAA,EAAAA,KAAa,kBAAM,EAAKshC,iCAAiCX,yBAAyB,KAAG,CACxG,CAgFC,OAhFA,8BACD,WACI,YAAuDvsC,IAAhDb,KAAK+tC,iCAAiCtpC,KACjD,GAAC,wCACD,WAEI,OADuBzE,KAAKsS,OAAOjO,UAAU,KACvBk6B,OAC1B,GAAC,yBACD,WACI,OAAO7/B,GAAUsB,UAAM,OAAQ,GAAM,eAAE,wGACsB,IAAnDyE,EAAQzE,KAAK+tC,iCAAiCtpC,QACrCA,EAAMgoC,aAAY,iDASS,GANpCiB,EAAO,CACT/rB,KAAMld,EAAMgoC,aAAab,2BAA2BxM,WACpDl+B,MAAOuD,EAAMgoC,aAAab,2BAA2B1qC,MACrD6rC,cAAetoC,EAAMgoC,aAAaM,cAClCqB,eAAgB3pC,EAAMgoC,aAAaK,oBAEjC1sC,EAAWJ,KAAKsS,OAAOiM,eACzB9Z,EAAMgoC,aAAaM,eACuB,KAA1CtoC,EAAMgoC,aAAaK,oBACuB,KAA1CroC,EAAMgoC,aAAaK,oBACuB,KAA1CroC,EAAMgoC,aAAaK,mBAA0B,gBAE1B,OAAnB9sC,KAAKijC,MAAMp6B,QAAQ,0BAqBvB,OAlBMm+B,GAAUjtB,EAAAA,EAAAA,KAAwB,SAAC1Z,GAAK,OAAK3B,GAAU,OAAM,OAAQ,GAAM,eAAE,yFAGlE,OAHkE,kBAG5D4oC,GAAyBtnC,KAAK47B,wBAAwB4H,0BAA2BpjC,EAAUJ,KAAKsS,OAAOC,WAAY,CAAEiyB,YAAaD,EAAAA,GAAAA,UAAuCgD,uBAAwBmG,GAAQrtC,GAAM,OAA9Nb,EAAS,EAAH,4BAGe,OAHf,0BAGNgG,EAAAA,EAAAA,IAAkB,EAAD,IAAI,+BAGrBnF,EAAM6sB,wBAAyB,CAAF,gBACZ,OAAjB1tB,EAAOqN,UAAU,2BAGrB7M,KAAKijC,MAAMyE,SAAS1nC,KAAKsS,OAAQ9S,EAAQ+kC,EAAAA,GAAAA,WACzCvkC,KAAK8+B,mBAAmBn5B,OAAO,wDACjC,IACIgiC,EAAY,IAAIC,GAAgBZ,EAASzC,EAAAA,GAAAA,WAC/CvkC,KAAKolC,gBAAgBjmC,MAAQwoC,EAAU,UACjCX,EAAO,QACThnC,KAAKolC,gBAAgBjmC,QAAUwoC,GAC/B3nC,KAAKolC,gBAAgBv8B,QACxB,gDAET,GAAC,qBACD,WACI,IAAIvD,EAAIL,EAAIC,EACNmpC,EAA6BruC,KAAKquC,6BAClCluC,EAAQH,KAAKsS,OAAOC,WACpB+7B,EAAsBtP,EAAyB7+B,EAAiG,QAAzF8E,EAAiC,QAA3BK,EAAKtF,KAAKijC,MAAM9jC,aAA0B,IAAPmG,OAAgB,EAASA,EAAG0gC,YAAY,UAAuB,IAAP/gC,OAAgB,EAASA,EAAGmiC,0BACpLmH,EAAqBvuC,KAAK+tC,iCAAiCtpC,MAC3D+pC,EAA0BxP,EAAyB7+B,EAA0H,QAAlH+E,EAA4B,OAAvBqpC,QAAsD,IAAvBA,OAAgC,EAASA,EAAmB9B,oBAAiC,IAAPvnC,OAAgB,EAASA,EAAG0mC,4BACjN6C,EAA6BH,GAC5BE,GACAF,EAAoBlP,WAAWmB,WAAWiO,EAAwBpP,aAClEkP,EAAoBptC,MAAMgf,YAAYsuB,EAAwBttC,OACrE,GAAKmtC,GAA+BI,EAApC,CAIA,IAAMC,EAAkBD,EAA6BH,EAAuBE,GAA2BF,EACjGK,EAAgCF,EAA6BC,EAAgBtP,WAAW/9B,OAASmtC,EAAwBpP,WAAW/9B,OAAS,EAEnJ,OADqBrB,KAAK4uC,YAAYF,EAAiBC,EAJvD,CAMJ,GAAC,yBACD,SAAYzH,EAAYyH,GACpB,IAAM9oC,EAAO7F,KAAKsS,OAAO2S,aAAatjB,IAAI,KAAgCktC,YAC1E,OAAO3H,EACAtH,EAA4BsH,EAAYlnC,KAAKsS,OAAOC,WAAY1M,EAAM7F,KAAKsS,OAAOiM,cAAeowB,IAEhG,IAAInR,EAAU0J,EAAWhmC,MAAMqM,cAAe,GAAIvN,KAAKokC,2BACzDvjC,CACV,KAAC,EA1HwB,CAA2C+9B,GA4HxEkP,GAA4B9nC,GAAW,CACnCa,GAAQ,EAAGjF,EAAAA,IACZksC,I,eCzJC9nC,GAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HxD,EAAvHyD,EAAIC,UAAUjF,OAAQkF,EAAIF,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOI,OAAOC,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,kBAAZM,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIhE,EAAI6D,EAAW5E,OAAS,EAAGe,GAAK,EAAGA,KAASQ,EAAIqD,EAAW7D,MAAImE,GAAKF,EAAI,EAAIzD,EAAE2D,GAAKF,EAAI,EAAIzD,EAAEsD,EAAQC,EAAKI,GAAK3D,EAAEsD,EAAQC,KAASI,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOI,eAAeV,EAAQC,EAAKI,GAAIA,CAChE,EACIM,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUb,EAAQC,GAAOY,EAAUb,EAAQC,EAAKW,EAAa,CACxE,EACIpI,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EASayvC,GAAe,0CACxB,aAAc,MAKqD,OALrD,gBACV,eAASxoC,YACJw4B,mBAAqB,IAAIx7B,EAAAA,GAC9B,EAAK0wB,YAAc,EAAK8K,mBAAmBt7B,MAC3C,EAAKurC,oBAAqB,EAC1B,EAAKC,gBAAkB,EAAK3rC,UAAU,IAAI+/B,EAAAA,IAAqB,CACnE,CAgCC,OAhCA,iCACD,WACI,IAAI99B,EACJ,OAA6C,QAArCA,EAAKtF,KAAKgvC,gBAAgB7vC,aAA0B,IAAPmG,OAAgB,EAASA,EAAGqrB,MACrF,GAAC,4BACD,SAAexwB,GAAO,IACdmF,ENtCwBqrB,EAAQkX,EMqClB,QAEyB,QAArCviC,EAAKtF,KAAKgvC,gBAAgB7vC,aAA0B,IAAPmG,OAAgB,EAASA,EAAGqrB,UAAYxwB,IAG3FH,KAAKgvC,gBAAgBnmC,QACrB7I,KAAKgvC,gBAAgB7vC,MAAQgB,GN3CDwwB,EM2C6BxwB,EN3CrB0nC,EM2C4B1nC,EAAM6zB,aAAY,WAC9E,EAAK+a,oBAAqB,EAC1B,EAAKjQ,mBAAmBn5B,MAC5B,IN7CG,CACHgrB,OAAAA,EACA9jB,QAAS,kBAAqB,OAAfg7B,QAAsC,IAAfA,OAAwB,EAASA,EAAWh7B,SAAS,SM2CrFhM,EACNb,KAAK+uC,oBAAqB,EAC1B/uC,KAAK8+B,mBAAmBn5B,OAC5B,GAAC,qBACD,WACI,IAAIL,EAAIL,EAKR,OAJKjF,KAAK+uC,qBACN/uC,KAAKivC,gBAA8G,QAA3FhqC,EAA2C,QAArCK,EAAKtF,KAAKgvC,gBAAgB7vC,aAA0B,IAAPmG,OAAgB,EAASA,EAAGqrB,cAA2B,IAAP1rB,OAAgB,EAASA,EAAGk/B,UACvJnkC,KAAK+uC,oBAAqB,GAEvB/uC,KAAKivC,eAChB,GAAC,yBACD,SAAYlQ,GACR,IAAIz5B,EACwB,QAA3BA,EAAKtF,KAAKkvC,mBAAgC,IAAP5pC,GAAyBA,EAAG++B,YAAYtF,EAChF,GAAC,gCACD,WACI,OAAO/+B,KAAKkvC,YAAclvC,KAAKkvC,YAAY9K,qBAAuB,CACtE,KAAC,EAvCuB,CAASr+B,EAAAA,IA4CjCopC,GAAc,0CACd,WAAY78B,EAAQ88B,GAAsB,MAUnB,OAVmB,gBACtC,gBACK98B,OAASA,EACd,EAAK88B,qBAAuBA,EAC5B,EAAKC,YAAc,EAAKhsC,UAAU,IAAIisC,IACtC,EAAKC,0BAA4B,EAAKlsC,UAAU,EAAK+rC,qBAAqB9nC,eAAewmC,GAA2B,EAAKx7B,OAAQ,EAAK+8B,cACtI,EAAKG,uBAAyB,EAAKnsC,UAAU,EAAK+rC,qBAAqB9nC,eAAe07B,EAAwB,EAAK1wB,OAAQ,EAAK+8B,cAChI,EAAKhsC,UAAU,EAAKksC,0BAA0Bvb,aAAY,WACtD,EAAKyb,aACT,KACA,EAAKA,cAAc,CACvB,CA+CC,OA/CA,kDACD,WACI,GAAIzvC,KAAKkvC,cAAgBlvC,KAAKwvC,uBAC1B,OAAOxvC,KAAKwvC,sBAGpB,GAAC,yBACD,WACIxvC,KAAK0vC,eAAe1vC,KAAKuvC,0BAA0BI,SAC7C3vC,KAAKuvC,0BACLvvC,KAAKwvC,wBACXxvC,KAAKwvC,uBAAuBI,UAAU5vC,KAAKkvC,cAAgBlvC,KAAKwvC,uBACpE,GAAC,+BACD,SAAkBK,GACd,IAAIvqC,EACE6+B,EAAyD,QAA5C7+B,EAAKtF,KAAK8vC,oCAAiD,IAAPxqC,OAAgB,EAASA,EAAG6+B,UACnG,QAAIA,GACOA,EAAU5K,MAAMwW,MAAK,SAAA7R,GAAC,OAAI2R,EAAWG,iBAAiB,IAAIpiC,EAAAA,EAASu2B,EAAU3xB,WAAY0rB,EAAE1f,QAAQ,GAGlH,GAAC,qCACD,WACI,IAAIlZ,EACyC,QAA5CA,EAAKtF,KAAK8vC,oCAAiD,IAAPxqC,GAAyBA,EAAGokB,QAAQ6a,EAAAA,GAAAA,SAC7F,GAAC,oCACD,WACI,IAAIj/B,EACyC,QAA5CA,EAAKtF,KAAK8vC,oCAAiD,IAAPxqC,GAAyBA,EAAG2qC,yBACrF,GAAC,kCACD,WACI,IAAI3qC,EACyC,QAA5CA,EAAKtF,KAAK8vC,oCAAiD,IAAPxqC,GAAyBA,EAAGoD,MACrF,GAAC,sCACD,WACI,IAAIpD,EACyC,QAA5CA,EAAKtF,KAAK8vC,oCAAiD,IAAPxqC,GAAyBA,EAAG4qC,UACrF,GAAC,0CACD,WACI,IAAI5qC,EACyC,QAA5CA,EAAKtF,KAAK8vC,oCAAiD,IAAPxqC,GAAyBA,EAAG6qC,cACrF,GAAC,0CACD,WACI,IAAI7qC,EACJ,OAAO5G,GAAUsB,UAAM,OAAQ,GAAM,eAAE,yFACpB,OADoB,SACgC,QAA5CsF,EAAKtF,KAAK8vC,oCAAiD,IAAPxqC,OAAgB,EAASA,EAAGy/B,+BAA+B,OAA1H,OAANvlC,EAAS,EAAH,4BACMqB,IAAXrB,GAAuBA,GAAc,+CAEpD,KAAC,EA3Da,CAAgCsvC,IA6DlDK,GAAiBnpC,GAAW,CACxBa,GAAQ,EAAGmH,GAAAA,KACZmhC,IAEI,IC9HH7pC,GD8HSgqC,GAA2B,0CACpC,aAAc,MAI2C,OAJ3C,gBACV,eAAShpC,YACJw4B,mBAAqB,IAAIx7B,EAAAA,GAC9B,EAAK0wB,YAAc,EAAK8K,mBAAmBt7B,MAC3C,EAAKy/B,MAAQ,EAAK5/B,UAAU,IAAI+/B,EAAAA,IAAqB,CACzD,CAYC,OAZA,2BACD,WACI,OAAOpjC,KAAKijC,MAAM9jC,KACtB,GAAC,sBACD,SAASmT,EAAQm2B,EAAmBjE,GAAa,WAC7CxkC,KAAKijC,MAAM9jC,MAAQ,IAAIqpC,GAAmCC,EAAmBn2B,GAAQ,kBAAM,EAAKwsB,mBAAmBn5B,MAAM,GAAE6+B,EAC/H,GAAC,0BACD,WACI,OAAOxkC,KAAKijC,MAAM8E,cACtB,GAAC,mBACD,WACI/nC,KAAKijC,MAAMp6B,OACf,KAAC,EAlBmC,CAAS9C,EAAAA,I,6ICvI7CC,GAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HxD,EAAvHyD,EAAIC,UAAUjF,OAAQkF,EAAIF,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOI,OAAOC,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,kBAAZM,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIhE,EAAI6D,EAAW5E,OAAS,EAAGe,GAAK,EAAGA,KAASQ,EAAIqD,EAAW7D,MAAImE,GAAKF,EAAI,EAAIzD,EAAE2D,GAAKF,EAAI,EAAIzD,EAAEsD,EAAQC,EAAKI,GAAK3D,EAAEsD,EAAQC,KAASI,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOI,eAAeV,EAAQC,EAAKI,GAAIA,CAChE,EACIM,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUb,EAAQC,GAAOY,EAAUb,EAAQC,EAAKW,EAAa,CACxE,EAoBMspC,GAA0C,QAA9B9qC,GAAK+qC,OAAOC,oBAAiC,IAAPhrC,QAAgB,EAASA,GAAGirC,aAAa,kBAAmB,CAAEC,WAAY,SAAArxC,GAAK,OAAIA,CAAK,IAC5IsxC,GAAe,0CACf,WAAYn+B,EAAQnS,EAAOivC,EAAsBp8B,GAAiB,MAgChD,OAhCgD,gBAC9D,gBACKV,OAASA,EACd,EAAKnS,MAAQA,EACb,EAAKivC,qBAAuBA,EAC5B,EAAKp8B,gBAAkBA,EACvB,EAAKswB,UAAW,EAChB,EAAKoN,YAAc,EAAKrtC,UAAU,EAAK+rC,qBAAqB9nC,eAAeqpC,GAAmB,EAAKr+B,SACnG,EAAKs+B,sBAAwB,EAAKvtC,UAAU,IAAIwtC,GAAsB,EAAKv+B,OAAQ,EAAKU,gBAAgB89B,kBACxG,EAAKC,2BAAwBlwC,EAC7B,EAAKmwC,sBAAwB,EAAK3tC,UAAU,IAAI4tC,GAAsB,EAAK3+B,SAC3E,EAAKjP,UAAU,EAAKiP,OAAOzD,0BAAyB,SAACvP,IAC7CA,EAAEwP,WAAW,KACVxP,EAAEwP,WAAW,MACbxP,EAAEwP,WAAW,KACbxP,EAAEwP,WAAW,KACbxP,EAAEwP,WAAW,KACbxP,EAAEwP,WAAW,KACbxP,EAAEwP,WAAW,MAChB,EAAKya,QAEb,KACA,EAAKlmB,WAAUoJ,EAAAA,EAAAA,KAAa,WACxB,IAAInH,EACJ,EAAKg+B,UAAW,EAChB,EAAK/Z,SACiC,QAArCjkB,EAAK,EAAKyrC,6BAA0C,IAAPzrC,GAAyBA,EAAGuH,UAC1E,EAAKkkC,2BAAwBlwC,CACjC,KACA,EAAKwC,UAAUlD,EAAM6zB,aAAY,WAC7B,EAAKzK,QACT,KACA,EAAKA,SAAS,CAClB,CA4GC,OA5GA,iDACD,SAA0B2nB,GACtB,OAAQlxC,KAAK4wC,sBAAsBM,aAAeA,CACtD,GAAC,oBACD,WACI,IAAI5rC,EACE6+B,EAAYnkC,KAAKG,MAAMgkC,UAC7B,IAAKnkC,KAAKsS,OAAOH,aAAegyB,GAAankC,KAAKsjC,SAI9C,OAHAtjC,KAAK0wC,YAAY7nC,QACjB7I,KAAK4wC,sBAAsB/nC,aAC3B7I,KAAKgxC,sBAAsBnoC,QAG/B,IAAMsoC,EAAc,IAAI9gC,MAClB+gC,EAAkB,IAAI/gC,MAC5B,SAASghC,EAAqBlT,EAAOpwB,GACjC,GAAIqjC,EAAgB/vC,OAAS,EAAG,CAC5B,IAAMiwC,EAAWF,EAAgBA,EAAgB/vC,OAAS,GACtD0M,GACAujC,EAAS7uB,YAAYtd,KAAK,IAAIosC,GAAAA,GAAeD,EAASnZ,QAAQ92B,OAAS,EAAGiwC,EAASnZ,QAAQ92B,OAAS,EAAI88B,EAAM,GAAG98B,OAAQ0M,EAAW,IAExIujC,EAASnZ,SAAWgG,EAAM,GAC1BA,EAAQA,EAAMv4B,MAAM,EACxB,CAAC,IACuB,EADvB,UACkBu4B,GAAK,IAAxB,IAAK,EAAL,qBAA0B,KAAf1P,EAAI,QACX2iB,EAAgBjsC,KAAK,CACjBgzB,QAAS1J,EACThM,YAAa1U,EAAY,CAAC,IAAIwjC,GAAAA,GAAe,EAAG9iB,EAAKptB,OAAS,EAAG0M,EAAW,IAAyC,IAE7H,CAAC,+BACL,CACIo2B,aAAqB3F,EACrBx+B,KAAKgxC,sBAAsBQ,eAAe,CACtC,CACItwC,MAAO,IAAIoM,EAAAA,EAAM62B,EAAU3xB,WAAY2xB,EAAU1F,YAAa0F,EAAU3xB,WAAY2xB,EAAU1F,YAAc0F,EAAU9iC,QACtHkL,QAAS,CACL+rB,gBAAiB,oCACjBxqB,YAAa,2BAMzB9N,KAAKgxC,sBAAsBQ,eAAe,IAE9C,IAGkC,EAH5BC,EAAiBzxC,KAAKsS,OAAOC,WAAWuS,eAAeqf,EAAU3xB,YACnEk/B,OAAwB7wC,EACxB8wC,EAAU,EAAE,UACGxN,EAAU5K,OAAK,IAAlC,IAAK,EAAL,qBAAoC,KAAzBpK,EAAI,QACPgP,EAAQhP,EAAKgP,WACat9B,IAA1B6wC,GACAP,EAAYhsC,KAAK,CACbqZ,OAAQ2Q,EAAK3Q,OACbmD,KAAMwc,EAAM,GACZI,QAASpP,EAAKoP,UAElBJ,EAAQA,EAAMv4B,MAAM,IAGpByrC,EAAqB,CAACI,EAAe5rB,UAAU8rB,EAASxiB,EAAK3Q,OAAS,SAAK3d,GAE3Es9B,EAAM98B,OAAS,IACfgwC,EAAqBlT,EAAO,mBACEt9B,IAA1B6wC,GAAuCviB,EAAK3Q,QAAUizB,EAAepwC,SACrEqwC,EAAwBviB,EAAK3Q,SAGrCmzB,EAAUxiB,EAAK3Q,OAAS,CAC5B,CAAC,oCAC6B3d,IAA1B6wC,GACAL,EAAqB,CAACI,EAAe5rB,UAAU8rB,SAAW9wC,GAE9Db,KAAK0wC,YAAYkB,SAASzN,EAAU3xB,WAAY2+B,OAAuCtwC,IAA1B6wC,EAAsC,CAAElzB,OAAQkzB,EAAuBrwC,OAAQowC,EAAepwC,OAAS,EAAIqwC,QAA0B7wC,GAClMb,KAAK4wC,sBAAsBiB,YAAY1N,EAAU3xB,WAAY4+B,EAAiBjN,EAAU1G,6BAM9C,QAArCn4B,EAAKtF,KAAK+wC,6BAA0C,IAAPzrC,GAAyBA,EAAGuH,UAC1E7M,KAAK+wC,2BAAwBlwC,CAErC,GAAC,iCACD,SAAoBT,EAAU6pB,EAAe6nB,GAAsB,WACzDC,EAAW/xC,KAAKsS,OAAOjO,UAAU,IACjC2tC,EAAU3mC,SAAS4mC,cAAc,OACvCD,EAAQjkC,UAAY,qCACpB0C,EAAAA,GAAAA,GAAcuhC,EAASD,GACvB,IAAMG,EAAS7mC,SAAS4mC,cAAc,QACtCC,EAAOnkC,UAAY,iBACnBmkC,EAAO1gC,OAAOyY,GACd+nB,EAAQxgC,OAAO0gC,GACf,IAAMC,EAAU9mC,SAAS4mC,cAAc,QACvCE,EAAQpkC,UAAY,uCACpBokC,EAAQ3gC,OAAO,YACfwgC,EAAQxgC,OAAO2gC,GACf,IAAMC,EAAkB,IAAIpnC,EAAAA,GACtBqnC,EAAShnC,SAAS4mC,cAAc,OAUtC,OATAI,EAAOtkC,UAAY,8BACnBskC,EAAO7gC,OAAO,IAAD,OAAKsgC,EAAoB,iBACtCM,EAAgBlnC,IAAIjE,GAAIsB,8BAA8B8pC,EAAQ,aAAa,SAAC/yC,GACxE,IAAIgG,EACkB,QAArBA,EAAK,EAAKnF,aAA0B,IAAPmF,GAAyBA,EAAG++B,aAAY,GACtE/kC,EAAE8X,iBACF,EAAK9E,OAAOvI,OAChB,KACAioC,EAAQxgC,OAAO6gC,GACR,IAAIC,GAA2BtyC,KAAKsS,OAAQlS,EAAU4xC,EAASI,EAC1E,KAAC,EA9Ic,CAAiCrsC,EAAAA,IAgJpD0qC,GAAkBzqC,GAAW,CACzBa,GAAQ,EAAGmH,GAAAA,IACXnH,GAAQ,EAAG+W,GAAAA,IACZ6yB,IACwB,IACrBQ,GAAqB,WACvB,WAAY3+B,IAAQ,eAChBtS,KAAKsS,OAASA,EACdtS,KAAK4oC,cAAgB,EACzB,CAYC,OAZA,sCACD,SAAenmB,GAAa,WAExBziB,KAAKsS,OAAOmoB,mBAAkB,SAAAl5B,GAC1B,EAAKqnC,cAAgBrnC,EAASo5B,iBAAiB,EAAKiO,cAAenmB,EACvE,GACJ,GAAC,mBACD,WACIziB,KAAKwxC,eAAe,GACxB,GAAC,qBACD,WACIxxC,KAAK6I,OACT,KAAC,EAhBsB,GAkBrB8nC,GAAiB,WACnB,WAAYr+B,IAAQ,eAChBtS,KAAKsS,OAASA,EACdtS,KAAK4oC,cAAgB,EACzB,CAsCC,OAtCA,+BACD,WACI5oC,KAAK6I,OACT,GAAC,mBACD,WAAQ,WAEJ7I,KAAKsS,OAAOmoB,mBAAkB,SAAAl5B,GAC1B,EAAKqnC,cAAgBrnC,EAASo5B,iBAAiB,EAAKiO,cAAe,GACvE,GACJ,GAAC,sBACD,SAASp2B,EAAY+mB,EAAOgZ,GAAY,WAEpC,GADkBvyC,KAAKsS,OAAOC,WAC9B,CAGA,IAAMigC,EAAwB,IAAIniC,MAC9BkiC,GACAC,EAAsBrtC,KAAK,CACvBjE,MAAOoM,EAAAA,EAAAA,cAAoB,IAAIM,EAAAA,EAAS4E,EAAY+/B,EAAW/zB,QAAS,IAAI5Q,EAAAA,EAAS4E,EAAY+/B,EAAW/zB,OAAS+zB,EAAWlxC,SAChIkL,QAAS,CACL+rB,gBAAiB,oBACjBxqB,YAAa,uBAKzB9N,KAAKsS,OAAOmoB,mBAAkB,SAAAl5B,GAC1B,EAAKqnC,cAAgBrnC,EAASo5B,iBAAiB,EAAKiO,cAAerP,EAAM/4B,KAAI,SAAA09B,GACzE,MAAQ,CACJh9B,MAAOoM,EAAAA,EAAAA,cAAoB,IAAIM,EAAAA,EAAS4E,EAAY0rB,EAAE1f,SACtDjS,QAAS,CACLuB,YAAa,aACb2kC,MAAO,CAAEta,QAAS+F,EAAEvc,KAAM2W,gBAAiB4F,EAAEK,QAAU,gCAAkC,wBAAyBnG,YAAaW,GAAAA,GAAAA,MAC/HjmB,iBAAiB,GAG7B,IAAGpN,OAAO8sC,GACd,GAvBA,CAwBJ,KAAC,EA1CkB,GA4CjB3B,GAAqB,WACvB,WAAYv+B,EAAQw+B,IAAiB,eACjC9wC,KAAKsS,OAASA,EACdtS,KAAK8wC,gBAAkBA,EACvB9wC,KAAK0yC,iBAAc7xC,CACvB,CAoCC,OApCA,gCACD,WAAmB,OAAOb,KAAK0yC,WAAa,GAAC,qBAC7C,WACI1yC,KAAK6I,OACT,GAAC,mBACD,WAAQ,WACJ7I,KAAKsS,OAAOqgC,iBAAgB,SAAC9J,GACrB,EAAK6J,cACL7J,EAAe+J,WAAW,EAAKF,aAC/B,EAAKA,iBAAc7xC,EAE3B,GACJ,GAAC,yBACD,SAAY2R,EAAY4+B,EAAiBhN,GAAsB,WACrDvE,EAAY7/B,KAAKsS,OAAOC,WAC9B,GAAKstB,EAAL,CAGA,IAAQ7b,EAAY6b,EAAU5a,aAAtBjB,QACRhkB,KAAKsS,OAAOqgC,iBAAgB,SAAC9J,GACrB,EAAK6J,cACL7J,EAAe+J,WAAW,EAAKF,aAC/B,EAAKA,iBAAc7xC,GAEvB,IAAMgyC,EAAgBrlC,KAAKE,IAAI0jC,EAAgB/vC,OAAQ+iC,GACvD,GAAIyO,EAAgB,EAAG,CACnB,IAAMb,EAAU3mC,SAAS4mC,cAAc,QAYvD,SAAqBD,EAAShuB,EAASma,EAAOvX,EAAMkqB,GAChD,IAAMgC,EAAgClsB,EAAKjlB,IAAI,IACzCoxC,EAAyBnsB,EAAKjlB,IAAI,KAElCqxC,EAAmB,OACnBC,EAA0BrsB,EAAKjlB,IAAI,IACnCuxC,EAAgBtsB,EAAKjlB,IAAI,IACzBowC,EAAWnrB,EAAKjlB,IAAI,IACpBoO,EAAa6W,EAAKjlB,IAAI,IACtBwxC,GAAKC,EAAAA,GAAAA,IAAoB,KAC/BD,EAAGE,kBAAkB,sCACrB,IAAK,IAAIjxC,EAAI,EAAGmgC,EAAMpE,EAAM98B,OAAQe,EAAImgC,EAAKngC,IAAK,CAC9C,IAAMkxC,EAAWnV,EAAM/7B,GACjBqsB,EAAO6kB,EAASnb,QACtBgb,EAAGE,kBAAkB,yBACrBF,EAAGE,kBAAkB,iBACrBF,EAAGE,kBAAkBt6B,OAAO3W,EAAI2N,IAChCojC,EAAGE,kBAAkB,yBACrB,IAAME,EAAe3tB,EAAAA,GAAqB6I,GACpC+kB,EAAc5tB,EAAAA,GAAoB6I,GAClCglB,EAAaC,GAAAA,EAAAA,YAAuBjlB,EAAMqiB,IAChD6C,EAAAA,GAAAA,IAAe,IAAIC,GAAAA,GAAiB7B,EAAS8B,cAAgBf,EAAgCf,EAAS+B,+BAAgCrlB,GAAM,EAAO8kB,EAAcC,EAAa,EAAGC,EAAYH,EAAS7wB,YAAauB,EAAS,EAAG+tB,EAASgC,WAAYhC,EAASiC,YAAajC,EAASkC,cAAelB,EAAwBC,EAAkBC,EAAyBC,IAAkBgB,GAAAA,GAAAA,IAAyB,MAAOf,GACvZA,EAAGE,kBAAkB,SACzB,CACAF,EAAGE,kBAAkB,WACrB5iC,EAAAA,GAAAA,GAAcuhC,EAASD,GACvB,IAAMoC,EAAOhB,EAAGiB,QACVC,EAAcjE,GAAWA,GAASI,WAAW2D,GAAQA,EAC3DnC,EAAQsC,UAAYD,CACxB,CAxCgBE,CAAYvC,EAAShuB,EAASotB,EAAiB,EAAK9+B,OAAO2S,aAAc,EAAK6rB,iBAC9E,EAAK4B,YAAc7J,EAAe2L,QAAQ,CACtCC,gBAAiBjiC,EACjBqgC,cAAeA,EACfb,QAAAA,EACA0C,oBAAqB,GAE7B,CACJ,GAlBA,CAmBJ,KAAC,EAzCsB,GAwE1B,IACKpC,GAA0B,0CAC5B,WAAYhgC,EAAQlS,EAAU4xC,EAASI,GAAiB,MAWjB,OAXiB,gBACpD,gBACK9/B,OAASA,EACd,EAAKlS,SAAWA,EAChB,EAAK4xC,QAAUA,EACf,EAAK3jC,qBAAsB,EAC3B,EAAKsmC,mBAAoB,EACzB,EAAKtxC,UAAU+uC,GACf,EAAK/uC,WAAUoJ,EAAAA,EAAAA,KAAa,WACxB,EAAK6F,OAAOnD,qBAAoB,WACpC,KACA,EAAKmD,OAAOrD,kBAAiB,YAAM,CACvC,CAYC,OAZA,6BACD,WACI,MAAO,mCACX,GAAC,wBACD,WACI,OAAOjP,KAAKgyC,OAChB,GAAC,yBACD,WACI,MAAO,CACH5xC,SAAUJ,KAAKI,SACfoP,WAAY,CAAC,GAErB,KAAC,EAzB2B,CAASzJ,EAAAA,KA2BzCsU,EAAAA,GAAAA,KAA2B,SAACC,EAAOC,GAC/B,IAAMq6B,EAAat6B,EAAMG,SAASo6B,GAAAA,IAC9BD,IAEAr6B,EAAUI,QAAQ,kDAAD,OAAmDi6B,EAAW59B,WAAU,mBACzFuD,EAAUI,QAAQ,0DAAD,OAA2Di6B,EAAW59B,WAAU,mBACjGuD,EAAUI,QAAQ,6DAAD,OAA8Di6B,EAAW59B,WAAU,oBAExG,IAAM89B,EAAax6B,EAAMG,SAASs6B,GAAAA,IAC9BD,IACAv6B,EAAUI,QAAQ,6DAAD,OAA8Dm6B,EAAW99B,WAAU,QACpGuD,EAAUI,QAAQ,qEAAD,OAAsEm6B,EAAW99B,WAAU,QAC5GuD,EAAUI,QAAQ,wEAAD,OAAyEm6B,EAAW99B,WAAU,SAEnH,IAAM4M,EAAStJ,EAAMG,SAASu6B,GAAAA,IAC1BpxB,IACArJ,EAAUI,QAAQ,wEAAD,OAAyEiJ,EAAM,QAChGrJ,EAAUI,QAAQ,6DAAD,OAA8DiJ,EAAM,QACrFrJ,EAAUI,QAAQ,qEAAD,OAAsEiJ,EAAM,QAErG,I,4BCxWI5d,GAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HxD,EAAvHyD,EAAIC,UAAUjF,OAAQkF,EAAIF,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOI,OAAOC,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,kBAAZM,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIhE,EAAI6D,EAAW5E,OAAS,EAAGe,GAAK,EAAGA,KAASQ,EAAIqD,EAAW7D,MAAImE,GAAKF,EAAI,EAAIzD,EAAE2D,GAAKF,EAAI,EAAIzD,EAAEsD,EAAQC,EAAKI,GAAK3D,EAAEsD,EAAQC,KAASI,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOI,eAAeV,EAAQC,EAAKI,GAAIA,CAChE,EACIM,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUb,EAAQC,GAAOY,EAAUb,EAAQC,EAAKW,EAAa,CACxE,EACIpI,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAYI41C,GAAmB,0CACnB,WAAY3iC,EAAQ88B,GAAsB,MAkBT,OAlBS,gBACtC,gBACK98B,OAASA,EACd,EAAK88B,qBAAuBA,EAC5B,EAAK8F,qBAAsB,EAC3B,EAAKC,iBAAmB,EAAK9xC,UAAU,IAAI+/B,EAAAA,IAC3C,EAAKgS,4BAA8B,EAAK/xC,UAAU,IAAIC,EAAAA,IACtD,EAAKD,UAAU,EAAKiP,OAAOiK,kBAAiB,WACxC,EAAK84B,uBACT,KACA,EAAKhyC,UAAU,EAAKiP,OAAOzD,0BAAyB,SAACvP,GAC7CA,EAAEwP,WAAW,MACb,EAAKumC,wBAEL/1C,EAAEwP,WAAW,KACb,EAAKumC,uBAEb,KACA,EAAKA,wBAAwB,CACjC,CAGC,OAHA,iCAID,WACI,IAAI/vC,EACJ,OAA8C,QAAtCA,EAAKtF,KAAKm1C,iBAAiBh2C,aAA0B,IAAPmG,OAAgB,EAASA,EAAGnF,KACtF,GACA,mCACA,WACI,IAAMm1C,EAAiBt1C,KAAKsS,OAAOjO,UAAU,KACvCkxC,EAAuBv1C,KAAKsS,OAAOjO,UAAU,IACnDrE,KAAKm1C,iBAAiBh2C,WAAQ0B,EAE9Bb,KAAKm1C,iBAAiBh2C,MAClBa,KAAKsS,OAAOH,aAAemjC,EAAe/W,SAAWgX,EAAqB75B,SAAW1b,KAAKk1C,qBACpFl1C,KAAKovC,qBAAqB9nC,eAAekuC,GAA2Bx1C,KAAKsS,aACzEzR,EACVb,KAAKo1C,4BAA4BzvC,MACrC,GAAC,+BACD,SAAkBkqC,GACd,IAAIvqC,EACJ,OAAoC,QAA3BA,EAAKtF,KAAKy1C,mBAAgC,IAAPnwC,OAAgB,EAASA,EAAGowC,kBAAkB7F,MAAgB,CAC9G,GAAC,uCACD,SAA0BqB,GACtB,IAAI5rC,EAAIL,EACR,OAAqG,QAA5FA,EAA4C,QAAtCK,EAAKtF,KAAKm1C,iBAAiBh2C,aAA0B,IAAPmG,OAAgB,EAASA,EAAGoG,cAA2B,IAAPzG,OAAgB,EAASA,EAAG0wC,0BAA0BzE,MAAgB,CACvL,GAAC,qBACD,WACI,IAAI5rC,EACJtF,KAAKk1C,qBAAsB,EACtBl1C,KAAKm1C,iBAAiBh2C,OACvBa,KAAKq1C,wBAEmB,QAA3B/vC,EAAKtF,KAAKy1C,mBAAgC,IAAPnwC,GAAyBA,EAAGswC,yBACpE,GAAC,oBACD,WACI,IAAItwC,EACwB,QAA3BA,EAAKtF,KAAKy1C,mBAAgC,IAAPnwC,GAAyBA,EAAGuwC,wBACpE,GAAC,kBACD,WACI,IAAIvwC,EACwB,QAA3BA,EAAKtF,KAAKy1C,mBAAgC,IAAPnwC,GAAyBA,EAAGwwC,sBACpE,GAAC,sCACD,WACI,IAAIxwC,EACwB,QAA3BA,EAAKtF,KAAKy1C,mBAAgC,IAAPnwC,GAAyBA,EAAGu/B,0BACpE,GAAC,0CACD,WACI,IAAIv/B,EACwB,QAA3BA,EAAKtF,KAAKy1C,mBAAgC,IAAPnwC,GAAyBA,EAAGw/B,8BACpE,GAAC,0CACD,WACI,IAAIx/B,EACJ,OAAO5G,GAAUsB,UAAM,OAAQ,GAAM,eAAE,yFACpB,OADoB,SACe,QAA3BsF,EAAKtF,KAAKy1C,mBAAgC,IAAPnwC,OAAgB,EAASA,EAAGy/B,+BAA+B,OAAzG,OAANvlC,EAAS,EAAH,4BACMqB,IAAXrB,GAAuBA,GAAc,+CAEpD,IAAC,kBAzDD,SAAW8S,GACP,OAAOA,EAAOqL,gBAAgBs3B,EAAoB7lC,GACtD,KAAC,EAvBkB,CAAqCrJ,EAAAA,IAgF5DkvC,GAAoBc,wBAA0B,IAAIC,GAAAA,GAAc,2BAA2B,EAAO39B,GAAAA,GAAa,0BAA2B,4CAC1I48B,GAAoBgB,+BAAiC,IAAID,GAAAA,GAAc,kCAAkC,EAAO39B,GAAAA,GAAa,iCAAkC,yDAC/J48B,GAAoBiB,8CAAgD,IAAIF,GAAAA,GAAc,iDAAiD,EAAM39B,GAAAA,GAAa,gDAAiD,yGAC3M48B,GAAoB7lC,GAAK,qCACzB6lC,GAAsBjvC,GAAW,CAC7Ba,GAAQ,EAAGmH,GAAAA,KACZinC,IAC4B,IACzBkB,IAAoB,QACtB,WAAYrkB,IAAmB,eAC3B9xB,KAAK8xB,kBAAoBA,EACzB9xB,KAAKo2C,wBAA0BnB,GAAoBc,wBAAwBM,OAAOr2C,KAAK8xB,mBACvF9xB,KAAKs2C,oCAAsCrB,GAAoBgB,+BAA+BI,OAAOr2C,KAAK8xB,mBAC1G9xB,KAAKu2C,mDAAqDtB,GAAoBiB,8CAA8CG,OAAOr2C,KAAK8xB,kBAC5I,IAMA0jB,GAAyB,0CACzB,WAAYljC,EAAQ88B,EAAsBtd,GAAmB,MAgBhC,OAhBgC,gBACzD,gBACKxf,OAASA,EACd,EAAK88B,qBAAuBA,EAC5B,EAAKtd,kBAAoBA,EACzB,EAAK0kB,YAAc,IAAIL,GAAqB,EAAKrkB,mBACjD,EAAK3xB,MAAQ,EAAKkD,UAAU,EAAK+rC,qBAAqB9nC,eAAe6nC,GAAgB,EAAK78B,SAC1F,EAAK5G,OAAS,EAAKrI,UAAU,EAAK+rC,qBAAqB9nC,eAAempC,GAAiB,EAAKn+B,OAAQ,EAAKnS,QACzG,EAAKkD,WAAUoJ,EAAAA,EAAAA,KAAa,WACxB,EAAK+pC,YAAYJ,wBAAwB9pC,KAAI,GAC7C,EAAKkqC,YAAYF,oCAAoChqC,KAAI,GACzD,EAAKkqC,YAAYD,mDAAmDjqC,KAAI,EAC5E,KACA,EAAKjJ,UAAU,EAAKlD,MAAM6zB,aAAY,WAClC,EAAKyiB,mBACT,KACA,EAAKA,oBAAoB,CAC7B,CAyBC,OAzBA,yCACD,WACI,IAAInxC,EACJtF,KAAKw2C,YAAYJ,wBAAwB9pC,SAA2GzL,KAAnD,QAAlDyE,EAAKtF,KAAKG,MAAM2vC,oCAAiD,IAAPxqC,OAAgB,EAASA,EAAG6+B,YACrI,IAAIuS,GAAwB,EACxBC,GAAuC,EACrCxS,EAAYnkC,KAAKG,MAAMqvC,uBAAuBrL,UACpD,GAAMnkC,KAAKG,MAAM2vC,8BAAgC3L,GAAaA,EAAU5K,MAAMl4B,OAAS,EAAG,CACtF,MAA0B8iC,EAAU5K,MAAM,GAAlC/a,EAAM,EAANA,OACFo4B,EADe,EAALzY,MACQ,GAGxB,GADsB3f,GADOxe,KAAKsS,OAAOC,WAAW6zB,oBAAoBjC,EAAU3xB,YAE/D,CACf,IAAIqkC,GAAgBC,EAAAA,EAAAA,IAAwBF,IACrB,IAAnBC,IACAA,EAAgBD,EAAUv1C,OAAS,GAEvCq1C,EAAwBG,EAAgB,EACxC,IAAM7yB,EAAUhkB,KAAKsS,OAAOC,WAAW0S,aAAajB,QAEpD2yB,EADiCI,EAAAA,EAAAA,wBAAsCH,EAAWC,EAAgB,EAAG7yB,GACnCA,CACtE,CACJ,CACAhkB,KAAKw2C,YAAYF,oCAAoChqC,IAAIoqC,GACzD12C,KAAKw2C,YAAYD,mDAAmDjqC,IAAIqqC,EAC5E,KAAC,EA3CwB,CAA2C5wC,EAAAA,IA6CxEyvC,GAA4BxvC,GAAW,CACnCa,GAAQ,EAAGmH,GAAAA,IACXnH,GAAQ,EAAGwK,GAAAA,KACZmkC,IAEI,IAAMwB,GAA8B,0CACvC,aAAc,kCACJ,CACFl5B,GAAIk5B,EAA+B5nC,GACnCgJ,MAAOC,GAAAA,GAAa,gCAAiC,+BACrD2F,MAAO,8BACPC,aAAcg5B,GAAAA,GAAAA,IAAmB1oC,EAAAA,EAAAA,SAA4B0mC,GAAoBc,yBACjF73B,OAAQ,CACJI,OAAQ,IACRF,QAAS,MAGrB,CASC,OATA,2BACD,SAAI7c,EAAU+Q,GACV,OAAO5T,GAAUsB,UAAM,OAAQ,GAAM,eAAE,0FAC7BwZ,EAAay7B,GAAoBtzC,IAAI2Q,MAEvCkH,EAAWqrB,2BACXvyB,EAAOvI,SACV,0CAET,KAAC,EArBsC,CAAS2U,EAAAA,IAuBpDs4B,GAA+B5nC,GAAK,uCAC7B,IAAM8nC,GAAkC,0CAC3C,aAAc,kCACJ,CACFp5B,GAAIo5B,EAAmC9nC,GACvCgJ,MAAOC,GAAAA,GAAa,oCAAqC,mCACzD2F,MAAO,kCACPC,aAAcg5B,GAAAA,GAAAA,IAAmB1oC,EAAAA,EAAAA,SAA4B0mC,GAAoBc,yBACjF73B,OAAQ,CACJI,OAAQ,IACRF,QAAS,MAGrB,CASC,OATA,2BACD,SAAI7c,EAAU+Q,GACV,OAAO5T,GAAUsB,UAAM,OAAQ,GAAM,eAAE,0FAC7BwZ,EAAay7B,GAAoBtzC,IAAI2Q,MAEvCkH,EAAWsrB,+BACXxyB,EAAOvI,SACV,0CAET,KAAC,EArB0C,CAAS2U,EAAAA,IAuBxDw4B,GAAmC9nC,GAAK,2CACjC,IAAM+nC,GAA6B,0CACtC,aAAc,kCACJ,CACFr5B,GAAI,sCACJ1F,MAAOC,GAAAA,GAAa,+BAAgC,6BACpD2F,MAAO,4BACPC,aAAc1P,EAAAA,EAAAA,UAEtB,CAQC,OARA,2BACD,SAAIhN,EAAU+Q,GACV,OAAO5T,GAAUsB,UAAM,OAAQ,GAAM,eAAE,0FAC7BwZ,EAAay7B,GAAoBtzC,IAAI2Q,KAEvCkH,EAAWkQ,UACd,0CAET,KAAC,EAhBqC,CAAShL,EAAAA,I,wECnO/C1Y,GAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HxD,EAAvHyD,EAAIC,UAAUjF,OAAQkF,EAAIF,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOI,OAAOC,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,kBAAZM,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIhE,EAAI6D,EAAW5E,OAAS,EAAGe,GAAK,EAAGA,KAASQ,EAAIqD,EAAW7D,MAAImE,GAAKF,EAAI,EAAIzD,EAAE2D,GAAKF,EAAI,EAAIzD,EAAEsD,EAAQC,EAAKI,GAAK3D,EAAEsD,EAAQC,KAASI,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOI,eAAeV,EAAQC,EAAKI,GAAIA,CAChE,EACIM,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUb,EAAQC,GAAOY,EAAUb,EAAQC,EAAKW,EAAa,CACxE,EAgBaswC,GAAsB,WAC/B,WAAYtrC,EAAO5K,EAAOsY,IAAY,eAClCxZ,KAAK8L,MAAQA,EACb9L,KAAKkB,MAAQA,EACblB,KAAKwZ,WAAaA,CACtB,CAYC,OAZA,6CACD,SAAsB5Q,GAClB,OAAwB,IAAhBA,EAAOQ,MACRpJ,KAAKkB,MAAMgM,aAAetE,EAAO1H,MAAMgM,aACvClN,KAAKkB,MAAMkM,WAAaxE,EAAO1H,MAAMkM,SAChD,GAAC,oCACD,WACI,OAAOpN,KAAKwZ,WAAWurB,8BAC3B,GAAC,oBACD,WACI,IAAIz/B,EAAIL,EAAIC,EACZ,OAAkM,QAAzLA,EAAwH,QAAlHD,EAA4C,QAAtCK,EAAKtF,KAAKwZ,WAAWi8B,mBAAgC,IAAPnwC,OAAgB,EAASA,EAAGwqC,oCAAiD,IAAP7qC,OAAgB,EAASA,EAAGk+B,kBAAkBhkC,aAA0B,IAAP+F,OAAgB,EAASA,EAAGqjC,WAAa,EACvP,KAAC,EAjB8B,GAmB/B8O,GAAiC,WACjC,WAAYn0C,EAASkwB,EAAiBkkB,EAAclpC,EAAoB2M,EAAkBrF,EAAgB6hC,IAAsB,eAC5Hv3C,KAAKkD,QAAUA,EACflD,KAAKozB,gBAAkBA,EACvBpzB,KAAKs3C,aAAeA,EACpBt3C,KAAKoO,mBAAqBA,EAC1BpO,KAAK+a,iBAAmBA,EACxB/a,KAAK0V,eAAiBA,EACtB1V,KAAKu3C,qBAAuBA,EAC5Bv3C,KAAKiI,aAAe,CACxB,CA6GC,OA7GA,0CACD,SAAmBgB,GACf,IAAMuQ,EAAay7B,GAAoBtzC,IAAI3B,KAAKkD,SAChD,IAAKsW,EACD,OAAO,KAEX,IAAMtT,EAAS+C,EAAW/C,OAC1B,GAAoB,IAAhBA,EAAOkD,KAAoD,CAE3D,IAAMouC,EAAetxC,EAAOsD,OAC5B,GAAIgQ,EAAWm8B,0BAA0B6B,EAAatG,YAClD,OAAO,IAAI9wB,EAAAA,GAA0B,IAAMpgB,KAAMsN,EAAAA,EAAAA,cAAoBkqC,EAAaC,gBAAkBD,EAAap3C,SAAUo3C,EAAaC,gBAAkBD,EAAap3C,UAE/K,CACA,GAAoB,IAAhB8F,EAAOkD,MAEHoQ,EAAWk8B,kBAAkBxvC,EAAOhF,OACpC,OAAO,IAAIkf,EAAAA,GAA0B,IAAMpgB,KAAMkG,EAAOhF,OAGhE,GAAoB,IAAhBgF,EAAOkD,OAEuBlD,EAAOsD,OAAOkuC,uBACfl+B,EAAWk8B,kBAAkBxvC,EAAOhF,QAC7D,OAAO,IAAIkf,EAAAA,GAA0B,IAAMpgB,KAAMkG,EAAOhF,OAGhE,OAAO,IACX,GAAC,yBACD,SAAY0H,EAAQwJ,GAChB,IAAMoH,EAAay7B,GAAoBtzC,IAAI3B,KAAKkD,SAChD,OAAIsW,GAAcA,EAAWk8B,kBAAkB9sC,EAAO1H,OAC3C,CAAC,IAAIk2C,GAAuBp3C,KAAM4I,EAAO1H,MAAOsY,IAEpD,EACX,GAAC,8BACD,SAAiBhO,EAASI,GAAY,WAC5BwmC,EAAkB,IAAIpnC,EAAAA,GACtBmkB,EAAOvjB,EAAW,GACpB5L,KAAKu3C,qBAAqBI,2BAC1B33C,KAAK43C,uBAAuBpsC,EAAS2jB,EAAMijB,GAG/C,IAAMyF,EAAOzF,EAAgBlnC,IAAIlL,KAAKs3C,aAAaQ,WAAW9nB,GAAAA,GAAAA,yBAAiChwB,KAAKoO,qBAC9F2pC,EAAiBvsC,EAAQP,UAAUkN,UAAU,CAC/CC,MAAOC,GAAAA,GAAa,2BAA4B,QAChDzG,UAAWolC,GAA+B5nC,GAC1CmJ,IAAK,kBAAM,EAAK6a,gBAAgB/P,eAAe2zB,GAA+B5nC,GAAG,IAE/E4oC,EAAaxsC,EAAQP,UAAUkN,UAAU,CAC3CC,MAAOC,GAAAA,GAAa,+BAAgC,YACpDzG,UAAWslC,GAAmC9nC,GAC9CmJ,IAAK,kBAAM,EAAK6a,gBAAgB/P,eAAe6zB,GAAmC9nC,GAAG,IAEzF5D,EAAQP,UAAUkN,UAAU,CACxBC,MAAOC,GAAAA,GAAa,yBAA0B,UAC9CzG,UAAWurB,EACX5kB,IAAK,kBAAM,EAAK6a,gBAAgB/P,eAAe8Z,EAAsB,IAGzE,IADA,IAAMhkB,EAAU,CAAC4+B,EAAgBC,GACjC,MAAqB7+B,EAAO,eAAE,CAAb,KACN8+B,YAAW,EACtB,CACA9oB,EAAK+oB,yBAAyBx4C,MAAK,SAAAy4C,GAC/B,IAAK,IAAL,MAAqBh/B,EAAO,eAAE,CAAb,KACN8+B,WAAWE,EACtB,CACJ,IAAG,IACgC,EADhC,UACmBhpB,EAAKoZ,UAAQ,qBAAE,IAA1BplB,EAAO,QACd3X,EAAQP,UAAUkN,UAAU,CACxBC,MAAO+K,EAAQ2N,MACflf,UAAWuR,EAAQrF,GACnBvF,IAAK,wBAAM,IAAK6a,iBAAgB/P,eAAc,SAACF,EAAQrF,IAAE,eAAMqF,EAAQ7c,WAAa,KAAI,GAEhG,EANA,IAAK,EAAL,wBAMC,mCACyC,EADzC,UACwBuxC,EAAKtmB,cAAY,IAA1C,IAAK,EAAL,qBAA4C,KACd,EADc,sBAA7BsR,GAAF,KAAO,gBACKA,GAAK,qBAAE,IAAjB3Q,EAAM,QACTA,aAAkBkmB,GAAAA,IAClB5sC,EAAQP,UAAUkN,UAAU,CACxBC,MAAO8Z,EAAO9Z,MACdxG,UAAWsgB,EAAO1wB,KAAKsc,GACvBvF,IAAK,kBAAM,EAAK6a,gBAAgB/P,eAAe6O,EAAO1wB,KAAKsc,GAAG,GAG1E,EARA,IAAK,EAAL,wBAQC,+BACL,CAAC,+BACD,OAAOs0B,CACX,GAAC,oCACD,SAAuB5mC,EAAS2jB,EAAMijB,GAClC,IAAI9sC,EAAIL,EACF+B,EAAIC,GAAID,EACR0M,EAAuB1M,EAAE,gCACzB2M,EAAuB1M,GAAIuK,OAAOkC,EAAsB1M,EAAE,uBAC1Dqa,EAAW+wB,EAAgBlnC,IAAI,IAAIoI,GAAAA,EAAiB,CAAEhB,OAAQtS,KAAKkD,SAAWlD,KAAK+a,iBAAkB/a,KAAK0V,iBAU1GyuB,EAAyH,QAA5Gl/B,EAA4C,QAAtCK,EAAK6pB,EAAK3V,WAAWi8B,mBAAgC,IAAPnwC,OAAgB,EAASA,EAAGkqC,8BAA2C,IAAPvqC,OAAgB,EAASA,EAAGk/B,UACnK,GAAIA,EAAW,CACX,IAAMzG,EAAW19B,KAAKkD,QAAQqP,WAAWuS,eAAeqf,EAAU3xB,aAXvD,SAACgE,GACZ47B,EAAgBlnC,IAAImW,EAASC,kBAAiB,WAC1C3N,EAAqB5F,UAAY,qCACjCvC,EAAQG,mBACZ,KACA,IAAM0sC,EAA4BhgC,GAAAA,GAAa,0BAA2B,eACpEzE,EAAmBw+B,EAAgBlnC,IAAImW,EAASzQ,QAAO,IAAI4P,GAAAA,IAAiBC,WAAW43B,GAA2BC,gBAAgB,OAAQ9hC,KAChJ7C,EAAqB4kC,gBAAgB3kC,EAAiB5B,QAC1D,CAIIpB,CAAOuzB,EAAUqU,sBAAsB9a,GAC3C,CACAlyB,EAAQJ,SAASa,YAAYyH,EACjC,KAAC,EAvHgC,GAyHrC2jC,GAAoCrxC,GAAW,CAC3Ca,GAAQ,EAAG4oB,EAAAA,IACX5oB,GAAQ,EAAG4xC,GAAAA,IACX5xC,GAAQ,EAAGwK,GAAAA,IACXxK,GAAQ,EAAG+W,GAAAA,GACX/W,GAAQ,EAAGuT,GAAAA,IACXvT,GAAQ,EAAG6xC,GAAAA,IACZrB,I,iBCnKHt4B,EAAAA,EAAAA,IAA2Bk2B,GAAoB7lC,GAAI6lC,KACnDj2B,EAAAA,EAAAA,IAAqBm4B,KACrBn4B,EAAAA,EAAAA,IAAqBg4B,KACrBh4B,EAAAA,EAAAA,IAAqBk4B,IACrBtvC,EAAAA,GAAAA,SAAkCyvC,IAClC,IAAMsB,GAAmBC,EAAAA,GAAAA,mBAAiC3D,GAAoBtzC,KACjEk3C,GAA+B,IAAIF,GAAiB,CAC7D76B,GAAIqf,EACJlf,aAAcg3B,GAAoBc,wBAClC+C,QAAO,SAACj/B,GACJA,EAAEiuB,SACFjuB,EAAEvH,OAAOvI,OACb,KAEJgvC,EAAAA,EAAAA,IAAsBF,IACtBG,GAAAA,EAAAA,uBAA2C,CACvC56B,QAAS,EACTE,OAAQ,IACRR,GAAI+6B,GAA6B/6B,GACjCm7B,KAAMhC,GAAAA,GAAAA,IAAmB4B,GAA6B56B,aAAc1P,EAAAA,EAAAA,cAAAA,YAA6C0mC,GAAoBiB,kDAEzI6C,EAAAA,EAAAA,IAAsB,IAAIJ,GAAiB,CACvC76B,GAAI,mCACJG,aAAcg3B,GAAoBc,wBAClC73B,OAAQ,CACJI,OAAQ,IACRF,QAAS,GAEb06B,QAAO,SAACj/B,GACJA,EAAEnR,MACN,I,iLClCSwwC,EAAyB,0CAClC,aAAc,kCACJ,CACFp7B,GAAI,sBACJ1F,MAAOC,EAAAA,GAAa,sBAAuB,yBAC3C2F,MAAO,wBACPC,kBAAcpd,EACdqd,OAAQ,CACJI,OAAQ,EACRH,OAAQ5P,EAAAA,EAAAA,eACR6P,QAAS,OAGrB,CAUC,OAVA,2BACD,SAAI+6B,EAAW7mC,EAAQ+oB,GAEnB,GADAA,EAAOA,GAAQ,CAAC,EACX/oB,EAAOH,WAAZ,CAGA,IAAMinC,EAAY9mC,EAAO+mC,gBACzBD,EAAUj5C,MAAMm5C,mBAChBF,EAAUG,gBAAgBle,EAAK/kB,OAAQ,EAAqCkjC,EAAAA,EAAAA,oBAAuCJ,EAAWA,EAAUK,oBACxIL,EAAUM,oBAAoBre,EAAK/kB,QAAQ,EAJ3C,CAKJ,KAAC,EAvBiC,CAASoI,EAAAA,KAyB/CM,EAAAA,EAAAA,IAAqBk6B,E,wlCC3BRS,EAAgB,WACzB,WAAY1hC,EAAW2hC,EAAeC,IAAM,eACxC75C,KAAK85C,WAAa7hC,EAClBjY,KAAK+5C,eAAiBH,EACtB55C,KAAKg6C,MAAQH,IAAQ,EACrB75C,KAAKi6C,oBAAsB,EAC3Bj6C,KAAK4oB,aAAe,KACpB5oB,KAAKk6C,sBAAwB,EAC7Bl6C,KAAKm6C,oBAAsB,CAC/B,CAqDC,OArDA,yCACD,SAAkBh6C,EAAO4hB,GACrB,IAAIkqB,EAAIjsC,KAAK85C,WACb95C,KAAKk6C,sBAAwB,EAC7Bl6C,KAAKm6C,oBAAsB,EACvBlO,EAAEj/B,gBAAkBi/B,EAAE1+B,eAAiC,IAAhB0+B,EAAE7+B,YACzCpN,KAAKm6C,oBAAsB,EAC3BlO,EAAIA,EAAEmO,eAAenO,EAAE1+B,cAAgB,EAAGpN,EAAMwS,iBAAiBs5B,EAAE1+B,cAAgB,KAGvF,IADA,IAAM8sC,EAAc,GACXj4C,EAAI6pC,EAAEj/B,gBAAiB5K,GAAK6pC,EAAE1+B,cAAenL,IAClDi4C,EAAYl1C,KAAKhF,EAAM2kB,eAAe1iB,IAE1C,IAAMk4C,EAAaD,EAAYjc,KAAK,MACjB,KAAfkc,GAEIt6C,KAAK+5C,iBACL/5C,KAAKk6C,wBACLl6C,KAAKm6C,uBAGTn6C,KAAKg6C,MACLj4B,EAAQ+G,iBAAiB,IAAIxb,EAAAA,EAAM2+B,EAAE1+B,cAAepN,EAAMwS,iBAAiBs5B,EAAE1+B,eAAgB0+B,EAAE1+B,cAAgB,EAAG,GAAI0+B,EAAE1+B,gBAAkBpN,EAAMsS,eAAiB,GAAK,MAGjKzS,KAAK+5C,eAINh4B,EAAQ+G,iBAAiB,IAAIxb,EAAAA,EAAM2+B,EAAEj/B,gBAAiB,EAAGi/B,EAAEj/B,gBAAiB,GAAIstC,EAAa,MAH7Fv4B,EAAQ+G,iBAAiB,IAAIxb,EAAAA,EAAM2+B,EAAE1+B,cAAepN,EAAMwS,iBAAiBs5B,EAAE1+B,eAAgB0+B,EAAE1+B,cAAepN,EAAMwS,iBAAiBs5B,EAAE1+B,gBAAiB,KAAO+sC,GAMvKt6C,KAAK4oB,aAAe7G,EAAQkH,eAAegjB,GAC3CjsC,KAAKi6C,oBAAsBj6C,KAAK85C,WAAWS,cAC/C,GAAC,gCACD,SAAmBp6C,EAAO8hB,GACtB,IAAIziB,EAASyiB,EAAOiH,oBAAoBlpB,KAAK4oB,cAC7C,GAAmC,IAA/B5oB,KAAKk6C,uBAA4D,IAA7Bl6C,KAAKm6C,oBAA2B,CACpE,IAAIntC,EAAkBxN,EAAOwN,gBACzBE,EAAc1N,EAAO0N,YACrBK,EAAgB/N,EAAO+N,cACvBH,EAAY5N,EAAO4N,UACY,IAA/BpN,KAAKk6C,wBACLltC,GAAoChN,KAAKk6C,sBACzChtC,EAAc,GAEe,IAA7BlN,KAAKm6C,sBACL5sC,GAAgCvN,KAAKm6C,oBACrC/sC,EAAY,GAEhB5N,EAAS6iB,EAAAA,EAAAA,oBAA8BrV,EAAiBE,EAAaK,EAAeH,EAAWpN,KAAKi6C,oBACxG,CACA,OAAOz6C,CACX,KAAC,EA9DwB,G,6ECFzBwG,EAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HxD,EAAvHyD,EAAIC,UAAUjF,OAAQkF,EAAIF,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOI,OAAOC,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,kBAAZM,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIhE,EAAI6D,EAAW5E,OAAS,EAAGe,GAAK,EAAGA,KAASQ,EAAIqD,EAAW7D,MAAImE,GAAKF,EAAI,EAAIzD,EAAE2D,GAAKF,EAAI,EAAIzD,EAAEsD,EAAQC,EAAKI,GAAK3D,EAAEsD,EAAQC,KAASI,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOI,eAAeV,EAAQC,EAAKI,GAAIA,CAChE,EACIM,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUb,EAAQC,GAAOY,EAAUb,EAAQC,EAAKW,EAAa,CACxE,EAUI0zC,EAAgB,WAChB,WAAYviC,EAAWwiC,EAAc5wB,EAAYT,IAA+B,eAC5EppB,KAAKopB,8BAAgCA,EACrCppB,KAAK85C,WAAa7hC,EAClBjY,KAAK06C,cAAgBD,EACrBz6C,KAAK26C,YAAc9wB,EACnB7pB,KAAK4oB,aAAe,KACpB5oB,KAAK46C,6BAA8B,CACvC,CA8TC,OA9TA,yCACD,SAAkBz6C,EAAO4hB,GACrB,IAAM84B,EAAiB16C,EAAMsS,eAC7B,GAAIzS,KAAK06C,eAAiB16C,KAAK85C,WAAWvsC,gBAAkBstC,EACxD76C,KAAK4oB,aAAe7G,EAAQkH,eAAejpB,KAAK85C,iBAGpD,GAAK95C,KAAK06C,eAAqD,IAApC16C,KAAK85C,WAAW9sC,gBAA3C,CAIAhN,KAAK86C,sBAAuB,EAC5B,IAAI7O,EAAIjsC,KAAK85C,WACT7N,EAAEj/B,gBAAkBi/B,EAAE1+B,eAAiC,IAAhB0+B,EAAE7+B,YACzCpN,KAAK86C,sBAAuB,EAC5B7O,EAAIA,EAAEmO,eAAenO,EAAE1+B,cAAgB,EAAGpN,EAAMwS,iBAAiBs5B,EAAE1+B,cAAgB,KAEvF,MAA8CpN,EAAM8kB,aAA5CjB,EAAO,EAAPA,QAASkB,EAAU,EAAVA,WAAYd,EAAY,EAAZA,aACvB2F,EAAkB/pB,KAAK+6C,qBAAqB/2B,EAASkB,EAAYd,GACjEuG,EAAe,CACjBhB,aAAc,CACViB,cAAe,SAACpY,GACZ,OAAOrS,EAAMwpB,aAAaiB,cAAcpY,EAC5C,EACAoS,cAAe,WACX,OAAOzkB,EAAMykB,eACjB,EACA/D,wBAAyB,SAACrO,EAAYgM,GAClC,OAAOre,EAAM0gB,wBAAwBrO,EAAYgM,EACrD,GAEJsG,eAAgB,MAEpB,GAAImnB,EAAEj/B,kBAAoBi/B,EAAE1+B,eAA+D,IAA9CpN,EAAMwS,iBAAiBs5B,EAAEj/B,iBAAwB,CAE1F,IAAMwF,EAAay5B,EAAEj/B,gBACfguC,EAAmBh7C,KAAK06C,cAAgBloC,EAAa,EAAIA,EAAa,EAC5B,IAA5CrS,EAAMwS,iBAAiBqoC,GAGvBj5B,EAAQ+G,iBAAiB,IAAIxb,EAAAA,EAAM,EAAG,EAAG,EAAG,GAAI,OAIhDyU,EAAQ+G,iBAAiB,IAAIxb,EAAAA,EAAMkF,EAAY,EAAGA,EAAY,GAAIrS,EAAM2kB,eAAek2B,IAEvFj5B,EAAQ+G,iBAAiB,IAAIxb,EAAAA,EAAM0tC,EAAiB,EAAGA,EAAiB76C,EAAMwS,iBAAiBqoC,IAAmB,OAGtH/O,EAAI,IAAI5pB,EAAAA,EAAU24B,EAAiB,EAAGA,EAAiB,EAC3D,KACK,CACD,IAAIC,EACAC,EACJ,GAAIl7C,KAAK06C,cAAe,CACpBO,EAAmBhP,EAAE1+B,cAAgB,EACrC2tC,EAAiB/6C,EAAM2kB,eAAem2B,GAEtCl5B,EAAQ+G,iBAAiB,IAAIxb,EAAAA,EAAM2tC,EAAmB,EAAG96C,EAAMwS,iBAAiBsoC,EAAmB,GAAIA,EAAkB96C,EAAMwS,iBAAiBsoC,IAAoB,MACpK,IAAIE,EAAgBD,EACpB,GAAIl7C,KAAKo7C,iBAAiBj7C,EAAO8rC,GAAI,CACjC,IAAMoP,EAAwBr7C,KAAKs7C,eAAen7C,EAAO4pB,EAAiB/F,EAASi3B,EAAkBhP,EAAEj/B,gBAAkB,GAEzH,GAA8B,OAA1BquC,EAAgC,CAChC,IAAM11B,EAAiBC,EAAAA,GAA6BzlB,EAAM2kB,eAAem2B,IACnE7wB,EAAcixB,EAAwBhxB,EAAAA,EAAwB1E,EAAgB3B,GAC9EuI,EAAiBlC,EAAAA,EAA2BD,EAAapG,EAASI,GACxE+2B,EAAgB5uB,EAAiBvsB,KAAKu7C,SAASL,EACnD,KACK,CAEDvwB,EAAa7F,eAAiB,SAACtS,GAC3B,OAAIA,IAAey5B,EAAEj/B,gBACV7M,EAAM2kB,eAAem2B,GAGrB96C,EAAM2kB,eAAetS,EAEpC,EACA,IAAMgpC,GAAqBrxB,EAAAA,EAAAA,IAAqBnqB,KAAK26C,YAAahwB,EAAcxqB,EAAM0gB,wBAAwBo6B,EAAkB,GAAIhP,EAAEj/B,gBAAiB+c,EAAiB/pB,KAAKopB,+BAC7K,GAA2B,OAAvBoyB,EAA6B,CAC7B,IAAM71B,EAAiBC,EAAAA,GAA6BzlB,EAAM2kB,eAAem2B,IACnE7wB,EAAcC,EAAAA,EAAwBmxB,EAAoBx3B,GAEhE,GAAIoG,IADgBC,EAAAA,EAAwB1E,EAAgB3B,GAC3B,CAC7B,IAAMuI,EAAiBlC,EAAAA,EAA2BD,EAAapG,EAASI,GACxE+2B,EAAgB5uB,EAAiBvsB,KAAKu7C,SAASL,EACnD,CACJ,CACJ,CAGAn5B,EAAQ+G,iBAAiB,IAAIxb,EAAAA,EAAM2+B,EAAEj/B,gBAAiB,EAAGi/B,EAAEj/B,gBAAiB,GAAImuC,EAAgB,MAChG,IAAMM,EAAMz7C,KAAK07C,yBAAyBv7C,EAAO4pB,EAAiB/F,EAASioB,EAAEj/B,gBAAiBiuC,EAAkBE,GAEhH,GAAY,OAARM,EACY,IAARA,GACAz7C,KAAK27C,4BAA4Bx7C,EAAO4hB,EAASkqB,EAAGjoB,EAASI,EAAcq3B,OAG9E,CAED9wB,EAAa7F,eAAiB,SAACtS,GAC3B,OAAIA,IAAey5B,EAAEj/B,gBACVmuC,EAEF3oC,GAAcy5B,EAAEj/B,gBAAkB,GAAKwF,GAAcy5B,EAAE1+B,cAAgB,EACrEpN,EAAM2kB,eAAetS,EAAa,GAGlCrS,EAAM2kB,eAAetS,EAEpC,EACA,IAAMopC,GAA2BzxB,EAAAA,EAAAA,IAAqBnqB,KAAK26C,YAAahwB,EAAcxqB,EAAM0gB,wBAAwBo6B,EAAkB,GAAIhP,EAAEj/B,gBAAkB,EAAG+c,EAAiB/pB,KAAKopB,+BACvL,GAAiC,OAA7BwyB,EAAmC,CACnC,IAAMj2B,EAAiBC,EAAAA,GAA6BzlB,EAAM2kB,eAAemnB,EAAEj/B,kBACrEod,EAAcC,EAAAA,EAAwBuxB,EAA0B53B,GAChE63B,EAAcxxB,EAAAA,EAAwB1E,EAAgB3B,GAC5D,GAAIoG,IAAgByxB,EAAa,CAC7B,IAAM7wB,EAAiBZ,EAAcyxB,EACrC77C,KAAK27C,4BAA4Bx7C,EAAO4hB,EAASkqB,EAAGjoB,EAASI,EAAc4G,EAC/E,CACJ,CACJ,CACJ,MAGIjJ,EAAQ+G,iBAAiB,IAAIxb,EAAAA,EAAM2+B,EAAEj/B,gBAAiB,EAAGi/B,EAAEj/B,gBAAiB,GAAImuC,EAAgB,KAExG,MAQI,GANAF,EAAmBhP,EAAEj/B,gBAAkB,EACvCkuC,EAAiB/6C,EAAM2kB,eAAem2B,GAEtCl5B,EAAQ+G,iBAAiB,IAAIxb,EAAAA,EAAM2tC,EAAkB,EAAGA,EAAmB,EAAG,GAAI,MAElFl5B,EAAQ+G,iBAAiB,IAAIxb,EAAAA,EAAM2+B,EAAE1+B,cAAepN,EAAMwS,iBAAiBs5B,EAAE1+B,eAAgB0+B,EAAE1+B,cAAepN,EAAMwS,iBAAiBs5B,EAAE1+B,gBAAiB,KAAO2tC,GAC3Jl7C,KAAKo7C,iBAAiBj7C,EAAO8rC,GAAI,CACjCthB,EAAa7F,eAAiB,SAACtS,GAC3B,OAAIA,IAAeyoC,EACR96C,EAAM2kB,eAAemnB,EAAEj/B,iBAGvB7M,EAAM2kB,eAAetS,EAEpC,EACA,IAAMipC,EAAMz7C,KAAKs7C,eAAen7C,EAAO4pB,EAAiB/F,EAASioB,EAAEj/B,gBAAiBi/B,EAAEj/B,gBAAkB,GAExG,GAAY,OAARyuC,EACY,IAARA,GACAz7C,KAAK27C,4BAA4Bx7C,EAAO4hB,EAASkqB,EAAGjoB,EAASI,EAAcq3B,OAG9E,CAED,IAAMvxB,GAAoBC,EAAAA,EAAAA,IAAqBnqB,KAAK26C,YAAahwB,EAAcxqB,EAAM0gB,wBAAwBorB,EAAEj/B,gBAAiB,GAAIiuC,EAAkBlxB,EAAiB/pB,KAAKopB,+BAC5K,GAA0B,OAAtBc,EAA4B,CAE5B,IAAM4xB,EAAYl2B,EAAAA,GAA6BzlB,EAAM2kB,eAAemnB,EAAEj/B,kBAChEod,EAAcC,EAAAA,EAAwBH,EAAmBlG,GACzD63B,EAAcxxB,EAAAA,EAAwByxB,EAAW93B,GACvD,GAAIoG,IAAgByxB,EAAa,CAC7B,IAAM7wB,EAAiBZ,EAAcyxB,EACrC77C,KAAK27C,4BAA4Bx7C,EAAO4hB,EAASkqB,EAAGjoB,EAASI,EAAc4G,EAC/E,CACJ,CACJ,CACJ,CAER,CACAhrB,KAAK4oB,aAAe7G,EAAQkH,eAAegjB,EAhK3C,MAFIjsC,KAAK4oB,aAAe7G,EAAQkH,eAAejpB,KAAK85C,WAmKxD,GAAC,kCACD,SAAqB91B,EAASkB,EAAYd,GACtC,MAAO,CACHe,YAAa,SAACC,GACV,OAAOE,EAAAA,EAAAA,YAAyBF,EAAaA,EAAY/jB,OAAS,EAAG2iB,EAASkB,EAAYd,EAC9F,EACAmB,cAAe,SAACH,GACZ,OAAOE,EAAAA,EAAAA,cAA2BF,EAAaA,EAAY/jB,OAAS,EAAG2iB,EAASkB,EAAYd,EAChG,EAER,GAAC,8BACD,SAAiBjkB,EAAO4pB,EAAiB/F,EAASyK,EAAMstB,GACpD,GAAIA,EAAO,CACP,IAAIC,EAAcD,EAAM32B,YACpB22B,EAAME,eAAiBC,EAAAA,GAAAA,MAGlBH,EAAME,eAAiBC,EAAAA,GAAAA,OAF5BF,EAAcD,EAAM32B,YAAc22B,EAAMt7B,WAKnCs7B,EAAME,eAAiBC,EAAAA,GAAAA,cAC5BF,EAAcD,EAAM32B,YAEf22B,EAAME,eAAiBC,EAAAA,GAAAA,UAC5BF,EAAcjyB,EAAgBxE,cAAcw2B,EAAM32B,aAAe22B,EAAMt7B,YAE3E,IAAMy6B,EAAiB/6C,EAAM2kB,eAAe2J,GAC5C,GAAIzuB,KAAKu7C,SAASL,GAAgBiB,QAAQn8C,KAAKu7C,SAASS,KAAiB,EAAG,CACxE,IAAMr2B,EAAiBC,EAAAA,GAA6BzlB,EAAM2kB,eAAe2J,IACrElC,EAAiB3G,EAAAA,GAA6Bo2B,GAC5CI,GAA+B3xB,EAAAA,EAAAA,IAAkBtqB,EAAOsuB,EAAMzuB,KAAKopB,+BAMzE,OALqC,OAAjCgzB,GAAwE,EAA/BA,IACzC7vB,EAAiBxC,EAAgBxE,cAAcgH,IAE/BlC,EAAAA,EAAwBkC,EAAgBvI,GACxCqG,EAAAA,EAAwB1E,EAAgB3B,EAEhE,CACJ,CACA,OAAO,IACX,GACA,sCASA,SAAyB7jB,EAAO4pB,EAAiB/F,EAASyK,EAAM4tB,EAAuBC,GACnF,GAAI12B,EAAAA,GAA+B02B,IAAwB,EAAG,CAE1D,IAAM5pC,EAAYvS,EAAMwS,iBAAiB0pC,GACnCN,GAAQQ,EAAAA,EAAAA,GAAev8C,KAAK26C,YAAax6C,EAAO,IAAImN,EAAAA,EAAM+uC,EAAuB3pC,EAAW2pC,EAAuB3pC,GAAY1S,KAAKopB,+BAC1I,OAAOppB,KAAKw8C,iBAAiBr8C,EAAO4pB,EAAiB/F,EAASyK,EAAMstB,EACxE,CAII,IADA,IAAIU,EAAqBhuB,EAAO,EACzBguB,GAAsB,GAAG,CAC5B,IAAMxxB,EAAc9qB,EAAM2kB,eAAe23B,GAEzC,GADyB72B,EAAAA,GAA+BqF,IAChC,EACpB,MAEJwxB,GACJ,CACA,GAAIA,EAAqB,GAAKhuB,EAAOtuB,EAAMsS,eACvC,OAAO,KAEX,IAAMC,EAAYvS,EAAMwS,iBAAiB8pC,GACnCV,GAAQQ,EAAAA,EAAAA,GAAev8C,KAAK26C,YAAax6C,EAAO,IAAImN,EAAAA,EAAMmvC,EAAoB/pC,EAAW+pC,EAAoB/pC,GAAY1S,KAAKopB,+BACpI,OAAOppB,KAAKw8C,iBAAiBr8C,EAAO4pB,EAAiB/F,EAASyK,EAAMstB,EAE5E,GAAC,4BACD,SAAe57C,EAAO4pB,EAAiB/F,EAASyK,EAAMiuB,EAAcC,GAEhE,IADA,IAAIF,EAAqBC,EAClBD,GAAsB,GAAG,CAE5B,IAAIxxB,OAAW,EAQf,GANIA,EADAwxB,IAAuBC,QAAqC77C,IAArB87C,EACzBA,EAGAx8C,EAAM2kB,eAAe23B,GAEd72B,EAAAA,GAA+BqF,IAChC,EACpB,MAEJwxB,GACJ,CACA,GAAIA,EAAqB,GAAKhuB,EAAOtuB,EAAMsS,eACvC,OAAO,KAEX,IAAMC,EAAYvS,EAAMwS,iBAAiB8pC,GACnCV,GAAQQ,EAAAA,EAAAA,GAAev8C,KAAK26C,YAAax6C,EAAO,IAAImN,EAAAA,EAAMmvC,EAAoB/pC,EAAW+pC,EAAoB/pC,GAAY1S,KAAKopB,+BACpI,OAAOppB,KAAKw8C,iBAAiBr8C,EAAO4pB,EAAiB/F,EAASyK,EAAMstB,EACxE,GAAC,sBACD,SAASh4B,GACL,OAAOA,EAAIyI,QAAQ,OAAQ,GAC/B,GAAC,8BACD,SAAiBrsB,EAAO8X,GACpB,GAAIjY,KAAK26C,YAAc,EACnB,OAAO,EAGX,IAAKx6C,EAAMwpB,aAAaC,kBAAkB3R,EAAUjL,iBAChD,OAAO,EAEX,IAAM4vC,EAA2Bz8C,EAAM0gB,wBAAwB5I,EAAUjL,gBAAiB,GAE1F,OAAI4vC,IAD2Bz8C,EAAM0gB,wBAAwB5I,EAAU1K,cAAe,IAI2B,OAA7GvN,KAAKopB,8BAA8BzE,yBAAyBi4B,GAA0BC,kBAI9F,GAAC,yCACD,SAA4B18C,EAAO4hB,EAASkqB,EAAGjoB,EAASI,EAAcyK,GAClE,IAAK,IAAIzsB,EAAI6pC,EAAEj/B,gBAAiB5K,GAAK6pC,EAAE1+B,cAAenL,IAAK,CACvD,IAAM6oB,EAAc9qB,EAAM2kB,eAAe1iB,GACnC8oB,EAAiBtF,EAAAA,GAA6BqF,GAE9CE,EADoBd,EAAAA,EAAwBa,EAAgBlH,GACzB6K,EACnCvE,EAAYD,EAAAA,EAA2Bc,EAAcnH,EAASI,GAChEkG,IAAcY,IACdnJ,EAAQ+G,iBAAiB,IAAIxb,EAAAA,EAAMlL,EAAG,EAAGA,EAAG8oB,EAAe7pB,OAAS,GAAIipB,GACpEloB,IAAM6pC,EAAE1+B,eAAiB0+B,EAAE7+B,WAAa8d,EAAe7pB,OAAS,GAAmB,KAAdipB,IAGrEtqB,KAAK46C,6BAA8B,GAG/C,CACJ,GAAC,gCACD,SAAmBz6C,EAAO8hB,GACtB,IAAIziB,EAASyiB,EAAOiH,oBAAoBlpB,KAAK4oB,cAO7C,OANI5oB,KAAK86C,uBACLt7C,EAASA,EAAO46C,eAAe56C,EAAO+N,cAAgB,EAAG,IAEzDvN,KAAK46C,6BAA+Bp7C,EAAOwN,gBAAkBxN,EAAO+N,gBACpE/N,EAASA,EAAO46C,eAAe56C,EAAO+N,cAAe,IAElD/N,CACX,KAAC,EAtUe,GAwUpBg7C,EAAmBx0C,EAAW,CAC1Ba,EAAQ,EAAGohB,EAAAA,KACZuyB,GC1VI,IAAMsC,EAAgB,WACzB,WAAY7kC,EAAW8kC,IAAY,eAC/B/8C,KAAKiY,UAAYA,EACjBjY,KAAK+8C,WAAaA,EAClB/8C,KAAKysB,YAAc,IACvB,CA+BC,OA/BA,yCAOD,SAAkBtsB,EAAO4hB,GACrB,IAAMi7B,EAyDd,SAAmB78C,EAAO8X,EAAW8kC,GACjC,IAAMtvB,EAAOwvB,EAAY98C,EAAO8X,EAAW8kC,GAC3C,IAAKtvB,EACD,OAAO,KAEX,OAAO1H,EAAAA,EAAAA,QAAsB,IAAIzY,EAAAA,EAAMmgB,EAAKzgB,gBAAiB,EAAGygB,EAAKlgB,cAAepN,EAAMwS,iBAAiB8a,EAAKlgB,gBAAiBkgB,EAAKglB,MAAMrU,KAAK,MACrJ,CA/DmB8e,CAAU/8C,EAAOH,KAAKiY,UAAWjY,KAAK+8C,YAC7CC,GACAj7B,EAAQ+G,iBAAiBk0B,EAAG97C,MAAO87C,EAAGr7B,MAE1C3hB,KAAKysB,YAAc1K,EAAQkH,eAAejpB,KAAKiY,UACnD,GAAC,gCACD,SAAmB9X,EAAO8hB,GACtB,OAAOA,EAAOiH,oBAAoBlpB,KAAKysB,YAC3C,IAAC,0BAfD,WAII,OAHKqwB,EAAiBK,YAClBL,EAAiBK,UAAY,IAAIC,KAAKC,UAEnCP,EAAiBK,SAC5B,GAAC,oBAWD,SAAch9C,EAAO8X,EAAW8kC,GAC5B,GAAc,OAAV58C,EACA,OAAO,EAEX,IAAMstB,EAAOwvB,EAAY98C,EAAO8X,EAAW8kC,GAC3C,IAAKtvB,EACD,OAAO,EAEX,IAAK,IAAIrrB,EAAI,EAAGmgC,EAAM9U,EAAK6vB,OAAOj8C,OAAQe,EAAImgC,EAAKngC,IAC/C,GAAIqrB,EAAK6vB,OAAOl7C,KAAOqrB,EAAKglB,MAAMrwC,GAC9B,OAAO,EAGf,OAAO,CACX,KAAC,EApCwB,GAuC7B,SAAS66C,EAAY98C,EAAO8X,EAAW8kC,GACnC,IAAM/vC,EAAkBiL,EAAUjL,gBAC9BO,EAAgB0K,EAAU1K,cAK9B,GAJ4B,IAAxB0K,EAAU7K,WACVG,IAGAP,GAAmBO,EACnB,OAAO,KAIX,IAFA,IAAMgwC,EAAc,GAEX/qC,EAAaxF,EAAiBwF,GAAcjF,EAAeiF,IAChE+qC,EAAYp4C,KAAKhF,EAAM2kB,eAAetS,IAE1C,IAAIgrC,EAASD,EAAY33C,MAAM,GAM/B,OALA43C,EAAO11C,KAAKg1C,EAAiBW,cAAcC,UAExB,IAAfX,IACAS,EAASA,EAAOpvB,WAEb,CACHphB,gBAAiBA,EACjBO,cAAeA,EACf+vC,OAAQC,EACR9K,MAAO+K,EAEf,CA5BAV,EAAiBK,UAAY,K,0BCtBvBQ,EAAuB,0CACzB,WAAYC,EAAMh3B,GAAM,MAEH,OAFG,gBACpB,cAAMA,IACDg3B,KAAOA,EAAK,CACrB,CA+BC,OA/BA,2BACD,SAAIzE,EAAW7mC,GACX,GAAKA,EAAOH,WAAZ,CAGA,IAAMkW,EAAa/V,EAAOgW,gBAAgB9nB,KAAI,SAACyX,EAAWxX,GAAK,MAAM,CAAEwX,UAAAA,EAAWxX,MAAAA,EAAOo9C,QAAQ,EAAO,IACxGx1B,EAAWvgB,MAAK,SAAC6B,EAAGC,GAAC,OAAK0D,EAAAA,EAAAA,yBAA+B3D,EAAEsO,UAAWrO,EAAEqO,UAAU,IAGlF,IADA,IAAI6lC,EAAOz1B,EAAW,GACbjmB,EAAI,EAAGA,EAAIimB,EAAWhnB,OAAQe,IAAK,CACxC,IAAM27C,EAAO11B,EAAWjmB,GACpB07C,EAAK7lC,UAAU1K,gBAAkBwwC,EAAK9lC,UAAUjL,kBAE5C8wC,EAAKr9C,MAAQs9C,EAAKt9C,MAElBs9C,EAAKF,QAAS,GAIdC,EAAKD,QAAS,EACdC,EAAOC,GAGnB,CACA,IACkC,EAD5BxV,EAAW,GAAG,UACIlgB,GAAU,IAAlC,IAAK,EAAL,qBAAoC,KAAzBpQ,EAAS,QAChBswB,EAASpjC,KAAK,IAAIw0C,EAAiB1hC,EAAUA,UAAWjY,KAAK49C,KAAM3lC,EAAU4lC,QACjF,CAAC,+BACDvrC,EAAO8Q,eACP9Q,EAAOiU,gBAAgBvmB,KAAK8d,GAAIyqB,GAChCj2B,EAAO8Q,cA1BP,CA2BJ,KAAC,EAnCwB,CAAS1E,EAAAA,IAqChCs/B,EAAiB,0CACnB,aAAc,mCACJ,EAAO,CACTlgC,GAAI,kCACJ1F,MAAOC,EAAAA,GAAa,eAAgB,gBACpC2F,MAAO,eACPC,aAAc1P,EAAAA,EAAAA,SACd2P,OAAQ,CACJC,OAAQ5P,EAAAA,EAAAA,gBACR6P,QAAS,KACT6/B,MAAO,CAAE7/B,QAAS,MAClBE,OAAQ,KAEZ4/B,SAAU,CACNC,OAAQnuB,EAAAA,GAAAA,qBACR6S,MAAO,SACP/R,MAAOzY,EAAAA,GAAa,CAAElS,IAAK,gBAAiB4X,QAAS,CAAC,0BAA4B,kBAClFqgC,MAAO,IAGnB,CAAC,iBApBkB,CAAST,GAsB1BU,EAAmB,0CACrB,aAAc,mCACJ,EAAM,CACRvgC,GAAI,oCACJ1F,MAAOC,EAAAA,GAAa,iBAAkB,kBACtC2F,MAAO,iBACPC,aAAc1P,EAAAA,EAAAA,SACd2P,OAAQ,CACJC,OAAQ5P,EAAAA,EAAAA,gBACR6P,QAAS,KACT6/B,MAAO,CAAE7/B,QAAS,MAClBE,OAAQ,KAEZ4/B,SAAU,CACNC,OAAQnuB,EAAAA,GAAAA,qBACR6S,MAAO,SACP/R,MAAOzY,EAAAA,GAAa,CAAElS,IAAK,kBAAmB4X,QAAS,CAAC,0BAA4B,oBACpFqgC,MAAO,IAGnB,CAAC,iBApBoB,CAAST,GAsBrBW,EAAwB,0CACjC,aAAc,kCACJ,CACFxgC,GAAI,mCACJ1F,MAAOC,EAAAA,GAAa,qBAAsB,uBAC1C2F,MAAO,sBACPC,aAAc1P,EAAAA,EAAAA,SACd2vC,SAAU,CACNC,OAAQnuB,EAAAA,GAAAA,qBACR6S,MAAO,SACP/R,MAAOzY,EAAAA,GAAa,CAAElS,IAAK,uBAAwB4X,QAAS,CAAC,0BAA4B,yBACzFqgC,MAAO,IAGnB,CAoBC,OApBA,2BACD,SAAI78C,EAAU+Q,EAAQ+oB,GAClB,GAAK/oB,EAAOH,WAAZ,CAGA,IAGkC,EAH5Bo2B,EAAW,GACXlgB,EAAa/V,EAAOgW,gBACpBnoB,EAAQmS,EAAOC,WAAW,UACR8V,GAAU,IAAlC,IAAK,EAAL,qBAAoC,KAAzBpQ,EAAS,QAChB,GAAIA,EAAUmK,UACVmmB,EAASpjC,KAAK,IAAIw0C,EAAiB1hC,GAAW,QAE7C,CACD,IAAMsmC,EAAkB,IAAIl8B,EAAAA,EAAUpK,EAAU1K,cAAe0K,EAAU7K,UAAW6K,EAAU1K,cAAe0K,EAAU7K,WACvHm7B,EAASpjC,KAAK,IAAIq5C,EAAAA,GAA8BD,EAAiBp+C,EAAMmsB,gBAAgBrU,IAC3F,CACJ,CAAC,+BACD3F,EAAO8Q,eACP9Q,EAAOiU,gBAAgBvmB,KAAK8d,GAAIyqB,GAChCj2B,EAAO8Q,cAfP,CAgBJ,KAAC,EAlCgC,CAAS1E,EAAAA,IAqCxC+/B,EAAuB,0CACzB,WAAYb,EAAMh3B,GAAM,MAEH,OAFG,gBACpB,cAAMA,IACDg3B,KAAOA,EAAK,CACrB,CAYC,OAZA,2BACD,SAAIr8C,EAAU+Q,GACV,IAIkC,EAJ5BkS,EAA+BjjB,EAASI,IAAIsmB,EAAAA,IAC5CsgB,EAAW,GACXlgB,EAAa/V,EAAOgW,iBAAmB,GACvCuB,EAAavX,EAAOjO,UAAU,GAAiC,UAC7CgkB,GAAU,IAAlC,IAAK,EAAL,qBAAoC,KAAzBpQ,EAAS,QAChBswB,EAASpjC,KAAK,IAAIq1C,EAAiBviC,EAAWjY,KAAK49C,KAAM/zB,EAAYrF,GACzE,CAAC,+BACDlS,EAAO8Q,eACP9Q,EAAOiU,gBAAgBvmB,KAAK8d,GAAIyqB,GAChCj2B,EAAO8Q,cACX,KAAC,EAhBwB,CAAS1E,EAAAA,IAkBhCggC,EAAiB,0CACnB,aAAc,mCACJ,EAAO,CACT5gC,GAAI,kCACJ1F,MAAOC,EAAAA,GAAa,eAAgB,gBACpC2F,MAAO,eACPC,aAAc1P,EAAAA,EAAAA,SACd2P,OAAQ,CACJC,OAAQ5P,EAAAA,EAAAA,gBACR6P,QAAS,IACT6/B,MAAO,CAAE7/B,QAAS,KAClBE,OAAQ,KAEZ4/B,SAAU,CACNC,OAAQnuB,EAAAA,GAAAA,qBACR6S,MAAO,SACP/R,MAAOzY,EAAAA,GAAa,CAAElS,IAAK,gBAAiB4X,QAAS,CAAC,0BAA4B,kBAClFqgC,MAAO,IAGnB,CAAC,iBApBkB,CAASK,GAsB1BE,EAAmB,0CACrB,aAAc,mCACJ,EAAM,CACR7gC,GAAI,oCACJ1F,MAAOC,EAAAA,GAAa,iBAAkB,kBACtC2F,MAAO,iBACPC,aAAc1P,EAAAA,EAAAA,SACd2P,OAAQ,CACJC,OAAQ5P,EAAAA,EAAAA,gBACR6P,QAAS,IACT6/B,MAAO,CAAE7/B,QAAS,KAClBE,OAAQ,KAEZ4/B,SAAU,CACNC,OAAQnuB,EAAAA,GAAAA,qBACR6S,MAAO,SACP/R,MAAOzY,EAAAA,GAAa,CAAElS,IAAK,kBAAmB4X,QAAS,CAAC,0BAA4B,oBACpFqgC,MAAO,IAGnB,CAAC,iBApBoB,CAASK,GAsBrBG,EAAuB,0CAChC,WAAY7B,EAAYn2B,GAAM,MAEG,OAFH,gBAC1B,cAAMA,IACDm2B,WAAaA,EAAW,CACjC,CAeC,OAfA,2BACD,SAAI5D,EAAW7mC,GACX,IACkC,EAD5B+V,EAAa/V,EAAOgW,iBAAmB,GAAG,UACxBD,GAAU,IAAlC,IAAK,EAAL,qBAAoC,KAAzBpQ,EAAS,QAChB,IAAK6kC,EAAiB+B,OAAOvsC,EAAOC,WAAY0F,EAAWjY,KAAK+8C,YAC5D,MAER,CAAC,+BAED,IADA,IAAMxU,EAAW,GACRnmC,EAAI,EAAGmgC,EAAMla,EAAWhnB,OAAQe,EAAImgC,EAAKngC,IAC9CmmC,EAASnmC,GAAK,IAAI06C,EAAiBz0B,EAAWjmB,GAAIpC,KAAK+8C,YAE3DzqC,EAAO8Q,eACP9Q,EAAOiU,gBAAgBvmB,KAAK8d,GAAIyqB,GAChCj2B,EAAO8Q,cACX,KAAC,EAnB+B,CAAS1E,EAAAA,IAqBhCogC,EAAwB,0CACjC,aAAc,mCACJ,EAAO,CACThhC,GAAI,mCACJ1F,MAAOC,EAAAA,GAAa,sBAAuB,wBAC3C2F,MAAO,uBACPC,aAAc1P,EAAAA,EAAAA,UAEtB,CAAC,iBARgC,CAASqwC,GAUjCG,EAAyB,0CAClC,aAAc,mCACJ,EAAM,CACRjhC,GAAI,oCACJ1F,MAAOC,EAAAA,GAAa,uBAAwB,yBAC5C2F,MAAO,wBACPC,aAAc1P,EAAAA,EAAAA,UAEtB,CAAC,iBARiC,CAASqwC,GAUlCI,EAA0B,0CACnC,aAAc,kCACJ,CACFlhC,GAAI,qCACJ1F,MAAOC,EAAAA,GAAa,yBAA0B,0BAC9C2F,MAAO,yBACPC,aAAc1P,EAAAA,EAAAA,UAEtB,CAiCC,OAjCA,2BACD,SAAI4qC,EAAW7mC,GACX,GAAKA,EAAOH,WAAZ,CAGA,IAAMhS,EAAQmS,EAAOC,WACrB,GAA6B,IAAzBpS,EAAMsS,gBAAsD,IAA9BtS,EAAMwS,iBAAiB,GAAzD,CAGA,IAG8C,EAHxCuV,EAAQ,GACR+2B,EAAiB,GACnBC,EAAe,EAAE,UACG5sC,EAAOgW,iBAAe,IAA9C,IAAK,EAAL,qBAAgD,CAG5C,IAH4C,IAArCrQ,EAAS,QACVknC,EAAc,IAAIxxB,IAClBwQ,EAAQ,GACL/7B,EAAI6V,EAAUjL,gBAAiB5K,GAAK6V,EAAU1K,cAAenL,IAAK,CACvE,IAAMqsB,EAAOtuB,EAAM2kB,eAAe1iB,GAC9B+8C,EAAYl+B,IAAIwN,KAGpB0P,EAAMh5B,KAAKspB,GACX0wB,EAAYj0C,IAAIujB,GACpB,CACA,IAAM2wB,EAAqB,IAAI/8B,EAAAA,EAAUpK,EAAUjL,gBAAiB,EAAGiL,EAAU1K,cAAepN,EAAMwS,iBAAiBsF,EAAU1K,gBAC3H8xC,EAAyBpnC,EAAUjL,gBAAkBkyC,EACrDI,EAAiB,IAAIj9B,EAAAA,EAAUg9B,EAAwB,EAAGA,EAAyBlhB,EAAM98B,OAAS,EAAG88B,EAAMA,EAAM98B,OAAS,GAAGA,QACnI6mB,EAAM/iB,KAAK4gB,EAAAA,EAAAA,QAAsBq5B,EAAoBjhB,EAAMC,KAAK,QAChE6gB,EAAe95C,KAAKm6C,GACpBJ,GAAiBjnC,EAAU1K,cAAgB0K,EAAUjL,gBAAkB,EAAKmxB,EAAM98B,MACtF,CAAC,+BACDiR,EAAO8Q,eACP9Q,EAAO6V,aAAanoB,KAAK8d,GAAIoK,EAAO+2B,GACpC3sC,EAAO8Q,cAxBP,CAJA,CA6BJ,KAAC,EAzCkC,CAAS1E,EAAAA,IA2CnC6gC,EAA4B,0CACrC,aAAc,kCACJ,CACFzhC,GAAIyhC,EAA6BnwC,GACjCgJ,MAAOC,EAAAA,GAAa,+BAAgC,4BACpD2F,MAAO,2BACPC,aAAc1P,EAAAA,EAAAA,SACd2P,OAAQ,CACJC,OAAQ5P,EAAAA,EAAAA,gBACR6P,SAASC,EAAAA,EAAAA,IAAS,KAAmD,MACrEC,OAAQ,MAGpB,CAiBC,OAjBA,2BACD,SAAI66B,EAAW7mC,EAAQ+oB,GACnB,IAAImkB,EAAU,GACM,cAAhBnkB,EAAK0I,SAILyb,GAAWltC,EAAOgW,iBAAmB,IAAI9nB,KAAI,SAAAyrC,GAAC,OAAI,IAAIr+B,EAAAA,EAASq+B,EAAEwT,mBAAoBxT,EAAE3pB,eAAe,KAE1G,IAAMrK,EAAY3F,EAAO8K,eACzB,GAAkB,OAAdnF,EAAJ,CAGA,IAAMkL,EAAU,IAAIu8B,EAAAA,EAA8BznC,EAAWunC,GAC7DltC,EAAO8Q,eACP9Q,EAAOiU,gBAAgBvmB,KAAK8d,GAAI,CAACqF,IACjC7Q,EAAO8Q,cAJP,CAKJ,KAAC,EA9BoC,CAAS1E,EAAAA,IAgClD6gC,EAA6BnwC,GAAK,uCAC3B,IAAMuwC,EAAiB,0CAC1B,aAAc,kCACJ,CACF7hC,GAAI,4BACJ1F,MAAOC,EAAAA,GAAa,eAAgB,eACpC2F,MAAO,cACPC,aAAc1P,EAAAA,EAAAA,SACd2P,OAAQ,CACJC,OAAQ5P,EAAAA,EAAAA,eACR6P,QAAS,KACTE,OAAQ,MAGpB,CA0EC,OA1EA,2BACD,SAAI66B,EAAW7mC,GACX,GAAKA,EAAOH,WAAZ,CAGA,IAAMytC,EAAM5/C,KAAK6/C,kBAAkBvtC,GAC7BnS,EAAQmS,EAAOC,WACrB,GAA6B,IAAzBpS,EAAMsS,gBAAsD,IAA9BtS,EAAMwS,iBAAiB,GAAzD,CAOA,IAHA,IAAIusC,EAAe,EACbh3B,EAAQ,GACR43B,EAAc,GACX19C,EAAI,EAAGmgC,EAAMqd,EAAIv+C,OAAQe,EAAImgC,EAAKngC,IAAK,CAC5C,IAAM46C,EAAK4C,EAAIx9C,GACX4K,EAAkBgwC,EAAGhwC,gBACrBO,EAAgByvC,EAAGzvC,cACnBL,EAAc,EACdE,EAAYjN,EAAMwS,iBAAiBpF,GACnCA,EAAgBpN,EAAMsS,gBACtBlF,GAAiB,EACjBH,EAAY,GAEPJ,EAAkB,IACvBA,GAAmB,EACnBE,EAAc/M,EAAMwS,iBAAiB3F,IAEzCkb,EAAM/iB,KAAK4gB,EAAAA,EAAAA,QAAsB,IAAI1D,EAAAA,EAAUrV,EAAiBE,EAAaK,EAAeH,GAAY,KACxG0yC,EAAY36C,KAAK,IAAIkd,EAAAA,EAAUrV,EAAkBkyC,EAAclC,EAAG16B,eAAgBtV,EAAkBkyC,EAAclC,EAAG16B,iBACrH48B,GAAiBlC,EAAGzvC,cAAgByvC,EAAGhwC,gBAAkB,CAC7D,CACAsF,EAAO8Q,eACP9Q,EAAO6V,aAAanoB,KAAK8d,GAAIoK,EAAO43B,GACpCxtC,EAAO8Q,cAxBP,CANA,CA+BJ,GAAC,+BACD,SAAkB9Q,GAEd,IAAMytC,EAAaztC,EAAOgW,gBAAgB9nB,KAAI,SAACyrC,GAC3C,IAAI1+B,EAAgB0+B,EAAE1+B,cAItB,OAHI0+B,EAAEj/B,gBAAkBi/B,EAAE1+B,eAAiC,IAAhB0+B,EAAE7+B,YACzCG,GAAiB,GAEd,CACHP,gBAAiBi/B,EAAEj/B,gBACnBgzC,qBAAsB/T,EAAE+T,qBACxBzyC,cAAeA,EACf+U,eAAgB2pB,EAAE3pB,eAE1B,IAEAy9B,EAAWj4C,MAAK,SAAC6B,EAAGC,GAChB,OAAID,EAAEqD,kBAAoBpD,EAAEoD,gBACjBrD,EAAE4D,cAAgB3D,EAAE2D,cAExB5D,EAAEqD,gBAAkBpD,EAAEoD,eACjC,IAIA,IAFA,IAAMizC,EAAmB,GACrBC,EAAoBH,EAAW,GAC1B39C,EAAI,EAAGA,EAAI29C,EAAW1+C,OAAQe,IAC/B89C,EAAkB3yC,cAAgB,GAAKwyC,EAAW39C,GAAG4K,gBAErDkzC,EAAkB3yC,cAAgBwyC,EAAW39C,GAAGmL,eAIhD0yC,EAAiB96C,KAAK+6C,GACtBA,EAAoBH,EAAW39C,IAKvC,OADA69C,EAAiB96C,KAAK+6C,GACfD,CACX,KAAC,EAvFyB,CAASvhC,EAAAA,IAyF1ByhC,EAAiB,0CAC1B,aAAc,kCACJ,CACFriC,GAAI,4BACJ1F,MAAOC,EAAAA,GAAa,eAAgB,eACpC2F,MAAO,cACPC,aAAc1P,EAAAA,EAAAA,SACd2P,OAAQ,CACJC,OAAQ5P,EAAAA,EAAAA,gBACR6P,QAAS,KACTE,OAAQ,MAGpB,CASC,OATA,2BACD,SAAI66B,EAAW7mC,GACX,IAAM8mC,EAAY9mC,EAAO+mC,gBACpBD,IAGL9mC,EAAO8Q,eACP9Q,EAAOiU,gBAAgBvmB,KAAK8d,GAAIsiC,EAAAA,GAAAA,OAAsBhH,EAAUiH,aAAc/tC,EAAOC,WAAYD,EAAOgW,kBACxGhW,EAAO8Q,eACX,KAAC,EAtByB,CAAS1E,EAAAA,IAwBjC4hC,EAAkB,0CACpB,aAAc,kCACJ,CACFxiC,GAAI,6BACJ1F,MAAOC,EAAAA,GAAa,gBAAiB,gBACrC2F,MAAO,eACPC,aAAc1P,EAAAA,EAAAA,SACd2P,OAAQ,CACJC,OAAQ5P,EAAAA,EAAAA,gBACR6P,QAAS,KACTE,OAAQ,MAGpB,CAGC,OAHA,2BACD,SAAI66B,EAAW7mC,GACXoxB,EAAAA,oBAAAA,QAAAA,iBAA6CyV,EAAW7mC,EAAQ,KACpE,KAAC,EAhBmB,CAASoM,EAAAA,IAkBpB6hC,EAAsB,0CAC/B,aAAc,kCACJ,CACFziC,GAAI,iCACJ1F,MAAOC,EAAAA,GAAa,qBAAsB,qBAC1C2F,MAAO,oBACPC,aAAc1P,EAAAA,EAAAA,SACd2P,OAAQ,CACJC,OAAQ5P,EAAAA,EAAAA,gBACR6P,QAAS,KACTE,OAAQ,MAGpB,CAQC,OARA,2BACD,SAAI66B,EAAW7mC,GACX,IAAM8mC,EAAY9mC,EAAO+mC,gBACpBD,IAGL9mC,EAAO8Q,eACP9Q,EAAOiU,gBAAgBvmB,KAAK8d,GAAIsiC,EAAAA,GAAAA,iBAAgChH,EAAUiH,aAAc/tC,EAAOC,WAAYD,EAAOgW,kBACtH,KAAC,EArB8B,CAAS5J,EAAAA,IAuB/B8hC,EAAqB,0CAC9B,aAAc,kCACJ,CACF1iC,GAAI,gCACJ1F,MAAOC,EAAAA,GAAa,oBAAqB,qBACzC2F,MAAO,oBACPC,aAAc1P,EAAAA,EAAAA,SACd2P,OAAQ,CACJC,OAAQ5P,EAAAA,EAAAA,gBACR6P,QAAS,KACTE,OAAQ,MAGpB,CAQC,OARA,2BACD,SAAI66B,EAAW7mC,GACX,IAAM8mC,EAAY9mC,EAAO+mC,gBACpBD,IAGL9mC,EAAO8Q,eACP9Q,EAAOiU,gBAAgBvmB,KAAK8d,GAAIsiC,EAAAA,GAAAA,gBAA+BhH,EAAUiH,aAAc/tC,EAAOC,WAAYD,EAAOgW,kBACrH,KAAC,EArB6B,CAAS5J,EAAAA,IAuB9B+hC,EAAiC,qGA2BzC,OA3ByC,2BAC1C,SAAItH,EAAW7mC,GACX,GAAKA,EAAOH,WAAZ,CAOA,IAJA,IAAMuuC,EAAgBpuC,EAAO8K,eACvBujC,EAAiB3gD,KAAK4gD,mBAAmBtuC,GAEzCuuC,EAAkB,GACfz+C,EAAI,EAAGijB,EAAQs7B,EAAet/C,OAAS,EAAGe,EAAIijB,EAAOjjB,IAAK,CAC/D,IAAMlB,EAAQy/C,EAAev+C,GACvB0+C,EAAYH,EAAev+C,EAAI,GACW,OAA5CkL,EAAAA,EAAAA,gBAAsBpM,EAAO4/C,GAC7BD,EAAgB17C,KAAKjE,GAGrBy/C,EAAev+C,EAAI,GAAKkL,EAAAA,EAAAA,UAAgBpM,EAAO4/C,EAEvD,CACAD,EAAgB17C,KAAKw7C,EAAeA,EAAet/C,OAAS,IAC5D,IAAM49C,EAAiBj/C,KAAK+gD,mBAAmBL,EAAeG,GACxD34B,EAAQ24B,EAAgBrgD,KAAI,SAAAU,GAC9B,OAAO6kB,EAAAA,EAAAA,QAAsB7kB,EAAO,GACxC,IACAoR,EAAO8Q,eACP9Q,EAAO6V,aAAanoB,KAAK8d,GAAIoK,EAAO+2B,GACpC3sC,EAAO8Q,cAtBP,CAuBJ,KAAC,EA3ByC,CAAS1E,EAAAA,IA6B1CsiC,EAAmB,0CAC5B,aAAc,kCACJ,CACFljC,GAAI,gBACJ1F,MAAOC,EAAAA,GAAa,sBAAuB,mBAC3C2F,MAAO,kBACPC,aAAc1P,EAAAA,EAAAA,SACd2P,OAAQ,CACJC,OAAQ5P,EAAAA,EAAAA,eACR6P,QAAS,EACT6iC,IAAK,CAAE7iC,QAAS,MAChBE,OAAQ,MAGpB,CAsDC,OAtDA,0CACD,SAAmBoiC,EAAeC,GAC9B,IAAIO,EAAmB,KACjBjC,EAAiB,GACnBkC,EAAe,EAqBnB,OApBAR,EAAenwC,SAAQ,SAAAtP,GACnB,IAAIkgD,EACJ,GAAwB,IAApBlgD,EAAMkM,WAAmB+zC,EAAe,EAAG,CAC3C,IAAME,EAAengD,EAAM8L,gBAAkBm0C,EAC7CC,EAAY,IAAI/+B,EAAAA,EAAUg/B,EAAcngD,EAAMgM,YAAam0C,EAAcngD,EAAMgM,YACnF,MAEIk0C,EAAY,IAAI/+B,EAAAA,EAAUnhB,EAAM8L,gBAAiB9L,EAAMgM,YAAahM,EAAM8L,gBAAiB9L,EAAMgM,aAErGi0C,GAAgBjgD,EAAMqM,cAAgBrM,EAAM8L,gBACxC9L,EAAMogD,gBAAgBZ,GACtBQ,EAAmBE,EAGnBnC,EAAe95C,KAAKi8C,EAE5B,IACIF,GACAjC,EAAesC,QAAQL,GAEpBjC,CACX,GAAC,gCACD,SAAmB3sC,GACf,IAAM+V,EAAa/V,EAAOgW,gBAC1B,GAAmB,OAAfD,EACA,MAAO,GAEX,IAAIs4B,EAAiBt4B,EACfloB,EAAQmS,EAAOC,WACrB,OAAc,OAAVpS,EACO,IAEXwgD,EAAe74C,KAAKwF,EAAAA,EAAAA,0BACpBqzC,EAAiBA,EAAengD,KAAI,SAAAyX,GAChC,GAAIA,EAAUmK,UAAW,CACrB,GAA8B,IAA1BnK,EAAU/K,YAAmB,CAC7B,IAAMs0C,EAAiBh0C,KAAKE,IAAI,EAAGuK,EAAUjL,gBAAkB,GACzDy0C,EAAiD,IAA9BxpC,EAAUjL,gBAAwB,EAAI7M,EAAM2kB,eAAe08B,GAAgBngD,OAAS,EAC7G,OAAO,IAAIiM,EAAAA,EAAMk0C,EAAgBC,EAAkBxpC,EAAUjL,gBAAiB,EAClF,CAEI,OAAO,IAAIM,EAAAA,EAAM2K,EAAUjL,gBAAiB,EAAGiL,EAAUjL,gBAAiBiL,EAAU/K,YAE5F,CAEI,OAAO,IAAII,EAAAA,EAAM2K,EAAUjL,gBAAiB,EAAGiL,EAAU1K,cAAe0K,EAAU7K,UAE1F,IAEJ,KAAC,EApE2B,CAASqzC,GAsE5BiB,EAAoB,0CAC7B,aAAc,kCACJ,CACF5jC,GAAI,iBACJ1F,MAAOC,EAAAA,GAAa,uBAAwB,oBAC5C2F,MAAO,mBACPC,aAAc1P,EAAAA,EAAAA,SACd2P,OAAQ,CACJC,OAAQ5P,EAAAA,EAAAA,eACR6P,QAAS,EACT6iC,IAAK,CAAE7iC,QAAS,IAAkDujC,UAAW,CAAC,OAC9ErjC,OAAQ,MAGpB,CA0CC,OA1CA,0CACD,SAAmBoiC,EAAeC,GAG9B,IAFA,IAAIO,EAAmB,KACjBjC,EAAiB,GACd78C,EAAI,EAAGmgC,EAAMoe,EAAet/C,OAAoBe,EAAImgC,EAAKngC,IAAK,CACnE,IAAMlB,EAAQy/C,EAAev+C,GACvBg/C,EAAY,IAAI/+B,EAAAA,EAAUnhB,EAAM8L,gBAFY,EAEc9L,EAAMgM,YAAahM,EAAM8L,gBAFvC,EAEiE9L,EAAMgM,aACrHhM,EAAMogD,gBAAgBZ,GACtBQ,EAAmBE,EAGnBnC,EAAe95C,KAAKi8C,EAE5B,CAIA,OAHIF,GACAjC,EAAesC,QAAQL,GAEpBjC,CACX,GAAC,gCACD,SAAmB3sC,GACf,IAAMnS,EAAQmS,EAAOC,WACrB,GAAc,OAAVpS,EACA,MAAO,GAEX,IAAMkoB,EAAa/V,EAAOgW,gBAC1B,GAAmB,OAAfD,EACA,MAAO,GAEX,IAAMs4B,EAAiBt4B,EAAW7nB,KAAI,SAACohD,GACnC,GAAIA,EAAIx/B,UAAW,CACf,IAAM1P,EAAYvS,EAAMwS,iBAAiBivC,EAAI50C,iBAC7C,OAAI40C,EAAI10C,cAAgBwF,EACb,IAAIpF,EAAAA,EAAMs0C,EAAI50C,gBAAiB40C,EAAI10C,YAAa00C,EAAI50C,gBAAkB,EAAG,GAGzE,IAAIM,EAAAA,EAAMs0C,EAAI50C,gBAAiB40C,EAAI10C,YAAa00C,EAAI50C,gBAAiB0F,EAEpF,CACA,OAAOkvC,CACX,IAEA,OADAjB,EAAe74C,KAAKwF,EAAAA,EAAAA,0BACbqzC,CACX,KAAC,EAxD4B,CAASF,GA0D7BoB,GAAe,0CACxB,aAAc,kCACJ,CACF/jC,GAAI,0BACJ1F,MAAOC,EAAAA,GAAa,kBAAmB,cACvC2F,MAAO,aACPC,aAAc1P,EAAAA,EAAAA,SACd2P,OAAQ,CACJC,OAAQ5P,EAAAA,EAAAA,gBACR6P,QAAS,EACT6iC,IAAK,CAAE7iC,QAAS,KAChBE,OAAQ,MAGpB,CA8HC,OA9HA,2BACD,SAAI66B,EAAW7mC,GACX,IAAM+V,EAAa/V,EAAOgW,gBAC1B,GAAmB,OAAfD,EAAJ,CAGA,IAAIq4B,EAAgBpuC,EAAO8K,eAC3B,GAAsB,OAAlBsjC,EAAJ,CAGAr4B,EAAWvgB,KAAKwF,EAAAA,EAAAA,0BAChB,IAAMw0C,EAAoB,GACpBC,EAAgB15B,EAAW8lB,QAAO,SAAC6T,EAAeC,GACpD,OAAID,EAAc5/B,UACV4/B,EAAcz0C,gBAAkB00C,EAAaj1C,iBACzC0zC,EAAcwB,gBAAgBF,KAC9BtB,EAAgBuB,GAEbA,GAEPA,EAAaj1C,gBAAkBg1C,EAAcz0C,cAAgB,GAC7Du0C,EAAkB38C,KAAK68C,GAChBC,GAGA,IAAI5/B,EAAAA,EAAU2/B,EAAch1C,gBAAiBg1C,EAAc90C,YAAa+0C,EAAa10C,cAAe00C,EAAa70C,WAIxH60C,EAAaj1C,gBAAkBg1C,EAAcz0C,eAC7Cu0C,EAAkB38C,KAAK68C,GAChBC,GAGA,IAAI5/B,EAAAA,EAAU2/B,EAAch1C,gBAAiBg1C,EAAc90C,YAAa+0C,EAAa10C,cAAe00C,EAAa70C,UAGpI,IACA00C,EAAkB38C,KAAK48C,GACvB,IAAM5hD,EAAQmS,EAAOC,WACrB,GAAc,OAAVpS,EAAJ,CAOA,IAJA,IAAM+nB,EAAQ,GACR+2B,EAAiB,GACnBiC,EAAmBR,EACnByB,EAAa,EACR//C,EAAI,EAAGmgC,EAAMuf,EAAkBzgD,OAAQe,EAAImgC,EAAKngC,IAAK,CAC1D,IAAM6V,EAAY6pC,EAAkB1/C,GAC9B4K,EAAkBiL,EAAUjL,gBAE9Bo1C,EAAoB,EACpB70C,OAAa,EAAEH,OAAS,EACtBi1C,EAA6BliD,EAAM2kB,eAAe7M,EAAU1K,eAAelM,OAAS4W,EAAU7K,UACpG,GAAI6K,EAAUmK,WAAanK,EAAUjL,kBAAoBiL,EAAU1K,cAAe,CAC9E,IAAMnN,EAAW6X,EAAUtK,mBACvBvN,EAASoS,WAAarS,EAAMsS,gBAC5BlF,EAAgBP,EAAkB,EAClCI,EAAYjN,EAAMwS,iBAAiBpF,KAGnCA,EAAgBnN,EAASoS,WACzBpF,EAAYjN,EAAMwS,iBAAiBvS,EAASoS,YAEpD,MAEIjF,EAAgB0K,EAAU1K,cAC1BH,EAAYjN,EAAMwS,iBAAiBpF,GAGvC,IADA,IAAI+0C,EAAsBniD,EAAM2kB,eAAe9X,GACtC5K,EAAI4K,EAAkB,EAAG5K,GAAKmL,EAAenL,IAAK,CACvD,IAAMs7B,EAAWv9B,EAAM2kB,eAAe1iB,GAChCmgD,EAAwBpiD,EAAMorB,gCAAgCnpB,GACpE,GAAImgD,GAAyB,EAAG,CAC5B,IAAIC,GAAc,EACU,KAAxBF,IACAE,GAAc,IAEdA,GAA+E,MAA/DF,EAAoBp+B,OAAOo+B,EAAoBjhD,OAAS,IACT,OAA/DihD,EAAoBp+B,OAAOo+B,EAAoBjhD,OAAS,KACxDmhD,GAAc,EACdF,EAAsBA,EAAoB91B,QAAQ,oBAAqB,MAE3E,IAAMi2B,EAAwB/kB,EAASnT,OAAOg4B,EAAwB,GACtED,IAAwBE,EAAc,IAAM,IAAMC,EAE9CL,EADAI,EACoBC,EAAsBphD,OAAS,EAG/BohD,EAAsBphD,MAElD,MAEI+gD,EAAoB,CAE5B,CACA,IAAMM,EAAkB,IAAIp1C,EAAAA,EAAMN,EA9Cd,EA8C4CO,EAAeH,GAC/E,IAAKs1C,EAAgBtgC,UAAW,CAC5B,IAAIugC,OAAe,EACf1qC,EAAUmK,WACV8F,EAAM/iB,KAAK4gB,EAAAA,EAAAA,QAAsB28B,EAAiBJ,IAClDK,EAAkB,IAAItgC,EAAAA,EAAUqgC,EAAgB11C,gBAAkBm1C,EAAYG,EAAoBjhD,OAAS+gD,EAAoB,EAAGp1C,EAAkBm1C,EAAYG,EAAoBjhD,OAAS+gD,EAAoB,IAG7MnqC,EAAUjL,kBAAoBiL,EAAU1K,eACxC2a,EAAM/iB,KAAK4gB,EAAAA,EAAAA,QAAsB28B,EAAiBJ,IAClDK,EAAkB,IAAItgC,EAAAA,EAAUpK,EAAUjL,gBAAkBm1C,EAAYlqC,EAAU/K,YAAa+K,EAAU1K,cAAgB40C,EAAYlqC,EAAU7K,aAG/I8a,EAAM/iB,KAAK4gB,EAAAA,EAAAA,QAAsB28B,EAAiBJ,IAClDK,EAAkB,IAAItgC,EAAAA,EAAUpK,EAAUjL,gBAAkBm1C,EAAYlqC,EAAU/K,YAAa+K,EAAUjL,gBAAkBm1C,EAAYG,EAAoBjhD,OAASghD,IAG9G,OAA1D/0C,EAAAA,EAAAA,gBAAsBo1C,EAAiBhC,GACvCQ,EAAmByB,EAGnB1D,EAAe95C,KAAKw9C,EAE5B,CACAR,GAAcO,EAAgBn1C,cAAgBm1C,EAAgB11C,eAClE,CACAiyC,EAAesC,QAAQL,GACvB5uC,EAAO8Q,eACP9Q,EAAO6V,aAAanoB,KAAK8d,GAAIoK,EAAO+2B,GACpC3sC,EAAO8Q,cAnFP,CAjCA,CAJA,CAyHJ,KAAC,EA5IuB,CAAS1E,EAAAA,IA8IxBkkC,GAAe,0CACxB,aAAc,kCACJ,CACF9kC,GAAI,0BACJ1F,MAAOC,EAAAA,GAAa,mBAAoB,0CACxC2F,MAAO,yCACPC,aAAc1P,EAAAA,EAAAA,UAEtB,CAqCC,OArCA,2BACD,SAAI4qC,EAAW7mC,GACX,IAAM+V,EAAa/V,EAAOgW,gBAC1B,GAAmB,OAAfD,EAAJ,CAGA,IAAMloB,EAAQmS,EAAOC,WACrB,GAAc,OAAVpS,EAAJ,CAIA,IADA,IAAMooC,EAAW,GACRnmC,EAAI,EAAGmgC,EAAMla,EAAWhnB,OAAQe,EAAImgC,EAAKngC,IAAK,CACnD,IAAM6V,EAAYoQ,EAAWjmB,GAC7B,GAAK6V,EAAUmK,UAAf,CAGA,IAAMtK,EAASG,EAAUtK,mBACnB+E,EAAYvS,EAAMwS,iBAAiBmF,EAAOtF,YAChD,GAAIsF,EAAO0G,QAAU9L,EAAW,CAC5B,GAAIoF,EAAOtF,aAAerS,EAAMsS,eAC5B,SAIJ,IAAMiwC,EAAkB,IAAIp1C,EAAAA,EAAMwK,EAAOtF,WAAYhF,KAAKE,IAAI,EAAGoK,EAAO0G,OAAS,GAAI1G,EAAOtF,WAAa,EAAG,GACtGqwC,EAAQ1iD,EAAMmsB,gBAAgBo2B,GAAiBzb,MAAM,IAAI7Y,UAAUgQ,KAAK,IAC9EmK,EAASpjC,KAAK,IAAI29C,EAAAA,GAAe,IAAIzgC,EAAAA,EAAUvK,EAAOtF,WAAYhF,KAAKE,IAAI,EAAGoK,EAAO0G,OAAS,GAAI1G,EAAOtF,WAAa,EAAG,GAAIqwC,GACjI,KACK,CACD,IAAMH,EAAkB,IAAIp1C,EAAAA,EAAMwK,EAAOtF,WAAYhF,KAAKE,IAAI,EAAGoK,EAAO0G,OAAS,GAAI1G,EAAOtF,WAAYsF,EAAO0G,OAAS,GAClHqkC,EAAQ1iD,EAAMmsB,gBAAgBo2B,GAAiBzb,MAAM,IAAI7Y,UAAUgQ,KAAK,IAC9EmK,EAASpjC,KAAK,IAAI49C,EAAAA,GAAqCL,EAAiBG,EAAO,IAAIxgC,EAAAA,EAAUvK,EAAOtF,WAAYsF,EAAO0G,OAAS,EAAG1G,EAAOtF,WAAYsF,EAAO0G,OAAS,IAC1K,CAjBA,CAkBJ,CACAlM,EAAO8Q,eACP9Q,EAAOiU,gBAAgBvmB,KAAK8d,GAAIyqB,GAChCj2B,EAAO8Q,cA3BP,CAJA,CAgCJ,KAAC,EA7CuB,CAAS1E,EAAAA,IA+CxBskC,GAAkB,qGA+B1B,OA/B0B,2BAC3B,SAAI7J,EAAW7mC,GACX,IAAM+V,EAAa/V,EAAOgW,gBAC1B,GAAmB,OAAfD,EAAJ,CAGA,IAAMloB,EAAQmS,EAAOC,WACrB,GAAc,OAAVpS,EAAJ,CAGA,IAEkC,EAF5B8iD,EAAiB3wC,EAAOjO,UAAU,KAClCylB,EAAY,GAAG,UACGzB,GAAU,IAAlC,IAAK,EAAL,qBAAoC,KAAzBpQ,EAAS,QAChB,GAAIA,EAAUmK,UAAW,CACrB,IAAMtK,EAASG,EAAUtK,mBACnB+gB,EAAOpc,EAAO4wC,4BAA4BprC,GAChD,IAAK4W,EACD,SAEJ,IAAMV,EAAY,IAAI1gB,EAAAA,EAAMwK,EAAOtF,WAAYkc,EAAKxhB,YAAa4K,EAAOtF,WAAYkc,EAAKthB,WACnFuU,EAAOxhB,EAAMmsB,gBAAgB0B,GACnClE,EAAU3kB,KAAK4gB,EAAAA,EAAAA,QAAsBiI,EAAWhuB,KAAKmjD,YAAYxhC,EAAMshC,IAC3E,KACK,CACD,IAAMthC,EAAOxhB,EAAMmsB,gBAAgBrU,GACnC6R,EAAU3kB,KAAK4gB,EAAAA,EAAAA,QAAsB9N,EAAWjY,KAAKmjD,YAAYxhC,EAAMshC,IAC3E,CACJ,CAAC,+BACD3wC,EAAO8Q,eACP9Q,EAAO6V,aAAanoB,KAAK8d,GAAIgM,GAC7BxX,EAAO8Q,cArBP,CAJA,CA0BJ,KAAC,EA/B0B,CAAS1E,EAAAA,IAiC3B0kC,GAAe,0CACxB,aAAc,kCACJ,CACFtlC,GAAI,qCACJ1F,MAAOC,EAAAA,GAAa,8BAA+B,0BACnD2F,MAAO,yBACPC,aAAc1P,EAAAA,EAAAA,UAEtB,CAGC,OAHA,mCACD,SAAYoT,EAAMshC,GACd,OAAOthC,EAAK0hC,mBAChB,KAAC,EAXuB,CAASL,IAaxBM,GAAe,0CACxB,aAAc,kCACJ,CACFxlC,GAAI,qCACJ1F,MAAOC,EAAAA,GAAa,8BAA+B,0BACnD2F,MAAO,yBACPC,aAAc1P,EAAAA,EAAAA,UAEtB,CAGC,OAHA,mCACD,SAAYoT,EAAMshC,GACd,OAAOthC,EAAK4hC,mBAChB,KAAC,EAXuB,CAASP,IAa/BQ,GAAyB,WAC3B,WAAYC,EAAUC,IAAQ,eAC1B1jD,KAAKyjD,SAAWA,EAChBzjD,KAAK0jD,OAASA,EACd1jD,KAAK2jD,QAAU,KACf3jD,KAAK4jD,YAAa,CACtB,CAeC,OAfA,2BACD,WACI,IAAK5jD,KAAK4jD,WAAY,CAClB5jD,KAAK4jD,YAAa,EAClB,IACI5jD,KAAK2jD,QAAU,IAAI13B,OAAOjsB,KAAKyjD,SAAUzjD,KAAK0jD,OAG9C,CADJ,MAAOG,GACH,CAER,CACA,OAAO7jD,KAAK2jD,OAChB,GAAC,yBACD,WACI,OAAuB,OAAf3jD,KAAK2B,KACjB,KAAC,EArB0B,GAuBlBmiD,GAAe,0CACxB,aAAc,kCACJ,CACFhmC,GAAI,qCACJ1F,MAAOC,EAAAA,GAAa,8BAA+B,2BACnD2F,MAAO,0BACPC,aAAc1P,EAAAA,EAAAA,UAEtB,CAUC,OAVA,mCACD,SAAYoT,EAAMshC,GACd,IAAMc,EAAgBD,EAAgBC,cAAcpiD,MACpD,OAAKoiD,EAIEpiC,EACF4hC,oBACA/2B,QAAQu3B,GAAe,SAACn6C,GAAC,OAAKA,EAAEy5C,mBAAmB,IAJ7C1hC,CAKf,KAAC,EAlBuB,CAASqhC,IAoBrCc,GAAgBC,cAAgB,IAAIP,GAA0B,2CAA8C,OACrG,IAAMQ,GAAe,0CACxB,aAAc,kCACJ,CACFlmC,GAAI,qCACJ1F,MAAOC,EAAAA,GAAa,8BAA+B,2BACnD2F,MAAO,0BACPC,aAAc1P,EAAAA,EAAAA,UAEtB,CAYC,OAZA,mCACD,SAAYoT,EAAMshC,GACd,IAAMgB,EAAeD,EAAgBC,aAAatiD,MAC5CuiD,EAAgBF,EAAgBE,cAAcviD,MACpD,OAAKsiD,GAAiBC,EAIdviC,EACH6K,QAAQy3B,EAAc,SACtBz3B,QAAQ03B,EAAe,WACvBX,oBALM5hC,CAMf,KAAC,EApBuB,CAASqhC,IAsBrCgB,GAAgBC,aAAe,IAAIT,GAA0B,qBAAsB,OACnFQ,GAAgBE,cAAgB,IAAIV,GAA0B,qCAAsC,OAC7F,IAAMW,GAAe,0CACxB,aAAc,kCACJ,CACFrmC,GAAI,qCACJ1F,MAAOC,EAAAA,GAAa,8BAA+B,2BACnD2F,MAAO,0BACPC,aAAc1P,EAAAA,EAAAA,UAEtB,CAQC,OARA,mCASD,SAAYoT,EAAMyiC,GACd,IAAMH,EAAeE,EAAgBF,aAAatiD,MAC5CuiD,EAAgBC,EAAgBD,cAAcviD,MAC9C0iD,EAAqBF,EAAgBE,mBAAmB1iD,MAC9D,OAAKsiD,GAAiBC,GAAkBG,EAIjC1iC,EACF6K,QAAQ63B,EAAoB,SAC5B73B,QAAQy3B,EAAc,SACtBz3B,QAAQ03B,EAAe,SACvBX,oBANM5hC,CAOf,IAAC,0BArBD,WAMI,MAL+B,CAC3B3hB,KAAKikD,aACLjkD,KAAKkkD,cACLlkD,KAAKqkD,oBACPhmB,OAAM,SAACimB,GAAM,OAAKA,EAAOC,aAAa,GAE5C,KAAC,EAhBuB,CAASvB,IAgCrCmB,GAAgBF,aAAe,IAAIT,GAA0B,qBAAsB,OACnFW,GAAgBD,cAAgB,IAAIV,GAA0B,mCAAoC,OAClGW,GAAgBE,mBAAqB,IAAIb,GAA0B,gBAAiB,OACpFxkC,EAAAA,EAAAA,IAAqBg/B,IACrBh/B,EAAAA,EAAAA,IAAqBq/B,IACrBr/B,EAAAA,EAAAA,IAAqBs/B,IACrBt/B,EAAAA,EAAAA,IAAqB0/B,IACrB1/B,EAAAA,EAAAA,IAAqB2/B,IACrB3/B,EAAAA,EAAAA,IAAqB8/B,IACrB9/B,EAAAA,EAAAA,IAAqB+/B,IACrB//B,EAAAA,EAAAA,IAAqBggC,IACrBhgC,EAAAA,EAAAA,IAAqBugC,IACrBvgC,EAAAA,EAAAA,IAAqB2gC,IACrB3gC,EAAAA,EAAAA,IAAqBmhC,IACrBnhC,EAAAA,EAAAA,IAAqBshC,IACrBthC,EAAAA,EAAAA,IAAqBuhC,IACrBvhC,EAAAA,EAAAA,IAAqBwhC,IACrBxhC,EAAAA,EAAAA,IAAqBgiC,IACrBhiC,EAAAA,EAAAA,IAAqB0iC,IACrB1iC,EAAAA,EAAAA,IAAqB6iC,KACrB7iC,EAAAA,EAAAA,IAAqB4jC,KACrB5jC,EAAAA,EAAAA,IAAqBokC,KACrBpkC,EAAAA,EAAAA,IAAqBskC,IACjBU,GAAgBC,aAAaM,eAAiBP,GAAgBE,cAAcK,gBAC5EvlC,EAAAA,EAAAA,IAAqBglC,IAErBF,GAAgBC,cAAcQ,gBAC9BvlC,EAAAA,EAAAA,IAAqB8kC,IAErBK,GAAgBI,gBAChBvlC,EAAAA,EAAAA,IAAqBmlC,G,kkBCngCrBn+C,EAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HxD,EAAvHyD,EAAIC,UAAUjF,OAAQkF,EAAIF,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOI,OAAOC,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,kBAAZM,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIhE,EAAI6D,EAAW5E,OAAS,EAAGe,GAAK,EAAGA,KAASQ,EAAIqD,EAAW7D,MAAImE,GAAKF,EAAI,EAAIzD,EAAE2D,GAAKF,EAAI,EAAIzD,EAAEsD,EAAQC,EAAKI,GAAK3D,EAAEsD,EAAQC,KAASI,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOI,eAAeV,EAAQC,EAAKI,GAAIA,CAChE,EACIM,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUb,EAAQC,GAAOY,EAAUb,EAAQC,EAAKW,EAAa,CACxE,EACIpI,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAwBamlD,EAAsC,IAAIxO,EAAAA,GAAc,6BAA6B,GAC5FyO,EAAwB,4BAC1BC,EAAyB,0CACzB,WAAYpyC,EAAQwf,EAAmB8J,EAAyBpX,EAA8BmgC,GAAgC,MA4BlG,OA5BkG,gBAC1H,gBACKngC,6BAA+BA,EACpC,EAAKogC,iBAAmB,EACxB,EAAKC,gBAAkB,EAAKxhD,UAAU,IAAI2H,EAAAA,IAC1C,EAAK9H,QAAUoP,EACf,EAAKwyC,WAAalpB,EAAwBmpB,2BAC1C,EAAKC,UAAW,EAChB,EAAKC,mBAAqBT,EAAoCnO,OAAOvkB,GACrE,EAAKozB,qBAAuBP,EAA+B7wB,IAAI,EAAKgxB,WAAY,iBAAkB,CAAEr3C,IAAK,MACzG,EAAK03C,oBAAsB,EAAKjiD,QAAQmJ,8BACxC,EAAK+4C,qBAAuB,KAC5B,EAAKC,oBAAsB,KAC3B,EAAKC,oBAAqB,EAC1B,EAAKT,gBAAkB,EAAKxhD,UAAU,IAAI2H,EAAAA,IAC1C,EAAKu6C,2BAA6B,KAClC,EAAKC,yBAA2B,KAChC,EAAKC,gBAAkB,KACvB,EAAKC,wBAA0B,KAC/B,EAAKC,4BAA8B,KACnC,EAAKtiD,UAAU,EAAKH,QAAQqZ,kBAAiB,kBAAM,EAAKqpC,cAAa,EAAK,KAC1E,EAAKviD,UAAU,EAAKH,QAAQ2L,0BAAyB,SAAAvP,IAC7CA,EAAEwP,WAAW,KAAwCxP,EAAEwP,WAAW,MAClE,EAAK82C,cAAa,EAE1B,KACA,EAAKviD,UAAU,EAAKyhD,WAAW9wB,aAAY,kBAAM,EAAK4xB,cAAa,EAAM,KACzE,EAAKviD,UAAU,EAAKH,QAAQsmB,0BAAyB,kBAAM,EAAKo8B,cAAa,EAAK,KAClF,EAAKA,cAAa,GAAM,CAC5B,CAGC,OAHA,oCAID,SAAaC,GAAc,WACjB1lD,EAAQH,KAAKkD,QAAQqP,WACrBuzC,EAAsB,OAAV3lD,IAAmBH,KAAKkD,QAAQmB,UAAU,KAAwCrE,KAAKkD,QAAQmB,UAAU,MAAwCrE,KAAK8kD,WAAW7jC,IAAI9gB,GACvL,IAAI2lD,IAAc9lD,KAAKglD,UAAaa,KAGpC7lD,KAAKglD,SAAWc,EAChB9lD,KAAK+lD,cACL/lD,KAAK6kD,gBAAgBh8C,QAChBi9C,GAAuB,OAAV3lD,GAAlB,CAGAH,KAAK6kD,gBAAgB35C,IAAIkhC,EAAAA,GAAAA,gBAAsBjsC,EAAM6lD,kCAAkC,WACnF,EAAKZ,qBAAuB,EAAK5gC,6BAA6BG,yBAAyBxkB,EAAMykB,iBAAiBqhC,mBAClH,KACA,IAAMC,EAAuB,IAAIC,EAAAA,GAAQnmD,KAAKklD,qBAAqBvjD,IAAIxB,IACjEimD,EAAqB,WACvB,IAAI9gD,EACJ,EAAKigD,2BAA6BW,EAAqBx8B,SAAQ,kBAAM,EAAKoc,cAAc,GAAoC,QAAjCxgC,EAAK,EAAK+gD,yBAAsC,IAAP/gD,EAAgBA,EAAK,EAAK4/C,qBAAqBvjD,IAAIxB,GAC3L,EACMmmD,EAAqB,IAAIH,EAAAA,GAAQ,GAIvCnmD,KAAK6kD,gBAAgB35C,IAAIlL,KAAKkD,QAAQ4gC,2BAA0B,WAC5DsiB,GACJ,KACApmD,KAAK6kD,gBAAgB35C,IAAIlL,KAAKkD,QAAQsyB,yBAAwB,SAACl2B,GAC3D,IAAK,EAAKgmD,oBACF,EAAKH,oBAAoB9jD,OAAS,EAAG,CACrC,IAAMklD,EAAiB,EAAKpB,oBAAoBqB,SAAS,GACzD,GAAID,GAAkBjnD,EAAEmhC,QAAQpC,OAAM,SAAAh4B,GAAC,OAAIkgD,EAAejF,gBAAgBj7C,EAAEnF,MAAM,IAE9E,OAZUb,EAWO,EAAKukD,sBAVlC,EAAKY,yBAA2Bc,EAAmB58B,SAAQ,kBAAM,EAAK+8B,YAAYpmD,EAAM,IAapF,CAdiB,IAACA,EAgBtB+lD,GACJ,KACApmD,KAAK6kD,gBAAgB35C,IAAI,CACrB2B,QAAS,WACLq5C,EAAqBr5C,UACrBy5C,EAAmBz5C,SACvB,IAEJ7M,KAAK8lC,cAlCL,CAmCJ,GAAC,yBACD,SAAYzlC,GAER,GAAKL,KAAKkD,QAAQiP,YAAc9R,IAAUL,KAAK4kD,kBAAwD,IAApC5kD,KAAKmlD,oBAAoB9jD,OAA5F,CAIA,IAAMlB,EAAQH,KAAKkD,QAAQqP,WACrBg0C,EAAiBvmD,KAAKmlD,oBAAoBqB,SAAS,GACzD,IAAKD,GAAkBA,EAAev5C,kBAAoBu5C,EAAeh5C,cACrE,OAAOvN,KAAK+lD,cAEhB,IAAMW,EAAiBvmD,EAAMmsB,gBAAgBi6B,GAC7C,GAAIvmD,KAAKqlD,oBAAqB,CAC1B,IAAMsB,EAAQD,EAAeC,MAAM3mD,KAAKqlD,qBAExC,IADoBsB,EAAQA,EAAM,GAAGtlD,OAAS,KAC1BqlD,EAAerlD,OAC/B,OAAOrB,KAAK+lD,aAEpB,CAEA,IADA,IAAM79B,EAAQ,GACL9lB,EAAI,EAAGmgC,EAAMviC,KAAKmlD,oBAAoB9jD,OAAQe,EAAImgC,EAAKngC,IAAK,CACjE,IAAMwkD,EAAc5mD,KAAKmlD,oBAAoBqB,SAASpkD,GACtD,GAAKwkD,EAGL,GAAIA,EAAY55C,kBAAoB45C,EAAYr5C,cAC5C2a,EAAM/iB,KAAK,CACPjE,MAAO0lD,EACPjlC,KAAM+kC,QAGT,CACD,IAAIG,EAAW1mD,EAAMmsB,gBAAgBs6B,GACjCplB,EAAWklB,EACXI,EAAmBF,EAAY15C,YAC/B65C,EAAiBH,EAAYx5C,UAC3B45C,EAAqBphC,EAAAA,GAA2BihC,EAAUrlB,GAChEslB,GAAoBE,EACpBH,EAAWA,EAASt8B,OAAOy8B,GAC3BxlB,EAAWA,EAASjX,OAAOy8B,GAC3B,IAAMC,EAAqBrhC,EAAAA,GAA2BihC,EAAUrlB,GAChEulB,GAAkBE,EAClBJ,EAAWA,EAASt8B,OAAO,EAAGs8B,EAASxlD,OAAS4lD,GAChDzlB,EAAWA,EAASjX,OAAO,EAAGiX,EAASngC,OAAS4lD,GAC5CH,IAAqBC,GAAsC,IAApBvlB,EAASngC,QAChD6mB,EAAM/iB,KAAK,CACPjE,MAAO,IAAIoM,EAAAA,EAAMs5C,EAAY55C,gBAAiB85C,EAAkBF,EAAYr5C,cAAew5C,GAC3FplC,KAAM6f,GAGlB,CACJ,CACA,GAAqB,IAAjBtZ,EAAM7mB,OAGV,IACIrB,KAAKkD,QAAQgkD,cACblnD,KAAKslD,oBAAqB,EAC1B,IAAM6B,EAAwBnnD,KAAKkD,QAAQm2C,gBAAgB+N,2BAC3DpnD,KAAKkD,QAAQilB,aAAa,gBAAiBD,GAC3CloB,KAAKkD,QAAQm2C,gBAAgBgO,yBAAyBF,EAI1D,CAHC,QAEGnnD,KAAKslD,oBAAqB,CAC9B,CA3DA,CA4DJ,GAAC,qBACD,WACItlD,KAAK+lD,eACL,sDACJ,GAAC,yBACD,WACI/lD,KAAKilD,mBAAmB34C,KAAI,GAC5BtM,KAAKmlD,oBAAoBt8C,QACrB7I,KAAKylD,kBACLzlD,KAAKylD,gBAAgBrhD,SACrBpE,KAAKylD,gBAAkB,KACvBzlD,KAAK0lD,wBAA0B,KAEvC,GAAC,0BACD,WAA4B,IAAf4B,EAAQ,UAAH,8CACd,OAAO5oD,EAAUsB,UAAM,OAAQ,GAAM,eAAE,2GAC9BA,KAAKkD,QAAQiP,WAAY,CAAF,eACL,OAAnBnS,KAAK+lD,cAAc,0BAGoB,GAArC3lD,EAAWJ,KAAKkD,QAAQqb,iBACzBve,KAAKglD,WAAasC,GAAStnD,KAAKkD,QAAQolB,gBAAgBjnB,OAAS,GAAC,gBAEhD,OAAnBrB,KAAK+lD,cAAc,0BAIoB,GADrC5lD,EAAQH,KAAKkD,QAAQqP,WACrBg1C,EAAiBpnD,EAAMuyB,gBACzB1yB,KAAK0lD,yBAA2B1lD,KAAK2lD,8BAAgC4B,EAAc,qBAC/EnnD,EAASqI,OAAOzI,KAAK0lD,yBAA0B,CAAF,uDAG7C1lD,KAAKmlD,oBAAoB9jD,OAAS,GAAC,iBACe,KAA5CH,EAAQlB,KAAKmlD,oBAAoBqB,SAAS,MACnCtlD,EAAM8uC,iBAAiB5vC,GAAS,mDAwDtB,OAnD/BJ,KAAK0lD,wBAA0BtlD,EAC/BJ,KAAK2lD,4BAA8B4B,EAC7BC,GAAUztC,EAAAA,EAAAA,KAAwB,SAAC1Z,GAAK,OAAK3B,EAAU,OAAM,OAAQ,GAAM,eAAE,uGAG1D,OAH0D,SAErE+oD,EAAK,IAAIC,EAAAA,GAAU,GAAM,SACRC,EAAuB3nD,KAAK8kD,WAAY3kD,EAAOC,EAAUC,GAAM,OAChC,GADhDunD,EAAW,EAAH,KACd5nD,KAAKklD,qBAAqB37B,OAAOppB,EAAOsnD,EAAGI,WACvCL,IAAYxnD,KAAKylD,gBAAe,iDAGR,GAA5BzlD,KAAKylD,gBAAkB,KACnB8B,IAAmBpnD,EAAMuyB,eAAc,mDAGvClF,EAAS,IACI,OAAbo6B,QAAkC,IAAbA,OAAsB,EAASA,EAASp6B,UAC7DA,EAASo6B,EAASp6B,QAEtBxtB,KAAKqlD,qBAAoC,OAAbuC,QAAkC,IAAbA,OAAsB,EAASA,EAASE,cAAgB9nD,KAAKolD,qBAC1G2C,GAAsB,EACjB3lD,EAAI,EAAGmgC,EAAM/U,EAAOnsB,OAAM,aAAEe,EAAImgC,GAAG,qBACpCj1B,EAAAA,EAAAA,iBAAuBkgB,EAAOprB,GAAIhC,GAAW,CAAF,gBAM1C,OALD2nD,GAAsB,EACZ,IAAN3lD,IACMmkD,EAAiB/4B,EAAOprB,GAC9BorB,EAAOw6B,OAAO5lD,EAAG,GACjBorB,EAAO+zB,QAAQgF,IAClB,6BAPqCnkD,IAAG,2BAW5C2lD,EAAqB,CAAF,gBAED,OAAnB/nD,KAAK+lD,cAAc,2BAGjBtjC,EAAc+K,EAAOhtB,KAAI,SAAAU,GAAK,MAAK,CAAEA,MAAOA,EAAOqL,QAASm4C,EAA0BphC,WAAY,IACxGtjB,KAAKilD,mBAAmB34C,KAAI,GAC5BtM,KAAKmlD,oBAAoB74C,IAAImW,GAC7BziB,KAAK4kD,mBAAoB,mDAGpBqD,EAAAA,EAAAA,IAAoB,EAAD,MACpBziD,EAAAA,EAAAA,IAAkB,EAAD,IAEjBxF,KAAKylD,kBAAoB+B,GAAYxnD,KAAKylD,iBAE1CzlD,KAAK+lD,cACR,yDAEP,IACF/lD,KAAKylD,gBAAkB+B,EAAQ,kBACxBA,GAAO,gDAEtB,IAAC,kBAhND,SAAWl1C,GACP,OAAOA,EAAOqL,gBAAgB+mC,EAA0Bt1C,GAC5D,KAAC,EAjCwB,CAA2CrJ,EAAAA,IAiPxE2+C,EAA0Bt1C,GAAK,+BAC/Bs1C,EAA0BphC,WAAazV,EAAAA,GAAAA,SAAgC,CACnEC,YAAa,iBACb4qB,WAAY,EACZ3qB,UAAW02C,IAEfC,EAA4B1+C,EAAW,CACnCa,EAAQ,EAAGwK,EAAAA,IACXxK,EAAQ,EAAGjF,EAAAA,GACXiF,EAAQ,EAAGohB,EAAAA,IACXphB,EAAQ,EAAGs0B,EAAAA,IACZupB,GAEI,IAAMwD,EAAmB,0CAC5B,aAAc,kCACJ,CACFpqC,GAAI,8BACJ1F,MAAOC,EAAAA,GAAa,sBAAuB,wBAC3C2F,MAAO,uBACPC,aAAcg5B,EAAAA,GAAAA,IAAmB1oC,EAAAA,EAAAA,SAA4BA,EAAAA,EAAAA,mBAC7D2P,OAAQ,CACJC,OAAQ5P,EAAAA,EAAAA,gBACR6P,QAAS,KACTE,OAAQ,MAGpB,CAwBC,OAxBA,kCACD,SAAW/c,EAAU85B,GAAM,WACjB8sB,EAAgB5mD,EAASI,IAAIymD,EAAAA,GACnC,EAAmB/3C,MAAM2Y,QAAQqS,IAASA,GAAQ,MAACx6B,OAAWA,GAAU,eAAjEiV,EAAG,KAAEo1B,EAAG,KACf,OAAI3P,EAAAA,EAAAA,MAAUzlB,IAAQlI,EAAAA,EAAAA,YAAqBs9B,GAChCid,EAAcE,eAAe,CAAE3wC,SAAU5B,GAAOqyC,EAAcG,uBAAuB5oD,MAAK,SAAA4S,GACxFA,IAGLA,EAAO01B,YAAYkD,GACnB54B,EAAOqf,qBAAoB,SAAApwB,GAEvB,OADA,EAAKgnD,gBAAgBhnD,EAAU+Q,GACxB,EAAKiG,IAAIhX,EAAU+Q,EAC9B,IACJ,GAAG9M,EAAAA,KAEA,yDAAiBjE,EAAU85B,EACtC,GAAC,iBACD,SAAI8d,EAAW7mC,GACX,IAAMkH,EAAakrC,EAA0B/iD,IAAI2Q,GACjD,OAAIkH,EACOza,QAAQC,QAAQwa,EAAWssB,cAAa,IAE5C/mC,QAAQC,SACnB,KAAC,EArC2B,CAAS0f,EAAAA,IAuCnC8pC,EAAuB5P,EAAAA,GAAAA,mBAAiC8L,EAA0B/iD,KAYxF,SAASgmD,EAAuBte,EAAWlpC,EAAOC,EAAUC,GAAO,WACzDooD,EAAiBpf,EAAU9oC,QAAQJ,GAIzC,OAAOuoD,EAAAA,EAAAA,IAAMD,EAAejoD,KAAI,SAAAX,GAAQ,OAAI,kBAAMnB,EAAU,OAAM,OAAQ,GAAM,eAAE,mFAEnE,OAFmE,kBAE7DmB,EAAS8oD,2BAA2BxoD,EAAOC,EAAUC,GAAM,+CAG3C,OAH2C,0BAGxEO,EAAAA,EAAAA,IAA0B,EAAD,IAAI,uBACtBC,GAAS,wDAEtB,MAAG,SAAArB,GAAM,QAAMA,GAAUopD,EAAAA,GAAkC,OAAXppD,QAA8B,IAAXA,OAAoB,EAASA,EAAOguB,OAAO,GACpH,EAzBAurB,EAAAA,EAAAA,IAAsB,IAAIyP,EAAqB,CAC3C1qC,GAAI,2BACJG,aAAcumC,EACd1L,QAAS,SAAAj/B,GAAC,OAAIA,EAAEksC,aAAa,EAC7B7nC,OAAQ,CACJC,OAAQ5P,EAAAA,EAAAA,gBACR+P,OAAQ,IACRF,QAAS,EACTujC,UAAW,CAAC,UAkBb,IAAMkH,GAAgCC,EAAAA,EAAAA,KAAc,iCAAkC,CAAEC,KAAMC,EAAAA,GAAAA,QAAc,QAAQxpC,YAAY,IAAMypC,MAAOD,EAAAA,GAAAA,QAAc,QAAQxpC,YAAY,IAAM0pC,OAAQF,EAAAA,GAAAA,QAAc,QAAQxpC,YAAY,IAAM2pC,QAASH,EAAAA,GAAAA,OAAe3wC,EAAAA,GAAa,gCAAiC,4DAClTgC,EAAAA,EAAAA,KAA2B,SAACC,EAAOC,GAC/B,IAAM6uC,EAAqC9uC,EAAMG,SAASouC,GACtDO,GACA7uC,EAAUI,QAAQ,mBAAD,OAAoB8pC,EAAqB,0BAAkB2E,EAAkC,gCAAwBA,EAAkC,OAEhL,KACA9nD,EAAAA,EAAAA,IAAgC,iCAAiC,SAAC63C,EAAWh5C,EAAOC,GAEhF,OAAOunD,EADgCxO,EAAUx3C,IAAIC,EAAAA,GAA7CmjD,2BACkD5kD,EAAOC,EAAU0B,EAAAA,EAAAA,KAC/E,KACAid,EAAAA,EAAAA,IAA2B2lC,EAA0Bt1C,GAAIs1C,IACzD1lC,EAAAA,EAAAA,IAAqBkpC,E,2YCvXjBxpD,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAWagqD,EAAI,WACb,WAAY5pC,EAAM5f,IAAU,eACxBG,KAAKspD,MAAQ7pC,EACbzf,KAAKupD,UAAY1pD,CACrB,CAkCC,OAlCA,8BACD,WACI,MAAO,CACHqB,MAAOlB,KAAKkB,MACZsoD,IAAKxpD,KAAKwpD,IACVl8B,QAASttB,KAAKstB,QAEtB,GAAC,iBACD,WACI,OAAOttB,KAAKspD,MAAMpoD,KACtB,GAAC,eACD,WACI,OAAOlB,KAAKspD,MAAME,GACtB,GAAC,mBACD,WACI,OAAOxpD,KAAKspD,MAAMh8B,OACtB,GAAC,qBACD,SAAQjtB,GACJ,OAAO3B,EAAUsB,UAAM,OAAQ,GAAM,eAAE,kGAC/BA,KAAKspD,MAAME,IAAK,CAAF,wCACPxpD,KAAKspD,MAAME,KAAG,UAEiB,oBAA/BxpD,KAAKupD,UAAUE,YAA0B,yCACzC1qD,QAAQC,QAAQgB,KAAKupD,UAAUE,YAAYzpD,KAAKspD,MAAOjpD,IAAQX,MAAK,SAAAP,GAEvE,OADA,EAAKmqD,MAAQnqD,GAAS,EAAKmqD,MACvB,EAAKA,MAAME,IAEJ,EAAKxqD,QAAQqB,GAEjBtB,QAAQE,OAAO,IAAI0jC,MAAM,WACpC,KAAE,gCAEC5jC,QAAQE,OAAO,IAAI0jC,MAAM,aAAW,+CAEnD,KAAC,EAtCY,GAwCJ+mB,EAAS,WAClB,WAAYC,GAAQ,2BAChB3pD,KAAK0tB,aAAe,IAAI1iB,EAAAA,GACxB,IACqC,EADjC4+C,EAAQ,GAAG,UACgBD,GAAM,qBAAE,yBAA3B97B,EAAI,KAAEhuB,EAAQ,KAEhBgqD,EAAWh8B,EAAK+7B,MAAMppD,KAAI,SAAAif,GAAI,OAAI,IAAI4pC,EAAK5pC,EAAM5f,EAAS,IAChE+pD,EAAQF,EAAUI,OAAOF,EAAOC,IAE5BE,EAAAA,EAAAA,IAAal8B,IACb,EAAKH,aAAaxiB,IAAI2iB,EAE9B,EARA,IAAK,EAAL,wBAQC,+BACD7tB,KAAK4pD,MAAQA,CACjB,CAuCC,OAvCA,+BACD,WACI5pD,KAAK0tB,aAAa7gB,UAClB7M,KAAK4pD,MAAMvoD,OAAS,CACxB,IAAC,qBACD,SAAc2oD,EAAUH,GAEpB,IACII,EACAC,EACAC,EACAC,EAJE5qD,EAAS,GAKf,IAAKyqD,EAAW,EAAGE,EAAW,EAAGD,EAASF,EAAS3oD,OAAQ+oD,EAASP,EAASxoD,OAAQ4oD,EAAWC,GAAUC,EAAWC,GAAS,CAC1H,IAAMC,EAAUL,EAASC,GACnBK,EAAUT,EAASM,GACzB,GAAI78C,EAAAA,EAAAA,0BAAgC+8C,EAAQnpD,MAAOopD,EAAQppD,OAEvD+oD,SAGqB38C,EAAAA,EAAAA,yBAA+B+8C,EAAQnpD,MAAOopD,EAAQppD,OACxD,GAEnB1B,EAAO2F,KAAKklD,GACZJ,MAIAzqD,EAAO2F,KAAKmlD,GACZH,IAER,CACA,KAAOF,EAAWC,EAAQD,IACtBzqD,EAAO2F,KAAK6kD,EAASC,IAEzB,KAAOE,EAAWC,EAAQD,IACtB3qD,EAAO2F,KAAK0kD,EAASM,IAEzB,OAAO3qD,CACX,KAAC,EArDiB,GAuDf,SAAS+qD,EAASlhB,EAAWlpC,EAAOE,GACvC,IAAM+nC,EAAQ,GAER9nC,EAAW+oC,EAAU9oC,QAAQJ,GAAOiuB,UAAU5tB,KAAI,SAACX,EAAUuC,GAC/D,OAAOrD,QAAQC,QAAQa,EAAS2qD,aAAarqD,EAAOE,IAAQX,MAAK,SAAAF,GACzDA,IACA4oC,EAAMhmC,GAAK,CAAC5C,EAAQK,GAE5B,GAAGe,EAAAA,GACP,IACA,OAAO7B,QAAQuvB,IAAIhuB,GAAUZ,MAAK,WAC9B,IAAMF,EAAS,IAAIkqD,GAAU1oD,EAAAA,EAAAA,IAASonC,IACtC,OAAK/nC,EAAM6sB,yBAGX1tB,EAAOqN,UACA,IAAI68C,EAAU,KAHVlqD,CAIf,GACJ,CACA47B,EAAAA,GAAAA,gBAAiC,wBAAwB,SAAC75B,GAAQ,2BAAK85B,EAAI,iCAAJA,EAAI,yBAAK38B,OAAU,OAAQ,OAAQ,GAAM,eAAE,uGAOvD,GANlDoX,EAAqBulB,EAAI,GAApBovB,EAAgBpvB,EAAI,IAC9BC,EAAAA,EAAAA,IAAWxlB,aAAeylB,EAAAA,GACE,kBAAjBkvB,IACPA,EAAe,GAClB,EACwBlpD,EAASI,IAAIC,EAAAA,GAA9B8oD,EAAY,EAAZA,aACFvqD,EAAQoB,EAASI,IAAIqlB,EAAAA,GAAezU,SAASuD,GACvC,CAAF,wCACC,IAAE,OAEA,OAFA,SAEMy0C,EAASG,EAAcvqD,EAAO2B,EAAAA,EAAAA,MAAuB,OAA9D,GAAJ+rB,EAAO,EAAH,KACC,CAAF,yCACE,IAAE,QAGJzrB,EAAI,EAAC,aAAEA,EAAIoL,KAAKC,IAAIg9C,EAAc58B,EAAK+7B,MAAMvoD,SAAO,iBACzD,OADyD,UACnDwsB,EAAK+7B,MAAMxnD,GAAGpD,QAAQ8C,EAAAA,EAAAA,MAAuB,QADQM,IAAG,wBAInD,OADT5C,EAASquB,EAAK+7B,MAAMhkD,MAAM,GAChCioB,EAAKhhB,UAAU,kBACRrN,GAAM,2CACf,I,yDC3JEwG,EAA0C,SAAUC,EAAYC,EAAQC,EAAKC,GAC7E,IAA2HxD,EAAvHyD,EAAIC,UAAUjF,OAAQkF,EAAIF,EAAI,EAAIH,EAAkB,OAATE,EAAgBA,EAAOI,OAAOC,yBAAyBP,EAAQC,GAAOC,EACrH,GAAuB,kBAAZM,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQC,EAAKC,QACpH,IAAK,IAAIhE,EAAI6D,EAAW5E,OAAS,EAAGe,GAAK,EAAGA,KAASQ,EAAIqD,EAAW7D,MAAImE,GAAKF,EAAI,EAAIzD,EAAE2D,GAAKF,EAAI,EAAIzD,EAAEsD,EAAQC,EAAKI,GAAK3D,EAAEsD,EAAQC,KAASI,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOI,eAAeV,EAAQC,EAAKI,GAAIA,CAChE,EACIM,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUb,EAAQC,GAAOY,EAAUb,EAAQC,EAAKW,EAAa,CACxE,EACIpI,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAkC,CAAvB,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAuBIsrD,EAAY,0CACZ,WAAYr4C,EAAQW,EAAe0c,EAAqBiM,EAAyB+oB,GAAgC,uBAC7G,gBACKryC,OAASA,EACd,EAAKW,cAAgBA,EACrB,EAAK0c,oBAAsBA,EAC3B,EAAKiM,wBAA0BA,EAC/B,EAAKyN,UAAY,EAAKzN,wBAAwB8uB,aAC9C,EAAKE,oBAAsBjG,EAA+B7wB,IAAI,EAAKuV,UAAW,QAAS,CAAE57B,IAAK,IAAMC,IAAK,MACzG,EAAKm9C,aAAe,EAAKxnD,UAAU,IAAIK,EAAAA,IAAiB,kBAAM,EAAKonD,iBAAiB,GAAE,MACtF,EAAKC,eAAiB,KACtB,EAAKC,gBAAkB,KACvB,EAAKC,mBAAqB,CAAC,EAC3B,EAAKC,uBAAyB,KAC9B,IAAMC,EAAmB,EAAK9nD,UAAU,IAAI+yB,EAAAA,GAAiB9jB,IAyC/B,OAxC9B,EAAKjP,UAAU8nD,EAAiB70B,8BAA6B,YAAiC,mBAA/BrtB,EAAU,KAAEmiD,EAAa,KACpF,EAAKlvC,mBAAmBjT,EAAYmiD,EACxC,KACA,EAAK/nD,UAAU8nD,EAAiBt0B,WAAU,SAACv3B,GACvC,EAAK+rD,gBAAgB/rD,EACzB,KACA,EAAK+D,UAAU8nD,EAAiBv0B,UAAS,SAACt3B,GACtC,EAAKgsD,6BACT,KACA,EAAKjoD,UAAUiP,EAAOzD,0BAAyB,SAACvP,GACvCA,EAAEwP,WAAW,MAIlB,EAAKy8C,kBAAkB,IAEvB,EAAKC,OAEL,EAAKX,aAAahmD,SAAS,GAC/B,KACA,EAAKxB,UAAUiP,EAAOkjB,yBAAwB,SAACl2B,GACtC,EAAKgT,OAAOH,YAGjB,EAAK04C,aAAahmD,SAAS,EAAK+lD,oBAAoBjpD,IAAI,EAAK2Q,OAAOC,YACxE,KACA,EAAKlP,UAAUiP,EAAOiK,kBAAiB,SAACjd,GACpC,EAAK2rD,mBAAqB,CAAC,EAC3B,EAAKC,uBAAyB,KAC9B,EAAKM,OACL,EAAKX,aAAahmD,SAAS,EAC/B,KACA,EAAKxB,UAAUiP,EAAOkX,0BAAyB,SAAClqB,GAC5C,EAAKksD,OACL,EAAKX,aAAahmD,SAAS,EAC/B,KACA,EAAKxB,UAAU,EAAKgmC,UAAUrV,aAAY,SAAC10B,GACvC,EAAKksD,OACL,EAAKX,aAAahmD,SAAS,EAC/B,KACA,EAAKgmD,aAAahmD,SAAS,GAAG,CAClC,CAGC,OAHA,uCAID,WACI,OAAOnG,EAAUsB,UAAM,OAAQ,GAAM,eAAE,qGAC9BA,KAAKsS,OAAOH,YAAenS,KAAKsS,OAAOjO,UAAU,IAA4B,iDAG9C,GAA9BlE,EAAQH,KAAKsS,OAAOC,WACrBvS,KAAKqpC,UAAUpoB,IAAI9gB,GAAQ,CAAF,gDAUH,OAPvBH,KAAKgrD,kBACLhrD,KAAKgrD,gBAAgBn+C,UACrB7M,KAAKgrD,gBAAkB,MAE3BhrD,KAAK+qD,gBAAiBhxC,EAAAA,EAAAA,KAAwB,SAAA1Z,GAAK,OAAIkqD,EAAS,EAAKlhB,UAAWlpC,EAAOE,EAAM,IAAE,SAErFonD,EAAK,IAAIC,EAAAA,GAAU,GAAM,UACF1nD,KAAK+qD,eAAc,QACK,GADrD/qD,KAAKgrD,gBAAkB,EAAH,KACpBhrD,KAAK4qD,oBAAoBrhC,OAAOppB,EAAOsnD,EAAGI,YACtC1nD,EAAMunB,aAAc,CAAF,kDAGtB1nB,KAAKurD,kBAAkBvrD,KAAKgrD,gBAAgBpB,OAAO,mDAGnDpkD,EAAAA,EAAAA,IAAkB,EAAD,IAAM,QAGI,OAHJ,UAGvBxF,KAAK+qD,eAAiB,KAAK,4EAGvC,GAAC,+BACD,SAAkBnB,GAId,IAJqB,WACfztB,EAAmF,WAArEn8B,KAAKsS,OAAOjO,UAAU,IACpConD,EAAiB,GAEvB,MADajlD,OAAO00B,KAAKl7B,KAAKirD,oBACC,eAAE,CAA5B,IAAMjiB,EAAY,KACb0iB,EAAY1rD,KAAKirD,mBAAmBjiB,GAC1CyiB,EAAetmD,KAAKumD,EAAU1iB,aAClC,CACA,IAAM2iB,EAAiB,GACvB,GAAI/B,EAAO,CACP,IACwB,EADxB,UACmBA,GAAK,IAAxB,IAAK,EAAL,qBAA0B,KAAfnqC,EAAI,QACXksC,EAAexmD,KAAKymD,EAAepzB,WAAW/Y,EAAM0c,GACxD,CAAC,+BACL,CACAn8B,KAAKsS,OAAOmoB,mBAAkB,SAACoO,GAC3B,IAAMpmB,EAAcomB,EAAelO,iBAAiB8wB,EAAgBE,GACpE,EAAKV,mBAAqB,CAAC,EAC3B,EAAKC,uBAAyB,KAC9B,IAAK,IAAI9oD,EAAI,EAAGmgC,EAAM9f,EAAYphB,OAAQe,EAAImgC,EAAKngC,IAAK,CACpD,IAAMspD,EAAY,IAAIE,EAAehC,EAAMxnD,GAAIqgB,EAAYrgB,IAC3D,EAAK6oD,mBAAmBS,EAAU1iB,cAAgB0iB,CACtD,CACJ,GACJ,GAAC,gCACD,SAAmBziD,EAAY4iD,GAAS,WAC9B1vB,EAAmF,WAArEn8B,KAAKsS,OAAOjO,UAAU,IAC1C,GAAIrE,KAAK8lD,UAAU78C,EAAY4iD,GAAU,CACrC7rD,KAAKsrD,8BACL,IAAMQ,EAAa9rD,KAAK+rD,kBAAkB9iD,EAAW/C,OAAO9F,UACxD0rD,GACA9rD,KAAKsS,OAAOmoB,mBAAkB,SAACoO,GAC3BijB,EAAWE,SAASnjB,EAAgB1M,GACpC,EAAK+uB,uBAAyBY,EAAW9iB,YAC7C,GAER,MAEIhpC,KAAKsrD,6BAEb,GAAC,yCACD,WACI,IAAMnvB,EAAmF,WAArEn8B,KAAKsS,OAAOjO,UAAU,IAC1C,GAAIrE,KAAKkrD,uBAAwB,CAC7B,IAAMY,EAAa9rD,KAAKirD,mBAAmBjrD,KAAKkrD,wBAC5CY,GACA9rD,KAAKsS,OAAOmoB,mBAAkB,SAACoO,GAC3BijB,EAAWG,WAAWpjB,EAAgB1M,EAC1C,IAEJn8B,KAAKkrD,uBAAyB,IAClC,CACJ,GAAC,6BACD,SAAgBjiD,GACZ,GAAKjJ,KAAK8lD,UAAU78C,GAApB,CAGA,IAAM6iD,EAAa9rD,KAAK+rD,kBAAkB9iD,EAAW/C,OAAO9F,UACvD0rD,GAGL9rD,KAAKksD,mBAAmBJ,EAAY7iD,EAAW4oB,uBAAuB,EALtE,CAMJ,GAAC,gCACD,SAAmBi6B,EAAYl6B,GAAqC,WAAzB7Z,EAAkB,UAAH,8CACtD,GAAK/X,KAAKiT,cAAV,CAGA,IAAQwM,EAASqsC,EAATrsC,KACRA,EAAKzgB,QAAQ8C,EAAAA,EAAAA,MAAwBpC,MAAK,SAAAoW,GAEtC,GAAmB,kBAARA,GAAoB,EAAKxD,OAAOH,WAAY,CACnD,IAAMg6C,EAAW,EAAK75C,OAAOC,WAAWuD,IACxC,GAAIq2C,EAAS5vB,SAAWC,EAAAA,GAAAA,MAAgB1mB,EAAIyqB,WAAW,GAAD,OAAI/D,EAAAA,GAAAA,KAAY,MAAM,CACxE,IAAM4vB,EAAY7wB,EAAAA,EAAAA,MAAUzlB,GAC5B,GAAIs2C,EAAU7vB,SAAWC,EAAAA,GAAAA,KAAc,CACnC,IAAM6vB,EAASC,EAAAA,GAAyBF,GACpCG,EAAe,KACfF,EAAO9rB,WAAW,OAClBgsB,EAAe,IAAH,OAAOF,EAAO9hC,OAAO,IAE5B8hC,EAAO9rB,WAAW,UACvBgsB,EAAe,IAAH,OAAOF,EAAO9hC,OAAO,KAEjCgiC,IACAz2C,EAAMw2C,EAAAA,GAAmBH,EAAUI,GAE3C,CACJ,CACJ,CACA,OAAO,EAAKt5C,cAAciE,KAAKpB,EAAK,CAAE8b,WAAAA,EAAY7Z,gBAAAA,EAAiBy0C,yBAAyB,EAAMr1C,eAAe,EAAMs1C,eAAe,GAC1I,IAAG,SAAA5I,GACC,IAAM6I,EAAiB7I,aAAelhB,MAAQkhB,EAAIttC,QAAUstC,EAErC,YAAnB6I,EACA,EAAK/8B,oBAAoBg9B,KAAKt0C,EAAAA,GAAa,cAAe,8DAA+DoH,EAAK+pC,IAAIxyC,aAE1G,YAAnB01C,EACL,EAAK/8B,oBAAoBg9B,KAAKt0C,EAAAA,GAAa,cAAe,6DAG1D7S,EAAAA,EAAAA,IAAkBq+C,EAE1B,GApCA,CAqCJ,GAAC,+BACD,SAAkBzjD,GACd,IAAKJ,KAAKsS,OAAOH,aAAe/R,EAC5B,OAAO,KAEX,IAMoC,EAN9BqiB,EAAcziB,KAAKsS,OAAOC,WAAW+nB,sBAAsB,CAC7DttB,gBAAiB5M,EAASoS,WAC1BtF,YAAa9M,EAASoe,OACtBjR,cAAenN,EAASoS,WACxBpF,UAAWhN,EAASoe,QACrB,GAAG,GAAM,UACaiE,GAAW,IAApC,IAAK,EAAL,qBAAsC,KAA3B+V,EAAU,QACXo0B,EAAoB5sD,KAAKirD,mBAAmBzyB,EAAW1a,IAC7D,GAAI8uC,EACA,OAAOA,CAEf,CAAC,+BACD,OAAO,IACX,GAAC,uBACD,SAAU3jD,EAAY4iD,GAClB,OAAO38C,QAAoC,IAA3BjG,EAAW/C,OAAOkD,OAC1BH,EAAW+pB,oBAAuB64B,GAAWA,EAAQgB,qBACjE,GAAC,kBACD,WACI,IAAIvnD,EACJtF,KAAK6qD,aAAazmD,SACdpE,KAAKgrD,kBAC2B,QAA/B1lD,EAAKtF,KAAKgrD,uBAAoC,IAAP1lD,GAAyBA,EAAGuH,UACpE7M,KAAKgrD,gBAAkB,MAEvBhrD,KAAK+qD,iBACL/qD,KAAK+qD,eAAe3mD,SACpBpE,KAAK+qD,eAAiB,KAE9B,GAAC,qBACD,YACI,uDACA/qD,KAAKwrD,MACT,IAAC,kBA/KD,SAAWl5C,GACP,OAAOA,EAAOqL,gBAAgBgtC,EAAav7C,GAC/C,KAAC,EA3DW,CAA8BrJ,EAAAA,IA0O9C4kD,EAAav7C,GAAK,sBAClBu7C,EAAe3kD,EAAW,CACtBa,EAAQ,EAAGuT,EAAAA,IACXvT,EAAQ,EAAG+oB,EAAAA,IACX/oB,EAAQ,EAAGjF,EAAAA,GACXiF,EAAQ,EAAGs0B,EAAAA,IACZwvB,GAEH,IAAMnyB,EAAa,CACfs0B,QAASj/C,EAAAA,GAAAA,SAAgC,CACrCC,YAAa,gBACb4qB,WAAY,EACZD,uBAAuB,EACvBH,gBAAiB,kBAErB+K,OAAQx1B,EAAAA,GAAAA,SAAgC,CACpCC,YAAa,uBACb4qB,WAAY,EACZD,uBAAuB,EACvBH,gBAAiB,0BAGnBszB,EAAc,WAChB,WAAYnsC,EAAMupB,IAAc,eAC5BhpC,KAAKyf,KAAOA,EACZzf,KAAKgpC,aAAeA,CACxB,CAWC,OAXA,gCAYD,SAASH,EAAgB1M,GACrB0M,EAAekkB,wBAAwB/sD,KAAKgpC,aAAc4iB,EAAeoB,YAAYhtD,KAAKyf,KAAM0c,GAAY,GAChH,GAAC,wBACD,SAAW0M,EAAgB1M,GACvB0M,EAAekkB,wBAAwB/sD,KAAKgpC,aAAc4iB,EAAeoB,YAAYhtD,KAAKyf,KAAM0c,GAAY,GAChH,IAAC,yBAhBD,SAAkB1c,EAAM0c,GACpB,MAAO,CACHj7B,MAAOue,EAAKve,MACZqL,QAASq/C,EAAeoB,YAAYvtC,EAAM0c,GAAY,GAE9D,GAAC,yBACD,SAAmB1c,EAAM0c,EAAYwT,GACjC,IAAMpjC,EAAU/F,OAAOymD,OAAO,CAAC,EAAItd,EAAWnX,EAAW6K,OAAS7K,EAAWs0B,SAE7E,OADAvgD,EAAQsI,aAUhB,SAAyB4K,EAAM0c,GAC3B,IAAM+wB,EAAaztC,EAAK+pC,KAAO,aAAazkC,KAAKtF,EAAK+pC,IAAIxyC,YACpDoB,EAAQqH,EAAK6N,QACb7N,EAAK6N,QACL4/B,EACI70C,EAAAA,GAAa,4BAA6B,mBAC1CA,EAAAA,GAAa,wBAAyB,eAC1C+jB,EAAKD,EACLE,EAAAA,GACIhkB,EAAAA,GAAa,6BAA8B,eAC3CA,EAAAA,GAAa,yBAA0B,gBAC3CgkB,EAAAA,GACIhkB,EAAAA,GAAa,4BAA6B,kBAC1CA,EAAAA,GAAa,wBAAyB,eAChD,GAAIoH,EAAK+pC,IAAK,CACV,IAAI2D,EAAc,GAClB,GAAI,aAAapoC,KAAKtF,EAAK+pC,IAAIxyC,YAAa,CAExC,IAAM2vC,EAAQlnC,EAAK+pC,IAAIxyC,WAAW2vC,MAAM,qBACxC,GAAIA,EAAO,CACP,IAAM/0C,EAAY+0C,EAAM,GACxBwG,EAAc90C,EAAAA,GAAa,sBAAuB,sBAAuBzG,EAC7E,CACJ,CAIA,OAHqB,IAAI4O,EAAAA,GAAe,IAAI,GACvC4sC,WAAW3tC,EAAK+pC,IAAIxyC,UAAS,GAAMwV,QAAQ,KAAM,OAAQpU,EAAO+0C,GAChEE,eAAe,KAAD,OAAMjxB,EAAE,KAE/B,CAEI,OAAO,IAAI5b,EAAAA,IAAiBC,WAAW,GAAD,OAAIrI,EAAK,aAAKgkB,EAAE,KAE9D,CA1C+BkxB,CAAgB7tC,EAAM0c,GACtC5vB,CACX,KAAC,EAfe,GAuDnB,IACKghD,EAAc,0CAChB,aAAc,kCACJ,CACFzvC,GAAI,yBACJ1F,MAAOC,EAAAA,GAAa,QAAS,aAC7B2F,MAAO,YACPC,kBAAcpd,GAEtB,CAgBC,OAhBA,2BACD,SAAIU,EAAU+Q,GACV,IAAMk7C,EAAe7C,EAAahpD,IAAI2Q,GACtC,GAAKk7C,GAGAl7C,EAAOH,WAAZ,CAGA,IAC4B,EADtBkW,EAAa/V,EAAOgW,gBAAgB,UACxBD,GAAU,IAA5B,IAAK,EAAL,qBAA8B,KAAnBu5B,EAAG,QACJniC,EAAO+tC,EAAazB,kBAAkBnK,EAAIzzB,kBAC5C1O,GACA+tC,EAAatB,mBAAmBzsC,GAAM,EAE9C,CAAC,+BAPD,CAQJ,KAAC,EAxBe,CAASf,EAAAA,KA0B7BK,EAAAA,EAAAA,IAA2B4rC,EAAav7C,GAAIu7C,IAC5C3rC,EAAAA,EAAAA,IAAqBuuC,IACrBlzC,EAAAA,EAAAA,KAA2B,SAACC,EAAOC,GAC/B,IAAMkzC,EAAuBnzC,EAAMG,SAASizC,EAAAA,KACxCD,GACAlzC,EAAUI,QAAQ,iDAAD,OAAkD8yC,EAAoB,kBAE/F,G","sources":["../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/getHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hoverOperation.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/contentHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/marginHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markerHoverParticipant.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hoverTypes.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markdownHoverParticipant.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplaceCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplace.js","../node_modules/monaco-editor/esm/vs/editor/contrib/indentation/browser/indentUtils.js","../node_modules/monaco-editor/esm/vs/editor/contrib/indentation/browser/indentation.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHints.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsLocations.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsController.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsContribution.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/consts.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/utils.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostText.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionToGhostText.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/suggestWidgetInlineCompletionProvider.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/suggestWidgetPreviewModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextController.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextHoverParticipant.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostText.contribution.js","../node_modules/monaco-editor/esm/vs/editor/contrib/lineSelection/browser/lineSelection.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/copyLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/moveLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/sortLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/linesOperations.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linkedEditing/browser/linkedEditing.js","../node_modules/monaco-editor/esm/vs/editor/contrib/links/browser/getLinks.js","../node_modules/monaco-editor/esm/vs/editor/contrib/links/browser/links.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class HoverProviderResult {\n    constructor(provider, hover, ordinal) {\n        this.provider = provider;\n        this.hover = hover;\n        this.ordinal = ordinal;\n    }\n}\nfunction executeProvider(provider, ordinal, model, position, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const result = yield Promise.resolve(provider.provideHover(model, position, token));\n            if (result && isValid(result)) {\n                return new HoverProviderResult(provider, result, ordinal);\n            }\n        }\n        catch (err) {\n            onUnexpectedExternalError(err);\n        }\n        return undefined;\n    });\n}\nexport function getHover(registry, model, position, token) {\n    const providers = registry.ordered(model);\n    const promises = providers.map((provider, index) => executeProvider(provider, index, model, position, token));\n    return AsyncIterableObject.fromPromises(promises).coalesce();\n}\nexport function getHoverPromise(registry, model, position, token) {\n    return getHover(registry, model, position, token).map(item => item.hover).toPromise();\n}\nregisterModelAndPositionCommand('_executeHoverProvider', (accessor, model, position) => {\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    return getHoverPromise(languageFeaturesService.hoverProvider, model, position, CancellationToken.None);\n});\nfunction isValid(result) {\n    const hasRange = (typeof result.range !== 'undefined');\n    const hasHtmlContent = typeof result.contents !== 'undefined' && result.contents && result.contents.length > 0;\n    return hasRange && hasHtmlContent;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { createCancelableAsyncIterable, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nexport class HoverResult {\n    constructor(value, isComplete, hasLoadingMessage) {\n        this.value = value;\n        this.isComplete = isComplete;\n        this.hasLoadingMessage = hasLoadingMessage;\n    }\n}\n/**\n * Computing the hover is very fine tuned.\n *\n * Suppose the hover delay is 300ms (the default). Then, when resting the mouse at an anchor:\n * - at 150ms, the async computation is triggered (i.e. semantic hover)\n *   - if async results already come in, they are not rendered yet.\n * - at 300ms, the sync computation is triggered (i.e. decorations, markers)\n *   - if there are sync or async results, they are rendered.\n * - at 900ms, if the async computation hasn't finished, a \"Loading...\" result is added.\n */\nexport class HoverOperation extends Disposable {\n    constructor(_editor, _computer) {\n        super();\n        this._editor = _editor;\n        this._computer = _computer;\n        this._onResult = this._register(new Emitter());\n        this.onResult = this._onResult.event;\n        this._firstWaitScheduler = this._register(new RunOnceScheduler(() => this._triggerAsyncComputation(), 0));\n        this._secondWaitScheduler = this._register(new RunOnceScheduler(() => this._triggerSyncComputation(), 0));\n        this._loadingMessageScheduler = this._register(new RunOnceScheduler(() => this._triggerLoadingMessage(), 0));\n        this._state = 0 /* HoverOperationState.Idle */;\n        this._asyncIterable = null;\n        this._asyncIterableDone = false;\n        this._result = [];\n    }\n    dispose() {\n        if (this._asyncIterable) {\n            this._asyncIterable.cancel();\n            this._asyncIterable = null;\n        }\n        super.dispose();\n    }\n    get _hoverTime() {\n        return this._editor.getOption(55 /* EditorOption.hover */).delay;\n    }\n    get _firstWaitTime() {\n        return this._hoverTime / 2;\n    }\n    get _secondWaitTime() {\n        return this._hoverTime - this._firstWaitTime;\n    }\n    get _loadingMessageTime() {\n        return 3 * this._hoverTime;\n    }\n    _setState(state, fireResult = true) {\n        this._state = state;\n        if (fireResult) {\n            this._fireResult();\n        }\n    }\n    _triggerAsyncComputation() {\n        this._setState(2 /* HoverOperationState.SecondWait */);\n        this._secondWaitScheduler.schedule(this._secondWaitTime);\n        if (this._computer.computeAsync) {\n            this._asyncIterableDone = false;\n            this._asyncIterable = createCancelableAsyncIterable(token => this._computer.computeAsync(token));\n            (() => __awaiter(this, void 0, void 0, function* () {\n                var e_1, _a;\n                try {\n                    try {\n                        for (var _b = __asyncValues(this._asyncIterable), _c; _c = yield _b.next(), !_c.done;) {\n                            const item = _c.value;\n                            if (item) {\n                                this._result.push(item);\n                                this._fireResult();\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                    this._asyncIterableDone = true;\n                    if (this._state === 3 /* HoverOperationState.WaitingForAsync */ || this._state === 4 /* HoverOperationState.WaitingForAsyncShowingLoading */) {\n                        this._setState(0 /* HoverOperationState.Idle */);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }))();\n        }\n        else {\n            this._asyncIterableDone = true;\n        }\n    }\n    _triggerSyncComputation() {\n        if (this._computer.computeSync) {\n            this._result = this._result.concat(this._computer.computeSync());\n        }\n        this._setState(this._asyncIterableDone ? 0 /* HoverOperationState.Idle */ : 3 /* HoverOperationState.WaitingForAsync */);\n    }\n    _triggerLoadingMessage() {\n        if (this._state === 3 /* HoverOperationState.WaitingForAsync */) {\n            this._setState(4 /* HoverOperationState.WaitingForAsyncShowingLoading */);\n        }\n    }\n    _fireResult() {\n        if (this._state === 1 /* HoverOperationState.FirstWait */ || this._state === 2 /* HoverOperationState.SecondWait */) {\n            // Do not send out results before the hover time\n            return;\n        }\n        const isComplete = (this._state === 0 /* HoverOperationState.Idle */);\n        const hasLoadingMessage = (this._state === 4 /* HoverOperationState.WaitingForAsyncShowingLoading */);\n        this._onResult.fire(new HoverResult(this._result.slice(0), isComplete, hasLoadingMessage));\n    }\n    start(mode) {\n        if (mode === 0 /* HoverStartMode.Delayed */) {\n            if (this._state === 0 /* HoverOperationState.Idle */) {\n                this._setState(1 /* HoverOperationState.FirstWait */);\n                this._firstWaitScheduler.schedule(this._firstWaitTime);\n                this._loadingMessageScheduler.schedule(this._loadingMessageTime);\n            }\n        }\n        else {\n            switch (this._state) {\n                case 0 /* HoverOperationState.Idle */:\n                    this._triggerAsyncComputation();\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n                case 2 /* HoverOperationState.SecondWait */:\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n            }\n        }\n    }\n    cancel() {\n        this._firstWaitScheduler.cancel();\n        this._secondWaitScheduler.cancel();\n        this._loadingMessageScheduler.cancel();\n        if (this._asyncIterable) {\n            this._asyncIterable.cancel();\n            this._asyncIterable = null;\n        }\n        this._result = [];\n        this._setState(0 /* HoverOperationState.Idle */, false);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { HoverAction, HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverParticipantRegistry, HoverRangeAnchor } from './hoverTypes.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { Context as SuggestContext } from '../../suggest/browser/suggest.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nconst $ = dom.$;\nlet ContentHoverController = class ContentHoverController extends Disposable {\n    constructor(_editor, _instantiationService, _keybindingService) {\n        super();\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._keybindingService = _keybindingService;\n        this._widget = this._register(this._instantiationService.createInstance(ContentHoverWidget, this._editor));\n        this._isChangingDecorations = false;\n        this._messages = [];\n        this._messagesAreComplete = false;\n        // Instantiate participants and sort them by `hoverOrdinal` which is relevant for rendering order.\n        this._participants = [];\n        for (const participant of HoverParticipantRegistry.getAll()) {\n            this._participants.push(this._instantiationService.createInstance(participant, this._editor));\n        }\n        this._participants.sort((p1, p2) => p1.hoverOrdinal - p2.hoverOrdinal);\n        this._computer = new ContentHoverComputer(this._editor, this._participants);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            this._withResult(result.value, result.isComplete, result.hasLoadingMessage);\n        }));\n        this._register(this._editor.onDidChangeModelDecorations(() => {\n            if (this._isChangingDecorations) {\n                return;\n            }\n            this._onModelDecorationsChanged();\n        }));\n        this._register(dom.addStandardDisposableListener(this._widget.getDomNode(), 'keydown', (e) => {\n            if (e.equals(9 /* KeyCode.Escape */)) {\n                this.hide();\n            }\n        }));\n        this._register(TokenizationRegistry.onDidChange(() => {\n            if (this._widget.position && this._computer.anchor && this._messages.length > 0) {\n                this._widget.clear();\n                this._renderMessages(this._computer.anchor, this._messages);\n            }\n        }));\n    }\n    _onModelDecorationsChanged() {\n        if (this._widget.position) {\n            // The decorations have changed and the hover is visible,\n            // we need to recompute the displayed text\n            this._hoverOperation.cancel();\n            if (!this._widget.isColorPickerVisible) { // TODO@Michel ensure that displayed text for other decorations is computed even if color picker is in place\n                this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n            }\n        }\n    }\n    maybeShowAt(mouseEvent) {\n        const anchorCandidates = [];\n        for (const participant of this._participants) {\n            if (participant.suggestHoverAnchor) {\n                const anchor = participant.suggestHoverAnchor(mouseEvent);\n                if (anchor) {\n                    anchorCandidates.push(anchor);\n                }\n            }\n        }\n        const target = mouseEvent.target;\n        if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            anchorCandidates.push(new HoverRangeAnchor(0, target.range));\n        }\n        if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            const epsilon = this._editor.getOption(46 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth / 2;\n            if (!target.detail.isAfterLines && typeof target.detail.horizontalDistanceToText === 'number' && target.detail.horizontalDistanceToText < epsilon) {\n                // Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough\n                anchorCandidates.push(new HoverRangeAnchor(0, target.range));\n            }\n        }\n        if (anchorCandidates.length === 0) {\n            return false;\n        }\n        anchorCandidates.sort((a, b) => b.priority - a.priority);\n        this._startShowingAt(anchorCandidates[0], 0 /* HoverStartMode.Delayed */, false);\n        return true;\n    }\n    startShowingAtRange(range, mode, focus) {\n        this._startShowingAt(new HoverRangeAnchor(0, range), mode, focus);\n    }\n    _startShowingAt(anchor, mode, focus) {\n        if (this._computer.anchor && this._computer.anchor.equals(anchor)) {\n            // We have to show the widget at the exact same range as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        if (this._widget.position) {\n            // The range might have changed, but the hover is visible\n            // Instead of hiding it completely, filter out messages that are still in the new range and\n            // kick off a new computation\n            if (!this._computer.anchor || !anchor.canAdoptVisibleHover(this._computer.anchor, this._widget.position)) {\n                this.hide();\n            }\n            else {\n                const filteredMessages = this._messages.filter((m) => m.isValidForHoverAnchor(anchor));\n                if (filteredMessages.length === 0) {\n                    this.hide();\n                }\n                else if (filteredMessages.length === this._messages.length && this._messagesAreComplete) {\n                    // no change\n                    return;\n                }\n                else {\n                    this._renderMessages(anchor, filteredMessages);\n                }\n            }\n        }\n        this._computer.anchor = anchor;\n        this._computer.shouldFocus = focus;\n        this._hoverOperation.start(mode);\n    }\n    hide() {\n        this._computer.anchor = null;\n        this._hoverOperation.cancel();\n        this._widget.hide();\n    }\n    isColorPickerVisible() {\n        return this._widget.isColorPickerVisible;\n    }\n    containsNode(node) {\n        return this._widget.getDomNode().contains(node);\n    }\n    _addLoadingMessage(result) {\n        if (this._computer.anchor) {\n            for (const participant of this._participants) {\n                if (participant.createLoadingMessage) {\n                    const loadingMessage = participant.createLoadingMessage(this._computer.anchor);\n                    if (loadingMessage) {\n                        return result.slice(0).concat([loadingMessage]);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    _withResult(result, isComplete, hasLoadingMessage) {\n        this._messages = (hasLoadingMessage ? this._addLoadingMessage(result) : result);\n        this._messagesAreComplete = isComplete;\n        if (this._computer.anchor && this._messages.length > 0) {\n            this._renderMessages(this._computer.anchor, this._messages);\n        }\n        else if (isComplete) {\n            this.hide();\n        }\n    }\n    _renderMessages(anchor, messages) {\n        const { showAtPosition, showAtRange, highlightRange } = ContentHoverController.computeHoverRanges(anchor.range, messages);\n        const disposables = new DisposableStore();\n        const statusBar = disposables.add(new EditorHoverStatusBar(this._keybindingService));\n        const fragment = document.createDocumentFragment();\n        let colorPicker = null;\n        const context = {\n            fragment,\n            statusBar,\n            setColorPicker: (widget) => colorPicker = widget,\n            onContentsChanged: () => this._widget.onContentsChanged(),\n            hide: () => this.hide()\n        };\n        for (const participant of this._participants) {\n            const hoverParts = messages.filter(msg => msg.owner === participant);\n            if (hoverParts.length > 0) {\n                disposables.add(participant.renderHoverParts(context, hoverParts));\n            }\n        }\n        if (statusBar.hasContent) {\n            fragment.appendChild(statusBar.hoverElement);\n        }\n        if (fragment.hasChildNodes()) {\n            if (highlightRange) {\n                const highlightDecoration = this._editor.createDecorationsCollection();\n                try {\n                    this._isChangingDecorations = true;\n                    highlightDecoration.set([{\n                            range: highlightRange,\n                            options: ContentHoverController._DECORATION_OPTIONS\n                        }]);\n                }\n                finally {\n                    this._isChangingDecorations = false;\n                }\n                disposables.add(toDisposable(() => {\n                    try {\n                        this._isChangingDecorations = true;\n                        highlightDecoration.clear();\n                    }\n                    finally {\n                        this._isChangingDecorations = false;\n                    }\n                }));\n            }\n            this._widget.showAt(fragment, new ContentHoverVisibleData(colorPicker, showAtPosition, showAtRange, this._editor.getOption(55 /* EditorOption.hover */).above, this._computer.shouldFocus, disposables));\n        }\n        else {\n            disposables.dispose();\n        }\n    }\n    static computeHoverRanges(anchorRange, messages) {\n        // The anchor range is always on a single line\n        const anchorLineNumber = anchorRange.startLineNumber;\n        let renderStartColumn = anchorRange.startColumn;\n        let renderEndColumn = anchorRange.endColumn;\n        let highlightRange = messages[0].range;\n        let forceShowAtRange = null;\n        for (const msg of messages) {\n            highlightRange = Range.plusRange(highlightRange, msg.range);\n            if (msg.range.startLineNumber === anchorLineNumber && msg.range.endLineNumber === anchorLineNumber) {\n                // this message has a range that is completely sitting on the line of the anchor\n                renderStartColumn = Math.min(renderStartColumn, msg.range.startColumn);\n                renderEndColumn = Math.max(renderEndColumn, msg.range.endColumn);\n            }\n            if (msg.forceShowAtRange) {\n                forceShowAtRange = msg.range;\n            }\n        }\n        return {\n            showAtPosition: forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorRange.startLineNumber, renderStartColumn),\n            showAtRange: forceShowAtRange ? forceShowAtRange : new Range(anchorLineNumber, renderStartColumn, anchorLineNumber, renderEndColumn),\n            highlightRange\n        };\n    }\n};\nContentHoverController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n    description: 'content-hover-highlight',\n    className: 'hoverHighlight'\n});\nContentHoverController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IKeybindingService)\n], ContentHoverController);\nexport { ContentHoverController };\nclass ContentHoverVisibleData {\n    constructor(colorPicker, showAtPosition, showAtRange, preferAbove, stoleFocus, disposables) {\n        this.colorPicker = colorPicker;\n        this.showAtPosition = showAtPosition;\n        this.showAtRange = showAtRange;\n        this.preferAbove = preferAbove;\n        this.stoleFocus = stoleFocus;\n        this.disposables = disposables;\n    }\n}\nlet ContentHoverWidget = class ContentHoverWidget extends Disposable {\n    constructor(_editor, _contextKeyService) {\n        super();\n        this._editor = _editor;\n        this._contextKeyService = _contextKeyService;\n        this.allowEditorOverflow = true;\n        this._hoverVisibleKey = EditorContextKeys.hoverVisible.bindTo(this._contextKeyService);\n        this._hover = this._register(new HoverWidget());\n        this._visibleData = null;\n        this._register(this._editor.onDidLayoutChange(() => this._layout()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(46 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._setVisibleData(null);\n        this._layout();\n        this._editor.addContentWidget(this);\n    }\n    /**\n     * Returns `null` if the hover is not visible.\n     */\n    get position() {\n        var _a, _b;\n        return (_b = (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.showAtPosition) !== null && _b !== void 0 ? _b : null;\n    }\n    get isColorPickerVisible() {\n        var _a;\n        return Boolean((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.colorPicker);\n    }\n    dispose() {\n        this._editor.removeContentWidget(this);\n        if (this._visibleData) {\n            this._visibleData.disposables.dispose();\n        }\n        super.dispose();\n    }\n    getId() {\n        return ContentHoverWidget.ID;\n    }\n    getDomNode() {\n        return this._hover.containerDomNode;\n    }\n    getPosition() {\n        if (!this._visibleData) {\n            return null;\n        }\n        let preferAbove = this._visibleData.preferAbove;\n        if (!preferAbove && this._contextKeyService.getContextKeyValue(SuggestContext.Visible.key)) {\n            // Prefer rendering above if the suggest widget is visible\n            preferAbove = true;\n        }\n        return {\n            position: this._visibleData.showAtPosition,\n            range: this._visibleData.showAtRange,\n            preference: (preferAbove\n                ? [1 /* ContentWidgetPositionPreference.ABOVE */, 2 /* ContentWidgetPositionPreference.BELOW */]\n                : [2 /* ContentWidgetPositionPreference.BELOW */, 1 /* ContentWidgetPositionPreference.ABOVE */]),\n        };\n    }\n    _setVisibleData(visibleData) {\n        if (this._visibleData) {\n            this._visibleData.disposables.dispose();\n        }\n        this._visibleData = visibleData;\n        this._hoverVisibleKey.set(!!this._visibleData);\n        this._hover.containerDomNode.classList.toggle('hidden', !this._visibleData);\n    }\n    _layout() {\n        const height = Math.max(this._editor.getLayoutInfo().height / 4, 250);\n        const { fontSize, lineHeight } = this._editor.getOption(46 /* EditorOption.fontInfo */);\n        this._hover.contentsDomNode.style.fontSize = `${fontSize}px`;\n        this._hover.contentsDomNode.style.lineHeight = `${lineHeight / fontSize}`;\n        this._hover.contentsDomNode.style.maxHeight = `${height}px`;\n        this._hover.contentsDomNode.style.maxWidth = `${Math.max(this._editor.getLayoutInfo().width * 0.66, 500)}px`;\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    showAt(node, visibleData) {\n        this._setVisibleData(visibleData);\n        this._hover.contentsDomNode.textContent = '';\n        this._hover.contentsDomNode.appendChild(node);\n        this._hover.contentsDomNode.style.paddingBottom = '';\n        this._updateFont();\n        this.onContentsChanged();\n        // Simply force a synchronous render on the editor\n        // such that the widget does not really render with left = '0px'\n        this._editor.render();\n        // See https://github.com/microsoft/vscode/issues/140339\n        // TODO: Doing a second layout of the hover after force rendering the editor\n        this.onContentsChanged();\n        if (visibleData.stoleFocus) {\n            this._hover.containerDomNode.focus();\n        }\n        if (visibleData.colorPicker) {\n            visibleData.colorPicker.layout();\n        }\n    }\n    hide() {\n        if (this._visibleData) {\n            const stoleFocus = this._visibleData.stoleFocus;\n            this._setVisibleData(null);\n            this._editor.layoutContentWidget(this);\n            if (stoleFocus) {\n                this._editor.focus();\n            }\n        }\n    }\n    onContentsChanged() {\n        this._editor.layoutContentWidget(this);\n        this._hover.onContentsChanged();\n        const scrollDimensions = this._hover.scrollbar.getScrollDimensions();\n        const hasHorizontalScrollbar = (scrollDimensions.scrollWidth > scrollDimensions.width);\n        if (hasHorizontalScrollbar) {\n            // There is just a horizontal scrollbar\n            const extraBottomPadding = `${this._hover.scrollbar.options.horizontalScrollbarSize}px`;\n            if (this._hover.contentsDomNode.style.paddingBottom !== extraBottomPadding) {\n                this._hover.contentsDomNode.style.paddingBottom = extraBottomPadding;\n                this._editor.layoutContentWidget(this);\n                this._hover.onContentsChanged();\n            }\n        }\n    }\n    clear() {\n        this._hover.contentsDomNode.textContent = '';\n    }\n};\nContentHoverWidget.ID = 'editor.contrib.contentHoverWidget';\nContentHoverWidget = __decorate([\n    __param(1, IContextKeyService)\n], ContentHoverWidget);\nexport { ContentHoverWidget };\nlet EditorHoverStatusBar = class EditorHoverStatusBar extends Disposable {\n    constructor(_keybindingService) {\n        super();\n        this._keybindingService = _keybindingService;\n        this._hasContent = false;\n        this.hoverElement = $('div.hover-row.status-bar');\n        this.actionsElement = dom.append(this.hoverElement, $('div.actions'));\n    }\n    get hasContent() {\n        return this._hasContent;\n    }\n    addAction(actionOptions) {\n        const keybinding = this._keybindingService.lookupKeybinding(actionOptions.commandId);\n        const keybindingLabel = keybinding ? keybinding.getLabel() : null;\n        this._hasContent = true;\n        return this._register(HoverAction.render(this.actionsElement, actionOptions, keybindingLabel));\n    }\n    append(element) {\n        const result = dom.append(this.actionsElement, element);\n        this._hasContent = true;\n        return result;\n    }\n};\nEditorHoverStatusBar = __decorate([\n    __param(0, IKeybindingService)\n], EditorHoverStatusBar);\nclass ContentHoverComputer {\n    constructor(_editor, _participants) {\n        this._editor = _editor;\n        this._participants = _participants;\n        this._anchor = null;\n        this._shouldFocus = false;\n    }\n    get anchor() { return this._anchor; }\n    set anchor(value) { this._anchor = value; }\n    get shouldFocus() { return this._shouldFocus; }\n    set shouldFocus(value) { this._shouldFocus = value; }\n    static _getLineDecorations(editor, anchor) {\n        if (anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return [];\n        }\n        const model = editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        if (lineNumber > model.getLineCount()) {\n            // invalid line\n            return [];\n        }\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        return editor.getLineDecorations(lineNumber).filter((d) => {\n            if (d.options.isWholeLine) {\n                return true;\n            }\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            if (d.options.showIfCollapsed) {\n                // Relax check around `showIfCollapsed` decorations to also include +/- 1 character\n                if (startColumn > anchor.range.startColumn + 1 || anchor.range.endColumn - 1 > endColumn) {\n                    return false;\n                }\n            }\n            else {\n                if (startColumn > anchor.range.startColumn || anchor.range.endColumn > endColumn) {\n                    return false;\n                }\n            }\n            return true;\n        });\n    }\n    computeAsync(token) {\n        const anchor = this._anchor;\n        if (!this._editor.hasModel() || !anchor) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, anchor);\n        return AsyncIterableObject.merge(this._participants.map((participant) => {\n            if (!participant.computeAsync) {\n                return AsyncIterableObject.EMPTY;\n            }\n            return participant.computeAsync(anchor, lineDecorations, token);\n        }));\n    }\n    computeSync() {\n        if (!this._editor.hasModel() || !this._anchor) {\n            return [];\n        }\n        const lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, this._anchor);\n        let result = [];\n        for (const participant of this._participants) {\n            result = result.concat(participant.computeSync(this._anchor, lineDecorations));\n        }\n        return coalesce(result);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { isEmptyMarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { NullOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nconst $ = dom.$;\nexport class MarginHoverWidget extends Disposable {\n    constructor(editor, languageService, openerService = NullOpenerService) {\n        super();\n        this._renderDisposeables = this._register(new DisposableStore());\n        this._editor = editor;\n        this._isVisible = false;\n        this._messages = [];\n        this._hover = this._register(new HoverWidget());\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        this._markdownRenderer = this._register(new MarkdownRenderer({ editor: this._editor }, languageService, openerService));\n        this._computer = new MarginHoverComputer(this._editor);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            this._withResult(result.value);\n        }));\n        this._register(this._editor.onDidChangeModelDecorations(() => this._onModelDecorationsChanged()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(46 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._editor.addOverlayWidget(this);\n    }\n    dispose() {\n        this._editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n    getId() {\n        return MarginHoverWidget.ID;\n    }\n    getDomNode() {\n        return this._hover.containerDomNode;\n    }\n    getPosition() {\n        return null;\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    _onModelDecorationsChanged() {\n        if (this._isVisible) {\n            // The decorations have changed and the hover is visible,\n            // we need to recompute the displayed text\n            this._hoverOperation.cancel();\n            this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n        }\n    }\n    startShowingAt(lineNumber) {\n        if (this._computer.lineNumber === lineNumber) {\n            // We have to show the widget at the exact same line number as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        this.hide();\n        this._computer.lineNumber = lineNumber;\n        this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n    }\n    hide() {\n        this._computer.lineNumber = -1;\n        this._hoverOperation.cancel();\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n    }\n    _withResult(result) {\n        this._messages = result;\n        if (this._messages.length > 0) {\n            this._renderMessages(this._computer.lineNumber, this._messages);\n        }\n        else {\n            this.hide();\n        }\n    }\n    _renderMessages(lineNumber, messages) {\n        this._renderDisposeables.clear();\n        const fragment = document.createDocumentFragment();\n        for (const msg of messages) {\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderedContents = this._renderDisposeables.add(this._markdownRenderer.render(msg.value));\n            hoverContentsElement.appendChild(renderedContents.element);\n            fragment.appendChild(markdownHoverElement);\n        }\n        this._updateContents(fragment);\n        this._showAt(lineNumber);\n    }\n    _updateContents(node) {\n        this._hover.contentsDomNode.textContent = '';\n        this._hover.contentsDomNode.appendChild(node);\n        this._updateFont();\n    }\n    _showAt(lineNumber) {\n        if (!this._isVisible) {\n            this._isVisible = true;\n            this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        }\n        const editorLayout = this._editor.getLayoutInfo();\n        const topForLineNumber = this._editor.getTopForLineNumber(lineNumber);\n        const editorScrollTop = this._editor.getScrollTop();\n        const lineHeight = this._editor.getOption(61 /* EditorOption.lineHeight */);\n        const nodeHeight = this._hover.containerDomNode.clientHeight;\n        const top = topForLineNumber - editorScrollTop - ((nodeHeight - lineHeight) / 2);\n        this._hover.containerDomNode.style.left = `${editorLayout.glyphMarginLeft + editorLayout.glyphMarginWidth}px`;\n        this._hover.containerDomNode.style.top = `${Math.max(Math.round(top), 0)}px`;\n    }\n}\nMarginHoverWidget.ID = 'editor.contrib.modesGlyphHoverWidget';\nclass MarginHoverComputer {\n    constructor(_editor) {\n        this._editor = _editor;\n        this._lineNumber = -1;\n    }\n    get lineNumber() {\n        return this._lineNumber;\n    }\n    set lineNumber(value) {\n        this._lineNumber = value;\n    }\n    computeSync() {\n        const toHoverMessage = (contents) => {\n            return {\n                value: contents\n            };\n        };\n        const lineDecorations = this._editor.getLineDecorations(this._lineNumber);\n        const result = [];\n        if (!lineDecorations) {\n            return result;\n        }\n        for (const d of lineDecorations) {\n            if (!d.options.glyphMarginClassName) {\n                continue;\n            }\n            const hoverMessage = d.options.glyphMarginHoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            result.push(...asArray(hoverMessage).map(toHoverMessage));\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, disposableTimeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { basename } from '../../../../base/common/resources.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IMarkerDecorationsService } from '../../../common/services/markerDecorations.js';\nimport { getCodeActions } from '../../codeAction/browser/codeAction.js';\nimport { QuickFixAction, QuickFixController } from '../../codeAction/browser/codeActionCommands.js';\nimport { CodeActionKind, CodeActionTriggerSource } from '../../codeAction/browser/types.js';\nimport { MarkerController, NextMarkerAction } from '../../gotoError/browser/gotoError.js';\nimport * as nls from '../../../../nls.js';\nimport { IMarkerData, MarkerSeverity } from '../../../../platform/markers/common/markers.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nimport { textLinkActiveForeground, textLinkForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nconst $ = dom.$;\nexport class MarkerHover {\n    constructor(owner, range, marker) {\n        this.owner = owner;\n        this.range = range;\n        this.marker = marker;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nconst markerCodeActionTrigger = {\n    type: 1 /* CodeActionTriggerType.Invoke */,\n    filter: { include: CodeActionKind.QuickFix },\n    triggerAction: CodeActionTriggerSource.QuickFixHover\n};\nlet MarkerHoverParticipant = class MarkerHoverParticipant {\n    constructor(_editor, _markerDecorationsService, _openerService, _languageFeaturesService) {\n        this._editor = _editor;\n        this._markerDecorationsService = _markerDecorationsService;\n        this._openerService = _openerService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this.hoverOrdinal = 5;\n        this.recentMarkerCodeActionsInfo = undefined;\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const marker = this._markerDecorationsService.getMarker(model.uri, d);\n            if (!marker) {\n                continue;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkerHover(this, range, marker));\n        }\n        return result;\n    }\n    renderHoverParts(context, hoverParts) {\n        if (!hoverParts.length) {\n            return Disposable.None;\n        }\n        const disposables = new DisposableStore();\n        hoverParts.forEach(msg => context.fragment.appendChild(this.renderMarkerHover(msg, disposables)));\n        const markerHoverForStatusbar = hoverParts.length === 1 ? hoverParts[0] : hoverParts.sort((a, b) => MarkerSeverity.compare(a.marker.severity, b.marker.severity))[0];\n        this.renderMarkerStatusbar(context, markerHoverForStatusbar, disposables);\n        return disposables;\n    }\n    renderMarkerHover(markerHover, disposables) {\n        const hoverElement = $('div.hover-row');\n        const markerElement = dom.append(hoverElement, $('div.marker.hover-contents'));\n        const { source, message, code, relatedInformation } = markerHover.marker;\n        this._editor.applyFontInfo(markerElement);\n        const messageElement = dom.append(markerElement, $('span'));\n        messageElement.style.whiteSpace = 'pre-wrap';\n        messageElement.innerText = message;\n        if (source || code) {\n            // Code has link\n            if (code && typeof code !== 'string') {\n                const sourceAndCodeElement = $('span');\n                if (source) {\n                    const sourceElement = dom.append(sourceAndCodeElement, $('span'));\n                    sourceElement.innerText = source;\n                }\n                const codeLink = dom.append(sourceAndCodeElement, $('a.code-link'));\n                codeLink.setAttribute('href', code.target.toString());\n                disposables.add(dom.addDisposableListener(codeLink, 'click', (e) => {\n                    this._openerService.open(code.target, { allowCommands: true });\n                    e.preventDefault();\n                    e.stopPropagation();\n                }));\n                const codeElement = dom.append(codeLink, $('span'));\n                codeElement.innerText = code.value;\n                const detailsElement = dom.append(markerElement, sourceAndCodeElement);\n                detailsElement.style.opacity = '0.6';\n                detailsElement.style.paddingLeft = '6px';\n            }\n            else {\n                const detailsElement = dom.append(markerElement, $('span'));\n                detailsElement.style.opacity = '0.6';\n                detailsElement.style.paddingLeft = '6px';\n                detailsElement.innerText = source && code ? `${source}(${code})` : source ? source : `(${code})`;\n            }\n        }\n        if (isNonEmptyArray(relatedInformation)) {\n            for (const { message, resource, startLineNumber, startColumn } of relatedInformation) {\n                const relatedInfoContainer = dom.append(markerElement, $('div'));\n                relatedInfoContainer.style.marginTop = '8px';\n                const a = dom.append(relatedInfoContainer, $('a'));\n                a.innerText = `${basename(resource)}(${startLineNumber}, ${startColumn}): `;\n                a.style.cursor = 'pointer';\n                disposables.add(dom.addDisposableListener(a, 'click', (e) => {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    if (this._openerService) {\n                        this._openerService.open(resource, {\n                            fromUserGesture: true,\n                            editorOptions: { selection: { startLineNumber, startColumn } }\n                        }).catch(onUnexpectedError);\n                    }\n                }));\n                const messageElement = dom.append(relatedInfoContainer, $('span'));\n                messageElement.innerText = message;\n                this._editor.applyFontInfo(messageElement);\n            }\n        }\n        return hoverElement;\n    }\n    renderMarkerStatusbar(context, markerHover, disposables) {\n        if (markerHover.marker.severity === MarkerSeverity.Error || markerHover.marker.severity === MarkerSeverity.Warning || markerHover.marker.severity === MarkerSeverity.Info) {\n            context.statusBar.addAction({\n                label: nls.localize('view problem', \"View Problem\"),\n                commandId: NextMarkerAction.ID,\n                run: () => {\n                    var _a;\n                    context.hide();\n                    (_a = MarkerController.get(this._editor)) === null || _a === void 0 ? void 0 : _a.showAtMarker(markerHover.marker);\n                    this._editor.focus();\n                }\n            });\n        }\n        if (!this._editor.getOption(83 /* EditorOption.readOnly */)) {\n            const quickfixPlaceholderElement = context.statusBar.append($('div'));\n            if (this.recentMarkerCodeActionsInfo) {\n                if (IMarkerData.makeKey(this.recentMarkerCodeActionsInfo.marker) === IMarkerData.makeKey(markerHover.marker)) {\n                    if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\n                        quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\n                    }\n                }\n                else {\n                    this.recentMarkerCodeActionsInfo = undefined;\n                }\n            }\n            const updatePlaceholderDisposable = this.recentMarkerCodeActionsInfo && !this.recentMarkerCodeActionsInfo.hasCodeActions ? Disposable.None : disposables.add(disposableTimeout(() => quickfixPlaceholderElement.textContent = nls.localize('checkingForQuickFixes', \"Checking for quick fixes...\"), 200));\n            if (!quickfixPlaceholderElement.textContent) {\n                // Have some content in here to avoid flickering\n                quickfixPlaceholderElement.textContent = String.fromCharCode(0xA0); // &nbsp;\n            }\n            const codeActionsPromise = this.getCodeActions(markerHover.marker);\n            disposables.add(toDisposable(() => codeActionsPromise.cancel()));\n            codeActionsPromise.then(actions => {\n                updatePlaceholderDisposable.dispose();\n                this.recentMarkerCodeActionsInfo = { marker: markerHover.marker, hasCodeActions: actions.validActions.length > 0 };\n                if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\n                    actions.dispose();\n                    quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\n                    return;\n                }\n                quickfixPlaceholderElement.style.display = 'none';\n                let showing = false;\n                disposables.add(toDisposable(() => {\n                    if (!showing) {\n                        actions.dispose();\n                    }\n                }));\n                context.statusBar.addAction({\n                    label: nls.localize('quick fixes', \"Quick Fix...\"),\n                    commandId: QuickFixAction.Id,\n                    run: (target) => {\n                        showing = true;\n                        const controller = QuickFixController.get(this._editor);\n                        const elementPosition = dom.getDomNodePagePosition(target);\n                        // Hide the hover pre-emptively, otherwise the editor can close the code actions\n                        // context menu as well when using keyboard navigation\n                        context.hide();\n                        controller === null || controller === void 0 ? void 0 : controller.showCodeActions(markerCodeActionTrigger, actions, {\n                            x: elementPosition.left + 6,\n                            y: elementPosition.top + elementPosition.height + 6,\n                            width: elementPosition.width,\n                            height: elementPosition.height\n                        });\n                    }\n                });\n            }, onUnexpectedError);\n        }\n    }\n    getCodeActions(marker) {\n        return createCancelablePromise(cancellationToken => {\n            return getCodeActions(this._languageFeaturesService.codeActionProvider, this._editor.getModel(), new Range(marker.startLineNumber, marker.startColumn, marker.endLineNumber, marker.endColumn), markerCodeActionTrigger, Progress.None, cancellationToken);\n        });\n    }\n};\nMarkerHoverParticipant = __decorate([\n    __param(1, IMarkerDecorationsService),\n    __param(2, IOpenerService),\n    __param(3, ILanguageFeaturesService)\n], MarkerHoverParticipant);\nexport { MarkerHoverParticipant };\nregisterThemingParticipant((theme, collector) => {\n    const linkFg = theme.getColor(textLinkForeground);\n    if (linkFg) {\n        collector.addRule(`.monaco-hover .hover-contents a.code-link span { color: ${linkFg}; }`);\n    }\n    const activeLinkFg = theme.getColor(textLinkActiveForeground);\n    if (activeLinkFg) {\n        collector.addRule(`.monaco-hover .hover-contents a.code-link span:hover { color: ${activeLinkFg}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { GotoDefinitionAtPositionEditorContribution } from '../../gotoSymbol/browser/link/goToDefinitionAtPosition.js';\nimport { ContentHoverWidget, ContentHoverController } from './contentHover.js';\nimport { MarginHoverWidget } from './marginHover.js';\nimport * as nls from '../../../../nls.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { editorHoverBackground, editorHoverBorder, editorHoverForeground, editorHoverHighlight, editorHoverStatusBarBackground, textCodeBlockBackground, textLinkActiveForeground, textLinkForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { HoverParticipantRegistry } from './hoverTypes.js';\nimport { MarkdownHoverParticipant } from './markdownHoverParticipant.js';\nimport { MarkerHoverParticipant } from './markerHoverParticipant.js';\nlet ModesHoverController = class ModesHoverController {\n    constructor(_editor, _instantiationService, _openerService, _languageService, _contextKeyService) {\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._openerService = _openerService;\n        this._languageService = _languageService;\n        this._toUnhook = new DisposableStore();\n        this._isMouseDown = false;\n        this._hoverClicked = false;\n        this._contentWidget = null;\n        this._glyphWidget = null;\n        this._hookEvents();\n        this._didChangeConfigurationHandler = this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(55 /* EditorOption.hover */)) {\n                this._unhookEvents();\n                this._hookEvents();\n            }\n        });\n    }\n    static get(editor) {\n        return editor.getContribution(ModesHoverController.ID);\n    }\n    _hookEvents() {\n        const hideWidgetsEventHandler = () => this._hideWidgets();\n        const hoverOpts = this._editor.getOption(55 /* EditorOption.hover */);\n        this._isHoverEnabled = hoverOpts.enabled;\n        this._isHoverSticky = hoverOpts.sticky;\n        if (this._isHoverEnabled) {\n            this._toUnhook.add(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\n            this._toUnhook.add(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\n        }\n        else {\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\n        }\n        this._toUnhook.add(this._editor.onMouseLeave((e) => this._onEditorMouseLeave(e)));\n        this._toUnhook.add(this._editor.onDidChangeModel(hideWidgetsEventHandler));\n        this._toUnhook.add(this._editor.onDidScrollChange((e) => this._onEditorScrollChanged(e)));\n    }\n    _unhookEvents() {\n        this._toUnhook.clear();\n    }\n    _onEditorScrollChanged(e) {\n        if (e.scrollTopChanged || e.scrollLeftChanged) {\n            this._hideWidgets();\n        }\n    }\n    _onEditorMouseDown(mouseEvent) {\n        this._isMouseDown = true;\n        const target = mouseEvent.target;\n        if (target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID) {\n            this._hoverClicked = true;\n            // mouse down on top of content hover widget\n            return;\n        }\n        if (target.type === 12 /* MouseTargetType.OVERLAY_WIDGET */ && target.detail === MarginHoverWidget.ID) {\n            // mouse down on top of overlay hover widget\n            return;\n        }\n        if (target.type !== 12 /* MouseTargetType.OVERLAY_WIDGET */) {\n            this._hoverClicked = false;\n        }\n        this._hideWidgets();\n    }\n    _onEditorMouseUp(mouseEvent) {\n        this._isMouseDown = false;\n    }\n    _onEditorMouseLeave(mouseEvent) {\n        var _a;\n        const targetEm = (mouseEvent.event.browserEvent.relatedTarget);\n        if ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.containsNode(targetEm)) {\n            // when the mouse is inside hover widget\n            return;\n        }\n        this._hideWidgets();\n    }\n    _onEditorMouseMove(mouseEvent) {\n        var _a, _b, _c, _d, _e;\n        const target = mouseEvent.target;\n        if (this._isMouseDown && this._hoverClicked) {\n            return;\n        }\n        if (this._isHoverSticky && target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID) {\n            // mouse moved on top of content hover widget\n            return;\n        }\n        if (this._isHoverSticky && !((_b = (_a = mouseEvent.event.browserEvent.view) === null || _a === void 0 ? void 0 : _a.getSelection()) === null || _b === void 0 ? void 0 : _b.isCollapsed)) {\n            // selected text within content hover widget\n            return;\n        }\n        if (!this._isHoverSticky && target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID\n            && ((_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.isColorPickerVisible())) {\n            // though the hover is not sticky, the color picker needs to.\n            return;\n        }\n        if (this._isHoverSticky && target.type === 12 /* MouseTargetType.OVERLAY_WIDGET */ && target.detail === MarginHoverWidget.ID) {\n            // mouse moved on top of overlay hover widget\n            return;\n        }\n        if (!this._isHoverEnabled) {\n            this._hideWidgets();\n            return;\n        }\n        const contentWidget = this._getOrCreateContentWidget();\n        if (contentWidget.maybeShowAt(mouseEvent)) {\n            (_d = this._glyphWidget) === null || _d === void 0 ? void 0 : _d.hide();\n            return;\n        }\n        if (target.type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */ && target.position) {\n            (_e = this._contentWidget) === null || _e === void 0 ? void 0 : _e.hide();\n            if (!this._glyphWidget) {\n                this._glyphWidget = new MarginHoverWidget(this._editor, this._languageService, this._openerService);\n            }\n            this._glyphWidget.startShowingAt(target.position.lineNumber);\n            return;\n        }\n        this._hideWidgets();\n    }\n    _onKeyDown(e) {\n        if (e.keyCode !== 5 /* KeyCode.Ctrl */ && e.keyCode !== 6 /* KeyCode.Alt */ && e.keyCode !== 57 /* KeyCode.Meta */ && e.keyCode !== 4 /* KeyCode.Shift */) {\n            // Do not hide hover when a modifier key is pressed\n            this._hideWidgets();\n        }\n    }\n    _hideWidgets() {\n        var _a, _b, _c;\n        if ((this._isMouseDown && this._hoverClicked && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible()))) {\n            return;\n        }\n        this._hoverClicked = false;\n        (_b = this._glyphWidget) === null || _b === void 0 ? void 0 : _b.hide();\n        (_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.hide();\n    }\n    _getOrCreateContentWidget() {\n        if (!this._contentWidget) {\n            this._contentWidget = this._instantiationService.createInstance(ContentHoverController, this._editor);\n        }\n        return this._contentWidget;\n    }\n    isColorPickerVisible() {\n        var _a;\n        return ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible()) || false;\n    }\n    showContentHover(range, mode, focus) {\n        this._getOrCreateContentWidget().startShowingAtRange(range, mode, focus);\n    }\n    dispose() {\n        var _a, _b;\n        this._unhookEvents();\n        this._toUnhook.dispose();\n        this._didChangeConfigurationHandler.dispose();\n        (_a = this._glyphWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n        (_b = this._contentWidget) === null || _b === void 0 ? void 0 : _b.dispose();\n    }\n};\nModesHoverController.ID = 'editor.contrib.hover';\nModesHoverController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IOpenerService),\n    __param(3, ILanguageService),\n    __param(4, IContextKeyService)\n], ModesHoverController);\nexport { ModesHoverController };\nclass ShowHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.showHover',\n            label: nls.localize({\n                key: 'showHover',\n                comment: [\n                    'Label for action that will trigger the showing of a hover in the editor.',\n                    'This allows for users to show the hover without using the mouse.'\n                ]\n            }, \"Show Hover\"),\n            alias: 'Show Hover',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const position = editor.getPosition();\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const focus = editor.getOption(2 /* EditorOption.accessibilitySupport */) === 2 /* AccessibilitySupport.Enabled */;\n        controller.showContentHover(range, 1 /* HoverStartMode.Immediate */, focus);\n    }\n}\nclass ShowDefinitionPreviewHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.showDefinitionPreviewHover',\n            label: nls.localize({\n                key: 'showDefinitionPreviewHover',\n                comment: [\n                    'Label for action that will trigger the showing of definition preview hover in the editor.',\n                    'This allows for users to show the definition preview hover without using the mouse.'\n                ]\n            }, \"Show Definition Preview Hover\"),\n            alias: 'Show Definition Preview Hover',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const position = editor.getPosition();\n        if (!position) {\n            return;\n        }\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const goto = GotoDefinitionAtPositionEditorContribution.get(editor);\n        if (!goto) {\n            return;\n        }\n        const promise = goto.startFindDefinitionFromCursor(position);\n        promise.then(() => {\n            controller.showContentHover(range, 1 /* HoverStartMode.Immediate */, true);\n        });\n    }\n}\nregisterEditorContribution(ModesHoverController.ID, ModesHoverController);\nregisterEditorAction(ShowHoverAction);\nregisterEditorAction(ShowDefinitionPreviewHoverAction);\nHoverParticipantRegistry.register(MarkdownHoverParticipant);\nHoverParticipantRegistry.register(MarkerHoverParticipant);\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const editorHoverHighlightColor = theme.getColor(editorHoverHighlight);\n    if (editorHoverHighlightColor) {\n        collector.addRule(`.monaco-editor .hoverHighlight { background-color: ${editorHoverHighlightColor}; }`);\n    }\n    const hoverBackground = theme.getColor(editorHoverBackground);\n    if (hoverBackground) {\n        collector.addRule(`.monaco-editor .monaco-hover { background-color: ${hoverBackground}; }`);\n    }\n    const hoverBorder = theme.getColor(editorHoverBorder);\n    if (hoverBorder) {\n        collector.addRule(`.monaco-editor .monaco-hover { border: 1px solid ${hoverBorder}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-bottom: 0px solid ${hoverBorder.transparent(0.5)}; }`);\n    }\n    const link = theme.getColor(textLinkForeground);\n    if (link) {\n        collector.addRule(`.monaco-editor .monaco-hover a { color: ${link}; }`);\n    }\n    const linkHover = theme.getColor(textLinkActiveForeground);\n    if (linkHover) {\n        collector.addRule(`.monaco-editor .monaco-hover a:hover { color: ${linkHover}; }`);\n    }\n    const hoverForeground = theme.getColor(editorHoverForeground);\n    if (hoverForeground) {\n        collector.addRule(`.monaco-editor .monaco-hover { color: ${hoverForeground}; }`);\n    }\n    const actionsBackground = theme.getColor(editorHoverStatusBarBackground);\n    if (actionsBackground) {\n        collector.addRule(`.monaco-editor .monaco-hover .hover-row .actions { background-color: ${actionsBackground}; }`);\n    }\n    const codeBackground = theme.getColor(textCodeBlockBackground);\n    if (codeBackground) {\n        collector.addRule(`.monaco-editor .monaco-hover code { background-color: ${codeBackground}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class HoverRangeAnchor {\n    constructor(priority, range) {\n        this.priority = priority;\n        this.range = range;\n        this.type = 1 /* HoverAnchorType.Range */;\n    }\n    equals(other) {\n        return (other.type === 1 /* HoverAnchorType.Range */ && this.range.equalsRange(other.range));\n    }\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\n        return (lastAnchor.type === 1 /* HoverAnchorType.Range */ && showAtPosition.lineNumber === this.range.startLineNumber);\n    }\n}\nexport class HoverForeignElementAnchor {\n    constructor(priority, owner, range) {\n        this.priority = priority;\n        this.owner = owner;\n        this.range = range;\n        this.type = 2 /* HoverAnchorType.ForeignElement */;\n    }\n    equals(other) {\n        return (other.type === 2 /* HoverAnchorType.ForeignElement */ && this.owner === other.owner);\n    }\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\n        return (lastAnchor.type === 2 /* HoverAnchorType.ForeignElement */ && this.owner === lastAnchor.owner);\n    }\n}\nexport const HoverParticipantRegistry = (new class HoverParticipantRegistry {\n    constructor() {\n        this._participants = [];\n    }\n    register(ctor) {\n        this._participants.push(ctor);\n    }\n    getAll() {\n        return this._participants;\n    }\n}());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { getHover } from './getHover.js';\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nconst $ = dom.$;\nexport class MarkdownHover {\n    constructor(owner, range, contents, ordinal) {\n        this.owner = owner;\n        this.range = range;\n        this.contents = contents;\n        this.ordinal = ordinal;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nlet MarkdownHoverParticipant = class MarkdownHoverParticipant {\n    constructor(_editor, _languageService, _openerService, _configurationService, _languageFeaturesService) {\n        this._editor = _editor;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this._configurationService = _configurationService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this.hoverOrdinal = 2;\n    }\n    createLoadingMessage(anchor) {\n        return new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(nls.localize('modesContentHover.loading', \"Loading...\"))], 2000);\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        let index = 1000;\n        const lineLength = model.getLineLength(lineNumber);\n        const languageId = model.getLanguageIdAtPosition(anchor.range.startLineNumber, anchor.range.startColumn);\n        const maxTokenizationLineLength = this._configurationService.getValue('editor.maxTokenizationLineLength', {\n            overrideIdentifier: languageId\n        });\n        if (typeof maxTokenizationLineLength === 'number' && lineLength >= maxTokenizationLineLength) {\n            result.push(new MarkdownHover(this, anchor.range, [{\n                    value: nls.localize('too many characters', \"Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.\")\n                }], index++));\n        }\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const hoverMessage = d.options.hoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkdownHover(this, range, asArray(hoverMessage), index++));\n        }\n        return result;\n    }\n    computeAsync(anchor, lineDecorations, token) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const model = this._editor.getModel();\n        if (!this._languageFeaturesService.hoverProvider.has(model)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const position = new Position(anchor.range.startLineNumber, anchor.range.startColumn);\n        return getHover(this._languageFeaturesService.hoverProvider, model, position, token)\n            .filter(item => !isEmptyMarkdownString(item.hover.contents))\n            .map(item => {\n            const rng = item.hover.range ? Range.lift(item.hover.range) : anchor.range;\n            return new MarkdownHover(this, rng, item.hover.contents, item.ordinal);\n        });\n    }\n    renderHoverParts(context, hoverParts) {\n        return renderMarkdownHovers(context, hoverParts, this._editor, this._languageService, this._openerService);\n    }\n};\nMarkdownHoverParticipant = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService),\n    __param(4, ILanguageFeaturesService)\n], MarkdownHoverParticipant);\nexport { MarkdownHoverParticipant };\nexport function renderMarkdownHovers(context, hoverParts, editor, languageService, openerService) {\n    // Sort hover parts to keep them stable since they might come in async, out-of-order\n    hoverParts.sort((a, b) => a.ordinal - b.ordinal);\n    const disposables = new DisposableStore();\n    for (const hoverPart of hoverParts) {\n        for (const contents of hoverPart.contents) {\n            if (isEmptyMarkdownString(contents)) {\n                continue;\n            }\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderer = disposables.add(new MarkdownRenderer({ editor }, languageService, openerService));\n            disposables.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const renderedContents = disposables.add(renderer.render(contents));\n            hoverContentsElement.appendChild(renderedContents.element);\n            context.fragment.appendChild(markdownHoverElement);\n        }\n    }\n    return disposables;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../../../common/core/selection.js';\nexport class InPlaceReplaceCommand {\n    constructor(editRange, originalSelection, text) {\n        this._editRange = editRange;\n        this._originalSelection = originalSelection;\n        this._text = text;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._editRange, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        if (!this._originalSelection.isEmpty()) {\n            // Preserve selection and extends to typed text\n            return new Selection(srcRange.endLineNumber, srcRange.endColumn - this._text.length, srcRange.endLineNumber, srcRange.endColumn);\n        }\n        return new Selection(srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn), srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createCancelablePromise, timeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { EditorState } from '../../editorState/browser/editorState.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport { editorBracketMatchBorder } from '../../../common/core/editorColorRegistry.js';\nimport * as nls from '../../../../nls.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { InPlaceReplaceCommand } from './inPlaceReplaceCommand.js';\nlet InPlaceReplaceController = class InPlaceReplaceController {\n    constructor(editor, editorWorkerService) {\n        this.editor = editor;\n        this.editorWorkerService = editorWorkerService;\n        this.decorations = this.editor.createDecorationsCollection();\n    }\n    static get(editor) {\n        return editor.getContribution(InPlaceReplaceController.ID);\n    }\n    dispose() {\n    }\n    run(source, up) {\n        // cancel any pending request\n        if (this.currentRequest) {\n            this.currentRequest.cancel();\n        }\n        const editorSelection = this.editor.getSelection();\n        const model = this.editor.getModel();\n        if (!model || !editorSelection) {\n            return undefined;\n        }\n        let selection = editorSelection;\n        if (selection.startLineNumber !== selection.endLineNumber) {\n            // Can't accept multiline selection\n            return undefined;\n        }\n        const state = new EditorState(this.editor, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */);\n        const modelURI = model.uri;\n        if (!this.editorWorkerService.canNavigateValueSet(modelURI)) {\n            return Promise.resolve(undefined);\n        }\n        this.currentRequest = createCancelablePromise(token => this.editorWorkerService.navigateValueSet(modelURI, selection, up));\n        return this.currentRequest.then(result => {\n            if (!result || !result.range || !result.value) {\n                // No proper result\n                return;\n            }\n            if (!state.validate(this.editor)) {\n                // state has changed\n                return;\n            }\n            // Selection\n            const editRange = Range.lift(result.range);\n            let highlightRange = result.range;\n            const diff = result.value.length - (selection.endColumn - selection.startColumn);\n            // highlight\n            highlightRange = {\n                startLineNumber: highlightRange.startLineNumber,\n                startColumn: highlightRange.startColumn,\n                endLineNumber: highlightRange.endLineNumber,\n                endColumn: highlightRange.startColumn + result.value.length\n            };\n            if (diff > 1) {\n                selection = new Selection(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn + diff - 1);\n            }\n            // Insert new text\n            const command = new InPlaceReplaceCommand(editRange, selection, result.value);\n            this.editor.pushUndoStop();\n            this.editor.executeCommand(source, command);\n            this.editor.pushUndoStop();\n            // add decoration\n            this.decorations.set([{\n                    range: highlightRange,\n                    options: InPlaceReplaceController.DECORATION\n                }]);\n            // remove decoration after delay\n            if (this.decorationRemover) {\n                this.decorationRemover.cancel();\n            }\n            this.decorationRemover = timeout(350);\n            this.decorationRemover.then(() => this.decorations.clear()).catch(onUnexpectedError);\n        }).catch(onUnexpectedError);\n    }\n};\nInPlaceReplaceController.ID = 'editor.contrib.inPlaceReplaceController';\nInPlaceReplaceController.DECORATION = ModelDecorationOptions.register({\n    description: 'in-place-replace',\n    className: 'valueSetReplacement'\n});\nInPlaceReplaceController = __decorate([\n    __param(1, IEditorWorkerService)\n], InPlaceReplaceController);\nclass InPlaceReplaceUp extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.up',\n            label: nls.localize('InPlaceReplaceAction.previous.label', \"Replace with Previous Value\"),\n            alias: 'Replace with Previous Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 82 /* KeyCode.Comma */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, true);\n    }\n}\nclass InPlaceReplaceDown extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.down',\n            label: nls.localize('InPlaceReplaceAction.next.label', \"Replace with Next Value\"),\n            alias: 'Replace with Next Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 84 /* KeyCode.Period */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, false);\n    }\n}\nregisterEditorContribution(InPlaceReplaceController.ID, InPlaceReplaceController);\nregisterEditorAction(InPlaceReplaceUp);\nregisterEditorAction(InPlaceReplaceDown);\nregisterThemingParticipant((theme, collector) => {\n    const border = theme.getColor(editorBracketMatchBorder);\n    if (border) {\n        collector.addRule(`.monaco-editor.vs .valueSetReplacement { outline: solid 2px ${border}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function getSpaceCnt(str, tabSize) {\n    let spacesCnt = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) === '\\t') {\n            spacesCnt += tabSize;\n        }\n        else {\n            spacesCnt++;\n        }\n    }\n    return spacesCnt;\n}\nexport function generateIndent(spacesCnt, tabSize, insertSpaces) {\n    spacesCnt = spacesCnt < 0 ? 0 : spacesCnt;\n    let result = '';\n    if (!insertSpaces) {\n        const tabsCnt = Math.floor(spacesCnt / tabSize);\n        spacesCnt = spacesCnt % tabSize;\n        for (let i = 0; i < tabsCnt; i++) {\n            result += '\\t';\n        }\n    }\n    for (let i = 0; i < spacesCnt; i++) {\n        result += ' ';\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ShiftCommand } from '../../../common/commands/shiftCommand.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport * as indentUtils from './indentUtils.js';\nimport * as nls from '../../../../nls.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { normalizeIndentation } from '../../../common/core/indentation.js';\nimport { getGoodIndentForLine, getIndentMetadata } from '../../../common/languages/autoIndent.js';\nexport function getReindentEditOperations(model, languageConfigurationService, startLineNumber, endLineNumber, inheritedIndent) {\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n        // Model is empty\n        return [];\n    }\n    const indentationRules = languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).indentationRules;\n    if (!indentationRules) {\n        return [];\n    }\n    endLineNumber = Math.min(endLineNumber, model.getLineCount());\n    // Skip `unIndentedLinePattern` lines\n    while (startLineNumber <= endLineNumber) {\n        if (!indentationRules.unIndentedLinePattern) {\n            break;\n        }\n        const text = model.getLineContent(startLineNumber);\n        if (!indentationRules.unIndentedLinePattern.test(text)) {\n            break;\n        }\n        startLineNumber++;\n    }\n    if (startLineNumber > endLineNumber - 1) {\n        return [];\n    }\n    const { tabSize, indentSize, insertSpaces } = model.getOptions();\n    const shiftIndent = (indentation, count) => {\n        count = count || 1;\n        return ShiftCommand.shiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\n    };\n    const unshiftIndent = (indentation, count) => {\n        count = count || 1;\n        return ShiftCommand.unshiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\n    };\n    const indentEdits = [];\n    // indentation being passed to lines below\n    let globalIndent;\n    // Calculate indentation for the first line\n    // If there is no passed-in indentation, we use the indentation of the first line as base.\n    const currentLineText = model.getLineContent(startLineNumber);\n    let adjustedLineContent = currentLineText;\n    if (inheritedIndent !== undefined && inheritedIndent !== null) {\n        globalIndent = inheritedIndent;\n        const oldIndentation = strings.getLeadingWhitespace(currentLineText);\n        adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\n            globalIndent = unshiftIndent(globalIndent);\n            adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\n        }\n        if (currentLineText !== adjustedLineContent) {\n            indentEdits.push(EditOperation.replaceMove(new Selection(startLineNumber, 1, startLineNumber, oldIndentation.length + 1), normalizeIndentation(globalIndent, indentSize, insertSpaces)));\n        }\n    }\n    else {\n        globalIndent = strings.getLeadingWhitespace(currentLineText);\n    }\n    // idealIndentForNextLine doesn't equal globalIndent when there is a line matching `indentNextLinePattern`.\n    let idealIndentForNextLine = globalIndent;\n    if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n        globalIndent = shiftIndent(globalIndent);\n    }\n    else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n    }\n    startLineNumber++;\n    // Calculate indentation adjustment for all following lines\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        const text = model.getLineContent(lineNumber);\n        const oldIndentation = strings.getLeadingWhitespace(text);\n        const adjustedLineContent = idealIndentForNextLine + text.substring(oldIndentation.length);\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\n            idealIndentForNextLine = unshiftIndent(idealIndentForNextLine);\n            globalIndent = unshiftIndent(globalIndent);\n        }\n        if (oldIndentation !== idealIndentForNextLine) {\n            indentEdits.push(EditOperation.replaceMove(new Selection(lineNumber, 1, lineNumber, oldIndentation.length + 1), normalizeIndentation(idealIndentForNextLine, indentSize, insertSpaces)));\n        }\n        // calculate idealIndentForNextLine\n        if (indentationRules.unIndentedLinePattern && indentationRules.unIndentedLinePattern.test(text)) {\n            // In reindent phase, if the line matches `unIndentedLinePattern` we inherit indentation from above lines\n            // but don't change globalIndent and idealIndentForNextLine.\n            continue;\n        }\n        else if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\n            globalIndent = shiftIndent(globalIndent);\n            idealIndentForNextLine = globalIndent;\n        }\n        else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\n            idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n        }\n        else {\n            idealIndentForNextLine = globalIndent;\n        }\n    }\n    return indentEdits;\n}\nexport class IndentationToSpacesAction extends EditorAction {\n    constructor() {\n        super({\n            id: IndentationToSpacesAction.ID,\n            label: nls.localize('indentationToSpaces', \"Convert Indentation to Spaces\"),\n            alias: 'Convert Indentation to Spaces',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const modelOpts = model.getOptions();\n        const selection = editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        const command = new IndentationToSpacesCommand(selection, modelOpts.tabSize);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n        model.updateOptions({\n            insertSpaces: true\n        });\n    }\n}\nIndentationToSpacesAction.ID = 'editor.action.indentationToSpaces';\nexport class IndentationToTabsAction extends EditorAction {\n    constructor() {\n        super({\n            id: IndentationToTabsAction.ID,\n            label: nls.localize('indentationToTabs', \"Convert Indentation to Tabs\"),\n            alias: 'Convert Indentation to Tabs',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const modelOpts = model.getOptions();\n        const selection = editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        const command = new IndentationToTabsCommand(selection, modelOpts.tabSize);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n        model.updateOptions({\n            insertSpaces: false\n        });\n    }\n}\nIndentationToTabsAction.ID = 'editor.action.indentationToTabs';\nexport class ChangeIndentationSizeAction extends EditorAction {\n    constructor(insertSpaces, opts) {\n        super(opts);\n        this.insertSpaces = insertSpaces;\n    }\n    run(accessor, editor) {\n        const quickInputService = accessor.get(IQuickInputService);\n        const modelService = accessor.get(IModelService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n        const picks = [1, 2, 3, 4, 5, 6, 7, 8].map(n => ({\n            id: n.toString(),\n            label: n.toString(),\n            // add description for tabSize value set in the configuration\n            description: n === creationOpts.tabSize ? nls.localize('configuredTabSize', \"Configured Tab Size\") : undefined\n        }));\n        // auto focus the tabSize set for the current editor\n        const autoFocusIndex = Math.min(model.getOptions().tabSize - 1, 7);\n        setTimeout(() => {\n            quickInputService.pick(picks, { placeHolder: nls.localize({ key: 'selectTabWidth', comment: ['Tab corresponds to the tab key'] }, \"Select Tab Size for Current File\"), activeItem: picks[autoFocusIndex] }).then(pick => {\n                if (pick) {\n                    if (model && !model.isDisposed()) {\n                        model.updateOptions({\n                            tabSize: parseInt(pick.label, 10),\n                            insertSpaces: this.insertSpaces\n                        });\n                    }\n                }\n            });\n        }, 50 /* quick input is sensitive to being opened so soon after another */);\n    }\n}\nexport class IndentUsingTabs extends ChangeIndentationSizeAction {\n    constructor() {\n        super(false, {\n            id: IndentUsingTabs.ID,\n            label: nls.localize('indentUsingTabs', \"Indent Using Tabs\"),\n            alias: 'Indent Using Tabs',\n            precondition: undefined\n        });\n    }\n}\nIndentUsingTabs.ID = 'editor.action.indentUsingTabs';\nexport class IndentUsingSpaces extends ChangeIndentationSizeAction {\n    constructor() {\n        super(true, {\n            id: IndentUsingSpaces.ID,\n            label: nls.localize('indentUsingSpaces', \"Indent Using Spaces\"),\n            alias: 'Indent Using Spaces',\n            precondition: undefined\n        });\n    }\n}\nIndentUsingSpaces.ID = 'editor.action.indentUsingSpaces';\nexport class DetectIndentation extends EditorAction {\n    constructor() {\n        super({\n            id: DetectIndentation.ID,\n            label: nls.localize('detectIndentation', \"Detect Indentation from Content\"),\n            alias: 'Detect Indentation from Content',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const modelService = accessor.get(IModelService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n        model.detectIndentation(creationOpts.insertSpaces, creationOpts.tabSize);\n    }\n}\nDetectIndentation.ID = 'editor.action.detectIndentation';\nexport class ReindentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.reindentlines',\n            label: nls.localize('editor.reindentlines', \"Reindent Lines\"),\n            alias: 'Reindent Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const edits = getReindentEditOperations(model, languageConfigurationService, 1, model.getLineCount());\n        if (edits.length > 0) {\n            editor.pushUndoStop();\n            editor.executeEdits(this.id, edits);\n            editor.pushUndoStop();\n        }\n    }\n}\nexport class ReindentSelectedLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.reindentselectedlines',\n            label: nls.localize('editor.reindentselectedlines', \"Reindent Selected Lines\"),\n            alias: 'Reindent Selected Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const edits = [];\n        for (const selection of selections) {\n            let startLineNumber = selection.startLineNumber;\n            let endLineNumber = selection.endLineNumber;\n            if (startLineNumber !== endLineNumber && selection.endColumn === 1) {\n                endLineNumber--;\n            }\n            if (startLineNumber === 1) {\n                if (startLineNumber === endLineNumber) {\n                    continue;\n                }\n            }\n            else {\n                startLineNumber--;\n            }\n            const editOperations = getReindentEditOperations(model, languageConfigurationService, startLineNumber, endLineNumber);\n            edits.push(...editOperations);\n        }\n        if (edits.length > 0) {\n            editor.pushUndoStop();\n            editor.executeEdits(this.id, edits);\n            editor.pushUndoStop();\n        }\n    }\n}\nexport class AutoIndentOnPasteCommand {\n    constructor(edits, initialSelection) {\n        this._initialSelection = initialSelection;\n        this._edits = [];\n        this._selectionId = null;\n        for (const edit of edits) {\n            if (edit.range && typeof edit.text === 'string') {\n                this._edits.push(edit);\n            }\n        }\n    }\n    getEditOperations(model, builder) {\n        for (const edit of this._edits) {\n            builder.addEditOperation(Range.lift(edit.range), edit.text);\n        }\n        let selectionIsSet = false;\n        if (Array.isArray(this._edits) && this._edits.length === 1 && this._initialSelection.isEmpty()) {\n            if (this._edits[0].range.startColumn === this._initialSelection.endColumn &&\n                this._edits[0].range.startLineNumber === this._initialSelection.endLineNumber) {\n                selectionIsSet = true;\n                this._selectionId = builder.trackSelection(this._initialSelection, true);\n            }\n            else if (this._edits[0].range.endColumn === this._initialSelection.startColumn &&\n                this._edits[0].range.endLineNumber === this._initialSelection.startLineNumber) {\n                selectionIsSet = true;\n                this._selectionId = builder.trackSelection(this._initialSelection, false);\n            }\n        }\n        if (!selectionIsSet) {\n            this._selectionId = builder.trackSelection(this._initialSelection);\n        }\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._selectionId);\n    }\n}\nlet AutoIndentOnPaste = class AutoIndentOnPaste {\n    constructor(editor, _languageConfigurationService) {\n        this.editor = editor;\n        this._languageConfigurationService = _languageConfigurationService;\n        this.callOnDispose = new DisposableStore();\n        this.callOnModel = new DisposableStore();\n        this.callOnDispose.add(editor.onDidChangeConfiguration(() => this.update()));\n        this.callOnDispose.add(editor.onDidChangeModel(() => this.update()));\n        this.callOnDispose.add(editor.onDidChangeModelLanguage(() => this.update()));\n    }\n    update() {\n        // clean up\n        this.callOnModel.clear();\n        // we are disabled\n        if (this.editor.getOption(9 /* EditorOption.autoIndent */) < 4 /* EditorAutoIndentStrategy.Full */ || this.editor.getOption(50 /* EditorOption.formatOnPaste */)) {\n            return;\n        }\n        // no model\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        this.callOnModel.add(this.editor.onDidPaste(({ range }) => {\n            this.trigger(range);\n        }));\n    }\n    trigger(range) {\n        const selections = this.editor.getSelections();\n        if (selections === null || selections.length > 1) {\n            return;\n        }\n        const model = this.editor.getModel();\n        if (!model) {\n            return;\n        }\n        if (!model.tokenization.isCheapToTokenize(range.getStartPosition().lineNumber)) {\n            return;\n        }\n        const autoIndent = this.editor.getOption(9 /* EditorOption.autoIndent */);\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\n        const textEdits = [];\n        const indentConverter = {\n            shiftIndent: (indentation) => {\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            },\n            unshiftIndent: (indentation) => {\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            }\n        };\n        let startLineNumber = range.startLineNumber;\n        while (startLineNumber <= range.endLineNumber) {\n            if (this.shouldIgnoreLine(model, startLineNumber)) {\n                startLineNumber++;\n                continue;\n            }\n            break;\n        }\n        if (startLineNumber > range.endLineNumber) {\n            return;\n        }\n        let firstLineText = model.getLineContent(startLineNumber);\n        if (!/\\S/.test(firstLineText.substring(0, range.startColumn - 1))) {\n            const indentOfFirstLine = getGoodIndentForLine(autoIndent, model, model.getLanguageId(), startLineNumber, indentConverter, this._languageConfigurationService);\n            if (indentOfFirstLine !== null) {\n                const oldIndentation = strings.getLeadingWhitespace(firstLineText);\n                const newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\n                const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                if (newSpaceCnt !== oldSpaceCnt) {\n                    const newIndent = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                    textEdits.push({\n                        range: new Range(startLineNumber, 1, startLineNumber, oldIndentation.length + 1),\n                        text: newIndent\n                    });\n                    firstLineText = newIndent + firstLineText.substr(oldIndentation.length);\n                }\n                else {\n                    const indentMetadata = getIndentMetadata(model, startLineNumber, this._languageConfigurationService);\n                    if (indentMetadata === 0 || indentMetadata === 8 /* IndentConsts.UNINDENT_MASK */) {\n                        // we paste content into a line where only contains whitespaces\n                        // after pasting, the indentation of the first line is already correct\n                        // the first line doesn't match any indentation rule\n                        // then no-op.\n                        return;\n                    }\n                }\n            }\n        }\n        const firstLineNumber = startLineNumber;\n        // ignore empty or ignored lines\n        while (startLineNumber < range.endLineNumber) {\n            if (!/\\S/.test(model.getLineContent(startLineNumber + 1))) {\n                startLineNumber++;\n                continue;\n            }\n            break;\n        }\n        if (startLineNumber !== range.endLineNumber) {\n            const virtualModel = {\n                tokenization: {\n                    getLineTokens: (lineNumber) => {\n                        return model.tokenization.getLineTokens(lineNumber);\n                    },\n                    getLanguageId: () => {\n                        return model.getLanguageId();\n                    },\n                    getLanguageIdAtPosition: (lineNumber, column) => {\n                        return model.getLanguageIdAtPosition(lineNumber, column);\n                    },\n                },\n                getLineContent: (lineNumber) => {\n                    if (lineNumber === firstLineNumber) {\n                        return firstLineText;\n                    }\n                    else {\n                        return model.getLineContent(lineNumber);\n                    }\n                }\n            };\n            const indentOfSecondLine = getGoodIndentForLine(autoIndent, virtualModel, model.getLanguageId(), startLineNumber + 1, indentConverter, this._languageConfigurationService);\n            if (indentOfSecondLine !== null) {\n                const newSpaceCntOfSecondLine = indentUtils.getSpaceCnt(indentOfSecondLine, tabSize);\n                const oldSpaceCntOfSecondLine = indentUtils.getSpaceCnt(strings.getLeadingWhitespace(model.getLineContent(startLineNumber + 1)), tabSize);\n                if (newSpaceCntOfSecondLine !== oldSpaceCntOfSecondLine) {\n                    const spaceCntOffset = newSpaceCntOfSecondLine - oldSpaceCntOfSecondLine;\n                    for (let i = startLineNumber + 1; i <= range.endLineNumber; i++) {\n                        const lineContent = model.getLineContent(i);\n                        const originalIndent = strings.getLeadingWhitespace(lineContent);\n                        const originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\n                        const newSpacesCnt = originalSpacesCnt + spaceCntOffset;\n                        const newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\n                        if (newIndent !== originalIndent) {\n                            textEdits.push({\n                                range: new Range(i, 1, i, originalIndent.length + 1),\n                                text: newIndent\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        if (textEdits.length > 0) {\n            this.editor.pushUndoStop();\n            const cmd = new AutoIndentOnPasteCommand(textEdits, this.editor.getSelection());\n            this.editor.executeCommand('autoIndentOnPaste', cmd);\n            this.editor.pushUndoStop();\n        }\n    }\n    shouldIgnoreLine(model, lineNumber) {\n        model.tokenization.forceTokenization(lineNumber);\n        const nonWhitespaceColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        if (nonWhitespaceColumn === 0) {\n            return true;\n        }\n        const tokens = model.tokenization.getLineTokens(lineNumber);\n        if (tokens.getCount() > 0) {\n            const firstNonWhitespaceTokenIndex = tokens.findTokenIndexAtOffset(nonWhitespaceColumn);\n            if (firstNonWhitespaceTokenIndex >= 0 && tokens.getStandardTokenType(firstNonWhitespaceTokenIndex) === 1 /* StandardTokenType.Comment */) {\n                return true;\n            }\n        }\n        return false;\n    }\n    dispose() {\n        this.callOnDispose.dispose();\n        this.callOnModel.dispose();\n    }\n};\nAutoIndentOnPaste.ID = 'editor.contrib.autoIndentOnPaste';\nAutoIndentOnPaste = __decorate([\n    __param(1, ILanguageConfigurationService)\n], AutoIndentOnPaste);\nexport { AutoIndentOnPaste };\nfunction getIndentationEditOperations(model, builder, tabSize, tabsToSpaces) {\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n        // Model is empty\n        return;\n    }\n    let spaces = '';\n    for (let i = 0; i < tabSize; i++) {\n        spaces += ' ';\n    }\n    const spacesRegExp = new RegExp(spaces, 'gi');\n    for (let lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++) {\n        let lastIndentationColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        if (lastIndentationColumn === 0) {\n            lastIndentationColumn = model.getLineMaxColumn(lineNumber);\n        }\n        if (lastIndentationColumn === 1) {\n            continue;\n        }\n        const originalIndentationRange = new Range(lineNumber, 1, lineNumber, lastIndentationColumn);\n        const originalIndentation = model.getValueInRange(originalIndentationRange);\n        const newIndentation = (tabsToSpaces\n            ? originalIndentation.replace(/\\t/ig, spaces)\n            : originalIndentation.replace(spacesRegExp, '\\t'));\n        builder.addEditOperation(originalIndentationRange, newIndentation);\n    }\n}\nexport class IndentationToSpacesCommand {\n    constructor(selection, tabSize) {\n        this.selection = selection;\n        this.tabSize = tabSize;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        this.selectionId = builder.trackSelection(this.selection);\n        getIndentationEditOperations(model, builder, this.tabSize, true);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n}\nexport class IndentationToTabsCommand {\n    constructor(selection, tabSize) {\n        this.selection = selection;\n        this.tabSize = tabSize;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        this.selectionId = builder.trackSelection(this.selection);\n        getIndentationEditOperations(model, builder, this.tabSize, false);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n}\nregisterEditorContribution(AutoIndentOnPaste.ID, AutoIndentOnPaste);\nregisterEditorAction(IndentationToSpacesAction);\nregisterEditorAction(IndentationToTabsAction);\nregisterEditorAction(IndentUsingTabs);\nregisterEditorAction(IndentUsingSpaces);\nregisterEditorAction(DetectIndentation);\nregisterEditorAction(ReindentLinesAction);\nregisterEditorAction(ReindentSelectedLinesAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { URI } from '../../../../base/common/uri.js';\nexport class InlayHintAnchor {\n    constructor(range, direction) {\n        this.range = range;\n        this.direction = direction;\n    }\n}\nexport class InlayHintItem {\n    constructor(hint, anchor, provider) {\n        this.hint = hint;\n        this.anchor = anchor;\n        this.provider = provider;\n        this._isResolved = false;\n    }\n    with(delta) {\n        const result = new InlayHintItem(this.hint, delta.anchor, this.provider);\n        result._isResolved = this._isResolved;\n        result._currentResolve = this._currentResolve;\n        return result;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.provider.resolveInlayHint !== 'function') {\n                return;\n            }\n            if (this._currentResolve) {\n                // wait for an active resolve operation and try again\n                // when that's done.\n                yield this._currentResolve;\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                return this.resolve(token);\n            }\n            if (!this._isResolved) {\n                this._currentResolve = this._doResolve(token)\n                    .finally(() => this._currentResolve = undefined);\n            }\n            yield this._currentResolve;\n        });\n    }\n    _doResolve(token) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const newHint = yield Promise.resolve(this.provider.resolveInlayHint(this.hint, token));\n                this.hint.tooltip = (_a = newHint === null || newHint === void 0 ? void 0 : newHint.tooltip) !== null && _a !== void 0 ? _a : this.hint.tooltip;\n                this.hint.label = (_b = newHint === null || newHint === void 0 ? void 0 : newHint.label) !== null && _b !== void 0 ? _b : this.hint.label;\n                this._isResolved = true;\n            }\n            catch (err) {\n                onUnexpectedExternalError(err);\n                this._isResolved = false;\n            }\n        });\n    }\n}\nexport class InlayHintsFragments {\n    constructor(ranges, data, model) {\n        this._disposables = new DisposableStore();\n        this.ranges = ranges;\n        this.provider = new Set();\n        const items = [];\n        for (const [list, provider] of data) {\n            this._disposables.add(list);\n            this.provider.add(provider);\n            for (const hint of list.hints) {\n                // compute the range to which the item should be attached to\n                const position = model.validatePosition(hint.position);\n                let direction = 'before';\n                const wordRange = InlayHintsFragments._getRangeAtPosition(model, position);\n                let range;\n                if (wordRange.getStartPosition().isBefore(position)) {\n                    range = Range.fromPositions(wordRange.getStartPosition(), position);\n                    direction = 'after';\n                }\n                else {\n                    range = Range.fromPositions(position, wordRange.getEndPosition());\n                    direction = 'before';\n                }\n                items.push(new InlayHintItem(hint, new InlayHintAnchor(range, direction), provider));\n            }\n        }\n        this.items = items.sort((a, b) => Position.compare(a.hint.position, b.hint.position));\n    }\n    static create(registry, model, ranges, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = [];\n            const promises = registry.ordered(model).reverse().map(provider => ranges.map((range) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const result = yield provider.provideInlayHints(model, range, token);\n                    if (result === null || result === void 0 ? void 0 : result.hints.length) {\n                        data.push([result, provider]);\n                    }\n                }\n                catch (err) {\n                    onUnexpectedExternalError(err);\n                }\n            })));\n            yield Promise.all(promises.flat());\n            if (token.isCancellationRequested || model.isDisposed()) {\n                throw new CancellationError();\n            }\n            return new InlayHintsFragments(ranges, data, model);\n        });\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    static _getRangeAtPosition(model, position) {\n        const line = position.lineNumber;\n        const word = model.getWordAtPosition(position);\n        if (word) {\n            // always prefer the word range\n            return new Range(line, word.startColumn, line, word.endColumn);\n        }\n        model.tokenization.tokenizeIfCheap(line);\n        const tokens = model.tokenization.getLineTokens(line);\n        const offset = position.column - 1;\n        const idx = tokens.findTokenIndexAtOffset(offset);\n        let start = tokens.getStartOffset(idx);\n        let end = tokens.getEndOffset(idx);\n        if (end - start === 1) {\n            // single character token, when at its end try leading/trailing token instead\n            if (start === offset && idx > 1) {\n                // leading token\n                start = tokens.getStartOffset(idx - 1);\n                end = tokens.getEndOffset(idx - 1);\n            }\n            else if (end === offset && idx < tokens.getCount() - 1) {\n                // trailing token\n                start = tokens.getStartOffset(idx + 1);\n                end = tokens.getEndOffset(idx + 1);\n            }\n        }\n        return new Range(line, start + 1, line, end + 1);\n    }\n}\nexport function asCommandLink(command) {\n    return URI.from({\n        scheme: Schemas.command,\n        path: command.id,\n        query: command.arguments && encodeURIComponent(JSON.stringify(command.arguments))\n    }).toString();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Action, Separator } from '../../../../base/common/actions.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { EditorExtensionsRegistry } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { DefinitionAction, SymbolNavigationAction, SymbolNavigationAnchor } from '../../gotoSymbol/browser/goToCommands.js';\nimport { PeekContext } from '../../peekView/browser/peekView.js';\nimport { isIMenuItem, MenuId, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nexport function showGoToContextMenu(accessor, editor, anchor, part) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const resolverService = accessor.get(ITextModelService);\n        const contextMenuService = accessor.get(IContextMenuService);\n        const commandService = accessor.get(ICommandService);\n        const instaService = accessor.get(IInstantiationService);\n        const notificationService = accessor.get(INotificationService);\n        yield part.item.resolve(CancellationToken.None);\n        if (!part.part.location) {\n            return;\n        }\n        const location = part.part.location;\n        const menuActions = [];\n        // from all registered (not active) context menu actions select those\n        // that are a symbol navigation action\n        const filter = new Set(MenuRegistry.getMenuItems(MenuId.EditorContext)\n            .map(item => isIMenuItem(item) ? item.command.id : ''));\n        for (const delegate of EditorExtensionsRegistry.getEditorActions()) {\n            if (delegate instanceof SymbolNavigationAction && filter.has(delegate.id)) {\n                menuActions.push(new Action(delegate.id, delegate.label, undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                    const ref = yield resolverService.createModelReference(location.uri);\n                    try {\n                        yield instaService.invokeFunction(delegate.run.bind(delegate), editor, new SymbolNavigationAnchor(ref.object.textEditorModel, Range.getStartPosition(location.range)));\n                    }\n                    finally {\n                        ref.dispose();\n                    }\n                })));\n            }\n        }\n        if (part.part.command) {\n            const { command } = part.part;\n            menuActions.push(new Separator());\n            menuActions.push(new Action(command.id, command.title, undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                var _b;\n                try {\n                    yield commandService.executeCommand(command.id, ...((_b = command.arguments) !== null && _b !== void 0 ? _b : []));\n                }\n                catch (err) {\n                    notificationService.notify({\n                        severity: Severity.Error,\n                        source: part.item.provider.displayName,\n                        message: err\n                    });\n                }\n            })));\n        }\n        // show context menu\n        const useShadowDOM = editor.getOption(117 /* EditorOption.useShadowDOM */);\n        contextMenuService.showContextMenu({\n            domForShadowRoot: useShadowDOM ? (_a = editor.getDomNode()) !== null && _a !== void 0 ? _a : undefined : undefined,\n            getAnchor: () => {\n                const box = dom.getDomNodePagePosition(anchor);\n                return { x: box.left, y: box.top + box.height + 8 };\n            },\n            getActions: () => menuActions,\n            onHide: () => {\n                editor.focus();\n            },\n            autoSelectFirstItem: true,\n        });\n    });\n}\nexport function goToDefinitionWithLocation(accessor, event, editor, location) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const resolverService = accessor.get(ITextModelService);\n        const ref = yield resolverService.createModelReference(location.uri);\n        yield editor.invokeWithinContext((accessor) => __awaiter(this, void 0, void 0, function* () {\n            const openToSide = event.hasSideBySideModifier;\n            const contextKeyService = accessor.get(IContextKeyService);\n            const isInPeek = PeekContext.inPeekEditor.getValue(contextKeyService);\n            const canPeek = !openToSide && editor.getOption(80 /* EditorOption.definitionLinkOpensInPeek */) && !isInPeek;\n            const action = new DefinitionAction({ openToSide, openInPeek: canPeek, muteMessage: true }, { alias: '', label: '', id: '', precondition: undefined });\n            return action.run(accessor, editor, { model: ref.object.textEditorModel, position: Range.getStartPosition(location.range) });\n        }));\n        ref.dispose();\n    });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ModifierKeyEmitter } from '../../../../base/browser/dom.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DynamicCssRules } from '../../../browser/editorDom.js';\nimport { EDITOR_FONT_DEFAULTS } from '../../../common/config/editorOptions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport * as languages from '../../../common/languages.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { InlayHintAnchor, InlayHintsFragments } from './inlayHints.js';\nimport { goToDefinitionWithLocation, showGoToContextMenu } from './inlayHintsLocations.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport * as colors from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\n// --- hint caching service (per session)\nclass InlayHintsCache {\n    constructor() {\n        this._entries = new LRUCache(50);\n    }\n    get(model) {\n        const key = InlayHintsCache._key(model);\n        return this._entries.get(key);\n    }\n    set(model, value) {\n        const key = InlayHintsCache._key(model);\n        this._entries.set(key, value);\n    }\n    static _key(model) {\n        return `${model.uri.toString()}/${model.getVersionId()}`;\n    }\n}\nconst IInlayHintsCache = createDecorator('IInlayHintsCache');\nregisterSingleton(IInlayHintsCache, InlayHintsCache, true);\n// --- rendered label\nexport class RenderedInlayHintLabelPart {\n    constructor(item, index) {\n        this.item = item;\n        this.index = index;\n    }\n    get part() {\n        const label = this.item.hint.label;\n        if (typeof label === 'string') {\n            return { label };\n        }\n        else {\n            return label[this.index];\n        }\n    }\n}\nclass ActiveInlayHintInfo {\n    constructor(part, hasTriggerModifier) {\n        this.part = part;\n        this.hasTriggerModifier = hasTriggerModifier;\n    }\n}\n// --- controller\nlet InlayHintsController = class InlayHintsController {\n    constructor(_editor, _languageFeaturesService, _featureDebounce, _inlayHintsCache, _commandService, _notificationService, _instaService) {\n        this._editor = _editor;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._inlayHintsCache = _inlayHintsCache;\n        this._commandService = _commandService;\n        this._notificationService = _notificationService;\n        this._instaService = _instaService;\n        this._disposables = new DisposableStore();\n        this._sessionDisposables = new DisposableStore();\n        this._decorationsMetadata = new Map();\n        this._ruleFactory = new DynamicCssRules(this._editor);\n        this._activeRenderMode = 0 /* RenderMode.Normal */;\n        this._debounceInfo = _featureDebounce.for(_languageFeaturesService.inlayHintsProvider, 'InlayHint', { min: 25 });\n        this._disposables.add(_languageFeaturesService.inlayHintsProvider.onDidChange(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModel(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModelLanguage(() => this._update()));\n        this._disposables.add(_editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(129 /* EditorOption.inlayHints */)) {\n                this._update();\n            }\n        }));\n        this._update();\n    }\n    static get(editor) {\n        var _a;\n        return (_a = editor.getContribution(InlayHintsController.ID)) !== null && _a !== void 0 ? _a : undefined;\n    }\n    dispose() {\n        this._sessionDisposables.dispose();\n        this._removeAllDecorations();\n        this._disposables.dispose();\n    }\n    _update() {\n        this._sessionDisposables.clear();\n        this._removeAllDecorations();\n        const options = this._editor.getOption(129 /* EditorOption.inlayHints */);\n        if (options.enabled === 'off') {\n            return;\n        }\n        const model = this._editor.getModel();\n        if (!model || !this._languageFeaturesService.inlayHintsProvider.has(model)) {\n            return;\n        }\n        // iff possible, quickly update from cache\n        const cached = this._inlayHintsCache.get(model);\n        if (cached) {\n            this._updateHintsDecorators([model.getFullModelRange()], cached);\n        }\n        this._sessionDisposables.add(toDisposable(() => {\n            // cache items when switching files etc\n            if (!model.isDisposed()) {\n                this._cacheHintsForFastRestore(model);\n            }\n        }));\n        let cts;\n        const watchedProviders = new Set();\n        const scheduler = new RunOnceScheduler(() => __awaiter(this, void 0, void 0, function* () {\n            const t1 = Date.now();\n            cts === null || cts === void 0 ? void 0 : cts.dispose(true);\n            cts = new CancellationTokenSource();\n            const listener = model.onWillDispose(() => cts === null || cts === void 0 ? void 0 : cts.cancel());\n            try {\n                const myToken = cts.token;\n                const inlayHints = yield InlayHintsFragments.create(this._languageFeaturesService.inlayHintsProvider, model, this._getHintsRanges(), myToken);\n                scheduler.delay = this._debounceInfo.update(model, Date.now() - t1);\n                if (myToken.isCancellationRequested) {\n                    inlayHints.dispose();\n                    return;\n                }\n                // listen to provider changes\n                for (const provider of inlayHints.provider) {\n                    if (typeof provider.onDidChangeInlayHints === 'function' && !watchedProviders.has(provider)) {\n                        watchedProviders.add(provider);\n                        this._sessionDisposables.add(provider.onDidChangeInlayHints(() => {\n                            if (!scheduler.isScheduled()) { // ignore event when request is already scheduled\n                                scheduler.schedule();\n                            }\n                        }));\n                    }\n                }\n                this._sessionDisposables.add(inlayHints);\n                this._updateHintsDecorators(inlayHints.ranges, inlayHints.items);\n                this._cacheHintsForFastRestore(model);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                cts.dispose();\n                listener.dispose();\n            }\n        }), this._debounceInfo.get(model));\n        this._sessionDisposables.add(scheduler);\n        this._sessionDisposables.add(toDisposable(() => cts === null || cts === void 0 ? void 0 : cts.dispose(true)));\n        scheduler.schedule(0);\n        this._sessionDisposables.add(this._editor.onDidScrollChange((e) => {\n            // update when scroll position changes\n            // uses scrollTopChanged has weak heuristic to differenatiate between scrolling due to\n            // typing or due to \"actual\" scrolling\n            if (e.scrollTopChanged || !scheduler.isScheduled()) {\n                scheduler.schedule();\n            }\n        }));\n        this._sessionDisposables.add(this._editor.onDidChangeModelContent((e) => {\n            // update less aggressive when typing\n            const delay = Math.max(scheduler.delay, 1250);\n            scheduler.schedule(delay);\n        }));\n        if (options.enabled === 'on') {\n            // different \"on\" modes: always\n            this._activeRenderMode = 0 /* RenderMode.Normal */;\n        }\n        else {\n            // different \"on\" modes: offUnlessPressed, or onUnlessPressed\n            let defaultMode;\n            let altMode;\n            if (options.enabled === 'onUnlessPressed') {\n                defaultMode = 0 /* RenderMode.Normal */;\n                altMode = 1 /* RenderMode.Invisible */;\n            }\n            else {\n                defaultMode = 1 /* RenderMode.Invisible */;\n                altMode = 0 /* RenderMode.Normal */;\n            }\n            this._activeRenderMode = defaultMode;\n            this._sessionDisposables.add(ModifierKeyEmitter.getInstance().event(e => {\n                if (!this._editor.hasModel()) {\n                    return;\n                }\n                const newRenderMode = e.altKey && e.ctrlKey ? altMode : defaultMode;\n                if (newRenderMode !== this._activeRenderMode) {\n                    this._activeRenderMode = newRenderMode;\n                    const model = this._editor.getModel();\n                    const copies = this._copyInlayHintsWithCurrentAnchor(model);\n                    this._updateHintsDecorators([model.getFullModelRange()], copies);\n                    scheduler.schedule(0);\n                }\n            }));\n        }\n        // mouse gestures\n        this._sessionDisposables.add(this._installDblClickGesture(() => scheduler.schedule(0)));\n        this._sessionDisposables.add(this._installLinkGesture());\n        this._sessionDisposables.add(this._installContextMenu());\n    }\n    _installLinkGesture() {\n        const store = new DisposableStore();\n        const gesture = store.add(new ClickLinkGesture(this._editor));\n        // let removeHighlight = () => { };\n        const sessionStore = new DisposableStore();\n        store.add(sessionStore);\n        store.add(gesture.onMouseMoveOrRelevantKeyDown(e => {\n            const [mouseEvent] = e;\n            const labelPart = this._getInlayHintLabelPart(mouseEvent);\n            const model = this._editor.getModel();\n            if (!labelPart || !model) {\n                sessionStore.clear();\n                return;\n            }\n            // resolve the item\n            const cts = new CancellationTokenSource();\n            sessionStore.add(toDisposable(() => cts.dispose(true)));\n            labelPart.item.resolve(cts.token);\n            // render link => when the modifier is pressed and when there is a command or location\n            this._activeInlayHintPart = labelPart.part.command || labelPart.part.location\n                ? new ActiveInlayHintInfo(labelPart, mouseEvent.hasTriggerModifier)\n                : undefined;\n            const lineNumber = labelPart.item.hint.position.lineNumber;\n            const range = new Range(lineNumber, 1, lineNumber, model.getLineMaxColumn(lineNumber));\n            const lineHints = this._getInlineHintsForRange(range);\n            this._updateHintsDecorators([range], lineHints);\n            sessionStore.add(toDisposable(() => {\n                this._activeInlayHintPart = undefined;\n                this._updateHintsDecorators([range], lineHints);\n            }));\n        }));\n        store.add(gesture.onCancel(() => sessionStore.clear()));\n        store.add(gesture.onExecute((e) => __awaiter(this, void 0, void 0, function* () {\n            const label = this._getInlayHintLabelPart(e);\n            if (label) {\n                const part = label.part;\n                if (part.location) {\n                    // location -> execute go to def\n                    this._instaService.invokeFunction(goToDefinitionWithLocation, e, this._editor, part.location);\n                }\n                else if (languages.Command.is(part.command)) {\n                    // command -> execute it\n                    yield this._invokeCommand(part.command, label.item);\n                }\n            }\n        })));\n        return store;\n    }\n    _getInlineHintsForRange(range) {\n        const lineHints = new Set();\n        for (const data of this._decorationsMetadata.values()) {\n            if (range.containsRange(data.item.anchor.range)) {\n                lineHints.add(data.item);\n            }\n        }\n        return Array.from(lineHints);\n    }\n    _installDblClickGesture(updateInlayHints) {\n        return this._editor.onMouseUp((e) => __awaiter(this, void 0, void 0, function* () {\n            if (e.event.detail !== 2) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (!part) {\n                return;\n            }\n            e.event.preventDefault();\n            yield part.item.resolve(CancellationToken.None);\n            if (isNonEmptyArray(part.item.hint.textEdits)) {\n                const edits = part.item.hint.textEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text));\n                this._editor.executeEdits('inlayHint.default', edits);\n                updateInlayHints();\n            }\n        }));\n    }\n    _installContextMenu() {\n        return this._editor.onContextMenu((e) => __awaiter(this, void 0, void 0, function* () {\n            if (!(e.event.target instanceof HTMLElement)) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (part) {\n                yield this._instaService.invokeFunction(showGoToContextMenu, this._editor, e.event.target, part);\n            }\n        }));\n    }\n    _getInlayHintLabelPart(e) {\n        var _a;\n        if (e.target.type !== 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return undefined;\n        }\n        const options = (_a = e.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n        if (options instanceof ModelDecorationInjectedTextOptions && (options === null || options === void 0 ? void 0 : options.attachedData) instanceof RenderedInlayHintLabelPart) {\n            return options.attachedData;\n        }\n        return undefined;\n    }\n    _invokeCommand(command, item) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._commandService.executeCommand(command.id, ...((_a = command.arguments) !== null && _a !== void 0 ? _a : []));\n            }\n            catch (err) {\n                this._notificationService.notify({\n                    severity: Severity.Error,\n                    source: item.provider.displayName,\n                    message: err\n                });\n            }\n        });\n    }\n    _cacheHintsForFastRestore(model) {\n        const hints = this._copyInlayHintsWithCurrentAnchor(model);\n        this._inlayHintsCache.set(model, hints);\n    }\n    // return inlay hints but with an anchor that reflects \"updates\"\n    // that happened after receiving them, e.g adding new lines before a hint\n    _copyInlayHintsWithCurrentAnchor(model) {\n        const items = new Map();\n        for (const [id, obj] of this._decorationsMetadata) {\n            if (items.has(obj.item)) {\n                // an inlay item can be rendered as multiple decorations\n                // but they will all uses the same range\n                continue;\n            }\n            const range = model.getDecorationRange(id);\n            if (range) {\n                // update range with whatever the editor has tweaked it to\n                const anchor = new InlayHintAnchor(range, obj.item.anchor.direction);\n                const copy = obj.item.with({ anchor });\n                items.set(obj.item, copy);\n            }\n        }\n        return Array.from(items.values());\n    }\n    _getHintsRanges() {\n        const extra = 30;\n        const model = this._editor.getModel();\n        const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\n        const result = [];\n        for (const range of visibleRanges.sort(Range.compareRangesUsingStarts)) {\n            const extendedRange = model.validateRange(new Range(range.startLineNumber - extra, range.startColumn, range.endLineNumber + extra, range.endColumn));\n            if (result.length === 0 || !Range.areIntersectingOrTouching(result[result.length - 1], extendedRange)) {\n                result.push(extendedRange);\n            }\n            else {\n                result[result.length - 1] = Range.plusRange(result[result.length - 1], extendedRange);\n            }\n        }\n        return result;\n    }\n    _updateHintsDecorators(ranges, items) {\n        var _a, _b;\n        // utils to collect/create injected text decorations\n        const newDecorationsData = [];\n        const addInjectedText = (item, ref, content, cursorStops, attachedData) => {\n            const opts = {\n                content,\n                inlineClassNameAffectsLetterSpacing: true,\n                inlineClassName: ref.className,\n                cursorStops,\n                attachedData\n            };\n            newDecorationsData.push({\n                item,\n                classNameRef: ref,\n                decoration: {\n                    range: item.anchor.range,\n                    options: {\n                        // className: \"rangeHighlight\", // DEBUG highlight to see to what range a hint is attached\n                        description: 'InlayHint',\n                        showIfCollapsed: item.anchor.range.isEmpty(),\n                        collapseOnReplaceEdit: !item.anchor.range.isEmpty(),\n                        stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n                        [item.anchor.direction]: this._activeRenderMode === 0 /* RenderMode.Normal */ ? opts : undefined\n                    }\n                }\n            });\n        };\n        const addInjectedWhitespace = (item, isLast) => {\n            const marginRule = this._ruleFactory.createClassNameRef({\n                width: `${(fontSize / 3) | 0}px`,\n                display: 'inline-block'\n            });\n            addInjectedText(item, marginRule, '\\u200a', isLast ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None);\n        };\n        //\n        const { fontSize, fontFamily, padding, isUniform } = this._getLayoutInfo();\n        const fontFamilyVar = '--code-editorInlayHintsFontFamily';\n        this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily);\n        for (const item of items) {\n            // whitespace leading the actual label\n            if (item.hint.paddingLeft) {\n                addInjectedWhitespace(item, false);\n            }\n            // the label with its parts\n            const parts = typeof item.hint.label === 'string'\n                ? [{ label: item.hint.label }]\n                : item.hint.label;\n            for (let i = 0; i < parts.length; i++) {\n                const part = parts[i];\n                const isFirst = i === 0;\n                const isLast = i === parts.length - 1;\n                const cssProperties = {\n                    fontSize: `${fontSize}px`,\n                    fontFamily: `var(${fontFamilyVar}), ${EDITOR_FONT_DEFAULTS.fontFamily}`,\n                    verticalAlign: isUniform ? 'baseline' : 'middle',\n                };\n                if (isNonEmptyArray(item.hint.textEdits)) {\n                    cssProperties.cursor = 'default';\n                }\n                this._fillInColors(cssProperties, item.hint);\n                if ((part.command || part.location) && ((_a = this._activeInlayHintPart) === null || _a === void 0 ? void 0 : _a.part.item) === item && this._activeInlayHintPart.part.index === i) {\n                    // active link!\n                    cssProperties.textDecoration = 'underline';\n                    if (this._activeInlayHintPart.hasTriggerModifier) {\n                        cssProperties.color = themeColorFromId(colors.editorActiveLinkForeground);\n                        cssProperties.cursor = 'pointer';\n                    }\n                }\n                if (padding) {\n                    if (isFirst && isLast) {\n                        // only element\n                        cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px`;\n                        cssProperties.borderRadius = `${(fontSize / 4) | 0}px`;\n                    }\n                    else if (isFirst) {\n                        // first element\n                        cssProperties.padding = `1px 0 1px ${Math.max(1, fontSize / 4) | 0}px`;\n                        cssProperties.borderRadius = `${(fontSize / 4) | 0}px 0 0 ${(fontSize / 4) | 0}px`;\n                    }\n                    else if (isLast) {\n                        // last element\n                        cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px 1px 0`;\n                        cssProperties.borderRadius = `0 ${(fontSize / 4) | 0}px ${(fontSize / 4) | 0}px 0`;\n                    }\n                    else {\n                        cssProperties.padding = `1px 0 1px 0`;\n                    }\n                }\n                addInjectedText(item, this._ruleFactory.createClassNameRef(cssProperties), fixSpace(part.label), isLast && !item.hint.paddingRight ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None, new RenderedInlayHintLabelPart(item, i));\n            }\n            // whitespace trailing the actual label\n            if (item.hint.paddingRight) {\n                addInjectedWhitespace(item, true);\n            }\n            if (newDecorationsData.length > InlayHintsController._MAX_DECORATORS) {\n                break;\n            }\n        }\n        // collect all decoration ids that are affected by the ranges\n        // and only update those decorations\n        const decorationIdsToReplace = [];\n        for (const range of ranges) {\n            for (const { id } of (_b = this._editor.getDecorationsInRange(range)) !== null && _b !== void 0 ? _b : []) {\n                const metadata = this._decorationsMetadata.get(id);\n                if (metadata) {\n                    decorationIdsToReplace.push(id);\n                    metadata.classNameRef.dispose();\n                    this._decorationsMetadata.delete(id);\n                }\n            }\n        }\n        this._editor.changeDecorations(accessor => {\n            const newDecorationIds = accessor.deltaDecorations(decorationIdsToReplace, newDecorationsData.map(d => d.decoration));\n            for (let i = 0; i < newDecorationIds.length; i++) {\n                const data = newDecorationsData[i];\n                this._decorationsMetadata.set(newDecorationIds[i], data);\n            }\n        });\n    }\n    _fillInColors(props, hint) {\n        if (hint.kind === languages.InlayHintKind.Parameter) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintParameterBackground);\n            props.color = themeColorFromId(colors.editorInlayHintParameterForeground);\n        }\n        else if (hint.kind === languages.InlayHintKind.Type) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintTypeBackground);\n            props.color = themeColorFromId(colors.editorInlayHintTypeForeground);\n        }\n        else {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintBackground);\n            props.color = themeColorFromId(colors.editorInlayHintForeground);\n        }\n    }\n    _getLayoutInfo() {\n        const options = this._editor.getOption(129 /* EditorOption.inlayHints */);\n        const padding = options.padding;\n        const editorFontSize = this._editor.getOption(48 /* EditorOption.fontSize */);\n        const editorFontFamily = this._editor.getOption(45 /* EditorOption.fontFamily */);\n        let fontSize = options.fontSize;\n        if (!fontSize || fontSize < 5 || fontSize > editorFontSize) {\n            fontSize = editorFontSize;\n        }\n        const fontFamily = options.fontFamily || editorFontFamily;\n        const isUniform = !padding\n            && fontFamily === editorFontFamily\n            && fontSize === editorFontSize;\n        return { fontSize, fontFamily, padding, isUniform };\n    }\n    _removeAllDecorations() {\n        this._editor.removeDecorations(Array.from(this._decorationsMetadata.keys()));\n        for (const obj of this._decorationsMetadata.values()) {\n            obj.classNameRef.dispose();\n        }\n        this._decorationsMetadata.clear();\n    }\n};\nInlayHintsController.ID = 'editor.contrib.InlayHints';\nInlayHintsController._MAX_DECORATORS = 1500;\nInlayHintsController = __decorate([\n    __param(1, ILanguageFeaturesService),\n    __param(2, ILanguageFeatureDebounceService),\n    __param(3, IInlayHintsCache),\n    __param(4, ICommandService),\n    __param(5, INotificationService),\n    __param(6, IInstantiationService)\n], InlayHintsController);\nexport { InlayHintsController };\n// Prevents the view from potentially visible whitespace\nfunction fixSpace(str) {\n    const noBreakWhitespace = '\\xa0';\n    return str.replace(/[ \\t]/g, noBreakWhitespace);\n}\nCommandsRegistry.registerCommand('_executeInlayHintProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    const [uri, range] = args;\n    assertType(URI.isUri(uri));\n    assertType(Range.isIRange(range));\n    const { inlayHintsProvider } = accessor.get(ILanguageFeaturesService);\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\n    try {\n        const model = yield InlayHintsFragments.create(inlayHintsProvider, ref.object.textEditorModel, [Range.lift(range)], CancellationToken.None);\n        const result = model.items.map(i => i.hint);\n        setTimeout(() => model.dispose(), 0); // dispose after sending to ext host\n        return result;\n    }\n    finally {\n        ref.dispose();\n    }\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { getHover } from '../../hover/browser/getHover.js';\nimport { MarkdownHover, MarkdownHoverParticipant } from '../../hover/browser/markdownHoverParticipant.js';\nimport { RenderedInlayHintLabelPart, InlayHintsController } from './inlayHintsController.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { localize } from '../../../../nls.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { asCommandLink } from './inlayHints.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nclass InlayHintsHoverAnchor extends HoverForeignElementAnchor {\n    constructor(part, owner) {\n        super(10, owner, part.item.anchor.range);\n        this.part = part;\n    }\n}\nlet InlayHintsHover = class InlayHintsHover extends MarkdownHoverParticipant {\n    constructor(editor, languageService, openerService, configurationService, _resolverService, languageFeaturesService) {\n        super(editor, languageService, openerService, configurationService, languageFeaturesService);\n        this._resolverService = _resolverService;\n        this.hoverOrdinal = 6;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        var _a;\n        const controller = InlayHintsController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        if (mouseEvent.target.type !== 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return null;\n        }\n        const options = (_a = mouseEvent.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n        if (!(options instanceof ModelDecorationInjectedTextOptions && options.attachedData instanceof RenderedInlayHintLabelPart)) {\n            return null;\n        }\n        return new InlayHintsHoverAnchor(options.attachedData, this);\n    }\n    computeSync() {\n        return [];\n    }\n    computeAsync(anchor, _lineDecorations, token) {\n        if (!(anchor instanceof InlayHintsHoverAnchor)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        return new AsyncIterableObject((executor) => __awaiter(this, void 0, void 0, function* () {\n            var e_1, _a;\n            const { part } = anchor;\n            yield part.item.resolve(token);\n            if (token.isCancellationRequested) {\n                return;\n            }\n            // (1) Inlay Tooltip\n            let itemTooltip;\n            if (typeof part.item.hint.tooltip === 'string') {\n                itemTooltip = new MarkdownString().appendText(part.item.hint.tooltip);\n            }\n            else if (part.item.hint.tooltip) {\n                itemTooltip = part.item.hint.tooltip;\n            }\n            if (itemTooltip) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [itemTooltip], 0));\n            }\n            // (1.2) Inlay dbl-click gesture\n            if (isNonEmptyArray(part.item.hint.textEdits)) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(localize('hint.dbl', \"Double click to insert\"))], 10001));\n            }\n            // (2) Inlay Label Part Tooltip\n            let partTooltip;\n            if (typeof part.part.tooltip === 'string') {\n                partTooltip = new MarkdownString().appendText(part.part.tooltip);\n            }\n            else if (part.part.tooltip) {\n                partTooltip = part.part.tooltip;\n            }\n            if (partTooltip) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [partTooltip], 1));\n            }\n            // (2.2) Inlay Label Part Help Hover\n            if (part.part.location || part.part.command) {\n                let linkHint;\n                const useMetaKey = this._editor.getOption(72 /* EditorOption.multiCursorModifier */) === 'altKey';\n                const kb = useMetaKey\n                    ? platform.isMacintosh\n                        ? localize('links.navigate.kb.meta.mac', \"cmd + click\")\n                        : localize('links.navigate.kb.meta', \"ctrl + click\")\n                    : platform.isMacintosh\n                        ? localize('links.navigate.kb.alt.mac', \"option + click\")\n                        : localize('links.navigate.kb.alt', \"alt + click\");\n                if (part.part.location && part.part.command) {\n                    linkHint = new MarkdownString().appendText(localize('hint.defAndCommand', 'Go to Definition ({0}), right click for more', kb));\n                }\n                else if (part.part.location) {\n                    linkHint = new MarkdownString().appendText(localize('hint.def', 'Go to Definition ({0})', kb));\n                }\n                else if (part.part.command) {\n                    linkHint = new MarkdownString(`[${localize('hint.cmd', \"Execute Command\")}](${asCommandLink(part.part.command)} \"${part.part.command.title}\") (${kb})`, { isTrusted: true });\n                }\n                if (linkHint) {\n                    executor.emitOne(new MarkdownHover(this, anchor.range, [linkHint], 10000));\n                }\n            }\n            // (3) Inlay Label Part Location tooltip\n            const iterable = yield this._resolveInlayHintLabelPartHover(part, token);\n            try {\n                for (var iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = yield iterable_1.next(), !iterable_1_1.done;) {\n                    const item = iterable_1_1.value;\n                    executor.emitOne(item);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (iterable_1_1 && !iterable_1_1.done && (_a = iterable_1.return)) yield _a.call(iterable_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }));\n    }\n    _resolveInlayHintLabelPartHover(part, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!part.part.location) {\n                return AsyncIterableObject.EMPTY;\n            }\n            const { uri, range } = part.part.location;\n            const ref = yield this._resolverService.createModelReference(uri);\n            try {\n                const model = ref.object.textEditorModel;\n                if (!this._languageFeaturesService.hoverProvider.has(model)) {\n                    return AsyncIterableObject.EMPTY;\n                }\n                return getHover(this._languageFeaturesService.hoverProvider, model, new Position(range.startLineNumber, range.startColumn), token)\n                    .filter(item => !isEmptyMarkdownString(item.hover.contents))\n                    .map(item => new MarkdownHover(this, part.item.anchor.range, item.hover.contents, 2 + item.ordinal));\n            }\n            finally {\n                ref.dispose();\n            }\n        });\n    }\n};\nInlayHintsHover = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService),\n    __param(4, ITextModelService),\n    __param(5, ILanguageFeaturesService)\n], InlayHintsHover);\nexport { InlayHintsHover };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { InlayHintsController } from './inlayHintsController.js';\nimport { InlayHintsHover } from './inlayHintsHover.js';\nregisterEditorContribution(InlayHintsController.ID, InlayHintsController);\nHoverParticipantRegistry.register(InlayHintsHover);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const inlineSuggestCommitId = 'editor.action.inlineSuggest.commit';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nexport function createDisposableRef(object, disposable) {\n    return {\n        object,\n        dispose: () => disposable === null || disposable === void 0 ? void 0 : disposable.dispose(),\n    };\n}\nexport function applyEdits(text, edits) {\n    const transformer = new PositionOffsetTransformer(text);\n    const offsetEdits = edits.map(e => {\n        const range = Range.lift(e.range);\n        return ({\n            startOffset: transformer.getOffset(range.getStartPosition()),\n            endOffset: transformer.getOffset(range.getEndPosition()),\n            text: e.text\n        });\n    });\n    offsetEdits.sort((a, b) => b.startOffset - a.startOffset);\n    for (const edit of offsetEdits) {\n        text = text.substring(0, edit.startOffset) + edit.text + text.substring(edit.endOffset);\n    }\n    return text;\n}\nclass PositionOffsetTransformer {\n    constructor(text) {\n        this.lineStartOffsetByLineIdx = [];\n        this.lineStartOffsetByLineIdx.push(0);\n        for (let i = 0; i < text.length; i++) {\n            if (text.charAt(i) === '\\n') {\n                this.lineStartOffsetByLineIdx.push(i + 1);\n            }\n        }\n    }\n    getOffset(position) {\n        return this.lineStartOffsetByLineIdx[position.lineNumber - 1] + position.column - 1;\n    }\n}\nconst array = [];\nexport function getReadonlyEmptyArray() {\n    return array;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { applyEdits } from './utils.js';\nexport class GhostText {\n    constructor(lineNumber, parts, additionalReservedLineCount = 0) {\n        this.lineNumber = lineNumber;\n        this.parts = parts;\n        this.additionalReservedLineCount = additionalReservedLineCount;\n    }\n    renderForScreenReader(lineText) {\n        if (this.parts.length === 0) {\n            return '';\n        }\n        const lastPart = this.parts[this.parts.length - 1];\n        const cappedLineText = lineText.substr(0, lastPart.column - 1);\n        const text = applyEdits(cappedLineText, this.parts.map(p => ({\n            range: { startLineNumber: 1, endLineNumber: 1, startColumn: p.column, endColumn: p.column },\n            text: p.lines.join('\\n')\n        })));\n        return text.substring(this.parts[0].column - 1);\n    }\n    isEmpty() {\n        return this.parts.every(p => p.lines.length === 0);\n    }\n}\nexport class GhostTextPart {\n    constructor(column, lines, \n    /**\n     * Indicates if this part is a preview of an inline suggestion when a suggestion is previewed.\n    */\n    preview) {\n        this.column = column;\n        this.lines = lines;\n        this.preview = preview;\n    }\n}\nexport class GhostTextReplacement {\n    constructor(lineNumber, columnStart, length, newLines, additionalReservedLineCount = 0) {\n        this.lineNumber = lineNumber;\n        this.columnStart = columnStart;\n        this.length = length;\n        this.newLines = newLines;\n        this.additionalReservedLineCount = additionalReservedLineCount;\n        this.parts = [\n            new GhostTextPart(this.columnStart + this.length, this.newLines, false),\n        ];\n    }\n    renderForScreenReader(_lineText) {\n        return this.newLines.join('\\n');\n    }\n}\nexport class BaseGhostTextWidgetModel extends Disposable {\n    constructor(editor) {\n        super();\n        this.editor = editor;\n        this._expanded = undefined;\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(108 /* EditorOption.suggest */) && this._expanded === undefined) {\n                this.onDidChangeEmitter.fire();\n            }\n        }));\n    }\n    setExpanded(expanded) {\n        this._expanded = true;\n        this.onDidChangeEmitter.fire();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../../base/common/diff/diff.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { GhostText, GhostTextPart } from './ghostText.js';\nexport function minimizeInlineCompletion(model, inlineCompletion) {\n    if (!inlineCompletion) {\n        return inlineCompletion;\n    }\n    const valueToReplace = model.getValueInRange(inlineCompletion.range);\n    const commonPrefixLen = strings.commonPrefixLength(valueToReplace, inlineCompletion.insertText);\n    const startOffset = model.getOffsetAt(inlineCompletion.range.getStartPosition()) + commonPrefixLen;\n    const start = model.getPositionAt(startOffset);\n    const remainingValueToReplace = valueToReplace.substr(commonPrefixLen);\n    const commonSuffixLen = strings.commonSuffixLength(remainingValueToReplace, inlineCompletion.insertText);\n    const end = model.getPositionAt(Math.max(startOffset, model.getOffsetAt(inlineCompletion.range.getEndPosition()) - commonSuffixLen));\n    return {\n        range: Range.fromPositions(start, end),\n        insertText: inlineCompletion.insertText.substr(commonPrefixLen, inlineCompletion.insertText.length - commonPrefixLen - commonSuffixLen),\n        snippetInfo: inlineCompletion.snippetInfo,\n        filterText: inlineCompletion.filterText,\n        additionalTextEdits: inlineCompletion.additionalTextEdits,\n    };\n}\nexport function normalizedInlineCompletionsEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    return a.range.equalsRange(b.range) && a.insertText === b.insertText && a.command === b.command;\n}\n/**\n * @param previewSuffixLength Sets where to split `inlineCompletion.text`.\n * \tIf the text is `hello` and the suffix length is 2, the non-preview part is `hel` and the preview-part is `lo`.\n*/\nexport function inlineCompletionToGhostText(inlineCompletion, textModel, mode, cursorPosition, previewSuffixLength = 0) {\n    if (inlineCompletion.range.startLineNumber !== inlineCompletion.range.endLineNumber) {\n        // Only single line replacements are supported.\n        return undefined;\n    }\n    const sourceLine = textModel.getLineContent(inlineCompletion.range.startLineNumber);\n    const sourceIndentationLength = strings.getLeadingWhitespace(sourceLine).length;\n    const suggestionTouchesIndentation = inlineCompletion.range.startColumn - 1 <= sourceIndentationLength;\n    if (suggestionTouchesIndentation) {\n        // source:      ··········[······abc]\n        //                         ^^^^^^^^^ inlineCompletion.range\n        //              ^^^^^^^^^^ ^^^^^^ sourceIndentationLength\n        //                         ^^^^^^ replacedIndentation.length\n        //                               ^^^ rangeThatDoesNotReplaceIndentation\n        // inlineCompletion.text: '··foo'\n        //                         ^^ suggestionAddedIndentationLength\n        const suggestionAddedIndentationLength = strings.getLeadingWhitespace(inlineCompletion.insertText).length;\n        const replacedIndentation = sourceLine.substring(inlineCompletion.range.startColumn - 1, sourceIndentationLength);\n        const rangeThatDoesNotReplaceIndentation = Range.fromPositions(inlineCompletion.range.getStartPosition().delta(0, replacedIndentation.length), inlineCompletion.range.getEndPosition());\n        const suggestionWithoutIndentationChange = inlineCompletion.insertText.startsWith(replacedIndentation)\n            // Adds more indentation without changing existing indentation: We can add ghost text for this\n            ? inlineCompletion.insertText.substring(replacedIndentation.length)\n            // Changes or removes existing indentation. Only add ghost text for the non-indentation part.\n            : inlineCompletion.insertText.substring(suggestionAddedIndentationLength);\n        inlineCompletion = {\n            range: rangeThatDoesNotReplaceIndentation,\n            insertText: suggestionWithoutIndentationChange,\n            command: inlineCompletion.command,\n            snippetInfo: undefined,\n            filterText: inlineCompletion.filterText,\n            additionalTextEdits: inlineCompletion.additionalTextEdits,\n        };\n    }\n    // This is a single line string\n    const valueToBeReplaced = textModel.getValueInRange(inlineCompletion.range);\n    const changes = cachingDiff(valueToBeReplaced, inlineCompletion.insertText);\n    if (!changes) {\n        // No ghost text in case the diff would be too slow to compute\n        return undefined;\n    }\n    const lineNumber = inlineCompletion.range.startLineNumber;\n    const parts = new Array();\n    if (mode === 'prefix') {\n        const filteredChanges = changes.filter(c => c.originalLength === 0);\n        if (filteredChanges.length > 1 || filteredChanges.length === 1 && filteredChanges[0].originalStart !== valueToBeReplaced.length) {\n            // Prefixes only have a single change.\n            return undefined;\n        }\n    }\n    const previewStartInCompletionText = inlineCompletion.insertText.length - previewSuffixLength;\n    for (const c of changes) {\n        const insertColumn = inlineCompletion.range.startColumn + c.originalStart + c.originalLength;\n        if (mode === 'subwordSmart' && cursorPosition && cursorPosition.lineNumber === inlineCompletion.range.startLineNumber && insertColumn < cursorPosition.column) {\n            // No ghost text before cursor\n            return undefined;\n        }\n        if (c.originalLength > 0) {\n            return undefined;\n        }\n        if (c.modifiedLength === 0) {\n            continue;\n        }\n        const modifiedEnd = c.modifiedStart + c.modifiedLength;\n        const nonPreviewTextEnd = Math.max(c.modifiedStart, Math.min(modifiedEnd, previewStartInCompletionText));\n        const nonPreviewText = inlineCompletion.insertText.substring(c.modifiedStart, nonPreviewTextEnd);\n        const italicText = inlineCompletion.insertText.substring(nonPreviewTextEnd, Math.max(c.modifiedStart, modifiedEnd));\n        if (nonPreviewText.length > 0) {\n            const lines = strings.splitLines(nonPreviewText);\n            parts.push(new GhostTextPart(insertColumn, lines, false));\n        }\n        if (italicText.length > 0) {\n            const lines = strings.splitLines(italicText);\n            parts.push(new GhostTextPart(insertColumn, lines, true));\n        }\n    }\n    return new GhostText(lineNumber, parts, 0);\n}\nlet lastRequest = undefined;\nfunction cachingDiff(originalValue, newValue) {\n    if ((lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.originalValue) === originalValue && (lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.newValue) === newValue) {\n        return lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.changes;\n    }\n    else {\n        let changes = smartDiff(originalValue, newValue, true);\n        if (changes) {\n            const deletedChars = deletedCharacters(changes);\n            if (deletedChars > 0) {\n                // For performance reasons, don't compute diff if there is nothing to improve\n                const newChanges = smartDiff(originalValue, newValue, false);\n                if (newChanges && deletedCharacters(newChanges) < deletedChars) {\n                    // Disabling smartness seems to be better here\n                    changes = newChanges;\n                }\n            }\n        }\n        lastRequest = {\n            originalValue,\n            newValue,\n            changes\n        };\n        return changes;\n    }\n}\nfunction deletedCharacters(changes) {\n    let sum = 0;\n    for (const c of changes) {\n        sum += Math.max(c.originalLength - c.modifiedLength, 0);\n    }\n    return sum;\n}\n/**\n * When matching `if ()` with `if (f() = 1) { g(); }`,\n * align it like this:        `if (       )`\n * Not like this:\t\t\t  `if (  )`\n * Also not like this:\t\t  `if (             )`.\n *\n * The parenthesis are preprocessed to ensure that they match correctly.\n */\nfunction smartDiff(originalValue, newValue, smartBracketMatching) {\n    if (originalValue.length > 5000 || newValue.length > 5000) {\n        // We don't want to work on strings that are too big\n        return undefined;\n    }\n    function getMaxCharCode(val) {\n        let maxCharCode = 0;\n        for (let i = 0, len = val.length; i < len; i++) {\n            const charCode = val.charCodeAt(i);\n            if (charCode > maxCharCode) {\n                maxCharCode = charCode;\n            }\n        }\n        return maxCharCode;\n    }\n    const maxCharCode = Math.max(getMaxCharCode(originalValue), getMaxCharCode(newValue));\n    function getUniqueCharCode(id) {\n        if (id < 0) {\n            throw new Error('unexpected');\n        }\n        return maxCharCode + id + 1;\n    }\n    function getElements(source) {\n        let level = 0;\n        let group = 0;\n        const characters = new Int32Array(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            // TODO support more brackets\n            if (smartBracketMatching && source[i] === '(') {\n                const id = group * 100 + level;\n                characters[i] = getUniqueCharCode(2 * id);\n                level++;\n            }\n            else if (smartBracketMatching && source[i] === ')') {\n                level = Math.max(level - 1, 0);\n                const id = group * 100 + level;\n                characters[i] = getUniqueCharCode(2 * id + 1);\n                if (level === 0) {\n                    group++;\n                }\n            }\n            else {\n                characters[i] = source.charCodeAt(i);\n            }\n        }\n        return characters;\n    }\n    const elements1 = getElements(originalValue);\n    const elements2 = getElements(newValue);\n    return new LcsDiff({ getElements: () => elements1 }, { getElements: () => elements2 }).ComputeDiff(false).changes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { BaseGhostTextWidgetModel, GhostTextReplacement } from './ghostText.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { inlineSuggestCommitId } from './consts.js';\nimport { inlineCompletionToGhostText } from './inlineCompletionToGhostText.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { fixBracketsInLine } from '../../../common/model/bracketPairsTextModelPart/fixBrackets.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { assertNever } from '../../../../base/common/types.js';\nimport { matchesSubString } from '../../../../base/common/filters.js';\nimport { getReadonlyEmptyArray } from './utils.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nlet InlineCompletionsModel = class InlineCompletionsModel extends Disposable {\n    constructor(editor, cache, commandService, languageConfigurationService, languageFeaturesService, debounceService, configurationService) {\n        super();\n        this.editor = editor;\n        this.cache = cache;\n        this.commandService = commandService;\n        this.languageConfigurationService = languageConfigurationService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.debounceService = debounceService;\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.completionSession = this._register(new MutableDisposable());\n        this.active = false;\n        this.disposed = false;\n        this.debounceValue = this.debounceService.for(this.languageFeaturesService.inlineCompletionsProvider, 'InlineCompletionsDebounce', { min: 50, max: 50 });\n        this._register(commandService.onDidExecuteCommand((e) => {\n            // These commands don't trigger onDidType.\n            const commands = new Set([\n                CoreEditingCommands.Tab.id,\n                CoreEditingCommands.DeleteLeft.id,\n                CoreEditingCommands.DeleteRight.id,\n                inlineSuggestCommitId,\n                'acceptSelectedSuggestion',\n            ]);\n            if (commands.has(e.commandId) && editor.hasTextFocus()) {\n                this.handleUserInput();\n            }\n        }));\n        this._register(this.editor.onDidType((e) => {\n            this.handleUserInput();\n        }));\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\n            if (e.reason === 3 /* CursorChangeReason.Explicit */ ||\n                this.session && !this.session.isValid) {\n                this.hide();\n            }\n        }));\n        this._register(toDisposable(() => {\n            this.disposed = true;\n        }));\n        this._register(this.editor.onDidBlurEditorWidget(() => {\n            // This is a hidden setting very useful for debugging\n            if (configurationService.getValue('editor.inlineSuggest.hideOnBlur')) {\n                return;\n            }\n            this.hide();\n        }));\n    }\n    handleUserInput() {\n        if (this.session && !this.session.isValid) {\n            this.hide();\n        }\n        setTimeout(() => {\n            if (this.disposed) {\n                return;\n            }\n            // Wait for the cursor update that happens in the same iteration loop iteration\n            this.startSessionIfTriggered();\n        }, 0);\n    }\n    get session() {\n        return this.completionSession.value;\n    }\n    get ghostText() {\n        var _a;\n        return (_a = this.session) === null || _a === void 0 ? void 0 : _a.ghostText;\n    }\n    get minReservedLineCount() {\n        return this.session ? this.session.minReservedLineCount : 0;\n    }\n    setExpanded(expanded) {\n        var _a;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.setExpanded(expanded);\n    }\n    setActive(active) {\n        var _a;\n        this.active = active;\n        if (active) {\n            (_a = this.session) === null || _a === void 0 ? void 0 : _a.scheduleAutomaticUpdate();\n        }\n    }\n    startSessionIfTriggered() {\n        const suggestOptions = this.editor.getOption(57 /* EditorOption.inlineSuggest */);\n        if (!suggestOptions.enabled) {\n            return;\n        }\n        if (this.session && this.session.isValid) {\n            return;\n        }\n        this.trigger(InlineCompletionTriggerKind.Automatic);\n    }\n    trigger(triggerKind) {\n        if (this.completionSession.value) {\n            if (triggerKind === InlineCompletionTriggerKind.Explicit) {\n                void this.completionSession.value.ensureUpdateWithExplicitContext();\n            }\n            return;\n        }\n        this.completionSession.value = new InlineCompletionsSession(this.editor, this.editor.getPosition(), () => this.active, this.commandService, this.cache, triggerKind, this.languageConfigurationService, this.languageFeaturesService.inlineCompletionsProvider, this.debounceValue);\n        this.completionSession.value.takeOwnership(this.completionSession.value.onDidChange(() => {\n            this.onDidChangeEmitter.fire();\n        }));\n    }\n    hide() {\n        this.completionSession.clear();\n        this.onDidChangeEmitter.fire();\n    }\n    commitCurrentSuggestion() {\n        var _a;\n        // Don't dispose the session, so that after committing, more suggestions are shown.\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.commitCurrentCompletion();\n    }\n    showNext() {\n        var _a;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.showNextInlineCompletion();\n    }\n    showPrevious() {\n        var _a;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.showPreviousInlineCompletion();\n    }\n    hasMultipleInlineCompletions() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield ((_a = this.session) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\n            return result !== undefined ? result : false;\n        });\n    }\n};\nInlineCompletionsModel = __decorate([\n    __param(2, ICommandService),\n    __param(3, ILanguageConfigurationService),\n    __param(4, ILanguageFeaturesService),\n    __param(5, ILanguageFeatureDebounceService),\n    __param(6, IConfigurationService)\n], InlineCompletionsModel);\nexport { InlineCompletionsModel };\nexport class InlineCompletionsSession extends BaseGhostTextWidgetModel {\n    constructor(editor, triggerPosition, shouldUpdate, commandService, cache, initialTriggerKind, languageConfigurationService, registry, debounce) {\n        super(editor);\n        this.triggerPosition = triggerPosition;\n        this.shouldUpdate = shouldUpdate;\n        this.commandService = commandService;\n        this.cache = cache;\n        this.initialTriggerKind = initialTriggerKind;\n        this.languageConfigurationService = languageConfigurationService;\n        this.registry = registry;\n        this.debounce = debounce;\n        this.minReservedLineCount = 0;\n        this.updateOperation = this._register(new MutableDisposable());\n        this.updateSoon = this._register(new RunOnceScheduler(() => {\n            const triggerKind = this.initialTriggerKind;\n            // All subsequent triggers are automatic.\n            this.initialTriggerKind = InlineCompletionTriggerKind.Automatic;\n            return this.update(triggerKind);\n        }, 50));\n        this.filteredCompletions = [];\n        //#region Selection\n        // We use a semantic id to track the selection even if the cache changes.\n        this.currentlySelectedCompletionId = undefined;\n        let lastCompletionItem = undefined;\n        this._register(this.onDidChange(() => {\n            var _a;\n            const currentCompletion = this.currentCompletion;\n            if (currentCompletion && currentCompletion.sourceInlineCompletion !== lastCompletionItem) {\n                lastCompletionItem = currentCompletion.sourceInlineCompletion;\n                const provider = currentCompletion.sourceProvider;\n                (_a = provider.handleItemDidShow) === null || _a === void 0 ? void 0 : _a.call(provider, currentCompletion.sourceInlineCompletions, lastCompletionItem);\n            }\n        }));\n        this._register(toDisposable(() => {\n            this.cache.clear();\n        }));\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\n            var _a;\n            if (e.reason === 3 /* CursorChangeReason.Explicit */) {\n                return;\n            }\n            // Ghost text depends on the cursor position\n            (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.updateRanges();\n            if (this.cache.value) {\n                this.updateFilteredInlineCompletions();\n                this.onDidChangeEmitter.fire();\n            }\n        }));\n        this._register(this.editor.onDidChangeModelContent((e) => {\n            var _a;\n            // Call this in case `onDidChangeModelContent` calls us first.\n            (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.updateRanges();\n            this.updateFilteredInlineCompletions();\n            this.scheduleAutomaticUpdate();\n        }));\n        this._register(this.registry.onDidChange(() => {\n            this.updateSoon.schedule(this.debounce.get(this.editor.getModel()));\n        }));\n        this.scheduleAutomaticUpdate();\n    }\n    updateFilteredInlineCompletions() {\n        if (!this.cache.value) {\n            this.filteredCompletions = [];\n            return;\n        }\n        const model = this.editor.getModel();\n        const cursorPosition = model.validatePosition(this.editor.getPosition());\n        this.filteredCompletions = this.cache.value.completions.filter(c => {\n            const originalValue = model.getValueInRange(c.synchronizedRange).toLowerCase();\n            const filterText = c.inlineCompletion.filterText.toLowerCase();\n            const indent = model.getLineIndentColumn(c.synchronizedRange.startLineNumber);\n            const cursorPosIndex = Math.max(0, cursorPosition.column - c.synchronizedRange.startColumn);\n            let filterTextBefore = filterText.substring(0, cursorPosIndex);\n            let filterTextAfter = filterText.substring(cursorPosIndex);\n            let originalValueBefore = originalValue.substring(0, cursorPosIndex);\n            let originalValueAfter = originalValue.substring(cursorPosIndex);\n            if (c.synchronizedRange.startColumn <= indent) {\n                // Remove indentation\n                originalValueBefore = originalValueBefore.trimStart();\n                if (originalValueBefore.length === 0) {\n                    originalValueAfter = originalValueAfter.trimStart();\n                }\n                filterTextBefore = filterTextBefore.trimStart();\n                if (filterTextBefore.length === 0) {\n                    filterTextAfter = filterTextAfter.trimStart();\n                }\n            }\n            return filterTextBefore.startsWith(originalValueBefore)\n                && matchesSubString(originalValueAfter, filterTextAfter);\n        });\n    }\n    fixAndGetIndexOfCurrentSelection() {\n        if (!this.currentlySelectedCompletionId || !this.cache.value) {\n            return 0;\n        }\n        if (this.cache.value.completions.length === 0) {\n            // don't reset the selection in this case\n            return 0;\n        }\n        const idx = this.filteredCompletions.findIndex(v => v.semanticId === this.currentlySelectedCompletionId);\n        if (idx === -1) {\n            // Reset the selection so that the selection does not jump back when it appears again\n            this.currentlySelectedCompletionId = undefined;\n            return 0;\n        }\n        return idx;\n    }\n    get currentCachedCompletion() {\n        if (!this.cache.value) {\n            return undefined;\n        }\n        return this.filteredCompletions[this.fixAndGetIndexOfCurrentSelection()];\n    }\n    showNextInlineCompletion() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ensureUpdateWithExplicitContext();\n            const completions = this.filteredCompletions || [];\n            if (completions.length > 0) {\n                const newIdx = (this.fixAndGetIndexOfCurrentSelection() + 1) % completions.length;\n                this.currentlySelectedCompletionId = completions[newIdx].semanticId;\n            }\n            else {\n                this.currentlySelectedCompletionId = undefined;\n            }\n            this.onDidChangeEmitter.fire();\n        });\n    }\n    showPreviousInlineCompletion() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ensureUpdateWithExplicitContext();\n            const completions = this.filteredCompletions || [];\n            if (completions.length > 0) {\n                const newIdx = (this.fixAndGetIndexOfCurrentSelection() + completions.length - 1) % completions.length;\n                this.currentlySelectedCompletionId = completions[newIdx].semanticId;\n            }\n            else {\n                this.currentlySelectedCompletionId = undefined;\n            }\n            this.onDidChangeEmitter.fire();\n        });\n    }\n    ensureUpdateWithExplicitContext() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.updateOperation.value) {\n                // Restart or wait for current update operation\n                if (this.updateOperation.value.triggerKind === InlineCompletionTriggerKind.Explicit) {\n                    yield this.updateOperation.value.promise;\n                }\n                else {\n                    yield this.update(InlineCompletionTriggerKind.Explicit);\n                }\n            }\n            else if (((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.triggerKind) !== InlineCompletionTriggerKind.Explicit) {\n                // Refresh cache\n                yield this.update(InlineCompletionTriggerKind.Explicit);\n            }\n        });\n    }\n    hasMultipleInlineCompletions() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ensureUpdateWithExplicitContext();\n            return (((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions.length) || 0) > 1;\n        });\n    }\n    //#endregion\n    get ghostText() {\n        const currentCompletion = this.currentCompletion;\n        if (!currentCompletion) {\n            return undefined;\n        }\n        const cursorPosition = this.editor.getPosition();\n        if (currentCompletion.range.getEndPosition().isBefore(cursorPosition)) {\n            return undefined;\n        }\n        const mode = this.editor.getOptions().get(57 /* EditorOption.inlineSuggest */).mode;\n        const ghostText = inlineCompletionToGhostText(currentCompletion, this.editor.getModel(), mode, cursorPosition);\n        if (ghostText) {\n            if (ghostText.isEmpty()) {\n                return undefined;\n            }\n            return ghostText;\n        }\n        return new GhostTextReplacement(currentCompletion.range.startLineNumber, currentCompletion.range.startColumn, currentCompletion.range.endColumn - currentCompletion.range.startColumn, currentCompletion.insertText.split('\\n'), 0);\n    }\n    get currentCompletion() {\n        const completion = this.currentCachedCompletion;\n        if (!completion) {\n            return undefined;\n        }\n        return completion.toLiveInlineCompletion();\n    }\n    get isValid() {\n        return this.editor.getPosition().lineNumber === this.triggerPosition.lineNumber;\n    }\n    scheduleAutomaticUpdate() {\n        // Since updateSoon debounces, starvation can happen.\n        // To prevent stale cache, we clear the current update operation.\n        this.updateOperation.clear();\n        this.updateSoon.schedule(this.debounce.get(this.editor.getModel()));\n    }\n    update(triggerKind) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.shouldUpdate()) {\n                return;\n            }\n            const position = this.editor.getPosition();\n            const startTime = new Date();\n            const promise = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                let result;\n                try {\n                    result = yield provideInlineCompletions(this.registry, position, this.editor.getModel(), { triggerKind, selectedSuggestionInfo: undefined }, token, this.languageConfigurationService);\n                    const endTime = new Date();\n                    this.debounce.update(this.editor.getModel(), endTime.getTime() - startTime.getTime());\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                    return;\n                }\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                this.cache.setValue(this.editor, result, triggerKind);\n                this.updateFilteredInlineCompletions();\n                this.onDidChangeEmitter.fire();\n            }));\n            const operation = new UpdateOperation(promise, triggerKind);\n            this.updateOperation.value = operation;\n            yield promise;\n            if (this.updateOperation.value === operation) {\n                this.updateOperation.clear();\n            }\n        });\n    }\n    takeOwnership(disposable) {\n        this._register(disposable);\n    }\n    commitCurrentCompletion() {\n        const ghostText = this.ghostText;\n        if (!ghostText) {\n            // No ghost text was shown for this completion.\n            // Thus, we don't want to commit anything.\n            return;\n        }\n        const completion = this.currentCompletion;\n        if (completion) {\n            this.commit(completion);\n        }\n    }\n    commit(completion) {\n        var _a;\n        // Mark the cache as stale, but don't dispose it yet,\n        // otherwise command args might get disposed.\n        const cache = this.cache.clearAndLeak();\n        if (completion.snippetInfo) {\n            this.editor.executeEdits('inlineSuggestion.accept', [\n                EditOperation.replaceMove(completion.range, ''),\n                ...completion.additionalTextEdits\n            ]);\n            this.editor.setPosition(completion.snippetInfo.range.getStartPosition());\n            (_a = SnippetController2.get(this.editor)) === null || _a === void 0 ? void 0 : _a.insert(completion.snippetInfo.snippet);\n        }\n        else {\n            this.editor.executeEdits('inlineSuggestion.accept', [\n                EditOperation.replaceMove(completion.range, completion.insertText),\n                ...completion.additionalTextEdits\n            ]);\n        }\n        if (completion.command) {\n            this.commandService\n                .executeCommand(completion.command.id, ...(completion.command.arguments || []))\n                .finally(() => {\n                cache === null || cache === void 0 ? void 0 : cache.dispose();\n            })\n                .then(undefined, onUnexpectedExternalError);\n        }\n        else {\n            cache === null || cache === void 0 ? void 0 : cache.dispose();\n        }\n        this.onDidChangeEmitter.fire();\n    }\n    get commands() {\n        var _a;\n        const lists = new Set(((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions.map(c => c.inlineCompletion.sourceInlineCompletions)) || []);\n        return [...lists].flatMap(l => l.commands || []);\n    }\n}\nexport class UpdateOperation {\n    constructor(promise, triggerKind) {\n        this.promise = promise;\n        this.triggerKind = triggerKind;\n    }\n    dispose() {\n        this.promise.cancel();\n    }\n}\n/**\n * The cache keeps itself in sync with the editor.\n * It also owns the completions result and disposes it when the cache is diposed.\n*/\nexport class SynchronizedInlineCompletionsCache extends Disposable {\n    constructor(completionsSource, editor, onChange, triggerKind) {\n        super();\n        this.editor = editor;\n        this.onChange = onChange;\n        this.triggerKind = triggerKind;\n        this.isDisposing = false;\n        const decorationIds = editor.changeDecorations((changeAccessor) => {\n            return changeAccessor.deltaDecorations([], completionsSource.items.map(i => ({\n                range: i.range,\n                options: {\n                    description: 'inline-completion-tracking-range'\n                },\n            })));\n        });\n        this._register(toDisposable(() => {\n            this.isDisposing = true;\n            editor.removeDecorations(decorationIds);\n        }));\n        this.completions = completionsSource.items.map((c, idx) => new CachedInlineCompletion(c, decorationIds[idx]));\n        this._register(editor.onDidChangeModelContent(() => {\n            this.updateRanges();\n        }));\n        this._register(completionsSource);\n    }\n    updateRanges() {\n        if (this.isDisposing) {\n            return;\n        }\n        let hasChanged = false;\n        const model = this.editor.getModel();\n        for (const c of this.completions) {\n            const newRange = model.getDecorationRange(c.decorationId);\n            if (!newRange) {\n                onUnexpectedError(new Error('Decoration has no range'));\n                continue;\n            }\n            if (!c.synchronizedRange.equalsRange(newRange)) {\n                hasChanged = true;\n                c.synchronizedRange = newRange;\n            }\n        }\n        if (hasChanged) {\n            this.onChange();\n        }\n    }\n}\nclass CachedInlineCompletion {\n    constructor(inlineCompletion, decorationId) {\n        this.inlineCompletion = inlineCompletion;\n        this.decorationId = decorationId;\n        this.semanticId = JSON.stringify({\n            text: this.inlineCompletion.insertText,\n            abbreviation: this.inlineCompletion.filterText,\n            startLine: this.inlineCompletion.range.startLineNumber,\n            startColumn: this.inlineCompletion.range.startColumn,\n            command: this.inlineCompletion.command\n        });\n        this.synchronizedRange = inlineCompletion.range;\n    }\n    toLiveInlineCompletion() {\n        return {\n            insertText: this.inlineCompletion.insertText,\n            range: this.synchronizedRange,\n            command: this.inlineCompletion.command,\n            sourceProvider: this.inlineCompletion.sourceProvider,\n            sourceInlineCompletions: this.inlineCompletion.sourceInlineCompletions,\n            sourceInlineCompletion: this.inlineCompletion.sourceInlineCompletion,\n            snippetInfo: this.inlineCompletion.snippetInfo,\n            filterText: this.inlineCompletion.filterText,\n            additionalTextEdits: this.inlineCompletion.additionalTextEdits,\n        };\n    }\n}\nexport function provideInlineCompletions(registry, position, model, context, token = CancellationToken.None, languageConfigurationService) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const defaultReplaceRange = getDefaultRange(position, model);\n        const providers = registry.all(model);\n        const results = yield Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\n            const completions = yield Promise.resolve(provider.provideInlineCompletions(model, position, context, token)).catch(onUnexpectedExternalError);\n            return ({\n                completions,\n                provider,\n                dispose: () => {\n                    if (completions) {\n                        provider.freeInlineCompletions(completions);\n                    }\n                }\n            });\n        })));\n        const itemsByHash = new Map();\n        for (const result of results) {\n            const completions = result.completions;\n            if (!completions) {\n                continue;\n            }\n            for (const item of completions.items) {\n                let range = item.range ? Range.lift(item.range) : defaultReplaceRange;\n                if (range.startLineNumber !== range.endLineNumber) {\n                    // Ignore invalid ranges.\n                    continue;\n                }\n                let insertText;\n                let snippetInfo;\n                if (typeof item.insertText === 'string') {\n                    insertText = item.insertText;\n                    if (languageConfigurationService && item.completeBracketPairs) {\n                        insertText = closeBrackets(insertText, range.getStartPosition(), model, languageConfigurationService);\n                        // Modify range depending on if brackets are added or removed\n                        const diff = insertText.length - item.insertText.length;\n                        if (diff !== 0) {\n                            range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n                        }\n                    }\n                    snippetInfo = undefined;\n                }\n                else if ('snippet' in item.insertText) {\n                    const snippet = new SnippetParser().parse(item.insertText.snippet);\n                    insertText = snippet.toString();\n                    snippetInfo = {\n                        snippet: item.insertText.snippet,\n                        range: range\n                    };\n                }\n                else {\n                    assertNever(item.insertText);\n                }\n                const trackedItem = ({\n                    insertText,\n                    snippetInfo,\n                    range,\n                    command: item.command,\n                    sourceProvider: result.provider,\n                    sourceInlineCompletions: completions,\n                    sourceInlineCompletion: item,\n                    filterText: item.filterText || insertText,\n                    additionalTextEdits: item.additionalTextEdits || getReadonlyEmptyArray()\n                });\n                itemsByHash.set(JSON.stringify({ insertText, range: item.range }), trackedItem);\n            }\n        }\n        return {\n            items: [...itemsByHash.values()],\n            dispose: () => {\n                for (const result of results) {\n                    result.dispose();\n                }\n            },\n        };\n    });\n}\nfunction getDefaultRange(position, model) {\n    const word = model.getWordAtPosition(position);\n    const maxColumn = model.getLineMaxColumn(position.lineNumber);\n    // By default, always replace up until the end of the current line.\n    // This default might be subject to change!\n    return word\n        ? new Range(position.lineNumber, word.startColumn, position.lineNumber, maxColumn)\n        : Range.fromPositions(position, position.with(undefined, maxColumn));\n}\nfunction closeBrackets(text, position, model, languageConfigurationService) {\n    const lineStart = model.getLineContent(position.lineNumber).substring(0, position.column - 1);\n    const newLine = lineStart + text;\n    const newTokens = model.tokenization.tokenizeLineWithEdit(position, newLine.length - (position.column - 1), text);\n    const slicedTokens = newTokens === null || newTokens === void 0 ? void 0 : newTokens.sliceAndInflate(position.column - 1, newLine.length, 0);\n    if (!slicedTokens) {\n        return text;\n    }\n    const newText = fixBracketsInLine(slicedTokens, languageConfigurationService);\n    return newText;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { compareBy, findMaxBy, numberComparator } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { SnippetSession } from '../../snippet/browser/snippetSession.js';\nimport { SuggestController } from '../../suggest/browser/suggestController.js';\nimport { minimizeInlineCompletion, normalizedInlineCompletionsEquals } from './inlineCompletionToGhostText.js';\nexport class SuggestWidgetInlineCompletionProvider extends Disposable {\n    constructor(editor, suggestControllerPreselector) {\n        super();\n        this.editor = editor;\n        this.suggestControllerPreselector = suggestControllerPreselector;\n        this.isSuggestWidgetVisible = false;\n        this.isShiftKeyPressed = false;\n        this._isActive = false;\n        this._currentSuggestItemInfo = undefined;\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        // This delay fixes a suggest widget issue when typing \".\" immediately restarts the suggestion session.\n        this.setInactiveDelayed = this._register(new RunOnceScheduler(() => {\n            if (!this.isSuggestWidgetVisible) {\n                if (this._isActive) {\n                    this._isActive = false;\n                    this.onDidChangeEmitter.fire();\n                }\n            }\n        }, 100));\n        // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\n        this._register(editor.onKeyDown(e => {\n            if (e.shiftKey && !this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = true;\n                this.update(this._isActive);\n            }\n        }));\n        this._register(editor.onKeyUp(e => {\n            if (e.shiftKey && this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = false;\n                this.update(this._isActive);\n            }\n        }));\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            this._register(suggestController.registerSelector({\n                priority: 100,\n                select: (model, pos, suggestItems) => {\n                    const textModel = this.editor.getModel();\n                    const normalizedItemToPreselect = minimizeInlineCompletion(textModel, this.suggestControllerPreselector());\n                    if (!normalizedItemToPreselect) {\n                        return -1;\n                    }\n                    const position = Position.lift(pos);\n                    const candidates = suggestItems\n                        .map((suggestItem, index) => {\n                        const inlineSuggestItem = suggestionToSuggestItemInfo(suggestController, position, suggestItem, this.isShiftKeyPressed);\n                        const normalizedSuggestItem = minimizeInlineCompletion(textModel, inlineSuggestItem === null || inlineSuggestItem === void 0 ? void 0 : inlineSuggestItem.normalizedInlineCompletion);\n                        if (!normalizedSuggestItem) {\n                            return undefined;\n                        }\n                        const valid = rangeStartsWith(normalizedItemToPreselect.range, normalizedSuggestItem.range) &&\n                            normalizedItemToPreselect.insertText.startsWith(normalizedSuggestItem.insertText);\n                        return { index, valid, prefixLength: normalizedSuggestItem.insertText.length, suggestItem };\n                    })\n                        .filter(item => item && item.valid);\n                    const result = findMaxBy(candidates, compareBy(s => s.prefixLength, numberComparator));\n                    return result ? result.index : -1;\n                }\n            }));\n            let isBoundToSuggestWidget = false;\n            const bindToSuggestWidget = () => {\n                if (isBoundToSuggestWidget) {\n                    return;\n                }\n                isBoundToSuggestWidget = true;\n                this._register(suggestController.widget.value.onDidShow(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n                this._register(suggestController.widget.value.onDidHide(() => {\n                    this.isSuggestWidgetVisible = false;\n                    this.setInactiveDelayed.schedule();\n                    this.update(this._isActive);\n                }));\n                this._register(suggestController.widget.value.onDidFocus(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n            };\n            this._register(Event.once(suggestController.model.onDidTrigger)(e => {\n                bindToSuggestWidget();\n            }));\n        }\n        this.update(this._isActive);\n    }\n    /**\n     * Returns undefined if the suggest widget is not active.\n    */\n    get state() {\n        if (!this._isActive) {\n            return undefined;\n        }\n        return { selectedItem: this._currentSuggestItemInfo };\n    }\n    update(newActive) {\n        const newInlineCompletion = this.getSuggestItemInfo();\n        let shouldFire = false;\n        if (!suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\n            this._currentSuggestItemInfo = newInlineCompletion;\n            shouldFire = true;\n        }\n        if (this._isActive !== newActive) {\n            this._isActive = newActive;\n            shouldFire = true;\n        }\n        if (shouldFire) {\n            this.onDidChangeEmitter.fire();\n        }\n    }\n    getSuggestItemInfo() {\n        const suggestController = SuggestController.get(this.editor);\n        if (!suggestController) {\n            return undefined;\n        }\n        if (!this.isSuggestWidgetVisible) {\n            return undefined;\n        }\n        const focusedItem = suggestController.widget.value.getFocusedItem();\n        if (!focusedItem) {\n            return undefined;\n        }\n        // TODO: item.isResolved\n        return suggestionToSuggestItemInfo(suggestController, this.editor.getPosition(), focusedItem.item, this.isShiftKeyPressed);\n    }\n    stopForceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            suggestController.stopForceRenderingAbove();\n        }\n    }\n    forceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            suggestController.forceRenderingAbove();\n        }\n    }\n}\nexport function rangeStartsWith(rangeToTest, prefix) {\n    return (prefix.startLineNumber === rangeToTest.startLineNumber &&\n        prefix.startColumn === rangeToTest.startColumn &&\n        (prefix.endLineNumber < rangeToTest.endLineNumber ||\n            (prefix.endLineNumber === rangeToTest.endLineNumber &&\n                prefix.endColumn <= rangeToTest.endColumn)));\n}\nfunction suggestItemInfoEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    return a.completionItemKind === b.completionItemKind &&\n        a.isSnippetText === b.isSnippetText &&\n        normalizedInlineCompletionsEquals(a.normalizedInlineCompletion, b.normalizedInlineCompletion);\n}\nfunction suggestionToSuggestItemInfo(suggestController, position, item, toggleMode) {\n    // additionalTextEdits might not be resolved here, this could be problematic.\n    if (Array.isArray(item.completion.additionalTextEdits) && item.completion.additionalTextEdits.length > 0) {\n        // cannot represent additional text edits. TODO: Now we can.\n        return {\n            completionItemKind: item.completion.kind,\n            isSnippetText: false,\n            normalizedInlineCompletion: {\n                // Dummy element, so that space is reserved, but no text is shown\n                range: Range.fromPositions(position, position),\n                insertText: '',\n                filterText: '',\n                snippetInfo: undefined,\n                additionalTextEdits: [],\n            },\n        };\n    }\n    let { insertText } = item.completion;\n    let isSnippetText = false;\n    if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */) {\n        const snippet = new SnippetParser().parse(insertText);\n        const model = suggestController.editor.getModel();\n        // Ignore snippets that are too large.\n        // Adjust whitespace is expensive for them.\n        if (snippet.children.length > 100) {\n            return undefined;\n        }\n        SnippetSession.adjustWhitespace(model, position, snippet, true, true);\n        insertText = snippet.toString();\n        isSnippetText = true;\n    }\n    const info = suggestController.getOverwriteInfo(item, toggleMode);\n    return {\n        isSnippetText,\n        completionItemKind: item.completion.kind,\n        normalizedInlineCompletion: {\n            insertText: insertText,\n            filterText: insertText,\n            range: Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0))),\n            snippetInfo: undefined,\n            additionalTextEdits: [],\n        }\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { BaseGhostTextWidgetModel, GhostText } from './ghostText.js';\nimport { provideInlineCompletions, UpdateOperation } from './inlineCompletionsModel.js';\nimport { inlineCompletionToGhostText, minimizeInlineCompletion } from './inlineCompletionToGhostText.js';\nimport { SuggestWidgetInlineCompletionProvider } from './suggestWidgetInlineCompletionProvider.js';\nlet SuggestWidgetPreviewModel = class SuggestWidgetPreviewModel extends BaseGhostTextWidgetModel {\n    constructor(editor, cache, languageFeaturesService) {\n        super(editor);\n        this.cache = cache;\n        this.languageFeaturesService = languageFeaturesService;\n        this.suggestionInlineCompletionSource = this._register(new SuggestWidgetInlineCompletionProvider(this.editor, \n        // Use the first cache item (if any) as preselection.\n        () => { var _a, _b; return (_b = (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions[0]) === null || _b === void 0 ? void 0 : _b.toLiveInlineCompletion(); }));\n        this.updateOperation = this._register(new MutableDisposable());\n        this.updateCacheSoon = this._register(new RunOnceScheduler(() => this.updateCache(), 50));\n        this.minReservedLineCount = 0;\n        this._register(this.suggestionInlineCompletionSource.onDidChange(() => {\n            if (!this.editor.hasModel()) {\n                // onDidChange might be called when calling setModel on the editor, before we are disposed.\n                return;\n            }\n            this.updateCacheSoon.schedule();\n            const suggestWidgetState = this.suggestionInlineCompletionSource.state;\n            if (!suggestWidgetState) {\n                this.minReservedLineCount = 0;\n            }\n            const newGhostText = this.ghostText;\n            if (newGhostText) {\n                this.minReservedLineCount = Math.max(this.minReservedLineCount, sum(newGhostText.parts.map(p => p.lines.length - 1)));\n            }\n            if (this.minReservedLineCount >= 1) {\n                this.suggestionInlineCompletionSource.forceRenderingAbove();\n            }\n            else {\n                this.suggestionInlineCompletionSource.stopForceRenderingAbove();\n            }\n            this.onDidChangeEmitter.fire();\n        }));\n        this._register(this.cache.onDidChange(() => {\n            this.onDidChangeEmitter.fire();\n        }));\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\n            this.minReservedLineCount = 0;\n            this.updateCacheSoon.schedule();\n            this.onDidChangeEmitter.fire();\n        }));\n        this._register(toDisposable(() => this.suggestionInlineCompletionSource.stopForceRenderingAbove()));\n    }\n    get isActive() {\n        return this.suggestionInlineCompletionSource.state !== undefined;\n    }\n    isSuggestionPreviewEnabled() {\n        const suggestOptions = this.editor.getOption(108 /* EditorOption.suggest */);\n        return suggestOptions.preview;\n    }\n    updateCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const state = this.suggestionInlineCompletionSource.state;\n            if (!state || !state.selectedItem) {\n                return;\n            }\n            const info = {\n                text: state.selectedItem.normalizedInlineCompletion.insertText,\n                range: state.selectedItem.normalizedInlineCompletion.range,\n                isSnippetText: state.selectedItem.isSnippetText,\n                completionKind: state.selectedItem.completionItemKind,\n            };\n            const position = this.editor.getPosition();\n            if (state.selectedItem.isSnippetText ||\n                state.selectedItem.completionItemKind === 27 /* CompletionItemKind.Snippet */ ||\n                state.selectedItem.completionItemKind === 20 /* CompletionItemKind.File */ ||\n                state.selectedItem.completionItemKind === 23 /* CompletionItemKind.Folder */) {\n                // Don't ask providers for these types of suggestions.\n                this.cache.clear();\n                return;\n            }\n            const promise = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                let result;\n                try {\n                    result = yield provideInlineCompletions(this.languageFeaturesService.inlineCompletionsProvider, position, this.editor.getModel(), { triggerKind: InlineCompletionTriggerKind.Automatic, selectedSuggestionInfo: info }, token);\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                    return;\n                }\n                if (token.isCancellationRequested) {\n                    result.dispose();\n                    return;\n                }\n                this.cache.setValue(this.editor, result, InlineCompletionTriggerKind.Automatic);\n                this.onDidChangeEmitter.fire();\n            }));\n            const operation = new UpdateOperation(promise, InlineCompletionTriggerKind.Automatic);\n            this.updateOperation.value = operation;\n            yield promise;\n            if (this.updateOperation.value === operation) {\n                this.updateOperation.clear();\n            }\n        });\n    }\n    get ghostText() {\n        var _a, _b, _c;\n        const isSuggestionPreviewEnabled = this.isSuggestionPreviewEnabled();\n        const model = this.editor.getModel();\n        const augmentedCompletion = minimizeInlineCompletion(model, (_b = (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions[0]) === null || _b === void 0 ? void 0 : _b.toLiveInlineCompletion());\n        const suggestWidgetState = this.suggestionInlineCompletionSource.state;\n        const suggestInlineCompletion = minimizeInlineCompletion(model, (_c = suggestWidgetState === null || suggestWidgetState === void 0 ? void 0 : suggestWidgetState.selectedItem) === null || _c === void 0 ? void 0 : _c.normalizedInlineCompletion);\n        const isAugmentedCompletionValid = augmentedCompletion\n            && suggestInlineCompletion\n            && augmentedCompletion.insertText.startsWith(suggestInlineCompletion.insertText)\n            && augmentedCompletion.range.equalsRange(suggestInlineCompletion.range);\n        if (!isSuggestionPreviewEnabled && !isAugmentedCompletionValid) {\n            return undefined;\n        }\n        // If the augmented completion is not valid and there is no suggest inline completion, we still show the augmented completion.\n        const finalCompletion = isAugmentedCompletionValid ? augmentedCompletion : (suggestInlineCompletion || augmentedCompletion);\n        const inlineCompletionPreviewLength = isAugmentedCompletionValid ? finalCompletion.insertText.length - suggestInlineCompletion.insertText.length : 0;\n        const newGhostText = this.toGhostText(finalCompletion, inlineCompletionPreviewLength);\n        return newGhostText;\n    }\n    toGhostText(completion, inlineCompletionPreviewLength) {\n        const mode = this.editor.getOptions().get(108 /* EditorOption.suggest */).previewMode;\n        return completion\n            ? (inlineCompletionToGhostText(completion, this.editor.getModel(), mode, this.editor.getPosition(), inlineCompletionPreviewLength) ||\n                // Show an invisible ghost text to reserve space\n                new GhostText(completion.range.endLineNumber, [], this.minReservedLineCount))\n            : undefined;\n    }\n};\nSuggestWidgetPreviewModel = __decorate([\n    __param(2, ILanguageFeaturesService)\n], SuggestWidgetPreviewModel);\nexport { SuggestWidgetPreviewModel };\nfunction sum(arr) {\n    return arr.reduce((a, b) => a + b, 0);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { InlineCompletionsModel, SynchronizedInlineCompletionsCache } from './inlineCompletionsModel.js';\nimport { SuggestWidgetPreviewModel } from './suggestWidgetPreviewModel.js';\nimport { createDisposableRef } from './utils.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nexport class DelegatingModel extends Disposable {\n    constructor() {\n        super(...arguments);\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.hasCachedGhostText = false;\n        this.currentModelRef = this._register(new MutableDisposable());\n    }\n    get targetModel() {\n        var _a;\n        return (_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object;\n    }\n    setTargetModel(model) {\n        var _a;\n        if (((_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object) === model) {\n            return;\n        }\n        this.currentModelRef.clear();\n        this.currentModelRef.value = model ? createDisposableRef(model, model.onDidChange(() => {\n            this.hasCachedGhostText = false;\n            this.onDidChangeEmitter.fire();\n        })) : undefined;\n        this.hasCachedGhostText = false;\n        this.onDidChangeEmitter.fire();\n    }\n    get ghostText() {\n        var _a, _b;\n        if (!this.hasCachedGhostText) {\n            this.cachedGhostText = (_b = (_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object) === null || _b === void 0 ? void 0 : _b.ghostText;\n            this.hasCachedGhostText = true;\n        }\n        return this.cachedGhostText;\n    }\n    setExpanded(expanded) {\n        var _a;\n        (_a = this.targetModel) === null || _a === void 0 ? void 0 : _a.setExpanded(expanded);\n    }\n    get minReservedLineCount() {\n        return this.targetModel ? this.targetModel.minReservedLineCount : 0;\n    }\n}\n/**\n * A ghost text model that is both driven by inline completions and the suggest widget.\n*/\nlet GhostTextModel = class GhostTextModel extends DelegatingModel {\n    constructor(editor, instantiationService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.sharedCache = this._register(new SharedInlineCompletionCache());\n        this.suggestWidgetAdapterModel = this._register(this.instantiationService.createInstance(SuggestWidgetPreviewModel, this.editor, this.sharedCache));\n        this.inlineCompletionsModel = this._register(this.instantiationService.createInstance(InlineCompletionsModel, this.editor, this.sharedCache));\n        this._register(this.suggestWidgetAdapterModel.onDidChange(() => {\n            this.updateModel();\n        }));\n        this.updateModel();\n    }\n    get activeInlineCompletionsModel() {\n        if (this.targetModel === this.inlineCompletionsModel) {\n            return this.inlineCompletionsModel;\n        }\n        return undefined;\n    }\n    updateModel() {\n        this.setTargetModel(this.suggestWidgetAdapterModel.isActive\n            ? this.suggestWidgetAdapterModel\n            : this.inlineCompletionsModel);\n        this.inlineCompletionsModel.setActive(this.targetModel === this.inlineCompletionsModel);\n    }\n    shouldShowHoverAt(hoverRange) {\n        var _a;\n        const ghostText = (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.ghostText;\n        if (ghostText) {\n            return ghostText.parts.some(p => hoverRange.containsPosition(new Position(ghostText.lineNumber, p.column)));\n        }\n        return false;\n    }\n    triggerInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.trigger(InlineCompletionTriggerKind.Explicit);\n    }\n    commitInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.commitCurrentSuggestion();\n    }\n    hideInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.hide();\n    }\n    showNextInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.showNext();\n    }\n    showPreviousInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.showPrevious();\n    }\n    hasMultipleInlineCompletions() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield ((_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\n            return result !== undefined ? result : false;\n        });\n    }\n};\nGhostTextModel = __decorate([\n    __param(1, IInstantiationService)\n], GhostTextModel);\nexport { GhostTextModel };\nexport class SharedInlineCompletionCache extends Disposable {\n    constructor() {\n        super(...arguments);\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.cache = this._register(new MutableDisposable());\n    }\n    get value() {\n        return this.cache.value;\n    }\n    setValue(editor, completionsSource, triggerKind) {\n        this.cache.value = new SynchronizedInlineCompletionsCache(completionsSource, editor, () => this.onDidChangeEmitter.fire(), triggerKind);\n    }\n    clearAndLeak() {\n        return this.cache.clearAndLeak();\n    }\n    clear() {\n        this.cache.clear();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar _a;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './ghostText.css';\nimport { applyFontInfo } from '../../../browser/config/domFontInfo.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nimport { LineTokens } from '../../../common/tokens/lineTokens.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { createStringBuilder } from '../../../common/core/stringBuilder.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { ghostTextBackground, ghostTextBorder, ghostTextForeground } from '../../../common/core/editorColorRegistry.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { GhostTextReplacement } from './ghostText.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('editorGhostText', { createHTML: value => value });\nlet GhostTextWidget = class GhostTextWidget extends Disposable {\n    constructor(editor, model, instantiationService, languageService) {\n        super();\n        this.editor = editor;\n        this.model = model;\n        this.instantiationService = instantiationService;\n        this.languageService = languageService;\n        this.disposed = false;\n        this.partsWidget = this._register(this.instantiationService.createInstance(DecorationsWidget, this.editor));\n        this.additionalLinesWidget = this._register(new AdditionalLinesWidget(this.editor, this.languageService.languageIdCodec));\n        this.viewMoreContentWidget = undefined;\n        this.replacementDecoration = this._register(new DisposableDecorations(this.editor));\n        this._register(this.editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(29 /* EditorOption.disableMonospaceOptimizations */)\n                || e.hasChanged(107 /* EditorOption.stopRenderingLineAfter */)\n                || e.hasChanged(90 /* EditorOption.renderWhitespace */)\n                || e.hasChanged(85 /* EditorOption.renderControlCharacters */)\n                || e.hasChanged(47 /* EditorOption.fontLigatures */)\n                || e.hasChanged(46 /* EditorOption.fontInfo */)\n                || e.hasChanged(61 /* EditorOption.lineHeight */)) {\n                this.update();\n            }\n        }));\n        this._register(toDisposable(() => {\n            var _a;\n            this.disposed = true;\n            this.update();\n            (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.viewMoreContentWidget = undefined;\n        }));\n        this._register(model.onDidChange(() => {\n            this.update();\n        }));\n        this.update();\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        return (this.additionalLinesWidget.viewZoneId === viewZoneId);\n    }\n    update() {\n        var _a;\n        const ghostText = this.model.ghostText;\n        if (!this.editor.hasModel() || !ghostText || this.disposed) {\n            this.partsWidget.clear();\n            this.additionalLinesWidget.clear();\n            this.replacementDecoration.clear();\n            return;\n        }\n        const inlineTexts = new Array();\n        const additionalLines = new Array();\n        function addToAdditionalLines(lines, className) {\n            if (additionalLines.length > 0) {\n                const lastLine = additionalLines[additionalLines.length - 1];\n                if (className) {\n                    lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* InlineDecorationType.Regular */));\n                }\n                lastLine.content += lines[0];\n                lines = lines.slice(1);\n            }\n            for (const line of lines) {\n                additionalLines.push({\n                    content: line,\n                    decorations: className ? [new LineDecoration(1, line.length + 1, className, 0 /* InlineDecorationType.Regular */)] : []\n                });\n            }\n        }\n        if (ghostText instanceof GhostTextReplacement) {\n            this.replacementDecoration.setDecorations([\n                {\n                    range: new Range(ghostText.lineNumber, ghostText.columnStart, ghostText.lineNumber, ghostText.columnStart + ghostText.length),\n                    options: {\n                        inlineClassName: 'inline-completion-text-to-replace',\n                        description: 'GhostTextReplacement'\n                    }\n                },\n            ]);\n        }\n        else {\n            this.replacementDecoration.setDecorations([]);\n        }\n        const textBufferLine = this.editor.getModel().getLineContent(ghostText.lineNumber);\n        let hiddenTextStartColumn = undefined;\n        let lastIdx = 0;\n        for (const part of ghostText.parts) {\n            let lines = part.lines;\n            if (hiddenTextStartColumn === undefined) {\n                inlineTexts.push({\n                    column: part.column,\n                    text: lines[0],\n                    preview: part.preview,\n                });\n                lines = lines.slice(1);\n            }\n            else {\n                addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\n            }\n            if (lines.length > 0) {\n                addToAdditionalLines(lines, 'ghost-text');\n                if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\n                    hiddenTextStartColumn = part.column;\n                }\n            }\n            lastIdx = part.column - 1;\n        }\n        if (hiddenTextStartColumn !== undefined) {\n            addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\n        }\n        this.partsWidget.setParts(ghostText.lineNumber, inlineTexts, hiddenTextStartColumn !== undefined ? { column: hiddenTextStartColumn, length: textBufferLine.length + 1 - hiddenTextStartColumn } : undefined);\n        this.additionalLinesWidget.updateLines(ghostText.lineNumber, additionalLines, ghostText.additionalReservedLineCount);\n        if (0 < 0) {\n            // Not supported at the moment, condition is always false.\n            this.viewMoreContentWidget = this.renderViewMoreLines(new Position(ghostText.lineNumber, this.editor.getModel().getLineMaxColumn(ghostText.lineNumber)), '', 0);\n        }\n        else {\n            (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.viewMoreContentWidget = undefined;\n        }\n    }\n    renderViewMoreLines(position, firstLineText, remainingLinesLength) {\n        const fontInfo = this.editor.getOption(46 /* EditorOption.fontInfo */);\n        const domNode = document.createElement('div');\n        domNode.className = 'suggest-preview-additional-widget';\n        applyFontInfo(domNode, fontInfo);\n        const spacer = document.createElement('span');\n        spacer.className = 'content-spacer';\n        spacer.append(firstLineText);\n        domNode.append(spacer);\n        const newline = document.createElement('span');\n        newline.className = 'content-newline suggest-preview-text';\n        newline.append('⏎  ');\n        domNode.append(newline);\n        const disposableStore = new DisposableStore();\n        const button = document.createElement('div');\n        button.className = 'button suggest-preview-text';\n        button.append(`+${remainingLinesLength} lines…`);\n        disposableStore.add(dom.addStandardDisposableListener(button, 'mousedown', (e) => {\n            var _a;\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.setExpanded(true);\n            e.preventDefault();\n            this.editor.focus();\n        }));\n        domNode.append(button);\n        return new ViewMoreLinesContentWidget(this.editor, position, domNode, disposableStore);\n    }\n};\nGhostTextWidget = __decorate([\n    __param(2, IInstantiationService),\n    __param(3, ILanguageService)\n], GhostTextWidget);\nexport { GhostTextWidget };\nclass DisposableDecorations {\n    constructor(editor) {\n        this.editor = editor;\n        this.decorationIds = [];\n    }\n    setDecorations(decorations) {\n        // Using change decorations ensures that we update the id's before some event handler is called.\n        this.editor.changeDecorations(accessor => {\n            this.decorationIds = accessor.deltaDecorations(this.decorationIds, decorations);\n        });\n    }\n    clear() {\n        this.setDecorations([]);\n    }\n    dispose() {\n        this.clear();\n    }\n}\nclass DecorationsWidget {\n    constructor(editor) {\n        this.editor = editor;\n        this.decorationIds = [];\n    }\n    dispose() {\n        this.clear();\n    }\n    clear() {\n        // Using change decorations ensures that we update the id's before some event handler is called.\n        this.editor.changeDecorations(accessor => {\n            this.decorationIds = accessor.deltaDecorations(this.decorationIds, []);\n        });\n    }\n    setParts(lineNumber, parts, hiddenText) {\n        const textModel = this.editor.getModel();\n        if (!textModel) {\n            return;\n        }\n        const hiddenTextDecorations = new Array();\n        if (hiddenText) {\n            hiddenTextDecorations.push({\n                range: Range.fromPositions(new Position(lineNumber, hiddenText.column), new Position(lineNumber, hiddenText.column + hiddenText.length)),\n                options: {\n                    inlineClassName: 'ghost-text-hidden',\n                    description: 'ghost-text-hidden',\n                }\n            });\n        }\n        // Using change decorations ensures that we update the id's before some event handler is called.\n        this.editor.changeDecorations(accessor => {\n            this.decorationIds = accessor.deltaDecorations(this.decorationIds, parts.map(p => {\n                return ({\n                    range: Range.fromPositions(new Position(lineNumber, p.column)),\n                    options: {\n                        description: 'ghost-text',\n                        after: { content: p.text, inlineClassName: p.preview ? 'ghost-text-decoration-preview' : 'ghost-text-decoration', cursorStops: InjectedTextCursorStops.Left },\n                        showIfCollapsed: true,\n                    }\n                });\n            }).concat(hiddenTextDecorations));\n        });\n    }\n}\nclass AdditionalLinesWidget {\n    constructor(editor, languageIdCodec) {\n        this.editor = editor;\n        this.languageIdCodec = languageIdCodec;\n        this._viewZoneId = undefined;\n    }\n    get viewZoneId() { return this._viewZoneId; }\n    dispose() {\n        this.clear();\n    }\n    clear() {\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n        });\n    }\n    updateLines(lineNumber, additionalLines, minReservedLineCount) {\n        const textModel = this.editor.getModel();\n        if (!textModel) {\n            return;\n        }\n        const { tabSize } = textModel.getOptions();\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n            const heightInLines = Math.max(additionalLines.length, minReservedLineCount);\n            if (heightInLines > 0) {\n                const domNode = document.createElement('div');\n                renderLines(domNode, tabSize, additionalLines, this.editor.getOptions(), this.languageIdCodec);\n                this._viewZoneId = changeAccessor.addZone({\n                    afterLineNumber: lineNumber,\n                    heightInLines: heightInLines,\n                    domNode,\n                    afterColumnAffinity: 1 /* PositionAffinity.Right */\n                });\n            }\n        });\n    }\n}\nfunction renderLines(domNode, tabSize, lines, opts, languageIdCodec) {\n    const disableMonospaceOptimizations = opts.get(29 /* EditorOption.disableMonospaceOptimizations */);\n    const stopRenderingLineAfter = opts.get(107 /* EditorOption.stopRenderingLineAfter */);\n    // To avoid visual confusion, we don't want to render visible whitespace\n    const renderWhitespace = 'none';\n    const renderControlCharacters = opts.get(85 /* EditorOption.renderControlCharacters */);\n    const fontLigatures = opts.get(47 /* EditorOption.fontLigatures */);\n    const fontInfo = opts.get(46 /* EditorOption.fontInfo */);\n    const lineHeight = opts.get(61 /* EditorOption.lineHeight */);\n    const sb = createStringBuilder(10000);\n    sb.appendASCIIString('<div class=\"suggest-preview-text\">');\n    for (let i = 0, len = lines.length; i < len; i++) {\n        const lineData = lines[i];\n        const line = lineData.content;\n        sb.appendASCIIString('<div class=\"view-line');\n        sb.appendASCIIString('\" style=\"top:');\n        sb.appendASCIIString(String(i * lineHeight));\n        sb.appendASCIIString('px;width:1000000px;\">');\n        const isBasicASCII = strings.isBasicASCII(line);\n        const containsRTL = strings.containsRTL(line);\n        const lineTokens = LineTokens.createEmpty(line, languageIdCodec);\n        renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, line, false, isBasicASCII, containsRTL, 0, lineTokens, lineData.decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null), sb);\n        sb.appendASCIIString('</div>');\n    }\n    sb.appendASCIIString('</div>');\n    applyFontInfo(domNode, fontInfo);\n    const html = sb.build();\n    const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n    domNode.innerHTML = trustedhtml;\n}\nclass ViewMoreLinesContentWidget extends Disposable {\n    constructor(editor, position, domNode, disposableStore) {\n        super();\n        this.editor = editor;\n        this.position = position;\n        this.domNode = domNode;\n        this.allowEditorOverflow = false;\n        this.suppressMouseDown = false;\n        this._register(disposableStore);\n        this._register(toDisposable(() => {\n            this.editor.removeContentWidget(this);\n        }));\n        this.editor.addContentWidget(this);\n    }\n    getId() {\n        return 'editor.widget.viewMoreLinesWidget';\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    getPosition() {\n        return {\n            position: this.position,\n            preference: [0 /* ContentWidgetPositionPreference.EXACT */]\n        };\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const foreground = theme.getColor(ghostTextForeground);\n    if (foreground) {\n        // `!important` ensures that other decorations don't cause a style conflict (#132017).\n        collector.addRule(`.monaco-editor .ghost-text-decoration { color: ${foreground.toString()} !important; }`);\n        collector.addRule(`.monaco-editor .ghost-text-decoration-preview { color: ${foreground.toString()} !important; }`);\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { color: ${foreground.toString()} !important; }`);\n    }\n    const background = theme.getColor(ghostTextBackground);\n    if (background) {\n        collector.addRule(`.monaco-editor .ghost-text-decoration { background-color: ${background.toString()}; }`);\n        collector.addRule(`.monaco-editor .ghost-text-decoration-preview { background-color: ${background.toString()}; }`);\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { background-color: ${background.toString()}; }`);\n    }\n    const border = theme.getColor(ghostTextBorder);\n    if (border) {\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { border: 1px solid ${border}; }`);\n        collector.addRule(`.monaco-editor .ghost-text-decoration { border: 1px solid ${border}; }`);\n        collector.addRule(`.monaco-editor .ghost-text-decoration-preview { border: 1px solid ${border}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { firstNonWhitespaceIndex } from '../../../../base/common/strings.js';\nimport { EditorAction } from '../../../browser/editorExtensions.js';\nimport { CursorColumns } from '../../../common/core/cursorColumns.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { GhostTextModel } from './ghostTextModel.js';\nimport { GhostTextWidget } from './ghostTextWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nlet GhostTextController = class GhostTextController extends Disposable {\n    constructor(editor, instantiationService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.triggeredExplicitly = false;\n        this.activeController = this._register(new MutableDisposable());\n        this.activeModelDidChangeEmitter = this._register(new Emitter());\n        this._register(this.editor.onDidChangeModel(() => {\n            this.updateModelController();\n        }));\n        this._register(this.editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(108 /* EditorOption.suggest */)) {\n                this.updateModelController();\n            }\n            if (e.hasChanged(57 /* EditorOption.inlineSuggest */)) {\n                this.updateModelController();\n            }\n        }));\n        this.updateModelController();\n    }\n    static get(editor) {\n        return editor.getContribution(GhostTextController.ID);\n    }\n    get activeModel() {\n        var _a;\n        return (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.model;\n    }\n    // Don't call this method when not necessary. It will recreate the activeController.\n    updateModelController() {\n        const suggestOptions = this.editor.getOption(108 /* EditorOption.suggest */);\n        const inlineSuggestOptions = this.editor.getOption(57 /* EditorOption.inlineSuggest */);\n        this.activeController.value = undefined;\n        // ActiveGhostTextController is only created if one of those settings is set or if the inline completions are triggered explicitly.\n        this.activeController.value =\n            this.editor.hasModel() && (suggestOptions.preview || inlineSuggestOptions.enabled || this.triggeredExplicitly)\n                ? this.instantiationService.createInstance(ActiveGhostTextController, this.editor)\n                : undefined;\n        this.activeModelDidChangeEmitter.fire();\n    }\n    shouldShowHoverAt(hoverRange) {\n        var _a;\n        return ((_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.shouldShowHoverAt(hoverRange)) || false;\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        var _a, _b;\n        return ((_b = (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.widget) === null || _b === void 0 ? void 0 : _b.shouldShowHoverAtViewZone(viewZoneId)) || false;\n    }\n    trigger() {\n        var _a;\n        this.triggeredExplicitly = true;\n        if (!this.activeController.value) {\n            this.updateModelController();\n        }\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.triggerInlineCompletion();\n    }\n    commit() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.commitInlineCompletion();\n    }\n    hide() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.hideInlineCompletion();\n    }\n    showNextInlineCompletion() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.showNextInlineCompletion();\n    }\n    showPreviousInlineCompletion() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.showPreviousInlineCompletion();\n    }\n    hasMultipleInlineCompletions() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield ((_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\n            return result !== undefined ? result : false;\n        });\n    }\n};\nGhostTextController.inlineSuggestionVisible = new RawContextKey('inlineSuggestionVisible', false, nls.localize('inlineSuggestionVisible', \"Whether an inline suggestion is visible\"));\nGhostTextController.inlineSuggestionHasIndentation = new RawContextKey('inlineSuggestionHasIndentation', false, nls.localize('inlineSuggestionHasIndentation', \"Whether the inline suggestion starts with whitespace\"));\nGhostTextController.inlineSuggestionHasIndentationLessThanTabSize = new RawContextKey('inlineSuggestionHasIndentationLessThanTabSize', true, nls.localize('inlineSuggestionHasIndentationLessThanTabSize', \"Whether the inline suggestion starts with whitespace that is less than what would be inserted by tab\"));\nGhostTextController.ID = 'editor.contrib.ghostTextController';\nGhostTextController = __decorate([\n    __param(1, IInstantiationService)\n], GhostTextController);\nexport { GhostTextController };\nclass GhostTextContextKeys {\n    constructor(contextKeyService) {\n        this.contextKeyService = contextKeyService;\n        this.inlineCompletionVisible = GhostTextController.inlineSuggestionVisible.bindTo(this.contextKeyService);\n        this.inlineCompletionSuggestsIndentation = GhostTextController.inlineSuggestionHasIndentation.bindTo(this.contextKeyService);\n        this.inlineCompletionSuggestsIndentationLessThanTabSize = GhostTextController.inlineSuggestionHasIndentationLessThanTabSize.bindTo(this.contextKeyService);\n    }\n}\n/**\n * The controller for a text editor with an initialized text model.\n * Must be disposed as soon as the model detaches from the editor.\n*/\nlet ActiveGhostTextController = class ActiveGhostTextController extends Disposable {\n    constructor(editor, instantiationService, contextKeyService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.contextKeys = new GhostTextContextKeys(this.contextKeyService);\n        this.model = this._register(this.instantiationService.createInstance(GhostTextModel, this.editor));\n        this.widget = this._register(this.instantiationService.createInstance(GhostTextWidget, this.editor, this.model));\n        this._register(toDisposable(() => {\n            this.contextKeys.inlineCompletionVisible.set(false);\n            this.contextKeys.inlineCompletionSuggestsIndentation.set(false);\n            this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(true);\n        }));\n        this._register(this.model.onDidChange(() => {\n            this.updateContextKeys();\n        }));\n        this.updateContextKeys();\n    }\n    updateContextKeys() {\n        var _a;\n        this.contextKeys.inlineCompletionVisible.set(((_a = this.model.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.ghostText) !== undefined);\n        let startsWithIndentation = false;\n        let startsWithIndentationLessThanTabSize = true;\n        const ghostText = this.model.inlineCompletionsModel.ghostText;\n        if (!!this.model.activeInlineCompletionsModel && ghostText && ghostText.parts.length > 0) {\n            const { column, lines } = ghostText.parts[0];\n            const firstLine = lines[0];\n            const indentationEndColumn = this.editor.getModel().getLineIndentColumn(ghostText.lineNumber);\n            const inIndentation = column <= indentationEndColumn;\n            if (inIndentation) {\n                let firstNonWsIdx = firstNonWhitespaceIndex(firstLine);\n                if (firstNonWsIdx === -1) {\n                    firstNonWsIdx = firstLine.length - 1;\n                }\n                startsWithIndentation = firstNonWsIdx > 0;\n                const tabSize = this.editor.getModel().getOptions().tabSize;\n                const visibleColumnIndentation = CursorColumns.visibleColumnFromColumn(firstLine, firstNonWsIdx + 1, tabSize);\n                startsWithIndentationLessThanTabSize = visibleColumnIndentation < tabSize;\n            }\n        }\n        this.contextKeys.inlineCompletionSuggestsIndentation.set(startsWithIndentation);\n        this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(startsWithIndentationLessThanTabSize);\n    }\n};\nActiveGhostTextController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IContextKeyService)\n], ActiveGhostTextController);\nexport { ActiveGhostTextController };\nexport class ShowNextInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: ShowNextInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showNext', \"Show Next Inline Suggestion\"),\n            alias: 'Show Next Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* KeyMod.Alt */ | 89 /* KeyCode.BracketRight */,\n            },\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            if (controller) {\n                controller.showNextInlineCompletion();\n                editor.focus();\n            }\n        });\n    }\n}\nShowNextInlineSuggestionAction.ID = 'editor.action.inlineSuggest.showNext';\nexport class ShowPreviousInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: ShowPreviousInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showPrevious', \"Show Previous Inline Suggestion\"),\n            alias: 'Show Previous Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* KeyMod.Alt */ | 87 /* KeyCode.BracketLeft */,\n            },\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            if (controller) {\n                controller.showPreviousInlineCompletion();\n                editor.focus();\n            }\n        });\n    }\n}\nShowPreviousInlineSuggestionAction.ID = 'editor.action.inlineSuggest.showPrevious';\nexport class TriggerInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.trigger',\n            label: nls.localize('action.inlineSuggest.trigger', \"Trigger Inline Suggestion\"),\n            alias: 'Trigger Inline Suggestion',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            if (controller) {\n                controller.trigger();\n            }\n        });\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { GhostTextController, ShowNextInlineSuggestionAction, ShowPreviousInlineSuggestionAction } from './ghostTextController.js';\nimport * as nls from '../../../../nls.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { IMenuService, MenuId, MenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { inlineSuggestCommitId } from './consts.js';\nexport class InlineCompletionsHover {\n    constructor(owner, range, controller) {\n        this.owner = owner;\n        this.range = range;\n        this.controller = controller;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n    hasMultipleSuggestions() {\n        return this.controller.hasMultipleInlineCompletions();\n    }\n    get commands() {\n        var _a, _b, _c;\n        return ((_c = (_b = (_a = this.controller.activeModel) === null || _a === void 0 ? void 0 : _a.activeInlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.completionSession.value) === null || _c === void 0 ? void 0 : _c.commands) || [];\n    }\n}\nlet InlineCompletionsHoverParticipant = class InlineCompletionsHoverParticipant {\n    constructor(_editor, _commandService, _menuService, _contextKeyService, _languageService, _openerService, accessibilityService) {\n        this._editor = _editor;\n        this._commandService = _commandService;\n        this._menuService = _menuService;\n        this._contextKeyService = _contextKeyService;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this.accessibilityService = accessibilityService;\n        this.hoverOrdinal = 3;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        const controller = GhostTextController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        const target = mouseEvent.target;\n        if (target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */) {\n            // handle the case where the mouse is over the view zone\n            const viewZoneData = target.detail;\n            if (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) {\n                return new HoverForeignElementAnchor(1000, this, Range.fromPositions(viewZoneData.positionBefore || viewZoneData.position, viewZoneData.positionBefore || viewZoneData.position));\n            }\n        }\n        if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            // handle the case where the mouse is over the empty portion of a line following ghost text\n            if (controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range);\n            }\n        }\n        if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            // handle the case where the mouse is directly over ghost text\n            const mightBeForeignElement = target.detail.mightBeForeignElement;\n            if (mightBeForeignElement && controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range);\n            }\n        }\n        return null;\n    }\n    computeSync(anchor, lineDecorations) {\n        const controller = GhostTextController.get(this._editor);\n        if (controller && controller.shouldShowHoverAt(anchor.range)) {\n            return [new InlineCompletionsHover(this, anchor.range, controller)];\n        }\n        return [];\n    }\n    renderHoverParts(context, hoverParts) {\n        const disposableStore = new DisposableStore();\n        const part = hoverParts[0];\n        if (this.accessibilityService.isScreenReaderOptimized()) {\n            this.renderScreenReaderText(context, part, disposableStore);\n        }\n        // TODO@hediet: deprecate MenuId.InlineCompletionsActions\n        const menu = disposableStore.add(this._menuService.createMenu(MenuId.InlineCompletionsActions, this._contextKeyService));\n        const previousAction = context.statusBar.addAction({\n            label: nls.localize('showNextInlineSuggestion', \"Next\"),\n            commandId: ShowNextInlineSuggestionAction.ID,\n            run: () => this._commandService.executeCommand(ShowNextInlineSuggestionAction.ID)\n        });\n        const nextAction = context.statusBar.addAction({\n            label: nls.localize('showPreviousInlineSuggestion', \"Previous\"),\n            commandId: ShowPreviousInlineSuggestionAction.ID,\n            run: () => this._commandService.executeCommand(ShowPreviousInlineSuggestionAction.ID)\n        });\n        context.statusBar.addAction({\n            label: nls.localize('acceptInlineSuggestion', \"Accept\"),\n            commandId: inlineSuggestCommitId,\n            run: () => this._commandService.executeCommand(inlineSuggestCommitId)\n        });\n        const actions = [previousAction, nextAction];\n        for (const action of actions) {\n            action.setEnabled(false);\n        }\n        part.hasMultipleSuggestions().then(hasMore => {\n            for (const action of actions) {\n                action.setEnabled(hasMore);\n            }\n        });\n        for (const command of part.commands) {\n            context.statusBar.addAction({\n                label: command.title,\n                commandId: command.id,\n                run: () => this._commandService.executeCommand(command.id, ...(command.arguments || []))\n            });\n        }\n        for (const [_, group] of menu.getActions()) {\n            for (const action of group) {\n                if (action instanceof MenuItemAction) {\n                    context.statusBar.addAction({\n                        label: action.label,\n                        commandId: action.item.id,\n                        run: () => this._commandService.executeCommand(action.item.id)\n                    });\n                }\n            }\n        }\n        return disposableStore;\n    }\n    renderScreenReaderText(context, part, disposableStore) {\n        var _a, _b;\n        const $ = dom.$;\n        const markdownHoverElement = $('div.hover-row.markdown-hover');\n        const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n        const renderer = disposableStore.add(new MarkdownRenderer({ editor: this._editor }, this._languageService, this._openerService));\n        const render = (code) => {\n            disposableStore.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const inlineSuggestionAvailable = nls.localize('inlineSuggestionFollows', \"Suggestion:\");\n            const renderedContents = disposableStore.add(renderer.render(new MarkdownString().appendText(inlineSuggestionAvailable).appendCodeblock('text', code)));\n            hoverContentsElement.replaceChildren(renderedContents.element);\n        };\n        const ghostText = (_b = (_a = part.controller.activeModel) === null || _a === void 0 ? void 0 : _a.inlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.ghostText;\n        if (ghostText) {\n            const lineText = this._editor.getModel().getLineContent(ghostText.lineNumber);\n            render(ghostText.renderForScreenReader(lineText));\n        }\n        context.fragment.appendChild(markdownHoverElement);\n    }\n};\nInlineCompletionsHoverParticipant = __decorate([\n    __param(1, ICommandService),\n    __param(2, IMenuService),\n    __param(3, IContextKeyService),\n    __param(4, ILanguageService),\n    __param(5, IOpenerService),\n    __param(6, IAccessibilityService)\n], InlineCompletionsHoverParticipant);\nexport { InlineCompletionsHoverParticipant };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { inlineSuggestCommitId } from './consts.js';\nimport { GhostTextController, ShowNextInlineSuggestionAction, ShowPreviousInlineSuggestionAction, TriggerInlineSuggestionAction } from './ghostTextController.js';\nimport { InlineCompletionsHoverParticipant } from './ghostTextHoverParticipant.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { KeybindingsRegistry } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nregisterEditorContribution(GhostTextController.ID, GhostTextController);\nregisterEditorAction(TriggerInlineSuggestionAction);\nregisterEditorAction(ShowNextInlineSuggestionAction);\nregisterEditorAction(ShowPreviousInlineSuggestionAction);\nHoverParticipantRegistry.register(InlineCompletionsHoverParticipant);\nconst GhostTextCommand = EditorCommand.bindToContribution(GhostTextController.get);\nexport const commitInlineSuggestionAction = new GhostTextCommand({\n    id: inlineSuggestCommitId,\n    precondition: GhostTextController.inlineSuggestionVisible,\n    handler(x) {\n        x.commit();\n        x.editor.focus();\n    }\n});\nregisterEditorCommand(commitInlineSuggestionAction);\nKeybindingsRegistry.registerKeybindingRule({\n    primary: 2 /* KeyCode.Tab */,\n    weight: 200,\n    id: commitInlineSuggestionAction.id,\n    when: ContextKeyExpr.and(commitInlineSuggestionAction.precondition, EditorContextKeys.tabMovesFocus.toNegated(), GhostTextController.inlineSuggestionHasIndentationLessThanTabSize),\n});\nregisterEditorCommand(new GhostTextCommand({\n    id: 'editor.action.inlineSuggest.hide',\n    precondition: GhostTextController.inlineSuggestionVisible,\n    kbOpts: {\n        weight: 100,\n        primary: 9 /* KeyCode.Escape */,\n    },\n    handler(x) {\n        x.hide();\n    }\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { CursorMoveCommands } from '../../../common/cursor/cursorMoveCommands.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nexport class ExpandLineSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'expandLineSelection',\n            label: nls.localize('expandLineSelection', \"Expand Line Selection\"),\n            alias: 'Expand Line Selection',\n            precondition: undefined,\n            kbOpts: {\n                weight: 0 /* KeybindingWeight.EditorCore */,\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 42 /* KeyCode.KeyL */\n            },\n        });\n    }\n    run(_accessor, editor, args) {\n        args = args || {};\n        if (!editor.hasModel()) {\n            return;\n        }\n        const viewModel = editor._getViewModel();\n        viewModel.model.pushStackElement();\n        viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.expandLineSelection(viewModel, viewModel.getCursorStates()));\n        viewModel.revealPrimaryCursor(args.source, true);\n    }\n}\nregisterEditorAction(ExpandLineSelectionAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class CopyLinesCommand {\n    constructor(selection, isCopyingDown, noop) {\n        this._selection = selection;\n        this._isCopyingDown = isCopyingDown;\n        this._noop = noop || false;\n        this._selectionDirection = 0 /* SelectionDirection.LTR */;\n        this._selectionId = null;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n    }\n    getEditOperations(model, builder) {\n        let s = this._selection;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._endLineNumberDelta = 1;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const sourceLines = [];\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            sourceLines.push(model.getLineContent(i));\n        }\n        const sourceText = sourceLines.join('\\n');\n        if (sourceText === '') {\n            // Duplicating empty line\n            if (this._isCopyingDown) {\n                this._startLineNumberDelta++;\n                this._endLineNumberDelta++;\n            }\n        }\n        if (this._noop) {\n            builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber + 1, 1), s.endLineNumber === model.getLineCount() ? '' : '\\n');\n        }\n        else {\n            if (!this._isCopyingDown) {\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + sourceText);\n            }\n            else {\n                builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), sourceText + '\\n');\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n        this._selectionDirection = this._selection.getDirection();\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._startLineNumberDelta !== 0 || this._endLineNumberDelta !== 0) {\n            let startLineNumber = result.startLineNumber;\n            let startColumn = result.startColumn;\n            let endLineNumber = result.endLineNumber;\n            let endColumn = result.endColumn;\n            if (this._startLineNumberDelta !== 0) {\n                startLineNumber = startLineNumber + this._startLineNumberDelta;\n                startColumn = 1;\n            }\n            if (this._endLineNumberDelta !== 0) {\n                endLineNumber = endLineNumber + this._endLineNumberDelta;\n                endColumn = 1;\n            }\n            result = Selection.createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, this._selectionDirection);\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as strings from '../../../../base/common/strings.js';\nimport { ShiftCommand } from '../../../common/commands/shiftCommand.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IndentAction } from '../../../common/languages/languageConfiguration.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport * as indentUtils from '../../indentation/browser/indentUtils.js';\nimport { getGoodIndentForLine, getIndentMetadata } from '../../../common/languages/autoIndent.js';\nimport { getEnterAction } from '../../../common/languages/enterAction.js';\nlet MoveLinesCommand = class MoveLinesCommand {\n    constructor(selection, isMovingDown, autoIndent, _languageConfigurationService) {\n        this._languageConfigurationService = _languageConfigurationService;\n        this._selection = selection;\n        this._isMovingDown = isMovingDown;\n        this._autoIndent = autoIndent;\n        this._selectionId = null;\n        this._moveEndLineSelectionShrink = false;\n    }\n    getEditOperations(model, builder) {\n        const modelLineCount = model.getLineCount();\n        if (this._isMovingDown && this._selection.endLineNumber === modelLineCount) {\n            this._selectionId = builder.trackSelection(this._selection);\n            return;\n        }\n        if (!this._isMovingDown && this._selection.startLineNumber === 1) {\n            this._selectionId = builder.trackSelection(this._selection);\n            return;\n        }\n        this._moveEndPositionDown = false;\n        let s = this._selection;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._moveEndPositionDown = true;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\n        const indentConverter = this.buildIndentConverter(tabSize, indentSize, insertSpaces);\n        const virtualModel = {\n            tokenization: {\n                getLineTokens: (lineNumber) => {\n                    return model.tokenization.getLineTokens(lineNumber);\n                },\n                getLanguageId: () => {\n                    return model.getLanguageId();\n                },\n                getLanguageIdAtPosition: (lineNumber, column) => {\n                    return model.getLanguageIdAtPosition(lineNumber, column);\n                },\n            },\n            getLineContent: null,\n        };\n        if (s.startLineNumber === s.endLineNumber && model.getLineMaxColumn(s.startLineNumber) === 1) {\n            // Current line is empty\n            const lineNumber = s.startLineNumber;\n            const otherLineNumber = (this._isMovingDown ? lineNumber + 1 : lineNumber - 1);\n            if (model.getLineMaxColumn(otherLineNumber) === 1) {\n                // Other line number is empty too, so no editing is needed\n                // Add a no-op to force running by the model\n                builder.addEditOperation(new Range(1, 1, 1, 1), null);\n            }\n            else {\n                // Type content from other line number on line number\n                builder.addEditOperation(new Range(lineNumber, 1, lineNumber, 1), model.getLineContent(otherLineNumber));\n                // Remove content from other line number\n                builder.addEditOperation(new Range(otherLineNumber, 1, otherLineNumber, model.getLineMaxColumn(otherLineNumber)), null);\n            }\n            // Track selection at the other line number\n            s = new Selection(otherLineNumber, 1, otherLineNumber, 1);\n        }\n        else {\n            let movingLineNumber;\n            let movingLineText;\n            if (this._isMovingDown) {\n                movingLineNumber = s.endLineNumber + 1;\n                movingLineText = model.getLineContent(movingLineNumber);\n                // Delete line that needs to be moved\n                builder.addEditOperation(new Range(movingLineNumber - 1, model.getLineMaxColumn(movingLineNumber - 1), movingLineNumber, model.getLineMaxColumn(movingLineNumber)), null);\n                let insertingText = movingLineText;\n                if (this.shouldAutoIndent(model, s)) {\n                    const movingLineMatchResult = this.matchEnterRule(model, indentConverter, tabSize, movingLineNumber, s.startLineNumber - 1);\n                    // if s.startLineNumber - 1 matches onEnter rule, we still honor that.\n                    if (movingLineMatchResult !== null) {\n                        const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\n                        const newSpaceCnt = movingLineMatchResult + indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                        const newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                        insertingText = newIndentation + this.trimLeft(movingLineText);\n                    }\n                    else {\n                        // no enter rule matches, let's check indentatin rules then.\n                        virtualModel.getLineContent = (lineNumber) => {\n                            if (lineNumber === s.startLineNumber) {\n                                return model.getLineContent(movingLineNumber);\n                            }\n                            else {\n                                return model.getLineContent(lineNumber);\n                            }\n                        };\n                        const indentOfMovingLine = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber, indentConverter, this._languageConfigurationService);\n                        if (indentOfMovingLine !== null) {\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(indentOfMovingLine, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                                insertingText = newIndentation + this.trimLeft(movingLineText);\n                            }\n                        }\n                    }\n                    // add edit operations for moving line first to make sure it's executed after we make indentation change\n                    // to s.startLineNumber\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\n                    const ret = this.matchEnterRuleMovingDown(model, indentConverter, tabSize, s.startLineNumber, movingLineNumber, insertingText);\n                    // check if the line being moved before matches onEnter rules, if so let's adjust the indentation by onEnter rules.\n                    if (ret !== null) {\n                        if (ret !== 0) {\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\n                        }\n                    }\n                    else {\n                        // it doesn't match onEnter rules, let's check indentation rules then.\n                        virtualModel.getLineContent = (lineNumber) => {\n                            if (lineNumber === s.startLineNumber) {\n                                return insertingText;\n                            }\n                            else if (lineNumber >= s.startLineNumber + 1 && lineNumber <= s.endLineNumber + 1) {\n                                return model.getLineContent(lineNumber - 1);\n                            }\n                            else {\n                                return model.getLineContent(lineNumber);\n                            }\n                        };\n                        const newIndentatOfMovingBlock = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber + 1, indentConverter, this._languageConfigurationService);\n                        if (newIndentatOfMovingBlock !== null) {\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(newIndentatOfMovingBlock, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\n                            }\n                        }\n                    }\n                }\n                else {\n                    // Insert line that needs to be moved before\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\n                }\n            }\n            else {\n                movingLineNumber = s.startLineNumber - 1;\n                movingLineText = model.getLineContent(movingLineNumber);\n                // Delete line that needs to be moved\n                builder.addEditOperation(new Range(movingLineNumber, 1, movingLineNumber + 1, 1), null);\n                // Insert line that needs to be moved after\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + movingLineText);\n                if (this.shouldAutoIndent(model, s)) {\n                    virtualModel.getLineContent = (lineNumber) => {\n                        if (lineNumber === movingLineNumber) {\n                            return model.getLineContent(s.startLineNumber);\n                        }\n                        else {\n                            return model.getLineContent(lineNumber);\n                        }\n                    };\n                    const ret = this.matchEnterRule(model, indentConverter, tabSize, s.startLineNumber, s.startLineNumber - 2);\n                    // check if s.startLineNumber - 2 matches onEnter rules, if so adjust the moving block by onEnter rules.\n                    if (ret !== null) {\n                        if (ret !== 0) {\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\n                        }\n                    }\n                    else {\n                        // it doesn't match any onEnter rule, let's check indentation rules then.\n                        const indentOfFirstLine = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(s.startLineNumber, 1), movingLineNumber, indentConverter, this._languageConfigurationService);\n                        if (indentOfFirstLine !== null) {\n                            // adjust the indentation of the moving block\n                            const oldIndent = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndent, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n    }\n    buildIndentConverter(tabSize, indentSize, insertSpaces) {\n        return {\n            shiftIndent: (indentation) => {\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            },\n            unshiftIndent: (indentation) => {\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            }\n        };\n    }\n    parseEnterResult(model, indentConverter, tabSize, line, enter) {\n        if (enter) {\n            let enterPrefix = enter.indentation;\n            if (enter.indentAction === IndentAction.None) {\n                enterPrefix = enter.indentation + enter.appendText;\n            }\n            else if (enter.indentAction === IndentAction.Indent) {\n                enterPrefix = enter.indentation + enter.appendText;\n            }\n            else if (enter.indentAction === IndentAction.IndentOutdent) {\n                enterPrefix = enter.indentation;\n            }\n            else if (enter.indentAction === IndentAction.Outdent) {\n                enterPrefix = indentConverter.unshiftIndent(enter.indentation) + enter.appendText;\n            }\n            const movingLineText = model.getLineContent(line);\n            if (this.trimLeft(movingLineText).indexOf(this.trimLeft(enterPrefix)) >= 0) {\n                const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(line));\n                let newIndentation = strings.getLeadingWhitespace(enterPrefix);\n                const indentMetadataOfMovelingLine = getIndentMetadata(model, line, this._languageConfigurationService);\n                if (indentMetadataOfMovelingLine !== null && indentMetadataOfMovelingLine & 2 /* IndentConsts.DECREASE_MASK */) {\n                    newIndentation = indentConverter.unshiftIndent(newIndentation);\n                }\n                const newSpaceCnt = indentUtils.getSpaceCnt(newIndentation, tabSize);\n                const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                return newSpaceCnt - oldSpaceCnt;\n            }\n        }\n        return null;\n    }\n    /**\n     *\n     * @param model\n     * @param indentConverter\n     * @param tabSize\n     * @param line the line moving down\n     * @param futureAboveLineNumber the line which will be at the `line` position\n     * @param futureAboveLineText\n     */\n    matchEnterRuleMovingDown(model, indentConverter, tabSize, line, futureAboveLineNumber, futureAboveLineText) {\n        if (strings.lastNonWhitespaceIndex(futureAboveLineText) >= 0) {\n            // break\n            const maxColumn = model.getLineMaxColumn(futureAboveLineNumber);\n            const enter = getEnterAction(this._autoIndent, model, new Range(futureAboveLineNumber, maxColumn, futureAboveLineNumber, maxColumn), this._languageConfigurationService);\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n        }\n        else {\n            // go upwards, starting from `line - 1`\n            let validPrecedingLine = line - 1;\n            while (validPrecedingLine >= 1) {\n                const lineContent = model.getLineContent(validPrecedingLine);\n                const nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\n                if (nonWhitespaceIdx >= 0) {\n                    break;\n                }\n                validPrecedingLine--;\n            }\n            if (validPrecedingLine < 1 || line > model.getLineCount()) {\n                return null;\n            }\n            const maxColumn = model.getLineMaxColumn(validPrecedingLine);\n            const enter = getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn), this._languageConfigurationService);\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n        }\n    }\n    matchEnterRule(model, indentConverter, tabSize, line, oneLineAbove, previousLineText) {\n        let validPrecedingLine = oneLineAbove;\n        while (validPrecedingLine >= 1) {\n            // ship empty lines as empty lines just inherit indentation\n            let lineContent;\n            if (validPrecedingLine === oneLineAbove && previousLineText !== undefined) {\n                lineContent = previousLineText;\n            }\n            else {\n                lineContent = model.getLineContent(validPrecedingLine);\n            }\n            const nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\n            if (nonWhitespaceIdx >= 0) {\n                break;\n            }\n            validPrecedingLine--;\n        }\n        if (validPrecedingLine < 1 || line > model.getLineCount()) {\n            return null;\n        }\n        const maxColumn = model.getLineMaxColumn(validPrecedingLine);\n        const enter = getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn), this._languageConfigurationService);\n        return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n    }\n    trimLeft(str) {\n        return str.replace(/^\\s+/, '');\n    }\n    shouldAutoIndent(model, selection) {\n        if (this._autoIndent < 4 /* EditorAutoIndentStrategy.Full */) {\n            return false;\n        }\n        // if it's not easy to tokenize, we stop auto indent.\n        if (!model.tokenization.isCheapToTokenize(selection.startLineNumber)) {\n            return false;\n        }\n        const languageAtSelectionStart = model.getLanguageIdAtPosition(selection.startLineNumber, 1);\n        const languageAtSelectionEnd = model.getLanguageIdAtPosition(selection.endLineNumber, 1);\n        if (languageAtSelectionStart !== languageAtSelectionEnd) {\n            return false;\n        }\n        if (this._languageConfigurationService.getLanguageConfiguration(languageAtSelectionStart).indentRulesSupport === null) {\n            return false;\n        }\n        return true;\n    }\n    getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, offset) {\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            const lineContent = model.getLineContent(i);\n            const originalIndent = strings.getLeadingWhitespace(lineContent);\n            const originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\n            const newSpacesCnt = originalSpacesCnt + offset;\n            const newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\n            if (newIndent !== originalIndent) {\n                builder.addEditOperation(new Range(i, 1, i, originalIndent.length + 1), newIndent);\n                if (i === s.endLineNumber && s.endColumn <= originalIndent.length + 1 && newIndent === '') {\n                    // as users select part of the original indent white spaces\n                    // when we adjust the indentation of endLine, we should adjust the cursor position as well.\n                    this._moveEndLineSelectionShrink = true;\n                }\n            }\n        }\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._moveEndPositionDown) {\n            result = result.setEndPosition(result.endLineNumber + 1, 1);\n        }\n        if (this._moveEndLineSelectionShrink && result.startLineNumber < result.endLineNumber) {\n            result = result.setEndPosition(result.endLineNumber, 2);\n        }\n        return result;\n    }\n};\nMoveLinesCommand = __decorate([\n    __param(3, ILanguageConfigurationService)\n], MoveLinesCommand);\nexport { MoveLinesCommand };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nexport class SortLinesCommand {\n    constructor(selection, descending) {\n        this.selection = selection;\n        this.descending = descending;\n        this.selectionId = null;\n    }\n    static getCollator() {\n        if (!SortLinesCommand._COLLATOR) {\n            SortLinesCommand._COLLATOR = new Intl.Collator();\n        }\n        return SortLinesCommand._COLLATOR;\n    }\n    getEditOperations(model, builder) {\n        const op = sortLines(model, this.selection, this.descending);\n        if (op) {\n            builder.addEditOperation(op.range, op.text);\n        }\n        this.selectionId = builder.trackSelection(this.selection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n    static canRun(model, selection, descending) {\n        if (model === null) {\n            return false;\n        }\n        const data = getSortData(model, selection, descending);\n        if (!data) {\n            return false;\n        }\n        for (let i = 0, len = data.before.length; i < len; i++) {\n            if (data.before[i] !== data.after[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nSortLinesCommand._COLLATOR = null;\nfunction getSortData(model, selection, descending) {\n    const startLineNumber = selection.startLineNumber;\n    let endLineNumber = selection.endLineNumber;\n    if (selection.endColumn === 1) {\n        endLineNumber--;\n    }\n    // Nothing to sort if user didn't select anything.\n    if (startLineNumber >= endLineNumber) {\n        return null;\n    }\n    const linesToSort = [];\n    // Get the contents of the selection to be sorted.\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        linesToSort.push(model.getLineContent(lineNumber));\n    }\n    let sorted = linesToSort.slice(0);\n    sorted.sort(SortLinesCommand.getCollator().compare);\n    // If descending, reverse the order.\n    if (descending === true) {\n        sorted = sorted.reverse();\n    }\n    return {\n        startLineNumber: startLineNumber,\n        endLineNumber: endLineNumber,\n        before: linesToSort,\n        after: sorted\n    };\n}\n/**\n * Generate commands for sorting lines on a model.\n */\nfunction sortLines(model, selection, descending) {\n    const data = getSortData(model, selection, descending);\n    if (!data) {\n        return null;\n    }\n    return EditOperation.replace(new Range(data.startLineNumber, 1, data.endLineNumber, model.getLineMaxColumn(data.endLineNumber)), data.after.join('\\n'));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection, ReplaceCommandThatSelectsText } from '../../../common/commands/replaceCommand.js';\nimport { TrimTrailingWhitespaceCommand } from '../../../common/commands/trimTrailingWhitespaceCommand.js';\nimport { TypeOperations } from '../../../common/cursor/cursorTypeOperations.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { CopyLinesCommand } from './copyLinesCommand.js';\nimport { MoveLinesCommand } from './moveLinesCommand.js';\nimport { SortLinesCommand } from './sortLinesCommand.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\n// copy lines\nclass AbstractCopyLinesAction extends EditorAction {\n    constructor(down, opts) {\n        super(opts);\n        this.down = down;\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections().map((selection, index) => ({ selection, index, ignore: false }));\n        selections.sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\n        // Remove selections that would result in copying the same line\n        let prev = selections[0];\n        for (let i = 1; i < selections.length; i++) {\n            const curr = selections[i];\n            if (prev.selection.endLineNumber === curr.selection.startLineNumber) {\n                // these two selections would copy the same line\n                if (prev.index < curr.index) {\n                    // prev wins\n                    curr.ignore = true;\n                }\n                else {\n                    // curr wins\n                    prev.ignore = true;\n                    prev = curr;\n                }\n            }\n        }\n        const commands = [];\n        for (const selection of selections) {\n            commands.push(new CopyLinesCommand(selection.selection, this.down, selection.ignore));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass CopyLinesUpAction extends AbstractCopyLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.copyLinesUpAction',\n            label: nls.localize('lines.copyUp', \"Copy Line Up\"),\n            alias: 'Copy Line Up',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miCopyLinesUp', comment: ['&& denotes a mnemonic'] }, \"&&Copy Line Up\"),\n                order: 1\n            }\n        });\n    }\n}\nclass CopyLinesDownAction extends AbstractCopyLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.copyLinesDownAction',\n            label: nls.localize('lines.copyDown', \"Copy Line Down\"),\n            alias: 'Copy Line Down',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miCopyLinesDown', comment: ['&& denotes a mnemonic'] }, \"Co&&py Line Down\"),\n                order: 2\n            }\n        });\n    }\n}\nexport class DuplicateSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.duplicateSelection',\n            label: nls.localize('duplicateSelection', \"Duplicate Selection\"),\n            alias: 'Duplicate Selection',\n            precondition: EditorContextKeys.writable,\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miDuplicateSelection', comment: ['&& denotes a mnemonic'] }, \"&&Duplicate Selection\"),\n                order: 5\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const commands = [];\n        const selections = editor.getSelections();\n        const model = editor.getModel();\n        for (const selection of selections) {\n            if (selection.isEmpty()) {\n                commands.push(new CopyLinesCommand(selection, true));\n            }\n            else {\n                const insertSelection = new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn);\n                commands.push(new ReplaceCommandThatSelectsText(insertSelection, model.getValueInRange(selection)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\n// move lines\nclass AbstractMoveLinesAction extends EditorAction {\n    constructor(down, opts) {\n        super(opts);\n        this.down = down;\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const commands = [];\n        const selections = editor.getSelections() || [];\n        const autoIndent = editor.getOption(9 /* EditorOption.autoIndent */);\n        for (const selection of selections) {\n            commands.push(new MoveLinesCommand(selection, this.down, autoIndent, languageConfigurationService));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass MoveLinesUpAction extends AbstractMoveLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.moveLinesUpAction',\n            label: nls.localize('lines.moveUp', \"Move Line Up\"),\n            alias: 'Move Line Up',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */,\n                linux: { primary: 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miMoveLinesUp', comment: ['&& denotes a mnemonic'] }, \"Mo&&ve Line Up\"),\n                order: 3\n            }\n        });\n    }\n}\nclass MoveLinesDownAction extends AbstractMoveLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.moveLinesDownAction',\n            label: nls.localize('lines.moveDown', \"Move Line Down\"),\n            alias: 'Move Line Down',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */,\n                linux: { primary: 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miMoveLinesDown', comment: ['&& denotes a mnemonic'] }, \"Move &&Line Down\"),\n                order: 4\n            }\n        });\n    }\n}\nexport class AbstractSortLinesAction extends EditorAction {\n    constructor(descending, opts) {\n        super(opts);\n        this.descending = descending;\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections() || [];\n        for (const selection of selections) {\n            if (!SortLinesCommand.canRun(editor.getModel(), selection, this.descending)) {\n                return;\n            }\n        }\n        const commands = [];\n        for (let i = 0, len = selections.length; i < len; i++) {\n            commands[i] = new SortLinesCommand(selections[i], this.descending);\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nexport class SortLinesAscendingAction extends AbstractSortLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.sortLinesAscending',\n            label: nls.localize('lines.sortAscending', \"Sort Lines Ascending\"),\n            alias: 'Sort Lines Ascending',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nexport class SortLinesDescendingAction extends AbstractSortLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.sortLinesDescending',\n            label: nls.localize('lines.sortDescending', \"Sort Lines Descending\"),\n            alias: 'Sort Lines Descending',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nexport class DeleteDuplicateLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.removeDuplicateLines',\n            label: nls.localize('lines.deleteDuplicates', \"Delete Duplicate Lines\"),\n            alias: 'Delete Duplicate Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n            return;\n        }\n        const edits = [];\n        const endCursorState = [];\n        let linesDeleted = 0;\n        for (const selection of editor.getSelections()) {\n            const uniqueLines = new Set();\n            const lines = [];\n            for (let i = selection.startLineNumber; i <= selection.endLineNumber; i++) {\n                const line = model.getLineContent(i);\n                if (uniqueLines.has(line)) {\n                    continue;\n                }\n                lines.push(line);\n                uniqueLines.add(line);\n            }\n            const selectionToReplace = new Selection(selection.startLineNumber, 1, selection.endLineNumber, model.getLineMaxColumn(selection.endLineNumber));\n            const adjustedSelectionStart = selection.startLineNumber - linesDeleted;\n            const finalSelection = new Selection(adjustedSelectionStart, 1, adjustedSelectionStart + lines.length - 1, lines[lines.length - 1].length);\n            edits.push(EditOperation.replace(selectionToReplace, lines.join('\\n')));\n            endCursorState.push(finalSelection);\n            linesDeleted += (selection.endLineNumber - selection.startLineNumber + 1) - lines.length;\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class TrimTrailingWhitespaceAction extends EditorAction {\n    constructor() {\n        super({\n            id: TrimTrailingWhitespaceAction.ID,\n            label: nls.localize('lines.trimTrailingWhitespace', \"Trim Trailing Whitespace\"),\n            alias: 'Trim Trailing Whitespace',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 54 /* KeyCode.KeyX */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor, args) {\n        let cursors = [];\n        if (args.reason === 'auto-save') {\n            // See https://github.com/editorconfig/editorconfig-vscode/issues/47\n            // It is very convenient for the editor config extension to invoke this action.\n            // So, if we get a reason:'auto-save' passed in, let's preserve cursor positions.\n            cursors = (editor.getSelections() || []).map(s => new Position(s.positionLineNumber, s.positionColumn));\n        }\n        const selection = editor.getSelection();\n        if (selection === null) {\n            return;\n        }\n        const command = new TrimTrailingWhitespaceCommand(selection, cursors);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n    }\n}\nTrimTrailingWhitespaceAction.ID = 'editor.action.trimTrailingWhitespace';\nexport class DeleteLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.deleteLines',\n            label: nls.localize('lines.delete', \"Delete Line\"),\n            alias: 'Delete Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 41 /* KeyCode.KeyK */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const ops = this._getLinesToRemove(editor);\n        const model = editor.getModel();\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n            // Model is empty\n            return;\n        }\n        let linesDeleted = 0;\n        const edits = [];\n        const cursorState = [];\n        for (let i = 0, len = ops.length; i < len; i++) {\n            const op = ops[i];\n            let startLineNumber = op.startLineNumber;\n            let endLineNumber = op.endLineNumber;\n            let startColumn = 1;\n            let endColumn = model.getLineMaxColumn(endLineNumber);\n            if (endLineNumber < model.getLineCount()) {\n                endLineNumber += 1;\n                endColumn = 1;\n            }\n            else if (startLineNumber > 1) {\n                startLineNumber -= 1;\n                startColumn = model.getLineMaxColumn(startLineNumber);\n            }\n            edits.push(EditOperation.replace(new Selection(startLineNumber, startColumn, endLineNumber, endColumn), ''));\n            cursorState.push(new Selection(startLineNumber - linesDeleted, op.positionColumn, startLineNumber - linesDeleted, op.positionColumn));\n            linesDeleted += (op.endLineNumber - op.startLineNumber + 1);\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, cursorState);\n        editor.pushUndoStop();\n    }\n    _getLinesToRemove(editor) {\n        // Construct delete operations\n        const operations = editor.getSelections().map((s) => {\n            let endLineNumber = s.endLineNumber;\n            if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n                endLineNumber -= 1;\n            }\n            return {\n                startLineNumber: s.startLineNumber,\n                selectionStartColumn: s.selectionStartColumn,\n                endLineNumber: endLineNumber,\n                positionColumn: s.positionColumn\n            };\n        });\n        // Sort delete operations\n        operations.sort((a, b) => {\n            if (a.startLineNumber === b.startLineNumber) {\n                return a.endLineNumber - b.endLineNumber;\n            }\n            return a.startLineNumber - b.startLineNumber;\n        });\n        // Merge delete operations which are adjacent or overlapping\n        const mergedOperations = [];\n        let previousOperation = operations[0];\n        for (let i = 1; i < operations.length; i++) {\n            if (previousOperation.endLineNumber + 1 >= operations[i].startLineNumber) {\n                // Merge current operations into the previous one\n                previousOperation.endLineNumber = operations[i].endLineNumber;\n            }\n            else {\n                // Push previous operation\n                mergedOperations.push(previousOperation);\n                previousOperation = operations[i];\n            }\n        }\n        // Push the last operation\n        mergedOperations.push(previousOperation);\n        return mergedOperations;\n    }\n}\nexport class IndentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.indentLines',\n            label: nls.localize('lines.indent', \"Indent Line\"),\n            alias: 'Indent Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 89 /* KeyCode.BracketRight */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.indent(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n        editor.pushUndoStop();\n    }\n}\nclass OutdentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.outdentLines',\n            label: nls.localize('lines.outdent', \"Outdent Line\"),\n            alias: 'Outdent Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 87 /* KeyCode.BracketLeft */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        CoreEditingCommands.Outdent.runEditorCommand(_accessor, editor, null);\n    }\n}\nexport class InsertLineBeforeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertLineBefore',\n            label: nls.localize('lines.insertBefore', \"Insert Line Above\"),\n            alias: 'Insert Line Above',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.lineInsertBefore(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n    }\n}\nexport class InsertLineAfterAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertLineAfter',\n            label: nls.localize('lines.insertAfter', \"Insert Line Below\"),\n            alias: 'Insert Line Below',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.lineInsertAfter(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n    }\n}\nexport class AbstractDeleteAllToBoundaryAction extends EditorAction {\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const primaryCursor = editor.getSelection();\n        const rangesToDelete = this._getRangesToDelete(editor);\n        // merge overlapping selections\n        const effectiveRanges = [];\n        for (let i = 0, count = rangesToDelete.length - 1; i < count; i++) {\n            const range = rangesToDelete[i];\n            const nextRange = rangesToDelete[i + 1];\n            if (Range.intersectRanges(range, nextRange) === null) {\n                effectiveRanges.push(range);\n            }\n            else {\n                rangesToDelete[i + 1] = Range.plusRange(range, nextRange);\n            }\n        }\n        effectiveRanges.push(rangesToDelete[rangesToDelete.length - 1]);\n        const endCursorState = this._getEndCursorState(primaryCursor, effectiveRanges);\n        const edits = effectiveRanges.map(range => {\n            return EditOperation.replace(range, '');\n        });\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class DeleteAllLeftAction extends AbstractDeleteAllToBoundaryAction {\n    constructor() {\n        super({\n            id: 'deleteAllLeft',\n            label: nls.localize('lines.deleteAllLeft', \"Delete All Left\"),\n            alias: 'Delete All Left',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1 /* KeyCode.Backspace */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _getEndCursorState(primaryCursor, rangesToDelete) {\n        let endPrimaryCursor = null;\n        const endCursorState = [];\n        let deletedLines = 0;\n        rangesToDelete.forEach(range => {\n            let endCursor;\n            if (range.endColumn === 1 && deletedLines > 0) {\n                const newStartLine = range.startLineNumber - deletedLines;\n                endCursor = new Selection(newStartLine, range.startColumn, newStartLine, range.startColumn);\n            }\n            else {\n                endCursor = new Selection(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n            }\n            deletedLines += range.endLineNumber - range.startLineNumber;\n            if (range.intersectRanges(primaryCursor)) {\n                endPrimaryCursor = endCursor;\n            }\n            else {\n                endCursorState.push(endCursor);\n            }\n        });\n        if (endPrimaryCursor) {\n            endCursorState.unshift(endPrimaryCursor);\n        }\n        return endCursorState;\n    }\n    _getRangesToDelete(editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return [];\n        }\n        let rangesToDelete = selections;\n        const model = editor.getModel();\n        if (model === null) {\n            return [];\n        }\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\n        rangesToDelete = rangesToDelete.map(selection => {\n            if (selection.isEmpty()) {\n                if (selection.startColumn === 1) {\n                    const deleteFromLine = Math.max(1, selection.startLineNumber - 1);\n                    const deleteFromColumn = selection.startLineNumber === 1 ? 1 : model.getLineContent(deleteFromLine).length + 1;\n                    return new Range(deleteFromLine, deleteFromColumn, selection.startLineNumber, 1);\n                }\n                else {\n                    return new Range(selection.startLineNumber, 1, selection.startLineNumber, selection.startColumn);\n                }\n            }\n            else {\n                return new Range(selection.startLineNumber, 1, selection.endLineNumber, selection.endColumn);\n            }\n        });\n        return rangesToDelete;\n    }\n}\nexport class DeleteAllRightAction extends AbstractDeleteAllToBoundaryAction {\n    constructor() {\n        super({\n            id: 'deleteAllRight',\n            label: nls.localize('lines.deleteAllRight', \"Delete All Right\"),\n            alias: 'Delete All Right',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 41 /* KeyCode.KeyK */, secondary: [2048 /* KeyMod.CtrlCmd */ | 20 /* KeyCode.Delete */] },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _getEndCursorState(primaryCursor, rangesToDelete) {\n        let endPrimaryCursor = null;\n        const endCursorState = [];\n        for (let i = 0, len = rangesToDelete.length, offset = 0; i < len; i++) {\n            const range = rangesToDelete[i];\n            const endCursor = new Selection(range.startLineNumber - offset, range.startColumn, range.startLineNumber - offset, range.startColumn);\n            if (range.intersectRanges(primaryCursor)) {\n                endPrimaryCursor = endCursor;\n            }\n            else {\n                endCursorState.push(endCursor);\n            }\n        }\n        if (endPrimaryCursor) {\n            endCursorState.unshift(endPrimaryCursor);\n        }\n        return endCursorState;\n    }\n    _getRangesToDelete(editor) {\n        const model = editor.getModel();\n        if (model === null) {\n            return [];\n        }\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return [];\n        }\n        const rangesToDelete = selections.map((sel) => {\n            if (sel.isEmpty()) {\n                const maxColumn = model.getLineMaxColumn(sel.startLineNumber);\n                if (sel.startColumn === maxColumn) {\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber + 1, 1);\n                }\n                else {\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber, maxColumn);\n                }\n            }\n            return sel;\n        });\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\n        return rangesToDelete;\n    }\n}\nexport class JoinLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.joinLines',\n            label: nls.localize('lines.joinLines', \"Join Lines\"),\n            alias: 'Join Lines',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 40 /* KeyCode.KeyJ */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        let primaryCursor = editor.getSelection();\n        if (primaryCursor === null) {\n            return;\n        }\n        selections.sort(Range.compareRangesUsingStarts);\n        const reducedSelections = [];\n        const lastSelection = selections.reduce((previousValue, currentValue) => {\n            if (previousValue.isEmpty()) {\n                if (previousValue.endLineNumber === currentValue.startLineNumber) {\n                    if (primaryCursor.equalsSelection(previousValue)) {\n                        primaryCursor = currentValue;\n                    }\n                    return currentValue;\n                }\n                if (currentValue.startLineNumber > previousValue.endLineNumber + 1) {\n                    reducedSelections.push(previousValue);\n                    return currentValue;\n                }\n                else {\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n                }\n            }\n            else {\n                if (currentValue.startLineNumber > previousValue.endLineNumber) {\n                    reducedSelections.push(previousValue);\n                    return currentValue;\n                }\n                else {\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n                }\n            }\n        });\n        reducedSelections.push(lastSelection);\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const edits = [];\n        const endCursorState = [];\n        let endPrimaryCursor = primaryCursor;\n        let lineOffset = 0;\n        for (let i = 0, len = reducedSelections.length; i < len; i++) {\n            const selection = reducedSelections[i];\n            const startLineNumber = selection.startLineNumber;\n            const startColumn = 1;\n            let columnDeltaOffset = 0;\n            let endLineNumber, endColumn;\n            const selectionEndPositionOffset = model.getLineContent(selection.endLineNumber).length - selection.endColumn;\n            if (selection.isEmpty() || selection.startLineNumber === selection.endLineNumber) {\n                const position = selection.getStartPosition();\n                if (position.lineNumber < model.getLineCount()) {\n                    endLineNumber = startLineNumber + 1;\n                    endColumn = model.getLineMaxColumn(endLineNumber);\n                }\n                else {\n                    endLineNumber = position.lineNumber;\n                    endColumn = model.getLineMaxColumn(position.lineNumber);\n                }\n            }\n            else {\n                endLineNumber = selection.endLineNumber;\n                endColumn = model.getLineMaxColumn(endLineNumber);\n            }\n            let trimmedLinesContent = model.getLineContent(startLineNumber);\n            for (let i = startLineNumber + 1; i <= endLineNumber; i++) {\n                const lineText = model.getLineContent(i);\n                const firstNonWhitespaceIdx = model.getLineFirstNonWhitespaceColumn(i);\n                if (firstNonWhitespaceIdx >= 1) {\n                    let insertSpace = true;\n                    if (trimmedLinesContent === '') {\n                        insertSpace = false;\n                    }\n                    if (insertSpace && (trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === ' ' ||\n                        trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === '\\t')) {\n                        insertSpace = false;\n                        trimmedLinesContent = trimmedLinesContent.replace(/[\\s\\uFEFF\\xA0]+$/g, ' ');\n                    }\n                    const lineTextWithoutIndent = lineText.substr(firstNonWhitespaceIdx - 1);\n                    trimmedLinesContent += (insertSpace ? ' ' : '') + lineTextWithoutIndent;\n                    if (insertSpace) {\n                        columnDeltaOffset = lineTextWithoutIndent.length + 1;\n                    }\n                    else {\n                        columnDeltaOffset = lineTextWithoutIndent.length;\n                    }\n                }\n                else {\n                    columnDeltaOffset = 0;\n                }\n            }\n            const deleteSelection = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n            if (!deleteSelection.isEmpty()) {\n                let resultSelection;\n                if (selection.isEmpty()) {\n                    edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                    resultSelection = new Selection(deleteSelection.startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1, startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1);\n                }\n                else {\n                    if (selection.startLineNumber === selection.endLineNumber) {\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.endLineNumber - lineOffset, selection.endColumn);\n                    }\n                    else {\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.startLineNumber - lineOffset, trimmedLinesContent.length - selectionEndPositionOffset);\n                    }\n                }\n                if (Range.intersectRanges(deleteSelection, primaryCursor) !== null) {\n                    endPrimaryCursor = resultSelection;\n                }\n                else {\n                    endCursorState.push(resultSelection);\n                }\n            }\n            lineOffset += deleteSelection.endLineNumber - deleteSelection.startLineNumber;\n        }\n        endCursorState.unshift(endPrimaryCursor);\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class TransposeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.transpose',\n            label: nls.localize('editor.transpose', \"Transpose characters around the cursor\"),\n            alias: 'Transpose characters around the cursor',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const commands = [];\n        for (let i = 0, len = selections.length; i < len; i++) {\n            const selection = selections[i];\n            if (!selection.isEmpty()) {\n                continue;\n            }\n            const cursor = selection.getStartPosition();\n            const maxColumn = model.getLineMaxColumn(cursor.lineNumber);\n            if (cursor.column >= maxColumn) {\n                if (cursor.lineNumber === model.getLineCount()) {\n                    continue;\n                }\n                // The cursor is at the end of current line and current line is not empty\n                // then we transpose the character before the cursor and the line break if there is any following line.\n                const deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1);\n                const chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n                commands.push(new ReplaceCommand(new Selection(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1), chars));\n            }\n            else {\n                const deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber, cursor.column + 1);\n                const chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n                commands.push(new ReplaceCommandThatPreservesSelection(deleteSelection, chars, new Selection(cursor.lineNumber, cursor.column + 1, cursor.lineNumber, cursor.column + 1)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nexport class AbstractCaseAction extends EditorAction {\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const wordSeparators = editor.getOption(119 /* EditorOption.wordSeparators */);\n        const textEdits = [];\n        for (const selection of selections) {\n            if (selection.isEmpty()) {\n                const cursor = selection.getStartPosition();\n                const word = editor.getConfiguredWordAtPosition(cursor);\n                if (!word) {\n                    continue;\n                }\n                const wordRange = new Range(cursor.lineNumber, word.startColumn, cursor.lineNumber, word.endColumn);\n                const text = model.getValueInRange(wordRange);\n                textEdits.push(EditOperation.replace(wordRange, this._modifyText(text, wordSeparators)));\n            }\n            else {\n                const text = model.getValueInRange(selection);\n                textEdits.push(EditOperation.replace(selection, this._modifyText(text, wordSeparators)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, textEdits);\n        editor.pushUndoStop();\n    }\n}\nexport class UpperCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToUppercase',\n            label: nls.localize('editor.transformToUppercase', \"Transform to Uppercase\"),\n            alias: 'Transform to Uppercase',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        return text.toLocaleUpperCase();\n    }\n}\nexport class LowerCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToLowercase',\n            label: nls.localize('editor.transformToLowercase', \"Transform to Lowercase\"),\n            alias: 'Transform to Lowercase',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        return text.toLocaleLowerCase();\n    }\n}\nclass BackwardsCompatibleRegExp {\n    constructor(_pattern, _flags) {\n        this._pattern = _pattern;\n        this._flags = _flags;\n        this._actual = null;\n        this._evaluated = false;\n    }\n    get() {\n        if (!this._evaluated) {\n            this._evaluated = true;\n            try {\n                this._actual = new RegExp(this._pattern, this._flags);\n            }\n            catch (err) {\n                // this browser does not support this regular expression\n            }\n        }\n        return this._actual;\n    }\n    isSupported() {\n        return (this.get() !== null);\n    }\n}\nexport class TitleCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToTitlecase',\n            label: nls.localize('editor.transformToTitlecase', \"Transform to Title Case\"),\n            alias: 'Transform to Title Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const titleBoundary = TitleCaseAction.titleBoundary.get();\n        if (!titleBoundary) {\n            // cannot support this\n            return text;\n        }\n        return text\n            .toLocaleLowerCase()\n            .replace(titleBoundary, (b) => b.toLocaleUpperCase());\n    }\n}\nTitleCaseAction.titleBoundary = new BackwardsCompatibleRegExp('(^|[^\\\\p{L}\\\\p{N}\\']|((^|\\\\P{L})\\'))\\\\p{L}', 'gmu');\nexport class SnakeCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToSnakecase',\n            label: nls.localize('editor.transformToSnakecase', \"Transform to Snake Case\"),\n            alias: 'Transform to Snake Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const caseBoundary = SnakeCaseAction.caseBoundary.get();\n        const singleLetters = SnakeCaseAction.singleLetters.get();\n        if (!caseBoundary || !singleLetters) {\n            // cannot support this\n            return text;\n        }\n        return (text\n            .replace(caseBoundary, '$1_$2')\n            .replace(singleLetters, '$1_$2$3')\n            .toLocaleLowerCase());\n    }\n}\nSnakeCaseAction.caseBoundary = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\nSnakeCaseAction.singleLetters = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu})(\\\\p{Ll})', 'gmu');\nexport class KebabCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToKebabcase',\n            label: nls.localize('editor.transformToKebabcase', 'Transform to Kebab Case'),\n            alias: 'Transform to Kebab Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    static isSupported() {\n        const areAllRegexpsSupported = [\n            this.caseBoundary,\n            this.singleLetters,\n            this.underscoreBoundary,\n        ].every((regexp) => regexp.isSupported());\n        return areAllRegexpsSupported;\n    }\n    _modifyText(text, _) {\n        const caseBoundary = KebabCaseAction.caseBoundary.get();\n        const singleLetters = KebabCaseAction.singleLetters.get();\n        const underscoreBoundary = KebabCaseAction.underscoreBoundary.get();\n        if (!caseBoundary || !singleLetters || !underscoreBoundary) {\n            // one or more regexps aren't supported\n            return text;\n        }\n        return text\n            .replace(underscoreBoundary, '$1-$3')\n            .replace(caseBoundary, '$1-$2')\n            .replace(singleLetters, '$1-$2')\n            .toLocaleLowerCase();\n    }\n}\nKebabCaseAction.caseBoundary = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\nKebabCaseAction.singleLetters = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu}\\\\p{Ll})', 'gmu');\nKebabCaseAction.underscoreBoundary = new BackwardsCompatibleRegExp('(\\\\S)(_)(\\\\S)', 'gm');\nregisterEditorAction(CopyLinesUpAction);\nregisterEditorAction(CopyLinesDownAction);\nregisterEditorAction(DuplicateSelectionAction);\nregisterEditorAction(MoveLinesUpAction);\nregisterEditorAction(MoveLinesDownAction);\nregisterEditorAction(SortLinesAscendingAction);\nregisterEditorAction(SortLinesDescendingAction);\nregisterEditorAction(DeleteDuplicateLinesAction);\nregisterEditorAction(TrimTrailingWhitespaceAction);\nregisterEditorAction(DeleteLinesAction);\nregisterEditorAction(IndentLinesAction);\nregisterEditorAction(OutdentLinesAction);\nregisterEditorAction(InsertLineBeforeAction);\nregisterEditorAction(InsertLineAfterAction);\nregisterEditorAction(DeleteAllLeftAction);\nregisterEditorAction(DeleteAllRightAction);\nregisterEditorAction(JoinLinesAction);\nregisterEditorAction(TransposeAction);\nregisterEditorAction(UpperCaseAction);\nregisterEditorAction(LowerCaseAction);\nif (SnakeCaseAction.caseBoundary.isSupported() && SnakeCaseAction.singleLetters.isSupported()) {\n    registerEditorAction(SnakeCaseAction);\n}\nif (TitleCaseAction.titleBoundary.isSupported()) {\n    registerEditorAction(TitleCaseAction);\n}\nif (KebabCaseAction.isSupported()) {\n    registerEditorAction(KebabCaseAction);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, Delayer, first } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { isCancellationError, onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution, registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nexport const CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE = new RawContextKey('LinkedEditingInputVisible', false);\nconst DECORATION_CLASS_NAME = 'linked-editing-decoration';\nlet LinkedEditingContribution = class LinkedEditingContribution extends Disposable {\n    constructor(editor, contextKeyService, languageFeaturesService, languageConfigurationService, languageFeatureDebounceService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        this._syncRangesToken = 0;\n        this._localToDispose = this._register(new DisposableStore());\n        this._editor = editor;\n        this._providers = languageFeaturesService.linkedEditingRangeProvider;\n        this._enabled = false;\n        this._visibleContextKey = CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\n        this._debounceInformation = languageFeatureDebounceService.for(this._providers, 'Linked Editing', { min: 200 });\n        this._currentDecorations = this._editor.createDecorationsCollection();\n        this._languageWordPattern = null;\n        this._currentWordPattern = null;\n        this._ignoreChangeEvent = false;\n        this._localToDispose = this._register(new DisposableStore());\n        this._rangeUpdateTriggerPromise = null;\n        this._rangeSyncTriggerPromise = null;\n        this._currentRequest = null;\n        this._currentRequestPosition = null;\n        this._currentRequestModelVersion = null;\n        this._register(this._editor.onDidChangeModel(() => this.reinitialize(true)));\n        this._register(this._editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(64 /* EditorOption.linkedEditing */) || e.hasChanged(84 /* EditorOption.renameOnType */)) {\n                this.reinitialize(false);\n            }\n        }));\n        this._register(this._providers.onDidChange(() => this.reinitialize(false)));\n        this._register(this._editor.onDidChangeModelLanguage(() => this.reinitialize(true)));\n        this.reinitialize(true);\n    }\n    static get(editor) {\n        return editor.getContribution(LinkedEditingContribution.ID);\n    }\n    reinitialize(forceRefresh) {\n        const model = this._editor.getModel();\n        const isEnabled = model !== null && (this._editor.getOption(64 /* EditorOption.linkedEditing */) || this._editor.getOption(84 /* EditorOption.renameOnType */)) && this._providers.has(model);\n        if (isEnabled === this._enabled && !forceRefresh) {\n            return;\n        }\n        this._enabled = isEnabled;\n        this.clearRanges();\n        this._localToDispose.clear();\n        if (!isEnabled || model === null) {\n            return;\n        }\n        this._localToDispose.add(Event.runAndSubscribe(model.onDidChangeLanguageConfiguration, () => {\n            this._languageWordPattern = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n        }));\n        const rangeUpdateScheduler = new Delayer(this._debounceInformation.get(model));\n        const triggerRangeUpdate = () => {\n            var _a;\n            this._rangeUpdateTriggerPromise = rangeUpdateScheduler.trigger(() => this.updateRanges(), (_a = this._debounceDuration) !== null && _a !== void 0 ? _a : this._debounceInformation.get(model));\n        };\n        const rangeSyncScheduler = new Delayer(0);\n        const triggerRangeSync = (token) => {\n            this._rangeSyncTriggerPromise = rangeSyncScheduler.trigger(() => this._syncRanges(token));\n        };\n        this._localToDispose.add(this._editor.onDidChangeCursorPosition(() => {\n            triggerRangeUpdate();\n        }));\n        this._localToDispose.add(this._editor.onDidChangeModelContent((e) => {\n            if (!this._ignoreChangeEvent) {\n                if (this._currentDecorations.length > 0) {\n                    const referenceRange = this._currentDecorations.getRange(0);\n                    if (referenceRange && e.changes.every(c => referenceRange.intersectRanges(c.range))) {\n                        triggerRangeSync(this._syncRangesToken);\n                        return;\n                    }\n                }\n            }\n            triggerRangeUpdate();\n        }));\n        this._localToDispose.add({\n            dispose: () => {\n                rangeUpdateScheduler.dispose();\n                rangeSyncScheduler.dispose();\n            }\n        });\n        this.updateRanges();\n    }\n    _syncRanges(token) {\n        // dalayed invocation, make sure we're still on\n        if (!this._editor.hasModel() || token !== this._syncRangesToken || this._currentDecorations.length === 0) {\n            // nothing to do\n            return;\n        }\n        const model = this._editor.getModel();\n        const referenceRange = this._currentDecorations.getRange(0);\n        if (!referenceRange || referenceRange.startLineNumber !== referenceRange.endLineNumber) {\n            return this.clearRanges();\n        }\n        const referenceValue = model.getValueInRange(referenceRange);\n        if (this._currentWordPattern) {\n            const match = referenceValue.match(this._currentWordPattern);\n            const matchLength = match ? match[0].length : 0;\n            if (matchLength !== referenceValue.length) {\n                return this.clearRanges();\n            }\n        }\n        const edits = [];\n        for (let i = 1, len = this._currentDecorations.length; i < len; i++) {\n            const mirrorRange = this._currentDecorations.getRange(i);\n            if (!mirrorRange) {\n                continue;\n            }\n            if (mirrorRange.startLineNumber !== mirrorRange.endLineNumber) {\n                edits.push({\n                    range: mirrorRange,\n                    text: referenceValue\n                });\n            }\n            else {\n                let oldValue = model.getValueInRange(mirrorRange);\n                let newValue = referenceValue;\n                let rangeStartColumn = mirrorRange.startColumn;\n                let rangeEndColumn = mirrorRange.endColumn;\n                const commonPrefixLength = strings.commonPrefixLength(oldValue, newValue);\n                rangeStartColumn += commonPrefixLength;\n                oldValue = oldValue.substr(commonPrefixLength);\n                newValue = newValue.substr(commonPrefixLength);\n                const commonSuffixLength = strings.commonSuffixLength(oldValue, newValue);\n                rangeEndColumn -= commonSuffixLength;\n                oldValue = oldValue.substr(0, oldValue.length - commonSuffixLength);\n                newValue = newValue.substr(0, newValue.length - commonSuffixLength);\n                if (rangeStartColumn !== rangeEndColumn || newValue.length !== 0) {\n                    edits.push({\n                        range: new Range(mirrorRange.startLineNumber, rangeStartColumn, mirrorRange.endLineNumber, rangeEndColumn),\n                        text: newValue\n                    });\n                }\n            }\n        }\n        if (edits.length === 0) {\n            return;\n        }\n        try {\n            this._editor.popUndoStop();\n            this._ignoreChangeEvent = true;\n            const prevEditOperationType = this._editor._getViewModel().getPrevEditOperationType();\n            this._editor.executeEdits('linkedEditing', edits);\n            this._editor._getViewModel().setPrevEditOperationType(prevEditOperationType);\n        }\n        finally {\n            this._ignoreChangeEvent = false;\n        }\n    }\n    dispose() {\n        this.clearRanges();\n        super.dispose();\n    }\n    clearRanges() {\n        this._visibleContextKey.set(false);\n        this._currentDecorations.clear();\n        if (this._currentRequest) {\n            this._currentRequest.cancel();\n            this._currentRequest = null;\n            this._currentRequestPosition = null;\n        }\n    }\n    updateRanges(force = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._editor.hasModel()) {\n                this.clearRanges();\n                return;\n            }\n            const position = this._editor.getPosition();\n            if (!this._enabled && !force || this._editor.getSelections().length > 1) {\n                // disabled or multicursor\n                this.clearRanges();\n                return;\n            }\n            const model = this._editor.getModel();\n            const modelVersionId = model.getVersionId();\n            if (this._currentRequestPosition && this._currentRequestModelVersion === modelVersionId) {\n                if (position.equals(this._currentRequestPosition)) {\n                    return; // same position\n                }\n                if (this._currentDecorations.length > 0) {\n                    const range = this._currentDecorations.getRange(0);\n                    if (range && range.containsPosition(position)) {\n                        return; // just moving inside the existing primary range\n                    }\n                }\n            }\n            this._currentRequestPosition = position;\n            this._currentRequestModelVersion = modelVersionId;\n            const request = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const sw = new StopWatch(false);\n                    const response = yield getLinkedEditingRanges(this._providers, model, position, token);\n                    this._debounceInformation.update(model, sw.elapsed());\n                    if (request !== this._currentRequest) {\n                        return;\n                    }\n                    this._currentRequest = null;\n                    if (modelVersionId !== model.getVersionId()) {\n                        return;\n                    }\n                    let ranges = [];\n                    if (response === null || response === void 0 ? void 0 : response.ranges) {\n                        ranges = response.ranges;\n                    }\n                    this._currentWordPattern = (response === null || response === void 0 ? void 0 : response.wordPattern) || this._languageWordPattern;\n                    let foundReferenceRange = false;\n                    for (let i = 0, len = ranges.length; i < len; i++) {\n                        if (Range.containsPosition(ranges[i], position)) {\n                            foundReferenceRange = true;\n                            if (i !== 0) {\n                                const referenceRange = ranges[i];\n                                ranges.splice(i, 1);\n                                ranges.unshift(referenceRange);\n                            }\n                            break;\n                        }\n                    }\n                    if (!foundReferenceRange) {\n                        // Cannot do linked editing if the ranges are not where the cursor is...\n                        this.clearRanges();\n                        return;\n                    }\n                    const decorations = ranges.map(range => ({ range: range, options: LinkedEditingContribution.DECORATION }));\n                    this._visibleContextKey.set(true);\n                    this._currentDecorations.set(decorations);\n                    this._syncRangesToken++; // cancel any pending syncRanges call\n                }\n                catch (err) {\n                    if (!isCancellationError(err)) {\n                        onUnexpectedError(err);\n                    }\n                    if (this._currentRequest === request || !this._currentRequest) {\n                        // stop if we are still the latest request\n                        this.clearRanges();\n                    }\n                }\n            }));\n            this._currentRequest = request;\n            return request;\n        });\n    }\n};\nLinkedEditingContribution.ID = 'editor.contrib.linkedEditing';\nLinkedEditingContribution.DECORATION = ModelDecorationOptions.register({\n    description: 'linked-editing',\n    stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n    className: DECORATION_CLASS_NAME\n});\nLinkedEditingContribution = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, ILanguageFeaturesService),\n    __param(3, ILanguageConfigurationService),\n    __param(4, ILanguageFeatureDebounceService)\n], LinkedEditingContribution);\nexport { LinkedEditingContribution };\nexport class LinkedEditingAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.linkedEditing',\n            label: nls.localize('linkedEditing.label', \"Start Linked Editing\"),\n            alias: 'Start Linked Editing',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 60 /* KeyCode.F2 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    runCommand(accessor, args) {\n        const editorService = accessor.get(ICodeEditorService);\n        const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\n        if (URI.isUri(uri) && Position.isIPosition(pos)) {\n            return editorService.openCodeEditor({ resource: uri }, editorService.getActiveCodeEditor()).then(editor => {\n                if (!editor) {\n                    return;\n                }\n                editor.setPosition(pos);\n                editor.invokeWithinContext(accessor => {\n                    this.reportTelemetry(accessor, editor);\n                    return this.run(accessor, editor);\n                });\n            }, onUnexpectedError);\n        }\n        return super.runCommand(accessor, args);\n    }\n    run(_accessor, editor) {\n        const controller = LinkedEditingContribution.get(editor);\n        if (controller) {\n            return Promise.resolve(controller.updateRanges(true));\n        }\n        return Promise.resolve();\n    }\n}\nconst LinkedEditingCommand = EditorCommand.bindToContribution(LinkedEditingContribution.get);\nregisterEditorCommand(new LinkedEditingCommand({\n    id: 'cancelLinkedEditingInput',\n    precondition: CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE,\n    handler: x => x.clearRanges(),\n    kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nfunction getLinkedEditingRanges(providers, model, position, token) {\n    const orderedByScore = providers.ordered(model);\n    // in order of score ask the linked editing range provider\n    // until someone response with a good result\n    // (good = not null)\n    return first(orderedByScore.map(provider => () => __awaiter(this, void 0, void 0, function* () {\n        try {\n            return yield provider.provideLinkedEditingRanges(model, position, token);\n        }\n        catch (e) {\n            onUnexpectedExternalError(e);\n            return undefined;\n        }\n    })), result => !!result && arrays.isNonEmptyArray(result === null || result === void 0 ? void 0 : result.ranges));\n}\nexport const editorLinkedEditingBackground = registerColor('editor.linkedEditingBackground', { dark: Color.fromHex('#f00').transparent(0.3), light: Color.fromHex('#f00').transparent(0.3), hcDark: Color.fromHex('#f00').transparent(0.3), hcLight: Color.white }, nls.localize('editorLinkedEditingBackground', 'Background color when the editor auto renames on type.'));\nregisterThemingParticipant((theme, collector) => {\n    const editorLinkedEditingBackgroundColor = theme.getColor(editorLinkedEditingBackground);\n    if (editorLinkedEditingBackgroundColor) {\n        collector.addRule(`.monaco-editor .${DECORATION_CLASS_NAME} { background: ${editorLinkedEditingBackgroundColor}; border-left-color: ${editorLinkedEditingBackgroundColor}; }`);\n    }\n});\nregisterModelAndPositionCommand('_executeLinkedEditingProvider', (_accessor, model, position) => {\n    const { linkedEditingRangeProvider } = _accessor.get(ILanguageFeaturesService);\n    return getLinkedEditingRanges(linkedEditingRangeProvider, model, position, CancellationToken.None);\n});\nregisterEditorContribution(LinkedEditingContribution.ID, LinkedEditingContribution);\nregisterEditorAction(LinkedEditingAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore, isDisposable } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class Link {\n    constructor(link, provider) {\n        this._link = link;\n        this._provider = provider;\n    }\n    toJSON() {\n        return {\n            range: this.range,\n            url: this.url,\n            tooltip: this.tooltip\n        };\n    }\n    get range() {\n        return this._link.range;\n    }\n    get url() {\n        return this._link.url;\n    }\n    get tooltip() {\n        return this._link.tooltip;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._link.url) {\n                return this._link.url;\n            }\n            if (typeof this._provider.resolveLink === 'function') {\n                return Promise.resolve(this._provider.resolveLink(this._link, token)).then(value => {\n                    this._link = value || this._link;\n                    if (this._link.url) {\n                        // recurse\n                        return this.resolve(token);\n                    }\n                    return Promise.reject(new Error('missing'));\n                });\n            }\n            return Promise.reject(new Error('missing'));\n        });\n    }\n}\nexport class LinksList {\n    constructor(tuples) {\n        this._disposables = new DisposableStore();\n        let links = [];\n        for (const [list, provider] of tuples) {\n            // merge all links\n            const newLinks = list.links.map(link => new Link(link, provider));\n            links = LinksList._union(links, newLinks);\n            // register disposables\n            if (isDisposable(list)) {\n                this._disposables.add(list);\n            }\n        }\n        this.links = links;\n    }\n    dispose() {\n        this._disposables.dispose();\n        this.links.length = 0;\n    }\n    static _union(oldLinks, newLinks) {\n        // reunite oldLinks with newLinks and remove duplicates\n        const result = [];\n        let oldIndex;\n        let oldLen;\n        let newIndex;\n        let newLen;\n        for (oldIndex = 0, newIndex = 0, oldLen = oldLinks.length, newLen = newLinks.length; oldIndex < oldLen && newIndex < newLen;) {\n            const oldLink = oldLinks[oldIndex];\n            const newLink = newLinks[newIndex];\n            if (Range.areIntersectingOrTouching(oldLink.range, newLink.range)) {\n                // Remove the oldLink\n                oldIndex++;\n                continue;\n            }\n            const comparisonResult = Range.compareRangesUsingStarts(oldLink.range, newLink.range);\n            if (comparisonResult < 0) {\n                // oldLink is before\n                result.push(oldLink);\n                oldIndex++;\n            }\n            else {\n                // newLink is before\n                result.push(newLink);\n                newIndex++;\n            }\n        }\n        for (; oldIndex < oldLen; oldIndex++) {\n            result.push(oldLinks[oldIndex]);\n        }\n        for (; newIndex < newLen; newIndex++) {\n            result.push(newLinks[newIndex]);\n        }\n        return result;\n    }\n}\nexport function getLinks(providers, model, token) {\n    const lists = [];\n    // ask all providers for links in parallel\n    const promises = providers.ordered(model).reverse().map((provider, i) => {\n        return Promise.resolve(provider.provideLinks(model, token)).then(result => {\n            if (result) {\n                lists[i] = [result, provider];\n            }\n        }, onUnexpectedExternalError);\n    });\n    return Promise.all(promises).then(() => {\n        const result = new LinksList(coalesce(lists));\n        if (!token.isCancellationRequested) {\n            return result;\n        }\n        result.dispose();\n        return new LinksList([]);\n    });\n}\nCommandsRegistry.registerCommand('_executeLinkProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    let [uri, resolveCount] = args;\n    assertType(uri instanceof URI);\n    if (typeof resolveCount !== 'number') {\n        resolveCount = 0;\n    }\n    const { linkProvider } = accessor.get(ILanguageFeaturesService);\n    const model = accessor.get(IModelService).getModel(uri);\n    if (!model) {\n        return [];\n    }\n    const list = yield getLinks(linkProvider, model, CancellationToken.None);\n    if (!list) {\n        return [];\n    }\n    // resolve links\n    for (let i = 0; i < Math.min(resolveCount, list.links.length); i++) {\n        yield list.links[i].resolve(CancellationToken.None);\n    }\n    const result = list.links.slice(0);\n    list.dispose();\n    return result;\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as resources from '../../../../base/common/resources.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport './links.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { getLinks } from './getLinks.js';\nimport * as nls from '../../../../nls.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { editorActiveLinkForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nlet LinkDetector = class LinkDetector extends Disposable {\n    constructor(editor, openerService, notificationService, languageFeaturesService, languageFeatureDebounceService) {\n        super();\n        this.editor = editor;\n        this.openerService = openerService;\n        this.notificationService = notificationService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.providers = this.languageFeaturesService.linkProvider;\n        this.debounceInformation = languageFeatureDebounceService.for(this.providers, 'Links', { min: 1000, max: 4000 });\n        this.computeLinks = this._register(new RunOnceScheduler(() => this.computeLinksNow(), 1000));\n        this.computePromise = null;\n        this.activeLinksList = null;\n        this.currentOccurrences = {};\n        this.activeLinkDecorationId = null;\n        const clickLinkGesture = this._register(new ClickLinkGesture(editor));\n        this._register(clickLinkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent]) => {\n            this._onEditorMouseMove(mouseEvent, keyboardEvent);\n        }));\n        this._register(clickLinkGesture.onExecute((e) => {\n            this.onEditorMouseUp(e);\n        }));\n        this._register(clickLinkGesture.onCancel((e) => {\n            this.cleanUpActiveLinkDecoration();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!e.hasChanged(65 /* EditorOption.links */)) {\n                return;\n            }\n            // Remove any links (for the getting disabled case)\n            this.updateDecorations([]);\n            // Stop any computation (for the getting disabled case)\n            this.stop();\n            // Start computing (for the getting enabled case)\n            this.computeLinks.schedule(0);\n        }));\n        this._register(editor.onDidChangeModelContent((e) => {\n            if (!this.editor.hasModel()) {\n                return;\n            }\n            this.computeLinks.schedule(this.debounceInformation.get(this.editor.getModel()));\n        }));\n        this._register(editor.onDidChangeModel((e) => {\n            this.currentOccurrences = {};\n            this.activeLinkDecorationId = null;\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this._register(editor.onDidChangeModelLanguage((e) => {\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this._register(this.providers.onDidChange((e) => {\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this.computeLinks.schedule(0);\n    }\n    static get(editor) {\n        return editor.getContribution(LinkDetector.ID);\n    }\n    computeLinksNow() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.editor.hasModel() || !this.editor.getOption(65 /* EditorOption.links */)) {\n                return;\n            }\n            const model = this.editor.getModel();\n            if (!this.providers.has(model)) {\n                return;\n            }\n            if (this.activeLinksList) {\n                this.activeLinksList.dispose();\n                this.activeLinksList = null;\n            }\n            this.computePromise = createCancelablePromise(token => getLinks(this.providers, model, token));\n            try {\n                const sw = new StopWatch(false);\n                this.activeLinksList = yield this.computePromise;\n                this.debounceInformation.update(model, sw.elapsed());\n                if (model.isDisposed()) {\n                    return;\n                }\n                this.updateDecorations(this.activeLinksList.links);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                this.computePromise = null;\n            }\n        });\n    }\n    updateDecorations(links) {\n        const useMetaKey = (this.editor.getOption(72 /* EditorOption.multiCursorModifier */) === 'altKey');\n        const oldDecorations = [];\n        const keys = Object.keys(this.currentOccurrences);\n        for (const decorationId of keys) {\n            const occurence = this.currentOccurrences[decorationId];\n            oldDecorations.push(occurence.decorationId);\n        }\n        const newDecorations = [];\n        if (links) {\n            // Not sure why this is sometimes null\n            for (const link of links) {\n                newDecorations.push(LinkOccurrence.decoration(link, useMetaKey));\n            }\n        }\n        this.editor.changeDecorations((changeAccessor) => {\n            const decorations = changeAccessor.deltaDecorations(oldDecorations, newDecorations);\n            this.currentOccurrences = {};\n            this.activeLinkDecorationId = null;\n            for (let i = 0, len = decorations.length; i < len; i++) {\n                const occurence = new LinkOccurrence(links[i], decorations[i]);\n                this.currentOccurrences[occurence.decorationId] = occurence;\n            }\n        });\n    }\n    _onEditorMouseMove(mouseEvent, withKey) {\n        const useMetaKey = (this.editor.getOption(72 /* EditorOption.multiCursorModifier */) === 'altKey');\n        if (this.isEnabled(mouseEvent, withKey)) {\n            this.cleanUpActiveLinkDecoration(); // always remove previous link decoration as their can only be one\n            const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\n            if (occurrence) {\n                this.editor.changeDecorations((changeAccessor) => {\n                    occurrence.activate(changeAccessor, useMetaKey);\n                    this.activeLinkDecorationId = occurrence.decorationId;\n                });\n            }\n        }\n        else {\n            this.cleanUpActiveLinkDecoration();\n        }\n    }\n    cleanUpActiveLinkDecoration() {\n        const useMetaKey = (this.editor.getOption(72 /* EditorOption.multiCursorModifier */) === 'altKey');\n        if (this.activeLinkDecorationId) {\n            const occurrence = this.currentOccurrences[this.activeLinkDecorationId];\n            if (occurrence) {\n                this.editor.changeDecorations((changeAccessor) => {\n                    occurrence.deactivate(changeAccessor, useMetaKey);\n                });\n            }\n            this.activeLinkDecorationId = null;\n        }\n    }\n    onEditorMouseUp(mouseEvent) {\n        if (!this.isEnabled(mouseEvent)) {\n            return;\n        }\n        const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\n        if (!occurrence) {\n            return;\n        }\n        this.openLinkOccurrence(occurrence, mouseEvent.hasSideBySideModifier, true /* from user gesture */);\n    }\n    openLinkOccurrence(occurrence, openToSide, fromUserGesture = false) {\n        if (!this.openerService) {\n            return;\n        }\n        const { link } = occurrence;\n        link.resolve(CancellationToken.None).then(uri => {\n            // Support for relative file URIs of the shape file://./relativeFile.txt or file:///./relativeFile.txt\n            if (typeof uri === 'string' && this.editor.hasModel()) {\n                const modelUri = this.editor.getModel().uri;\n                if (modelUri.scheme === Schemas.file && uri.startsWith(`${Schemas.file}:`)) {\n                    const parsedUri = URI.parse(uri);\n                    if (parsedUri.scheme === Schemas.file) {\n                        const fsPath = resources.originalFSPath(parsedUri);\n                        let relativePath = null;\n                        if (fsPath.startsWith('/./')) {\n                            relativePath = `.${fsPath.substr(1)}`;\n                        }\n                        else if (fsPath.startsWith('//./')) {\n                            relativePath = `.${fsPath.substr(2)}`;\n                        }\n                        if (relativePath) {\n                            uri = resources.joinPath(modelUri, relativePath);\n                        }\n                    }\n                }\n            }\n            return this.openerService.open(uri, { openToSide, fromUserGesture, allowContributedOpeners: true, allowCommands: true, fromWorkspace: true });\n        }, err => {\n            const messageOrError = err instanceof Error ? err.message : err;\n            // different error cases\n            if (messageOrError === 'invalid') {\n                this.notificationService.warn(nls.localize('invalid.url', 'Failed to open this link because it is not well-formed: {0}', link.url.toString()));\n            }\n            else if (messageOrError === 'missing') {\n                this.notificationService.warn(nls.localize('missing.url', 'Failed to open this link because its target is missing.'));\n            }\n            else {\n                onUnexpectedError(err);\n            }\n        });\n    }\n    getLinkOccurrence(position) {\n        if (!this.editor.hasModel() || !position) {\n            return null;\n        }\n        const decorations = this.editor.getModel().getDecorationsInRange({\n            startLineNumber: position.lineNumber,\n            startColumn: position.column,\n            endLineNumber: position.lineNumber,\n            endColumn: position.column\n        }, 0, true);\n        for (const decoration of decorations) {\n            const currentOccurrence = this.currentOccurrences[decoration.id];\n            if (currentOccurrence) {\n                return currentOccurrence;\n            }\n        }\n        return null;\n    }\n    isEnabled(mouseEvent, withKey) {\n        return Boolean((mouseEvent.target.type === 6 /* MouseTargetType.CONTENT_TEXT */)\n            && (mouseEvent.hasTriggerModifier || (withKey && withKey.keyCodeIsTriggerKey)));\n    }\n    stop() {\n        var _a;\n        this.computeLinks.cancel();\n        if (this.activeLinksList) {\n            (_a = this.activeLinksList) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.activeLinksList = null;\n        }\n        if (this.computePromise) {\n            this.computePromise.cancel();\n            this.computePromise = null;\n        }\n    }\n    dispose() {\n        super.dispose();\n        this.stop();\n    }\n};\nLinkDetector.ID = 'editor.linkDetector';\nLinkDetector = __decorate([\n    __param(1, IOpenerService),\n    __param(2, INotificationService),\n    __param(3, ILanguageFeaturesService),\n    __param(4, ILanguageFeatureDebounceService)\n], LinkDetector);\nexport { LinkDetector };\nconst decoration = {\n    general: ModelDecorationOptions.register({\n        description: 'detected-link',\n        stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n        collapseOnReplaceEdit: true,\n        inlineClassName: 'detected-link'\n    }),\n    active: ModelDecorationOptions.register({\n        description: 'detected-link-active',\n        stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n        collapseOnReplaceEdit: true,\n        inlineClassName: 'detected-link-active'\n    })\n};\nclass LinkOccurrence {\n    constructor(link, decorationId) {\n        this.link = link;\n        this.decorationId = decorationId;\n    }\n    static decoration(link, useMetaKey) {\n        return {\n            range: link.range,\n            options: LinkOccurrence._getOptions(link, useMetaKey, false)\n        };\n    }\n    static _getOptions(link, useMetaKey, isActive) {\n        const options = Object.assign({}, (isActive ? decoration.active : decoration.general));\n        options.hoverMessage = getHoverMessage(link, useMetaKey);\n        return options;\n    }\n    activate(changeAccessor, useMetaKey) {\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, true));\n    }\n    deactivate(changeAccessor, useMetaKey) {\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, false));\n    }\n}\nfunction getHoverMessage(link, useMetaKey) {\n    const executeCmd = link.url && /^command:/i.test(link.url.toString());\n    const label = link.tooltip\n        ? link.tooltip\n        : executeCmd\n            ? nls.localize('links.navigate.executeCmd', 'Execute command')\n            : nls.localize('links.navigate.follow', 'Follow link');\n    const kb = useMetaKey\n        ? platform.isMacintosh\n            ? nls.localize('links.navigate.kb.meta.mac', \"cmd + click\")\n            : nls.localize('links.navigate.kb.meta', \"ctrl + click\")\n        : platform.isMacintosh\n            ? nls.localize('links.navigate.kb.alt.mac', \"option + click\")\n            : nls.localize('links.navigate.kb.alt', \"alt + click\");\n    if (link.url) {\n        let nativeLabel = '';\n        if (/^command:/i.test(link.url.toString())) {\n            // Don't show complete command arguments in the native tooltip\n            const match = link.url.toString().match(/^command:([^?#]+)/);\n            if (match) {\n                const commandId = match[1];\n                nativeLabel = nls.localize('tooltip.explanation', \"Execute command {0}\", commandId);\n            }\n        }\n        const hoverMessage = new MarkdownString('', true)\n            .appendLink(link.url.toString(true).replace(/ /g, '%20'), label, nativeLabel)\n            .appendMarkdown(` (${kb})`);\n        return hoverMessage;\n    }\n    else {\n        return new MarkdownString().appendText(`${label} (${kb})`);\n    }\n}\nclass OpenLinkAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.openLink',\n            label: nls.localize('label', \"Open Link\"),\n            alias: 'Open Link',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const linkDetector = LinkDetector.get(editor);\n        if (!linkDetector) {\n            return;\n        }\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections();\n        for (const sel of selections) {\n            const link = linkDetector.getLinkOccurrence(sel.getEndPosition());\n            if (link) {\n                linkDetector.openLinkOccurrence(link, false);\n            }\n        }\n    }\n}\nregisterEditorContribution(LinkDetector.ID, LinkDetector);\nregisterEditorAction(OpenLinkAction);\nregisterThemingParticipant((theme, collector) => {\n    const activeLinkForeground = theme.getColor(editorActiveLinkForeground);\n    if (activeLinkForeground) {\n        collector.addRule(`.monaco-editor .detected-link-active { color: ${activeLinkForeground} !important; }`);\n    }\n});\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","HoverProviderResult","provider","hover","ordinal","this","getHover","registry","model","position","token","promises","ordered","map","index","provideHover","isValid","onUnexpectedExternalError","undefined","executeProvider","AsyncIterableObject","coalesce","hasRange","range","hasHtmlContent","contents","length","registerModelAndPositionCommand","accessor","item","toPromise","getHoverPromise","get","ILanguageFeaturesService","hoverProvider","CancellationToken","__asyncValues","o","Symbol","asyncIterator","TypeError","i","m","call","__values","iterator","verb","n","v","d","settle","HoverResult","isComplete","hasLoadingMessage","HoverOperation","_editor","_computer","_onResult","_register","Emitter","onResult","event","_firstWaitScheduler","RunOnceScheduler","_triggerAsyncComputation","_secondWaitScheduler","_triggerSyncComputation","_loadingMessageScheduler","_triggerLoadingMessage","_state","_asyncIterable","_asyncIterableDone","_result","cancel","getOption","delay","_hoverTime","_firstWaitTime","state","fireResult","_fireResult","_setState","schedule","_secondWaitTime","computeAsync","createCancelableAsyncIterable","_b","_c","push","e_1","error","_a","return","onUnexpectedError","computeSync","concat","fire","slice","mode","_loadingMessageTime","Disposable","__decorate","decorators","target","key","desc","c","arguments","r","Object","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","$","dom","ContentHoverController","_instantiationService","_keybindingService","_widget","createInstance","ContentHoverWidget","_isChangingDecorations","_messages","_messagesAreComplete","_participants","HoverParticipantRegistry","participant","sort","p1","p2","hoverOrdinal","ContentHoverComputer","_hoverOperation","_withResult","onDidChangeModelDecorations","_onModelDecorationsChanged","addStandardDisposableListener","getDomNode","equals","hide","TokenizationRegistry","anchor","clear","_renderMessages","isColorPickerVisible","start","mouseEvent","anchorCandidates","suggestHoverAnchor","type","HoverRangeAnchor","epsilon","typicalHalfwidthCharacterWidth","detail","isAfterLines","horizontalDistanceToText","a","b","priority","_startShowingAt","focus","canAdoptVisibleHover","filteredMessages","filter","isValidForHoverAnchor","shouldFocus","node","contains","createLoadingMessage","loadingMessage","_addLoadingMessage","messages","computeHoverRanges","showAtPosition","showAtRange","highlightRange","disposables","DisposableStore","statusBar","add","EditorHoverStatusBar","fragment","document","createDocumentFragment","colorPicker","context","setColorPicker","widget","onContentsChanged","hoverParts","msg","owner","renderHoverParts","hasContent","appendChild","hoverElement","hasChildNodes","highlightDecoration","createDecorationsCollection","set","options","_DECORATION_OPTIONS","toDisposable","showAt","ContentHoverVisibleData","above","dispose","anchorRange","anchorLineNumber","startLineNumber","renderStartColumn","startColumn","renderEndColumn","endColumn","forceShowAtRange","Range","endLineNumber","Math","min","max","getStartPosition","Position","ModelDecorationOptions","description","className","IInstantiationService","IKeybindingService","preferAbove","stoleFocus","_contextKeyService","allowEditorOverflow","_hoverVisibleKey","EditorContextKeys","_hover","HoverWidget","_visibleData","onDidLayoutChange","_layout","onDidChangeConfiguration","hasChanged","_updateFont","_setVisibleData","addContentWidget","Boolean","removeContentWidget","ID","containerDomNode","getContextKeyValue","SuggestContext","preference","visibleData","classList","toggle","height","getLayoutInfo","fontSize","lineHeight","contentsDomNode","style","maxHeight","maxWidth","width","Array","prototype","getElementsByClassName","forEach","applyFontInfo","textContent","paddingBottom","render","layout","layoutContentWidget","scrollDimensions","scrollbar","getScrollDimensions","scrollWidth","extraBottomPadding","horizontalScrollbarSize","IContextKeyService","_hasContent","actionsElement","append","actionOptions","keybinding","lookupKeybinding","commandId","keybindingLabel","getLabel","HoverAction","element","_anchor","_shouldFocus","hasModel","lineDecorations","_getLineDecorations","editor","getModel","lineNumber","getLineCount","maxColumn","getLineMaxColumn","getLineDecorations","isWholeLine","showIfCollapsed","MarginHoverWidget","languageService","openerService","NullOpenerService","_renderDisposeables","_isVisible","_markdownRenderer","MarkdownRenderer","MarginHoverComputer","addOverlayWidget","removeOverlayWidget","markdownHoverElement","hoverContentsElement","renderedContents","_updateContents","_showAt","editorLayout","topForLineNumber","getTopForLineNumber","editorScrollTop","getScrollTop","top","clientHeight","left","glyphMarginLeft","glyphMarginWidth","round","_lineNumber","toHoverMessage","glyphMarginClassName","hoverMessage","glyphMarginHoverMessage","isEmptyMarkdownString","asArray","MarkerHover","marker","markerCodeActionTrigger","include","CodeActionKind","triggerAction","CodeActionTriggerSource","MarkerHoverParticipant","_markerDecorationsService","_openerService","_languageFeaturesService","recentMarkerCodeActionsInfo","getMarker","uri","renderMarkerHover","markerHoverForStatusbar","MarkerSeverity","severity","renderMarkerStatusbar","markerHover","markerElement","source","message","code","relatedInformation","messageElement","whiteSpace","innerText","sourceAndCodeElement","codeLink","setAttribute","toString","addDisposableListener","open","allowCommands","preventDefault","stopPropagation","detailsElement","opacity","paddingLeft","isNonEmptyArray","resource","relatedInfoContainer","marginTop","basename","cursor","fromUserGesture","editorOptions","selection","catch","addAction","label","nls","NextMarkerAction","run","MarkerController","showAtMarker","quickfixPlaceholderElement","IMarkerData","hasCodeActions","updatePlaceholderDisposable","disposableTimeout","String","fromCharCode","codeActionsPromise","getCodeActions","actions","validActions","display","showing","QuickFixAction","controller","QuickFixController","elementPosition","getDomNodePagePosition","showCodeActions","x","y","createCancelablePromise","cancellationToken","codeActionProvider","Progress","IMarkerDecorationsService","IOpenerService","registerThemingParticipant","theme","collector","linkFg","getColor","textLinkForeground","addRule","activeLinkFg","textLinkActiveForeground","ModesHoverController","_languageService","_toUnhook","_isMouseDown","_hoverClicked","_contentWidget","_glyphWidget","_hookEvents","_didChangeConfigurationHandler","_unhookEvents","hoverOpts","_isHoverEnabled","enabled","_isHoverSticky","sticky","onMouseDown","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onMouseMove","_onEditorMouseMove","onKeyDown","_onKeyDown","onMouseLeave","_onEditorMouseLeave","onDidChangeModel","_hideWidgets","onDidScrollChange","_onEditorScrollChanged","scrollTopChanged","scrollLeftChanged","targetEm","browserEvent","relatedTarget","containsNode","_d","_e","view","getSelection","isCollapsed","_getOrCreateContentWidget","maybeShowAt","startShowingAt","keyCode","startShowingAtRange","getContribution","ILanguageService","ShowHoverAction","id","comment","alias","precondition","kbOpts","kbExpr","primary","KeyChord","weight","getPosition","column","showContentHover","EditorAction","ShowDefinitionPreviewHoverAction","goto","GotoDefinitionAtPositionEditorContribution","startFindDefinitionFromCursor","registerEditorContribution","registerEditorAction","MarkdownHoverParticipant","editorHoverHighlightColor","editorHoverHighlight","hoverBackground","editorHoverBackground","hoverBorder","editorHoverBorder","transparent","link","linkHover","hoverForeground","editorHoverForeground","actionsBackground","editorHoverStatusBarBackground","codeBackground","textCodeBlockBackground","other","equalsRange","lastAnchor","HoverForeignElementAnchor","ctor","MarkdownHover","_configurationService","MarkdownString","appendText","lineLength","getLineLength","languageId","getLanguageIdAtPosition","maxTokenizationLineLength","getValue","overrideIdentifier","has","rng","renderMarkdownHovers","hoverPart","renderer","onDidRenderAsync","IConfigurationService","InPlaceReplaceCommand","editRange","originalSelection","text","_editRange","_originalSelection","_text","builder","addTrackedEditOperation","helper","srcRange","getInverseEditOperations","isEmpty","Selection","positionColumn","InPlaceReplaceController","editorWorkerService","decorations","up","currentRequest","editorSelection","EditorState","modelURI","canNavigateValueSet","navigateValueSet","validate","diff","command","pushUndoStop","executeCommand","DECORATION","decorationRemover","timeout","IEditorWorkerService","InPlaceReplaceUp","InPlaceReplaceDown","border","editorBracketMatchBorder","getSpaceCnt","str","tabSize","spacesCnt","charAt","generateIndent","insertSpaces","tabsCnt","floor","getReindentEditOperations","languageConfigurationService","inheritedIndent","indentationRules","getLanguageConfiguration","getLanguageId","unIndentedLinePattern","getLineContent","test","globalIndent","getOptions","indentSize","shiftIndent","indentation","count","ShiftCommand","unshiftIndent","indentEdits","currentLineText","adjustedLineContent","oldIndentation","strings","substring","decreaseIndentPattern","EditOperation","normalizeIndentation","idealIndentForNextLine","increaseIndentPattern","indentNextLinePattern","IndentationToSpacesAction","modelOpts","IndentationToSpacesCommand","executeCommands","updateOptions","IndentationToTabsAction","IndentationToTabsCommand","ChangeIndentationSizeAction","opts","quickInputService","IQuickInputService","modelService","IModelService","creationOpts","getCreationOptions","isForSimpleWidget","picks","autoFocusIndex","setTimeout","pick","placeHolder","activeItem","isDisposed","parseInt","IndentUsingTabs","IndentUsingSpaces","DetectIndentation","detectIndentation","ReindentLinesAction","ILanguageConfigurationService","edits","executeEdits","ReindentSelectedLinesAction","selections","getSelections","editOperations","AutoIndentOnPasteCommand","initialSelection","_initialSelection","_edits","_selectionId","edit","addEditOperation","selectionIsSet","isArray","trackSelection","getTrackedSelection","AutoIndentOnPaste","_languageConfigurationService","callOnDispose","callOnModel","update","onDidChangeModelLanguage","onDidPaste","trigger","tokenization","isCheapToTokenize","autoIndent","textEdits","indentConverter","shouldIgnoreLine","firstLineText","indentOfFirstLine","getGoodIndentForLine","newSpaceCnt","indentUtils","newIndent","substr","indentMetadata","getIndentMetadata","firstLineNumber","virtualModel","getLineTokens","indentOfSecondLine","newSpaceCntOfSecondLine","oldSpaceCntOfSecondLine","spaceCntOffset","lineContent","originalIndent","newSpacesCnt","cmd","forceTokenization","nonWhitespaceColumn","getLineFirstNonWhitespaceColumn","tokens","getCount","firstNonWhitespaceTokenIndex","findTokenIndexAtOffset","getStandardTokenType","getIndentationEditOperations","tabsToSpaces","spaces","spacesRegExp","RegExp","lineCount","lastIndentationColumn","originalIndentationRange","originalIndentation","getValueInRange","newIndentation","replace","selectionId","InlayHintAnchor","direction","InlayHintItem","hint","_isResolved","delta","_currentResolve","resolveInlayHint","isCancellationRequested","_doResolve","finally","newHint","tooltip","InlayHintsFragments","ranges","data","_disposables","Set","items","list","hints","validatePosition","wordRange","_getRangeAtPosition","isBefore","getEndPosition","reverse","provideInlayHints","all","flat","CancellationError","line","word","getWordAtPosition","tokenizeIfCheap","offset","idx","getStartOffset","end","getEndOffset","showGoToContextMenu","part","resolverService","ITextModelService","contextMenuService","IContextMenuService","commandService","ICommandService","instaService","notificationService","INotificationService","location","menuActions","MenuRegistry","MenuId","isIMenuItem","EditorExtensionsRegistry","delegate","SymbolNavigationAction","Action","createModelReference","ref","invokeFunction","bind","SymbolNavigationAnchor","object","textEditorModel","Separator","title","notify","Severity","displayName","useShadowDOM","showContextMenu","domForShadowRoot","getAnchor","box","getActions","onHide","autoSelectFirstItem","goToDefinitionWithLocation","invokeWithinContext","openToSide","hasSideBySideModifier","contextKeyService","isInPeek","PeekContext","canPeek","action","DefinitionAction","openInPeek","muteMessage","InlayHintsCache","_entries","LRUCache","_key","getVersionId","IInlayHintsCache","createDecorator","registerSingleton","RenderedInlayHintLabelPart","ActiveInlayHintInfo","hasTriggerModifier","InlayHintsController","_featureDebounce","_inlayHintsCache","_commandService","_notificationService","_instaService","_sessionDisposables","_decorationsMetadata","Map","_ruleFactory","DynamicCssRules","_activeRenderMode","_debounceInfo","for","inlayHintsProvider","onDidChange","_update","_removeAllDecorations","cts","cached","_updateHintsDecorators","getFullModelRange","_cacheHintsForFastRestore","defaultMode","altMode","watchedProviders","scheduler","t1","Date","now","CancellationTokenSource","listener","onWillDispose","myToken","create","_getHintsRanges","inlayHints","onDidChangeInlayHints","isScheduled","onDidChangeModelContent","ModifierKeyEmitter","newRenderMode","altKey","ctrlKey","copies","_copyInlayHintsWithCurrentAnchor","_installDblClickGesture","_installLinkGesture","_installContextMenu","store","gesture","ClickLinkGesture","sessionStore","onMouseMoveOrRelevantKeyDown","labelPart","_getInlayHintLabelPart","_activeInlayHintPart","lineHints","_getInlineHintsForRange","onCancel","onExecute","languages","_invokeCommand","values","containsRange","from","updateInlayHints","onContextMenu","HTMLElement","injectedText","ModelDecorationInjectedTextOptions","attachedData","obj","getDecorationRange","copy","with","visibleRanges","getVisibleRangesPlusViewportAboveBelow","extendedRange","validateRange","newDecorationsData","addInjectedText","content","cursorStops","inlineClassNameAffectsLetterSpacing","inlineClassName","classNameRef","decoration","collapseOnReplaceEdit","stickiness","addInjectedWhitespace","isLast","marginRule","createClassNameRef","InjectedTextCursorStops","_getLayoutInfo","fontFamily","padding","isUniform","fontFamilyVar","getContainerDomNode","setProperty","parts","isFirst","cssProperties","EDITOR_FONT_DEFAULTS","verticalAlign","_fillInColors","textDecoration","color","themeColorFromId","colors","borderRadius","fixSpace","paddingRight","_MAX_DECORATORS","decorationIdsToReplace","getDecorationsInRange","metadata","delete","changeDecorations","newDecorationIds","deltaDecorations","props","kind","backgroundColor","editorFontSize","editorFontFamily","removeDecorations","keys","ILanguageFeatureDebounceService","CommandsRegistry","args","assertType","URI","InlayHintsHoverAnchor","InlayHintsHover","configurationService","_resolverService","languageFeaturesService","_lineDecorations","executor","itemTooltip","emitOne","localize","partTooltip","useMetaKey","kb","platform","linkHint","scheme","Schemas","path","query","encodeURIComponent","JSON","stringify","isTrusted","_resolveInlayHintLabelPartHover","iterable","iterable_1","iterable_1_1","inlineSuggestCommitId","PositionOffsetTransformer","lineStartOffsetByLineIdx","array","getReadonlyEmptyArray","GhostText","additionalReservedLineCount","lineText","lastPart","transformer","offsetEdits","startOffset","getOffset","endOffset","applyEdits","p","lines","join","every","GhostTextPart","preview","GhostTextReplacement","columnStart","newLines","_lineText","BaseGhostTextWidgetModel","_expanded","onDidChangeEmitter","expanded","minimizeInlineCompletion","inlineCompletion","valueToReplace","commonPrefixLen","insertText","getOffsetAt","getPositionAt","remainingValueToReplace","commonSuffixLen","snippetInfo","filterText","additionalTextEdits","inlineCompletionToGhostText","textModel","cursorPosition","previewSuffixLength","sourceLine","sourceIndentationLength","suggestionTouchesIndentation","suggestionAddedIndentationLength","replacedIndentation","rangeThatDoesNotReplaceIndentation","suggestionWithoutIndentationChange","startsWith","valueToBeReplaced","changes","cachingDiff","filteredChanges","originalLength","originalStart","previewStartInCompletionText","insertColumn","modifiedLength","modifiedEnd","modifiedStart","nonPreviewTextEnd","nonPreviewText","italicText","lastRequest","originalValue","newValue","smartDiff","deletedChars","deletedCharacters","newChanges","sum","smartBracketMatching","maxCharCode","getMaxCharCode","elements1","getElements","elements2","LcsDiff","ComputeDiff","val","len","charCode","charCodeAt","getUniqueCharCode","Error","level","group","characters","Int32Array","InlineCompletionsModel","cache","debounceService","completionSession","MutableDisposable","active","disposed","debounceValue","inlineCompletionsProvider","onDidExecuteCommand","CoreEditingCommands","hasTextFocus","handleUserInput","onDidType","onDidChangeCursorPosition","reason","session","onDidBlurEditorWidget","startSessionIfTriggered","ghostText","minReservedLineCount","setExpanded","scheduleAutomaticUpdate","InlineCompletionTriggerKind","triggerKind","ensureUpdateWithExplicitContext","InlineCompletionsSession","takeOwnership","commitCurrentCompletion","showNextInlineCompletion","showPreviousInlineCompletion","hasMultipleInlineCompletions","triggerPosition","shouldUpdate","initialTriggerKind","debounce","updateOperation","updateSoon","filteredCompletions","currentlySelectedCompletionId","lastCompletionItem","currentCompletion","sourceInlineCompletion","sourceProvider","handleItemDidShow","sourceInlineCompletions","updateRanges","updateFilteredInlineCompletions","completions","synchronizedRange","toLowerCase","indent","getLineIndentColumn","cursorPosIndex","filterTextBefore","filterTextAfter","originalValueBefore","originalValueAfter","trimStart","matchesSubString","findIndex","semanticId","fixAndGetIndexOfCurrentSelection","newIdx","promise","split","completion","currentCachedCompletion","toLiveInlineCompletion","startTime","provideInlineCompletions","selectedSuggestionInfo","endTime","getTime","setValue","operation","UpdateOperation","disposable","commit","clearAndLeak","setPosition","SnippetController2","insert","snippet","lists","flatMap","l","commands","SynchronizedInlineCompletionsCache","completionsSource","onChange","isDisposing","decorationIds","changeAccessor","CachedInlineCompletion","newRange","decorationId","abbreviation","startLine","defaultReplaceRange","getDefaultRange","providers","freeInlineCompletions","results","itemsByHash","completeBracketPairs","closeBrackets","SnippetParser","parse","assertNever","trackedItem","newLine","newTokens","tokenizeLineWithEdit","slicedTokens","sliceAndInflate","fixBracketsInLine","SuggestWidgetInlineCompletionProvider","suggestControllerPreselector","isSuggestWidgetVisible","isShiftKeyPressed","_isActive","_currentSuggestItemInfo","setInactiveDelayed","shiftKey","onKeyUp","suggestController","SuggestController","registerSelector","select","pos","suggestItems","normalizedItemToPreselect","candidates","suggestItem","rangeToTest","prefix","inlineSuggestItem","suggestionToSuggestItemInfo","normalizedSuggestItem","normalizedInlineCompletion","valid","prefixLength","findMaxBy","compareBy","s","numberComparator","isBoundToSuggestWidget","Event","onDidTrigger","onDidShow","onDidHide","onDidFocus","selectedItem","newActive","newInlineCompletion","getSuggestItemInfo","shouldFire","completionItemKind","isSnippetText","normalizedInlineCompletionsEquals","suggestItemInfoEquals","focusedItem","getFocusedItem","stopForceRenderingAbove","forceRenderingAbove","toggleMode","insertTextRules","children","SnippetSession","info","getOverwriteInfo","overwriteBefore","overwriteAfter","SuggestWidgetPreviewModel","suggestionInlineCompletionSource","updateCacheSoon","updateCache","newGhostText","reduce","completionKind","isSuggestionPreviewEnabled","augmentedCompletion","suggestWidgetState","suggestInlineCompletion","isAugmentedCompletionValid","finalCompletion","inlineCompletionPreviewLength","toGhostText","previewMode","DelegatingModel","hasCachedGhostText","currentModelRef","cachedGhostText","targetModel","GhostTextModel","instantiationService","sharedCache","SharedInlineCompletionCache","suggestWidgetAdapterModel","inlineCompletionsModel","updateModel","setTargetModel","isActive","setActive","hoverRange","activeInlineCompletionsModel","some","containsPosition","commitCurrentSuggestion","showNext","showPrevious","ttPolicy","window","trustedTypes","createPolicy","createHTML","GhostTextWidget","partsWidget","DecorationsWidget","additionalLinesWidget","AdditionalLinesWidget","languageIdCodec","viewMoreContentWidget","replacementDecoration","DisposableDecorations","viewZoneId","inlineTexts","additionalLines","addToAdditionalLines","lastLine","LineDecoration","setDecorations","textBufferLine","hiddenTextStartColumn","lastIdx","setParts","updateLines","remainingLinesLength","fontInfo","domNode","createElement","spacer","newline","disposableStore","button","ViewMoreLinesContentWidget","hiddenText","hiddenTextDecorations","after","_viewZoneId","changeViewZones","removeZone","heightInLines","disableMonospaceOptimizations","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","sb","createStringBuilder","appendASCIIString","lineData","isBasicASCII","containsRTL","lineTokens","LineTokens","renderViewLine","RenderLineInput","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","EditorFontLigatures","html","build","trustedhtml","innerHTML","renderLines","addZone","afterLineNumber","afterColumnAffinity","suppressMouseDown","foreground","ghostTextForeground","background","ghostTextBackground","ghostTextBorder","GhostTextController","triggeredExplicitly","activeController","activeModelDidChangeEmitter","updateModelController","suggestOptions","inlineSuggestOptions","ActiveGhostTextController","activeModel","shouldShowHoverAt","shouldShowHoverAtViewZone","triggerInlineCompletion","commitInlineCompletion","hideInlineCompletion","inlineSuggestionVisible","RawContextKey","inlineSuggestionHasIndentation","inlineSuggestionHasIndentationLessThanTabSize","GhostTextContextKeys","inlineCompletionVisible","bindTo","inlineCompletionSuggestsIndentation","inlineCompletionSuggestsIndentationLessThanTabSize","contextKeys","updateContextKeys","startsWithIndentation","startsWithIndentationLessThanTabSize","firstLine","firstNonWsIdx","firstNonWhitespaceIndex","CursorColumns","ShowNextInlineSuggestionAction","ContextKeyExpr","ShowPreviousInlineSuggestionAction","TriggerInlineSuggestionAction","InlineCompletionsHover","InlineCompletionsHoverParticipant","_menuService","accessibilityService","viewZoneData","positionBefore","mightBeForeignElement","isScreenReaderOptimized","renderScreenReaderText","menu","createMenu","previousAction","nextAction","setEnabled","hasMultipleSuggestions","hasMore","MenuItemAction","inlineSuggestionAvailable","appendCodeblock","replaceChildren","renderForScreenReader","IMenuService","IAccessibilityService","GhostTextCommand","EditorCommand","commitInlineSuggestionAction","handler","registerEditorCommand","KeybindingsRegistry","when","ExpandLineSelectionAction","_accessor","viewModel","_getViewModel","pushStackElement","setCursorStates","CursorMoveCommands","getCursorStates","revealPrimaryCursor","CopyLinesCommand","isCopyingDown","noop","_selection","_isCopyingDown","_noop","_selectionDirection","_startLineNumberDelta","_endLineNumberDelta","setEndPosition","sourceLines","sourceText","getDirection","MoveLinesCommand","isMovingDown","_isMovingDown","_autoIndent","_moveEndLineSelectionShrink","modelLineCount","_moveEndPositionDown","buildIndentConverter","otherLineNumber","movingLineNumber","movingLineText","insertingText","shouldAutoIndent","movingLineMatchResult","matchEnterRule","trimLeft","indentOfMovingLine","ret","matchEnterRuleMovingDown","getIndentEditsOfMovingBlock","newIndentatOfMovingBlock","oldSpaceCnt","oldIndent","enter","enterPrefix","indentAction","IndentAction","indexOf","indentMetadataOfMovelingLine","futureAboveLineNumber","futureAboveLineText","getEnterAction","parseEnterResult","validPrecedingLine","oneLineAbove","previousLineText","languageAtSelectionStart","indentRulesSupport","SortLinesCommand","descending","op","getSortData","sortLines","_COLLATOR","Intl","Collator","before","linesToSort","sorted","getCollator","compare","AbstractCopyLinesAction","down","ignore","prev","curr","CopyLinesUpAction","linux","menuOpts","menuId","order","CopyLinesDownAction","DuplicateSelectionAction","insertSelection","ReplaceCommandThatSelectsText","AbstractMoveLinesAction","MoveLinesUpAction","MoveLinesDownAction","AbstractSortLinesAction","canRun","SortLinesAscendingAction","SortLinesDescendingAction","DeleteDuplicateLinesAction","endCursorState","linesDeleted","uniqueLines","selectionToReplace","adjustedSelectionStart","finalSelection","TrimTrailingWhitespaceAction","cursors","positionLineNumber","TrimTrailingWhitespaceCommand","DeleteLinesAction","ops","_getLinesToRemove","cursorState","operations","selectionStartColumn","mergedOperations","previousOperation","IndentLinesAction","TypeOperations","cursorConfig","OutdentLinesAction","InsertLineBeforeAction","InsertLineAfterAction","AbstractDeleteAllToBoundaryAction","primaryCursor","rangesToDelete","_getRangesToDelete","effectiveRanges","nextRange","_getEndCursorState","DeleteAllLeftAction","mac","endPrimaryCursor","deletedLines","endCursor","newStartLine","intersectRanges","unshift","deleteFromLine","deleteFromColumn","DeleteAllRightAction","secondary","sel","JoinLinesAction","reducedSelections","lastSelection","previousValue","currentValue","equalsSelection","lineOffset","columnDeltaOffset","selectionEndPositionOffset","trimmedLinesContent","firstNonWhitespaceIdx","insertSpace","lineTextWithoutIndent","deleteSelection","resultSelection","TransposeAction","chars","ReplaceCommand","ReplaceCommandThatPreservesSelection","AbstractCaseAction","wordSeparators","getConfiguredWordAtPosition","_modifyText","UpperCaseAction","toLocaleUpperCase","LowerCaseAction","toLocaleLowerCase","BackwardsCompatibleRegExp","_pattern","_flags","_actual","_evaluated","err","TitleCaseAction","titleBoundary","SnakeCaseAction","caseBoundary","singleLetters","KebabCaseAction","_","underscoreBoundary","regexp","isSupported","CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE","DECORATION_CLASS_NAME","LinkedEditingContribution","languageFeatureDebounceService","_syncRangesToken","_localToDispose","_providers","linkedEditingRangeProvider","_enabled","_visibleContextKey","_debounceInformation","_currentDecorations","_languageWordPattern","_currentWordPattern","_ignoreChangeEvent","_rangeUpdateTriggerPromise","_rangeSyncTriggerPromise","_currentRequest","_currentRequestPosition","_currentRequestModelVersion","reinitialize","forceRefresh","isEnabled","clearRanges","onDidChangeLanguageConfiguration","getWordDefinition","rangeUpdateScheduler","Delayer","triggerRangeUpdate","_debounceDuration","rangeSyncScheduler","referenceRange","getRange","_syncRanges","referenceValue","match","mirrorRange","oldValue","rangeStartColumn","rangeEndColumn","commonPrefixLength","commonSuffixLength","popUndoStop","prevEditOperationType","getPrevEditOperationType","setPrevEditOperationType","force","modelVersionId","request","sw","StopWatch","getLinkedEditingRanges","response","elapsed","wordPattern","foundReferenceRange","splice","isCancellationError","LinkedEditingAction","editorService","ICodeEditorService","openCodeEditor","getActiveCodeEditor","reportTelemetry","LinkedEditingCommand","orderedByScore","first","provideLinkedEditingRanges","arrays","editorLinkedEditingBackground","registerColor","dark","Color","light","hcDark","hcLight","editorLinkedEditingBackgroundColor","Link","_link","_provider","url","resolveLink","LinksList","tuples","links","newLinks","_union","isDisposable","oldLinks","oldIndex","oldLen","newIndex","newLen","oldLink","newLink","getLinks","provideLinks","resolveCount","linkProvider","LinkDetector","debounceInformation","computeLinks","computeLinksNow","computePromise","activeLinksList","currentOccurrences","activeLinkDecorationId","clickLinkGesture","keyboardEvent","onEditorMouseUp","cleanUpActiveLinkDecoration","updateDecorations","stop","oldDecorations","occurence","newDecorations","LinkOccurrence","withKey","occurrence","getLinkOccurrence","activate","deactivate","openLinkOccurrence","modelUri","parsedUri","fsPath","resources","relativePath","allowContributedOpeners","fromWorkspace","messageOrError","warn","currentOccurrence","keyCodeIsTriggerKey","general","changeDecorationOptions","_getOptions","assign","executeCmd","nativeLabel","appendLink","appendMarkdown","getHoverMessage","OpenLinkAction","linkDetector","activeLinkForeground","editorActiveLinkForeground"],"sourceRoot":""}