{"version":3,"file":"static/js/monaco-editor-vendor.e8a66816.e79592c3.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/contrib/quickAccess/browser/commandsQuickAccess.js","../node_modules/monaco-editor/esm/vs/editor/contrib/quickAccess/browser/editorNavigationQuickAccess.js","../node_modules/monaco-editor/esm/vs/editor/contrib/quickAccess/browser/gotoLineQuickAccess.js","../node_modules/monaco-editor/esm/vs/editor/contrib/quickAccess/browser/gotoSymbolQuickAccess.js","../node_modules/monaco-editor/esm/vs/editor/contrib/readOnlyMessage/browser/contribution.js","../node_modules/monaco-editor/esm/vs/editor/contrib/rename/browser/renameInputField.js","../node_modules/monaco-editor/esm/vs/editor/contrib/rename/browser/rename.js","../node_modules/monaco-editor/esm/vs/editor/contrib/smartSelect/browser/bracketSelections.js","../node_modules/monaco-editor/esm/vs/editor/contrib/smartSelect/browser/wordSelections.js","../node_modules/monaco-editor/esm/vs/editor/contrib/smartSelect/browser/smartSelect.js","../node_modules/monaco-editor/esm/vs/editor/contrib/snippet/browser/snippetController2.js","../node_modules/monaco-editor/esm/vs/editor/contrib/snippet/browser/snippetParser.js","../node_modules/monaco-editor/esm/vs/editor/contrib/snippet/browser/snippetVariables.js","../node_modules/monaco-editor/esm/vs/editor/contrib/snippet/browser/snippetSession.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { stripIcons } from '../../../../base/common/iconLabels.js';\nimport { AbstractCommandsQuickAccessProvider } from '../../../../platform/quickinput/browser/commandsQuickAccess.js';\nexport class AbstractEditorCommandsQuickAccessProvider extends AbstractCommandsQuickAccessProvider {\n    constructor(options, instantiationService, keybindingService, commandService, telemetryService, dialogService) {\n        super(options, instantiationService, keybindingService, commandService, telemetryService, dialogService);\n    }\n    getCodeEditorCommandPicks() {\n        const activeTextEditorControl = this.activeTextEditorControl;\n        if (!activeTextEditorControl) {\n            return [];\n        }\n        const editorCommandPicks = [];\n        for (const editorAction of activeTextEditorControl.getSupportedActions()) {\n            editorCommandPicks.push({\n                commandId: editorAction.id,\n                commandAlias: editorAction.alias,\n                label: stripIcons(editorAction.label) || editorAction.id,\n            });\n        }\n        return editorCommandPicks;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { once } from '../../../../base/common/functional.js';\nimport { DisposableStore, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { withNullAsUndefined } from '../../../../base/common/types.js';\nimport { getCodeEditor, isDiffEditor } from '../../../browser/editorBrowser.js';\nimport { OverviewRulerLane } from '../../../common/model.js';\nimport { overviewRulerRangeHighlight } from '../../../common/core/editorColorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\n/**\n * A reusable quick access provider for the editor with support\n * for adding decorations for navigating in the currently active file\n * (for example \"Go to line\", \"Go to symbol\").\n */\nexport class AbstractEditorNavigationQuickAccessProvider {\n    constructor(options) {\n        this.options = options;\n        //#endregion\n        //#region Decorations Utils\n        this.rangeHighlightDecorationId = undefined;\n    }\n    //#region Provider methods\n    provide(picker, token) {\n        var _a;\n        const disposables = new DisposableStore();\n        // Apply options if any\n        picker.canAcceptInBackground = !!((_a = this.options) === null || _a === void 0 ? void 0 : _a.canAcceptInBackground);\n        // Disable filtering & sorting, we control the results\n        picker.matchOnLabel = picker.matchOnDescription = picker.matchOnDetail = picker.sortByLabel = false;\n        // Provide based on current active editor\n        const pickerDisposable = disposables.add(new MutableDisposable());\n        pickerDisposable.value = this.doProvide(picker, token);\n        // Re-create whenever the active editor changes\n        disposables.add(this.onDidActiveTextEditorControlChange(() => {\n            // Clear old\n            pickerDisposable.value = undefined;\n            // Add new\n            pickerDisposable.value = this.doProvide(picker, token);\n        }));\n        return disposables;\n    }\n    doProvide(picker, token) {\n        const disposables = new DisposableStore();\n        // With text control\n        const editor = this.activeTextEditorControl;\n        if (editor && this.canProvideWithTextEditor(editor)) {\n            const context = { editor };\n            // Restore any view state if this picker was closed\n            // without actually going to a line\n            const codeEditor = getCodeEditor(editor);\n            if (codeEditor) {\n                // Remember view state and update it when the cursor position\n                // changes even later because it could be that the user has\n                // configured quick access to remain open when focus is lost and\n                // we always want to restore the current location.\n                let lastKnownEditorViewState = withNullAsUndefined(editor.saveViewState());\n                disposables.add(codeEditor.onDidChangeCursorPosition(() => {\n                    lastKnownEditorViewState = withNullAsUndefined(editor.saveViewState());\n                }));\n                context.restoreViewState = () => {\n                    if (lastKnownEditorViewState && editor === this.activeTextEditorControl) {\n                        editor.restoreViewState(lastKnownEditorViewState);\n                    }\n                };\n                disposables.add(once(token.onCancellationRequested)(() => { var _a; return (_a = context.restoreViewState) === null || _a === void 0 ? void 0 : _a.call(context); }));\n            }\n            // Clean up decorations on dispose\n            disposables.add(toDisposable(() => this.clearDecorations(editor)));\n            // Ask subclass for entries\n            disposables.add(this.provideWithTextEditor(context, picker, token));\n        }\n        // Without text control\n        else {\n            disposables.add(this.provideWithoutTextEditor(picker, token));\n        }\n        return disposables;\n    }\n    /**\n     * Subclasses to implement if they can operate on the text editor.\n     */\n    canProvideWithTextEditor(editor) {\n        return true;\n    }\n    gotoLocation({ editor }, options) {\n        editor.setSelection(options.range);\n        editor.revealRangeInCenter(options.range, 0 /* ScrollType.Smooth */);\n        if (!options.preserveFocus) {\n            editor.focus();\n        }\n    }\n    getModel(editor) {\n        var _a;\n        return isDiffEditor(editor) ?\n            (_a = editor.getModel()) === null || _a === void 0 ? void 0 : _a.modified :\n            editor.getModel();\n    }\n    addDecorations(editor, range) {\n        editor.changeDecorations(changeAccessor => {\n            // Reset old decorations if any\n            const deleteDecorations = [];\n            if (this.rangeHighlightDecorationId) {\n                deleteDecorations.push(this.rangeHighlightDecorationId.overviewRulerDecorationId);\n                deleteDecorations.push(this.rangeHighlightDecorationId.rangeHighlightId);\n                this.rangeHighlightDecorationId = undefined;\n            }\n            // Add new decorations for the range\n            const newDecorations = [\n                // highlight the entire line on the range\n                {\n                    range,\n                    options: {\n                        description: 'quick-access-range-highlight',\n                        className: 'rangeHighlight',\n                        isWholeLine: true\n                    }\n                },\n                // also add overview ruler highlight\n                {\n                    range,\n                    options: {\n                        description: 'quick-access-range-highlight-overview',\n                        overviewRuler: {\n                            color: themeColorFromId(overviewRulerRangeHighlight),\n                            position: OverviewRulerLane.Full\n                        }\n                    }\n                }\n            ];\n            const [rangeHighlightId, overviewRulerDecorationId] = changeAccessor.deltaDecorations(deleteDecorations, newDecorations);\n            this.rangeHighlightDecorationId = { rangeHighlightId, overviewRulerDecorationId };\n        });\n    }\n    clearDecorations(editor) {\n        const rangeHighlightDecorationId = this.rangeHighlightDecorationId;\n        if (rangeHighlightDecorationId) {\n            editor.changeDecorations(changeAccessor => {\n                changeAccessor.deltaDecorations([\n                    rangeHighlightDecorationId.overviewRulerDecorationId,\n                    rangeHighlightDecorationId.rangeHighlightId\n                ], []);\n            });\n            this.rangeHighlightDecorationId = undefined;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { getCodeEditor } from '../../../browser/editorBrowser.js';\nimport { AbstractEditorNavigationQuickAccessProvider } from './editorNavigationQuickAccess.js';\nimport { localize } from '../../../../nls.js';\nexport class AbstractGotoLineQuickAccessProvider extends AbstractEditorNavigationQuickAccessProvider {\n    constructor() {\n        super({ canAcceptInBackground: true });\n    }\n    provideWithoutTextEditor(picker) {\n        const label = localize('cannotRunGotoLine', \"Open a text editor first to go to a line.\");\n        picker.items = [{ label }];\n        picker.ariaLabel = label;\n        return Disposable.None;\n    }\n    provideWithTextEditor(context, picker, token) {\n        const editor = context.editor;\n        const disposables = new DisposableStore();\n        // Goto line once picked\n        disposables.add(picker.onDidAccept(event => {\n            const [item] = picker.selectedItems;\n            if (item) {\n                if (!this.isValidLineNumber(editor, item.lineNumber)) {\n                    return;\n                }\n                this.gotoLocation(context, { range: this.toRange(item.lineNumber, item.column), keyMods: picker.keyMods, preserveFocus: event.inBackground });\n                if (!event.inBackground) {\n                    picker.hide();\n                }\n            }\n        }));\n        // React to picker changes\n        const updatePickerAndEditor = () => {\n            const position = this.parsePosition(editor, picker.value.trim().substr(AbstractGotoLineQuickAccessProvider.PREFIX.length));\n            const label = this.getPickLabel(editor, position.lineNumber, position.column);\n            // Picker\n            picker.items = [{\n                    lineNumber: position.lineNumber,\n                    column: position.column,\n                    label\n                }];\n            // ARIA Label\n            picker.ariaLabel = label;\n            // Clear decorations for invalid range\n            if (!this.isValidLineNumber(editor, position.lineNumber)) {\n                this.clearDecorations(editor);\n                return;\n            }\n            // Reveal\n            const range = this.toRange(position.lineNumber, position.column);\n            editor.revealRangeInCenter(range, 0 /* ScrollType.Smooth */);\n            // Decorate\n            this.addDecorations(editor, range);\n        };\n        updatePickerAndEditor();\n        disposables.add(picker.onDidChangeValue(() => updatePickerAndEditor()));\n        // Adjust line number visibility as needed\n        const codeEditor = getCodeEditor(editor);\n        if (codeEditor) {\n            const options = codeEditor.getOptions();\n            const lineNumbers = options.get(62 /* EditorOption.lineNumbers */);\n            if (lineNumbers.renderType === 2 /* RenderLineNumbersType.Relative */) {\n                codeEditor.updateOptions({ lineNumbers: 'on' });\n                disposables.add(toDisposable(() => codeEditor.updateOptions({ lineNumbers: 'relative' })));\n            }\n        }\n        return disposables;\n    }\n    toRange(lineNumber = 1, column = 1) {\n        return {\n            startLineNumber: lineNumber,\n            startColumn: column,\n            endLineNumber: lineNumber,\n            endColumn: column\n        };\n    }\n    parsePosition(editor, value) {\n        // Support line-col formats of `line,col`, `line:col`, `line#col`\n        const numbers = value.split(/,|:|#/).map(part => parseInt(part, 10)).filter(part => !isNaN(part));\n        const endLine = this.lineCount(editor) + 1;\n        return {\n            lineNumber: numbers[0] > 0 ? numbers[0] : endLine + numbers[0],\n            column: numbers[1]\n        };\n    }\n    getPickLabel(editor, lineNumber, column) {\n        // Location valid: indicate this as picker label\n        if (this.isValidLineNumber(editor, lineNumber)) {\n            if (this.isValidColumn(editor, lineNumber, column)) {\n                return localize('gotoLineColumnLabel', \"Go to line {0} and character {1}.\", lineNumber, column);\n            }\n            return localize('gotoLineLabel', \"Go to line {0}.\", lineNumber);\n        }\n        // Location invalid: show generic label\n        const position = editor.getPosition() || { lineNumber: 1, column: 1 };\n        const lineCount = this.lineCount(editor);\n        if (lineCount > 1) {\n            return localize('gotoLineLabelEmptyWithLimit', \"Current Line: {0}, Character: {1}. Type a line number between 1 and {2} to navigate to.\", position.lineNumber, position.column, lineCount);\n        }\n        return localize('gotoLineLabelEmpty', \"Current Line: {0}, Character: {1}. Type a line number to navigate to.\", position.lineNumber, position.column);\n    }\n    isValidLineNumber(editor, lineNumber) {\n        if (!lineNumber || typeof lineNumber !== 'number') {\n            return false;\n        }\n        return lineNumber > 0 && lineNumber <= this.lineCount(editor);\n    }\n    isValidColumn(editor, lineNumber, column) {\n        if (!column || typeof column !== 'number') {\n            return false;\n        }\n        const model = this.getModel(editor);\n        if (!model) {\n            return false;\n        }\n        const positionCandidate = { lineNumber, column };\n        return model.validatePosition(positionCandidate).equals(positionCandidate);\n    }\n    lineCount(editor) {\n        var _a, _b;\n        return (_b = (_a = this.getModel(editor)) === null || _a === void 0 ? void 0 : _a.getLineCount()) !== null && _b !== void 0 ? _b : 0;\n    }\n}\nAbstractGotoLineQuickAccessProvider.PREFIX = ':';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { DeferredPromise } from '../../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { pieceToQuery, prepareQuery, scoreFuzzy2 } from '../../../../base/common/fuzzyScorer.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { format, trim } from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { SymbolKinds } from '../../../common/languages.js';\nimport { IOutlineModelService } from '../../documentSymbols/browser/outlineModel.js';\nimport { AbstractEditorNavigationQuickAccessProvider } from './editorNavigationQuickAccess.js';\nimport { localize } from '../../../../nls.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { findLast } from '../../../../base/common/arrays.js';\nlet AbstractGotoSymbolQuickAccessProvider = class AbstractGotoSymbolQuickAccessProvider extends AbstractEditorNavigationQuickAccessProvider {\n    constructor(_languageFeaturesService, _outlineModelService, options = Object.create(null)) {\n        super(options);\n        this._languageFeaturesService = _languageFeaturesService;\n        this._outlineModelService = _outlineModelService;\n        this.options = options;\n        this.options.canAcceptInBackground = true;\n    }\n    provideWithoutTextEditor(picker) {\n        this.provideLabelPick(picker, localize('cannotRunGotoSymbolWithoutEditor', \"To go to a symbol, first open a text editor with symbol information.\"));\n        return Disposable.None;\n    }\n    provideWithTextEditor(context, picker, token) {\n        const editor = context.editor;\n        const model = this.getModel(editor);\n        if (!model) {\n            return Disposable.None;\n        }\n        // Provide symbols from model if available in registry\n        if (this._languageFeaturesService.documentSymbolProvider.has(model)) {\n            return this.doProvideWithEditorSymbols(context, model, picker, token);\n        }\n        // Otherwise show an entry for a model without registry\n        // But give a chance to resolve the symbols at a later\n        // point if possible\n        return this.doProvideWithoutEditorSymbols(context, model, picker, token);\n    }\n    doProvideWithoutEditorSymbols(context, model, picker, token) {\n        const disposables = new DisposableStore();\n        // Generic pick for not having any symbol information\n        this.provideLabelPick(picker, localize('cannotRunGotoSymbolWithoutSymbolProvider', \"The active text editor does not provide symbol information.\"));\n        // Wait for changes to the registry and see if eventually\n        // we do get symbols. This can happen if the picker is opened\n        // very early after the model has loaded but before the\n        // language registry is ready.\n        // https://github.com/microsoft/vscode/issues/70607\n        (() => __awaiter(this, void 0, void 0, function* () {\n            const result = yield this.waitForLanguageSymbolRegistry(model, disposables);\n            if (!result || token.isCancellationRequested) {\n                return;\n            }\n            disposables.add(this.doProvideWithEditorSymbols(context, model, picker, token));\n        }))();\n        return disposables;\n    }\n    provideLabelPick(picker, label) {\n        picker.items = [{ label, index: 0, kind: 14 /* SymbolKind.String */ }];\n        picker.ariaLabel = label;\n    }\n    waitForLanguageSymbolRegistry(model, disposables) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._languageFeaturesService.documentSymbolProvider.has(model)) {\n                return true;\n            }\n            const symbolProviderRegistryPromise = new DeferredPromise();\n            // Resolve promise when registry knows model\n            const symbolProviderListener = disposables.add(this._languageFeaturesService.documentSymbolProvider.onDidChange(() => {\n                if (this._languageFeaturesService.documentSymbolProvider.has(model)) {\n                    symbolProviderListener.dispose();\n                    symbolProviderRegistryPromise.complete(true);\n                }\n            }));\n            // Resolve promise when we get disposed too\n            disposables.add(toDisposable(() => symbolProviderRegistryPromise.complete(false)));\n            return symbolProviderRegistryPromise.p;\n        });\n    }\n    doProvideWithEditorSymbols(context, model, picker, token) {\n        var _a;\n        const editor = context.editor;\n        const disposables = new DisposableStore();\n        // Goto symbol once picked\n        disposables.add(picker.onDidAccept(event => {\n            const [item] = picker.selectedItems;\n            if (item && item.range) {\n                this.gotoLocation(context, { range: item.range.selection, keyMods: picker.keyMods, preserveFocus: event.inBackground });\n                if (!event.inBackground) {\n                    picker.hide();\n                }\n            }\n        }));\n        // Goto symbol side by side if enabled\n        disposables.add(picker.onDidTriggerItemButton(({ item }) => {\n            if (item && item.range) {\n                this.gotoLocation(context, { range: item.range.selection, keyMods: picker.keyMods, forceSideBySide: true });\n                picker.hide();\n            }\n        }));\n        // Resolve symbols from document once and reuse this\n        // request for all filtering and typing then on\n        const symbolsPromise = this.getDocumentSymbols(model, token);\n        // Set initial picks and update on type\n        let picksCts = undefined;\n        const updatePickerItems = (positionToEnclose) => __awaiter(this, void 0, void 0, function* () {\n            // Cancel any previous ask for picks and busy\n            picksCts === null || picksCts === void 0 ? void 0 : picksCts.dispose(true);\n            picker.busy = false;\n            // Create new cancellation source for this run\n            picksCts = new CancellationTokenSource(token);\n            // Collect symbol picks\n            picker.busy = true;\n            try {\n                const query = prepareQuery(picker.value.substr(AbstractGotoSymbolQuickAccessProvider.PREFIX.length).trim());\n                const items = yield this.doGetSymbolPicks(symbolsPromise, query, undefined, picksCts.token);\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                if (items.length > 0) {\n                    picker.items = items;\n                    if (positionToEnclose && query.original.length === 0) {\n                        const candidate = findLast(items, item => Boolean(item.type !== 'separator' && item.range && Range.containsPosition(item.range.decoration, positionToEnclose)));\n                        if (candidate) {\n                            picker.activeItems = [candidate];\n                        }\n                    }\n                }\n                else {\n                    if (query.original.length > 0) {\n                        this.provideLabelPick(picker, localize('noMatchingSymbolResults', \"No matching editor symbols\"));\n                    }\n                    else {\n                        this.provideLabelPick(picker, localize('noSymbolResults', \"No editor symbols\"));\n                    }\n                }\n            }\n            finally {\n                if (!token.isCancellationRequested) {\n                    picker.busy = false;\n                }\n            }\n        });\n        disposables.add(picker.onDidChangeValue(() => updatePickerItems(undefined)));\n        updatePickerItems((_a = editor.getSelection()) === null || _a === void 0 ? void 0 : _a.getPosition());\n        // Reveal and decorate when active item changes\n        // However, ignore the very first two events so that\n        // opening the picker is not immediately revealing\n        // and decorating the first entry.\n        let ignoreFirstActiveEvent = 2;\n        disposables.add(picker.onDidChangeActive(() => {\n            const [item] = picker.activeItems;\n            if (item && item.range) {\n                if (ignoreFirstActiveEvent-- > 0) {\n                    return;\n                }\n                // Reveal\n                editor.revealRangeInCenter(item.range.selection, 0 /* ScrollType.Smooth */);\n                // Decorate\n                this.addDecorations(editor, item.range.decoration);\n            }\n        }));\n        return disposables;\n    }\n    doGetSymbolPicks(symbolsPromise, query, options, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const symbols = yield symbolsPromise;\n            if (token.isCancellationRequested) {\n                return [];\n            }\n            const filterBySymbolKind = query.original.indexOf(AbstractGotoSymbolQuickAccessProvider.SCOPE_PREFIX) === 0;\n            const filterPos = filterBySymbolKind ? 1 : 0;\n            // Split between symbol and container query\n            let symbolQuery;\n            let containerQuery;\n            if (query.values && query.values.length > 1) {\n                symbolQuery = pieceToQuery(query.values[0]); // symbol: only match on first part\n                containerQuery = pieceToQuery(query.values.slice(1)); // container: match on all but first parts\n            }\n            else {\n                symbolQuery = query;\n            }\n            // Convert to symbol picks and apply filtering\n            const filteredSymbolPicks = [];\n            for (let index = 0; index < symbols.length; index++) {\n                const symbol = symbols[index];\n                const symbolLabel = trim(symbol.name);\n                const symbolLabelWithIcon = `$(${SymbolKinds.toIcon(symbol.kind).id}) ${symbolLabel}`;\n                const symbolLabelIconOffset = symbolLabelWithIcon.length - symbolLabel.length;\n                let containerLabel = symbol.containerName;\n                if (options === null || options === void 0 ? void 0 : options.extraContainerLabel) {\n                    if (containerLabel) {\n                        containerLabel = `${options.extraContainerLabel} • ${containerLabel}`;\n                    }\n                    else {\n                        containerLabel = options.extraContainerLabel;\n                    }\n                }\n                let symbolScore = undefined;\n                let symbolMatches = undefined;\n                let containerScore = undefined;\n                let containerMatches = undefined;\n                if (query.original.length > filterPos) {\n                    // First: try to score on the entire query, it is possible that\n                    // the symbol matches perfectly (e.g. searching for \"change log\"\n                    // can be a match on a markdown symbol \"change log\"). In that\n                    // case we want to skip the container query altogether.\n                    let skipContainerQuery = false;\n                    if (symbolQuery !== query) {\n                        [symbolScore, symbolMatches] = scoreFuzzy2(symbolLabelWithIcon, Object.assign(Object.assign({}, query), { values: undefined /* disable multi-query support */ }), filterPos, symbolLabelIconOffset);\n                        if (typeof symbolScore === 'number') {\n                            skipContainerQuery = true; // since we consumed the query, skip any container matching\n                        }\n                    }\n                    // Otherwise: score on the symbol query and match on the container later\n                    if (typeof symbolScore !== 'number') {\n                        [symbolScore, symbolMatches] = scoreFuzzy2(symbolLabelWithIcon, symbolQuery, filterPos, symbolLabelIconOffset);\n                        if (typeof symbolScore !== 'number') {\n                            continue;\n                        }\n                    }\n                    // Score by container if specified\n                    if (!skipContainerQuery && containerQuery) {\n                        if (containerLabel && containerQuery.original.length > 0) {\n                            [containerScore, containerMatches] = scoreFuzzy2(containerLabel, containerQuery);\n                        }\n                        if (typeof containerScore !== 'number') {\n                            continue;\n                        }\n                        if (typeof symbolScore === 'number') {\n                            symbolScore += containerScore; // boost symbolScore by containerScore\n                        }\n                    }\n                }\n                const deprecated = symbol.tags && symbol.tags.indexOf(1 /* SymbolTag.Deprecated */) >= 0;\n                filteredSymbolPicks.push({\n                    index,\n                    kind: symbol.kind,\n                    score: symbolScore,\n                    label: symbolLabelWithIcon,\n                    ariaLabel: symbolLabel,\n                    description: containerLabel,\n                    highlights: deprecated ? undefined : {\n                        label: symbolMatches,\n                        description: containerMatches\n                    },\n                    range: {\n                        selection: Range.collapseToStart(symbol.selectionRange),\n                        decoration: symbol.range\n                    },\n                    strikethrough: deprecated,\n                    buttons: (() => {\n                        var _a, _b;\n                        const openSideBySideDirection = ((_a = this.options) === null || _a === void 0 ? void 0 : _a.openSideBySideDirection) ? (_b = this.options) === null || _b === void 0 ? void 0 : _b.openSideBySideDirection() : undefined;\n                        if (!openSideBySideDirection) {\n                            return undefined;\n                        }\n                        return [\n                            {\n                                iconClass: openSideBySideDirection === 'right' ? Codicon.splitHorizontal.classNames : Codicon.splitVertical.classNames,\n                                tooltip: openSideBySideDirection === 'right' ? localize('openToSide', \"Open to the Side\") : localize('openToBottom', \"Open to the Bottom\")\n                            }\n                        ];\n                    })()\n                });\n            }\n            // Sort by score\n            const sortedFilteredSymbolPicks = filteredSymbolPicks.sort((symbolA, symbolB) => filterBySymbolKind ?\n                this.compareByKindAndScore(symbolA, symbolB) :\n                this.compareByScore(symbolA, symbolB));\n            // Add separator for types\n            // - @  only total number of symbols\n            // - @: grouped by symbol kind\n            let symbolPicks = [];\n            if (filterBySymbolKind) {\n                let lastSymbolKind = undefined;\n                let lastSeparator = undefined;\n                let lastSymbolKindCounter = 0;\n                function updateLastSeparatorLabel() {\n                    if (lastSeparator && typeof lastSymbolKind === 'number' && lastSymbolKindCounter > 0) {\n                        lastSeparator.label = format(NLS_SYMBOL_KIND_CACHE[lastSymbolKind] || FALLBACK_NLS_SYMBOL_KIND, lastSymbolKindCounter);\n                    }\n                }\n                for (const symbolPick of sortedFilteredSymbolPicks) {\n                    // Found new kind\n                    if (lastSymbolKind !== symbolPick.kind) {\n                        // Update last separator with number of symbols we found for kind\n                        updateLastSeparatorLabel();\n                        lastSymbolKind = symbolPick.kind;\n                        lastSymbolKindCounter = 1;\n                        // Add new separator for new kind\n                        lastSeparator = { type: 'separator' };\n                        symbolPicks.push(lastSeparator);\n                    }\n                    // Existing kind, keep counting\n                    else {\n                        lastSymbolKindCounter++;\n                    }\n                    // Add to final result\n                    symbolPicks.push(symbolPick);\n                }\n                // Update last separator with number of symbols we found for kind\n                updateLastSeparatorLabel();\n            }\n            else if (sortedFilteredSymbolPicks.length > 0) {\n                symbolPicks = [\n                    { label: localize('symbols', \"symbols ({0})\", filteredSymbolPicks.length), type: 'separator' },\n                    ...sortedFilteredSymbolPicks\n                ];\n            }\n            return symbolPicks;\n        });\n    }\n    compareByScore(symbolA, symbolB) {\n        if (typeof symbolA.score !== 'number' && typeof symbolB.score === 'number') {\n            return 1;\n        }\n        else if (typeof symbolA.score === 'number' && typeof symbolB.score !== 'number') {\n            return -1;\n        }\n        if (typeof symbolA.score === 'number' && typeof symbolB.score === 'number') {\n            if (symbolA.score > symbolB.score) {\n                return -1;\n            }\n            else if (symbolA.score < symbolB.score) {\n                return 1;\n            }\n        }\n        if (symbolA.index < symbolB.index) {\n            return -1;\n        }\n        else if (symbolA.index > symbolB.index) {\n            return 1;\n        }\n        return 0;\n    }\n    compareByKindAndScore(symbolA, symbolB) {\n        const kindA = NLS_SYMBOL_KIND_CACHE[symbolA.kind] || FALLBACK_NLS_SYMBOL_KIND;\n        const kindB = NLS_SYMBOL_KIND_CACHE[symbolB.kind] || FALLBACK_NLS_SYMBOL_KIND;\n        // Sort by type first if scoped search\n        const result = kindA.localeCompare(kindB);\n        if (result === 0) {\n            return this.compareByScore(symbolA, symbolB);\n        }\n        return result;\n    }\n    getDocumentSymbols(document, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const model = yield this._outlineModelService.getOrCreate(document, token);\n            return token.isCancellationRequested ? [] : model.asListOfDocumentSymbols();\n        });\n    }\n};\nAbstractGotoSymbolQuickAccessProvider.PREFIX = '@';\nAbstractGotoSymbolQuickAccessProvider.SCOPE_PREFIX = ':';\nAbstractGotoSymbolQuickAccessProvider.PREFIX_BY_CATEGORY = `${AbstractGotoSymbolQuickAccessProvider.PREFIX}${AbstractGotoSymbolQuickAccessProvider.SCOPE_PREFIX}`;\nAbstractGotoSymbolQuickAccessProvider = __decorate([\n    __param(0, ILanguageFeaturesService),\n    __param(1, IOutlineModelService)\n], AbstractGotoSymbolQuickAccessProvider);\nexport { AbstractGotoSymbolQuickAccessProvider };\n// #region NLS Helpers\nconst FALLBACK_NLS_SYMBOL_KIND = localize('property', \"properties ({0})\");\nconst NLS_SYMBOL_KIND_CACHE = {\n    [5 /* SymbolKind.Method */]: localize('method', \"methods ({0})\"),\n    [11 /* SymbolKind.Function */]: localize('function', \"functions ({0})\"),\n    [8 /* SymbolKind.Constructor */]: localize('_constructor', \"constructors ({0})\"),\n    [12 /* SymbolKind.Variable */]: localize('variable', \"variables ({0})\"),\n    [4 /* SymbolKind.Class */]: localize('class', \"classes ({0})\"),\n    [22 /* SymbolKind.Struct */]: localize('struct', \"structs ({0})\"),\n    [23 /* SymbolKind.Event */]: localize('event', \"events ({0})\"),\n    [24 /* SymbolKind.Operator */]: localize('operator', \"operators ({0})\"),\n    [10 /* SymbolKind.Interface */]: localize('interface', \"interfaces ({0})\"),\n    [2 /* SymbolKind.Namespace */]: localize('namespace', \"namespaces ({0})\"),\n    [3 /* SymbolKind.Package */]: localize('package', \"packages ({0})\"),\n    [25 /* SymbolKind.TypeParameter */]: localize('typeParameter', \"type parameters ({0})\"),\n    [1 /* SymbolKind.Module */]: localize('modules', \"modules ({0})\"),\n    [6 /* SymbolKind.Property */]: localize('property', \"properties ({0})\"),\n    [9 /* SymbolKind.Enum */]: localize('enum', \"enumerations ({0})\"),\n    [21 /* SymbolKind.EnumMember */]: localize('enumMember', \"enumeration members ({0})\"),\n    [14 /* SymbolKind.String */]: localize('string', \"strings ({0})\"),\n    [0 /* SymbolKind.File */]: localize('file', \"files ({0})\"),\n    [17 /* SymbolKind.Array */]: localize('array', \"arrays ({0})\"),\n    [15 /* SymbolKind.Number */]: localize('number', \"numbers ({0})\"),\n    [16 /* SymbolKind.Boolean */]: localize('boolean', \"booleans ({0})\"),\n    [18 /* SymbolKind.Object */]: localize('object', \"objects ({0})\"),\n    [19 /* SymbolKind.Key */]: localize('key', \"keys ({0})\"),\n    [7 /* SymbolKind.Field */]: localize('field', \"fields ({0})\"),\n    [13 /* SymbolKind.Constant */]: localize('constant', \"constants ({0})\")\n};\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport * as nls from '../../../../nls.js';\nexport class ReadOnlyMessageController extends Disposable {\n    constructor(editor) {\n        super();\n        this.editor = editor;\n        this._register(this.editor.onDidAttemptReadOnlyEdit(() => this._onDidAttemptReadOnlyEdit()));\n    }\n    _onDidAttemptReadOnlyEdit() {\n        const messageController = MessageController.get(this.editor);\n        if (messageController && this.editor.hasModel()) {\n            if (this.editor.isSimpleWidget) {\n                messageController.showMessage(nls.localize('editor.simple.readonly', \"Cannot edit in read-only input\"), this.editor.getPosition());\n            }\n            else {\n                messageController.showMessage(nls.localize('editor.readonly', \"Cannot edit in read-only editor\"), this.editor.getPosition());\n            }\n        }\n    }\n}\nReadOnlyMessageController.ID = 'editor.contrib.readOnlyMessageController';\nregisterEditorContribution(ReadOnlyMessageController.ID, ReadOnlyMessageController);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport './renameInputField.css';\nimport { Position } from '../../../common/core/position.js';\nimport { localize } from '../../../../nls.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { editorWidgetBackground, inputBackground, inputBorder, inputForeground, widgetShadow } from '../../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nexport const CONTEXT_RENAME_INPUT_VISIBLE = new RawContextKey('renameInputVisible', false, localize('renameInputVisible', \"Whether the rename input widget is visible\"));\nlet RenameInputField = class RenameInputField {\n    constructor(_editor, _acceptKeybindings, _themeService, _keybindingService, contextKeyService) {\n        this._editor = _editor;\n        this._acceptKeybindings = _acceptKeybindings;\n        this._themeService = _themeService;\n        this._keybindingService = _keybindingService;\n        this._disposables = new DisposableStore();\n        this.allowEditorOverflow = true;\n        this._visibleContextKey = CONTEXT_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\n        this._editor.addContentWidget(this);\n        this._disposables.add(this._editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(46 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._disposables.add(_themeService.onDidColorThemeChange(this._updateStyles, this));\n    }\n    dispose() {\n        this._disposables.dispose();\n        this._editor.removeContentWidget(this);\n    }\n    getId() {\n        return '__renameInputWidget';\n    }\n    getDomNode() {\n        if (!this._domNode) {\n            this._domNode = document.createElement('div');\n            this._domNode.className = 'monaco-editor rename-box';\n            this._input = document.createElement('input');\n            this._input.className = 'rename-input';\n            this._input.type = 'text';\n            this._input.setAttribute('aria-label', localize('renameAriaLabel', \"Rename input. Type new name and press Enter to commit.\"));\n            this._domNode.appendChild(this._input);\n            this._label = document.createElement('div');\n            this._label.className = 'rename-label';\n            this._domNode.appendChild(this._label);\n            const updateLabel = () => {\n                var _a, _b;\n                const [accept, preview] = this._acceptKeybindings;\n                this._keybindingService.lookupKeybinding(accept);\n                this._label.innerText = localize({ key: 'label', comment: ['placeholders are keybindings, e.g \"F2 to Rename, Shift+F2 to Preview\"'] }, \"{0} to Rename, {1} to Preview\", (_a = this._keybindingService.lookupKeybinding(accept)) === null || _a === void 0 ? void 0 : _a.getLabel(), (_b = this._keybindingService.lookupKeybinding(preview)) === null || _b === void 0 ? void 0 : _b.getLabel());\n            };\n            updateLabel();\n            this._disposables.add(this._keybindingService.onDidUpdateKeybindings(updateLabel));\n            this._updateFont();\n            this._updateStyles(this._themeService.getColorTheme());\n        }\n        return this._domNode;\n    }\n    _updateStyles(theme) {\n        var _a, _b, _c, _d;\n        if (!this._input || !this._domNode) {\n            return;\n        }\n        const widgetShadowColor = theme.getColor(widgetShadow);\n        this._domNode.style.backgroundColor = String((_a = theme.getColor(editorWidgetBackground)) !== null && _a !== void 0 ? _a : '');\n        this._domNode.style.boxShadow = widgetShadowColor ? ` 0 0 8px 2px ${widgetShadowColor}` : '';\n        this._domNode.style.color = String((_b = theme.getColor(inputForeground)) !== null && _b !== void 0 ? _b : '');\n        this._input.style.backgroundColor = String((_c = theme.getColor(inputBackground)) !== null && _c !== void 0 ? _c : '');\n        // this._input.style.color = String(theme.getColor(inputForeground) ?? '');\n        const border = theme.getColor(inputBorder);\n        this._input.style.borderWidth = border ? '1px' : '0px';\n        this._input.style.borderStyle = border ? 'solid' : 'none';\n        this._input.style.borderColor = (_d = border === null || border === void 0 ? void 0 : border.toString()) !== null && _d !== void 0 ? _d : 'none';\n    }\n    _updateFont() {\n        if (!this._input || !this._label) {\n            return;\n        }\n        const fontInfo = this._editor.getOption(46 /* EditorOption.fontInfo */);\n        this._input.style.fontFamily = fontInfo.fontFamily;\n        this._input.style.fontWeight = fontInfo.fontWeight;\n        this._input.style.fontSize = `${fontInfo.fontSize}px`;\n        this._label.style.fontSize = `${fontInfo.fontSize * 0.8}px`;\n    }\n    getPosition() {\n        if (!this._visible) {\n            return null;\n        }\n        return {\n            position: this._position,\n            preference: [2 /* ContentWidgetPositionPreference.BELOW */, 1 /* ContentWidgetPositionPreference.ABOVE */]\n        };\n    }\n    afterRender(position) {\n        if (!position) {\n            // cancel rename when input widget isn't rendered anymore\n            this.cancelInput(true);\n        }\n    }\n    acceptInput(wantsPreview) {\n        var _a;\n        (_a = this._currentAcceptInput) === null || _a === void 0 ? void 0 : _a.call(this, wantsPreview);\n    }\n    cancelInput(focusEditor) {\n        var _a;\n        (_a = this._currentCancelInput) === null || _a === void 0 ? void 0 : _a.call(this, focusEditor);\n    }\n    getInput(where, value, selectionStart, selectionEnd, supportPreview, token) {\n        this._domNode.classList.toggle('preview', supportPreview);\n        this._position = new Position(where.startLineNumber, where.startColumn);\n        this._input.value = value;\n        this._input.setAttribute('selectionStart', selectionStart.toString());\n        this._input.setAttribute('selectionEnd', selectionEnd.toString());\n        this._input.size = Math.max((where.endColumn - where.startColumn) * 1.1, 20);\n        const disposeOnDone = new DisposableStore();\n        return new Promise(resolve => {\n            this._currentCancelInput = (focusEditor) => {\n                this._currentAcceptInput = undefined;\n                this._currentCancelInput = undefined;\n                resolve(focusEditor);\n                return true;\n            };\n            this._currentAcceptInput = (wantsPreview) => {\n                if (this._input.value.trim().length === 0 || this._input.value === value) {\n                    // empty or whitespace only or not changed\n                    this.cancelInput(true);\n                    return;\n                }\n                this._currentAcceptInput = undefined;\n                this._currentCancelInput = undefined;\n                resolve({\n                    newName: this._input.value,\n                    wantsPreview: supportPreview && wantsPreview\n                });\n            };\n            disposeOnDone.add(token.onCancellationRequested(() => this.cancelInput(true)));\n            disposeOnDone.add(this._editor.onDidBlurEditorWidget(() => this.cancelInput(false)));\n            this._show();\n        }).finally(() => {\n            disposeOnDone.dispose();\n            this._hide();\n        });\n    }\n    _show() {\n        this._editor.revealLineInCenterIfOutsideViewport(this._position.lineNumber, 0 /* ScrollType.Smooth */);\n        this._visible = true;\n        this._visibleContextKey.set(true);\n        this._editor.layoutContentWidget(this);\n        setTimeout(() => {\n            this._input.focus();\n            this._input.setSelectionRange(parseInt(this._input.getAttribute('selectionStart')), parseInt(this._input.getAttribute('selectionEnd')));\n        }, 100);\n    }\n    _hide() {\n        this._visible = false;\n        this._visibleContextKey.reset();\n        this._editor.layoutContentWidget(this);\n    }\n};\nRenameInputField = __decorate([\n    __param(2, IThemeService),\n    __param(3, IKeybindingService),\n    __param(4, IContextKeyService)\n], RenameInputField);\nexport { RenameInputField };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { alert } from '../../../../base/browser/ui/aria/aria.js';\nimport { IdleValue, raceCancellation } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorStateCancellationTokenSource } from '../../editorState/browser/editorState.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution, registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { IBulkEditService, ResourceEdit } from '../../../browser/services/bulkEditService.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ITextResourceConfigurationService } from '../../../common/services/textResourceConfiguration.js';\nimport { MessageController } from '../../message/browser/messageController.js';\nimport * as nls from '../../../../nls.js';\nimport { Extensions } from '../../../../platform/configuration/common/configurationRegistry.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IEditorProgressService } from '../../../../platform/progress/common/progress.js';\nimport { Registry } from '../../../../platform/registry/common/platform.js';\nimport { CONTEXT_RENAME_INPUT_VISIBLE, RenameInputField } from './renameInputField.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nclass RenameSkeleton {\n    constructor(model, position, registry) {\n        this.model = model;\n        this.position = position;\n        this._providerRenameIdx = 0;\n        this._providers = registry.ordered(model);\n    }\n    hasProvider() {\n        return this._providers.length > 0;\n    }\n    resolveRenameLocation(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const rejects = [];\n            for (this._providerRenameIdx = 0; this._providerRenameIdx < this._providers.length; this._providerRenameIdx++) {\n                const provider = this._providers[this._providerRenameIdx];\n                if (!provider.resolveRenameLocation) {\n                    break;\n                }\n                const res = yield provider.resolveRenameLocation(this.model, this.position, token);\n                if (!res) {\n                    continue;\n                }\n                if (res.rejectReason) {\n                    rejects.push(res.rejectReason);\n                    continue;\n                }\n                return res;\n            }\n            const word = this.model.getWordAtPosition(this.position);\n            if (!word) {\n                return {\n                    range: Range.fromPositions(this.position),\n                    text: '',\n                    rejectReason: rejects.length > 0 ? rejects.join('\\n') : undefined\n                };\n            }\n            return {\n                range: new Range(this.position.lineNumber, word.startColumn, this.position.lineNumber, word.endColumn),\n                text: word.word,\n                rejectReason: rejects.length > 0 ? rejects.join('\\n') : undefined\n            };\n        });\n    }\n    provideRenameEdits(newName, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this._provideRenameEdits(newName, this._providerRenameIdx, [], token);\n        });\n    }\n    _provideRenameEdits(newName, i, rejects, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = this._providers[i];\n            if (!provider) {\n                return {\n                    edits: [],\n                    rejectReason: rejects.join('\\n')\n                };\n            }\n            const result = yield provider.provideRenameEdits(this.model, this.position, newName, token);\n            if (!result) {\n                return this._provideRenameEdits(newName, i + 1, rejects.concat(nls.localize('no result', \"No result.\")), token);\n            }\n            else if (result.rejectReason) {\n                return this._provideRenameEdits(newName, i + 1, rejects.concat(result.rejectReason), token);\n            }\n            return result;\n        });\n    }\n}\nexport function rename(registry, model, position, newName) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const skeleton = new RenameSkeleton(model, position, registry);\n        const loc = yield skeleton.resolveRenameLocation(CancellationToken.None);\n        if (loc === null || loc === void 0 ? void 0 : loc.rejectReason) {\n            return { edits: [], rejectReason: loc.rejectReason };\n        }\n        return skeleton.provideRenameEdits(newName, CancellationToken.None);\n    });\n}\n// ---  register actions and commands\nlet RenameController = class RenameController {\n    constructor(editor, _instaService, _notificationService, _bulkEditService, _progressService, _logService, _configService, _languageFeaturesService) {\n        this.editor = editor;\n        this._instaService = _instaService;\n        this._notificationService = _notificationService;\n        this._bulkEditService = _bulkEditService;\n        this._progressService = _progressService;\n        this._logService = _logService;\n        this._configService = _configService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._disposableStore = new DisposableStore();\n        this._cts = new CancellationTokenSource();\n        this._renameInputField = this._disposableStore.add(new IdleValue(() => this._disposableStore.add(this._instaService.createInstance(RenameInputField, this.editor, ['acceptRenameInput', 'acceptRenameInputWithPreview']))));\n    }\n    static get(editor) {\n        return editor.getContribution(RenameController.ID);\n    }\n    dispose() {\n        this._disposableStore.dispose();\n        this._cts.dispose(true);\n    }\n    run() {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            this._cts.dispose(true);\n            if (!this.editor.hasModel()) {\n                return undefined;\n            }\n            const position = this.editor.getPosition();\n            const skeleton = new RenameSkeleton(this.editor.getModel(), position, this._languageFeaturesService.renameProvider);\n            if (!skeleton.hasProvider()) {\n                return undefined;\n            }\n            this._cts = new EditorStateCancellationTokenSource(this.editor, 4 /* CodeEditorStateFlag.Position */ | 1 /* CodeEditorStateFlag.Value */);\n            // resolve rename location\n            let loc;\n            try {\n                const resolveLocationOperation = skeleton.resolveRenameLocation(this._cts.token);\n                this._progressService.showWhile(resolveLocationOperation, 250);\n                loc = yield resolveLocationOperation;\n            }\n            catch (e) {\n                (_a = MessageController.get(this.editor)) === null || _a === void 0 ? void 0 : _a.showMessage(e || nls.localize('resolveRenameLocationFailed', \"An unknown error occurred while resolving rename location\"), position);\n                return undefined;\n            }\n            if (!loc) {\n                return undefined;\n            }\n            if (loc.rejectReason) {\n                (_b = MessageController.get(this.editor)) === null || _b === void 0 ? void 0 : _b.showMessage(loc.rejectReason, position);\n                return undefined;\n            }\n            if (this._cts.token.isCancellationRequested) {\n                return undefined;\n            }\n            this._cts.dispose();\n            this._cts = new EditorStateCancellationTokenSource(this.editor, 4 /* CodeEditorStateFlag.Position */ | 1 /* CodeEditorStateFlag.Value */, loc.range);\n            // do rename at location\n            const selection = this.editor.getSelection();\n            let selectionStart = 0;\n            let selectionEnd = loc.text.length;\n            if (!Range.isEmpty(selection) && !Range.spansMultipleLines(selection) && Range.containsRange(loc.range, selection)) {\n                selectionStart = Math.max(0, selection.startColumn - loc.range.startColumn);\n                selectionEnd = Math.min(loc.range.endColumn, selection.endColumn) - loc.range.startColumn;\n            }\n            const supportPreview = this._bulkEditService.hasPreviewHandler() && this._configService.getValue(this.editor.getModel().uri, 'editor.rename.enablePreview');\n            const inputFieldResult = yield this._renameInputField.value.getInput(loc.range, loc.text, selectionStart, selectionEnd, supportPreview, this._cts.token);\n            // no result, only hint to focus the editor or not\n            if (typeof inputFieldResult === 'boolean') {\n                if (inputFieldResult) {\n                    this.editor.focus();\n                }\n                return undefined;\n            }\n            this.editor.focus();\n            const renameOperation = raceCancellation(skeleton.provideRenameEdits(inputFieldResult.newName, this._cts.token), this._cts.token).then((renameResult) => __awaiter(this, void 0, void 0, function* () {\n                if (!renameResult || !this.editor.hasModel()) {\n                    return;\n                }\n                if (renameResult.rejectReason) {\n                    this._notificationService.info(renameResult.rejectReason);\n                    return;\n                }\n                // collapse selection to active end\n                this.editor.setSelection(Range.fromPositions(this.editor.getSelection().getPosition()));\n                this._bulkEditService.apply(ResourceEdit.convert(renameResult), {\n                    editor: this.editor,\n                    showPreview: inputFieldResult.wantsPreview,\n                    label: nls.localize('label', \"Renaming '{0}' to '{1}'\", loc === null || loc === void 0 ? void 0 : loc.text, inputFieldResult.newName),\n                    code: 'undoredo.rename',\n                    quotableLabel: nls.localize('quotableLabel', \"Renaming {0} to {1}\", loc === null || loc === void 0 ? void 0 : loc.text, inputFieldResult.newName),\n                    respectAutoSaveConfig: true\n                }).then(result => {\n                    if (result.ariaSummary) {\n                        alert(nls.localize('aria', \"Successfully renamed '{0}' to '{1}'. Summary: {2}\", loc.text, inputFieldResult.newName, result.ariaSummary));\n                    }\n                }).catch(err => {\n                    this._notificationService.error(nls.localize('rename.failedApply', \"Rename failed to apply edits\"));\n                    this._logService.error(err);\n                });\n            }), err => {\n                this._notificationService.error(nls.localize('rename.failed', \"Rename failed to compute edits\"));\n                this._logService.error(err);\n            });\n            this._progressService.showWhile(renameOperation, 250);\n            return renameOperation;\n        });\n    }\n    acceptRenameInput(wantsPreview) {\n        this._renameInputField.value.acceptInput(wantsPreview);\n    }\n    cancelRenameInput() {\n        this._renameInputField.value.cancelInput(true);\n    }\n};\nRenameController.ID = 'editor.contrib.renameController';\nRenameController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, INotificationService),\n    __param(3, IBulkEditService),\n    __param(4, IEditorProgressService),\n    __param(5, ILogService),\n    __param(6, ITextResourceConfigurationService),\n    __param(7, ILanguageFeaturesService)\n], RenameController);\n// ---- action implementation\nexport class RenameAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.rename',\n            label: nls.localize('rename.label', \"Rename Symbol\"),\n            alias: 'Rename Symbol',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 60 /* KeyCode.F2 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            contextMenuOpts: {\n                group: '1_modification',\n                order: 1.1\n            }\n        });\n    }\n    runCommand(accessor, args) {\n        const editorService = accessor.get(ICodeEditorService);\n        const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\n        if (URI.isUri(uri) && Position.isIPosition(pos)) {\n            return editorService.openCodeEditor({ resource: uri }, editorService.getActiveCodeEditor()).then(editor => {\n                if (!editor) {\n                    return;\n                }\n                editor.setPosition(pos);\n                editor.invokeWithinContext(accessor => {\n                    this.reportTelemetry(accessor, editor);\n                    return this.run(accessor, editor);\n                });\n            }, onUnexpectedError);\n        }\n        return super.runCommand(accessor, args);\n    }\n    run(accessor, editor) {\n        const controller = RenameController.get(editor);\n        if (controller) {\n            return controller.run();\n        }\n        return Promise.resolve();\n    }\n}\nregisterEditorContribution(RenameController.ID, RenameController);\nregisterEditorAction(RenameAction);\nconst RenameCommand = EditorCommand.bindToContribution(RenameController.get);\nregisterEditorCommand(new RenameCommand({\n    id: 'acceptRenameInput',\n    precondition: CONTEXT_RENAME_INPUT_VISIBLE,\n    handler: x => x.acceptRenameInput(false),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n        kbExpr: EditorContextKeys.focus,\n        primary: 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new RenameCommand({\n    id: 'acceptRenameInputWithPreview',\n    precondition: ContextKeyExpr.and(CONTEXT_RENAME_INPUT_VISIBLE, ContextKeyExpr.has('config.editor.rename.enablePreview')),\n    handler: x => x.acceptRenameInput(true),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n        kbExpr: EditorContextKeys.focus,\n        primary: 1024 /* KeyMod.Shift */ + 3 /* KeyCode.Enter */\n    }\n}));\nregisterEditorCommand(new RenameCommand({\n    id: 'cancelRenameInput',\n    precondition: CONTEXT_RENAME_INPUT_VISIBLE,\n    handler: x => x.cancelRenameInput(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n        kbExpr: EditorContextKeys.focus,\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\n// ---- api bridge command\nregisterModelAndPositionCommand('_executeDocumentRenameProvider', function (accessor, model, position, ...args) {\n    const [newName] = args;\n    assertType(typeof newName === 'string');\n    const { renameProvider } = accessor.get(ILanguageFeaturesService);\n    return rename(renameProvider, model, position, newName);\n});\nregisterModelAndPositionCommand('_executePrepareRename', function (accessor, model, position) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const { renameProvider } = accessor.get(ILanguageFeaturesService);\n        const skeleton = new RenameSkeleton(model, position, renameProvider);\n        const loc = yield skeleton.resolveRenameLocation(CancellationToken.None);\n        if (loc === null || loc === void 0 ? void 0 : loc.rejectReason) {\n            throw new Error(loc.rejectReason);\n        }\n        return loc;\n    });\n});\n//todo@jrieken use editor options world\nRegistry.as(Extensions.Configuration).registerConfiguration({\n    id: 'editor',\n    properties: {\n        'editor.rename.enablePreview': {\n            scope: 5 /* ConfigurationScope.LANGUAGE_OVERRIDABLE */,\n            description: nls.localize('enablePreview', \"Enable/disable the ability to preview changes before renaming\"),\n            default: true,\n            type: 'boolean'\n        }\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { LinkedList } from '../../../../base/common/linkedList.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nexport class BracketSelectionRangeProvider {\n    provideSelectionRanges(model, positions) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = [];\n            for (const position of positions) {\n                const bucket = [];\n                result.push(bucket);\n                const ranges = new Map();\n                yield new Promise(resolve => BracketSelectionRangeProvider._bracketsRightYield(resolve, 0, model, position, ranges));\n                yield new Promise(resolve => BracketSelectionRangeProvider._bracketsLeftYield(resolve, 0, model, position, ranges, bucket));\n            }\n            return result;\n        });\n    }\n    static _bracketsRightYield(resolve, round, model, pos, ranges) {\n        const counts = new Map();\n        const t1 = Date.now();\n        while (true) {\n            if (round >= BracketSelectionRangeProvider._maxRounds) {\n                resolve();\n                break;\n            }\n            if (!pos) {\n                resolve();\n                break;\n            }\n            const bracket = model.bracketPairs.findNextBracket(pos);\n            if (!bracket) {\n                resolve();\n                break;\n            }\n            const d = Date.now() - t1;\n            if (d > BracketSelectionRangeProvider._maxDuration) {\n                setTimeout(() => BracketSelectionRangeProvider._bracketsRightYield(resolve, round + 1, model, pos, ranges));\n                break;\n            }\n            if (bracket.bracketInfo.isOpeningBracket) {\n                const key = bracket.bracketInfo.bracketText;\n                // wait for closing\n                const val = counts.has(key) ? counts.get(key) : 0;\n                counts.set(key, val + 1);\n            }\n            else {\n                const key = bracket.bracketInfo.getClosedBrackets()[0].bracketText;\n                // process closing\n                let val = counts.has(key) ? counts.get(key) : 0;\n                val -= 1;\n                counts.set(key, Math.max(0, val));\n                if (val < 0) {\n                    let list = ranges.get(key);\n                    if (!list) {\n                        list = new LinkedList();\n                        ranges.set(key, list);\n                    }\n                    list.push(bracket.range);\n                }\n            }\n            pos = bracket.range.getEndPosition();\n        }\n    }\n    static _bracketsLeftYield(resolve, round, model, pos, ranges, bucket) {\n        const counts = new Map();\n        const t1 = Date.now();\n        while (true) {\n            if (round >= BracketSelectionRangeProvider._maxRounds && ranges.size === 0) {\n                resolve();\n                break;\n            }\n            if (!pos) {\n                resolve();\n                break;\n            }\n            const bracket = model.bracketPairs.findPrevBracket(pos);\n            if (!bracket) {\n                resolve();\n                break;\n            }\n            const d = Date.now() - t1;\n            if (d > BracketSelectionRangeProvider._maxDuration) {\n                setTimeout(() => BracketSelectionRangeProvider._bracketsLeftYield(resolve, round + 1, model, pos, ranges, bucket));\n                break;\n            }\n            if (!bracket.bracketInfo.isOpeningBracket) {\n                const key = bracket.bracketInfo.getClosedBrackets()[0].bracketText;\n                // wait for opening\n                const val = counts.has(key) ? counts.get(key) : 0;\n                counts.set(key, val + 1);\n            }\n            else {\n                const key = bracket.bracketInfo.bracketText;\n                // opening\n                let val = counts.has(key) ? counts.get(key) : 0;\n                val -= 1;\n                counts.set(key, Math.max(0, val));\n                if (val < 0) {\n                    const list = ranges.get(key);\n                    if (list) {\n                        const closing = list.shift();\n                        if (list.size === 0) {\n                            ranges.delete(key);\n                        }\n                        const innerBracket = Range.fromPositions(bracket.range.getEndPosition(), closing.getStartPosition());\n                        const outerBracket = Range.fromPositions(bracket.range.getStartPosition(), closing.getEndPosition());\n                        bucket.push({ range: innerBracket });\n                        bucket.push({ range: outerBracket });\n                        BracketSelectionRangeProvider._addBracketLeading(model, outerBracket, bucket);\n                    }\n                }\n            }\n            pos = bracket.range.getStartPosition();\n        }\n    }\n    static _addBracketLeading(model, bracket, bucket) {\n        if (bracket.startLineNumber === bracket.endLineNumber) {\n            return;\n        }\n        // xxxxxxxx {\n        //\n        // }\n        const startLine = bracket.startLineNumber;\n        const column = model.getLineFirstNonWhitespaceColumn(startLine);\n        if (column !== 0 && column !== bracket.startColumn) {\n            bucket.push({ range: Range.fromPositions(new Position(startLine, column), bracket.getEndPosition()) });\n            bucket.push({ range: Range.fromPositions(new Position(startLine, 1), bracket.getEndPosition()) });\n        }\n        // xxxxxxxx\n        // {\n        //\n        // }\n        const aboveLine = startLine - 1;\n        if (aboveLine > 0) {\n            const column = model.getLineFirstNonWhitespaceColumn(aboveLine);\n            if (column === bracket.startColumn && column !== model.getLineLastNonWhitespaceColumn(aboveLine)) {\n                bucket.push({ range: Range.fromPositions(new Position(aboveLine, column), bracket.getEndPosition()) });\n                bucket.push({ range: Range.fromPositions(new Position(aboveLine, 1), bracket.getEndPosition()) });\n            }\n        }\n    }\n}\nBracketSelectionRangeProvider._maxDuration = 30;\nBracketSelectionRangeProvider._maxRounds = 2;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isLowerAsciiLetter, isUpperAsciiLetter } from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nexport class WordSelectionRangeProvider {\n    provideSelectionRanges(model, positions) {\n        const result = [];\n        for (const position of positions) {\n            const bucket = [];\n            result.push(bucket);\n            this._addInWordRanges(bucket, model, position);\n            this._addWordRanges(bucket, model, position);\n            this._addWhitespaceLine(bucket, model, position);\n            bucket.push({ range: model.getFullModelRange() });\n        }\n        return result;\n    }\n    _addInWordRanges(bucket, model, pos) {\n        const obj = model.getWordAtPosition(pos);\n        if (!obj) {\n            return;\n        }\n        const { word, startColumn } = obj;\n        const offset = pos.column - startColumn;\n        let start = offset;\n        let end = offset;\n        let lastCh = 0;\n        // LEFT anchor (start)\n        for (; start >= 0; start--) {\n            const ch = word.charCodeAt(start);\n            if ((start !== offset) && (ch === 95 /* CharCode.Underline */ || ch === 45 /* CharCode.Dash */)) {\n                // foo-bar OR foo_bar\n                break;\n            }\n            else if (isLowerAsciiLetter(ch) && isUpperAsciiLetter(lastCh)) {\n                // fooBar\n                break;\n            }\n            lastCh = ch;\n        }\n        start += 1;\n        // RIGHT anchor (end)\n        for (; end < word.length; end++) {\n            const ch = word.charCodeAt(end);\n            if (isUpperAsciiLetter(ch) && isLowerAsciiLetter(lastCh)) {\n                // fooBar\n                break;\n            }\n            else if (ch === 95 /* CharCode.Underline */ || ch === 45 /* CharCode.Dash */) {\n                // foo-bar OR foo_bar\n                break;\n            }\n            lastCh = ch;\n        }\n        if (start < end) {\n            bucket.push({ range: new Range(pos.lineNumber, startColumn + start, pos.lineNumber, startColumn + end) });\n        }\n    }\n    _addWordRanges(bucket, model, pos) {\n        const word = model.getWordAtPosition(pos);\n        if (word) {\n            bucket.push({ range: new Range(pos.lineNumber, word.startColumn, pos.lineNumber, word.endColumn) });\n        }\n    }\n    _addWhitespaceLine(bucket, model, pos) {\n        if (model.getLineLength(pos.lineNumber) > 0\n            && model.getLineFirstNonWhitespaceColumn(pos.lineNumber) === 0\n            && model.getLineLastNonWhitespaceColumn(pos.lineNumber) === 0) {\n            bucket.push({ range: new Range(pos.lineNumber, 1, pos.lineNumber, model.getLineMaxColumn(pos.lineNumber)) });\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { BracketSelectionRangeProvider } from './bracketSelections.js';\nimport { WordSelectionRangeProvider } from './wordSelections.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nclass SelectionRanges {\n    constructor(index, ranges) {\n        this.index = index;\n        this.ranges = ranges;\n    }\n    mov(fwd) {\n        const index = this.index + (fwd ? 1 : -1);\n        if (index < 0 || index >= this.ranges.length) {\n            return this;\n        }\n        const res = new SelectionRanges(index, this.ranges);\n        if (res.ranges[index].equalsRange(this.ranges[this.index])) {\n            // next range equals this range, retry with next-next\n            return res.mov(fwd);\n        }\n        return res;\n    }\n}\nlet SmartSelectController = class SmartSelectController {\n    constructor(_editor, _languageFeaturesService) {\n        this._editor = _editor;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._ignoreSelection = false;\n    }\n    static get(editor) {\n        return editor.getContribution(SmartSelectController.ID);\n    }\n    dispose() {\n        var _a;\n        (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n    run(forward) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._editor.hasModel()) {\n                return;\n            }\n            const selections = this._editor.getSelections();\n            const model = this._editor.getModel();\n            if (!this._state) {\n                yield provideSelectionRanges(this._languageFeaturesService.selectionRangeProvider, model, selections.map(s => s.getPosition()), this._editor.getOption(104 /* EditorOption.smartSelect */), CancellationToken.None).then(ranges => {\n                    var _a;\n                    if (!arrays.isNonEmptyArray(ranges) || ranges.length !== selections.length) {\n                        // invalid result\n                        return;\n                    }\n                    if (!this._editor.hasModel() || !arrays.equals(this._editor.getSelections(), selections, (a, b) => a.equalsSelection(b))) {\n                        // invalid editor state\n                        return;\n                    }\n                    for (let i = 0; i < ranges.length; i++) {\n                        ranges[i] = ranges[i].filter(range => {\n                            // filter ranges inside the selection\n                            return range.containsPosition(selections[i].getStartPosition()) && range.containsPosition(selections[i].getEndPosition());\n                        });\n                        // prepend current selection\n                        ranges[i].unshift(selections[i]);\n                    }\n                    this._state = ranges.map(ranges => new SelectionRanges(0, ranges));\n                    // listen to caret move and forget about state\n                    (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\n                    this._selectionListener = this._editor.onDidChangeCursorPosition(() => {\n                        var _a;\n                        if (!this._ignoreSelection) {\n                            (_a = this._selectionListener) === null || _a === void 0 ? void 0 : _a.dispose();\n                            this._state = undefined;\n                        }\n                    });\n                });\n            }\n            if (!this._state) {\n                // no state\n                return;\n            }\n            this._state = this._state.map(state => state.mov(forward));\n            const newSelections = this._state.map(state => Selection.fromPositions(state.ranges[state.index].getStartPosition(), state.ranges[state.index].getEndPosition()));\n            this._ignoreSelection = true;\n            try {\n                this._editor.setSelections(newSelections);\n            }\n            finally {\n                this._ignoreSelection = false;\n            }\n        });\n    }\n};\nSmartSelectController.ID = 'editor.contrib.smartSelectController';\nSmartSelectController = __decorate([\n    __param(1, ILanguageFeaturesService)\n], SmartSelectController);\nclass AbstractSmartSelect extends EditorAction {\n    constructor(forward, opts) {\n        super(opts);\n        this._forward = forward;\n    }\n    run(_accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = SmartSelectController.get(editor);\n            if (controller) {\n                yield controller.run(this._forward);\n            }\n        });\n    }\n}\nclass GrowSelectionAction extends AbstractSmartSelect {\n    constructor() {\n        super(true, {\n            id: 'editor.action.smartSelect.expand',\n            label: nls.localize('smartSelect.expand', \"Expand Selection\"),\n            alias: 'Expand Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 17 /* KeyCode.RightArrow */,\n                mac: {\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 17 /* KeyCode.RightArrow */,\n                    secondary: [256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 17 /* KeyCode.RightArrow */],\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '1_basic',\n                title: nls.localize({ key: 'miSmartSelectGrow', comment: ['&& denotes a mnemonic'] }, \"&&Expand Selection\"),\n                order: 2\n            }\n        });\n    }\n}\n// renamed command id\nCommandsRegistry.registerCommandAlias('editor.action.smartSelect.grow', 'editor.action.smartSelect.expand');\nclass ShrinkSelectionAction extends AbstractSmartSelect {\n    constructor() {\n        super(false, {\n            id: 'editor.action.smartSelect.shrink',\n            label: nls.localize('smartSelect.shrink', \"Shrink Selection\"),\n            alias: 'Shrink Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 15 /* KeyCode.LeftArrow */,\n                mac: {\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 15 /* KeyCode.LeftArrow */,\n                    secondary: [256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 15 /* KeyCode.LeftArrow */],\n                },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '1_basic',\n                title: nls.localize({ key: 'miSmartSelectShrink', comment: ['&& denotes a mnemonic'] }, \"&&Shrink Selection\"),\n                order: 3\n            }\n        });\n    }\n}\nregisterEditorContribution(SmartSelectController.ID, SmartSelectController);\nregisterEditorAction(GrowSelectionAction);\nregisterEditorAction(ShrinkSelectionAction);\nexport function provideSelectionRanges(registry, model, positions, options, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const providers = registry.all(model)\n            .concat(new WordSelectionRangeProvider()); // ALWAYS have word based selection range\n        if (providers.length === 1) {\n            // add word selection and bracket selection when no provider exists\n            providers.unshift(new BracketSelectionRangeProvider());\n        }\n        const work = [];\n        const allRawRanges = [];\n        for (const provider of providers) {\n            work.push(Promise.resolve(provider.provideSelectionRanges(model, positions, token)).then(allProviderRanges => {\n                if (arrays.isNonEmptyArray(allProviderRanges) && allProviderRanges.length === positions.length) {\n                    for (let i = 0; i < positions.length; i++) {\n                        if (!allRawRanges[i]) {\n                            allRawRanges[i] = [];\n                        }\n                        for (const oneProviderRanges of allProviderRanges[i]) {\n                            if (Range.isIRange(oneProviderRanges.range) && Range.containsPosition(oneProviderRanges.range, positions[i])) {\n                                allRawRanges[i].push(Range.lift(oneProviderRanges.range));\n                            }\n                        }\n                    }\n                }\n            }, onUnexpectedExternalError));\n        }\n        yield Promise.all(work);\n        return allRawRanges.map(oneRawRanges => {\n            if (oneRawRanges.length === 0) {\n                return [];\n            }\n            // sort all by start/end position\n            oneRawRanges.sort((a, b) => {\n                if (Position.isBefore(a.getStartPosition(), b.getStartPosition())) {\n                    return 1;\n                }\n                else if (Position.isBefore(b.getStartPosition(), a.getStartPosition())) {\n                    return -1;\n                }\n                else if (Position.isBefore(a.getEndPosition(), b.getEndPosition())) {\n                    return -1;\n                }\n                else if (Position.isBefore(b.getEndPosition(), a.getEndPosition())) {\n                    return 1;\n                }\n                else {\n                    return 0;\n                }\n            });\n            // remove ranges that don't contain the former range or that are equal to the\n            // former range\n            const oneRanges = [];\n            let last;\n            for (const range of oneRawRanges) {\n                if (!last || (Range.containsRange(range, last) && !Range.equalsRange(range, last))) {\n                    oneRanges.push(range);\n                    last = range;\n                }\n            }\n            if (!options.selectLeadingAndTrailingWhitespace) {\n                return oneRanges;\n            }\n            // add ranges that expand trivia at line starts and ends whenever a range\n            // wraps onto the a new line\n            const oneRangesWithTrivia = [oneRanges[0]];\n            for (let i = 1; i < oneRanges.length; i++) {\n                const prev = oneRanges[i - 1];\n                const cur = oneRanges[i];\n                if (cur.startLineNumber !== prev.startLineNumber || cur.endLineNumber !== prev.endLineNumber) {\n                    // add line/block range without leading/failing whitespace\n                    const rangeNoWhitespace = new Range(prev.startLineNumber, model.getLineFirstNonWhitespaceColumn(prev.startLineNumber), prev.endLineNumber, model.getLineLastNonWhitespaceColumn(prev.endLineNumber));\n                    if (rangeNoWhitespace.containsRange(prev) && !rangeNoWhitespace.equalsRange(prev) && cur.containsRange(rangeNoWhitespace) && !cur.equalsRange(rangeNoWhitespace)) {\n                        oneRangesWithTrivia.push(rangeNoWhitespace);\n                    }\n                    // add line/block range\n                    const rangeFull = new Range(prev.startLineNumber, 1, prev.endLineNumber, model.getLineMaxColumn(prev.endLineNumber));\n                    if (rangeFull.containsRange(prev) && !rangeFull.equalsRange(rangeNoWhitespace) && cur.containsRange(rangeFull) && !cur.equalsRange(rangeFull)) {\n                        oneRangesWithTrivia.push(rangeFull);\n                    }\n                }\n                oneRangesWithTrivia.push(cur);\n            }\n            return oneRangesWithTrivia;\n        });\n    });\n}\nCommandsRegistry.registerCommand('_executeSelectionRangeProvider', function (accessor, ...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [resource, positions] = args;\n        assertType(URI.isUri(resource));\n        const registry = accessor.get(ILanguageFeaturesService).selectionRangeProvider;\n        const reference = yield accessor.get(ITextModelService).createModelReference(resource);\n        try {\n            return provideSelectionRanges(registry, reference.object.textEditorModel, positions, { selectLeadingAndTrailingWhitespace: true }, CancellationToken.None);\n        }\n        finally {\n            reference.dispose();\n        }\n    });\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { EditorCommand, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { showSimpleSuggestions } from '../../suggest/browser/suggest.js';\nimport { localize } from '../../../../nls.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ILogService } from '../../../../platform/log/common/log.js';\nimport { SnippetSession } from './snippetSession.js';\nconst _defaultOptions = {\n    overwriteBefore: 0,\n    overwriteAfter: 0,\n    undoStopBefore: true,\n    undoStopAfter: true,\n    adjustWhitespace: true,\n    clipboardText: undefined,\n    overtypingCapturer: undefined\n};\nlet SnippetController2 = class SnippetController2 {\n    constructor(_editor, _logService, _languageFeaturesService, contextKeyService, _languageConfigurationService) {\n        this._editor = _editor;\n        this._logService = _logService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._snippetListener = new DisposableStore();\n        this._modelVersionId = -1;\n        this._inSnippet = SnippetController2.InSnippetMode.bindTo(contextKeyService);\n        this._hasNextTabstop = SnippetController2.HasNextTabstop.bindTo(contextKeyService);\n        this._hasPrevTabstop = SnippetController2.HasPrevTabstop.bindTo(contextKeyService);\n    }\n    static get(editor) {\n        return editor.getContribution(SnippetController2.ID);\n    }\n    dispose() {\n        var _a;\n        this._inSnippet.reset();\n        this._hasPrevTabstop.reset();\n        this._hasNextTabstop.reset();\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._snippetListener.dispose();\n    }\n    apply(edits, opts) {\n        try {\n            this._doInsert(edits, typeof opts === 'undefined' ? _defaultOptions : Object.assign(Object.assign({}, _defaultOptions), opts));\n        }\n        catch (e) {\n            this.cancel();\n            this._logService.error(e);\n            this._logService.error('snippet_error');\n            this._logService.error('insert_edits=', edits);\n            this._logService.error('existing_template=', this._session ? this._session._logInfo() : '<no_session>');\n        }\n    }\n    insert(template, opts) {\n        // this is here to find out more about the yet-not-understood\n        // error that sometimes happens when we fail to inserted a nested\n        // snippet\n        try {\n            this._doInsert(template, typeof opts === 'undefined' ? _defaultOptions : Object.assign(Object.assign({}, _defaultOptions), opts));\n        }\n        catch (e) {\n            this.cancel();\n            this._logService.error(e);\n            this._logService.error('snippet_error');\n            this._logService.error('insert_template=', template);\n            this._logService.error('existing_template=', this._session ? this._session._logInfo() : '<no_session>');\n        }\n    }\n    _doInsert(template, opts) {\n        var _a;\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        // don't listen while inserting the snippet\n        // as that is the inflight state causing cancelation\n        this._snippetListener.clear();\n        if (opts.undoStopBefore) {\n            this._editor.getModel().pushStackElement();\n        }\n        // don't merge\n        if (this._session && typeof template !== 'string') {\n            this.cancel();\n        }\n        if (!this._session) {\n            this._modelVersionId = this._editor.getModel().getAlternativeVersionId();\n            this._session = new SnippetSession(this._editor, template, opts, this._languageConfigurationService);\n            this._session.insert();\n        }\n        else {\n            assertType(typeof template === 'string');\n            this._session.merge(template, opts);\n        }\n        if (opts.undoStopAfter) {\n            this._editor.getModel().pushStackElement();\n        }\n        // regster completion item provider when there is any choice element\n        if ((_a = this._session) === null || _a === void 0 ? void 0 : _a.hasChoice) {\n            this._choiceCompletionItemProvider = {\n                provideCompletionItems: (model, position) => {\n                    if (!this._session || model !== this._editor.getModel() || !Position.equals(this._editor.getPosition(), position)) {\n                        return undefined;\n                    }\n                    const { activeChoice } = this._session;\n                    if (!activeChoice || activeChoice.choice.options.length === 0) {\n                        return undefined;\n                    }\n                    const word = model.getValueInRange(activeChoice.range);\n                    const isAnyOfOptions = Boolean(activeChoice.choice.options.find(o => o.value === word));\n                    const suggestions = [];\n                    for (let i = 0; i < activeChoice.choice.options.length; i++) {\n                        const option = activeChoice.choice.options[i];\n                        suggestions.push({\n                            kind: 13 /* CompletionItemKind.Value */,\n                            label: option.value,\n                            insertText: option.value,\n                            sortText: 'a'.repeat(i + 1),\n                            range: activeChoice.range,\n                            filterText: isAnyOfOptions ? `${word}_${option.value}` : undefined,\n                            command: { id: 'jumpToNextSnippetPlaceholder', title: localize('next', 'Go to next placeholder...') }\n                        });\n                    }\n                    return { suggestions };\n                }\n            };\n            const registration = this._languageFeaturesService.completionProvider.register({\n                language: this._editor.getModel().getLanguageId(),\n                pattern: this._editor.getModel().uri.fsPath,\n                scheme: this._editor.getModel().uri.scheme\n            }, this._choiceCompletionItemProvider);\n            this._snippetListener.add(registration);\n        }\n        this._updateState();\n        this._snippetListener.add(this._editor.onDidChangeModelContent(e => e.isFlush && this.cancel()));\n        this._snippetListener.add(this._editor.onDidChangeModel(() => this.cancel()));\n        this._snippetListener.add(this._editor.onDidChangeCursorSelection(() => this._updateState()));\n    }\n    _updateState() {\n        if (!this._session || !this._editor.hasModel()) {\n            // canceled in the meanwhile\n            return;\n        }\n        if (this._modelVersionId === this._editor.getModel().getAlternativeVersionId()) {\n            // undo until the 'before' state happened\n            // and makes use cancel snippet mode\n            return this.cancel();\n        }\n        if (!this._session.hasPlaceholder) {\n            // don't listen for selection changes and don't\n            // update context keys when the snippet is plain text\n            return this.cancel();\n        }\n        if (this._session.isAtLastPlaceholder || !this._session.isSelectionWithinPlaceholders()) {\n            this._editor.getModel().pushStackElement();\n            return this.cancel();\n        }\n        this._inSnippet.set(true);\n        this._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder);\n        this._hasNextTabstop.set(!this._session.isAtLastPlaceholder);\n        this._handleChoice();\n    }\n    _handleChoice() {\n        if (!this._session || !this._editor.hasModel()) {\n            this._currentChoice = undefined;\n            return;\n        }\n        const { activeChoice } = this._session;\n        if (!activeChoice || !this._choiceCompletionItemProvider) {\n            this._currentChoice = undefined;\n            return;\n        }\n        if (this._currentChoice !== activeChoice.choice) {\n            this._currentChoice = activeChoice.choice;\n            // trigger suggest with the special choice completion provider\n            queueMicrotask(() => {\n                showSimpleSuggestions(this._editor, this._choiceCompletionItemProvider);\n            });\n        }\n    }\n    finish() {\n        while (this._inSnippet.get()) {\n            this.next();\n        }\n    }\n    cancel(resetSelection = false) {\n        var _a;\n        this._inSnippet.reset();\n        this._hasPrevTabstop.reset();\n        this._hasNextTabstop.reset();\n        this._snippetListener.clear();\n        this._currentChoice = undefined;\n        (_a = this._session) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._session = undefined;\n        this._modelVersionId = -1;\n        if (resetSelection) {\n            // reset selection to the primary cursor when being asked\n            // for. this happens when explicitly cancelling snippet mode,\n            // e.g. when pressing ESC\n            this._editor.setSelections([this._editor.getSelection()]);\n        }\n    }\n    prev() {\n        if (this._session) {\n            this._session.prev();\n        }\n        this._updateState();\n    }\n    next() {\n        if (this._session) {\n            this._session.next();\n        }\n        this._updateState();\n    }\n    isInSnippet() {\n        return Boolean(this._inSnippet.get());\n    }\n};\nSnippetController2.ID = 'snippetController2';\nSnippetController2.InSnippetMode = new RawContextKey('inSnippetMode', false, localize('inSnippetMode', \"Whether the editor in current in snippet mode\"));\nSnippetController2.HasNextTabstop = new RawContextKey('hasNextTabstop', false, localize('hasNextTabstop', \"Whether there is a next tab stop when in snippet mode\"));\nSnippetController2.HasPrevTabstop = new RawContextKey('hasPrevTabstop', false, localize('hasPrevTabstop', \"Whether there is a previous tab stop when in snippet mode\"));\nSnippetController2 = __decorate([\n    __param(1, ILogService),\n    __param(2, ILanguageFeaturesService),\n    __param(3, IContextKeyService),\n    __param(4, ILanguageConfigurationService)\n], SnippetController2);\nexport { SnippetController2 };\nregisterEditorContribution(SnippetController2.ID, SnippetController2);\nconst CommandCtor = EditorCommand.bindToContribution(SnippetController2.get);\nregisterEditorCommand(new CommandCtor({\n    id: 'jumpToNextSnippetPlaceholder',\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasNextTabstop),\n    handler: ctrl => ctrl.next(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 30,\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 2 /* KeyCode.Tab */\n    }\n}));\nregisterEditorCommand(new CommandCtor({\n    id: 'jumpToPrevSnippetPlaceholder',\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasPrevTabstop),\n    handler: ctrl => ctrl.prev(),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 30,\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */\n    }\n}));\nregisterEditorCommand(new CommandCtor({\n    id: 'leaveSnippet',\n    precondition: SnippetController2.InSnippetMode,\n    handler: ctrl => ctrl.cancel(true),\n    kbOpts: {\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 30,\n        kbExpr: EditorContextKeys.editorTextFocus,\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nregisterEditorCommand(new CommandCtor({\n    id: 'acceptSnippet',\n    precondition: SnippetController2.InSnippetMode,\n    handler: ctrl => ctrl.finish(),\n    // kbOpts: {\n    // \tweight: KeybindingWeight.EditorContrib + 30,\n    // \tkbExpr: EditorContextKeys.textFocus,\n    // \tprimary: KeyCode.Enter,\n    // }\n}));\n// ---\nexport function performSnippetEdit(editor, snippet, selections) {\n    const controller = SnippetController2.get(editor);\n    if (!controller) {\n        return false;\n    }\n    editor.focus();\n    controller.apply(selections.map(selection => {\n        return {\n            range: Selection.liftSelection(selection),\n            template: snippet\n        };\n    }));\n    return controller.isInSnippet();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Scanner {\n    constructor() {\n        this.value = '';\n        this.pos = 0;\n    }\n    static isDigitCharacter(ch) {\n        return ch >= 48 /* CharCode.Digit0 */ && ch <= 57 /* CharCode.Digit9 */;\n    }\n    static isVariableCharacter(ch) {\n        return ch === 95 /* CharCode.Underline */\n            || (ch >= 97 /* CharCode.a */ && ch <= 122 /* CharCode.z */)\n            || (ch >= 65 /* CharCode.A */ && ch <= 90 /* CharCode.Z */);\n    }\n    text(value) {\n        this.value = value;\n        this.pos = 0;\n    }\n    tokenText(token) {\n        return this.value.substr(token.pos, token.len);\n    }\n    next() {\n        if (this.pos >= this.value.length) {\n            return { type: 14 /* TokenType.EOF */, pos: this.pos, len: 0 };\n        }\n        const pos = this.pos;\n        let len = 0;\n        let ch = this.value.charCodeAt(pos);\n        let type;\n        // static types\n        type = Scanner._table[ch];\n        if (typeof type === 'number') {\n            this.pos += 1;\n            return { type, pos, len: 1 };\n        }\n        // number\n        if (Scanner.isDigitCharacter(ch)) {\n            type = 8 /* TokenType.Int */;\n            do {\n                len += 1;\n                ch = this.value.charCodeAt(pos + len);\n            } while (Scanner.isDigitCharacter(ch));\n            this.pos += len;\n            return { type, pos, len };\n        }\n        // variable name\n        if (Scanner.isVariableCharacter(ch)) {\n            type = 9 /* TokenType.VariableName */;\n            do {\n                ch = this.value.charCodeAt(pos + (++len));\n            } while (Scanner.isVariableCharacter(ch) || Scanner.isDigitCharacter(ch));\n            this.pos += len;\n            return { type, pos, len };\n        }\n        // format\n        type = 10 /* TokenType.Format */;\n        do {\n            len += 1;\n            ch = this.value.charCodeAt(pos + len);\n        } while (!isNaN(ch)\n            && typeof Scanner._table[ch] === 'undefined' // not static token\n            && !Scanner.isDigitCharacter(ch) // not number\n            && !Scanner.isVariableCharacter(ch) // not variable\n        );\n        this.pos += len;\n        return { type, pos, len };\n    }\n}\nScanner._table = {\n    [36 /* CharCode.DollarSign */]: 0 /* TokenType.Dollar */,\n    [58 /* CharCode.Colon */]: 1 /* TokenType.Colon */,\n    [44 /* CharCode.Comma */]: 2 /* TokenType.Comma */,\n    [123 /* CharCode.OpenCurlyBrace */]: 3 /* TokenType.CurlyOpen */,\n    [125 /* CharCode.CloseCurlyBrace */]: 4 /* TokenType.CurlyClose */,\n    [92 /* CharCode.Backslash */]: 5 /* TokenType.Backslash */,\n    [47 /* CharCode.Slash */]: 6 /* TokenType.Forwardslash */,\n    [124 /* CharCode.Pipe */]: 7 /* TokenType.Pipe */,\n    [43 /* CharCode.Plus */]: 11 /* TokenType.Plus */,\n    [45 /* CharCode.Dash */]: 12 /* TokenType.Dash */,\n    [63 /* CharCode.QuestionMark */]: 13 /* TokenType.QuestionMark */,\n};\nexport class Marker {\n    constructor() {\n        this._children = [];\n    }\n    appendChild(child) {\n        if (child instanceof Text && this._children[this._children.length - 1] instanceof Text) {\n            // this and previous child are text -> merge them\n            this._children[this._children.length - 1].value += child.value;\n        }\n        else {\n            // normal adoption of child\n            child.parent = this;\n            this._children.push(child);\n        }\n        return this;\n    }\n    replace(child, others) {\n        const { parent } = child;\n        const idx = parent.children.indexOf(child);\n        const newChildren = parent.children.slice(0);\n        newChildren.splice(idx, 1, ...others);\n        parent._children = newChildren;\n        (function _fixParent(children, parent) {\n            for (const child of children) {\n                child.parent = parent;\n                _fixParent(child.children, child);\n            }\n        })(others, parent);\n    }\n    get children() {\n        return this._children;\n    }\n    get snippet() {\n        let candidate = this;\n        while (true) {\n            if (!candidate) {\n                return undefined;\n            }\n            if (candidate instanceof TextmateSnippet) {\n                return candidate;\n            }\n            candidate = candidate.parent;\n        }\n    }\n    toString() {\n        return this.children.reduce((prev, cur) => prev + cur.toString(), '');\n    }\n    len() {\n        return 0;\n    }\n}\nexport class Text extends Marker {\n    constructor(value) {\n        super();\n        this.value = value;\n    }\n    toString() {\n        return this.value;\n    }\n    len() {\n        return this.value.length;\n    }\n    clone() {\n        return new Text(this.value);\n    }\n}\nexport class TransformableMarker extends Marker {\n}\nexport class Placeholder extends TransformableMarker {\n    constructor(index) {\n        super();\n        this.index = index;\n    }\n    static compareByIndex(a, b) {\n        if (a.index === b.index) {\n            return 0;\n        }\n        else if (a.isFinalTabstop) {\n            return 1;\n        }\n        else if (b.isFinalTabstop) {\n            return -1;\n        }\n        else if (a.index < b.index) {\n            return -1;\n        }\n        else if (a.index > b.index) {\n            return 1;\n        }\n        else {\n            return 0;\n        }\n    }\n    get isFinalTabstop() {\n        return this.index === 0;\n    }\n    get choice() {\n        return this._children.length === 1 && this._children[0] instanceof Choice\n            ? this._children[0]\n            : undefined;\n    }\n    clone() {\n        const ret = new Placeholder(this.index);\n        if (this.transform) {\n            ret.transform = this.transform.clone();\n        }\n        ret._children = this.children.map(child => child.clone());\n        return ret;\n    }\n}\nexport class Choice extends Marker {\n    constructor() {\n        super(...arguments);\n        this.options = [];\n    }\n    appendChild(marker) {\n        if (marker instanceof Text) {\n            marker.parent = this;\n            this.options.push(marker);\n        }\n        return this;\n    }\n    toString() {\n        return this.options[0].value;\n    }\n    len() {\n        return this.options[0].len();\n    }\n    clone() {\n        const ret = new Choice();\n        this.options.forEach(ret.appendChild, ret);\n        return ret;\n    }\n}\nexport class Transform extends Marker {\n    constructor() {\n        super(...arguments);\n        this.regexp = new RegExp('');\n    }\n    resolve(value) {\n        const _this = this;\n        let didMatch = false;\n        let ret = value.replace(this.regexp, function () {\n            didMatch = true;\n            return _this._replace(Array.prototype.slice.call(arguments, 0, -2));\n        });\n        // when the regex didn't match and when the transform has\n        // else branches, then run those\n        if (!didMatch && this._children.some(child => child instanceof FormatString && Boolean(child.elseValue))) {\n            ret = this._replace([]);\n        }\n        return ret;\n    }\n    _replace(groups) {\n        let ret = '';\n        for (const marker of this._children) {\n            if (marker instanceof FormatString) {\n                let value = groups[marker.index] || '';\n                value = marker.resolve(value);\n                ret += value;\n            }\n            else {\n                ret += marker.toString();\n            }\n        }\n        return ret;\n    }\n    toString() {\n        return '';\n    }\n    clone() {\n        const ret = new Transform();\n        ret.regexp = new RegExp(this.regexp.source, '' + (this.regexp.ignoreCase ? 'i' : '') + (this.regexp.global ? 'g' : ''));\n        ret._children = this.children.map(child => child.clone());\n        return ret;\n    }\n}\nexport class FormatString extends Marker {\n    constructor(index, shorthandName, ifValue, elseValue) {\n        super();\n        this.index = index;\n        this.shorthandName = shorthandName;\n        this.ifValue = ifValue;\n        this.elseValue = elseValue;\n    }\n    resolve(value) {\n        if (this.shorthandName === 'upcase') {\n            return !value ? '' : value.toLocaleUpperCase();\n        }\n        else if (this.shorthandName === 'downcase') {\n            return !value ? '' : value.toLocaleLowerCase();\n        }\n        else if (this.shorthandName === 'capitalize') {\n            return !value ? '' : (value[0].toLocaleUpperCase() + value.substr(1));\n        }\n        else if (this.shorthandName === 'pascalcase') {\n            return !value ? '' : this._toPascalCase(value);\n        }\n        else if (this.shorthandName === 'camelcase') {\n            return !value ? '' : this._toCamelCase(value);\n        }\n        else if (Boolean(value) && typeof this.ifValue === 'string') {\n            return this.ifValue;\n        }\n        else if (!Boolean(value) && typeof this.elseValue === 'string') {\n            return this.elseValue;\n        }\n        else {\n            return value || '';\n        }\n    }\n    _toPascalCase(value) {\n        const match = value.match(/[a-z0-9]+/gi);\n        if (!match) {\n            return value;\n        }\n        return match.map(word => {\n            return word.charAt(0).toUpperCase() + word.substr(1);\n        })\n            .join('');\n    }\n    _toCamelCase(value) {\n        const match = value.match(/[a-z0-9]+/gi);\n        if (!match) {\n            return value;\n        }\n        return match.map((word, index) => {\n            if (index === 0) {\n                return word.charAt(0).toLowerCase() + word.substr(1);\n            }\n            return word.charAt(0).toUpperCase() + word.substr(1);\n        })\n            .join('');\n    }\n    clone() {\n        const ret = new FormatString(this.index, this.shorthandName, this.ifValue, this.elseValue);\n        return ret;\n    }\n}\nexport class Variable extends TransformableMarker {\n    constructor(name) {\n        super();\n        this.name = name;\n    }\n    resolve(resolver) {\n        let value = resolver.resolve(this);\n        if (this.transform) {\n            value = this.transform.resolve(value || '');\n        }\n        if (value !== undefined) {\n            this._children = [new Text(value)];\n            return true;\n        }\n        return false;\n    }\n    clone() {\n        const ret = new Variable(this.name);\n        if (this.transform) {\n            ret.transform = this.transform.clone();\n        }\n        ret._children = this.children.map(child => child.clone());\n        return ret;\n    }\n}\nfunction walk(marker, visitor) {\n    const stack = [...marker];\n    while (stack.length > 0) {\n        const marker = stack.shift();\n        const recurse = visitor(marker);\n        if (!recurse) {\n            break;\n        }\n        stack.unshift(...marker.children);\n    }\n}\nexport class TextmateSnippet extends Marker {\n    get placeholderInfo() {\n        if (!this._placeholders) {\n            // fill in placeholders\n            const all = [];\n            let last;\n            this.walk(function (candidate) {\n                if (candidate instanceof Placeholder) {\n                    all.push(candidate);\n                    last = !last || last.index < candidate.index ? candidate : last;\n                }\n                return true;\n            });\n            this._placeholders = { all, last };\n        }\n        return this._placeholders;\n    }\n    get placeholders() {\n        const { all } = this.placeholderInfo;\n        return all;\n    }\n    offset(marker) {\n        let pos = 0;\n        let found = false;\n        this.walk(candidate => {\n            if (candidate === marker) {\n                found = true;\n                return false;\n            }\n            pos += candidate.len();\n            return true;\n        });\n        if (!found) {\n            return -1;\n        }\n        return pos;\n    }\n    fullLen(marker) {\n        let ret = 0;\n        walk([marker], marker => {\n            ret += marker.len();\n            return true;\n        });\n        return ret;\n    }\n    enclosingPlaceholders(placeholder) {\n        const ret = [];\n        let { parent } = placeholder;\n        while (parent) {\n            if (parent instanceof Placeholder) {\n                ret.push(parent);\n            }\n            parent = parent.parent;\n        }\n        return ret;\n    }\n    resolveVariables(resolver) {\n        this.walk(candidate => {\n            if (candidate instanceof Variable) {\n                if (candidate.resolve(resolver)) {\n                    this._placeholders = undefined;\n                }\n            }\n            return true;\n        });\n        return this;\n    }\n    appendChild(child) {\n        this._placeholders = undefined;\n        return super.appendChild(child);\n    }\n    replace(child, others) {\n        this._placeholders = undefined;\n        return super.replace(child, others);\n    }\n    clone() {\n        const ret = new TextmateSnippet();\n        this._children = this.children.map(child => child.clone());\n        return ret;\n    }\n    walk(visitor) {\n        walk(this.children, visitor);\n    }\n}\nexport class SnippetParser {\n    constructor() {\n        this._scanner = new Scanner();\n        this._token = { type: 14 /* TokenType.EOF */, pos: 0, len: 0 };\n    }\n    static escape(value) {\n        return value.replace(/\\$|}|\\\\/g, '\\\\$&');\n    }\n    static guessNeedsClipboard(template) {\n        return /\\${?CLIPBOARD/.test(template);\n    }\n    parse(value, insertFinalTabstop, enforceFinalTabstop) {\n        const snippet = new TextmateSnippet();\n        this.parseFragment(value, snippet);\n        this.ensureFinalTabstop(snippet, enforceFinalTabstop !== null && enforceFinalTabstop !== void 0 ? enforceFinalTabstop : false, insertFinalTabstop !== null && insertFinalTabstop !== void 0 ? insertFinalTabstop : false);\n        return snippet;\n    }\n    parseFragment(value, snippet) {\n        const offset = snippet.children.length;\n        this._scanner.text(value);\n        this._token = this._scanner.next();\n        while (this._parse(snippet)) {\n            // nothing\n        }\n        // fill in values for placeholders. the first placeholder of an index\n        // that has a value defines the value for all placeholders with that index\n        const placeholderDefaultValues = new Map();\n        const incompletePlaceholders = [];\n        snippet.walk(marker => {\n            if (marker instanceof Placeholder) {\n                if (marker.isFinalTabstop) {\n                    placeholderDefaultValues.set(0, undefined);\n                }\n                else if (!placeholderDefaultValues.has(marker.index) && marker.children.length > 0) {\n                    placeholderDefaultValues.set(marker.index, marker.children);\n                }\n                else {\n                    incompletePlaceholders.push(marker);\n                }\n            }\n            return true;\n        });\n        for (const placeholder of incompletePlaceholders) {\n            const defaultValues = placeholderDefaultValues.get(placeholder.index);\n            if (defaultValues) {\n                const clone = new Placeholder(placeholder.index);\n                clone.transform = placeholder.transform;\n                for (const child of defaultValues) {\n                    clone.appendChild(child.clone());\n                }\n                snippet.replace(placeholder, [clone]);\n            }\n        }\n        return snippet.children.slice(offset);\n    }\n    ensureFinalTabstop(snippet, enforceFinalTabstop, insertFinalTabstop) {\n        if (enforceFinalTabstop || insertFinalTabstop && snippet.placeholders.length > 0) {\n            const finalTabstop = snippet.placeholders.find(p => p.index === 0);\n            if (!finalTabstop) {\n                // the snippet uses placeholders but has no\n                // final tabstop defined -> insert at the end\n                snippet.appendChild(new Placeholder(0));\n            }\n        }\n    }\n    _accept(type, value) {\n        if (type === undefined || this._token.type === type) {\n            const ret = !value ? true : this._scanner.tokenText(this._token);\n            this._token = this._scanner.next();\n            return ret;\n        }\n        return false;\n    }\n    _backTo(token) {\n        this._scanner.pos = token.pos + token.len;\n        this._token = token;\n        return false;\n    }\n    _until(type) {\n        const start = this._token;\n        while (this._token.type !== type) {\n            if (this._token.type === 14 /* TokenType.EOF */) {\n                return false;\n            }\n            else if (this._token.type === 5 /* TokenType.Backslash */) {\n                const nextToken = this._scanner.next();\n                if (nextToken.type !== 0 /* TokenType.Dollar */\n                    && nextToken.type !== 4 /* TokenType.CurlyClose */\n                    && nextToken.type !== 5 /* TokenType.Backslash */) {\n                    return false;\n                }\n            }\n            this._token = this._scanner.next();\n        }\n        const value = this._scanner.value.substring(start.pos, this._token.pos).replace(/\\\\(\\$|}|\\\\)/g, '$1');\n        this._token = this._scanner.next();\n        return value;\n    }\n    _parse(marker) {\n        return this._parseEscaped(marker)\n            || this._parseTabstopOrVariableName(marker)\n            || this._parseComplexPlaceholder(marker)\n            || this._parseComplexVariable(marker)\n            || this._parseAnything(marker);\n    }\n    // \\$, \\\\, \\} -> just text\n    _parseEscaped(marker) {\n        let value;\n        if (value = this._accept(5 /* TokenType.Backslash */, true)) {\n            // saw a backslash, append escaped token or that backslash\n            value = this._accept(0 /* TokenType.Dollar */, true)\n                || this._accept(4 /* TokenType.CurlyClose */, true)\n                || this._accept(5 /* TokenType.Backslash */, true)\n                || value;\n            marker.appendChild(new Text(value));\n            return true;\n        }\n        return false;\n    }\n    // $foo -> variable, $1 -> tabstop\n    _parseTabstopOrVariableName(parent) {\n        let value;\n        const token = this._token;\n        const match = this._accept(0 /* TokenType.Dollar */)\n            && (value = this._accept(9 /* TokenType.VariableName */, true) || this._accept(8 /* TokenType.Int */, true));\n        if (!match) {\n            return this._backTo(token);\n        }\n        parent.appendChild(/^\\d+$/.test(value)\n            ? new Placeholder(Number(value))\n            : new Variable(value));\n        return true;\n    }\n    // ${1:<children>}, ${1} -> placeholder\n    _parseComplexPlaceholder(parent) {\n        let index;\n        const token = this._token;\n        const match = this._accept(0 /* TokenType.Dollar */)\n            && this._accept(3 /* TokenType.CurlyOpen */)\n            && (index = this._accept(8 /* TokenType.Int */, true));\n        if (!match) {\n            return this._backTo(token);\n        }\n        const placeholder = new Placeholder(Number(index));\n        if (this._accept(1 /* TokenType.Colon */)) {\n            // ${1:<children>}\n            while (true) {\n                // ...} -> done\n                if (this._accept(4 /* TokenType.CurlyClose */)) {\n                    parent.appendChild(placeholder);\n                    return true;\n                }\n                if (this._parse(placeholder)) {\n                    continue;\n                }\n                // fallback\n                parent.appendChild(new Text('${' + index + ':'));\n                placeholder.children.forEach(parent.appendChild, parent);\n                return true;\n            }\n        }\n        else if (placeholder.index > 0 && this._accept(7 /* TokenType.Pipe */)) {\n            // ${1|one,two,three|}\n            const choice = new Choice();\n            while (true) {\n                if (this._parseChoiceElement(choice)) {\n                    if (this._accept(2 /* TokenType.Comma */)) {\n                        // opt, -> more\n                        continue;\n                    }\n                    if (this._accept(7 /* TokenType.Pipe */)) {\n                        placeholder.appendChild(choice);\n                        if (this._accept(4 /* TokenType.CurlyClose */)) {\n                            // ..|} -> done\n                            parent.appendChild(placeholder);\n                            return true;\n                        }\n                    }\n                }\n                this._backTo(token);\n                return false;\n            }\n        }\n        else if (this._accept(6 /* TokenType.Forwardslash */)) {\n            // ${1/<regex>/<format>/<options>}\n            if (this._parseTransform(placeholder)) {\n                parent.appendChild(placeholder);\n                return true;\n            }\n            this._backTo(token);\n            return false;\n        }\n        else if (this._accept(4 /* TokenType.CurlyClose */)) {\n            // ${1}\n            parent.appendChild(placeholder);\n            return true;\n        }\n        else {\n            // ${1 <- missing curly or colon\n            return this._backTo(token);\n        }\n    }\n    _parseChoiceElement(parent) {\n        const token = this._token;\n        const values = [];\n        while (true) {\n            if (this._token.type === 2 /* TokenType.Comma */ || this._token.type === 7 /* TokenType.Pipe */) {\n                break;\n            }\n            let value;\n            if (value = this._accept(5 /* TokenType.Backslash */, true)) {\n                // \\, \\|, or \\\\\n                value = this._accept(2 /* TokenType.Comma */, true)\n                    || this._accept(7 /* TokenType.Pipe */, true)\n                    || this._accept(5 /* TokenType.Backslash */, true)\n                    || value;\n            }\n            else {\n                value = this._accept(undefined, true);\n            }\n            if (!value) {\n                // EOF\n                this._backTo(token);\n                return false;\n            }\n            values.push(value);\n        }\n        if (values.length === 0) {\n            this._backTo(token);\n            return false;\n        }\n        parent.appendChild(new Text(values.join('')));\n        return true;\n    }\n    // ${foo:<children>}, ${foo} -> variable\n    _parseComplexVariable(parent) {\n        let name;\n        const token = this._token;\n        const match = this._accept(0 /* TokenType.Dollar */)\n            && this._accept(3 /* TokenType.CurlyOpen */)\n            && (name = this._accept(9 /* TokenType.VariableName */, true));\n        if (!match) {\n            return this._backTo(token);\n        }\n        const variable = new Variable(name);\n        if (this._accept(1 /* TokenType.Colon */)) {\n            // ${foo:<children>}\n            while (true) {\n                // ...} -> done\n                if (this._accept(4 /* TokenType.CurlyClose */)) {\n                    parent.appendChild(variable);\n                    return true;\n                }\n                if (this._parse(variable)) {\n                    continue;\n                }\n                // fallback\n                parent.appendChild(new Text('${' + name + ':'));\n                variable.children.forEach(parent.appendChild, parent);\n                return true;\n            }\n        }\n        else if (this._accept(6 /* TokenType.Forwardslash */)) {\n            // ${foo/<regex>/<format>/<options>}\n            if (this._parseTransform(variable)) {\n                parent.appendChild(variable);\n                return true;\n            }\n            this._backTo(token);\n            return false;\n        }\n        else if (this._accept(4 /* TokenType.CurlyClose */)) {\n            // ${foo}\n            parent.appendChild(variable);\n            return true;\n        }\n        else {\n            // ${foo <- missing curly or colon\n            return this._backTo(token);\n        }\n    }\n    _parseTransform(parent) {\n        // ...<regex>/<format>/<options>}\n        const transform = new Transform();\n        let regexValue = '';\n        let regexOptions = '';\n        // (1) /regex\n        while (true) {\n            if (this._accept(6 /* TokenType.Forwardslash */)) {\n                break;\n            }\n            let escaped;\n            if (escaped = this._accept(5 /* TokenType.Backslash */, true)) {\n                escaped = this._accept(6 /* TokenType.Forwardslash */, true) || escaped;\n                regexValue += escaped;\n                continue;\n            }\n            if (this._token.type !== 14 /* TokenType.EOF */) {\n                regexValue += this._accept(undefined, true);\n                continue;\n            }\n            return false;\n        }\n        // (2) /format\n        while (true) {\n            if (this._accept(6 /* TokenType.Forwardslash */)) {\n                break;\n            }\n            let escaped;\n            if (escaped = this._accept(5 /* TokenType.Backslash */, true)) {\n                escaped = this._accept(5 /* TokenType.Backslash */, true) || this._accept(6 /* TokenType.Forwardslash */, true) || escaped;\n                transform.appendChild(new Text(escaped));\n                continue;\n            }\n            if (this._parseFormatString(transform) || this._parseAnything(transform)) {\n                continue;\n            }\n            return false;\n        }\n        // (3) /option\n        while (true) {\n            if (this._accept(4 /* TokenType.CurlyClose */)) {\n                break;\n            }\n            if (this._token.type !== 14 /* TokenType.EOF */) {\n                regexOptions += this._accept(undefined, true);\n                continue;\n            }\n            return false;\n        }\n        try {\n            transform.regexp = new RegExp(regexValue, regexOptions);\n        }\n        catch (e) {\n            // invalid regexp\n            return false;\n        }\n        parent.transform = transform;\n        return true;\n    }\n    _parseFormatString(parent) {\n        const token = this._token;\n        if (!this._accept(0 /* TokenType.Dollar */)) {\n            return false;\n        }\n        let complex = false;\n        if (this._accept(3 /* TokenType.CurlyOpen */)) {\n            complex = true;\n        }\n        const index = this._accept(8 /* TokenType.Int */, true);\n        if (!index) {\n            this._backTo(token);\n            return false;\n        }\n        else if (!complex) {\n            // $1\n            parent.appendChild(new FormatString(Number(index)));\n            return true;\n        }\n        else if (this._accept(4 /* TokenType.CurlyClose */)) {\n            // ${1}\n            parent.appendChild(new FormatString(Number(index)));\n            return true;\n        }\n        else if (!this._accept(1 /* TokenType.Colon */)) {\n            this._backTo(token);\n            return false;\n        }\n        if (this._accept(6 /* TokenType.Forwardslash */)) {\n            // ${1:/upcase}\n            const shorthand = this._accept(9 /* TokenType.VariableName */, true);\n            if (!shorthand || !this._accept(4 /* TokenType.CurlyClose */)) {\n                this._backTo(token);\n                return false;\n            }\n            else {\n                parent.appendChild(new FormatString(Number(index), shorthand));\n                return true;\n            }\n        }\n        else if (this._accept(11 /* TokenType.Plus */)) {\n            // ${1:+<if>}\n            const ifValue = this._until(4 /* TokenType.CurlyClose */);\n            if (ifValue) {\n                parent.appendChild(new FormatString(Number(index), undefined, ifValue, undefined));\n                return true;\n            }\n        }\n        else if (this._accept(12 /* TokenType.Dash */)) {\n            // ${2:-<else>}\n            const elseValue = this._until(4 /* TokenType.CurlyClose */);\n            if (elseValue) {\n                parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\n                return true;\n            }\n        }\n        else if (this._accept(13 /* TokenType.QuestionMark */)) {\n            // ${2:?<if>:<else>}\n            const ifValue = this._until(1 /* TokenType.Colon */);\n            if (ifValue) {\n                const elseValue = this._until(4 /* TokenType.CurlyClose */);\n                if (elseValue) {\n                    parent.appendChild(new FormatString(Number(index), undefined, ifValue, elseValue));\n                    return true;\n                }\n            }\n        }\n        else {\n            // ${1:<else>}\n            const elseValue = this._until(4 /* TokenType.CurlyClose */);\n            if (elseValue) {\n                parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\n                return true;\n            }\n        }\n        this._backTo(token);\n        return false;\n    }\n    _parseAnything(marker) {\n        if (this._token.type !== 14 /* TokenType.EOF */) {\n            marker.appendChild(new Text(this._scanner.tokenText(this._token)));\n            this._accept(undefined);\n            return true;\n        }\n        return false;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { normalizeDriveLetter } from '../../../../base/common/labels.js';\nimport * as path from '../../../../base/common/path.js';\nimport { dirname } from '../../../../base/common/resources.js';\nimport { commonPrefixLength, getLeadingWhitespace, isFalsyOrWhitespace, splitLines } from '../../../../base/common/strings.js';\nimport { generateUuid } from '../../../../base/common/uuid.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { Text } from './snippetParser.js';\nimport * as nls from '../../../../nls.js';\nimport { WORKSPACE_EXTENSION, isSingleFolderWorkspaceIdentifier, toWorkspaceIdentifier } from '../../../../platform/workspace/common/workspace.js';\nexport const KnownSnippetVariableNames = Object.freeze({\n    'CURRENT_YEAR': true,\n    'CURRENT_YEAR_SHORT': true,\n    'CURRENT_MONTH': true,\n    'CURRENT_DATE': true,\n    'CURRENT_HOUR': true,\n    'CURRENT_MINUTE': true,\n    'CURRENT_SECOND': true,\n    'CURRENT_DAY_NAME': true,\n    'CURRENT_DAY_NAME_SHORT': true,\n    'CURRENT_MONTH_NAME': true,\n    'CURRENT_MONTH_NAME_SHORT': true,\n    'CURRENT_SECONDS_UNIX': true,\n    'SELECTION': true,\n    'CLIPBOARD': true,\n    'TM_SELECTED_TEXT': true,\n    'TM_CURRENT_LINE': true,\n    'TM_CURRENT_WORD': true,\n    'TM_LINE_INDEX': true,\n    'TM_LINE_NUMBER': true,\n    'TM_FILENAME': true,\n    'TM_FILENAME_BASE': true,\n    'TM_DIRECTORY': true,\n    'TM_FILEPATH': true,\n    'CURSOR_INDEX': true,\n    'CURSOR_NUMBER': true,\n    'RELATIVE_FILEPATH': true,\n    'BLOCK_COMMENT_START': true,\n    'BLOCK_COMMENT_END': true,\n    'LINE_COMMENT': true,\n    'WORKSPACE_NAME': true,\n    'WORKSPACE_FOLDER': true,\n    'RANDOM': true,\n    'RANDOM_HEX': true,\n    'UUID': true\n});\nexport class CompositeSnippetVariableResolver {\n    constructor(_delegates) {\n        this._delegates = _delegates;\n        //\n    }\n    resolve(variable) {\n        for (const delegate of this._delegates) {\n            const value = delegate.resolve(variable);\n            if (value !== undefined) {\n                return value;\n            }\n        }\n        return undefined;\n    }\n}\nexport class SelectionBasedVariableResolver {\n    constructor(_model, _selection, _selectionIdx, _overtypingCapturer) {\n        this._model = _model;\n        this._selection = _selection;\n        this._selectionIdx = _selectionIdx;\n        this._overtypingCapturer = _overtypingCapturer;\n        //\n    }\n    resolve(variable) {\n        const { name } = variable;\n        if (name === 'SELECTION' || name === 'TM_SELECTED_TEXT') {\n            let value = this._model.getValueInRange(this._selection) || undefined;\n            let isMultiline = this._selection.startLineNumber !== this._selection.endLineNumber;\n            // If there was no selected text, try to get last overtyped text\n            if (!value && this._overtypingCapturer) {\n                const info = this._overtypingCapturer.getLastOvertypedInfo(this._selectionIdx);\n                if (info) {\n                    value = info.value;\n                    isMultiline = info.multiline;\n                }\n            }\n            if (value && isMultiline && variable.snippet) {\n                // Selection is a multiline string which we indentation we now\n                // need to adjust. We compare the indentation of this variable\n                // with the indentation at the editor position and add potential\n                // extra indentation to the value\n                const line = this._model.getLineContent(this._selection.startLineNumber);\n                const lineLeadingWhitespace = getLeadingWhitespace(line, 0, this._selection.startColumn - 1);\n                let varLeadingWhitespace = lineLeadingWhitespace;\n                variable.snippet.walk(marker => {\n                    if (marker === variable) {\n                        return false;\n                    }\n                    if (marker instanceof Text) {\n                        varLeadingWhitespace = getLeadingWhitespace(splitLines(marker.value).pop());\n                    }\n                    return true;\n                });\n                const whitespaceCommonLength = commonPrefixLength(varLeadingWhitespace, lineLeadingWhitespace);\n                value = value.replace(/(\\r\\n|\\r|\\n)(.*)/g, (m, newline, rest) => `${newline}${varLeadingWhitespace.substr(whitespaceCommonLength)}${rest}`);\n            }\n            return value;\n        }\n        else if (name === 'TM_CURRENT_LINE') {\n            return this._model.getLineContent(this._selection.positionLineNumber);\n        }\n        else if (name === 'TM_CURRENT_WORD') {\n            const info = this._model.getWordAtPosition({\n                lineNumber: this._selection.positionLineNumber,\n                column: this._selection.positionColumn\n            });\n            return info && info.word || undefined;\n        }\n        else if (name === 'TM_LINE_INDEX') {\n            return String(this._selection.positionLineNumber - 1);\n        }\n        else if (name === 'TM_LINE_NUMBER') {\n            return String(this._selection.positionLineNumber);\n        }\n        else if (name === 'CURSOR_INDEX') {\n            return String(this._selectionIdx);\n        }\n        else if (name === 'CURSOR_NUMBER') {\n            return String(this._selectionIdx + 1);\n        }\n        return undefined;\n    }\n}\nexport class ModelBasedVariableResolver {\n    constructor(_labelService, _model) {\n        this._labelService = _labelService;\n        this._model = _model;\n        //\n    }\n    resolve(variable) {\n        const { name } = variable;\n        if (name === 'TM_FILENAME') {\n            return path.basename(this._model.uri.fsPath);\n        }\n        else if (name === 'TM_FILENAME_BASE') {\n            const name = path.basename(this._model.uri.fsPath);\n            const idx = name.lastIndexOf('.');\n            if (idx <= 0) {\n                return name;\n            }\n            else {\n                return name.slice(0, idx);\n            }\n        }\n        else if (name === 'TM_DIRECTORY') {\n            if (path.dirname(this._model.uri.fsPath) === '.') {\n                return '';\n            }\n            return this._labelService.getUriLabel(dirname(this._model.uri));\n        }\n        else if (name === 'TM_FILEPATH') {\n            return this._labelService.getUriLabel(this._model.uri);\n        }\n        else if (name === 'RELATIVE_FILEPATH') {\n            return this._labelService.getUriLabel(this._model.uri, { relative: true, noPrefix: true });\n        }\n        return undefined;\n    }\n}\nexport class ClipboardBasedVariableResolver {\n    constructor(_readClipboardText, _selectionIdx, _selectionCount, _spread) {\n        this._readClipboardText = _readClipboardText;\n        this._selectionIdx = _selectionIdx;\n        this._selectionCount = _selectionCount;\n        this._spread = _spread;\n        //\n    }\n    resolve(variable) {\n        if (variable.name !== 'CLIPBOARD') {\n            return undefined;\n        }\n        const clipboardText = this._readClipboardText();\n        if (!clipboardText) {\n            return undefined;\n        }\n        // `spread` is assigning each cursor a line of the clipboard\n        // text whenever there the line count equals the cursor count\n        // and when enabled\n        if (this._spread) {\n            const lines = clipboardText.split(/\\r\\n|\\n|\\r/).filter(s => !isFalsyOrWhitespace(s));\n            if (lines.length === this._selectionCount) {\n                return lines[this._selectionIdx];\n            }\n        }\n        return clipboardText;\n    }\n}\nlet CommentBasedVariableResolver = class CommentBasedVariableResolver {\n    constructor(_model, _selection, _languageConfigurationService) {\n        this._model = _model;\n        this._selection = _selection;\n        this._languageConfigurationService = _languageConfigurationService;\n        //\n    }\n    resolve(variable) {\n        const { name } = variable;\n        const langId = this._model.getLanguageIdAtPosition(this._selection.selectionStartLineNumber, this._selection.selectionStartColumn);\n        const config = this._languageConfigurationService.getLanguageConfiguration(langId).comments;\n        if (!config) {\n            return undefined;\n        }\n        if (name === 'LINE_COMMENT') {\n            return config.lineCommentToken || undefined;\n        }\n        else if (name === 'BLOCK_COMMENT_START') {\n            return config.blockCommentStartToken || undefined;\n        }\n        else if (name === 'BLOCK_COMMENT_END') {\n            return config.blockCommentEndToken || undefined;\n        }\n        return undefined;\n    }\n};\nCommentBasedVariableResolver = __decorate([\n    __param(2, ILanguageConfigurationService)\n], CommentBasedVariableResolver);\nexport { CommentBasedVariableResolver };\nexport class TimeBasedVariableResolver {\n    constructor() {\n        this._date = new Date();\n    }\n    resolve(variable) {\n        const { name } = variable;\n        if (name === 'CURRENT_YEAR') {\n            return String(this._date.getFullYear());\n        }\n        else if (name === 'CURRENT_YEAR_SHORT') {\n            return String(this._date.getFullYear()).slice(-2);\n        }\n        else if (name === 'CURRENT_MONTH') {\n            return String(this._date.getMonth().valueOf() + 1).padStart(2, '0');\n        }\n        else if (name === 'CURRENT_DATE') {\n            return String(this._date.getDate().valueOf()).padStart(2, '0');\n        }\n        else if (name === 'CURRENT_HOUR') {\n            return String(this._date.getHours().valueOf()).padStart(2, '0');\n        }\n        else if (name === 'CURRENT_MINUTE') {\n            return String(this._date.getMinutes().valueOf()).padStart(2, '0');\n        }\n        else if (name === 'CURRENT_SECOND') {\n            return String(this._date.getSeconds().valueOf()).padStart(2, '0');\n        }\n        else if (name === 'CURRENT_DAY_NAME') {\n            return TimeBasedVariableResolver.dayNames[this._date.getDay()];\n        }\n        else if (name === 'CURRENT_DAY_NAME_SHORT') {\n            return TimeBasedVariableResolver.dayNamesShort[this._date.getDay()];\n        }\n        else if (name === 'CURRENT_MONTH_NAME') {\n            return TimeBasedVariableResolver.monthNames[this._date.getMonth()];\n        }\n        else if (name === 'CURRENT_MONTH_NAME_SHORT') {\n            return TimeBasedVariableResolver.monthNamesShort[this._date.getMonth()];\n        }\n        else if (name === 'CURRENT_SECONDS_UNIX') {\n            return String(Math.floor(this._date.getTime() / 1000));\n        }\n        return undefined;\n    }\n}\nTimeBasedVariableResolver.dayNames = [nls.localize('Sunday', \"Sunday\"), nls.localize('Monday', \"Monday\"), nls.localize('Tuesday', \"Tuesday\"), nls.localize('Wednesday', \"Wednesday\"), nls.localize('Thursday', \"Thursday\"), nls.localize('Friday', \"Friday\"), nls.localize('Saturday', \"Saturday\")];\nTimeBasedVariableResolver.dayNamesShort = [nls.localize('SundayShort', \"Sun\"), nls.localize('MondayShort', \"Mon\"), nls.localize('TuesdayShort', \"Tue\"), nls.localize('WednesdayShort', \"Wed\"), nls.localize('ThursdayShort', \"Thu\"), nls.localize('FridayShort', \"Fri\"), nls.localize('SaturdayShort', \"Sat\")];\nTimeBasedVariableResolver.monthNames = [nls.localize('January', \"January\"), nls.localize('February', \"February\"), nls.localize('March', \"March\"), nls.localize('April', \"April\"), nls.localize('May', \"May\"), nls.localize('June', \"June\"), nls.localize('July', \"July\"), nls.localize('August', \"August\"), nls.localize('September', \"September\"), nls.localize('October', \"October\"), nls.localize('November', \"November\"), nls.localize('December', \"December\")];\nTimeBasedVariableResolver.monthNamesShort = [nls.localize('JanuaryShort', \"Jan\"), nls.localize('FebruaryShort', \"Feb\"), nls.localize('MarchShort', \"Mar\"), nls.localize('AprilShort', \"Apr\"), nls.localize('MayShort', \"May\"), nls.localize('JuneShort', \"Jun\"), nls.localize('JulyShort', \"Jul\"), nls.localize('AugustShort', \"Aug\"), nls.localize('SeptemberShort', \"Sep\"), nls.localize('OctoberShort', \"Oct\"), nls.localize('NovemberShort', \"Nov\"), nls.localize('DecemberShort', \"Dec\")];\nexport class WorkspaceBasedVariableResolver {\n    constructor(_workspaceService) {\n        this._workspaceService = _workspaceService;\n        //\n    }\n    resolve(variable) {\n        if (!this._workspaceService) {\n            return undefined;\n        }\n        const workspaceIdentifier = toWorkspaceIdentifier(this._workspaceService.getWorkspace());\n        if (!workspaceIdentifier) {\n            return undefined;\n        }\n        if (variable.name === 'WORKSPACE_NAME') {\n            return this._resolveWorkspaceName(workspaceIdentifier);\n        }\n        else if (variable.name === 'WORKSPACE_FOLDER') {\n            return this._resoveWorkspacePath(workspaceIdentifier);\n        }\n        return undefined;\n    }\n    _resolveWorkspaceName(workspaceIdentifier) {\n        if (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\n            return path.basename(workspaceIdentifier.uri.path);\n        }\n        let filename = path.basename(workspaceIdentifier.configPath.path);\n        if (filename.endsWith(WORKSPACE_EXTENSION)) {\n            filename = filename.substr(0, filename.length - WORKSPACE_EXTENSION.length - 1);\n        }\n        return filename;\n    }\n    _resoveWorkspacePath(workspaceIdentifier) {\n        if (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\n            return normalizeDriveLetter(workspaceIdentifier.uri.fsPath);\n        }\n        const filename = path.basename(workspaceIdentifier.configPath.path);\n        let folderpath = workspaceIdentifier.configPath.fsPath;\n        if (folderpath.endsWith(filename)) {\n            folderpath = folderpath.substr(0, folderpath.length - filename.length - 1);\n        }\n        return (folderpath ? normalizeDriveLetter(folderpath) : '/');\n    }\n}\nexport class RandomBasedVariableResolver {\n    resolve(variable) {\n        const { name } = variable;\n        if (name === 'RANDOM') {\n            return Math.random().toString().slice(-6);\n        }\n        else if (name === 'RANDOM_HEX') {\n            return Math.random().toString(16).slice(-6);\n        }\n        else if (name === 'UUID') {\n            return generateUuid();\n        }\n        return undefined;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { groupBy } from '../../../../base/common/arrays.js';\nimport { dispose } from '../../../../base/common/lifecycle.js';\nimport { getLeadingWhitespace } from '../../../../base/common/strings.js';\nimport './snippetSession.css';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILabelService } from '../../../../platform/label/common/label.js';\nimport { IWorkspaceContextService } from '../../../../platform/workspace/common/workspace.js';\nimport { Choice, Placeholder, SnippetParser, Text, TextmateSnippet } from './snippetParser.js';\nimport { ClipboardBasedVariableResolver, CommentBasedVariableResolver, CompositeSnippetVariableResolver, ModelBasedVariableResolver, RandomBasedVariableResolver, SelectionBasedVariableResolver, TimeBasedVariableResolver, WorkspaceBasedVariableResolver } from './snippetVariables.js';\nexport class OneSnippet {\n    constructor(_editor, _snippet, _snippetLineLeadingWhitespace) {\n        this._editor = _editor;\n        this._snippet = _snippet;\n        this._snippetLineLeadingWhitespace = _snippetLineLeadingWhitespace;\n        this._offset = -1;\n        this._nestingLevel = 1;\n        this._placeholderGroups = groupBy(_snippet.placeholders, Placeholder.compareByIndex);\n        this._placeholderGroupsIdx = -1;\n    }\n    initialize(textChange) {\n        this._offset = textChange.newPosition;\n    }\n    dispose() {\n        if (this._placeholderDecorations) {\n            this._editor.removeDecorations([...this._placeholderDecorations.values()]);\n        }\n        this._placeholderGroups.length = 0;\n    }\n    _initDecorations() {\n        if (this._offset === -1) {\n            throw new Error(`Snippet not initialized!`);\n        }\n        if (this._placeholderDecorations) {\n            // already initialized\n            return;\n        }\n        this._placeholderDecorations = new Map();\n        const model = this._editor.getModel();\n        this._editor.changeDecorations(accessor => {\n            // create a decoration for each placeholder\n            for (const placeholder of this._snippet.placeholders) {\n                const placeholderOffset = this._snippet.offset(placeholder);\n                const placeholderLen = this._snippet.fullLen(placeholder);\n                const range = Range.fromPositions(model.getPositionAt(this._offset + placeholderOffset), model.getPositionAt(this._offset + placeholderOffset + placeholderLen));\n                const options = placeholder.isFinalTabstop ? OneSnippet._decor.inactiveFinal : OneSnippet._decor.inactive;\n                const handle = accessor.addDecoration(range, options);\n                this._placeholderDecorations.set(placeholder, handle);\n            }\n        });\n    }\n    move(fwd) {\n        if (!this._editor.hasModel()) {\n            return [];\n        }\n        this._initDecorations();\n        // Transform placeholder text if necessary\n        if (this._placeholderGroupsIdx >= 0) {\n            const operations = [];\n            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]) {\n                // Check if the placeholder has a transformation\n                if (placeholder.transform) {\n                    const id = this._placeholderDecorations.get(placeholder);\n                    const range = this._editor.getModel().getDecorationRange(id);\n                    const currentValue = this._editor.getModel().getValueInRange(range);\n                    const transformedValueLines = placeholder.transform.resolve(currentValue).split(/\\r\\n|\\r|\\n/);\n                    // fix indentation for transformed lines\n                    for (let i = 1; i < transformedValueLines.length; i++) {\n                        transformedValueLines[i] = this._editor.getModel().normalizeIndentation(this._snippetLineLeadingWhitespace + transformedValueLines[i]);\n                    }\n                    operations.push(EditOperation.replace(range, transformedValueLines.join(this._editor.getModel().getEOL())));\n                }\n            }\n            if (operations.length > 0) {\n                this._editor.executeEdits('snippet.placeholderTransform', operations);\n            }\n        }\n        let couldSkipThisPlaceholder = false;\n        if (fwd === true && this._placeholderGroupsIdx < this._placeholderGroups.length - 1) {\n            this._placeholderGroupsIdx += 1;\n            couldSkipThisPlaceholder = true;\n        }\n        else if (fwd === false && this._placeholderGroupsIdx > 0) {\n            this._placeholderGroupsIdx -= 1;\n            couldSkipThisPlaceholder = true;\n        }\n        else {\n            // the selection of the current placeholder might\n            // not acurate any more -> simply restore it\n        }\n        const newSelections = this._editor.getModel().changeDecorations(accessor => {\n            const activePlaceholders = new Set();\n            // change stickiness to always grow when typing at its edges\n            // because these decorations represent the currently active\n            // tabstop.\n            // Special case #1: reaching the final tabstop\n            // Special case #2: placeholders enclosing active placeholders\n            const selections = [];\n            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]) {\n                const id = this._placeholderDecorations.get(placeholder);\n                const range = this._editor.getModel().getDecorationRange(id);\n                selections.push(new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn));\n                // consider to skip this placeholder index when the decoration\n                // range is empty but when the placeholder wasn't. that's a strong\n                // hint that the placeholder has been deleted. (all placeholder must match this)\n                couldSkipThisPlaceholder = couldSkipThisPlaceholder && this._hasPlaceholderBeenCollapsed(placeholder);\n                accessor.changeDecorationOptions(id, placeholder.isFinalTabstop ? OneSnippet._decor.activeFinal : OneSnippet._decor.active);\n                activePlaceholders.add(placeholder);\n                for (const enclosingPlaceholder of this._snippet.enclosingPlaceholders(placeholder)) {\n                    const id = this._placeholderDecorations.get(enclosingPlaceholder);\n                    accessor.changeDecorationOptions(id, enclosingPlaceholder.isFinalTabstop ? OneSnippet._decor.activeFinal : OneSnippet._decor.active);\n                    activePlaceholders.add(enclosingPlaceholder);\n                }\n            }\n            // change stickness to never grow when typing at its edges\n            // so that in-active tabstops never grow\n            for (const [placeholder, id] of this._placeholderDecorations) {\n                if (!activePlaceholders.has(placeholder)) {\n                    accessor.changeDecorationOptions(id, placeholder.isFinalTabstop ? OneSnippet._decor.inactiveFinal : OneSnippet._decor.inactive);\n                }\n            }\n            return selections;\n        });\n        return !couldSkipThisPlaceholder ? newSelections !== null && newSelections !== void 0 ? newSelections : [] : this.move(fwd);\n    }\n    _hasPlaceholderBeenCollapsed(placeholder) {\n        // A placeholder is empty when it wasn't empty when authored but\n        // when its tracking decoration is empty. This also applies to all\n        // potential parent placeholders\n        let marker = placeholder;\n        while (marker) {\n            if (marker instanceof Placeholder) {\n                const id = this._placeholderDecorations.get(marker);\n                const range = this._editor.getModel().getDecorationRange(id);\n                if (range.isEmpty() && marker.toString().length > 0) {\n                    return true;\n                }\n            }\n            marker = marker.parent;\n        }\n        return false;\n    }\n    get isAtFirstPlaceholder() {\n        return this._placeholderGroupsIdx <= 0 || this._placeholderGroups.length === 0;\n    }\n    get isAtLastPlaceholder() {\n        return this._placeholderGroupsIdx === this._placeholderGroups.length - 1;\n    }\n    get hasPlaceholder() {\n        return this._snippet.placeholders.length > 0;\n    }\n    get isTrivialSnippet() {\n        return this._snippet.placeholders.length === 0\n            || (this._snippet.placeholders.length === 1 && this._snippet.placeholders[0].isFinalTabstop);\n    }\n    computePossibleSelections() {\n        const result = new Map();\n        for (const placeholdersWithEqualIndex of this._placeholderGroups) {\n            let ranges;\n            for (const placeholder of placeholdersWithEqualIndex) {\n                if (placeholder.isFinalTabstop) {\n                    // ignore those\n                    break;\n                }\n                if (!ranges) {\n                    ranges = [];\n                    result.set(placeholder.index, ranges);\n                }\n                const id = this._placeholderDecorations.get(placeholder);\n                const range = this._editor.getModel().getDecorationRange(id);\n                if (!range) {\n                    // one of the placeholder lost its decoration and\n                    // therefore we bail out and pretend the placeholder\n                    // (with its mirrors) doesn't exist anymore.\n                    result.delete(placeholder.index);\n                    break;\n                }\n                ranges.push(range);\n            }\n        }\n        return result;\n    }\n    get activeChoice() {\n        if (!this._placeholderDecorations) {\n            return undefined;\n        }\n        const placeholder = this._placeholderGroups[this._placeholderGroupsIdx][0];\n        if (!(placeholder === null || placeholder === void 0 ? void 0 : placeholder.choice)) {\n            return undefined;\n        }\n        const id = this._placeholderDecorations.get(placeholder);\n        if (!id) {\n            return undefined;\n        }\n        const range = this._editor.getModel().getDecorationRange(id);\n        if (!range) {\n            return undefined;\n        }\n        return { range, choice: placeholder.choice };\n    }\n    get hasChoice() {\n        let result = false;\n        this._snippet.walk(marker => {\n            result = marker instanceof Choice;\n            return !result;\n        });\n        return result;\n    }\n    merge(others) {\n        const model = this._editor.getModel();\n        this._nestingLevel *= 10;\n        this._editor.changeDecorations(accessor => {\n            // For each active placeholder take one snippet and merge it\n            // in that the placeholder (can be many for `$1foo$1foo`). Because\n            // everything is sorted by editor selection we can simply remove\n            // elements from the beginning of the array\n            for (const placeholder of this._placeholderGroups[this._placeholderGroupsIdx]) {\n                const nested = others.shift();\n                console.assert(nested._offset !== -1);\n                console.assert(!nested._placeholderDecorations);\n                // Massage placeholder-indicies of the nested snippet to be\n                // sorted right after the insertion point. This ensures we move\n                // through the placeholders in the correct order\n                const indexLastPlaceholder = nested._snippet.placeholderInfo.last.index;\n                for (const nestedPlaceholder of nested._snippet.placeholderInfo.all) {\n                    if (nestedPlaceholder.isFinalTabstop) {\n                        nestedPlaceholder.index = placeholder.index + ((indexLastPlaceholder + 1) / this._nestingLevel);\n                    }\n                    else {\n                        nestedPlaceholder.index = placeholder.index + (nestedPlaceholder.index / this._nestingLevel);\n                    }\n                }\n                this._snippet.replace(placeholder, nested._snippet.children);\n                // Remove the placeholder at which position are inserting\n                // the snippet and also remove its decoration.\n                const id = this._placeholderDecorations.get(placeholder);\n                accessor.removeDecoration(id);\n                this._placeholderDecorations.delete(placeholder);\n                // For each *new* placeholder we create decoration to monitor\n                // how and if it grows/shrinks.\n                for (const placeholder of nested._snippet.placeholders) {\n                    const placeholderOffset = nested._snippet.offset(placeholder);\n                    const placeholderLen = nested._snippet.fullLen(placeholder);\n                    const range = Range.fromPositions(model.getPositionAt(nested._offset + placeholderOffset), model.getPositionAt(nested._offset + placeholderOffset + placeholderLen));\n                    const handle = accessor.addDecoration(range, OneSnippet._decor.inactive);\n                    this._placeholderDecorations.set(placeholder, handle);\n                }\n            }\n            // Last, re-create the placeholder groups by sorting placeholders by their index.\n            this._placeholderGroups = groupBy(this._snippet.placeholders, Placeholder.compareByIndex);\n        });\n    }\n}\nOneSnippet._decor = {\n    active: ModelDecorationOptions.register({ description: 'snippet-placeholder-1', stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */, className: 'snippet-placeholder' }),\n    inactive: ModelDecorationOptions.register({ description: 'snippet-placeholder-2', stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */, className: 'snippet-placeholder' }),\n    activeFinal: ModelDecorationOptions.register({ description: 'snippet-placeholder-3', stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */, className: 'finish-snippet-placeholder' }),\n    inactiveFinal: ModelDecorationOptions.register({ description: 'snippet-placeholder-4', stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */, className: 'finish-snippet-placeholder' }),\n};\nconst _defaultOptions = {\n    overwriteBefore: 0,\n    overwriteAfter: 0,\n    adjustWhitespace: true,\n    clipboardText: undefined,\n    overtypingCapturer: undefined\n};\nlet SnippetSession = class SnippetSession {\n    constructor(_editor, _template, _options = _defaultOptions, _languageConfigurationService) {\n        this._editor = _editor;\n        this._template = _template;\n        this._options = _options;\n        this._languageConfigurationService = _languageConfigurationService;\n        this._templateMerges = [];\n        this._snippets = [];\n    }\n    static adjustWhitespace(model, position, snippet, adjustIndentation, adjustNewlines) {\n        const line = model.getLineContent(position.lineNumber);\n        const lineLeadingWhitespace = getLeadingWhitespace(line, 0, position.column - 1);\n        // the snippet as inserted\n        let snippetTextString;\n        snippet.walk(marker => {\n            // all text elements that are not inside choice\n            if (!(marker instanceof Text) || marker.parent instanceof Choice) {\n                return true;\n            }\n            const lines = marker.value.split(/\\r\\n|\\r|\\n/);\n            if (adjustIndentation) {\n                // adjust indentation of snippet test\n                // -the snippet-start doesn't get extra-indented (lineLeadingWhitespace), only normalized\n                // -all N+1 lines get extra-indented and normalized\n                // -the text start get extra-indented and normalized when following a linebreak\n                const offset = snippet.offset(marker);\n                if (offset === 0) {\n                    // snippet start\n                    lines[0] = model.normalizeIndentation(lines[0]);\n                }\n                else {\n                    // check if text start is after a linebreak\n                    snippetTextString = snippetTextString !== null && snippetTextString !== void 0 ? snippetTextString : snippet.toString();\n                    const prevChar = snippetTextString.charCodeAt(offset - 1);\n                    if (prevChar === 10 /* CharCode.LineFeed */ || prevChar === 13 /* CharCode.CarriageReturn */) {\n                        lines[0] = model.normalizeIndentation(lineLeadingWhitespace + lines[0]);\n                    }\n                }\n                for (let i = 1; i < lines.length; i++) {\n                    lines[i] = model.normalizeIndentation(lineLeadingWhitespace + lines[i]);\n                }\n            }\n            const newValue = lines.join(model.getEOL());\n            if (newValue !== marker.value) {\n                marker.parent.replace(marker, [new Text(newValue)]);\n                snippetTextString = undefined;\n            }\n            return true;\n        });\n        return lineLeadingWhitespace;\n    }\n    static adjustSelection(model, selection, overwriteBefore, overwriteAfter) {\n        if (overwriteBefore !== 0 || overwriteAfter !== 0) {\n            // overwrite[Before|After] is compute using the position, not the whole\n            // selection. therefore we adjust the selection around that position\n            const { positionLineNumber, positionColumn } = selection;\n            const positionColumnBefore = positionColumn - overwriteBefore;\n            const positionColumnAfter = positionColumn + overwriteAfter;\n            const range = model.validateRange({\n                startLineNumber: positionLineNumber,\n                startColumn: positionColumnBefore,\n                endLineNumber: positionLineNumber,\n                endColumn: positionColumnAfter\n            });\n            selection = Selection.createWithDirection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn, selection.getDirection());\n        }\n        return selection;\n    }\n    static createEditsAndSnippetsFromSelections(editor, template, overwriteBefore, overwriteAfter, enforceFinalTabstop, adjustWhitespace, clipboardText, overtypingCapturer, languageConfigurationService) {\n        const edits = [];\n        const snippets = [];\n        if (!editor.hasModel()) {\n            return { edits, snippets };\n        }\n        const model = editor.getModel();\n        const workspaceService = editor.invokeWithinContext(accessor => accessor.get(IWorkspaceContextService));\n        const modelBasedVariableResolver = editor.invokeWithinContext(accessor => new ModelBasedVariableResolver(accessor.get(ILabelService), model));\n        const readClipboardText = () => clipboardText;\n        // know what text the overwrite[Before|After] extensions\n        // of the primary curser have selected because only when\n        // secondary selections extend to the same text we can grow them\n        const firstBeforeText = model.getValueInRange(SnippetSession.adjustSelection(model, editor.getSelection(), overwriteBefore, 0));\n        const firstAfterText = model.getValueInRange(SnippetSession.adjustSelection(model, editor.getSelection(), 0, overwriteAfter));\n        // remember the first non-whitespace column to decide if\n        // `keepWhitespace` should be overruled for secondary selections\n        const firstLineFirstNonWhitespace = model.getLineFirstNonWhitespaceColumn(editor.getSelection().positionLineNumber);\n        // sort selections by their start position but remeber\n        // the original index. that allows you to create correct\n        // offset-based selection logic without changing the\n        // primary selection\n        const indexedSelections = editor.getSelections()\n            .map((selection, idx) => ({ selection, idx }))\n            .sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\n        for (const { selection, idx } of indexedSelections) {\n            // extend selection with the `overwriteBefore` and `overwriteAfter` and then\n            // compare if this matches the extensions of the primary selection\n            let extensionBefore = SnippetSession.adjustSelection(model, selection, overwriteBefore, 0);\n            let extensionAfter = SnippetSession.adjustSelection(model, selection, 0, overwriteAfter);\n            if (firstBeforeText !== model.getValueInRange(extensionBefore)) {\n                extensionBefore = selection;\n            }\n            if (firstAfterText !== model.getValueInRange(extensionAfter)) {\n                extensionAfter = selection;\n            }\n            // merge the before and after selection into one\n            const snippetSelection = selection\n                .setStartPosition(extensionBefore.startLineNumber, extensionBefore.startColumn)\n                .setEndPosition(extensionAfter.endLineNumber, extensionAfter.endColumn);\n            const snippet = new SnippetParser().parse(template, true, enforceFinalTabstop);\n            // adjust the template string to match the indentation and\n            // whitespace rules of this insert location (can be different for each cursor)\n            // happens when being asked for (default) or when this is a secondary\n            // cursor and the leading whitespace is different\n            const start = snippetSelection.getStartPosition();\n            const snippetLineLeadingWhitespace = SnippetSession.adjustWhitespace(model, start, snippet, adjustWhitespace || (idx > 0 && firstLineFirstNonWhitespace !== model.getLineFirstNonWhitespaceColumn(selection.positionLineNumber)), true);\n            snippet.resolveVariables(new CompositeSnippetVariableResolver([\n                modelBasedVariableResolver,\n                new ClipboardBasedVariableResolver(readClipboardText, idx, indexedSelections.length, editor.getOption(73 /* EditorOption.multiCursorPaste */) === 'spread'),\n                new SelectionBasedVariableResolver(model, selection, idx, overtypingCapturer),\n                new CommentBasedVariableResolver(model, selection, languageConfigurationService),\n                new TimeBasedVariableResolver,\n                new WorkspaceBasedVariableResolver(workspaceService),\n                new RandomBasedVariableResolver,\n            ]));\n            // store snippets with the index of their originating selection.\n            // that ensures the primiary cursor stays primary despite not being\n            // the one with lowest start position\n            edits[idx] = EditOperation.replace(snippetSelection, snippet.toString());\n            edits[idx].identifier = { major: idx, minor: 0 }; // mark the edit so only our undo edits will be used to generate end cursors\n            edits[idx]._isTracked = true;\n            snippets[idx] = new OneSnippet(editor, snippet, snippetLineLeadingWhitespace);\n        }\n        return { edits, snippets };\n    }\n    static createEditsAndSnippetsFromEdits(editor, snippetEdits, enforceFinalTabstop, adjustWhitespace, clipboardText, overtypingCapturer, languageConfigurationService) {\n        if (!editor.hasModel() || snippetEdits.length === 0) {\n            return { edits: [], snippets: [] };\n        }\n        const edits = [];\n        const model = editor.getModel();\n        const parser = new SnippetParser();\n        const snippet = new TextmateSnippet();\n        // snippet variables resolver\n        const resolver = new CompositeSnippetVariableResolver([\n            editor.invokeWithinContext(accessor => new ModelBasedVariableResolver(accessor.get(ILabelService), model)),\n            new ClipboardBasedVariableResolver(() => clipboardText, 0, editor.getSelections().length, editor.getOption(73 /* EditorOption.multiCursorPaste */) === 'spread'),\n            new SelectionBasedVariableResolver(model, editor.getSelection(), 0, overtypingCapturer),\n            new CommentBasedVariableResolver(model, editor.getSelection(), languageConfigurationService),\n            new TimeBasedVariableResolver,\n            new WorkspaceBasedVariableResolver(editor.invokeWithinContext(accessor => accessor.get(IWorkspaceContextService))),\n            new RandomBasedVariableResolver,\n        ]);\n        //\n        snippetEdits = snippetEdits.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n        let offset = 0;\n        for (let i = 0; i < snippetEdits.length; i++) {\n            const { range, template } = snippetEdits[i];\n            // gaps between snippet edits are appended as text nodes. this\n            // ensures placeholder-offsets are later correct\n            if (i > 0) {\n                const lastRange = snippetEdits[i - 1].range;\n                const textRange = Range.fromPositions(lastRange.getEndPosition(), range.getStartPosition());\n                const textNode = new Text(model.getValueInRange(textRange));\n                snippet.appendChild(textNode);\n                offset += textNode.value.length;\n            }\n            parser.parseFragment(template, snippet);\n            snippet.resolveVariables(resolver);\n            const snippetText = snippet.toString();\n            const snippetFragmentText = snippetText.slice(offset);\n            offset = snippetText.length;\n            // make edit\n            const edit = EditOperation.replace(range, snippetFragmentText);\n            edit.identifier = { major: i, minor: 0 }; // mark the edit so only our undo edits will be used to generate end cursors\n            edit._isTracked = true;\n            edits.push(edit);\n        }\n        //\n        parser.ensureFinalTabstop(snippet, enforceFinalTabstop, true);\n        return {\n            edits,\n            snippets: [new OneSnippet(editor, snippet, '')]\n        };\n    }\n    dispose() {\n        dispose(this._snippets);\n    }\n    _logInfo() {\n        return `template=\"${this._template}\", merged_templates=\"${this._templateMerges.join(' -> ')}\"`;\n    }\n    insert() {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        // make insert edit and start with first selections\n        const { edits, snippets } = typeof this._template === 'string'\n            ? SnippetSession.createEditsAndSnippetsFromSelections(this._editor, this._template, this._options.overwriteBefore, this._options.overwriteAfter, false, this._options.adjustWhitespace, this._options.clipboardText, this._options.overtypingCapturer, this._languageConfigurationService)\n            : SnippetSession.createEditsAndSnippetsFromEdits(this._editor, this._template, false, this._options.adjustWhitespace, this._options.clipboardText, this._options.overtypingCapturer, this._languageConfigurationService);\n        this._snippets = snippets;\n        this._editor.executeEdits('snippet', edits, _undoEdits => {\n            // Sometimes, the text buffer will remove automatic whitespace when doing any edits,\n            // so we need to look only at the undo edits relevant for us.\n            // Our edits have an identifier set so that's how we can distinguish them\n            const undoEdits = _undoEdits.filter(edit => !!edit.identifier);\n            for (let idx = 0; idx < snippets.length; idx++) {\n                snippets[idx].initialize(undoEdits[idx].textChange);\n            }\n            if (this._snippets[0].hasPlaceholder) {\n                return this._move(true);\n            }\n            else {\n                return undoEdits\n                    .map(edit => Selection.fromPositions(edit.range.getEndPosition()));\n            }\n        });\n        this._editor.revealRange(this._editor.getSelections()[0]);\n    }\n    merge(template, options = _defaultOptions) {\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        this._templateMerges.push([this._snippets[0]._nestingLevel, this._snippets[0]._placeholderGroupsIdx, template]);\n        const { edits, snippets } = SnippetSession.createEditsAndSnippetsFromSelections(this._editor, template, options.overwriteBefore, options.overwriteAfter, true, options.adjustWhitespace, options.clipboardText, options.overtypingCapturer, this._languageConfigurationService);\n        this._editor.executeEdits('snippet', edits, _undoEdits => {\n            // Sometimes, the text buffer will remove automatic whitespace when doing any edits,\n            // so we need to look only at the undo edits relevant for us.\n            // Our edits have an identifier set so that's how we can distinguish them\n            const undoEdits = _undoEdits.filter(edit => !!edit.identifier);\n            for (let idx = 0; idx < snippets.length; idx++) {\n                snippets[idx].initialize(undoEdits[idx].textChange);\n            }\n            // Trivial snippets have no placeholder or are just the final placeholder. That means they\n            // are just text insertions and we don't need to merge the nested snippet into the existing\n            // snippet\n            const isTrivialSnippet = snippets[0].isTrivialSnippet;\n            if (!isTrivialSnippet) {\n                for (const snippet of this._snippets) {\n                    snippet.merge(snippets);\n                }\n                console.assert(snippets.length === 0);\n            }\n            if (this._snippets[0].hasPlaceholder && !isTrivialSnippet) {\n                return this._move(undefined);\n            }\n            else {\n                return undoEdits.map(edit => Selection.fromPositions(edit.range.getEndPosition()));\n            }\n        });\n    }\n    next() {\n        const newSelections = this._move(true);\n        this._editor.setSelections(newSelections);\n        this._editor.revealPositionInCenterIfOutsideViewport(newSelections[0].getPosition());\n    }\n    prev() {\n        const newSelections = this._move(false);\n        this._editor.setSelections(newSelections);\n        this._editor.revealPositionInCenterIfOutsideViewport(newSelections[0].getPosition());\n    }\n    _move(fwd) {\n        const selections = [];\n        for (const snippet of this._snippets) {\n            const oneSelection = snippet.move(fwd);\n            selections.push(...oneSelection);\n        }\n        return selections;\n    }\n    get isAtFirstPlaceholder() {\n        return this._snippets[0].isAtFirstPlaceholder;\n    }\n    get isAtLastPlaceholder() {\n        return this._snippets[0].isAtLastPlaceholder;\n    }\n    get hasPlaceholder() {\n        return this._snippets[0].hasPlaceholder;\n    }\n    get hasChoice() {\n        return this._snippets[0].hasChoice;\n    }\n    get activeChoice() {\n        return this._snippets[0].activeChoice;\n    }\n    isSelectionWithinPlaceholders() {\n        if (!this.hasPlaceholder) {\n            return false;\n        }\n        const selections = this._editor.getSelections();\n        if (selections.length < this._snippets.length) {\n            // this means we started snippet mode with N\n            // selections and have M (N > M) selections.\n            // So one snippet is without selection -> cancel\n            return false;\n        }\n        const allPossibleSelections = new Map();\n        for (const snippet of this._snippets) {\n            const possibleSelections = snippet.computePossibleSelections();\n            // for the first snippet find the placeholder (and its ranges)\n            // that contain at least one selection. for all remaining snippets\n            // the same placeholder (and their ranges) must be used.\n            if (allPossibleSelections.size === 0) {\n                for (const [index, ranges] of possibleSelections) {\n                    ranges.sort(Range.compareRangesUsingStarts);\n                    for (const selection of selections) {\n                        if (ranges[0].containsRange(selection)) {\n                            allPossibleSelections.set(index, []);\n                            break;\n                        }\n                    }\n                }\n            }\n            if (allPossibleSelections.size === 0) {\n                // return false if we couldn't associate a selection to\n                // this (the first) snippet\n                return false;\n            }\n            // add selections from 'this' snippet so that we know all\n            // selections for this placeholder\n            allPossibleSelections.forEach((array, index) => {\n                array.push(...possibleSelections.get(index));\n            });\n        }\n        // sort selections (and later placeholder-ranges). then walk both\n        // arrays and make sure the placeholder-ranges contain the corresponding\n        // selection\n        selections.sort(Range.compareRangesUsingStarts);\n        for (const [index, ranges] of allPossibleSelections) {\n            if (ranges.length !== selections.length) {\n                allPossibleSelections.delete(index);\n                continue;\n            }\n            ranges.sort(Range.compareRangesUsingStarts);\n            for (let i = 0; i < ranges.length; i++) {\n                if (!ranges[i].containsRange(selections[i])) {\n                    allPossibleSelections.delete(index);\n                    continue;\n                }\n            }\n        }\n        // from all possible selections we have deleted those\n        // that don't match with the current selection. if we don't\n        // have any left, we don't have a selection anymore\n        return allPossibleSelections.size > 0;\n    }\n};\nSnippetSession = __decorate([\n    __param(3, ILanguageConfigurationService)\n], SnippetSession);\nexport { SnippetSession };\n"],"names":["AbstractEditorCommandsQuickAccessProvider","options","instantiationService","keybindingService","commandService","telemetryService","dialogService","activeTextEditorControl","this","editorCommandPicks","getSupportedActions","editorAction","push","commandId","id","commandAlias","alias","label","stripIcons","AbstractCommandsQuickAccessProvider","AbstractEditorNavigationQuickAccessProvider","rangeHighlightDecorationId","undefined","picker","token","_a","disposables","DisposableStore","canAcceptInBackground","matchOnLabel","matchOnDescription","matchOnDetail","sortByLabel","pickerDisposable","add","MutableDisposable","value","doProvide","onDidActiveTextEditorControlChange","editor","canProvideWithTextEditor","context","codeEditor","getCodeEditor","lastKnownEditorViewState","withNullAsUndefined","saveViewState","onDidChangeCursorPosition","restoreViewState","once","onCancellationRequested","call","toDisposable","clearDecorations","provideWithTextEditor","provideWithoutTextEditor","setSelection","range","revealRangeInCenter","preserveFocus","focus","isDiffEditor","getModel","modified","changeDecorations","changeAccessor","deleteDecorations","overviewRulerDecorationId","rangeHighlightId","newDecorations","description","className","isWholeLine","overviewRuler","color","themeColorFromId","overviewRulerRangeHighlight","position","OverviewRulerLane","deltaDecorations","AbstractGotoLineQuickAccessProvider","localize","items","ariaLabel","Disposable","onDidAccept","event","item","selectedItems","isValidLineNumber","lineNumber","gotoLocation","toRange","column","keyMods","inBackground","hide","updatePickerAndEditor","parsePosition","trim","substr","PREFIX","length","getPickLabel","addDecorations","onDidChangeValue","getOptions","get","renderType","updateOptions","lineNumbers","startLineNumber","startColumn","endLineNumber","endColumn","numbers","split","map","part","parseInt","filter","isNaN","endLine","lineCount","isValidColumn","getPosition","model","positionCandidate","validatePosition","equals","_b","getLineCount","__decorate","decorators","target","key","desc","d","c","arguments","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","AbstractGotoSymbolQuickAccessProvider","_languageFeaturesService","_outlineModelService","create","provideLabelPick","documentSymbolProvider","has","doProvideWithEditorSymbols","doProvideWithoutEditorSymbols","waitForLanguageSymbolRegistry","isCancellationRequested","index","kind","symbolProviderRegistryPromise","DeferredPromise","symbolProviderListener","onDidChange","dispose","complete","p","selection","onDidTriggerItemButton","forceSideBySide","symbolsPromise","getDocumentSymbols","picksCts","updatePickerItems","positionToEnclose","busy","CancellationTokenSource","query","prepareQuery","doGetSymbolPicks","original","candidate","findLast","Boolean","type","Range","decoration","activeItems","getSelection","ignoreFirstActiveEvent","onDidChangeActive","symbols","filterBySymbolKind","indexOf","SCOPE_PREFIX","filterPos","values","symbolQuery","pieceToQuery","containerQuery","slice","filteredSymbolPicks","symbol","symbolLabel","name","symbolLabelWithIcon","SymbolKinds","symbolLabelIconOffset","containerLabel","containerName","extraContainerLabel","symbolScore","symbolMatches","containerScore","containerMatches","skipContainerQuery","scoreFuzzy2","assign","deprecated","tags","score","highlights","selectionRange","strikethrough","buttons","openSideBySideDirection","iconClass","Codicon","tooltip","sortedFilteredSymbolPicks","sort","symbolA","symbolB","compareByKindAndScore","compareByScore","symbolPicks","updateLastSeparatorLabel","lastSeparator","lastSymbolKind","lastSymbolKindCounter","format","NLS_SYMBOL_KIND_CACHE","FALLBACK_NLS_SYMBOL_KIND","symbolPick","kindA","kindB","localeCompare","document","getOrCreate","asListOfDocumentSymbols","PREFIX_BY_CATEGORY","ILanguageFeaturesService","IOutlineModelService","ReadOnlyMessageController","_register","onDidAttemptReadOnlyEdit","_onDidAttemptReadOnlyEdit","messageController","MessageController","hasModel","isSimpleWidget","showMessage","nls","ID","registerEditorContribution","CONTEXT_RENAME_INPUT_VISIBLE","RawContextKey","RenameInputField","_editor","_acceptKeybindings","_themeService","_keybindingService","contextKeyService","_disposables","allowEditorOverflow","_visibleContextKey","bindTo","addContentWidget","onDidChangeConfiguration","hasChanged","_updateFont","onDidColorThemeChange","_updateStyles","removeContentWidget","_domNode","createElement","_input","setAttribute","appendChild","_label","updateLabel","accept","preview","lookupKeybinding","innerText","comment","getLabel","onDidUpdateKeybindings","getColorTheme","theme","_c","_d","widgetShadowColor","getColor","widgetShadow","style","backgroundColor","String","editorWidgetBackground","boxShadow","inputForeground","inputBackground","border","inputBorder","borderWidth","borderStyle","borderColor","toString","fontInfo","getOption","fontFamily","fontWeight","fontSize","_visible","_position","preference","cancelInput","wantsPreview","_currentAcceptInput","focusEditor","_currentCancelInput","where","selectionStart","selectionEnd","supportPreview","classList","toggle","Position","size","Math","max","disposeOnDone","newName","onDidBlurEditorWidget","_show","finally","_hide","revealLineInCenterIfOutsideViewport","set","layoutContentWidget","setTimeout","setSelectionRange","getAttribute","reset","IThemeService","IKeybindingService","IContextKeyService","RenameSkeleton","registry","_providerRenameIdx","_providers","ordered","rejects","provider","resolveRenameLocation","res","rejectReason","word","getWordAtPosition","text","join","_provideRenameEdits","edits","provideRenameEdits","concat","rename","skeleton","CancellationToken","loc","RenameController","_instaService","_notificationService","_bulkEditService","_progressService","_logService","_configService","_disposableStore","_cts","_renameInputField","IdleValue","createInstance","renameProvider","hasProvider","EditorStateCancellationTokenSource","resolveLocationOperation","showWhile","min","hasPreviewHandler","getValue","uri","getInput","inputFieldResult","renameOperation","raceCancellation","renameResult","info","ResourceEdit","showPreview","code","quotableLabel","respectAutoSaveConfig","ariaSummary","alert","catch","err","error","acceptInput","getContribution","IInstantiationService","INotificationService","IBulkEditService","IEditorProgressService","ILogService","ITextResourceConfigurationService","RenameAction","precondition","ContextKeyExpr","EditorContextKeys","kbOpts","kbExpr","primary","weight","contextMenuOpts","group","order","accessor","args","editorService","ICodeEditorService","Array","isArray","pos","URI","openCodeEditor","resource","getActiveCodeEditor","setPosition","invokeWithinContext","reportTelemetry","run","onUnexpectedError","controller","EditorAction","registerEditorAction","RenameCommand","EditorCommand","registerEditorCommand","handler","x","acceptRenameInput","cancelRenameInput","secondary","registerModelAndPositionCommand","assertType","Error","Registry","Extensions","registerConfiguration","properties","scope","default","BracketSelectionRangeProvider","positions","bucket","ranges","Map","_bracketsRightYield","_bracketsLeftYield","round","counts","t1","Date","now","_maxRounds","bracket","bracketPairs","findNextBracket","_maxDuration","bracketInfo","isOpeningBracket","bracketText","val","getClosedBrackets","list","LinkedList","getEndPosition","findPrevBracket","closing","shift","delete","innerBracket","getStartPosition","outerBracket","_addBracketLeading","startLine","getLineFirstNonWhitespaceColumn","aboveLine","getLineLastNonWhitespaceColumn","WordSelectionRangeProvider","_addInWordRanges","_addWordRanges","_addWhitespaceLine","getFullModelRange","obj","offset","start","end","lastCh","ch","charCodeAt","isLowerAsciiLetter","isUpperAsciiLetter","getLineLength","getLineMaxColumn","SelectionRanges","fwd","equalsRange","mov","SmartSelectController","_ignoreSelection","_selectionListener","forward","selections","getSelections","_state","provideSelectionRanges","selectionRangeProvider","s","arrays","a","b","equalsSelection","containsPosition","unshift","state","newSelections","Selection","setSelections","AbstractSmartSelect","opts","_forward","_accessor","GrowSelectionAction","mac","menuOpts","menuId","MenuId","title","CommandsRegistry","ShrinkSelectionAction","providers","all","work","allRawRanges","allProviderRanges","oneProviderRanges","onUnexpectedExternalError","oneRawRanges","last","oneRanges","selectLeadingAndTrailingWhitespace","oneRangesWithTrivia","prev","cur","rangeNoWhitespace","containsRange","rangeFull","ITextModelService","createModelReference","reference","object","textEditorModel","_defaultOptions","overwriteBefore","overwriteAfter","undoStopBefore","undoStopAfter","adjustWhitespace","clipboardText","overtypingCapturer","SnippetController2","_languageConfigurationService","_snippetListener","_modelVersionId","_inSnippet","InSnippetMode","_hasNextTabstop","HasNextTabstop","_hasPrevTabstop","HasPrevTabstop","_session","_doInsert","cancel","_logInfo","template","clear","pushStackElement","merge","getAlternativeVersionId","SnippetSession","insert","hasChoice","_choiceCompletionItemProvider","provideCompletionItems","activeChoice","choice","getValueInRange","isAnyOfOptions","find","o","suggestions","option","insertText","sortText","repeat","filterText","command","registration","completionProvider","register","language","getLanguageId","pattern","fsPath","scheme","_updateState","onDidChangeModelContent","isFlush","onDidChangeModel","onDidChangeCursorSelection","hasPlaceholder","isAtLastPlaceholder","isSelectionWithinPlaceholders","isAtFirstPlaceholder","_handleChoice","_currentChoice","queueMicrotask","showSimpleSuggestions","resetSelection","ILanguageConfigurationService","CommandCtor","performSnippetEdit","snippet","isInSnippet","ctrl","finish","Scanner","len","_table","isDigitCharacter","isVariableCharacter","Marker","_children","child","Text","parent","others","idx","children","newChildren","splice","_fixParent","TextmateSnippet","reduce","TransformableMarker","Placeholder","Choice","ret","transform","clone","isFinalTabstop","marker","forEach","Transform","regexp","RegExp","_this","didMatch","replace","_replace","prototype","some","FormatString","elseValue","groups","source","ignoreCase","global","shorthandName","ifValue","toLocaleUpperCase","toLocaleLowerCase","_toPascalCase","_toCamelCase","match","charAt","toUpperCase","toLowerCase","Variable","resolver","walk","visitor","stack","_placeholders","placeholderInfo","found","placeholder","SnippetParser","_scanner","_token","insertFinalTabstop","enforceFinalTabstop","parseFragment","ensureFinalTabstop","_parse","placeholderDefaultValues","incompletePlaceholders","defaultValues","placeholders","tokenText","nextToken","substring","_parseEscaped","_parseTabstopOrVariableName","_parseComplexPlaceholder","_parseComplexVariable","_parseAnything","_accept","test","Number","_backTo","_parseTransform","_parseChoiceElement","variable","regexValue","regexOptions","escaped","_parseFormatString","complex","shorthand","_until","CompositeSnippetVariableResolver","freeze","_delegates","SelectionBasedVariableResolver","_model","_selection","_selectionIdx","_overtypingCapturer","isMultiline","getLastOvertypedInfo","multiline","line","getLineContent","lineLeadingWhitespace","getLeadingWhitespace","varLeadingWhitespace","splitLines","pop","whitespaceCommonLength","commonPrefixLength","m","newline","rest","positionLineNumber","positionColumn","ModelBasedVariableResolver","_labelService","path","lastIndexOf","getUriLabel","dirname","relative","noPrefix","ClipboardBasedVariableResolver","_readClipboardText","_selectionCount","_spread","lines","isFalsyOrWhitespace","CommentBasedVariableResolver","langId","getLanguageIdAtPosition","selectionStartLineNumber","selectionStartColumn","config","getLanguageConfiguration","comments","lineCommentToken","blockCommentStartToken","blockCommentEndToken","TimeBasedVariableResolver","_date","getFullYear","getMonth","valueOf","padStart","getDate","getHours","getMinutes","getSeconds","dayNames","getDay","dayNamesShort","monthNames","monthNamesShort","floor","getTime","WorkspaceBasedVariableResolver","_workspaceService","workspaceIdentifier","toWorkspaceIdentifier","getWorkspace","_resolveWorkspaceName","_resoveWorkspacePath","isSingleFolderWorkspaceIdentifier","filename","configPath","endsWith","WORKSPACE_EXTENSION","normalizeDriveLetter","folderpath","RandomBasedVariableResolver","random","generateUuid","OneSnippet","_snippet","_snippetLineLeadingWhitespace","_offset","_nestingLevel","_placeholderGroups","groupBy","_placeholderGroupsIdx","textChange","newPosition","_placeholderDecorations","removeDecorations","placeholderOffset","placeholderLen","fullLen","getPositionAt","_decor","inactiveFinal","inactive","handle","addDecoration","_initDecorations","operations","getDecorationRange","currentValue","transformedValueLines","normalizeIndentation","EditOperation","getEOL","executeEdits","couldSkipThisPlaceholder","activePlaceholders","Set","_hasPlaceholderBeenCollapsed","changeDecorationOptions","activeFinal","active","enclosingPlaceholders","enclosingPlaceholder","move","isEmpty","placeholdersWithEqualIndex","nested","console","assert","indexLastPlaceholder","nestedPlaceholder","removeDecoration","ModelDecorationOptions","stickiness","_template","_options","_templateMerges","_snippets","createEditsAndSnippetsFromSelections","createEditsAndSnippetsFromEdits","snippets","_undoEdits","undoEdits","edit","identifier","initialize","_move","revealRange","isTrivialSnippet","revealPositionInCenterIfOutsideViewport","oneSelection","allPossibleSelections","possibleSelections","computePossibleSelections","array","adjustIndentation","adjustNewlines","snippetTextString","prevChar","newValue","positionColumnBefore","positionColumnAfter","validateRange","getDirection","languageConfigurationService","workspaceService","IWorkspaceContextService","modelBasedVariableResolver","ILabelService","readClipboardText","firstBeforeText","adjustSelection","firstAfterText","firstLineFirstNonWhitespace","indexedSelections","extensionBefore","extensionAfter","snippetSelection","setStartPosition","setEndPosition","parse","snippetLineLeadingWhitespace","resolveVariables","major","minor","_isTracked","snippetEdits","parser","lastRange","textRange","textNode","snippetText","snippetFragmentText"],"sourceRoot":""}