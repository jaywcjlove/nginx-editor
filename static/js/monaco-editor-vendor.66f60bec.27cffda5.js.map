{"version":3,"file":"static/js/monaco-editor-vendor.66f60bec.27cffda5.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/base/common/map.js","../node_modules/monaco-editor/esm/vs/base/common/marked/marked.js","../node_modules/monaco-editor/esm/vs/base/common/marshalling.js","../node_modules/monaco-editor/esm/vs/base/common/mime.js","../node_modules/monaco-editor/esm/vs/base/common/navigator.js","../node_modules/monaco-editor/esm/vs/base/common/network.js","../node_modules/monaco-editor/esm/vs/base/common/numbers.js","../node_modules/monaco-editor/esm/vs/base/common/objects.js","../node_modules/monaco-editor/esm/vs/base/common/process.js","../node_modules/monaco-editor/esm/vs/base/common/path.js","../node_modules/monaco-editor/esm/vs/base/common/platform.js","../node_modules/monaco-editor/esm/vs/base/common/range.js","../node_modules/monaco-editor/esm/vs/base/common/resources.js","../node_modules/monaco-editor/esm/vs/base/common/scrollable.js","../node_modules/monaco-editor/esm/vs/base/common/search.js","../node_modules/monaco-editor/esm/vs/base/common/severity.js","../node_modules/monaco-editor/esm/vs/base/common/stopwatch.js","../node_modules/monaco-editor/esm/vs/base/common/strings.js","../node_modules/monaco-editor/esm/vs/base/common/symbols.js","../node_modules/monaco-editor/esm/vs/base/common/ternarySearchTree.js","../node_modules/monaco-editor/esm/vs/base/common/themables.js","../node_modules/monaco-editor/esm/vs/base/common/types.js","../node_modules/monaco-editor/esm/vs/base/common/uint.js","../node_modules/monaco-editor/esm/vs/base/common/uri.js","../node_modules/monaco-editor/esm/vs/base/common/uuid.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a, _b;\nclass ResourceMapEntry {\n    constructor(uri, value) {\n        this.uri = uri;\n        this.value = value;\n    }\n}\nclass ResourceMap {\n    constructor(mapOrKeyFn, toKey) {\n        this[_a] = 'ResourceMap';\n        if (mapOrKeyFn instanceof ResourceMap) {\n            this.map = new Map(mapOrKeyFn.map);\n            this.toKey = toKey !== null && toKey !== void 0 ? toKey : ResourceMap.defaultToKey;\n        }\n        else {\n            this.map = new Map();\n            this.toKey = mapOrKeyFn !== null && mapOrKeyFn !== void 0 ? mapOrKeyFn : ResourceMap.defaultToKey;\n        }\n    }\n    set(resource, value) {\n        this.map.set(this.toKey(resource), new ResourceMapEntry(resource, value));\n        return this;\n    }\n    get(resource) {\n        var _c;\n        return (_c = this.map.get(this.toKey(resource))) === null || _c === void 0 ? void 0 : _c.value;\n    }\n    has(resource) {\n        return this.map.has(this.toKey(resource));\n    }\n    get size() {\n        return this.map.size;\n    }\n    clear() {\n        this.map.clear();\n    }\n    delete(resource) {\n        return this.map.delete(this.toKey(resource));\n    }\n    forEach(clb, thisArg) {\n        if (typeof thisArg !== 'undefined') {\n            clb = clb.bind(thisArg);\n        }\n        for (const [_, entry] of this.map) {\n            clb(entry.value, entry.uri, this);\n        }\n    }\n    *values() {\n        for (const entry of this.map.values()) {\n            yield entry.value;\n        }\n    }\n    *keys() {\n        for (const entry of this.map.values()) {\n            yield entry.uri;\n        }\n    }\n    *entries() {\n        for (const entry of this.map.values()) {\n            yield [entry.uri, entry.value];\n        }\n    }\n    *[(_a = Symbol.toStringTag, Symbol.iterator)]() {\n        for (const [, entry] of this.map) {\n            yield [entry.uri, entry.value];\n        }\n    }\n}\nResourceMap.defaultToKey = (resource) => resource.toString();\nexport { ResourceMap };\nexport class LinkedMap {\n    constructor() {\n        this[_b] = 'LinkedMap';\n        this._map = new Map();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state = 0;\n    }\n    clear() {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state++;\n    }\n    isEmpty() {\n        return !this._head && !this._tail;\n    }\n    get size() {\n        return this._size;\n    }\n    get first() {\n        var _c;\n        return (_c = this._head) === null || _c === void 0 ? void 0 : _c.value;\n    }\n    get last() {\n        var _c;\n        return (_c = this._tail) === null || _c === void 0 ? void 0 : _c.value;\n    }\n    has(key) {\n        return this._map.has(key);\n    }\n    get(key, touch = 0 /* Touch.None */) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== 0 /* Touch.None */) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    }\n    set(key, value, touch = 0 /* Touch.None */) {\n        let item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== 0 /* Touch.None */) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key, value, next: undefined, previous: undefined };\n            switch (touch) {\n                case 0 /* Touch.None */:\n                    this.addItemLast(item);\n                    break;\n                case 1 /* Touch.AsOld */:\n                    this.addItemFirst(item);\n                    break;\n                case 2 /* Touch.AsNew */:\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n        return this;\n    }\n    delete(key) {\n        return !!this.remove(key);\n    }\n    remove(key) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    shift() {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        const item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    forEach(callbackfn, thisArg) {\n        const state = this._state;\n        let current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            if (this._state !== state) {\n                throw new Error(`LinkedMap got modified during iteration.`);\n            }\n            current = current.next;\n        }\n    }\n    keys() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    values() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    entries() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: [current.key, current.value], done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    [(_b = Symbol.toStringTag, Symbol.iterator)]() {\n        return this.entries();\n    }\n    trimOld(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._head;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        if (current) {\n            current.previous = undefined;\n        }\n        this._state++;\n    }\n    addItemFirst(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n        this._state++;\n    }\n    addItemLast(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n        this._state++;\n    }\n    removeItem(item) {\n        if (item === this._head && item === this._tail) {\n            this._head = undefined;\n            this._tail = undefined;\n        }\n        else if (item === this._head) {\n            // This can only happen if size === 1 which is handled\n            // by the case above.\n            if (!item.next) {\n                throw new Error('Invalid list');\n            }\n            item.next.previous = undefined;\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            // This can only happen if size === 1 which is handled\n            // by the case above.\n            if (!item.previous) {\n                throw new Error('Invalid list');\n            }\n            item.previous.next = undefined;\n            this._tail = item.previous;\n        }\n        else {\n            const next = item.next;\n            const previous = item.previous;\n            if (!next || !previous) {\n                throw new Error('Invalid list');\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n        item.next = undefined;\n        item.previous = undefined;\n        this._state++;\n    }\n    touch(item, touch) {\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        if ((touch !== 1 /* Touch.AsOld */ && touch !== 2 /* Touch.AsNew */)) {\n            return;\n        }\n        if (touch === 1 /* Touch.AsOld */) {\n            if (item === this._head) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item\n            if (item === this._tail) {\n                // previous must be defined since item was not head but is tail\n                // So there are more than on item in the map\n                previous.next = undefined;\n                this._tail = previous;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            // Insert the node at head\n            item.previous = undefined;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n            this._state++;\n        }\n        else if (touch === 2 /* Touch.AsNew */) {\n            if (item === this._tail) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item.\n            if (item === this._head) {\n                // next must be defined since item was not tail but is head\n                // So there are more than on item in the map\n                next.previous = undefined;\n                this._head = next;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = undefined;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n            this._state++;\n        }\n    }\n    toJSON() {\n        const data = [];\n        this.forEach((value, key) => {\n            data.push([key, value]);\n        });\n        return data;\n    }\n    fromJSON(data) {\n        this.clear();\n        for (const [key, value] of data) {\n            this.set(key, value);\n        }\n    }\n}\nexport class LRUCache extends LinkedMap {\n    constructor(limit, ratio = 1) {\n        super();\n        this._limit = limit;\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(limit) {\n        this._limit = limit;\n        this.checkTrim();\n    }\n    get(key, touch = 2 /* Touch.AsNew */) {\n        return super.get(key, touch);\n    }\n    peek(key) {\n        return super.get(key, 0 /* Touch.None */);\n    }\n    set(key, value) {\n        super.set(key, value, 2 /* Touch.AsNew */);\n        this.checkTrim();\n        return this;\n    }\n    checkTrim() {\n        if (this.size > this._limit) {\n            this.trimOld(Math.round(this._limit * this._ratio));\n        }\n    }\n}\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n// ESM-uncomment-begin\nlet __marked_exports = {};\n(function() {\n  function define(deps, factory) {\n    factory(__marked_exports);\n  }\n  define.amd = true;\n// ESM-uncomment-end\n\n (function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.marked = {}));\n})(this, (function (exports) { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  function getDefaults() {\n    return {\n      async: false,\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n  exports.defaults = getDefaults();\n  function changeDefaults(newDefaults) {\n    exports.defaults = newDefaults;\n  }\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n  /**\n   * @param {string} html\n   */\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n  var caret = /(^|[^\\[])\\^/g;\n  /**\n   * @param {string | RegExp} regex\n   * @param {string} opt\n   */\n\n  function edit(regex, opt) {\n    regex = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n  /**\n   * @param {boolean} sanitize\n   * @param {string} base\n   * @param {string} href\n   */\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n  /**\n   * @param {string} base\n   * @param {string} href\n   */\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0; // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n\n    if (!cells[0].trim()) {\n      cells.shift();\n    }\n\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n      cells.pop();\n    }\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  }\n  /**\n   * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n   * /c*$/ is vulnerable to REDOS.\n   *\n   * @param {string} str\n   * @param {string} c\n   * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n   */\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.slice(0, l - suffLen);\n  }\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n  /**\n   * @param {string} pattern\n   * @param {number} count\n   */\n\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  function outputLink(cap, link, raw, lexer) {\n    var href = link.href;\n    var title = link.title ? escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      lexer.state.inLink = true;\n      var token = {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text,\n        tokens: lexer.inlineTokens(text)\n      };\n      lexer.state.inLink = false;\n      return token;\n    }\n\n    return {\n      type: 'image',\n      raw: raw,\n      href: href,\n      title: title,\n      text: escape(text)\n    };\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap && cap[0].length > 0) {\n        return {\n          type: 'space',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text,\n          tokens: this.lexer.inline(text)\n        };\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          tokens: this.lexer.blockTokens(text, []),\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly;\n        var bull = cap[1].trim();\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: '',\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        };\n        bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n\n        if (this.options.pedantic) {\n          bull = isordered ? bull : '[*+-]';\n        } // Get next list item\n\n\n        var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))\"); // Check if current bullet point can start a new List Item\n\n        while (src) {\n          endEarly = false;\n\n          if (!(cap = itemRegex.exec(src))) {\n            break;\n          }\n\n          if (this.rules.block.hr.test(src)) {\n            // End list if bullet was actually HR (possibly move into itemRegex?)\n            break;\n          }\n\n          raw = cap[0];\n          src = src.substring(raw.length);\n          line = cap[2].split('\\n', 1)[0];\n          nextLine = src.split('\\n', 1)[0];\n\n          if (this.options.pedantic) {\n            indent = 2;\n            itemContents = line.trimLeft();\n          } else {\n            indent = cap[2].search(/[^ ]/); // Find first non-space char\n\n            indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n\n            itemContents = line.slice(indent);\n            indent += cap[1].length;\n          }\n\n          blankLine = false;\n\n          if (!line && /^ *$/.test(nextLine)) {\n            // Items begin with at most one blank line\n            raw += nextLine + '\\n';\n            src = src.substring(nextLine.length + 1);\n            endEarly = true;\n          }\n\n          if (!endEarly) {\n            var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])((?: [^\\\\n]*)?(?:\\\\n|$))\");\n            var hrRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)\");\n            var fencesBeginRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:```|~~~)\");\n            var headingBeginRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}#\"); // Check if following lines should be included in List Item\n\n            while (src) {\n              rawLine = src.split('\\n', 1)[0];\n              line = rawLine; // Re-align to follow commonmark nesting rules\n\n              if (this.options.pedantic) {\n                line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n              } // End list item if found code fences\n\n\n              if (fencesBeginRegex.test(line)) {\n                break;\n              } // End list item if found start of new heading\n\n\n              if (headingBeginRegex.test(line)) {\n                break;\n              } // End list item if found start of new bullet\n\n\n              if (nextBulletRegex.test(line)) {\n                break;\n              } // Horizontal rule found\n\n\n              if (hrRegex.test(src)) {\n                break;\n              }\n\n              if (line.search(/[^ ]/) >= indent || !line.trim()) {\n                // Dedent if possible\n                itemContents += '\\n' + line.slice(indent);\n              } else if (!blankLine) {\n                // Until blank line, item doesn't need indentation\n                itemContents += '\\n' + line;\n              } else {\n                // Otherwise, improper indentation ends this item\n                break;\n              }\n\n              if (!blankLine && !line.trim()) {\n                // Check if current line is blank\n                blankLine = true;\n              }\n\n              raw += rawLine + '\\n';\n              src = src.substring(rawLine.length + 1);\n            }\n          }\n\n          if (!list.loose) {\n            // If the previous item ended with a blank line, the list is loose\n            if (endsWithBlankLine) {\n              list.loose = true;\n            } else if (/\\n *\\n *$/.test(raw)) {\n              endsWithBlankLine = true;\n            }\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.exec(itemContents);\n\n            if (istask) {\n              ischecked = istask[0] !== '[ ] ';\n              itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: !!istask,\n            checked: ischecked,\n            loose: false,\n            text: itemContents\n          });\n          list.raw += raw;\n        } // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n\n\n        list.items[list.items.length - 1].raw = raw.trimRight();\n        list.items[list.items.length - 1].text = itemContents.trimRight();\n        list.raw = list.raw.trimRight();\n        var l = list.items.length; // Item child tokens handled here at end because we needed to have the final item to trim it first\n\n        for (i = 0; i < l; i++) {\n          this.lexer.state.top = false;\n          list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n          var spacers = list.items[i].tokens.filter(function (t) {\n            return t.type === 'space';\n          });\n          var hasMultipleLineBreaks = spacers.every(function (t) {\n            var chars = t.raw.split('');\n            var lineBreaks = 0;\n\n            for (var _iterator = _createForOfIteratorHelperLoose(chars), _step; !(_step = _iterator()).done;) {\n              var _char = _step.value;\n\n              if (_char === '\\n') {\n                lineBreaks += 1;\n              }\n\n              if (lineBreaks > 1) {\n                return true;\n              }\n            }\n\n            return false;\n          });\n\n          if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n            // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n            list.loose = true;\n            list.items[i].loose = true;\n          }\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        };\n\n        if (this.options.sanitize) {\n          var text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n          token.type = 'paragraph';\n          token.text = text;\n          token.tokens = this.lexer.inline(text);\n        }\n\n        return token;\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1]).map(function (c) {\n            return {\n              text: c\n            };\n          }),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i, j, k, row;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.rows.length;\n\n          for (i = 0; i < l; i++) {\n            item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n              return {\n                text: c\n              };\n            });\n          } // parse child tokens inside headers and cells\n          // header child tokens\n\n\n          l = item.header.length;\n\n          for (j = 0; j < l; j++) {\n            item.header[j].tokens = this.lexer.inline(item.header[j].text);\n          } // cell child tokens\n\n\n          l = item.rows.length;\n\n          for (j = 0; j < l; j++) {\n            row = item.rows[j];\n\n            for (k = 0; k < row.length; k++) {\n              row[k].tokens = this.lexer.inline(row[k].text);\n            }\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1],\n          tokens: this.lexer.inline(cap[1])\n        };\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        var text = cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1];\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: text,\n          tokens: this.lexer.inline(text)\n        };\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0],\n          tokens: this.lexer.inline(cap[0])\n        };\n      }\n    };\n\n    _proto.escape = function escape$1(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n          this.lexer.state.inLink = true;\n        } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.lexer.state.inLink = false;\n        }\n\n        if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = true;\n        } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: this.lexer.state.inLink,\n          inRawBlock: this.lexer.state.inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0], this.lexer);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0], this.lexer);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDF70-\\uDF81\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE70-\\uDEBE\\uDEC0-\\uDEC9\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)\n\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // Remove extra characters. *a*** -> *a*\n\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***\n\n          if (Math.min(lLength, rLength) % 2) {\n            var _text = src.slice(1, lLength + match.index + rLength);\n\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: _text,\n              tokens: this.lexer.inlineTokens(_text)\n            };\n          } // Create 'strong' if smallest delimiter has even char count. **a***\n\n\n          var text = src.slice(2, lLength + match.index + rLength - 1);\n          return {\n            type: 'strong',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text: text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2],\n          tokens: this.lexer.inlineTokens(cap[2])\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (this.lexer.state.inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        } else {\n          text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.listItemStart = edit(/^( *)(bull) */).replace('bull', block.bullet).getRegex();\n  block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '').replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.table = edit(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge({}, block.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n    nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //          () Skip orphan inside strong  () Consume to delim (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[^*]+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit(inline.reflink).replace('label', inline._label).replace('ref', block._label).getRegex();\n  inline.nolink = edit(inline.nolink).replace('ref', block._label).getRegex();\n  inline.reflinkSearch = edit(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n\n  /**\n   * smartypants text replacement\n   * @param {string} text\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   * @param {string} text\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || exports.defaults;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      this.tokenizer.lexer = this;\n      this.inlineQueue = [];\n      this.state = {\n        inLink: false,\n        inRawBlock: false,\n        top: true\n      };\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n');\n      this.blockTokens(src, this.tokens);\n      var next;\n\n      while (next = this.inlineQueue.shift()) {\n        this.inlineTokens(next.src, next.tokens);\n      }\n\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens) {\n      var _this = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n      } else {\n        src = src.replace(/^( *)(\\t+)/gm, function (_, leading, tabs) {\n          return leading + '    '.repeat(tabs.length);\n        });\n      }\n\n      var token, lastToken, cutSrc, lastParagraphClipped;\n\n      while (src) {\n        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // newline\n\n\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.length === 1 && tokens.length > 0) {\n            // if there's a single \\n as a spacer, it's terminating the last line,\n            // so move it there so that we don't get unecessary paragraph tags\n            tokens[tokens.length - 1].raw += '\\n';\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (token = this.tokenizer.def(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.raw;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startBlock) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      this.state.top = true;\n      return tokens;\n    };\n\n    _proto.inline = function inline(src, tokens) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      this.inlineQueue.push({\n        src: src,\n        tokens: tokens\n      });\n      return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens) {\n      var _this2 = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // extensions\n\n        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this2\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // escape\n\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startInline) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  /**\n   * Renderer\n   */\n\n  var Renderer = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n    }\n    /**\n     * @param {string} quote\n     */\n    ;\n\n    _proto.blockquote = function blockquote(quote) {\n      return \"<blockquote>\\n\" + quote + \"</blockquote>\\n\";\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    }\n    /**\n     * @param {string} text\n     * @param {string} level\n     * @param {string} raw\n     * @param {any} slugger\n     */\n    ;\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        var id = this.options.headerPrefix + slugger.slug(raw);\n        return \"<h\" + level + \" id=\\\"\" + id + \"\\\">\" + text + \"</h\" + level + \">\\n\";\n      } // ignore IDs\n\n\n      return \"<h\" + level + \">\" + text + \"</h\" + level + \">\\n\";\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.listitem = function listitem(text) {\n      return \"<li>\" + text + \"</li>\\n\";\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.paragraph = function paragraph(text) {\n      return \"<p>\" + text + \"</p>\\n\";\n    }\n    /**\n     * @param {string} header\n     * @param {string} body\n     */\n    ;\n\n    _proto.table = function table(header, body) {\n      if (body) body = \"<tbody>\" + body + \"</tbody>\";\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    }\n    /**\n     * @param {string} content\n     */\n    ;\n\n    _proto.tablerow = function tablerow(content) {\n      return \"<tr>\\n\" + content + \"</tr>\\n\";\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? \"<\" + type + \" align=\\\"\" + flags.align + \"\\\">\" : \"<\" + type + \">\";\n      return tag + content + (\"</\" + type + \">\\n\");\n    }\n    /**\n     * span level renderer\n     * @param {string} text\n     */\n    ;\n\n    _proto.strong = function strong(text) {\n      return \"<strong>\" + text + \"</strong>\";\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.em = function em(text) {\n      return \"<em>\" + text + \"</em>\";\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.codespan = function codespan(text) {\n      return \"<code>\" + text + \"</code>\";\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.del = function del(text) {\n      return \"<del>\" + text + \"</del>\";\n    }\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */\n    ;\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    }\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */\n    ;\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = \"<img src=\\\"\" + href + \"\\\" alt=\\\"\" + text + \"\\\"\";\n\n      if (title) {\n        out += \" title=\\\"\" + title + \"\\\"\";\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n    /**\n     * @param {string} value\n     */\n\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     * @param {string} originalSlug\n     * @param {boolean} isDryRun\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} [options]\n     * @param {boolean} [options.dryrun] Generates the next unique slug without\n     * updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || exports.defaults;\n      this.options.renderer = this.options.renderer || new Renderer();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer();\n      this.slugger = new Slugger();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.rows.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.rows[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    function onError(e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n\n    try {\n      var _tokens = Lexer.lex(src, opt);\n\n      if (opt.walkTokens) {\n        if (opt.async) {\n          return Promise.all(marked.walkTokens(_tokens, opt.walkTokens)).then(function () {\n            return Parser.parse(_tokens, opt);\n          })[\"catch\"](onError);\n        }\n\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      onError(e);\n    }\n  }\n  /**\n   * Options\n   */\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = exports.defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var opts = merge.apply(void 0, [{}].concat(args));\n    var extensions = marked.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    var hasExtensions;\n    args.forEach(function (pack) {\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        hasExtensions = true;\n        pack.extensions.forEach(function (ext) {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n\n          if (ext.renderer) {\n            // Renderer extensions\n            var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function () {\n                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n\n                var ret = ext.renderer.apply(this, args);\n\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n\n          if (ext.tokenizer) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n\n          if (ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n      } // ==-- Parse \"overwrite\" extensions --== //\n\n\n      if (pack.renderer) {\n        (function () {\n          var renderer = marked.defaults.renderer || new Renderer();\n\n          var _loop = function _loop(prop) {\n            var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false\n\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n\n              var ret = pack.renderer[prop].apply(renderer, args);\n\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.renderer) {\n            _loop(prop);\n          }\n\n          opts.renderer = renderer;\n        })();\n      }\n\n      if (pack.tokenizer) {\n        (function () {\n          var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n          var _loop2 = function _loop2(prop) {\n            var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false\n\n            tokenizer[prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n\n              var ret = pack.tokenizer[prop].apply(tokenizer, args);\n\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.tokenizer) {\n            _loop2(prop);\n          }\n\n          opts.tokenizer = tokenizer;\n        })();\n      } // ==-- Parse WalkTokens extensions --== //\n\n\n      if (pack.walkTokens) {\n        var _walkTokens = marked.defaults.walkTokens;\n\n        opts.walkTokens = function (token) {\n          var values = [];\n          values.push(pack.walkTokens.call(this, token));\n\n          if (_walkTokens) {\n            values = values.concat(_walkTokens.call(this, token));\n          }\n\n          return values;\n        };\n      }\n\n      if (hasExtensions) {\n        opts.extensions = extensions;\n      }\n\n      marked.setOptions(opts);\n    });\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    var values = [];\n\n    var _loop3 = function _loop3() {\n      var token = _step.value;\n      values = values.concat(callback.call(marked, token));\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              values = values.concat(marked.walkTokens(cell.tokens, callback));\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                values = values.concat(marked.walkTokens(_cell.tokens, callback));\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            values = values.concat(marked.walkTokens(token.items, callback));\n            break;\n          }\n\n        default:\n          {\n            if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n              // Walk any extensions\n              marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                values = values.concat(marked.walkTokens(token[childTokens], callback));\n              });\n            } else if (token.tokens) {\n              values = values.concat(marked.walkTokens(token.tokens, callback));\n            }\n          }\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      _loop3();\n    }\n\n    return values;\n  };\n  /**\n   * Parse Inline\n   * @param {string} src\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var options = marked.options;\n  var setOptions = marked.setOptions;\n  var use = marked.use;\n  var walkTokens = marked.walkTokens;\n  var parseInline = marked.parseInline;\n  var parse = marked;\n  var parser = Parser.parse;\n  var lexer = Lexer.lex;\n\n  exports.Lexer = Lexer;\n  exports.Parser = Parser;\n  exports.Renderer = Renderer;\n  exports.Slugger = Slugger;\n  exports.TextRenderer = TextRenderer;\n  exports.Tokenizer = Tokenizer;\n  exports.getDefaults = getDefaults;\n  exports.lexer = lexer;\n  exports.marked = marked;\n  exports.options = options;\n  exports.parse = parse;\n  exports.parseInline = parseInline;\n  exports.parser = parser;\n  exports.setOptions = setOptions;\n  exports.use = use;\n  exports.walkTokens = walkTokens;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n// ESM-uncomment-begin\n})();\nexport var Lexer = (__marked_exports.Lexer || exports.Lexer);\nexport var Parser = (__marked_exports.Parser || exports.Parser);\nexport var Renderer = (__marked_exports.Renderer || exports.Renderer);\nexport var Slugger = (__marked_exports.Slugger || exports.Slugger);\nexport var TextRenderer = (__marked_exports.TextRenderer || exports.TextRenderer);\nexport var Tokenizer = (__marked_exports.Tokenizer || exports.Tokenizer);\nexport var getDefaults = (__marked_exports.getDefaults || exports.getDefaults);\nexport var lexer = (__marked_exports.lexer || exports.lexer);\nexport var marked = (__marked_exports.marked || exports.marked);\nexport var options = (__marked_exports.options || exports.options);\nexport var parse = (__marked_exports.parse || exports.parse);\nexport var parseInline = (__marked_exports.parseInline || exports.parseInline);\nexport var parser = (__marked_exports.parser || exports.parser);\nexport var setOptions = (__marked_exports.setOptions || exports.setOptions);\nexport var use = (__marked_exports.use || exports.use);\nexport var walkTokens = (__marked_exports.walkTokens || exports.walkTokens);\n// ESM-uncomment-end\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { VSBuffer } from './buffer.js';\nimport { URI } from './uri.js';\nexport function parse(text) {\n    let data = JSON.parse(text);\n    data = revive(data);\n    return data;\n}\nexport function revive(obj, depth = 0) {\n    if (!obj || depth > 200) {\n        return obj;\n    }\n    if (typeof obj === 'object') {\n        switch (obj.$mid) {\n            case 1 /* MarshalledId.Uri */: return URI.revive(obj);\n            case 2 /* MarshalledId.Regexp */: return new RegExp(obj.source, obj.flags);\n            case 16 /* MarshalledId.Date */: return new Date(obj.source);\n        }\n        if (obj instanceof VSBuffer\n            || obj instanceof Uint8Array) {\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            for (let i = 0; i < obj.length; ++i) {\n                obj[i] = revive(obj[i], depth + 1);\n            }\n        }\n        else {\n            // walk object\n            for (const key in obj) {\n                if (Object.hasOwnProperty.call(obj, key)) {\n                    obj[key] = revive(obj[key], depth + 1);\n                }\n            }\n        }\n    }\n    return obj;\n}\n","export const Mimes = Object.freeze({\n    text: 'text/plain',\n    binary: 'application/octet-stream',\n    unknown: 'application/unknown',\n    markdown: 'text/markdown',\n    latex: 'text/latex',\n    uriList: 'text/uri-list',\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class ArrayNavigator {\n    constructor(items, start = 0, end = items.length, index = start - 1) {\n        this.items = items;\n        this.start = start;\n        this.end = end;\n        this.index = index;\n    }\n    current() {\n        if (this.index === this.start - 1 || this.index === this.end) {\n            return null;\n        }\n        return this.items[this.index];\n    }\n    next() {\n        this.index = Math.min(this.index + 1, this.end);\n        return this.current();\n    }\n    previous() {\n        this.index = Math.max(this.index - 1, this.start - 1);\n        return this.current();\n    }\n    first() {\n        this.index = this.start;\n        return this.current();\n    }\n    last() {\n        this.index = this.end - 1;\n        return this.current();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as errors from './errors.js';\nimport * as platform from './platform.js';\nimport { URI } from './uri.js';\nexport var Schemas;\n(function (Schemas) {\n    /**\n     * A schema that is used for models that exist in memory\n     * only and that have no correspondence on a server or such.\n     */\n    Schemas.inMemory = 'inmemory';\n    /**\n     * A schema that is used for setting files\n     */\n    Schemas.vscode = 'vscode';\n    /**\n     * A schema that is used for internal private files\n     */\n    Schemas.internal = 'private';\n    /**\n     * A walk-through document.\n     */\n    Schemas.walkThrough = 'walkThrough';\n    /**\n     * An embedded code snippet.\n     */\n    Schemas.walkThroughSnippet = 'walkThroughSnippet';\n    Schemas.http = 'http';\n    Schemas.https = 'https';\n    Schemas.file = 'file';\n    Schemas.mailto = 'mailto';\n    Schemas.untitled = 'untitled';\n    Schemas.data = 'data';\n    Schemas.command = 'command';\n    Schemas.vscodeRemote = 'vscode-remote';\n    Schemas.vscodeRemoteResource = 'vscode-remote-resource';\n    Schemas.vscodeUserData = 'vscode-userdata';\n    Schemas.vscodeCustomEditor = 'vscode-custom-editor';\n    Schemas.vscodeNotebookCell = 'vscode-notebook-cell';\n    Schemas.vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n    Schemas.vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n    Schemas.vscodeInteractive = 'vscode-interactive';\n    Schemas.vscodeInteractiveInput = 'vscode-interactive-input';\n    Schemas.vscodeSettings = 'vscode-settings';\n    Schemas.vscodeWorkspaceTrust = 'vscode-workspace-trust';\n    Schemas.vscodeTerminal = 'vscode-terminal';\n    /**\n     * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n     */\n    Schemas.webviewPanel = 'webview-panel';\n    /**\n     * Scheme used for loading the wrapper html and script in webviews.\n     */\n    Schemas.vscodeWebview = 'vscode-webview';\n    /**\n     * Scheme used for extension pages\n     */\n    Schemas.extension = 'extension';\n    /**\n     * Scheme used as a replacement of `file` scheme to load\n     * files with our custom protocol handler (desktop only).\n     */\n    Schemas.vscodeFileResource = 'vscode-file';\n    /**\n     * Scheme used for temporary resources\n     */\n    Schemas.tmp = 'tmp';\n    /**\n     * Scheme used vs live share\n     */\n    Schemas.vsls = 'vsls';\n    /**\n     * Scheme used for the Source Control commit input's text document\n     */\n    Schemas.vscodeSourceControl = 'vscode-scm';\n})(Schemas || (Schemas = {}));\nexport const connectionTokenQueryName = 'tkn';\nclass RemoteAuthoritiesImpl {\n    constructor() {\n        this._hosts = Object.create(null);\n        this._ports = Object.create(null);\n        this._connectionTokens = Object.create(null);\n        this._preferredWebSchema = 'http';\n        this._delegate = null;\n        this._remoteResourcesPath = `/${Schemas.vscodeRemoteResource}`;\n    }\n    setPreferredWebSchema(schema) {\n        this._preferredWebSchema = schema;\n    }\n    rewrite(uri) {\n        if (this._delegate) {\n            try {\n                return this._delegate(uri);\n            }\n            catch (err) {\n                errors.onUnexpectedError(err);\n                return uri;\n            }\n        }\n        const authority = uri.authority;\n        let host = this._hosts[authority];\n        if (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n            host = `[${host}]`;\n        }\n        const port = this._ports[authority];\n        const connectionToken = this._connectionTokens[authority];\n        let query = `path=${encodeURIComponent(uri.path)}`;\n        if (typeof connectionToken === 'string') {\n            query += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n        }\n        return URI.from({\n            scheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n            authority: `${host}:${port}`,\n            path: this._remoteResourcesPath,\n            query\n        });\n    }\n}\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\nclass FileAccessImpl {\n    /**\n     * Returns a URI to use in contexts where the browser is responsible\n     * for loading (e.g. fetch()) or when used within the DOM.\n     *\n     * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n     */\n    uriToBrowserUri(uri) {\n        // Handle remote URIs via `RemoteAuthorities`\n        if (uri.scheme === Schemas.vscodeRemote) {\n            return RemoteAuthorities.rewrite(uri);\n        }\n        // Convert to `vscode-file` resource..\n        if (\n        // ...only ever for `file` resources\n        uri.scheme === Schemas.file &&\n            (\n            // ...and we run in native environments\n            platform.isNative ||\n                // ...or web worker extensions on desktop\n                (platform.isWebWorker && platform.globals.origin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`))) {\n            return uri.with({\n                scheme: Schemas.vscodeFileResource,\n                // We need to provide an authority here so that it can serve\n                // as origin for network and loading matters in chromium.\n                // If the URI is not coming with an authority already, we\n                // add our own\n                authority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n                query: null,\n                fragment: null\n            });\n        }\n        return uri;\n    }\n}\nFileAccessImpl.FALLBACK_AUTHORITY = 'vscode-app';\nexport const FileAccess = new FileAccessImpl();\nexport var COI;\n(function (COI) {\n    const coiHeaders = new Map([\n        ['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n        ['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n        ['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n    ]);\n    COI.CoopAndCoep = Object.freeze(coiHeaders.get('3'));\n    const coiSearchParamName = 'vscode-coi';\n    /**\n     * Extract desired headers from `vscode-coi` invocation\n     */\n    function getHeadersFromQuery(url) {\n        let params;\n        if (typeof url === 'string') {\n            params = new URL(url).searchParams;\n        }\n        else if (url instanceof URL) {\n            params = url.searchParams;\n        }\n        else if (URI.isUri(url)) {\n            params = new URL(url.toString(true)).searchParams;\n        }\n        const value = params === null || params === void 0 ? void 0 : params.get(coiSearchParamName);\n        if (!value) {\n            return undefined;\n        }\n        return coiHeaders.get(value);\n    }\n    COI.getHeadersFromQuery = getHeadersFromQuery;\n    /**\n     * Add the `vscode-coi` query attribute based on wanting `COOP` and `COEP`. Will be a noop when `crossOriginIsolated`\n     * isn't enabled the current context\n     */\n    function addSearchParam(urlOrSearch, coop, coep) {\n        if (!globalThis.crossOriginIsolated) {\n            // depends on the current context being COI\n            return;\n        }\n        const value = coop && coep ? '3' : coep ? '2' : '1';\n        if (urlOrSearch instanceof URLSearchParams) {\n            urlOrSearch.set(coiSearchParamName, value);\n        }\n        else {\n            urlOrSearch[coiSearchParamName] = value;\n        }\n    }\n    COI.addSearchParam = addSearchParam;\n})(COI || (COI = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\nexport class MovingAverage {\n    constructor() {\n        this._n = 1;\n        this._val = 0;\n    }\n    update(value) {\n        this._val = this._val + (value - this._val) / this._n;\n        this._n += 1;\n        return this._val;\n    }\n    get value() {\n        return this._val;\n    }\n}\nexport class SlidingWindowAverage {\n    constructor(size) {\n        this._n = 0;\n        this._val = 0;\n        this._values = [];\n        this._index = 0;\n        this._sum = 0;\n        this._values = new Array(size);\n        this._values.fill(0, 0, size);\n    }\n    update(value) {\n        const oldValue = this._values[this._index];\n        this._values[this._index] = value;\n        this._index = (this._index + 1) % this._values.length;\n        this._sum -= oldValue;\n        this._sum += value;\n        if (this._n < this._values.length) {\n            this._n += 1;\n        }\n        this._val = this._sum / this._n;\n        return this._val;\n    }\n    get value() {\n        return this._val;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isTypedArray, isObject, isUndefinedOrNull } from './types.js';\nexport function deepClone(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    if (obj instanceof RegExp) {\n        return obj;\n    }\n    const result = Array.isArray(obj) ? [] : {};\n    Object.entries(obj).forEach(([key, value]) => {\n        result[key] = value && typeof value === 'object' ? deepClone(value) : value;\n    });\n    return result;\n}\nexport function deepFreeze(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    const stack = [obj];\n    while (stack.length > 0) {\n        const obj = stack.shift();\n        Object.freeze(obj);\n        for (const key in obj) {\n            if (_hasOwnProperty.call(obj, key)) {\n                const prop = obj[key];\n                if (typeof prop === 'object' && !Object.isFrozen(prop) && !isTypedArray(prop)) {\n                    stack.push(prop);\n                }\n            }\n        }\n    }\n    return obj;\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function cloneAndChange(obj, changer) {\n    return _cloneAndChange(obj, changer, new Set());\n}\nfunction _cloneAndChange(obj, changer, seen) {\n    if (isUndefinedOrNull(obj)) {\n        return obj;\n    }\n    const changed = changer(obj);\n    if (typeof changed !== 'undefined') {\n        return changed;\n    }\n    if (Array.isArray(obj)) {\n        const r1 = [];\n        for (const e of obj) {\n            r1.push(_cloneAndChange(e, changer, seen));\n        }\n        return r1;\n    }\n    if (isObject(obj)) {\n        if (seen.has(obj)) {\n            throw new Error('Cannot clone recursive data-structure');\n        }\n        seen.add(obj);\n        const r2 = {};\n        for (const i2 in obj) {\n            if (_hasOwnProperty.call(obj, i2)) {\n                r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n            }\n        }\n        seen.delete(obj);\n        return r2;\n    }\n    return obj;\n}\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination, source, overwrite = true) {\n    if (!isObject(destination)) {\n        return source;\n    }\n    if (isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (key in destination) {\n                if (overwrite) {\n                    if (isObject(destination[key]) && isObject(source[key])) {\n                        mixin(destination[key], source[key], overwrite);\n                    }\n                    else {\n                        destination[key] = source[key];\n                    }\n                }\n            }\n            else {\n                destination[key] = source[key];\n            }\n        });\n    }\n    return destination;\n}\nexport function equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    let i;\n    let key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        const oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        const otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function getAllPropertyNames(obj) {\n    let res = [];\n    let proto = Object.getPrototypeOf(obj);\n    while (Object.prototype !== proto) {\n        res = res.concat(Object.getOwnPropertyNames(proto));\n        proto = Object.getPrototypeOf(proto);\n    }\n    return res;\n}\nexport function getAllMethodNames(obj) {\n    const methods = [];\n    for (const prop of getAllPropertyNames(obj)) {\n        if (typeof obj[prop] === 'function') {\n            methods.push(prop);\n        }\n    }\n    return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    const result = {};\n    for (const methodName of methodNames) {\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals, isMacintosh, isWindows } from './platform.js';\nlet safeProcess;\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    const sandboxProcess = globals.vscode.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get arch() { return sandboxProcess.arch; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); }\n    };\n}\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get arch() { return process.arch; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n    };\n}\n// Web environment\nelse {\n    safeProcess = {\n        // Supported\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        get arch() { return undefined; /* arch is undefined in web */ },\n        // Unsupported\n        get env() { return {}; },\n        cwd() { return '/'; }\n    };\n}\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\nexport const cwd = safeProcess.cwd;\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v16.14.2/lib/path.js\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nimport * as process from './process.js';\nconst CHAR_UPPERCASE_A = 65; /* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\nclass ErrorInvalidArgType extends Error {\n    constructor(name, expected, actual) {\n        // determiner: 'must be' or 'must not be'\n        let determiner;\n        if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n            determiner = 'must not be';\n            expected = expected.replace(/^not /, '');\n        }\n        else {\n            determiner = 'must be';\n        }\n        const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n        let msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n        msg += `. Received type ${typeof actual}`;\n        super(msg);\n        this.code = 'ERR_INVALID_ARG_TYPE';\n    }\n}\nfunction validateObject(pathObject, name) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n        throw new ErrorInvalidArgType(name, 'Object', pathObject);\n    }\n}\nfunction validateString(value, name) {\n    if (typeof value !== 'string') {\n        throw new ErrorInvalidArgType(name, 'string', value);\n    }\n}\nconst platformIsWin32 = (process.platform === 'win32');\nfunction isPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\nfunction isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\nfunction isWindowsDeviceRoot(code) {\n    return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n        (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code = 0;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (isPathSeparator(code)) {\n            break;\n        }\n        else {\n            code = CHAR_FORWARD_SLASH;\n        }\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) {\n                // NOOP\n            }\n            else if (dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = '';\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0, lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length !== 0) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    res += res.length > 0 ? `${separator}..` : '..';\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0) {\n                    res += `${separator}${path.slice(lastSlash + 1, i)}`;\n                }\n                else {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nfunction _format(sep, pathObject) {\n    validateObject(pathObject, 'pathObject');\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base ||\n        `${pathObject.name || ''}${pathObject.ext || ''}`;\n    if (!dir) {\n        return base;\n    }\n    return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\nexport const win32 = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedDevice = '';\n        let resolvedTail = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1; i--) {\n            let path;\n            if (i >= 0) {\n                path = pathSegments[i];\n                validateString(path, 'path');\n                // Skip empty entries\n                if (path.length === 0) {\n                    continue;\n                }\n            }\n            else if (resolvedDevice.length === 0) {\n                path = process.cwd();\n            }\n            else {\n                // Windows has the concept of drive-specific current working\n                // directories. If we've resolved a drive letter but not yet an\n                // absolute path, get cwd for that drive, or the process cwd if\n                // the drive cwd is not available. We're sure the device is not\n                // a UNC path at this points, because UNC paths are always absolute.\n                path = process.env[`=${resolvedDevice}`] || process.cwd();\n                // Verify that a cwd was found and that it actually points\n                // to our drive. If not, default to the drive's root.\n                if (path === undefined ||\n                    (path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n                        path.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n                    path = `${resolvedDevice}\\\\`;\n                }\n            }\n            const len = path.length;\n            let rootEnd = 0;\n            let device = '';\n            let isAbsolute = false;\n            const code = path.charCodeAt(0);\n            // Try to match a root\n            if (len === 1) {\n                if (isPathSeparator(code)) {\n                    // `path` contains just a path separator\n                    rootEnd = 1;\n                    isAbsolute = true;\n                }\n            }\n            else if (isPathSeparator(code)) {\n                // Possible UNC root\n                // If we started with a separator, we know we at least have an\n                // absolute path of some kind (UNC or otherwise)\n                isAbsolute = true;\n                if (isPathSeparator(path.charCodeAt(1))) {\n                    // Matched double path separator at beginning\n                    let j = 2;\n                    let last = j;\n                    // Match 1 or more non-path separators\n                    while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        const firstPart = path.slice(last, j);\n                        // Matched!\n                        last = j;\n                        // Match 1 or more path separators\n                        while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j < len && j !== last) {\n                            // Matched!\n                            last = j;\n                            // Match 1 or more non-path separators\n                            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                                j++;\n                            }\n                            if (j === len || j !== last) {\n                                // We matched a UNC root\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                                rootEnd = j;\n                            }\n                        }\n                    }\n                }\n                else {\n                    rootEnd = 1;\n                }\n            }\n            else if (isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON) {\n                // Possible device root\n                device = path.slice(0, 2);\n                rootEnd = 2;\n                if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                    // Treat separator following drive name as an absolute path\n                    // indicator\n                    isAbsolute = true;\n                    rootEnd = 3;\n                }\n            }\n            if (device.length > 0) {\n                if (resolvedDevice.length > 0) {\n                    if (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n                        // This path points to another device so it is not applicable\n                        continue;\n                    }\n                }\n                else {\n                    resolvedDevice = device;\n                }\n            }\n            if (resolvedAbsolute) {\n                if (resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n            else {\n                resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n                resolvedAbsolute = isAbsolute;\n                if (isAbsolute && resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n        }\n        // At this point the path should be resolved to a full absolute path,\n        // but handle relative paths to be safe (might happen when process.cwd()\n        // fails)\n        // Normalize the tail path\n        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n        return resolvedAbsolute ?\n            `${resolvedDevice}\\\\${resolvedTail}` :\n            `${resolvedDevice}${resolvedTail}` || '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = 0;\n        let device;\n        let isAbsolute = false;\n        const code = path.charCodeAt(0);\n        // Try to match a root\n        if (len === 1) {\n            // `path` contains just a single char, exit early to avoid\n            // unnecessary work\n            return isPosixPathSeparator(code) ? '\\\\' : path;\n        }\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            // If we started with a separator, we know we at least have an absolute\n            // path of some kind (UNC or otherwise)\n            isAbsolute = true;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    const firstPart = path.slice(last, j);\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            // Return the normalized version of the UNC root since there\n                            // is nothing left to process\n                            return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                            rootEnd = j;\n                        }\n                    }\n                }\n            }\n            else {\n                rootEnd = 1;\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            device = path.slice(0, 2);\n            rootEnd = 2;\n            if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                // Treat separator following drive name as an absolute path\n                // indicator\n                isAbsolute = true;\n                rootEnd = 3;\n            }\n        }\n        let tail = rootEnd < len ?\n            normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n            '';\n        if (tail.length === 0 && !isAbsolute) {\n            tail = '.';\n        }\n        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n            tail += '\\\\';\n        }\n        if (device === undefined) {\n            return isAbsolute ? `\\\\${tail}` : tail;\n        }\n        return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return false;\n        }\n        const code = path.charCodeAt(0);\n        return isPathSeparator(code) ||\n            // Possible device root\n            (len > 2 &&\n                isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON &&\n                isPathSeparator(path.charCodeAt(2)));\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        let firstPart;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = firstPart = arg;\n                }\n                else {\n                    joined += `\\\\${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        // Make sure that the joined path doesn't start with two slashes, because\n        // normalize() will mistake it for a UNC path then.\n        //\n        // This step is skipped when it is very clear that the user actually\n        // intended to point at a UNC path. This is assumed when the first\n        // non-empty string arguments starts with exactly two slashes followed by\n        // at least one more non-slash character.\n        //\n        // Note that for normalize() to treat a path as a UNC path it needs to\n        // have at least 2 components, so we don't filter for that here.\n        // This means that the user can use join to construct UNC paths from\n        // a server name and a share name; for example:\n        //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n        let needsReplace = true;\n        let slashCount = 0;\n        if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n            ++slashCount;\n            const firstLen = firstPart.length;\n            if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n                ++slashCount;\n                if (firstLen > 2) {\n                    if (isPathSeparator(firstPart.charCodeAt(2))) {\n                        ++slashCount;\n                    }\n                    else {\n                        // We matched a UNC path in the first part\n                        needsReplace = false;\n                    }\n                }\n            }\n        }\n        if (needsReplace) {\n            // Find any more consecutive slashes we need to replace\n            while (slashCount < joined.length &&\n                isPathSeparator(joined.charCodeAt(slashCount))) {\n                slashCount++;\n            }\n            // Replace the slashes if needed\n            if (slashCount >= 2) {\n                joined = `\\\\${joined.slice(slashCount)}`;\n            }\n        }\n        return win32.normalize(joined);\n    },\n    // It will solve the relative path from `from` to `to`, for instance:\n    //  from = 'C:\\\\orandea\\\\test\\\\aaa'\n    //  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n    // The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        const fromOrig = win32.resolve(from);\n        const toOrig = win32.resolve(to);\n        if (fromOrig === toOrig) {\n            return '';\n        }\n        from = fromOrig.toLowerCase();\n        to = toOrig.toLowerCase();\n        if (from === to) {\n            return '';\n        }\n        // Trim any leading backslashes\n        let fromStart = 0;\n        while (fromStart < from.length &&\n            from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n            fromStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let fromEnd = from.length;\n        while (fromEnd - 1 > fromStart &&\n            from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n            fromEnd--;\n        }\n        const fromLen = fromEnd - fromStart;\n        // Trim any leading backslashes\n        let toStart = 0;\n        while (toStart < to.length &&\n            to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            toStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let toEnd = to.length;\n        while (toEnd - 1 > toStart &&\n            to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n            toEnd--;\n        }\n        const toLen = toEnd - toStart;\n        // Compare paths to find the longest common path from root\n        const length = fromLen < toLen ? fromLen : toLen;\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_BACKWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        // We found a mismatch before the first common path separator was seen, so\n        // return the original `to`.\n        if (i !== length) {\n            if (lastCommonSep === -1) {\n                return toOrig;\n            }\n        }\n        else {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n                    return toOrig.slice(toStart + i + 1);\n                }\n                if (i === 2) {\n                    // We get here if `from` is the device root.\n                    // For example: from='C:\\\\'; to='C:\\\\foo'\n                    return toOrig.slice(toStart + i);\n                }\n            }\n            if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n                    lastCommonSep = i;\n                }\n                else if (i === 2) {\n                    // We get here if `to` is the device root.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n                    lastCommonSep = 3;\n                }\n            }\n            if (lastCommonSep === -1) {\n                lastCommonSep = 0;\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to` and\n        // `from`\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n                out += out.length === 0 ? '..' : '\\\\..';\n            }\n        }\n        toStart += lastCommonSep;\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts\n        if (out.length > 0) {\n            return `${out}${toOrig.slice(toStart, toEnd)}`;\n        }\n        if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            ++toStart;\n        }\n        return toOrig.slice(toStart, toEnd);\n    },\n    toNamespacedPath(path) {\n        // Note: this will *probably* throw somewhere.\n        if (typeof path !== 'string' || path.length === 0) {\n            return path;\n        }\n        const resolvedPath = win32.resolve(path);\n        if (resolvedPath.length <= 2) {\n            return path;\n        }\n        if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n            // Possible UNC root\n            if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n                const code = resolvedPath.charCodeAt(2);\n                if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n                    // Matched non-long UNC root, convert the path to a long UNC path\n                    return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n            resolvedPath.charCodeAt(1) === CHAR_COLON &&\n            resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n            // Matched device root, convert the path to a long UNC path\n            return `\\\\\\\\?\\\\${resolvedPath}`;\n        }\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = -1;\n        let offset = 0;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            // `path` contains just a path separator, exit early to avoid\n            // unnecessary work or a dot.\n            return isPathSeparator(code) ? path : '.';\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = offset = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            return path;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            // Offset by 1 to include the separator after the UNC root to\n                            // treat it as a \"normal root\" on top of a (UNC) root\n                            rootEnd = offset = j + 1;\n                        }\n                    }\n                }\n            }\n            // Possible device root\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n            offset = rootEnd;\n        }\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = len - 1; i >= offset; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            if (rootEnd === -1) {\n                return '.';\n            }\n            end = rootEnd;\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            isWindowsDeviceRoot(path.charCodeAt(0)) &&\n            path.charCodeAt(1) === CHAR_COLON) {\n            start = 2;\n        }\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= start; --i) {\n                const code = path.charCodeAt(i);\n                if (isPathSeparator(code)) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= start; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let start = 0;\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            path.charCodeAt(1) === CHAR_COLON &&\n            isWindowsDeviceRoot(path.charCodeAt(0))) {\n            start = startPart = 2;\n        }\n        for (let i = path.length - 1; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '\\\\'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const len = path.length;\n        let rootEnd = 0;\n        let code = path.charCodeAt(0);\n        if (len === 1) {\n            if (isPathSeparator(code)) {\n                // `path` contains just a path separator, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            ret.base = ret.name = path;\n            return ret;\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            rootEnd = j;\n                        }\n                        else if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            rootEnd = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            if (len <= 2) {\n                // `path` contains just a drive root, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            rootEnd = 2;\n            if (isPathSeparator(path.charCodeAt(2))) {\n                if (len === 3) {\n                    // `path` contains just a drive root, exit early to avoid\n                    // unnecessary work\n                    ret.root = ret.dir = path;\n                    return ret;\n                }\n                rootEnd = 3;\n            }\n        }\n        if (rootEnd > 0) {\n            ret.root = path.slice(0, rootEnd);\n        }\n        let startDot = -1;\n        let startPart = rootEnd;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= rootEnd; --i) {\n            code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(startPart, end);\n            }\n            else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        // If the directory is the root, use the entire root as the `dir` including\n        // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n        // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n        if (startPart > 0 && startPart !== rootEnd) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else {\n            ret.dir = ret.root;\n        }\n        return ret;\n    },\n    sep: '\\\\',\n    delimiter: ';',\n    win32: null,\n    posix: null\n};\nconst posixCwd = (() => {\n    if (platformIsWin32) {\n        // Converts Windows' backslash path separators to POSIX forward slashes\n        // and truncates any drive indicator\n        const regexp = /\\\\/g;\n        return () => {\n            const cwd = process.cwd().replace(regexp, '/');\n            return cwd.slice(cwd.indexOf('/'));\n        };\n    }\n    // We're already on POSIX, no need for any transformations\n    return () => process.cwd();\n})();\nexport const posix = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedPath = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            const path = i >= 0 ? pathSegments[i] : posixCwd();\n            validateString(path, 'path');\n            // Skip empty entries\n            if (path.length === 0) {\n                continue;\n            }\n            resolvedPath = `${path}/${resolvedPath}`;\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        // Normalize the path\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n        if (resolvedAbsolute) {\n            return `/${resolvedPath}`;\n        }\n        return resolvedPath.length > 0 ? resolvedPath : '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n        // Normalize the path\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n        if (path.length === 0) {\n            if (isAbsolute) {\n                return '/';\n            }\n            return trailingSeparator ? './' : '.';\n        }\n        if (trailingSeparator) {\n            path += '/';\n        }\n        return isAbsolute ? `/${path}` : path;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = arg;\n                }\n                else {\n                    joined += `/${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        return posix.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        // Trim leading forward slashes.\n        from = posix.resolve(from);\n        to = posix.resolve(to);\n        if (from === to) {\n            return '';\n        }\n        const fromStart = 1;\n        const fromEnd = from.length;\n        const fromLen = fromEnd - fromStart;\n        const toStart = 1;\n        const toLen = to.length - toStart;\n        // Compare paths to find the longest common path from root\n        const length = (fromLen < toLen ? fromLen : toLen);\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_FORWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='/foo/bar'; to='/foo/bar/baz'\n                    return to.slice(toStart + i + 1);\n                }\n                if (i === 0) {\n                    // We get here if `from` is the root\n                    // For example: from='/'; to='/foo'\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='/foo/bar/baz'; to='/foo/bar'\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    // We get here if `to` is the root.\n                    // For example: from='/foo/bar'; to='/'\n                    lastCommonSep = 0;\n                }\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to`\n        // and `from`.\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                out += out.length === 0 ? '..' : '/..';\n            }\n        }\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts.\n        return `${out}${to.slice(toStart + lastCommonSep)}`;\n    },\n    toNamespacedPath(path) {\n        // Non-op on posix systems\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = path.length - 1; i >= 1; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            return hasRoot ? '/' : '.';\n        }\n        if (hasRoot && end === 1) {\n            return '//';\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= 0; --i) {\n                const code = path.charCodeAt(i);\n                if (code === CHAR_FORWARD_SLASH) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        for (let i = path.length - 1; i >= 0; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '/'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let start;\n        if (isAbsolute) {\n            ret.root = '/';\n            start = 1;\n        }\n        else {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            const start = startPart === 0 && isAbsolute ? 1 : startPart;\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(start, end);\n            }\n            else {\n                ret.name = path.slice(start, startDot);\n                ret.base = path.slice(start, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else if (isAbsolute) {\n            ret.dir = '/';\n        }\n        return ret;\n    },\n    sep: '/',\n    delimiter: ':',\n    win32: null,\n    posix: null\n};\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\nexport const normalize = (platformIsWin32 ? win32.normalize : posix.normalize);\nexport const resolve = (platformIsWin32 ? win32.resolve : posix.resolve);\nexport const relative = (platformIsWin32 ? win32.relative : posix.relative);\nexport const dirname = (platformIsWin32 ? win32.dirname : posix.dirname);\nexport const basename = (platformIsWin32 ? win32.basename : posix.basename);\nexport const extname = (platformIsWin32 ? win32.extname : posix.extname);\nexport const sep = (platformIsWin32 ? win32.sep : posix.sep);\n","var _a;\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nexport const LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isElectron = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _isMobile = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _translationsConfigFile = undefined;\nlet _userAgent = undefined;\n/**\n * @deprecated use `globalThis` instead\n */\nexport const globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nlet nodeProcess = undefined;\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    // Native environment (sandboxed)\n    nodeProcess = globals.vscode.process;\n}\nelse if (typeof process !== 'undefined') {\n    // Native environment (non-sandboxed)\n    nodeProcess = process;\n}\nconst isElectronProcess = typeof ((_a = nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.versions) === null || _a === void 0 ? void 0 : _a.electron) === 'string';\nconst isElectronRenderer = isElectronProcess && (nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.type) === 'renderer';\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n    _userAgent = navigator.userAgent;\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n    _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\n    _isMobile = (_userAgent === null || _userAgent === void 0 ? void 0 : _userAgent.indexOf('Mobi')) >= 0;\n    _isWeb = true;\n    const configuredLocale = nls.getConfiguredDefaultLocale(\n    // This call _must_ be done in the file that calls `nls.getConfiguredDefaultLocale`\n    // to ensure that the NLS AMD Loader plugin has been loaded and configured.\n    // This is because the loader plugin decides what the default locale is based on\n    // how it's able to resolve the strings.\n    nls.localize({ key: 'ensureLoaderPluginIsLoaded', comment: ['{Locked}'] }, '_'));\n    _locale = configuredLocale || LANGUAGE_DEFAULT;\n    _language = _locale;\n}\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n    _isWindows = (nodeProcess.platform === 'win32');\n    _isMacintosh = (nodeProcess.platform === 'darwin');\n    _isLinux = (nodeProcess.platform === 'linux');\n    _isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n    _isElectron = isElectronProcess;\n    _isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            const nlsConfig = JSON.parse(rawNlsConfig);\n            const resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\n// Unknown environment\nelse {\n    console.error('Unable to resolve platform.');\n}\nlet _platform = 0 /* Platform.Web */;\nif (_isMacintosh) {\n    _platform = 1 /* Platform.Mac */;\n}\nelse if (_isWindows) {\n    _platform = 3 /* Platform.Windows */;\n}\nelse if (_isLinux) {\n    _platform = 2 /* Platform.Linux */;\n}\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isWebWorker = (_isWeb && typeof globals.importScripts === 'function');\nexport const isIOS = _isIOS;\nexport const isMobile = _isMobile;\nexport const userAgent = _userAgent;\n/**\n * The language used for the user interface. or the locale specified by --locale\n * The format of the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\nexport const setTimeout0IsFaster = (typeof globals.postMessage === 'function' && !globals.importScripts);\n/**\n * See https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#:~:text=than%204%2C%20then-,set%20timeout%20to%204,-.\n *\n * Works similarly to `setTimeout(0)` but doesn't suffer from the 4ms artificial delay\n * that browsers set when the nesting level is > 5.\n */\nexport const setTimeout0 = (() => {\n    if (setTimeout0IsFaster) {\n        const pending = [];\n        globals.addEventListener('message', (e) => {\n            if (e.data && e.data.vscodeScheduleAsyncWork) {\n                for (let i = 0, len = pending.length; i < len; i++) {\n                    const candidate = pending[i];\n                    if (candidate.id === e.data.vscodeScheduleAsyncWork) {\n                        pending.splice(i, 1);\n                        candidate.callback();\n                        return;\n                    }\n                }\n            }\n        });\n        let lastId = 0;\n        return (callback) => {\n            const myId = ++lastId;\n            pending.push({\n                id: myId,\n                callback: callback\n            });\n            globals.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n        };\n    }\n    return (callback) => setTimeout(callback);\n})();\nexport const OS = (_isMacintosh || _isIOS ? 2 /* OperatingSystem.Macintosh */ : (_isWindows ? 1 /* OperatingSystem.Windows */ : 3 /* OperatingSystem.Linux */));\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian() {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = new Uint8Array(2);\n        test[0] = 1;\n        test[1] = 2;\n        const view = new Uint16Array(test.buffer);\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\nexport const isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nexport const isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nexport const isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nexport const isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nexport const isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var Range;\n(function (Range) {\n    /**\n     * Returns the intersection between two ranges as a range itself.\n     * Returns `{ start: 0, end: 0 }` if the intersection is empty.\n     */\n    function intersect(one, other) {\n        if (one.start >= other.end || other.start >= one.end) {\n            return { start: 0, end: 0 };\n        }\n        const start = Math.max(one.start, other.start);\n        const end = Math.min(one.end, other.end);\n        if (end - start <= 0) {\n            return { start: 0, end: 0 };\n        }\n        return { start, end };\n    }\n    Range.intersect = intersect;\n    function isEmpty(range) {\n        return range.end - range.start <= 0;\n    }\n    Range.isEmpty = isEmpty;\n    function intersects(one, other) {\n        return !isEmpty(intersect(one, other));\n    }\n    Range.intersects = intersects;\n    function relativeComplement(one, other) {\n        const result = [];\n        const first = { start: one.start, end: Math.min(other.start, one.end) };\n        const second = { start: Math.max(other.end, one.start), end: one.end };\n        if (!isEmpty(first)) {\n            result.push(first);\n        }\n        if (!isEmpty(second)) {\n            result.push(second);\n        }\n        return result;\n    }\n    Range.relativeComplement = relativeComplement;\n})(Range || (Range = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as extpath from './extpath.js';\nimport { Schemas } from './network.js';\nimport * as paths from './path.js';\nimport { isLinux, isWindows } from './platform.js';\nimport { compare as strCompare, equalsIgnoreCase } from './strings.js';\nimport { URI, uriToFsPath } from './uri.js';\nexport function originalFSPath(uri) {\n    return uriToFsPath(uri, true);\n}\nexport class ExtUri {\n    constructor(_ignorePathCasing) {\n        this._ignorePathCasing = _ignorePathCasing;\n    }\n    compare(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return 0;\n        }\n        return strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n    }\n    isEqual(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return true;\n        }\n        if (!uri1 || !uri2) {\n            return false;\n        }\n        return this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n    }\n    getComparisonKey(uri, ignoreFragment = false) {\n        return uri.with({\n            path: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n            fragment: ignoreFragment ? null : undefined\n        }).toString();\n    }\n    isEqualOrParent(base, parentCandidate, ignoreFragment = false) {\n        if (base.scheme === parentCandidate.scheme) {\n            if (base.scheme === Schemas.file) {\n                return extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n            if (isEqualAuthority(base.authority, parentCandidate.authority)) {\n                return extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n        }\n        return false;\n    }\n    // --- path math\n    joinPath(resource, ...pathFragment) {\n        return URI.joinPath(resource, ...pathFragment);\n    }\n    basenameOrAuthority(resource) {\n        return basename(resource) || resource.authority;\n    }\n    basename(resource) {\n        return paths.posix.basename(resource.path);\n    }\n    extname(resource) {\n        return paths.posix.extname(resource.path);\n    }\n    dirname(resource) {\n        if (resource.path.length === 0) {\n            return resource;\n        }\n        let dirname;\n        if (resource.scheme === Schemas.file) {\n            dirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n        }\n        else {\n            dirname = paths.posix.dirname(resource.path);\n            if (resource.authority && dirname.length && dirname.charCodeAt(0) !== 47 /* CharCode.Slash */) {\n                console.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n                dirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n            }\n        }\n        return resource.with({\n            path: dirname\n        });\n    }\n    normalizePath(resource) {\n        if (!resource.path.length) {\n            return resource;\n        }\n        let normalizedPath;\n        if (resource.scheme === Schemas.file) {\n            normalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n        }\n        else {\n            normalizedPath = paths.posix.normalize(resource.path);\n        }\n        return resource.with({\n            path: normalizedPath\n        });\n    }\n    relativePath(from, to) {\n        if (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n            return undefined;\n        }\n        if (from.scheme === Schemas.file) {\n            const relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n            return isWindows ? extpath.toSlashes(relativePath) : relativePath;\n        }\n        let fromPath = from.path || '/';\n        const toPath = to.path || '/';\n        if (this._ignorePathCasing(from)) {\n            // make casing of fromPath match toPath\n            let i = 0;\n            for (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n                if (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n                    if (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n                        break;\n                    }\n                }\n            }\n            fromPath = toPath.substr(0, i) + fromPath.substr(i);\n        }\n        return paths.posix.relative(fromPath, toPath);\n    }\n    resolvePath(base, path) {\n        if (base.scheme === Schemas.file) {\n            const newURI = URI.file(paths.resolve(originalFSPath(base), path));\n            return base.with({\n                authority: newURI.authority,\n                path: newURI.path\n            });\n        }\n        path = extpath.toPosixPath(path); // we allow path to be a windows path\n        return base.with({\n            path: paths.posix.resolve(base.path, path)\n        });\n    }\n    // --- misc\n    isAbsolutePath(resource) {\n        return !!resource.path && resource.path[0] === '/';\n    }\n    isEqualAuthority(a1, a2) {\n        return a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n    }\n    hasTrailingPathSeparator(resource, sep = paths.sep) {\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            return fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n        }\n        else {\n            const p = resource.path;\n            return (p.length > 1 && p.charCodeAt(p.length - 1) === 47 /* CharCode.Slash */) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n        }\n    }\n    removeTrailingPathSeparator(resource, sep = paths.sep) {\n        // Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n        if (hasTrailingPathSeparator(resource, sep)) {\n            return resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n        }\n        return resource;\n    }\n    addTrailingPathSeparator(resource, sep = paths.sep) {\n        let isRootSep = false;\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            isRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n        }\n        else {\n            sep = '/';\n            const p = resource.path;\n            isRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === 47 /* CharCode.Slash */;\n        }\n        if (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n            return resource.with({ path: resource.path + '/' });\n        }\n        return resource;\n    }\n}\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n    // A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n    // Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n    return uri.scheme === Schemas.file ? !isLinux : true;\n});\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n/**\n * Data URI related helpers.\n */\nexport var DataUri;\n(function (DataUri) {\n    DataUri.META_DATA_LABEL = 'label';\n    DataUri.META_DATA_DESCRIPTION = 'description';\n    DataUri.META_DATA_SIZE = 'size';\n    DataUri.META_DATA_MIME = 'mime';\n    function parseMetaData(dataUri) {\n        const metadata = new Map();\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n        // the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n        const meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n        meta.split(';').forEach(property => {\n            const [key, value] = property.split(':');\n            if (key && value) {\n                metadata.set(key, value);\n            }\n        });\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n        // the mime is: image/png\n        const mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n        if (mime) {\n            metadata.set(DataUri.META_DATA_MIME, mime);\n        }\n        return metadata;\n    }\n    DataUri.parseMetaData = parseMetaData;\n})(DataUri || (DataUri = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from './event.js';\nimport { Disposable } from './lifecycle.js';\nexport class ScrollState {\n    constructor(_forceIntegerValues, width, scrollWidth, scrollLeft, height, scrollHeight, scrollTop) {\n        this._forceIntegerValues = _forceIntegerValues;\n        this._scrollStateBrand = undefined;\n        if (this._forceIntegerValues) {\n            width = width | 0;\n            scrollWidth = scrollWidth | 0;\n            scrollLeft = scrollLeft | 0;\n            height = height | 0;\n            scrollHeight = scrollHeight | 0;\n            scrollTop = scrollTop | 0;\n        }\n        this.rawScrollLeft = scrollLeft; // before validation\n        this.rawScrollTop = scrollTop; // before validation\n        if (width < 0) {\n            width = 0;\n        }\n        if (scrollLeft + width > scrollWidth) {\n            scrollLeft = scrollWidth - width;\n        }\n        if (scrollLeft < 0) {\n            scrollLeft = 0;\n        }\n        if (height < 0) {\n            height = 0;\n        }\n        if (scrollTop + height > scrollHeight) {\n            scrollTop = scrollHeight - height;\n        }\n        if (scrollTop < 0) {\n            scrollTop = 0;\n        }\n        this.width = width;\n        this.scrollWidth = scrollWidth;\n        this.scrollLeft = scrollLeft;\n        this.height = height;\n        this.scrollHeight = scrollHeight;\n        this.scrollTop = scrollTop;\n    }\n    equals(other) {\n        return (this.rawScrollLeft === other.rawScrollLeft\n            && this.rawScrollTop === other.rawScrollTop\n            && this.width === other.width\n            && this.scrollWidth === other.scrollWidth\n            && this.scrollLeft === other.scrollLeft\n            && this.height === other.height\n            && this.scrollHeight === other.scrollHeight\n            && this.scrollTop === other.scrollTop);\n    }\n    withScrollDimensions(update, useRawScrollPositions) {\n        return new ScrollState(this._forceIntegerValues, (typeof update.width !== 'undefined' ? update.width : this.width), (typeof update.scrollWidth !== 'undefined' ? update.scrollWidth : this.scrollWidth), useRawScrollPositions ? this.rawScrollLeft : this.scrollLeft, (typeof update.height !== 'undefined' ? update.height : this.height), (typeof update.scrollHeight !== 'undefined' ? update.scrollHeight : this.scrollHeight), useRawScrollPositions ? this.rawScrollTop : this.scrollTop);\n    }\n    withScrollPosition(update) {\n        return new ScrollState(this._forceIntegerValues, this.width, this.scrollWidth, (typeof update.scrollLeft !== 'undefined' ? update.scrollLeft : this.rawScrollLeft), this.height, this.scrollHeight, (typeof update.scrollTop !== 'undefined' ? update.scrollTop : this.rawScrollTop));\n    }\n    createScrollEvent(previous, inSmoothScrolling) {\n        const widthChanged = (this.width !== previous.width);\n        const scrollWidthChanged = (this.scrollWidth !== previous.scrollWidth);\n        const scrollLeftChanged = (this.scrollLeft !== previous.scrollLeft);\n        const heightChanged = (this.height !== previous.height);\n        const scrollHeightChanged = (this.scrollHeight !== previous.scrollHeight);\n        const scrollTopChanged = (this.scrollTop !== previous.scrollTop);\n        return {\n            inSmoothScrolling: inSmoothScrolling,\n            oldWidth: previous.width,\n            oldScrollWidth: previous.scrollWidth,\n            oldScrollLeft: previous.scrollLeft,\n            width: this.width,\n            scrollWidth: this.scrollWidth,\n            scrollLeft: this.scrollLeft,\n            oldHeight: previous.height,\n            oldScrollHeight: previous.scrollHeight,\n            oldScrollTop: previous.scrollTop,\n            height: this.height,\n            scrollHeight: this.scrollHeight,\n            scrollTop: this.scrollTop,\n            widthChanged: widthChanged,\n            scrollWidthChanged: scrollWidthChanged,\n            scrollLeftChanged: scrollLeftChanged,\n            heightChanged: heightChanged,\n            scrollHeightChanged: scrollHeightChanged,\n            scrollTopChanged: scrollTopChanged,\n        };\n    }\n}\nexport class Scrollable extends Disposable {\n    constructor(options) {\n        super();\n        this._scrollableBrand = undefined;\n        this._onScroll = this._register(new Emitter());\n        this.onScroll = this._onScroll.event;\n        this._smoothScrollDuration = options.smoothScrollDuration;\n        this._scheduleAtNextAnimationFrame = options.scheduleAtNextAnimationFrame;\n        this._state = new ScrollState(options.forceIntegerValues, 0, 0, 0, 0, 0, 0);\n        this._smoothScrolling = null;\n    }\n    dispose() {\n        if (this._smoothScrolling) {\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = null;\n        }\n        super.dispose();\n    }\n    setSmoothScrollDuration(smoothScrollDuration) {\n        this._smoothScrollDuration = smoothScrollDuration;\n    }\n    validateScrollPosition(scrollPosition) {\n        return this._state.withScrollPosition(scrollPosition);\n    }\n    getScrollDimensions() {\n        return this._state;\n    }\n    setScrollDimensions(dimensions, useRawScrollPositions) {\n        var _a;\n        const newState = this._state.withScrollDimensions(dimensions, useRawScrollPositions);\n        this._setState(newState, Boolean(this._smoothScrolling));\n        // Validate outstanding animated scroll position target\n        (_a = this._smoothScrolling) === null || _a === void 0 ? void 0 : _a.acceptScrollDimensions(this._state);\n    }\n    /**\n     * Returns the final scroll position that the instance will have once the smooth scroll animation concludes.\n     * If no scroll animation is occurring, it will return the current scroll position instead.\n     */\n    getFutureScrollPosition() {\n        if (this._smoothScrolling) {\n            return this._smoothScrolling.to;\n        }\n        return this._state;\n    }\n    /**\n     * Returns the current scroll position.\n     * Note: This result might be an intermediate scroll position, as there might be an ongoing smooth scroll animation.\n     */\n    getCurrentScrollPosition() {\n        return this._state;\n    }\n    setScrollPositionNow(update) {\n        // no smooth scrolling requested\n        const newState = this._state.withScrollPosition(update);\n        // Terminate any outstanding smooth scrolling\n        if (this._smoothScrolling) {\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = null;\n        }\n        this._setState(newState, false);\n    }\n    setScrollPositionSmooth(update, reuseAnimation) {\n        if (this._smoothScrollDuration === 0) {\n            // Smooth scrolling not supported.\n            return this.setScrollPositionNow(update);\n        }\n        if (this._smoothScrolling) {\n            // Combine our pending scrollLeft/scrollTop with incoming scrollLeft/scrollTop\n            update = {\n                scrollLeft: (typeof update.scrollLeft === 'undefined' ? this._smoothScrolling.to.scrollLeft : update.scrollLeft),\n                scrollTop: (typeof update.scrollTop === 'undefined' ? this._smoothScrolling.to.scrollTop : update.scrollTop)\n            };\n            // Validate `update`\n            const validTarget = this._state.withScrollPosition(update);\n            if (this._smoothScrolling.to.scrollLeft === validTarget.scrollLeft && this._smoothScrolling.to.scrollTop === validTarget.scrollTop) {\n                // No need to interrupt or extend the current animation since we're going to the same place\n                return;\n            }\n            let newSmoothScrolling;\n            if (reuseAnimation) {\n                newSmoothScrolling = new SmoothScrollingOperation(this._smoothScrolling.from, validTarget, this._smoothScrolling.startTime, this._smoothScrolling.duration);\n            }\n            else {\n                newSmoothScrolling = this._smoothScrolling.combine(this._state, validTarget, this._smoothScrollDuration);\n            }\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = newSmoothScrolling;\n        }\n        else {\n            // Validate `update`\n            const validTarget = this._state.withScrollPosition(update);\n            this._smoothScrolling = SmoothScrollingOperation.start(this._state, validTarget, this._smoothScrollDuration);\n        }\n        // Begin smooth scrolling animation\n        this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(() => {\n            if (!this._smoothScrolling) {\n                return;\n            }\n            this._smoothScrolling.animationFrameDisposable = null;\n            this._performSmoothScrolling();\n        });\n    }\n    _performSmoothScrolling() {\n        if (!this._smoothScrolling) {\n            return;\n        }\n        const update = this._smoothScrolling.tick();\n        const newState = this._state.withScrollPosition(update);\n        this._setState(newState, true);\n        if (!this._smoothScrolling) {\n            // Looks like someone canceled the smooth scrolling\n            // from the scroll event handler\n            return;\n        }\n        if (update.isDone) {\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = null;\n            return;\n        }\n        // Continue smooth scrolling animation\n        this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(() => {\n            if (!this._smoothScrolling) {\n                return;\n            }\n            this._smoothScrolling.animationFrameDisposable = null;\n            this._performSmoothScrolling();\n        });\n    }\n    _setState(newState, inSmoothScrolling) {\n        const oldState = this._state;\n        if (oldState.equals(newState)) {\n            // no change\n            return;\n        }\n        this._state = newState;\n        this._onScroll.fire(this._state.createScrollEvent(oldState, inSmoothScrolling));\n    }\n}\nexport class SmoothScrollingUpdate {\n    constructor(scrollLeft, scrollTop, isDone) {\n        this.scrollLeft = scrollLeft;\n        this.scrollTop = scrollTop;\n        this.isDone = isDone;\n    }\n}\nfunction createEaseOutCubic(from, to) {\n    const delta = to - from;\n    return function (completion) {\n        return from + delta * easeOutCubic(completion);\n    };\n}\nfunction createComposed(a, b, cut) {\n    return function (completion) {\n        if (completion < cut) {\n            return a(completion / cut);\n        }\n        return b((completion - cut) / (1 - cut));\n    };\n}\nexport class SmoothScrollingOperation {\n    constructor(from, to, startTime, duration) {\n        this.from = from;\n        this.to = to;\n        this.duration = duration;\n        this.startTime = startTime;\n        this.animationFrameDisposable = null;\n        this._initAnimations();\n    }\n    _initAnimations() {\n        this.scrollLeft = this._initAnimation(this.from.scrollLeft, this.to.scrollLeft, this.to.width);\n        this.scrollTop = this._initAnimation(this.from.scrollTop, this.to.scrollTop, this.to.height);\n    }\n    _initAnimation(from, to, viewportSize) {\n        const delta = Math.abs(from - to);\n        if (delta > 2.5 * viewportSize) {\n            let stop1, stop2;\n            if (from < to) {\n                // scroll to 75% of the viewportSize\n                stop1 = from + 0.75 * viewportSize;\n                stop2 = to - 0.75 * viewportSize;\n            }\n            else {\n                stop1 = from - 0.75 * viewportSize;\n                stop2 = to + 0.75 * viewportSize;\n            }\n            return createComposed(createEaseOutCubic(from, stop1), createEaseOutCubic(stop2, to), 0.33);\n        }\n        return createEaseOutCubic(from, to);\n    }\n    dispose() {\n        if (this.animationFrameDisposable !== null) {\n            this.animationFrameDisposable.dispose();\n            this.animationFrameDisposable = null;\n        }\n    }\n    acceptScrollDimensions(state) {\n        this.to = state.withScrollPosition(this.to);\n        this._initAnimations();\n    }\n    tick() {\n        return this._tick(Date.now());\n    }\n    _tick(now) {\n        const completion = (now - this.startTime) / this.duration;\n        if (completion < 1) {\n            const newScrollLeft = this.scrollLeft(completion);\n            const newScrollTop = this.scrollTop(completion);\n            return new SmoothScrollingUpdate(newScrollLeft, newScrollTop, false);\n        }\n        return new SmoothScrollingUpdate(this.to.scrollLeft, this.to.scrollTop, true);\n    }\n    combine(from, to, duration) {\n        return SmoothScrollingOperation.start(from, to, duration);\n    }\n    static start(from, to, duration) {\n        // +10 / -10 : pretend the animation already started for a quicker response to a scroll request\n        duration = duration + 10;\n        const startTime = Date.now() - 10;\n        return new SmoothScrollingOperation(from, to, startTime, duration);\n    }\n}\nfunction easeInCubic(t) {\n    return Math.pow(t, 3);\n}\nfunction easeOutCubic(t) {\n    return 1 - easeInCubic(1 - t);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\nexport function buildReplaceStringWithCasePreserved(matches, pattern) {\n    if (matches && (matches[0] !== '')) {\n        const containsHyphens = validateSpecificSpecialCharacter(matches, pattern, '-');\n        const containsUnderscores = validateSpecificSpecialCharacter(matches, pattern, '_');\n        if (containsHyphens && !containsUnderscores) {\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '-');\n        }\n        else if (!containsHyphens && containsUnderscores) {\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '_');\n        }\n        if (matches[0].toUpperCase() === matches[0]) {\n            return pattern.toUpperCase();\n        }\n        else if (matches[0].toLowerCase() === matches[0]) {\n            return pattern.toLowerCase();\n        }\n        else if (strings.containsUppercaseCharacter(matches[0][0]) && pattern.length > 0) {\n            return pattern[0].toUpperCase() + pattern.substr(1);\n        }\n        else if (matches[0][0].toUpperCase() !== matches[0][0] && pattern.length > 0) {\n            return pattern[0].toLowerCase() + pattern.substr(1);\n        }\n        else {\n            // we don't understand its pattern yet.\n            return pattern;\n        }\n    }\n    else {\n        return pattern;\n    }\n}\nfunction validateSpecificSpecialCharacter(matches, pattern, specialCharacter) {\n    const doesContainSpecialCharacter = matches[0].indexOf(specialCharacter) !== -1 && pattern.indexOf(specialCharacter) !== -1;\n    return doesContainSpecialCharacter && matches[0].split(specialCharacter).length === pattern.split(specialCharacter).length;\n}\nfunction buildReplaceStringForSpecificSpecialCharacter(matches, pattern, specialCharacter) {\n    const splitPatternAtSpecialCharacter = pattern.split(specialCharacter);\n    const splitMatchAtSpecialCharacter = matches[0].split(specialCharacter);\n    let replaceString = '';\n    splitPatternAtSpecialCharacter.forEach((splitValue, index) => {\n        replaceString += buildReplaceStringWithCasePreserved([splitMatchAtSpecialCharacter[index]], splitValue) + specialCharacter;\n    });\n    return replaceString.slice(0, -1);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\nvar Severity;\n(function (Severity) {\n    Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\n    Severity[Severity[\"Info\"] = 1] = \"Info\";\n    Severity[Severity[\"Warning\"] = 2] = \"Warning\";\n    Severity[Severity[\"Error\"] = 3] = \"Error\";\n})(Severity || (Severity = {}));\n(function (Severity) {\n    const _error = 'error';\n    const _warning = 'warning';\n    const _warn = 'warn';\n    const _info = 'info';\n    const _ignore = 'ignore';\n    /**\n     * Parses 'error', 'warning', 'warn', 'info' in call casings\n     * and falls back to ignore.\n     */\n    function fromValue(value) {\n        if (!value) {\n            return Severity.Ignore;\n        }\n        if (strings.equalsIgnoreCase(_error, value)) {\n            return Severity.Error;\n        }\n        if (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n            return Severity.Warning;\n        }\n        if (strings.equalsIgnoreCase(_info, value)) {\n            return Severity.Info;\n        }\n        return Severity.Ignore;\n    }\n    Severity.fromValue = fromValue;\n    function toString(severity) {\n        switch (severity) {\n            case Severity.Error: return _error;\n            case Severity.Warning: return _warning;\n            case Severity.Info: return _info;\n            default: return _ignore;\n        }\n    }\n    Severity.toString = toString;\n})(Severity || (Severity = {}));\nexport default Severity;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals } from './platform.js';\nconst hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\nexport class StopWatch {\n    static create(highResolution = true) {\n        return new StopWatch(highResolution);\n    }\n    constructor(highResolution) {\n        this._highResolution = hasPerformanceNow && highResolution;\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    stop() {\n        this._stopTime = this._now();\n    }\n    elapsed() {\n        if (this._stopTime !== -1) {\n            return this._stopTime - this._startTime;\n        }\n        return this._now() - this._startTime;\n    }\n    _now() {\n        return this._highResolution ? globals.performance.now() : Date.now();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nimport { LRUCachedFunction } from './cache.js';\nimport { Lazy } from './lazy.js';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value, ...args) {\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        const idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle = ' ') {\n    const trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    let offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    let offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\nexport function createRegExp(searchString, isRegex, options = {}) {\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    let modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    const match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function regExpFlags(regexp) {\n    return (regexp.global ? 'g' : '')\n        + (regexp.ignoreCase ? 'i' : '')\n        + (regexp.multiline ? 'm' : '')\n        + (regexp /* standalone editor compilation */.unicode ? 'u' : '');\n}\nexport function splitLines(str) {\n    return str.split(/\\r\\n|\\r|\\n/);\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start = 0, end = str.length) {\n    for (let i = start; i < end; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n    for (let i = startIndex; i >= 0; i--) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        const codeA = a.charCodeAt(aStart);\n        const codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        }\n        else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function compareIgnoreCase(a, b) {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nexport function compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n        if (codeA >= 128 || codeB >= 128) {\n            // not ASCII letters -> fallback to lower-casing strings\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n        // mapper lower-case ascii letter onto upper-case varinats\n        // [97-122] (lower ascii) --> [65-90] (upper ascii)\n        if (isLowerAsciiLetter(codeA)) {\n            codeA -= 32;\n        }\n        if (isLowerAsciiLetter(codeB)) {\n            codeB -= 32;\n        }\n        // compare both code points\n        const diff = codeA - codeB;\n        if (diff === 0) {\n            continue;\n        }\n        return diff;\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function isAsciiDigit(code) {\n    return code >= 48 /* CharCode.Digit0 */ && code <= 57 /* CharCode.Digit9 */;\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* CharCode.a */ && code <= 122 /* CharCode.z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */;\n}\nexport function equalsIgnoreCase(a, b) {\n    return a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    const aLastIndex = a.length - 1;\n    const bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str, len, offset) {\n    const charCode = str.charCodeAt(offset);\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\n        const nextCharCode = str.charCodeAt(offset + 1);\n        if (isLowSurrogate(nextCharCode)) {\n            return computeCodePoint(charCode, nextCharCode);\n        }\n    }\n    return charCode;\n}\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str, offset) {\n    const charCode = str.charCodeAt(offset - 1);\n    if (isLowSurrogate(charCode) && offset > 1) {\n        const prevCharCode = str.charCodeAt(offset - 2);\n        if (isHighSurrogate(prevCharCode)) {\n            return computeCodePoint(prevCharCode, charCode);\n        }\n    }\n    return charCode;\n}\nexport class CodePointIterator {\n    get offset() {\n        return this._offset;\n    }\n    constructor(str, offset = 0) {\n        this._str = str;\n        this._len = str.length;\n        this._offset = offset;\n    }\n    setOffset(offset) {\n        this._offset = offset;\n    }\n    prevCodePoint() {\n        const codePoint = getPrevCodePoint(this._str, this._offset);\n        this._offset -= (codePoint >= 65536 /* Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    nextCodePoint() {\n        const codePoint = getNextCodePoint(this._str, this._len, this._offset);\n        this._offset += (codePoint >= 65536 /* Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    eol() {\n        return (this._offset >= this._len);\n    }\n}\nexport class GraphemeIterator {\n    get offset() {\n        return this._iterator.offset;\n    }\n    constructor(str, offset = 0) {\n        this._iterator = new CodePointIterator(str, offset);\n    }\n    nextGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n        while (!iterator.eol()) {\n            const offset = iterator.offset;\n            const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n            if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = nextGraphemeBreakType;\n        }\n        return (iterator.offset - initialOffset);\n    }\n    prevGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n        while (iterator.offset > 0) {\n            const offset = iterator.offset;\n            const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n            if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = prevGraphemeBreakType;\n        }\n        return (initialOffset - iterator.offset);\n    }\n    eol() {\n        return this._iterator.eol();\n    }\n}\nexport function nextCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.nextGraphemeLength();\n}\nexport function prevCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.prevGraphemeLength();\n}\nexport function getCharContainingOffset(str, offset) {\n    if (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n        offset--;\n    }\n    const endOffset = offset + nextCharLength(str, offset);\n    const startOffset = endOffset - prevCharLength(str, endOffset);\n    return [startOffset, endOffset];\n}\nlet CONTAINS_RTL = undefined;\nfunction makeContainsRtl() {\n    // Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js\n    return /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n}\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    if (!CONTAINS_RTL) {\n        CONTAINS_RTL = makeContainsRtl();\n    }\n    return CONTAINS_RTL.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str) {\n    return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 - 2EFF   CJK Radicals Supplement\n    //          2F00 - 2FDF   Kangxi Radicals\n    //          2FF0 - 2FFF   Ideographic Description Characters\n    //          3000 - 303F   CJK Symbols and Punctuation\n    //          3040 - 309F   Hiragana\n    //          30A0 - 30FF   Katakana\n    //          3100 - 312F   Bopomofo\n    //          3130 - 318F   Hangul Compatibility Jamo\n    //          3190 - 319F   Kanbun\n    //          31A0 - 31BF   Bopomofo Extended\n    //          31F0 - 31FF   Katakana Phonetic Extensions\n    //          3200 - 32FF   Enclosed CJK Letters and Months\n    //          3300 - 33FF   CJK Compatibility\n    //          3400 - 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 - 4DFF   Yijing Hexagram Symbols\n    //          4E00 - 9FFF   CJK Unified Ideographs\n    //          A000 - A48F   Yi Syllables\n    //          A490 - A4CF   Yi Radicals\n    //          AC00 - D7AF   Hangul Syllables\n    // [IGNORE] D800 - DB7F   High Surrogates\n    // [IGNORE] DB80 - DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 - DFFF   Low Surrogates\n    // [IGNORE] E000 - F8FF   Private Use Area\n    //          F900 - FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 - FE0F   Variation Selectors\n    // [IGNORE] FE20 - FE2F   Combining Half Marks\n    // [IGNORE] FE30 - FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 - FE6F   Small Form Variants\n    // [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B\n    //          FF00 - FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 - FFFF   Specials\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nexport function isEmojiImprecise(x) {\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n        || (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n        || (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n        || (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n        || (x >= 129648 && x <= 129782));\n}\n// -- UTF-8 BOM\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* CharCode.UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* CharCode.UTF8_BOM */);\n}\nexport function containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n) {\n    const LETTERS_CNT = (90 /* CharCode.Z */ - 65 /* CharCode.A */ + 1);\n    n = n % (2 * LETTERS_CNT);\n    if (n < LETTERS_CNT) {\n        return String.fromCharCode(97 /* CharCode.a */ + n);\n    }\n    return String.fromCharCode(65 /* CharCode.A */ + n - LETTERS_CNT);\n}\nfunction breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n    // http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n    // !!! Let's make the common case a bit faster\n    if (breakTypeA === 0 /* GraphemeBreakType.Other */) {\n        // see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n        return (breakTypeB !== 5 /* GraphemeBreakType.Extend */ && breakTypeB !== 7 /* GraphemeBreakType.SpacingMark */);\n    }\n    // Do not break between a CR and LF. Otherwise, break before and after controls.\n    // GB3                                        CR × LF\n    // GB4                       (Control | CR | LF) ÷\n    // GB5                                           ÷ (Control | CR | LF)\n    if (breakTypeA === 2 /* GraphemeBreakType.CR */) {\n        if (breakTypeB === 3 /* GraphemeBreakType.LF */) {\n            return false; // GB3\n        }\n    }\n    if (breakTypeA === 4 /* GraphemeBreakType.Control */ || breakTypeA === 2 /* GraphemeBreakType.CR */ || breakTypeA === 3 /* GraphemeBreakType.LF */) {\n        return true; // GB4\n    }\n    if (breakTypeB === 4 /* GraphemeBreakType.Control */ || breakTypeB === 2 /* GraphemeBreakType.CR */ || breakTypeB === 3 /* GraphemeBreakType.LF */) {\n        return true; // GB5\n    }\n    // Do not break Hangul syllable sequences.\n    // GB6                                         L × (L | V | LV | LVT)\n    // GB7                                  (LV | V) × (V | T)\n    // GB8                                 (LVT | T) × T\n    if (breakTypeA === 8 /* GraphemeBreakType.L */) {\n        if (breakTypeB === 8 /* GraphemeBreakType.L */ || breakTypeB === 9 /* GraphemeBreakType.V */ || breakTypeB === 11 /* GraphemeBreakType.LV */ || breakTypeB === 12 /* GraphemeBreakType.LVT */) {\n            return false; // GB6\n        }\n    }\n    if (breakTypeA === 11 /* GraphemeBreakType.LV */ || breakTypeA === 9 /* GraphemeBreakType.V */) {\n        if (breakTypeB === 9 /* GraphemeBreakType.V */ || breakTypeB === 10 /* GraphemeBreakType.T */) {\n            return false; // GB7\n        }\n    }\n    if (breakTypeA === 12 /* GraphemeBreakType.LVT */ || breakTypeA === 10 /* GraphemeBreakType.T */) {\n        if (breakTypeB === 10 /* GraphemeBreakType.T */) {\n            return false; // GB8\n        }\n    }\n    // Do not break before extending characters or ZWJ.\n    // GB9                                           × (Extend | ZWJ)\n    if (breakTypeB === 5 /* GraphemeBreakType.Extend */ || breakTypeB === 13 /* GraphemeBreakType.ZWJ */) {\n        return false; // GB9\n    }\n    // The GB9a and GB9b rules only apply to extended grapheme clusters:\n    // Do not break before SpacingMarks, or after Prepend characters.\n    // GB9a                                          × SpacingMark\n    // GB9b                                  Prepend ×\n    if (breakTypeB === 7 /* GraphemeBreakType.SpacingMark */) {\n        return false; // GB9a\n    }\n    if (breakTypeA === 1 /* GraphemeBreakType.Prepend */) {\n        return false; // GB9b\n    }\n    // Do not break within emoji modifier sequences or emoji zwj sequences.\n    // GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n    if (breakTypeA === 13 /* GraphemeBreakType.ZWJ */ && breakTypeB === 14 /* GraphemeBreakType.Extended_Pictographic */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB11\n    }\n    // GB12                          sot (RI RI)* RI × RI\n    // GB13                        [^RI] (RI RI)* RI × RI\n    if (breakTypeA === 6 /* GraphemeBreakType.Regional_Indicator */ && breakTypeB === 6 /* GraphemeBreakType.Regional_Indicator */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB12 & GB13\n    }\n    // GB999                                     Any ÷ Any\n    return true;\n}\nclass GraphemeBreakTree {\n    static getInstance() {\n        if (!GraphemeBreakTree._INSTANCE) {\n            GraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n        }\n        return GraphemeBreakTree._INSTANCE;\n    }\n    constructor() {\n        this._data = getGraphemeBreakRawData();\n    }\n    getGraphemeBreakType(codePoint) {\n        // !!! Let's make 7bit ASCII a bit faster: 0..31\n        if (codePoint < 32) {\n            if (codePoint === 10 /* CharCode.LineFeed */) {\n                return 3 /* GraphemeBreakType.LF */;\n            }\n            if (codePoint === 13 /* CharCode.CarriageReturn */) {\n                return 2 /* GraphemeBreakType.CR */;\n            }\n            return 4 /* GraphemeBreakType.Control */;\n        }\n        // !!! Let's make 7bit ASCII a bit faster: 32..126\n        if (codePoint < 127) {\n            return 0 /* GraphemeBreakType.Other */;\n        }\n        const data = this._data;\n        const nodeCount = data.length / 3;\n        let nodeIndex = 1;\n        while (nodeIndex <= nodeCount) {\n            if (codePoint < data[3 * nodeIndex]) {\n                // go left\n                nodeIndex = 2 * nodeIndex;\n            }\n            else if (codePoint > data[3 * nodeIndex + 1]) {\n                // go right\n                nodeIndex = 2 * nodeIndex + 1;\n            }\n            else {\n                // hit\n                return data[3 * nodeIndex + 2];\n            }\n        }\n        return 0 /* GraphemeBreakType.Other */;\n    }\n}\nGraphemeBreakTree._INSTANCE = null;\nfunction getGraphemeBreakRawData() {\n    // generated using https://github.com/alexdima/unicode-utils/blob/main/grapheme-break.js\n    return JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\n//#endregion\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset, str) {\n    if (offset === 0) {\n        return 0;\n    }\n    // Try to delete emoji part.\n    const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n    if (emojiOffset !== undefined) {\n        return emojiOffset;\n    }\n    // Otherwise, just skip a single code point.\n    const iterator = new CodePointIterator(str, offset);\n    iterator.prevCodePoint();\n    return iterator.offset;\n}\nfunction getOffsetBeforeLastEmojiComponent(initialOffset, str) {\n    // See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n    // structure of emojis.\n    const iterator = new CodePointIterator(str, initialOffset);\n    let codePoint = iterator.prevCodePoint();\n    // Skip modifiers\n    while ((isEmojiModifier(codePoint) || codePoint === 65039 /* CodePoint.emojiVariantSelector */ || codePoint === 8419 /* CodePoint.enclosingKeyCap */)) {\n        if (iterator.offset === 0) {\n            // Cannot skip modifier, no preceding emoji base.\n            return undefined;\n        }\n        codePoint = iterator.prevCodePoint();\n    }\n    // Expect base emoji\n    if (!isEmojiImprecise(codePoint)) {\n        // Unexpected code point, not a valid emoji.\n        return undefined;\n    }\n    let resultOffset = iterator.offset;\n    if (resultOffset > 0) {\n        // Skip optional ZWJ code points that combine multiple emojis.\n        // In theory, we should check if that ZWJ actually combines multiple emojis\n        // to prevent deleting ZWJs in situations we didn't account for.\n        const optionalZwjCodePoint = iterator.prevCodePoint();\n        if (optionalZwjCodePoint === 8205 /* CodePoint.zwj */) {\n            resultOffset = iterator.offset;\n        }\n    }\n    return resultOffset;\n}\nfunction isEmojiModifier(codePoint) {\n    return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\nexport const noBreakWhitespace = '\\xa0';\nclass AmbiguousCharacters {\n    static getInstance(locales) {\n        return AmbiguousCharacters.cache.get(Array.from(locales));\n    }\n    static getLocales() {\n        return AmbiguousCharacters._locales.value;\n    }\n    constructor(confusableDictionary) {\n        this.confusableDictionary = confusableDictionary;\n    }\n    isAmbiguous(codePoint) {\n        return this.confusableDictionary.has(codePoint);\n    }\n    /**\n     * Returns the non basic ASCII code point that the given code point can be confused,\n     * or undefined if such code point does note exist.\n     */\n    getPrimaryConfusable(codePoint) {\n        return this.confusableDictionary.get(codePoint);\n    }\n    getConfusableCodePoints() {\n        return new Set(this.confusableDictionary.keys());\n    }\n}\n_a = AmbiguousCharacters;\nAmbiguousCharacters.ambiguousCharacterData = new Lazy(() => {\n    // Generated using https://github.com/hediet/vscode-unicode-data\n    // Stored as key1, value1, key2, value2, ...\n    return JSON.parse('{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}');\n});\nAmbiguousCharacters.cache = new LRUCachedFunction((locales) => {\n    function arrayToMap(arr) {\n        const result = new Map();\n        for (let i = 0; i < arr.length; i += 2) {\n            result.set(arr[i], arr[i + 1]);\n        }\n        return result;\n    }\n    function mergeMaps(map1, map2) {\n        const result = new Map(map1);\n        for (const [key, value] of map2) {\n            result.set(key, value);\n        }\n        return result;\n    }\n    function intersectMaps(map1, map2) {\n        if (!map1) {\n            return map2;\n        }\n        const result = new Map();\n        for (const [key, value] of map1) {\n            if (map2.has(key)) {\n                result.set(key, value);\n            }\n        }\n        return result;\n    }\n    const data = _a.ambiguousCharacterData.value;\n    let filteredLocales = locales.filter((l) => !l.startsWith('_') && l in data);\n    if (filteredLocales.length === 0) {\n        filteredLocales = ['_default'];\n    }\n    let languageSpecificMap = undefined;\n    for (const locale of filteredLocales) {\n        const map = arrayToMap(data[locale]);\n        languageSpecificMap = intersectMaps(languageSpecificMap, map);\n    }\n    const commonMap = arrayToMap(data['_common']);\n    const map = mergeMaps(commonMap, languageSpecificMap);\n    return new AmbiguousCharacters(map);\n});\nAmbiguousCharacters._locales = new Lazy(() => Object.keys(AmbiguousCharacters.ambiguousCharacterData.value).filter((k) => !k.startsWith('_')));\nexport { AmbiguousCharacters };\nclass InvisibleCharacters {\n    static getRawData() {\n        // Generated using https://github.com/hediet/vscode-unicode-data\n        return JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n    }\n    static getData() {\n        if (!this._data) {\n            this._data = new Set(InvisibleCharacters.getRawData());\n        }\n        return this._data;\n    }\n    static isInvisibleCharacter(codePoint) {\n        return InvisibleCharacters.getData().has(codePoint);\n    }\n    static get codePoints() {\n        return InvisibleCharacters.getData();\n    }\n}\nInvisibleCharacters._data = undefined;\nexport { InvisibleCharacters };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Can be passed into the Delayed to defer using a microtask\n * */\nexport const MicrotaskDelay = Symbol('MicrotaskDelay');\n","import { compare, compareIgnoreCase, compareSubstring, compareSubstringIgnoreCase } from './strings.js';\nexport class StringIterator {\n    constructor() {\n        this._value = '';\n        this._pos = 0;\n    }\n    reset(key) {\n        this._value = key;\n        this._pos = 0;\n        return this;\n    }\n    next() {\n        this._pos += 1;\n        return this;\n    }\n    hasNext() {\n        return this._pos < this._value.length - 1;\n    }\n    cmp(a) {\n        const aCode = a.charCodeAt(0);\n        const thisCode = this._value.charCodeAt(this._pos);\n        return aCode - thisCode;\n    }\n    value() {\n        return this._value[this._pos];\n    }\n}\nexport class ConfigKeysIterator {\n    constructor(_caseSensitive = true) {\n        this._caseSensitive = _caseSensitive;\n    }\n    reset(key) {\n        this._value = key;\n        this._from = 0;\n        this._to = 0;\n        return this.next();\n    }\n    hasNext() {\n        return this._to < this._value.length;\n    }\n    next() {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        let justSeps = true;\n        for (; this._to < this._value.length; this._to++) {\n            const ch = this._value.charCodeAt(this._to);\n            if (ch === 46 /* CharCode.Period */) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    }\n    cmp(a) {\n        return this._caseSensitive\n            ? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n            : compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n    }\n    value() {\n        return this._value.substring(this._from, this._to);\n    }\n}\nexport class PathIterator {\n    constructor(_splitOnBackslash = true, _caseSensitive = true) {\n        this._splitOnBackslash = _splitOnBackslash;\n        this._caseSensitive = _caseSensitive;\n    }\n    reset(key) {\n        this._from = 0;\n        this._to = 0;\n        this._value = key;\n        this._valueLen = key.length;\n        for (let pos = key.length - 1; pos >= 0; pos--, this._valueLen--) {\n            const ch = this._value.charCodeAt(pos);\n            if (!(ch === 47 /* CharCode.Slash */ || this._splitOnBackslash && ch === 92 /* CharCode.Backslash */)) {\n                break;\n            }\n        }\n        return this.next();\n    }\n    hasNext() {\n        return this._to < this._valueLen;\n    }\n    next() {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        let justSeps = true;\n        for (; this._to < this._valueLen; this._to++) {\n            const ch = this._value.charCodeAt(this._to);\n            if (ch === 47 /* CharCode.Slash */ || this._splitOnBackslash && ch === 92 /* CharCode.Backslash */) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    }\n    cmp(a) {\n        return this._caseSensitive\n            ? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n            : compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n    }\n    value() {\n        return this._value.substring(this._from, this._to);\n    }\n}\nexport class UriIterator {\n    constructor(_ignorePathCasing, _ignoreQueryAndFragment) {\n        this._ignorePathCasing = _ignorePathCasing;\n        this._ignoreQueryAndFragment = _ignoreQueryAndFragment;\n        this._states = [];\n        this._stateIdx = 0;\n    }\n    reset(key) {\n        this._value = key;\n        this._states = [];\n        if (this._value.scheme) {\n            this._states.push(1 /* UriIteratorState.Scheme */);\n        }\n        if (this._value.authority) {\n            this._states.push(2 /* UriIteratorState.Authority */);\n        }\n        if (this._value.path) {\n            this._pathIterator = new PathIterator(false, !this._ignorePathCasing(key));\n            this._pathIterator.reset(key.path);\n            if (this._pathIterator.value()) {\n                this._states.push(3 /* UriIteratorState.Path */);\n            }\n        }\n        if (!this._ignoreQueryAndFragment(key)) {\n            if (this._value.query) {\n                this._states.push(4 /* UriIteratorState.Query */);\n            }\n            if (this._value.fragment) {\n                this._states.push(5 /* UriIteratorState.Fragment */);\n            }\n        }\n        this._stateIdx = 0;\n        return this;\n    }\n    next() {\n        if (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */ && this._pathIterator.hasNext()) {\n            this._pathIterator.next();\n        }\n        else {\n            this._stateIdx += 1;\n        }\n        return this;\n    }\n    hasNext() {\n        return (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */ && this._pathIterator.hasNext())\n            || this._stateIdx < this._states.length - 1;\n    }\n    cmp(a) {\n        if (this._states[this._stateIdx] === 1 /* UriIteratorState.Scheme */) {\n            return compareIgnoreCase(a, this._value.scheme);\n        }\n        else if (this._states[this._stateIdx] === 2 /* UriIteratorState.Authority */) {\n            return compareIgnoreCase(a, this._value.authority);\n        }\n        else if (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */) {\n            return this._pathIterator.cmp(a);\n        }\n        else if (this._states[this._stateIdx] === 4 /* UriIteratorState.Query */) {\n            return compare(a, this._value.query);\n        }\n        else if (this._states[this._stateIdx] === 5 /* UriIteratorState.Fragment */) {\n            return compare(a, this._value.fragment);\n        }\n        throw new Error();\n    }\n    value() {\n        if (this._states[this._stateIdx] === 1 /* UriIteratorState.Scheme */) {\n            return this._value.scheme;\n        }\n        else if (this._states[this._stateIdx] === 2 /* UriIteratorState.Authority */) {\n            return this._value.authority;\n        }\n        else if (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */) {\n            return this._pathIterator.value();\n        }\n        else if (this._states[this._stateIdx] === 4 /* UriIteratorState.Query */) {\n            return this._value.query;\n        }\n        else if (this._states[this._stateIdx] === 5 /* UriIteratorState.Fragment */) {\n            return this._value.fragment;\n        }\n        throw new Error();\n    }\n}\nclass TernarySearchTreeNode {\n    constructor() {\n        this.height = 1;\n    }\n    rotateLeft() {\n        const tmp = this.right;\n        this.right = tmp.left;\n        tmp.left = this;\n        this.updateHeight();\n        tmp.updateHeight();\n        return tmp;\n    }\n    rotateRight() {\n        const tmp = this.left;\n        this.left = tmp.right;\n        tmp.right = this;\n        this.updateHeight();\n        tmp.updateHeight();\n        return tmp;\n    }\n    updateHeight() {\n        this.height = 1 + Math.max(this.heightLeft, this.heightRight);\n    }\n    balanceFactor() {\n        return this.heightRight - this.heightLeft;\n    }\n    get heightLeft() {\n        var _a, _b;\n        return (_b = (_a = this.left) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : 0;\n    }\n    get heightRight() {\n        var _a, _b;\n        return (_b = (_a = this.right) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : 0;\n    }\n}\nexport class TernarySearchTree {\n    static forUris(ignorePathCasing = () => false, ignoreQueryAndFragment = () => false) {\n        return new TernarySearchTree(new UriIterator(ignorePathCasing, ignoreQueryAndFragment));\n    }\n    static forStrings() {\n        return new TernarySearchTree(new StringIterator());\n    }\n    static forConfigKeys() {\n        return new TernarySearchTree(new ConfigKeysIterator());\n    }\n    constructor(segments) {\n        this._iter = segments;\n    }\n    clear() {\n        this._root = undefined;\n    }\n    set(key, element) {\n        const iter = this._iter.reset(key);\n        let node;\n        if (!this._root) {\n            this._root = new TernarySearchTreeNode();\n            this._root.segment = iter.value();\n        }\n        const stack = [];\n        // find insert_node\n        node = this._root;\n        while (true) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                if (!node.left) {\n                    node.left = new TernarySearchTreeNode();\n                    node.left.segment = iter.value();\n                }\n                stack.push([-1 /* Dir.Left */, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                if (!node.right) {\n                    node.right = new TernarySearchTreeNode();\n                    node.right.segment = iter.value();\n                }\n                stack.push([1 /* Dir.Right */, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                if (!node.mid) {\n                    node.mid = new TernarySearchTreeNode();\n                    node.mid.segment = iter.value();\n                }\n                stack.push([0 /* Dir.Mid */, node]);\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        // set value\n        const oldElement = node.value;\n        node.value = element;\n        node.key = key;\n        // balance\n        for (let i = stack.length - 1; i >= 0; i--) {\n            const node = stack[i][1];\n            node.updateHeight();\n            const bf = node.balanceFactor();\n            if (bf < -1 || bf > 1) {\n                // needs rotate\n                const d1 = stack[i][0];\n                const d2 = stack[i + 1][0];\n                if (d1 === 1 /* Dir.Right */ && d2 === 1 /* Dir.Right */) {\n                    //right, right -> rotate left\n                    stack[i][1] = node.rotateLeft();\n                }\n                else if (d1 === -1 /* Dir.Left */ && d2 === -1 /* Dir.Left */) {\n                    // left, left -> rotate right\n                    stack[i][1] = node.rotateRight();\n                }\n                else if (d1 === 1 /* Dir.Right */ && d2 === -1 /* Dir.Left */) {\n                    // right, left -> double rotate right, left\n                    node.right = stack[i + 1][1] = stack[i + 1][1].rotateRight();\n                    stack[i][1] = node.rotateLeft();\n                }\n                else if (d1 === -1 /* Dir.Left */ && d2 === 1 /* Dir.Right */) {\n                    // left, right -> double rotate left, right\n                    node.left = stack[i + 1][1] = stack[i + 1][1].rotateLeft();\n                    stack[i][1] = node.rotateRight();\n                }\n                else {\n                    throw new Error();\n                }\n                // patch path to parent\n                if (i > 0) {\n                    switch (stack[i - 1][0]) {\n                        case -1 /* Dir.Left */:\n                            stack[i - 1][1].left = stack[i][1];\n                            break;\n                        case 1 /* Dir.Right */:\n                            stack[i - 1][1].right = stack[i][1];\n                            break;\n                        case 0 /* Dir.Mid */:\n                            stack[i - 1][1].mid = stack[i][1];\n                            break;\n                    }\n                }\n                else {\n                    this._root = stack[0][1];\n                }\n            }\n        }\n        return oldElement;\n    }\n    get(key) {\n        var _a;\n        return (_a = this._getNode(key)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    _getNode(key) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node;\n    }\n    has(key) {\n        const node = this._getNode(key);\n        return !((node === null || node === void 0 ? void 0 : node.value) === undefined && (node === null || node === void 0 ? void 0 : node.mid) === undefined);\n    }\n    delete(key) {\n        return this._delete(key, false);\n    }\n    deleteSuperstr(key) {\n        return this._delete(key, true);\n    }\n    _delete(key, superStr) {\n        var _a;\n        const iter = this._iter.reset(key);\n        const stack = [];\n        let node = this._root;\n        // find node\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                stack.push([-1 /* Dir.Left */, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                stack.push([1 /* Dir.Right */, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                stack.push([0 /* Dir.Mid */, node]);\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        if (!node) {\n            // node not found\n            return;\n        }\n        if (superStr) {\n            // removing children, reset height\n            node.left = undefined;\n            node.mid = undefined;\n            node.right = undefined;\n            node.height = 1;\n        }\n        else {\n            // removing element\n            node.key = undefined;\n            node.value = undefined;\n        }\n        // BST node removal\n        if (!node.mid && !node.value) {\n            if (node.left && node.right) {\n                // full node\n                // replace deleted-node with the min-node of the right branch.\n                // If there is no true min-node leave things as they are\n                const min = this._min(node.right);\n                if (min.key) {\n                    const { key, value, segment } = min;\n                    this._delete(min.key, false);\n                    node.key = key;\n                    node.value = value;\n                    node.segment = segment;\n                }\n            }\n            else {\n                // empty or half empty\n                const newChild = (_a = node.left) !== null && _a !== void 0 ? _a : node.right;\n                if (stack.length > 0) {\n                    const [dir, parent] = stack[stack.length - 1];\n                    switch (dir) {\n                        case -1 /* Dir.Left */:\n                            parent.left = newChild;\n                            break;\n                        case 0 /* Dir.Mid */:\n                            parent.mid = newChild;\n                            break;\n                        case 1 /* Dir.Right */:\n                            parent.right = newChild;\n                            break;\n                    }\n                }\n                else {\n                    this._root = newChild;\n                }\n            }\n        }\n        // AVL balance\n        for (let i = stack.length - 1; i >= 0; i--) {\n            const node = stack[i][1];\n            node.updateHeight();\n            const bf = node.balanceFactor();\n            if (bf > 1) {\n                // right heavy\n                if (node.right.balanceFactor() >= 0) {\n                    // right, right -> rotate left\n                    stack[i][1] = node.rotateLeft();\n                }\n                else {\n                    // right, left -> double rotate\n                    node.right = node.right.rotateRight();\n                    stack[i][1] = node.rotateLeft();\n                }\n            }\n            else if (bf < -1) {\n                // left heavy\n                if (node.left.balanceFactor() <= 0) {\n                    // left, left -> rotate right\n                    stack[i][1] = node.rotateRight();\n                }\n                else {\n                    // left, right -> double rotate\n                    node.left = node.left.rotateLeft();\n                    stack[i][1] = node.rotateRight();\n                }\n            }\n            // patch path to parent\n            if (i > 0) {\n                switch (stack[i - 1][0]) {\n                    case -1 /* Dir.Left */:\n                        stack[i - 1][1].left = stack[i][1];\n                        break;\n                    case 1 /* Dir.Right */:\n                        stack[i - 1][1].right = stack[i][1];\n                        break;\n                    case 0 /* Dir.Mid */:\n                        stack[i - 1][1].mid = stack[i][1];\n                        break;\n                }\n            }\n            else {\n                this._root = stack[0][1];\n            }\n        }\n    }\n    _min(node) {\n        while (node.left) {\n            node = node.left;\n        }\n        return node;\n    }\n    findSubstr(key) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        let candidate = undefined;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                candidate = node.value || candidate;\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node && node.value || candidate;\n    }\n    findSuperstr(key) {\n        return this._findSuperstrOrElement(key, false);\n    }\n    _findSuperstrOrElement(key, allowValue) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                // collect\n                if (!node.mid) {\n                    if (allowValue) {\n                        return node.value;\n                    }\n                    else {\n                        return undefined;\n                    }\n                }\n                else {\n                    return this._entries(node.mid);\n                }\n            }\n        }\n        return undefined;\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key);\n        }\n    }\n    *[Symbol.iterator]() {\n        yield* this._entries(this._root);\n    }\n    _entries(node) {\n        const result = [];\n        this._dfsEntries(node, result);\n        return result[Symbol.iterator]();\n    }\n    _dfsEntries(node, bucket) {\n        // DFS\n        if (!node) {\n            return;\n        }\n        if (node.left) {\n            this._dfsEntries(node.left, bucket);\n        }\n        if (node.value) {\n            bucket.push([node.key, node.value]);\n        }\n        if (node.mid) {\n            this._dfsEntries(node.mid, bucket);\n        }\n        if (node.right) {\n            this._dfsEntries(node.right, bucket);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Codicon } from './codicons.js';\nexport var ThemeColor;\n(function (ThemeColor) {\n    function isThemeColor(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string';\n    }\n    ThemeColor.isThemeColor = isThemeColor;\n})(ThemeColor || (ThemeColor = {}));\nexport var ThemeIcon;\n(function (ThemeIcon) {\n    ThemeIcon.iconNameSegment = '[A-Za-z0-9]+';\n    ThemeIcon.iconNameExpression = '[A-Za-z0-9-]+';\n    ThemeIcon.iconModifierExpression = '~[A-Za-z]+';\n    ThemeIcon.iconNameCharacter = '[A-Za-z0-9~-]';\n    const ThemeIconIdRegex = new RegExp(`^(${ThemeIcon.iconNameExpression})(${ThemeIcon.iconModifierExpression})?$`);\n    function asClassNameArray(icon) {\n        const match = ThemeIconIdRegex.exec(icon.id);\n        if (!match) {\n            return asClassNameArray(Codicon.error);\n        }\n        const [, id, modifier] = match;\n        const classNames = ['codicon', 'codicon-' + id];\n        if (modifier) {\n            classNames.push('codicon-modifier-' + modifier.substring(1));\n        }\n        return classNames;\n    }\n    ThemeIcon.asClassNameArray = asClassNameArray;\n    function asClassName(icon) {\n        return asClassNameArray(icon).join(' ');\n    }\n    ThemeIcon.asClassName = asClassName;\n    function asCSSSelector(icon) {\n        return '.' + asClassNameArray(icon).join('.');\n    }\n    ThemeIcon.asCSSSelector = asCSSSelector;\n    function isThemeIcon(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string' && (typeof obj.color === 'undefined' || ThemeColor.isThemeColor(obj.color));\n    }\n    ThemeIcon.isThemeIcon = isThemeIcon;\n    const _regexFromString = new RegExp(`^\\\\$\\\\((${ThemeIcon.iconNameExpression}(?:${ThemeIcon.iconModifierExpression})?)\\\\)$`);\n    function fromString(str) {\n        const match = _regexFromString.exec(str);\n        if (!match) {\n            return undefined;\n        }\n        const [, name] = match;\n        return { id: name };\n    }\n    ThemeIcon.fromString = fromString;\n    function fromId(id) {\n        return { id };\n    }\n    ThemeIcon.fromId = fromId;\n    function modify(icon, modifier) {\n        let id = icon.id;\n        const tildeIndex = id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            id = id.substring(0, tildeIndex);\n        }\n        if (modifier) {\n            id = `${id}~${modifier}`;\n        }\n        return { id };\n    }\n    ThemeIcon.modify = modify;\n    function getModifier(icon) {\n        const tildeIndex = icon.id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            return icon.id.substring(tildeIndex + 1);\n        }\n        return undefined;\n    }\n    ThemeIcon.getModifier = getModifier;\n    function isEqual(ti1, ti2) {\n        var _a, _b;\n        return ti1.id === ti2.id && ((_a = ti1.color) === null || _a === void 0 ? void 0 : _a.id) === ((_b = ti2.color) === null || _b === void 0 ? void 0 : _b.id);\n    }\n    ThemeIcon.isEqual = isEqual;\n})(ThemeIcon || (ThemeIcon = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    return (typeof str === 'string');\n}\n/**\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * @returns whether the provided parameter is of type `Buffer` or Uint8Array dervived type\n */\nexport function isTypedArray(obj) {\n    const TypedArray = Object.getPrototypeOf(Uint8Array);\n    return typeof obj === 'object'\n        && obj instanceof TypedArray;\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return (obj === true || obj === false);\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined(arg) {\n    return !isUndefinedOrNull(arg);\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nexport function assertType(condition, type) {\n    if (!condition) {\n        throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n    }\n}\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined(arg) {\n    if (isUndefinedOrNull(arg)) {\n        throw new Error('Assertion Failed: argument is undefined or null');\n    }\n    return arg;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return (typeof obj === 'function');\n}\nexport function validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(`argument does not match constraint: typeof ${constraint}`);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n    }\n}\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined(x) {\n    return x === null ? undefined : x;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* Constants.MAX_UINT_8 */) {\n        return 255 /* Constants.MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* Constants.MAX_UINT_32 */) {\n        return 4294967295 /* Constants.MAX_UINT_32 */;\n    }\n    return v | 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as paths from './path.js';\nimport { isWindows } from './platform.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI {\n    static isUri(thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'string'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    }\n    /**\n     * @internal\n     */\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    // ---- filesystem path -----------------------\n    /**\n     * Returns a string representing the corresponding file system path of this URI.\n     * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n     * platform specific path separator.\n     *\n     * * Will *not* validate the path for invalid characters and semantics.\n     * * Will *not* look at the scheme of this URI.\n     * * The result shall *not* be used for display purposes but for accessing a file on disk.\n     *\n     *\n     * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n     * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n     *\n     * ```ts\n        const u = URI.parse('file://server/c$/folder/file.txt')\n        u.authority === 'server'\n        u.path === '/shares/c$/file.txt'\n        u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n    ```\n     *\n     * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n     * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n     * with URIs that represent files on disk (`file` scheme).\n     */\n    get fsPath() {\n        // if (this.scheme !== 'file') {\n        // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n        // }\n        return uriToFsPath(this, false);\n    }\n    // ---- modify to new -------------------------\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new Uri(scheme, authority, path, query, fragment);\n    }\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.example.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return new Uri(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new Uri(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n    }\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    static file(path) {\n        let authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new Uri('file', authority, path, _empty, _empty);\n    }\n    static from(components) {\n        const result = new Uri(components.scheme, components.authority, components.path, components.query, components.fragment);\n        _validateUri(result, true);\n        return result;\n    }\n    /**\n     * Join a URI path with path fragments and normalizes the resulting path.\n     *\n     * @param uri The input URI.\n     * @param pathFragment The path fragment to add to the URI path.\n     * @returns The resulting URI.\n     */\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw new Error(`[UriError]: cannot call joinPath on URI without path`);\n        }\n        let newPath;\n        if (isWindows && uri.scheme === 'file') {\n            newPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n        }\n        else {\n            newPath = paths.posix.join(uri.path, ...pathFragment);\n        }\n        return uri.with({ path: newPath });\n    }\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    toString(skipEncoding = false) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            const result = new Uri(data);\n            result._formatted = data.external;\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath : null;\n            return result;\n        }\n    }\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = false) {\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: 1 /* MarshalledId.Uri */\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable = {\n    [58 /* CharCode.Colon */]: '%3A',\n    [47 /* CharCode.Slash */]: '%2F',\n    [63 /* CharCode.QuestionMark */]: '%3F',\n    [35 /* CharCode.Hash */]: '%23',\n    [91 /* CharCode.OpenSquareBracket */]: '%5B',\n    [93 /* CharCode.CloseSquareBracket */]: '%5D',\n    [64 /* CharCode.AtSign */]: '%40',\n    [33 /* CharCode.ExclamationMark */]: '%21',\n    [36 /* CharCode.DollarSign */]: '%24',\n    [38 /* CharCode.Ampersand */]: '%26',\n    [39 /* CharCode.SingleQuote */]: '%27',\n    [40 /* CharCode.OpenParen */]: '%28',\n    [41 /* CharCode.CloseParen */]: '%29',\n    [42 /* CharCode.Asterisk */]: '%2A',\n    [43 /* CharCode.Plus */]: '%2B',\n    [44 /* CharCode.Comma */]: '%2C',\n    [59 /* CharCode.Semicolon */]: '%3B',\n    [61 /* CharCode.Equals */]: '%3D',\n    [32 /* CharCode.Space */]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, isPath, isAuthority) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* CharCode.a */ && code <= 122 /* CharCode.z */)\n            || (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */)\n            || (code >= 48 /* CharCode.Digit0 */ && code <= 57 /* CharCode.Digit9 */)\n            || code === 45 /* CharCode.Dash */\n            || code === 46 /* CharCode.Period */\n            || code === 95 /* CharCode.Underline */\n            || code === 126 /* CharCode.Tilde */\n            || (isPath && code === 47 /* CharCode.Slash */)\n            || (isAuthority && code === 91 /* CharCode.OpenSquareBracket */)\n            || (isAuthority && code === 93 /* CharCode.CloseSquareBracket */)\n            || (isAuthority && code === 58 /* CharCode.Colon */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === 35 /* CharCode.Hash */ || code === 63 /* CharCode.QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* CharCode.Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* CharCode.A */ && uri.path.charCodeAt(1) <= 90 /* CharCode.Z */ || uri.path.charCodeAt(1) >= 97 /* CharCode.a */ && uri.path.charCodeAt(1) <= 122 /* CharCode.z */)\n        && uri.path.charCodeAt(2) === 58 /* CharCode.Colon */) {\n        if (!keepDriveLetterCasing) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.lastIndexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false, false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false, true);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.lastIndexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false, true);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false, true);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* CharCode.Slash */ && path.charCodeAt(2) === 58 /* CharCode.Colon */) {\n            const code = path.charCodeAt(1);\n            if (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* CharCode.Colon */) {\n            const code = path.charCodeAt(0);\n            if (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true, false);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false, false) : fragment;\n    }\n    return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (_a) {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","export const generateUuid = (function () {\n    // use `randomUUID` if possible\n    if (typeof crypto === 'object' && typeof crypto.randomUUID === 'function') {\n        return crypto.randomUUID.bind(crypto);\n    }\n    // use `randomValues` if possible\n    let getRandomValues;\n    if (typeof crypto === 'object' && typeof crypto.getRandomValues === 'function') {\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    else {\n        getRandomValues = function (bucket) {\n            for (let i = 0; i < bucket.length; i++) {\n                bucket[i] = Math.floor(Math.random() * 256);\n            }\n            return bucket;\n        };\n    }\n    // prep-work\n    const _data = new Uint8Array(16);\n    const _hex = [];\n    for (let i = 0; i < 256; i++) {\n        _hex.push(i.toString(16).padStart(2, '0'));\n    }\n    return function generateUuid() {\n        // get data\n        getRandomValues(_data);\n        // set version bits\n        _data[6] = (_data[6] & 0x0f) | 0x40;\n        _data[8] = (_data[8] & 0x3f) | 0x80;\n        // print as string\n        let i = 0;\n        let result = '';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        return result;\n    };\n})();\n"],"names":["_a","_b","ResourceMapEntry","_createClass","uri","value","_classCallCheck","this","ResourceMap","_ref","mapOrKeyFn","toKey","map","Map","defaultToKey","key","resource","set","_c","get","has","size","clear","delete","clb","thisArg","bind","_step","_iterator","_createForOfIteratorHelper","s","n","done","_step$value","_slicedToArray","entry","err","e","f","_regeneratorRuntime","mark","values","_iterator2","_step2","wrap","_context","prev","next","t0","finish","stop","keys","_iterator3","_step3","_context2","entries","_iterator4","_step4","_context3","_iterator5","_step5","_step5$value","_context4","Symbol","toStringTag","iterator","toString","LinkedMap","_ref2","_map","_head","undefined","_tail","_size","_state","touch","arguments","length","item","previous","addItemLast","addItemFirst","remove","removeItem","Error","callbackfn","state","current","_iterator6","_defineProperty","result","_iterator7","_iterator8","newSize","currentSize","data","forEach","push","_step6","_iterator9","_step6$value","LRUCache","_LinkedMap","_inherits","_super","_createSuper","limit","_this","ratio","call","_limit","_ratio","Math","min","max","checkTrim","_get","_getPrototypeOf","prototype","trimOld","round","__marked_exports","define","deps","factory","global","amd","exports","_defineProperties","target","props","i","descriptor","enumerable","configurable","writable","Object","defineProperty","_arrayLikeToArray","arr","len","arr2","Array","_createForOfIteratorHelperLoose","o","allowArrayLike","it","isArray","minLen","slice","constructor","name","from","test","_unsupportedIterableToArray","TypeError","getDefaults","async","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","defaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape","html","encode","replace","unescapeTest","unescape","_","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit","regex","opt","source","obj","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl","base","href","prot","decodeURIComponent","indexOf","baseUrls","justDomain","rtrim","relativeBase","protocol","domain","resolveUrl","encodeURI","noopTest","exec","merge","hasOwnProperty","splitCells","tableRow","count","cells","match","offset","str","escaped","curr","split","trim","shift","pop","splice","c","invert","l","suffLen","currChar","checkSanitizeDeprecation","console","warn","repeatString","pattern","outputLink","cap","link","raw","lexer","title","text","inLink","token","type","tokens","inlineTokens","Tokenizer","options","_proto","space","src","rules","block","newline","code","codeBlockStyle","fences","matchIndentToCode","indentToCode","node","matchIndentInNode","join","indentCodeCompensation","lang","heading","trimmed","depth","inline","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","start","loose","items","itemRegex","trimLeft","search","nextBulletRegex","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","top","spacers","filter","t","hasMultipleLineBreaks","every","lineBreaks","pre","def","tag","table","header","align","rows","j","k","row","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","b","level","findClosingBracket","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","rDelim","rLength","lLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","_text","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","charCodeAt","random","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","create","inlineQueue","lex","lexInline","Constructor","protoProps","staticProps","lastToken","cutSrc","lastParagraphClipped","leading","tabs","repeat","some","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","error","_this2","keepPrevChar","includes","lastIndexOf","startInline","Renderer","_code","infostring","quote","_html","slugger","slug","body","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parse","parseInline","l2","l3","cell","itemBody","ret","renderers","parser","unshift","marked","callback","pending","setTimeout","onError","message","_tokens","Promise","all","then","setOptions","newDefaults","use","_len","args","_key","hasExtensions","opts","apply","concat","childTokens","pack","ext","prevRenderer","_len2","_key2","_loop","prop","_len3","_key3","_loop2","prevTokenizer","_len4","_key4","_walkTokens","_loop3","_cell","globalThis","self","JSON","revive","$mid","URI","Date","VSBuffer","Uint8Array","Mimes","freeze","binary","unknown","markdown","latex","uriList","ArrayNavigator","end","Schemas","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","file","mailto","untitled","command","vscodeRemote","vscodeRemoteResource","vscodeUserData","vscodeCustomEditor","vscodeNotebookCell","vscodeNotebookCellMetadata","vscodeNotebookCellOutput","vscodeInteractive","vscodeInteractiveInput","vscodeSettings","vscodeWorkspaceTrust","vscodeTerminal","webviewPanel","vscodeWebview","extension","vscodeFileResource","tmp","vsls","vscodeSourceControl","RemoteAuthorities","RemoteAuthoritiesImpl","_hosts","_ports","_connectionTokens","_preferredWebSchema","_delegate","_remoteResourcesPath","schema","errors","authority","host","port","connectionToken","query","encodeURIComponent","path","scheme","platform","FileAccessImpl","rewrite","FALLBACK_AUTHORITY","with","fragment","COI","FileAccess","coiHeaders","CoopAndCoep","coiSearchParamName","getHeadersFromQuery","params","URL","searchParams","addSearchParam","urlOrSearch","coop","coep","crossOriginIsolated","URLSearchParams","clamp","MovingAverage","_n","_val","SlidingWindowAverage","_values","_index","_sum","fill","oldValue","deepClone","deepFreeze","stack","_hasOwnProperty","isFrozen","isTypedArray","cloneAndChange","changer","_cloneAndChange","Set","isUndefinedOrNull","changed","r1","isObject","add","r2","i2","mixin","destination","overwrite","equals","one","other","oneKeys","sort","otherKeys","getAllMethodNames","methods","res","proto","getPrototypeOf","getOwnPropertyNames","getAllPropertyNames","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","safeProcess","globals","sandboxProcess","arch","env","cwd","process","isWindows","isMacintosh","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","ErrorInvalidArgType","_Error","expected","actual","determiner","msg","_wrapNativeSuper","validateString","platformIsWin32","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","lastSlashIndex","_format","sep","pathObject","validateObject","dir","root","win32","resolve","resolvedDevice","resolvedTail","resolvedAbsolute","rootEnd","device","isAbsolute","last","firstPart","normalize","tail","joined","arg","needsReplace","slashCount","firstLen","relative","to","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","toNamespacedPath","resolvedPath","dirname","matchedSlash","basename","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","delimiter","posix","posixCwd","regexp","trailingSeparator","hasRoot","LANGUAGE_DEFAULT","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_isMobile","_language","_userAgent","nodeProcess","isElectronProcess","versions","electron","isElectronRenderer","navigator","rawNlsConfig","nlsConfig","resolved","availableLanguages","locale","_translationsConfigFile","userAgent","maxTouchPoints","nls","comment","isLinux","isNative","isWeb","isWebWorker","importScripts","isIOS","isMobile","language","setTimeout0IsFaster","postMessage","setTimeout0","addEventListener","vscodeScheduleAsyncWork","candidate","id","lastId","myId","OS","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","view","Uint16Array","buffer","isChrome","isFirefox","isSafari","isEdge","Range","intersect","isEmpty","range","intersects","relativeComplement","first","second","originalFSPath","uriToFsPath","DataUri","ExtUri","_ignorePathCasing","uri1","uri2","ignoreFragment","strCompare","getComparisonKey","parentCandidate","extpath","isEqualAuthority","pathFragment","paths","normalizedPath","relativePath","fromPath","toPath","substr","newURI","a1","a2","equalsIgnoreCase","fsp","p","fsPath","hasTrailingPathSeparator","isRootSep","extUri","isEqual","basenameOrAuthority","isEqualOrParent","joinPath","normalizePath","resolvePath","isAbsolutePath","removeTrailingPathSeparator","addTrailingPathSeparator","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","metadata","property","_property$split","_property$split2","mime","ScrollState","_forceIntegerValues","width","scrollWidth","scrollLeft","height","scrollHeight","scrollTop","_scrollStateBrand","rawScrollLeft","rawScrollTop","update","useRawScrollPositions","inSmoothScrolling","widthChanged","scrollWidthChanged","scrollLeftChanged","heightChanged","scrollHeightChanged","scrollTopChanged","oldWidth","oldScrollWidth","oldScrollLeft","oldHeight","oldScrollHeight","oldScrollTop","Scrollable","_Disposable","_scrollableBrand","_onScroll","_register","Emitter","onScroll","event","_smoothScrollDuration","smoothScrollDuration","_scheduleAtNextAnimationFrame","scheduleAtNextAnimationFrame","forceIntegerValues","_smoothScrolling","dispose","scrollPosition","withScrollPosition","dimensions","newState","withScrollDimensions","_setState","Boolean","acceptScrollDimensions","reuseAnimation","setScrollPositionNow","newSmoothScrolling","validTarget","SmoothScrollingOperation","startTime","duration","combine","animationFrameDisposable","_performSmoothScrolling","_this3","tick","isDone","oldState","fire","createScrollEvent","Disposable","SmoothScrollingUpdate","createEaseOutCubic","delta","completion","pow","easeInCubic","_initAnimations","_initAnimation","viewportSize","stop1","stop2","a","cut","abs","_tick","now","newScrollLeft","newScrollTop","buildReplaceStringWithCasePreserved","matches","containsHyphens","validateSpecificSpecialCharacter","containsUnderscores","buildReplaceStringForSpecificSpecialCharacter","toUpperCase","strings","specialCharacter","splitPatternAtSpecialCharacter","splitMatchAtSpecialCharacter","replaceString","splitValue","Severity","_error","_warning","_info","fromValue","Warning","Info","Ignore","severity","hasPerformanceNow","StopWatch","highResolution","_highResolution","_startTime","_now","_stopTime","isFalsyOrWhitespace","_formatRegexp","group","idx","isNaN","escapeRegExpCharacters","haystack","needle","ltrim","needleLen","haystackLen","convertSimple2RegExpPattern","stripWildcards","createRegExp","searchString","isRegex","wholeWord","modifiers","matchCase","multiline","unicode","regExpLeadsToEndlessLoop","regExpFlags","ignoreCase","splitLines","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","compare","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareIgnoreCase","compareSubstringIgnoreCase","isLowerAsciiLetter","diff","isAsciiDigit","isUpperAsciiLetter","startsWithIgnoreCase","candidateLength","commonPrefixLength","commonSuffixLength","aLastIndex","bLastIndex","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","nextCharCode","CodePointIterator","_str","_offset","codePoint","prevCharCode","getPrevCodePoint","GraphemeIterator","graphemeBreakTree","GraphemeBreakTree","getInstance","initialOffset","graphemeBreakType","getGraphemeBreakType","nextCodePoint","eol","nextGraphemeBreakType","breakBetweenGraphemeBreakType","setOffset","prevCodePoint","prevGraphemeBreakType","nextCharLength","nextGraphemeLength","prevCharLength","prevGraphemeLength","getCharContainingOffset","endOffset","CONTAINS_RTL","containsRTL","IS_BASIC_ASCII","isBasicASCII","UNUSUAL_LINE_TERMINATORS","containsUnusualLineTerminators","isFullWidthCharacter","isEmojiImprecise","x","UTF8_BOM_CHARACTER","startsWithUTF8BOM","containsUppercaseCharacter","singleLetterHash","breakTypeA","breakTypeB","_data","nodeCount","nodeIndex","_INSTANCE","getLeftDeleteOffset","emojiOffset","isEmojiModifier","resultOffset","getOffsetBeforeLastEmojiComponent","noBreakWhitespace","AmbiguousCharacters","confusableDictionary","locales","cache","_locales","ambiguousCharacterData","Lazy","LRUCachedFunction","arrayToMap","intersectMaps","map1","map2","_step2$value","filteredLocales","startsWith","languageSpecificMap","mergeMaps","InvisibleCharacters","getRawData","getData","MicrotaskDelay","StringIterator","_value","_pos","ConfigKeysIterator","_caseSensitive","_from","_to","justSeps","PathIterator","_splitOnBackslash","_valueLen","pos","UriIterator","_ignoreQueryAndFragment","_states","_stateIdx","_pathIterator","reset","hasNext","cmp","TernarySearchTreeNode","right","left","updateHeight","heightLeft","heightRight","TernarySearchTree","_Symbol$iterator","segments","_iter","_root","element","iter","segment","mid","oldElement","bf","balanceFactor","d1","d2","rotateLeft","rotateRight","_getNode","_delete","superStr","_min","newChild","_stack","parent","_findSuperstrOrElement","allowValue","_entries","delegateYield","_dfsEntries","bucket","ThemeColor","ThemeIcon","isThemeColor","iconNameSegment","iconNameExpression","iconModifierExpression","iconNameCharacter","ThemeIconIdRegex","asClassNameArray","icon","Codicon","_match","modifier","classNames","asClassName","asCSSSelector","isThemeIcon","color","_regexFromString","fromString","fromId","modify","tildeIndex","getModifier","ti1","ti2","isString","TypedArray","isNumber","isIterable","isBoolean","isUndefined","isDefined","assertType","condition","assertIsDefined","isFunction","validateConstraints","constraints","validateConstraint","constraint","withNullAsUndefined","toUint8","v","toUint32","_schemePattern","_singleSlashStart","_doubleSlashStart","_validateUri","_strict","_empty","_slash","_regexp","schemeOrData","_schemeFix","_referenceResolution","change","Uri","_asFormatted","thing","percentDecode","components","newPath","_paths$win","_paths$posix","_formatted","external","_fsPath","_sep","_pathSepMarker","_URI","encodeTable","_encodeTable","encodeURIComponentFast","uriComponent","isPath","isAuthority","nativeEncodePos","encodeURIComponentMinimal","keepDriveLetterCasing","skipEncoding","encoder","userinfo","decodeURIComponentGraceful","_rEncodedAsHex","generateUuid","crypto","randomUUID","getRandomValues","floor","_hex","padStart"],"sourceRoot":""}