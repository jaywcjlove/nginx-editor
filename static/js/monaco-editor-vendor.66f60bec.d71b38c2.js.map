{"version":3,"file":"static/js/monaco-editor-vendor.66f60bec.d71b38c2.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/base/common/mime.js","../node_modules/monaco-editor/esm/vs/base/common/navigator.js","../node_modules/monaco-editor/esm/vs/base/common/network.js","../node_modules/monaco-editor/esm/vs/base/common/numbers.js","../node_modules/monaco-editor/esm/vs/base/common/objects.js","../node_modules/monaco-editor/esm/vs/base/common/observableInternal/logging.js","../node_modules/monaco-editor/esm/vs/base/common/observableInternal/base.js","../node_modules/monaco-editor/esm/vs/base/common/observableInternal/derived.js","../node_modules/monaco-editor/esm/vs/base/common/observableInternal/autorun.js","../node_modules/monaco-editor/esm/vs/base/common/observableInternal/utils.js","../node_modules/monaco-editor/esm/vs/base/common/path.js","../node_modules/monaco-editor/esm/vs/base/common/platform.js","../node_modules/monaco-editor/esm/vs/base/common/process.js","../node_modules/monaco-editor/esm/vs/base/common/range.js","../node_modules/monaco-editor/esm/vs/base/common/resources.js","../node_modules/monaco-editor/esm/vs/base/common/scrollable.js","../node_modules/monaco-editor/esm/vs/base/common/search.js","../node_modules/monaco-editor/esm/vs/base/common/severity.js","../node_modules/monaco-editor/esm/vs/base/common/stopwatch.js","../node_modules/monaco-editor/esm/vs/base/common/strings.js","../node_modules/monaco-editor/esm/vs/base/common/symbols.js","../node_modules/monaco-editor/esm/vs/base/common/ternarySearchTree.js","../node_modules/monaco-editor/esm/vs/base/common/tfIdf.js","../node_modules/monaco-editor/esm/vs/base/common/themables.js","../node_modules/monaco-editor/esm/vs/base/common/types.js","../node_modules/monaco-editor/esm/vs/base/common/uint.js","../node_modules/monaco-editor/esm/vs/base/common/uri.js","../node_modules/monaco-editor/esm/vs/base/common/uuid.js"],"sourcesContent":["export const Mimes = Object.freeze({\n    text: 'text/plain',\n    binary: 'application/octet-stream',\n    unknown: 'application/unknown',\n    markdown: 'text/markdown',\n    latex: 'text/latex',\n    uriList: 'text/uri-list',\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class ArrayNavigator {\n    constructor(items, start = 0, end = items.length, index = start - 1) {\n        this.items = items;\n        this.start = start;\n        this.end = end;\n        this.index = index;\n    }\n    current() {\n        if (this.index === this.start - 1 || this.index === this.end) {\n            return null;\n        }\n        return this.items[this.index];\n    }\n    next() {\n        this.index = Math.min(this.index + 1, this.end);\n        return this.current();\n    }\n    previous() {\n        this.index = Math.max(this.index - 1, this.start - 1);\n        return this.current();\n    }\n    first() {\n        this.index = this.start;\n        return this.current();\n    }\n    last() {\n        this.index = this.end - 1;\n        return this.current();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as errors from './errors.js';\nimport * as platform from './platform.js';\nimport { URI } from './uri.js';\nexport var Schemas;\n(function (Schemas) {\n    /**\n     * A schema that is used for models that exist in memory\n     * only and that have no correspondence on a server or such.\n     */\n    Schemas.inMemory = 'inmemory';\n    /**\n     * A schema that is used for setting files\n     */\n    Schemas.vscode = 'vscode';\n    /**\n     * A schema that is used for internal private files\n     */\n    Schemas.internal = 'private';\n    /**\n     * A walk-through document.\n     */\n    Schemas.walkThrough = 'walkThrough';\n    /**\n     * An embedded code snippet.\n     */\n    Schemas.walkThroughSnippet = 'walkThroughSnippet';\n    Schemas.http = 'http';\n    Schemas.https = 'https';\n    Schemas.file = 'file';\n    Schemas.mailto = 'mailto';\n    Schemas.untitled = 'untitled';\n    Schemas.data = 'data';\n    Schemas.command = 'command';\n    Schemas.vscodeRemote = 'vscode-remote';\n    Schemas.vscodeRemoteResource = 'vscode-remote-resource';\n    Schemas.vscodeManagedRemoteResource = 'vscode-managed-remote-resource';\n    Schemas.vscodeUserData = 'vscode-userdata';\n    Schemas.vscodeCustomEditor = 'vscode-custom-editor';\n    Schemas.vscodeNotebookCell = 'vscode-notebook-cell';\n    Schemas.vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n    Schemas.vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n    Schemas.vscodeInteractiveInput = 'vscode-interactive-input';\n    Schemas.vscodeSettings = 'vscode-settings';\n    Schemas.vscodeWorkspaceTrust = 'vscode-workspace-trust';\n    Schemas.vscodeTerminal = 'vscode-terminal';\n    Schemas.vscodeChatSesssion = 'vscode-chat-editor';\n    /**\n     * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n     */\n    Schemas.webviewPanel = 'webview-panel';\n    /**\n     * Scheme used for loading the wrapper html and script in webviews.\n     */\n    Schemas.vscodeWebview = 'vscode-webview';\n    /**\n     * Scheme used for extension pages\n     */\n    Schemas.extension = 'extension';\n    /**\n     * Scheme used as a replacement of `file` scheme to load\n     * files with our custom protocol handler (desktop only).\n     */\n    Schemas.vscodeFileResource = 'vscode-file';\n    /**\n     * Scheme used for temporary resources\n     */\n    Schemas.tmp = 'tmp';\n    /**\n     * Scheme used vs live share\n     */\n    Schemas.vsls = 'vsls';\n    /**\n     * Scheme used for the Source Control commit input's text document\n     */\n    Schemas.vscodeSourceControl = 'vscode-scm';\n})(Schemas || (Schemas = {}));\nexport const connectionTokenQueryName = 'tkn';\nclass RemoteAuthoritiesImpl {\n    constructor() {\n        this._hosts = Object.create(null);\n        this._ports = Object.create(null);\n        this._connectionTokens = Object.create(null);\n        this._preferredWebSchema = 'http';\n        this._delegate = null;\n        this._remoteResourcesPath = `/${Schemas.vscodeRemoteResource}`;\n    }\n    setPreferredWebSchema(schema) {\n        this._preferredWebSchema = schema;\n    }\n    rewrite(uri) {\n        if (this._delegate) {\n            try {\n                return this._delegate(uri);\n            }\n            catch (err) {\n                errors.onUnexpectedError(err);\n                return uri;\n            }\n        }\n        const authority = uri.authority;\n        let host = this._hosts[authority];\n        if (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n            host = `[${host}]`;\n        }\n        const port = this._ports[authority];\n        const connectionToken = this._connectionTokens[authority];\n        let query = `path=${encodeURIComponent(uri.path)}`;\n        if (typeof connectionToken === 'string') {\n            query += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n        }\n        return URI.from({\n            scheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n            authority: `${host}:${port}`,\n            path: this._remoteResourcesPath,\n            query\n        });\n    }\n}\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\nclass FileAccessImpl {\n    /**\n     * Returns a URI to use in contexts where the browser is responsible\n     * for loading (e.g. fetch()) or when used within the DOM.\n     *\n     * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n     */\n    uriToBrowserUri(uri) {\n        // Handle remote URIs via `RemoteAuthorities`\n        if (uri.scheme === Schemas.vscodeRemote) {\n            return RemoteAuthorities.rewrite(uri);\n        }\n        // Convert to `vscode-file` resource..\n        if (\n        // ...only ever for `file` resources\n        uri.scheme === Schemas.file &&\n            (\n            // ...and we run in native environments\n            platform.isNative ||\n                // ...or web worker extensions on desktop\n                (platform.isWebWorker && platform.globals.origin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`))) {\n            return uri.with({\n                scheme: Schemas.vscodeFileResource,\n                // We need to provide an authority here so that it can serve\n                // as origin for network and loading matters in chromium.\n                // If the URI is not coming with an authority already, we\n                // add our own\n                authority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n                query: null,\n                fragment: null\n            });\n        }\n        return uri;\n    }\n}\nFileAccessImpl.FALLBACK_AUTHORITY = 'vscode-app';\nexport const FileAccess = new FileAccessImpl();\nexport var COI;\n(function (COI) {\n    const coiHeaders = new Map([\n        ['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n        ['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n        ['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n    ]);\n    COI.CoopAndCoep = Object.freeze(coiHeaders.get('3'));\n    const coiSearchParamName = 'vscode-coi';\n    /**\n     * Extract desired headers from `vscode-coi` invocation\n     */\n    function getHeadersFromQuery(url) {\n        let params;\n        if (typeof url === 'string') {\n            params = new URL(url).searchParams;\n        }\n        else if (url instanceof URL) {\n            params = url.searchParams;\n        }\n        else if (URI.isUri(url)) {\n            params = new URL(url.toString(true)).searchParams;\n        }\n        const value = params === null || params === void 0 ? void 0 : params.get(coiSearchParamName);\n        if (!value) {\n            return undefined;\n        }\n        return coiHeaders.get(value);\n    }\n    COI.getHeadersFromQuery = getHeadersFromQuery;\n    /**\n     * Add the `vscode-coi` query attribute based on wanting `COOP` and `COEP`. Will be a noop when `crossOriginIsolated`\n     * isn't enabled the current context\n     */\n    function addSearchParam(urlOrSearch, coop, coep) {\n        if (!globalThis.crossOriginIsolated) {\n            // depends on the current context being COI\n            return;\n        }\n        const value = coop && coep ? '3' : coep ? '2' : '1';\n        if (urlOrSearch instanceof URLSearchParams) {\n            urlOrSearch.set(coiSearchParamName, value);\n        }\n        else {\n            urlOrSearch[coiSearchParamName] = value;\n        }\n    }\n    COI.addSearchParam = addSearchParam;\n})(COI || (COI = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\nexport class MovingAverage {\n    constructor() {\n        this._n = 1;\n        this._val = 0;\n    }\n    update(value) {\n        this._val = this._val + (value - this._val) / this._n;\n        this._n += 1;\n        return this._val;\n    }\n    get value() {\n        return this._val;\n    }\n}\nexport class SlidingWindowAverage {\n    constructor(size) {\n        this._n = 0;\n        this._val = 0;\n        this._values = [];\n        this._index = 0;\n        this._sum = 0;\n        this._values = new Array(size);\n        this._values.fill(0, 0, size);\n    }\n    update(value) {\n        const oldValue = this._values[this._index];\n        this._values[this._index] = value;\n        this._index = (this._index + 1) % this._values.length;\n        this._sum -= oldValue;\n        this._sum += value;\n        if (this._n < this._values.length) {\n            this._n += 1;\n        }\n        this._val = this._sum / this._n;\n        return this._val;\n    }\n    get value() {\n        return this._val;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isTypedArray, isObject, isUndefinedOrNull } from './types.js';\nexport function deepClone(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    if (obj instanceof RegExp) {\n        return obj;\n    }\n    const result = Array.isArray(obj) ? [] : {};\n    Object.entries(obj).forEach(([key, value]) => {\n        result[key] = value && typeof value === 'object' ? deepClone(value) : value;\n    });\n    return result;\n}\nexport function deepFreeze(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    const stack = [obj];\n    while (stack.length > 0) {\n        const obj = stack.shift();\n        Object.freeze(obj);\n        for (const key in obj) {\n            if (_hasOwnProperty.call(obj, key)) {\n                const prop = obj[key];\n                if (typeof prop === 'object' && !Object.isFrozen(prop) && !isTypedArray(prop)) {\n                    stack.push(prop);\n                }\n            }\n        }\n    }\n    return obj;\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function cloneAndChange(obj, changer) {\n    return _cloneAndChange(obj, changer, new Set());\n}\nfunction _cloneAndChange(obj, changer, seen) {\n    if (isUndefinedOrNull(obj)) {\n        return obj;\n    }\n    const changed = changer(obj);\n    if (typeof changed !== 'undefined') {\n        return changed;\n    }\n    if (Array.isArray(obj)) {\n        const r1 = [];\n        for (const e of obj) {\n            r1.push(_cloneAndChange(e, changer, seen));\n        }\n        return r1;\n    }\n    if (isObject(obj)) {\n        if (seen.has(obj)) {\n            throw new Error('Cannot clone recursive data-structure');\n        }\n        seen.add(obj);\n        const r2 = {};\n        for (const i2 in obj) {\n            if (_hasOwnProperty.call(obj, i2)) {\n                r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n            }\n        }\n        seen.delete(obj);\n        return r2;\n    }\n    return obj;\n}\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination, source, overwrite = true) {\n    if (!isObject(destination)) {\n        return source;\n    }\n    if (isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (key in destination) {\n                if (overwrite) {\n                    if (isObject(destination[key]) && isObject(source[key])) {\n                        mixin(destination[key], source[key], overwrite);\n                    }\n                    else {\n                        destination[key] = source[key];\n                    }\n                }\n            }\n            else {\n                destination[key] = source[key];\n            }\n        });\n    }\n    return destination;\n}\nexport function equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    let i;\n    let key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        const oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        const otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function getAllPropertyNames(obj) {\n    let res = [];\n    while (Object.prototype !== obj) {\n        res = res.concat(Object.getOwnPropertyNames(obj));\n        obj = Object.getPrototypeOf(obj);\n    }\n    return res;\n}\nexport function getAllMethodNames(obj) {\n    const methods = [];\n    for (const prop of getAllPropertyNames(obj)) {\n        if (typeof obj[prop] === 'function') {\n            methods.push(prop);\n        }\n    }\n    return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    const result = {};\n    for (const methodName of methodNames) {\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nlet globalObservableLogger;\nexport function setLogger(logger) {\n    globalObservableLogger = logger;\n}\nexport function getLogger() {\n    return globalObservableLogger;\n}\nexport class ConsoleObservableLogger {\n    constructor() {\n        this.indentation = 0;\n        this.changedObservablesSets = new WeakMap();\n    }\n    textToConsoleArgs(text) {\n        return consoleTextToArgs([\n            normalText(repeat('|  ', this.indentation)),\n            text,\n        ]);\n    }\n    formatInfo(info) {\n        if (!info.hadValue) {\n            return [\n                normalText(` `),\n                styled(formatValue(info.newValue, 60), {\n                    color: 'green',\n                }),\n                normalText(` (initial)`),\n            ];\n        }\n        return info.didChange\n            ? [\n                normalText(` `),\n                styled(formatValue(info.oldValue, 70), {\n                    color: 'red',\n                    strikeThrough: true,\n                }),\n                normalText(` `),\n                styled(formatValue(info.newValue, 60), {\n                    color: 'green',\n                }),\n            ]\n            : [normalText(` (unchanged)`)];\n    }\n    handleObservableChanged(observable, info) {\n        console.log(...this.textToConsoleArgs([\n            formatKind('observable value changed'),\n            styled(observable.debugName, { color: 'BlueViolet' }),\n            ...this.formatInfo(info),\n        ]));\n    }\n    formatChanges(changes) {\n        if (changes.size === 0) {\n            return undefined;\n        }\n        return styled(' (changed deps: ' +\n            [...changes].map((o) => o.debugName).join(', ') +\n            ')', { color: 'gray' });\n    }\n    handleDerivedCreated(derived) {\n        const existingHandleChange = derived.handleChange;\n        this.changedObservablesSets.set(derived, new Set());\n        derived.handleChange = (observable, change) => {\n            this.changedObservablesSets.get(derived).add(observable);\n            return existingHandleChange.apply(derived, [observable, change]);\n        };\n    }\n    handleDerivedRecomputed(derived, info) {\n        const changedObservables = this.changedObservablesSets.get(derived);\n        console.log(...this.textToConsoleArgs([\n            formatKind('derived recomputed'),\n            styled(derived.debugName, { color: 'BlueViolet' }),\n            ...this.formatInfo(info),\n            this.formatChanges(changedObservables),\n            { data: [{ fn: derived._computeFn }] }\n        ]));\n        changedObservables.clear();\n    }\n    handleFromEventObservableTriggered(observable, info) {\n        console.log(...this.textToConsoleArgs([\n            formatKind('observable from event triggered'),\n            styled(observable.debugName, { color: 'BlueViolet' }),\n            ...this.formatInfo(info),\n            { data: [{ fn: observable._getValue }] }\n        ]));\n    }\n    handleAutorunCreated(autorun) {\n        const existingHandleChange = autorun.handleChange;\n        this.changedObservablesSets.set(autorun, new Set());\n        autorun.handleChange = (observable, change) => {\n            this.changedObservablesSets.get(autorun).add(observable);\n            return existingHandleChange.apply(autorun, [observable, change]);\n        };\n    }\n    handleAutorunTriggered(autorun) {\n        const changedObservables = this.changedObservablesSets.get(autorun);\n        console.log(...this.textToConsoleArgs([\n            formatKind('autorun'),\n            styled(autorun.debugName, { color: 'BlueViolet' }),\n            this.formatChanges(changedObservables),\n            { data: [{ fn: autorun._runFn }] }\n        ]));\n        changedObservables.clear();\n        this.indentation++;\n    }\n    handleAutorunFinished(autorun) {\n        this.indentation--;\n    }\n    handleBeginTransaction(transaction) {\n        let transactionName = transaction.getDebugName();\n        if (transactionName === undefined) {\n            transactionName = '';\n        }\n        console.log(...this.textToConsoleArgs([\n            formatKind('transaction'),\n            styled(transactionName, { color: 'BlueViolet' }),\n            { data: [{ fn: transaction._fn }] }\n        ]));\n        this.indentation++;\n    }\n    handleEndTransaction() {\n        this.indentation--;\n    }\n}\nfunction consoleTextToArgs(text) {\n    const styles = new Array();\n    const data = [];\n    let firstArg = '';\n    function process(t) {\n        if ('length' in t) {\n            for (const item of t) {\n                if (item) {\n                    process(item);\n                }\n            }\n        }\n        else if ('text' in t) {\n            firstArg += `%c${t.text}`;\n            styles.push(t.style);\n            if (t.data) {\n                data.push(...t.data);\n            }\n        }\n        else if ('data' in t) {\n            data.push(...t.data);\n        }\n    }\n    process(text);\n    const result = [firstArg, ...styles];\n    result.push(...data);\n    return result;\n}\nfunction normalText(text) {\n    return styled(text, { color: 'black' });\n}\nfunction formatKind(kind) {\n    return styled(padStr(`${kind}: `, 10), { color: 'black', bold: true });\n}\nfunction styled(text, options = {\n    color: 'black',\n}) {\n    function objToCss(styleObj) {\n        return Object.entries(styleObj).reduce((styleString, [propName, propValue]) => {\n            return `${styleString}${propName}:${propValue};`;\n        }, '');\n    }\n    const style = {\n        color: options.color,\n    };\n    if (options.strikeThrough) {\n        style['text-decoration'] = 'line-through';\n    }\n    if (options.bold) {\n        style['font-weight'] = 'bold';\n    }\n    return {\n        text,\n        style: objToCss(style),\n    };\n}\nfunction formatValue(value, availableLen) {\n    switch (typeof value) {\n        case 'number':\n            return '' + value;\n        case 'string':\n            if (value.length + 2 <= availableLen) {\n                return `\"${value}\"`;\n            }\n            return `\"${value.substr(0, availableLen - 7)}\"+...`;\n        case 'boolean':\n            return value ? 'true' : 'false';\n        case 'undefined':\n            return 'undefined';\n        case 'object':\n            if (value === null) {\n                return 'null';\n            }\n            if (Array.isArray(value)) {\n                return formatArray(value, availableLen);\n            }\n            return formatObject(value, availableLen);\n        case 'symbol':\n            return value.toString();\n        case 'function':\n            return `[[Function${value.name ? ' ' + value.name : ''}]]`;\n        default:\n            return '' + value;\n    }\n}\nfunction formatArray(value, availableLen) {\n    let result = '[ ';\n    let first = true;\n    for (const val of value) {\n        if (!first) {\n            result += ', ';\n        }\n        if (result.length - 5 > availableLen) {\n            result += '...';\n            break;\n        }\n        first = false;\n        result += `${formatValue(val, availableLen - result.length)}`;\n    }\n    result += ' ]';\n    return result;\n}\nfunction formatObject(value, availableLen) {\n    let result = '{ ';\n    let first = true;\n    for (const [key, val] of Object.entries(value)) {\n        if (!first) {\n            result += ', ';\n        }\n        if (result.length - 5 > availableLen) {\n            result += '...';\n            break;\n        }\n        first = false;\n        result += `${key}: ${formatValue(val, availableLen - result.length)}`;\n    }\n    result += ' }';\n    return result;\n}\nfunction repeat(str, count) {\n    let result = '';\n    for (let i = 1; i <= count; i++) {\n        result += str;\n    }\n    return result;\n}\nfunction padStr(str, length) {\n    while (str.length < length) {\n        str += ' ';\n    }\n    return str;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getLogger } from './logging.js';\nlet _derived;\n/**\n * @internal\n * This is to allow splitting files.\n*/\nexport function _setDerivedOpts(derived) {\n    _derived = derived;\n}\nexport class ConvenientObservable {\n    get TChange() { return null; }\n    reportChanges() {\n        this.get();\n    }\n    /** @sealed */\n    read(reader) {\n        if (reader) {\n            return reader.readObservable(this);\n        }\n        else {\n            return this.get();\n        }\n    }\n    map(fnOrOwner, fnOrUndefined) {\n        const owner = fnOrUndefined === undefined ? undefined : fnOrOwner;\n        const fn = fnOrUndefined === undefined ? fnOrOwner : fnOrUndefined;\n        return _derived({\n            owner,\n            debugName: () => {\n                const name = getFunctionName(fn);\n                if (name !== undefined) {\n                    return name;\n                }\n                // regexp to match `x => x.y` where x and y can be arbitrary identifiers (uses backref):\n                const regexp = /^\\s*\\(?\\s*([a-zA-Z_$][a-zA-Z_$0-9]*)\\s*\\)?\\s*=>\\s*\\1\\.([a-zA-Z_$][a-zA-Z_$0-9]*)\\s*$/;\n                const match = regexp.exec(fn.toString());\n                if (match) {\n                    return `${this.debugName}.${match[2]}`;\n                }\n                if (!owner) {\n                    return `${this.debugName} (mapped)`;\n                }\n                return undefined;\n            },\n        }, (reader) => fn(this.read(reader), reader));\n    }\n}\nexport class BaseObservable extends ConvenientObservable {\n    constructor() {\n        super(...arguments);\n        this.observers = new Set();\n    }\n    addObserver(observer) {\n        const len = this.observers.size;\n        this.observers.add(observer);\n        if (len === 0) {\n            this.onFirstObserverAdded();\n        }\n    }\n    removeObserver(observer) {\n        const deleted = this.observers.delete(observer);\n        if (deleted && this.observers.size === 0) {\n            this.onLastObserverRemoved();\n        }\n    }\n    onFirstObserverAdded() { }\n    onLastObserverRemoved() { }\n}\nexport function transaction(fn, getDebugName) {\n    const tx = new TransactionImpl(fn, getDebugName);\n    try {\n        fn(tx);\n    }\n    finally {\n        tx.finish();\n    }\n}\nexport function subtransaction(tx, fn, getDebugName) {\n    if (!tx) {\n        transaction(fn, getDebugName);\n    }\n    else {\n        fn(tx);\n    }\n}\nexport class TransactionImpl {\n    constructor(_fn, _getDebugName) {\n        var _a;\n        this._fn = _fn;\n        this._getDebugName = _getDebugName;\n        this.updatingObservers = [];\n        (_a = getLogger()) === null || _a === void 0 ? void 0 : _a.handleBeginTransaction(this);\n    }\n    getDebugName() {\n        if (this._getDebugName) {\n            return this._getDebugName();\n        }\n        return getFunctionName(this._fn);\n    }\n    updateObserver(observer, observable) {\n        this.updatingObservers.push({ observer, observable });\n        observer.beginUpdate(observable);\n    }\n    finish() {\n        var _a;\n        const updatingObservers = this.updatingObservers;\n        // Prevent anyone from updating observers from now on.\n        this.updatingObservers = null;\n        for (const { observer, observable } of updatingObservers) {\n            observer.endUpdate(observable);\n        }\n        (_a = getLogger()) === null || _a === void 0 ? void 0 : _a.handleEndTransaction();\n    }\n}\nexport function getDebugName(debugNameFn, fn, owner, self) {\n    let result;\n    if (debugNameFn !== undefined) {\n        if (typeof debugNameFn === 'function') {\n            result = debugNameFn();\n            if (result !== undefined) {\n                return result;\n            }\n        }\n        else {\n            return debugNameFn;\n        }\n    }\n    if (fn !== undefined) {\n        result = getFunctionName(fn);\n        if (result !== undefined) {\n            return result;\n        }\n    }\n    if (owner !== undefined) {\n        for (const key in owner) {\n            if (owner[key] === self) {\n                return key;\n            }\n        }\n    }\n    return undefined;\n}\nexport function getFunctionName(fn) {\n    const fnSrc = fn.toString();\n    // Pattern: /** @description ... */\n    const regexp = /\\/\\*\\*\\s*@description\\s*([^*]*)\\*\\//;\n    const match = regexp.exec(fnSrc);\n    const result = match ? match[1] : undefined;\n    return result === null || result === void 0 ? void 0 : result.trim();\n}\nexport function observableValue(nameOrOwner, initialValue) {\n    if (typeof nameOrOwner === 'string') {\n        return new ObservableValue(undefined, nameOrOwner, initialValue);\n    }\n    else {\n        return new ObservableValue(nameOrOwner, undefined, initialValue);\n    }\n}\nexport class ObservableValue extends BaseObservable {\n    get debugName() {\n        var _a;\n        return (_a = getDebugName(this._debugName, undefined, this._owner, this)) !== null && _a !== void 0 ? _a : 'ObservableValue';\n    }\n    constructor(_owner, _debugName, initialValue) {\n        super();\n        this._owner = _owner;\n        this._debugName = _debugName;\n        this._value = initialValue;\n    }\n    get() {\n        return this._value;\n    }\n    set(value, tx, change) {\n        var _a;\n        if (this._value === value) {\n            return;\n        }\n        let _tx;\n        if (!tx) {\n            tx = _tx = new TransactionImpl(() => { }, () => `Setting ${this.debugName}`);\n        }\n        try {\n            const oldValue = this._value;\n            this._setValue(value);\n            (_a = getLogger()) === null || _a === void 0 ? void 0 : _a.handleObservableChanged(this, { oldValue, newValue: value, change, didChange: true, hadValue: true });\n            for (const observer of this.observers) {\n                tx.updateObserver(observer, this);\n                observer.handleChange(this, change);\n            }\n        }\n        finally {\n            if (_tx) {\n                _tx.finish();\n            }\n        }\n    }\n    toString() {\n        return `${this.debugName}: ${this._value}`;\n    }\n    _setValue(newValue) {\n        this._value = newValue;\n    }\n}\nexport function disposableObservableValue(nameOrOwner, initialValue) {\n    if (typeof nameOrOwner === 'string') {\n        return new DisposableObservableValue(undefined, nameOrOwner, initialValue);\n    }\n    else {\n        return new DisposableObservableValue(nameOrOwner, undefined, initialValue);\n    }\n}\nexport class DisposableObservableValue extends ObservableValue {\n    _setValue(newValue) {\n        if (this._value === newValue) {\n            return;\n        }\n        if (this._value) {\n            this._value.dispose();\n        }\n        this._value = newValue;\n    }\n    dispose() {\n        var _a;\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError } from '../errors.js';\nimport { DisposableStore } from '../lifecycle.js';\nimport { BaseObservable, _setDerivedOpts, getFunctionName, getDebugName } from './base.js';\nimport { getLogger } from './logging.js';\nconst defaultEqualityComparer = (a, b) => a === b;\nexport function derived(computeFnOrOwner, computeFn) {\n    if (computeFn !== undefined) {\n        return new Derived(computeFnOrOwner, undefined, computeFn, undefined, undefined, undefined, defaultEqualityComparer);\n    }\n    return new Derived(undefined, undefined, computeFnOrOwner, undefined, undefined, undefined, defaultEqualityComparer);\n}\nexport function derivedOpts(options, computeFn) {\n    var _a;\n    return new Derived(options.owner, options.debugName, computeFn, undefined, undefined, undefined, (_a = options.equalityComparer) !== null && _a !== void 0 ? _a : defaultEqualityComparer);\n}\nexport function derivedHandleChanges(options, computeFn) {\n    var _a;\n    return new Derived(options.owner, options.debugName, computeFn, options.createEmptyChangeSummary, options.handleChange, undefined, (_a = options.equalityComparer) !== null && _a !== void 0 ? _a : defaultEqualityComparer);\n}\nexport function derivedWithStore(computeFnOrOwner, computeFnOrUndefined) {\n    let computeFn;\n    let owner;\n    if (computeFnOrUndefined === undefined) {\n        computeFn = computeFnOrOwner;\n        owner = undefined;\n    }\n    else {\n        owner = computeFnOrOwner;\n        computeFn = computeFnOrUndefined;\n    }\n    const store = new DisposableStore();\n    return new Derived(owner, (() => { var _a; return (_a = getFunctionName(computeFn)) !== null && _a !== void 0 ? _a : '(anonymous)'; }), r => {\n        store.clear();\n        return computeFn(r, store);\n    }, undefined, undefined, () => store.dispose(), defaultEqualityComparer);\n}\n_setDerivedOpts(derived);\nexport class Derived extends BaseObservable {\n    get debugName() {\n        var _a;\n        return (_a = getDebugName(this._debugName, this._computeFn, this._owner, this)) !== null && _a !== void 0 ? _a : '(anonymous)';\n    }\n    constructor(_owner, _debugName, _computeFn, createChangeSummary, _handleChange, _handleLastObserverRemoved = undefined, _equalityComparator) {\n        var _a, _b;\n        super();\n        this._owner = _owner;\n        this._debugName = _debugName;\n        this._computeFn = _computeFn;\n        this.createChangeSummary = createChangeSummary;\n        this._handleChange = _handleChange;\n        this._handleLastObserverRemoved = _handleLastObserverRemoved;\n        this._equalityComparator = _equalityComparator;\n        this.state = 0 /* DerivedState.initial */;\n        this.value = undefined;\n        this.updateCount = 0;\n        this.dependencies = new Set();\n        this.dependenciesToBeRemoved = new Set();\n        this.changeSummary = undefined;\n        this.changeSummary = (_a = this.createChangeSummary) === null || _a === void 0 ? void 0 : _a.call(this);\n        (_b = getLogger()) === null || _b === void 0 ? void 0 : _b.handleDerivedCreated(this);\n    }\n    onLastObserverRemoved() {\n        var _a;\n        /**\n         * We are not tracking changes anymore, thus we have to assume\n         * that our cache is invalid.\n         */\n        this.state = 0 /* DerivedState.initial */;\n        this.value = undefined;\n        for (const d of this.dependencies) {\n            d.removeObserver(this);\n        }\n        this.dependencies.clear();\n        (_a = this._handleLastObserverRemoved) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n    get() {\n        var _a;\n        if (this.observers.size === 0) {\n            // Without observers, we don't know when to clean up stuff.\n            // Thus, we don't cache anything to prevent memory leaks.\n            const result = this._computeFn(this, (_a = this.createChangeSummary) === null || _a === void 0 ? void 0 : _a.call(this));\n            // Clear new dependencies\n            this.onLastObserverRemoved();\n            return result;\n        }\n        else {\n            do {\n                // We might not get a notification for a dependency that changed while it is updating,\n                // thus we also have to ask all our depedencies if they changed in this case.\n                if (this.state === 1 /* DerivedState.dependenciesMightHaveChanged */) {\n                    for (const d of this.dependencies) {\n                        /** might call {@link handleChange} indirectly, which could make us stale */\n                        d.reportChanges();\n                        if (this.state === 2 /* DerivedState.stale */) {\n                            // The other dependencies will refresh on demand, so early break\n                            break;\n                        }\n                    }\n                }\n                // We called report changes of all dependencies.\n                // If we are still not stale, we can assume to be up to date again.\n                if (this.state === 1 /* DerivedState.dependenciesMightHaveChanged */) {\n                    this.state = 3 /* DerivedState.upToDate */;\n                }\n                this._recomputeIfNeeded();\n                // In case recomputation changed one of our dependencies, we need to recompute again.\n            } while (this.state !== 3 /* DerivedState.upToDate */);\n            return this.value;\n        }\n    }\n    _recomputeIfNeeded() {\n        var _a, _b;\n        if (this.state === 3 /* DerivedState.upToDate */) {\n            return;\n        }\n        const emptySet = this.dependenciesToBeRemoved;\n        this.dependenciesToBeRemoved = this.dependencies;\n        this.dependencies = emptySet;\n        const hadValue = this.state !== 0 /* DerivedState.initial */;\n        const oldValue = this.value;\n        this.state = 3 /* DerivedState.upToDate */;\n        const changeSummary = this.changeSummary;\n        this.changeSummary = (_a = this.createChangeSummary) === null || _a === void 0 ? void 0 : _a.call(this);\n        try {\n            /** might call {@link handleChange} indirectly, which could invalidate us */\n            this.value = this._computeFn(this, changeSummary);\n        }\n        finally {\n            // We don't want our observed observables to think that they are (not even temporarily) not being observed.\n            // Thus, we only unsubscribe from observables that are definitely not read anymore.\n            for (const o of this.dependenciesToBeRemoved) {\n                o.removeObserver(this);\n            }\n            this.dependenciesToBeRemoved.clear();\n        }\n        const didChange = hadValue && !(this._equalityComparator(oldValue, this.value));\n        (_b = getLogger()) === null || _b === void 0 ? void 0 : _b.handleDerivedRecomputed(this, {\n            oldValue,\n            newValue: this.value,\n            change: undefined,\n            didChange,\n            hadValue,\n        });\n        if (didChange) {\n            for (const r of this.observers) {\n                r.handleChange(this, undefined);\n            }\n        }\n    }\n    toString() {\n        return `LazyDerived<${this.debugName}>`;\n    }\n    // IObserver Implementation\n    beginUpdate(_observable) {\n        this.updateCount++;\n        const propagateBeginUpdate = this.updateCount === 1;\n        if (this.state === 3 /* DerivedState.upToDate */) {\n            this.state = 1 /* DerivedState.dependenciesMightHaveChanged */;\n            // If we propagate begin update, that will already signal a possible change.\n            if (!propagateBeginUpdate) {\n                for (const r of this.observers) {\n                    r.handlePossibleChange(this);\n                }\n            }\n        }\n        if (propagateBeginUpdate) {\n            for (const r of this.observers) {\n                r.beginUpdate(this); // This signals a possible change\n            }\n        }\n    }\n    endUpdate(_observable) {\n        this.updateCount--;\n        if (this.updateCount === 0) {\n            // End update could change the observer list.\n            const observers = [...this.observers];\n            for (const r of observers) {\n                r.endUpdate(this);\n            }\n        }\n        if (this.updateCount < 0) {\n            throw new BugIndicatingError();\n        }\n    }\n    handlePossibleChange(observable) {\n        // In all other states, observers already know that we might have changed.\n        if (this.state === 3 /* DerivedState.upToDate */ && this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n            this.state = 1 /* DerivedState.dependenciesMightHaveChanged */;\n            for (const r of this.observers) {\n                r.handlePossibleChange(this);\n            }\n        }\n    }\n    handleChange(observable, change) {\n        if (this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n            const shouldReact = this._handleChange ? this._handleChange({\n                changedObservable: observable,\n                change,\n                didChange: o => o === observable,\n            }, this.changeSummary) : true;\n            const wasUpToDate = this.state === 3 /* DerivedState.upToDate */;\n            if (shouldReact && (this.state === 1 /* DerivedState.dependenciesMightHaveChanged */ || wasUpToDate)) {\n                this.state = 2 /* DerivedState.stale */;\n                if (wasUpToDate) {\n                    for (const r of this.observers) {\n                        r.handlePossibleChange(this);\n                    }\n                }\n            }\n        }\n    }\n    // IReader Implementation\n    readObservable(observable) {\n        // Subscribe before getting the value to enable caching\n        observable.addObserver(this);\n        /** This might call {@link handleChange} indirectly, which could invalidate us */\n        const value = observable.get();\n        // Which is why we only add the observable to the dependencies now.\n        this.dependencies.add(observable);\n        this.dependenciesToBeRemoved.delete(observable);\n        return value;\n    }\n    addObserver(observer) {\n        const shouldCallBeginUpdate = !this.observers.has(observer) && this.updateCount > 0;\n        super.addObserver(observer);\n        if (shouldCallBeginUpdate) {\n            observer.beginUpdate(this);\n        }\n    }\n    removeObserver(observer) {\n        const shouldCallEndUpdate = this.observers.has(observer) && this.updateCount > 0;\n        super.removeObserver(observer);\n        if (shouldCallEndUpdate) {\n            // Calling end update after removing the observer makes sure endUpdate cannot be called twice here.\n            observer.endUpdate(this);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { assertFn } from '../assert.js';\nimport { DisposableStore, markAsDisposed, toDisposable, trackDisposable } from '../lifecycle.js';\nimport { getFunctionName } from './base.js';\nimport { getLogger } from './logging.js';\nexport function autorunOpts(options, fn) {\n    return new AutorunObserver(options.debugName, fn, undefined, undefined);\n}\nexport function autorun(fn) {\n    return new AutorunObserver(undefined, fn, undefined, undefined);\n}\nexport function autorunHandleChanges(options, fn) {\n    return new AutorunObserver(options.debugName, fn, options.createEmptyChangeSummary, options.handleChange);\n}\nexport function autorunWithStore(fn) {\n    const store = new DisposableStore();\n    const disposable = autorunOpts({\n        debugName: () => getFunctionName(fn) || '(anonymous)',\n    }, reader => {\n        store.clear();\n        fn(reader, store);\n    });\n    return toDisposable(() => {\n        disposable.dispose();\n        store.dispose();\n    });\n}\nexport class AutorunObserver {\n    get debugName() {\n        if (typeof this._debugName === 'string') {\n            return this._debugName;\n        }\n        if (typeof this._debugName === 'function') {\n            const name = this._debugName();\n            if (name !== undefined) {\n                return name;\n            }\n        }\n        const name = getFunctionName(this._runFn);\n        if (name !== undefined) {\n            return name;\n        }\n        return '(anonymous)';\n    }\n    constructor(_debugName, _runFn, createChangeSummary, _handleChange) {\n        var _a, _b;\n        this._debugName = _debugName;\n        this._runFn = _runFn;\n        this.createChangeSummary = createChangeSummary;\n        this._handleChange = _handleChange;\n        this.state = 2 /* AutorunState.stale */;\n        this.updateCount = 0;\n        this.disposed = false;\n        this.dependencies = new Set();\n        this.dependenciesToBeRemoved = new Set();\n        this.changeSummary = (_a = this.createChangeSummary) === null || _a === void 0 ? void 0 : _a.call(this);\n        (_b = getLogger()) === null || _b === void 0 ? void 0 : _b.handleAutorunCreated(this);\n        this._runIfNeeded();\n        trackDisposable(this);\n    }\n    dispose() {\n        this.disposed = true;\n        for (const o of this.dependencies) {\n            o.removeObserver(this);\n        }\n        this.dependencies.clear();\n        markAsDisposed(this);\n    }\n    _runIfNeeded() {\n        var _a, _b, _c;\n        if (this.state === 3 /* AutorunState.upToDate */) {\n            return;\n        }\n        const emptySet = this.dependenciesToBeRemoved;\n        this.dependenciesToBeRemoved = this.dependencies;\n        this.dependencies = emptySet;\n        this.state = 3 /* AutorunState.upToDate */;\n        try {\n            if (!this.disposed) {\n                (_a = getLogger()) === null || _a === void 0 ? void 0 : _a.handleAutorunTriggered(this);\n                const changeSummary = this.changeSummary;\n                this.changeSummary = (_b = this.createChangeSummary) === null || _b === void 0 ? void 0 : _b.call(this);\n                this._runFn(this, changeSummary);\n            }\n        }\n        finally {\n            (_c = getLogger()) === null || _c === void 0 ? void 0 : _c.handleAutorunFinished(this);\n            // We don't want our observed observables to think that they are (not even temporarily) not being observed.\n            // Thus, we only unsubscribe from observables that are definitely not read anymore.\n            for (const o of this.dependenciesToBeRemoved) {\n                o.removeObserver(this);\n            }\n            this.dependenciesToBeRemoved.clear();\n        }\n    }\n    toString() {\n        return `Autorun<${this.debugName}>`;\n    }\n    // IObserver implementation\n    beginUpdate() {\n        if (this.state === 3 /* AutorunState.upToDate */) {\n            this.state = 1 /* AutorunState.dependenciesMightHaveChanged */;\n        }\n        this.updateCount++;\n    }\n    endUpdate() {\n        if (this.updateCount === 1) {\n            do {\n                if (this.state === 1 /* AutorunState.dependenciesMightHaveChanged */) {\n                    this.state = 3 /* AutorunState.upToDate */;\n                    for (const d of this.dependencies) {\n                        d.reportChanges();\n                        if (this.state === 2 /* AutorunState.stale */) {\n                            // The other dependencies will refresh on demand\n                            break;\n                        }\n                    }\n                }\n                this._runIfNeeded();\n            } while (this.state !== 3 /* AutorunState.upToDate */);\n        }\n        this.updateCount--;\n        assertFn(() => this.updateCount >= 0);\n    }\n    handlePossibleChange(observable) {\n        if (this.state === 3 /* AutorunState.upToDate */ && this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n            this.state = 1 /* AutorunState.dependenciesMightHaveChanged */;\n        }\n    }\n    handleChange(observable, change) {\n        if (this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n            const shouldReact = this._handleChange ? this._handleChange({\n                changedObservable: observable,\n                change,\n                didChange: o => o === observable,\n            }, this.changeSummary) : true;\n            if (shouldReact) {\n                this.state = 2 /* AutorunState.stale */;\n            }\n        }\n    }\n    // IReader implementation\n    readObservable(observable) {\n        // In case the run action disposes the autorun\n        if (this.disposed) {\n            return observable.get();\n        }\n        observable.addObserver(this);\n        const value = observable.get();\n        this.dependencies.add(observable);\n        this.dependenciesToBeRemoved.delete(observable);\n        return value;\n    }\n}\n(function (autorun) {\n    autorun.Observer = AutorunObserver;\n})(autorun || (autorun = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toDisposable } from '../lifecycle.js';\nimport { autorun } from './autorun.js';\nimport { BaseObservable, ConvenientObservable, getDebugName, getFunctionName, transaction } from './base.js';\nimport { getLogger } from './logging.js';\n/**\n * Represents an efficient observable whose value never changes.\n */\nexport function constObservable(value) {\n    return new ConstObservable(value);\n}\nclass ConstObservable extends ConvenientObservable {\n    constructor(value) {\n        super();\n        this.value = value;\n    }\n    get debugName() {\n        return this.toString();\n    }\n    get() {\n        return this.value;\n    }\n    addObserver(observer) {\n        // NO OP\n    }\n    removeObserver(observer) {\n        // NO OP\n    }\n    toString() {\n        return `Const: ${this.value}`;\n    }\n}\nexport function waitForState(observable, predicate) {\n    return new Promise(resolve => {\n        let didRun = false;\n        let shouldDispose = false;\n        const d = autorun(reader => {\n            /** @description waitForState */\n            const currentState = observable.read(reader);\n            if (predicate(currentState)) {\n                if (!didRun) {\n                    shouldDispose = true;\n                }\n                else {\n                    d.dispose();\n                }\n                resolve(currentState);\n            }\n        });\n        didRun = true;\n        if (shouldDispose) {\n            d.dispose();\n        }\n    });\n}\nexport function observableFromEvent(event, getValue) {\n    return new FromEventObservable(event, getValue);\n}\nexport class FromEventObservable extends BaseObservable {\n    constructor(event, _getValue) {\n        super();\n        this.event = event;\n        this._getValue = _getValue;\n        this.hasValue = false;\n        this.handleEvent = (args) => {\n            var _a;\n            const newValue = this._getValue(args);\n            const didChange = !this.hasValue || this.value !== newValue;\n            (_a = getLogger()) === null || _a === void 0 ? void 0 : _a.handleFromEventObservableTriggered(this, { oldValue: this.value, newValue, change: undefined, didChange, hadValue: this.hasValue });\n            if (didChange) {\n                this.value = newValue;\n                if (this.hasValue) {\n                    transaction((tx) => {\n                        for (const o of this.observers) {\n                            tx.updateObserver(o, this);\n                            o.handleChange(this, undefined);\n                        }\n                    }, () => {\n                        const name = this.getDebugName();\n                        return 'Event fired' + (name ? `: ${name}` : '');\n                    });\n                }\n                this.hasValue = true;\n            }\n        };\n    }\n    getDebugName() {\n        return getFunctionName(this._getValue);\n    }\n    get debugName() {\n        const name = this.getDebugName();\n        return 'From Event' + (name ? `: ${name}` : '');\n    }\n    onFirstObserverAdded() {\n        this.subscription = this.event(this.handleEvent);\n    }\n    onLastObserverRemoved() {\n        this.subscription.dispose();\n        this.subscription = undefined;\n        this.hasValue = false;\n        this.value = undefined;\n    }\n    get() {\n        if (this.subscription) {\n            if (!this.hasValue) {\n                this.handleEvent(undefined);\n            }\n            return this.value;\n        }\n        else {\n            // no cache, as there are no subscribers to keep it updated\n            return this._getValue(undefined);\n        }\n    }\n}\n(function (observableFromEvent) {\n    observableFromEvent.Observer = FromEventObservable;\n})(observableFromEvent || (observableFromEvent = {}));\nexport function observableSignalFromEvent(debugName, event) {\n    return new FromEventObservableSignal(debugName, event);\n}\nclass FromEventObservableSignal extends BaseObservable {\n    constructor(debugName, event) {\n        super();\n        this.debugName = debugName;\n        this.event = event;\n        this.handleEvent = () => {\n            transaction((tx) => {\n                for (const o of this.observers) {\n                    tx.updateObserver(o, this);\n                    o.handleChange(this, undefined);\n                }\n            }, () => this.debugName);\n        };\n    }\n    onFirstObserverAdded() {\n        this.subscription = this.event(this.handleEvent);\n    }\n    onLastObserverRemoved() {\n        this.subscription.dispose();\n        this.subscription = undefined;\n    }\n    get() {\n        // NO OP\n    }\n}\nexport function observableSignal(debugNameOrOwner) {\n    if (typeof debugNameOrOwner === 'string') {\n        return new ObservableSignal(debugNameOrOwner);\n    }\n    else {\n        return new ObservableSignal(undefined, debugNameOrOwner);\n    }\n}\nclass ObservableSignal extends BaseObservable {\n    get debugName() {\n        var _a;\n        return (_a = getDebugName(this._debugName, undefined, this._owner, this)) !== null && _a !== void 0 ? _a : 'Observable Signal';\n    }\n    constructor(_debugName, _owner) {\n        super();\n        this._debugName = _debugName;\n        this._owner = _owner;\n    }\n    trigger(tx, change) {\n        if (!tx) {\n            transaction(tx => {\n                this.trigger(tx, change);\n            }, () => `Trigger signal ${this.debugName}`);\n            return;\n        }\n        for (const o of this.observers) {\n            tx.updateObserver(o, this);\n            o.handleChange(this, change);\n        }\n    }\n    get() {\n        // NO OP\n    }\n}\n/**\n * This converts the given observable into an autorun.\n */\nexport function recomputeInitiallyAndOnChange(observable) {\n    const o = new KeepAliveObserver(true);\n    observable.addObserver(o);\n    observable.reportChanges();\n    return toDisposable(() => {\n        observable.removeObserver(o);\n    });\n}\nclass KeepAliveObserver {\n    constructor(forceRecompute) {\n        this.forceRecompute = forceRecompute;\n        this.counter = 0;\n    }\n    beginUpdate(observable) {\n        this.counter++;\n    }\n    endUpdate(observable) {\n        this.counter--;\n        if (this.counter === 0 && this.forceRecompute) {\n            observable.reportChanges();\n        }\n    }\n    handlePossibleChange(observable) {\n        // NO OP\n    }\n    handleChange(observable, change) {\n        // NO OP\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v16.14.2/lib/path.js\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nimport * as process from './process.js';\nconst CHAR_UPPERCASE_A = 65; /* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\nclass ErrorInvalidArgType extends Error {\n    constructor(name, expected, actual) {\n        // determiner: 'must be' or 'must not be'\n        let determiner;\n        if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n            determiner = 'must not be';\n            expected = expected.replace(/^not /, '');\n        }\n        else {\n            determiner = 'must be';\n        }\n        const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n        let msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n        msg += `. Received type ${typeof actual}`;\n        super(msg);\n        this.code = 'ERR_INVALID_ARG_TYPE';\n    }\n}\nfunction validateObject(pathObject, name) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n        throw new ErrorInvalidArgType(name, 'Object', pathObject);\n    }\n}\nfunction validateString(value, name) {\n    if (typeof value !== 'string') {\n        throw new ErrorInvalidArgType(name, 'string', value);\n    }\n}\nconst platformIsWin32 = (process.platform === 'win32');\nfunction isPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\nfunction isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\nfunction isWindowsDeviceRoot(code) {\n    return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n        (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code = 0;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (isPathSeparator(code)) {\n            break;\n        }\n        else {\n            code = CHAR_FORWARD_SLASH;\n        }\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) {\n                // NOOP\n            }\n            else if (dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = '';\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0, lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length !== 0) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    res += res.length > 0 ? `${separator}..` : '..';\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0) {\n                    res += `${separator}${path.slice(lastSlash + 1, i)}`;\n                }\n                else {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nfunction _format(sep, pathObject) {\n    validateObject(pathObject, 'pathObject');\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base ||\n        `${pathObject.name || ''}${pathObject.ext || ''}`;\n    if (!dir) {\n        return base;\n    }\n    return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\nexport const win32 = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedDevice = '';\n        let resolvedTail = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1; i--) {\n            let path;\n            if (i >= 0) {\n                path = pathSegments[i];\n                validateString(path, 'path');\n                // Skip empty entries\n                if (path.length === 0) {\n                    continue;\n                }\n            }\n            else if (resolvedDevice.length === 0) {\n                path = process.cwd();\n            }\n            else {\n                // Windows has the concept of drive-specific current working\n                // directories. If we've resolved a drive letter but not yet an\n                // absolute path, get cwd for that drive, or the process cwd if\n                // the drive cwd is not available. We're sure the device is not\n                // a UNC path at this points, because UNC paths are always absolute.\n                path = process.env[`=${resolvedDevice}`] || process.cwd();\n                // Verify that a cwd was found and that it actually points\n                // to our drive. If not, default to the drive's root.\n                if (path === undefined ||\n                    (path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n                        path.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n                    path = `${resolvedDevice}\\\\`;\n                }\n            }\n            const len = path.length;\n            let rootEnd = 0;\n            let device = '';\n            let isAbsolute = false;\n            const code = path.charCodeAt(0);\n            // Try to match a root\n            if (len === 1) {\n                if (isPathSeparator(code)) {\n                    // `path` contains just a path separator\n                    rootEnd = 1;\n                    isAbsolute = true;\n                }\n            }\n            else if (isPathSeparator(code)) {\n                // Possible UNC root\n                // If we started with a separator, we know we at least have an\n                // absolute path of some kind (UNC or otherwise)\n                isAbsolute = true;\n                if (isPathSeparator(path.charCodeAt(1))) {\n                    // Matched double path separator at beginning\n                    let j = 2;\n                    let last = j;\n                    // Match 1 or more non-path separators\n                    while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        const firstPart = path.slice(last, j);\n                        // Matched!\n                        last = j;\n                        // Match 1 or more path separators\n                        while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j < len && j !== last) {\n                            // Matched!\n                            last = j;\n                            // Match 1 or more non-path separators\n                            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                                j++;\n                            }\n                            if (j === len || j !== last) {\n                                // We matched a UNC root\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                                rootEnd = j;\n                            }\n                        }\n                    }\n                }\n                else {\n                    rootEnd = 1;\n                }\n            }\n            else if (isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON) {\n                // Possible device root\n                device = path.slice(0, 2);\n                rootEnd = 2;\n                if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                    // Treat separator following drive name as an absolute path\n                    // indicator\n                    isAbsolute = true;\n                    rootEnd = 3;\n                }\n            }\n            if (device.length > 0) {\n                if (resolvedDevice.length > 0) {\n                    if (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n                        // This path points to another device so it is not applicable\n                        continue;\n                    }\n                }\n                else {\n                    resolvedDevice = device;\n                }\n            }\n            if (resolvedAbsolute) {\n                if (resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n            else {\n                resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n                resolvedAbsolute = isAbsolute;\n                if (isAbsolute && resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n        }\n        // At this point the path should be resolved to a full absolute path,\n        // but handle relative paths to be safe (might happen when process.cwd()\n        // fails)\n        // Normalize the tail path\n        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n        return resolvedAbsolute ?\n            `${resolvedDevice}\\\\${resolvedTail}` :\n            `${resolvedDevice}${resolvedTail}` || '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = 0;\n        let device;\n        let isAbsolute = false;\n        const code = path.charCodeAt(0);\n        // Try to match a root\n        if (len === 1) {\n            // `path` contains just a single char, exit early to avoid\n            // unnecessary work\n            return isPosixPathSeparator(code) ? '\\\\' : path;\n        }\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            // If we started with a separator, we know we at least have an absolute\n            // path of some kind (UNC or otherwise)\n            isAbsolute = true;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    const firstPart = path.slice(last, j);\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            // Return the normalized version of the UNC root since there\n                            // is nothing left to process\n                            return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                            rootEnd = j;\n                        }\n                    }\n                }\n            }\n            else {\n                rootEnd = 1;\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            device = path.slice(0, 2);\n            rootEnd = 2;\n            if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                // Treat separator following drive name as an absolute path\n                // indicator\n                isAbsolute = true;\n                rootEnd = 3;\n            }\n        }\n        let tail = rootEnd < len ?\n            normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n            '';\n        if (tail.length === 0 && !isAbsolute) {\n            tail = '.';\n        }\n        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n            tail += '\\\\';\n        }\n        if (device === undefined) {\n            return isAbsolute ? `\\\\${tail}` : tail;\n        }\n        return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return false;\n        }\n        const code = path.charCodeAt(0);\n        return isPathSeparator(code) ||\n            // Possible device root\n            (len > 2 &&\n                isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON &&\n                isPathSeparator(path.charCodeAt(2)));\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        let firstPart;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = firstPart = arg;\n                }\n                else {\n                    joined += `\\\\${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        // Make sure that the joined path doesn't start with two slashes, because\n        // normalize() will mistake it for a UNC path then.\n        //\n        // This step is skipped when it is very clear that the user actually\n        // intended to point at a UNC path. This is assumed when the first\n        // non-empty string arguments starts with exactly two slashes followed by\n        // at least one more non-slash character.\n        //\n        // Note that for normalize() to treat a path as a UNC path it needs to\n        // have at least 2 components, so we don't filter for that here.\n        // This means that the user can use join to construct UNC paths from\n        // a server name and a share name; for example:\n        //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n        let needsReplace = true;\n        let slashCount = 0;\n        if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n            ++slashCount;\n            const firstLen = firstPart.length;\n            if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n                ++slashCount;\n                if (firstLen > 2) {\n                    if (isPathSeparator(firstPart.charCodeAt(2))) {\n                        ++slashCount;\n                    }\n                    else {\n                        // We matched a UNC path in the first part\n                        needsReplace = false;\n                    }\n                }\n            }\n        }\n        if (needsReplace) {\n            // Find any more consecutive slashes we need to replace\n            while (slashCount < joined.length &&\n                isPathSeparator(joined.charCodeAt(slashCount))) {\n                slashCount++;\n            }\n            // Replace the slashes if needed\n            if (slashCount >= 2) {\n                joined = `\\\\${joined.slice(slashCount)}`;\n            }\n        }\n        return win32.normalize(joined);\n    },\n    // It will solve the relative path from `from` to `to`, for instance:\n    //  from = 'C:\\\\orandea\\\\test\\\\aaa'\n    //  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n    // The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        const fromOrig = win32.resolve(from);\n        const toOrig = win32.resolve(to);\n        if (fromOrig === toOrig) {\n            return '';\n        }\n        from = fromOrig.toLowerCase();\n        to = toOrig.toLowerCase();\n        if (from === to) {\n            return '';\n        }\n        // Trim any leading backslashes\n        let fromStart = 0;\n        while (fromStart < from.length &&\n            from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n            fromStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let fromEnd = from.length;\n        while (fromEnd - 1 > fromStart &&\n            from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n            fromEnd--;\n        }\n        const fromLen = fromEnd - fromStart;\n        // Trim any leading backslashes\n        let toStart = 0;\n        while (toStart < to.length &&\n            to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            toStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let toEnd = to.length;\n        while (toEnd - 1 > toStart &&\n            to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n            toEnd--;\n        }\n        const toLen = toEnd - toStart;\n        // Compare paths to find the longest common path from root\n        const length = fromLen < toLen ? fromLen : toLen;\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_BACKWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        // We found a mismatch before the first common path separator was seen, so\n        // return the original `to`.\n        if (i !== length) {\n            if (lastCommonSep === -1) {\n                return toOrig;\n            }\n        }\n        else {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n                    return toOrig.slice(toStart + i + 1);\n                }\n                if (i === 2) {\n                    // We get here if `from` is the device root.\n                    // For example: from='C:\\\\'; to='C:\\\\foo'\n                    return toOrig.slice(toStart + i);\n                }\n            }\n            if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n                    lastCommonSep = i;\n                }\n                else if (i === 2) {\n                    // We get here if `to` is the device root.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n                    lastCommonSep = 3;\n                }\n            }\n            if (lastCommonSep === -1) {\n                lastCommonSep = 0;\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to` and\n        // `from`\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n                out += out.length === 0 ? '..' : '\\\\..';\n            }\n        }\n        toStart += lastCommonSep;\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts\n        if (out.length > 0) {\n            return `${out}${toOrig.slice(toStart, toEnd)}`;\n        }\n        if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            ++toStart;\n        }\n        return toOrig.slice(toStart, toEnd);\n    },\n    toNamespacedPath(path) {\n        // Note: this will *probably* throw somewhere.\n        if (typeof path !== 'string' || path.length === 0) {\n            return path;\n        }\n        const resolvedPath = win32.resolve(path);\n        if (resolvedPath.length <= 2) {\n            return path;\n        }\n        if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n            // Possible UNC root\n            if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n                const code = resolvedPath.charCodeAt(2);\n                if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n                    // Matched non-long UNC root, convert the path to a long UNC path\n                    return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n            resolvedPath.charCodeAt(1) === CHAR_COLON &&\n            resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n            // Matched device root, convert the path to a long UNC path\n            return `\\\\\\\\?\\\\${resolvedPath}`;\n        }\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = -1;\n        let offset = 0;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            // `path` contains just a path separator, exit early to avoid\n            // unnecessary work or a dot.\n            return isPathSeparator(code) ? path : '.';\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = offset = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            return path;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            // Offset by 1 to include the separator after the UNC root to\n                            // treat it as a \"normal root\" on top of a (UNC) root\n                            rootEnd = offset = j + 1;\n                        }\n                    }\n                }\n            }\n            // Possible device root\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n            offset = rootEnd;\n        }\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = len - 1; i >= offset; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            if (rootEnd === -1) {\n                return '.';\n            }\n            end = rootEnd;\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            isWindowsDeviceRoot(path.charCodeAt(0)) &&\n            path.charCodeAt(1) === CHAR_COLON) {\n            start = 2;\n        }\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= start; --i) {\n                const code = path.charCodeAt(i);\n                if (isPathSeparator(code)) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= start; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let start = 0;\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            path.charCodeAt(1) === CHAR_COLON &&\n            isWindowsDeviceRoot(path.charCodeAt(0))) {\n            start = startPart = 2;\n        }\n        for (let i = path.length - 1; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '\\\\'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const len = path.length;\n        let rootEnd = 0;\n        let code = path.charCodeAt(0);\n        if (len === 1) {\n            if (isPathSeparator(code)) {\n                // `path` contains just a path separator, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            ret.base = ret.name = path;\n            return ret;\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            rootEnd = j;\n                        }\n                        else if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            rootEnd = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            if (len <= 2) {\n                // `path` contains just a drive root, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            rootEnd = 2;\n            if (isPathSeparator(path.charCodeAt(2))) {\n                if (len === 3) {\n                    // `path` contains just a drive root, exit early to avoid\n                    // unnecessary work\n                    ret.root = ret.dir = path;\n                    return ret;\n                }\n                rootEnd = 3;\n            }\n        }\n        if (rootEnd > 0) {\n            ret.root = path.slice(0, rootEnd);\n        }\n        let startDot = -1;\n        let startPart = rootEnd;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= rootEnd; --i) {\n            code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(startPart, end);\n            }\n            else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        // If the directory is the root, use the entire root as the `dir` including\n        // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n        // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n        if (startPart > 0 && startPart !== rootEnd) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else {\n            ret.dir = ret.root;\n        }\n        return ret;\n    },\n    sep: '\\\\',\n    delimiter: ';',\n    win32: null,\n    posix: null\n};\nconst posixCwd = (() => {\n    if (platformIsWin32) {\n        // Converts Windows' backslash path separators to POSIX forward slashes\n        // and truncates any drive indicator\n        const regexp = /\\\\/g;\n        return () => {\n            const cwd = process.cwd().replace(regexp, '/');\n            return cwd.slice(cwd.indexOf('/'));\n        };\n    }\n    // We're already on POSIX, no need for any transformations\n    return () => process.cwd();\n})();\nexport const posix = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedPath = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            const path = i >= 0 ? pathSegments[i] : posixCwd();\n            validateString(path, 'path');\n            // Skip empty entries\n            if (path.length === 0) {\n                continue;\n            }\n            resolvedPath = `${path}/${resolvedPath}`;\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        // Normalize the path\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n        if (resolvedAbsolute) {\n            return `/${resolvedPath}`;\n        }\n        return resolvedPath.length > 0 ? resolvedPath : '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n        // Normalize the path\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n        if (path.length === 0) {\n            if (isAbsolute) {\n                return '/';\n            }\n            return trailingSeparator ? './' : '.';\n        }\n        if (trailingSeparator) {\n            path += '/';\n        }\n        return isAbsolute ? `/${path}` : path;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = arg;\n                }\n                else {\n                    joined += `/${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        return posix.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        // Trim leading forward slashes.\n        from = posix.resolve(from);\n        to = posix.resolve(to);\n        if (from === to) {\n            return '';\n        }\n        const fromStart = 1;\n        const fromEnd = from.length;\n        const fromLen = fromEnd - fromStart;\n        const toStart = 1;\n        const toLen = to.length - toStart;\n        // Compare paths to find the longest common path from root\n        const length = (fromLen < toLen ? fromLen : toLen);\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_FORWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='/foo/bar'; to='/foo/bar/baz'\n                    return to.slice(toStart + i + 1);\n                }\n                if (i === 0) {\n                    // We get here if `from` is the root\n                    // For example: from='/'; to='/foo'\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='/foo/bar/baz'; to='/foo/bar'\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    // We get here if `to` is the root.\n                    // For example: from='/foo/bar'; to='/'\n                    lastCommonSep = 0;\n                }\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to`\n        // and `from`.\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                out += out.length === 0 ? '..' : '/..';\n            }\n        }\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts.\n        return `${out}${to.slice(toStart + lastCommonSep)}`;\n    },\n    toNamespacedPath(path) {\n        // Non-op on posix systems\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = path.length - 1; i >= 1; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            return hasRoot ? '/' : '.';\n        }\n        if (hasRoot && end === 1) {\n            return '//';\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= 0; --i) {\n                const code = path.charCodeAt(i);\n                if (code === CHAR_FORWARD_SLASH) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        for (let i = path.length - 1; i >= 0; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '/'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let start;\n        if (isAbsolute) {\n            ret.root = '/';\n            start = 1;\n        }\n        else {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            const start = startPart === 0 && isAbsolute ? 1 : startPart;\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(start, end);\n            }\n            else {\n                ret.name = path.slice(start, startDot);\n                ret.base = path.slice(start, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else if (isAbsolute) {\n            ret.dir = '/';\n        }\n        return ret;\n    },\n    sep: '/',\n    delimiter: ':',\n    win32: null,\n    posix: null\n};\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\nexport const normalize = (platformIsWin32 ? win32.normalize : posix.normalize);\nexport const resolve = (platformIsWin32 ? win32.resolve : posix.resolve);\nexport const relative = (platformIsWin32 ? win32.relative : posix.relative);\nexport const dirname = (platformIsWin32 ? win32.dirname : posix.dirname);\nexport const basename = (platformIsWin32 ? win32.basename : posix.basename);\nexport const extname = (platformIsWin32 ? win32.extname : posix.extname);\nexport const sep = (platformIsWin32 ? win32.sep : posix.sep);\n","var _a;\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nexport const LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isElectron = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _isMobile = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _platformLocale = LANGUAGE_DEFAULT;\nlet _translationsConfigFile = undefined;\nlet _userAgent = undefined;\n/**\n * @deprecated use `globalThis` instead\n */\nexport const globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nlet nodeProcess = undefined;\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    // Native environment (sandboxed)\n    nodeProcess = globals.vscode.process;\n}\nelse if (typeof process !== 'undefined') {\n    // Native environment (non-sandboxed)\n    nodeProcess = process;\n}\nconst isElectronProcess = typeof ((_a = nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.versions) === null || _a === void 0 ? void 0 : _a.electron) === 'string';\nconst isElectronRenderer = isElectronProcess && (nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.type) === 'renderer';\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n    _userAgent = navigator.userAgent;\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n    _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\n    _isMobile = (_userAgent === null || _userAgent === void 0 ? void 0 : _userAgent.indexOf('Mobi')) >= 0;\n    _isWeb = true;\n    const configuredLocale = nls.getConfiguredDefaultLocale(\n    // This call _must_ be done in the file that calls `nls.getConfiguredDefaultLocale`\n    // to ensure that the NLS AMD Loader plugin has been loaded and configured.\n    // This is because the loader plugin decides what the default locale is based on\n    // how it's able to resolve the strings.\n    nls.localize({ key: 'ensureLoaderPluginIsLoaded', comment: ['{Locked}'] }, '_'));\n    _locale = configuredLocale || LANGUAGE_DEFAULT;\n    _language = _locale;\n    _platformLocale = navigator.language;\n}\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n    _isWindows = (nodeProcess.platform === 'win32');\n    _isMacintosh = (nodeProcess.platform === 'darwin');\n    _isLinux = (nodeProcess.platform === 'linux');\n    _isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n    _isElectron = isElectronProcess;\n    _isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            const nlsConfig = JSON.parse(rawNlsConfig);\n            const resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            _platformLocale = nlsConfig.osLocale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\n// Unknown environment\nelse {\n    console.error('Unable to resolve platform.');\n}\nlet _platform = 0 /* Platform.Web */;\nif (_isMacintosh) {\n    _platform = 1 /* Platform.Mac */;\n}\nelse if (_isWindows) {\n    _platform = 3 /* Platform.Windows */;\n}\nelse if (_isLinux) {\n    _platform = 2 /* Platform.Linux */;\n}\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isWebWorker = (_isWeb && typeof globals.importScripts === 'function');\nexport const isIOS = _isIOS;\nexport const isMobile = _isMobile;\nexport const userAgent = _userAgent;\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\nexport const setTimeout0IsFaster = (typeof globals.postMessage === 'function' && !globals.importScripts);\n/**\n * See https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#:~:text=than%204%2C%20then-,set%20timeout%20to%204,-.\n *\n * Works similarly to `setTimeout(0)` but doesn't suffer from the 4ms artificial delay\n * that browsers set when the nesting level is > 5.\n */\nexport const setTimeout0 = (() => {\n    if (setTimeout0IsFaster) {\n        const pending = [];\n        globals.addEventListener('message', (e) => {\n            if (e.data && e.data.vscodeScheduleAsyncWork) {\n                for (let i = 0, len = pending.length; i < len; i++) {\n                    const candidate = pending[i];\n                    if (candidate.id === e.data.vscodeScheduleAsyncWork) {\n                        pending.splice(i, 1);\n                        candidate.callback();\n                        return;\n                    }\n                }\n            }\n        });\n        let lastId = 0;\n        return (callback) => {\n            const myId = ++lastId;\n            pending.push({\n                id: myId,\n                callback: callback\n            });\n            globals.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n        };\n    }\n    return (callback) => setTimeout(callback);\n})();\nexport const OS = (_isMacintosh || _isIOS ? 2 /* OperatingSystem.Macintosh */ : (_isWindows ? 1 /* OperatingSystem.Windows */ : 3 /* OperatingSystem.Linux */));\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian() {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = new Uint8Array(2);\n        test[0] = 1;\n        test[1] = 2;\n        const view = new Uint16Array(test.buffer);\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\nexport const isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nexport const isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nexport const isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nexport const isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nexport const isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals, isMacintosh, isWindows } from './platform.js';\nlet safeProcess;\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    const sandboxProcess = globals.vscode.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get arch() { return sandboxProcess.arch; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); }\n    };\n}\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get arch() { return process.arch; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n    };\n}\n// Web environment\nelse {\n    safeProcess = {\n        // Supported\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        get arch() { return undefined; /* arch is undefined in web */ },\n        // Unsupported\n        get env() { return {}; },\n        cwd() { return '/'; }\n    };\n}\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n *\n * @skipMangle\n */\nexport const cwd = safeProcess.cwd;\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var Range;\n(function (Range) {\n    /**\n     * Returns the intersection between two ranges as a range itself.\n     * Returns `{ start: 0, end: 0 }` if the intersection is empty.\n     */\n    function intersect(one, other) {\n        if (one.start >= other.end || other.start >= one.end) {\n            return { start: 0, end: 0 };\n        }\n        const start = Math.max(one.start, other.start);\n        const end = Math.min(one.end, other.end);\n        if (end - start <= 0) {\n            return { start: 0, end: 0 };\n        }\n        return { start, end };\n    }\n    Range.intersect = intersect;\n    function isEmpty(range) {\n        return range.end - range.start <= 0;\n    }\n    Range.isEmpty = isEmpty;\n    function intersects(one, other) {\n        return !isEmpty(intersect(one, other));\n    }\n    Range.intersects = intersects;\n    function relativeComplement(one, other) {\n        const result = [];\n        const first = { start: one.start, end: Math.min(other.start, one.end) };\n        const second = { start: Math.max(other.end, one.start), end: one.end };\n        if (!isEmpty(first)) {\n            result.push(first);\n        }\n        if (!isEmpty(second)) {\n            result.push(second);\n        }\n        return result;\n    }\n    Range.relativeComplement = relativeComplement;\n})(Range || (Range = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as extpath from './extpath.js';\nimport { Schemas } from './network.js';\nimport * as paths from './path.js';\nimport { isLinux, isWindows } from './platform.js';\nimport { compare as strCompare, equalsIgnoreCase } from './strings.js';\nimport { URI, uriToFsPath } from './uri.js';\nexport function originalFSPath(uri) {\n    return uriToFsPath(uri, true);\n}\nexport class ExtUri {\n    constructor(_ignorePathCasing) {\n        this._ignorePathCasing = _ignorePathCasing;\n    }\n    compare(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return 0;\n        }\n        return strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n    }\n    isEqual(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return true;\n        }\n        if (!uri1 || !uri2) {\n            return false;\n        }\n        return this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n    }\n    getComparisonKey(uri, ignoreFragment = false) {\n        return uri.with({\n            path: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n            fragment: ignoreFragment ? null : undefined\n        }).toString();\n    }\n    isEqualOrParent(base, parentCandidate, ignoreFragment = false) {\n        if (base.scheme === parentCandidate.scheme) {\n            if (base.scheme === Schemas.file) {\n                return extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n            if (isEqualAuthority(base.authority, parentCandidate.authority)) {\n                return extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n        }\n        return false;\n    }\n    // --- path math\n    joinPath(resource, ...pathFragment) {\n        return URI.joinPath(resource, ...pathFragment);\n    }\n    basenameOrAuthority(resource) {\n        return basename(resource) || resource.authority;\n    }\n    basename(resource) {\n        return paths.posix.basename(resource.path);\n    }\n    extname(resource) {\n        return paths.posix.extname(resource.path);\n    }\n    dirname(resource) {\n        if (resource.path.length === 0) {\n            return resource;\n        }\n        let dirname;\n        if (resource.scheme === Schemas.file) {\n            dirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n        }\n        else {\n            dirname = paths.posix.dirname(resource.path);\n            if (resource.authority && dirname.length && dirname.charCodeAt(0) !== 47 /* CharCode.Slash */) {\n                console.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n                dirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n            }\n        }\n        return resource.with({\n            path: dirname\n        });\n    }\n    normalizePath(resource) {\n        if (!resource.path.length) {\n            return resource;\n        }\n        let normalizedPath;\n        if (resource.scheme === Schemas.file) {\n            normalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n        }\n        else {\n            normalizedPath = paths.posix.normalize(resource.path);\n        }\n        return resource.with({\n            path: normalizedPath\n        });\n    }\n    relativePath(from, to) {\n        if (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n            return undefined;\n        }\n        if (from.scheme === Schemas.file) {\n            const relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n            return isWindows ? extpath.toSlashes(relativePath) : relativePath;\n        }\n        let fromPath = from.path || '/';\n        const toPath = to.path || '/';\n        if (this._ignorePathCasing(from)) {\n            // make casing of fromPath match toPath\n            let i = 0;\n            for (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n                if (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n                    if (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n                        break;\n                    }\n                }\n            }\n            fromPath = toPath.substr(0, i) + fromPath.substr(i);\n        }\n        return paths.posix.relative(fromPath, toPath);\n    }\n    resolvePath(base, path) {\n        if (base.scheme === Schemas.file) {\n            const newURI = URI.file(paths.resolve(originalFSPath(base), path));\n            return base.with({\n                authority: newURI.authority,\n                path: newURI.path\n            });\n        }\n        path = extpath.toPosixPath(path); // we allow path to be a windows path\n        return base.with({\n            path: paths.posix.resolve(base.path, path)\n        });\n    }\n    // --- misc\n    isAbsolutePath(resource) {\n        return !!resource.path && resource.path[0] === '/';\n    }\n    isEqualAuthority(a1, a2) {\n        return a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n    }\n    hasTrailingPathSeparator(resource, sep = paths.sep) {\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            return fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n        }\n        else {\n            const p = resource.path;\n            return (p.length > 1 && p.charCodeAt(p.length - 1) === 47 /* CharCode.Slash */) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n        }\n    }\n    removeTrailingPathSeparator(resource, sep = paths.sep) {\n        // Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n        if (hasTrailingPathSeparator(resource, sep)) {\n            return resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n        }\n        return resource;\n    }\n    addTrailingPathSeparator(resource, sep = paths.sep) {\n        let isRootSep = false;\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            isRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n        }\n        else {\n            sep = '/';\n            const p = resource.path;\n            isRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === 47 /* CharCode.Slash */;\n        }\n        if (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n            return resource.with({ path: resource.path + '/' });\n        }\n        return resource;\n    }\n}\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n    // A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n    // Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n    return uri.scheme === Schemas.file ? !isLinux : true;\n});\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n/**\n * Data URI related helpers.\n */\nexport var DataUri;\n(function (DataUri) {\n    DataUri.META_DATA_LABEL = 'label';\n    DataUri.META_DATA_DESCRIPTION = 'description';\n    DataUri.META_DATA_SIZE = 'size';\n    DataUri.META_DATA_MIME = 'mime';\n    function parseMetaData(dataUri) {\n        const metadata = new Map();\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n        // the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n        const meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n        meta.split(';').forEach(property => {\n            const [key, value] = property.split(':');\n            if (key && value) {\n                metadata.set(key, value);\n            }\n        });\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n        // the mime is: image/png\n        const mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n        if (mime) {\n            metadata.set(DataUri.META_DATA_MIME, mime);\n        }\n        return metadata;\n    }\n    DataUri.parseMetaData = parseMetaData;\n})(DataUri || (DataUri = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from './event.js';\nimport { Disposable } from './lifecycle.js';\nexport class ScrollState {\n    constructor(_forceIntegerValues, width, scrollWidth, scrollLeft, height, scrollHeight, scrollTop) {\n        this._forceIntegerValues = _forceIntegerValues;\n        this._scrollStateBrand = undefined;\n        if (this._forceIntegerValues) {\n            width = width | 0;\n            scrollWidth = scrollWidth | 0;\n            scrollLeft = scrollLeft | 0;\n            height = height | 0;\n            scrollHeight = scrollHeight | 0;\n            scrollTop = scrollTop | 0;\n        }\n        this.rawScrollLeft = scrollLeft; // before validation\n        this.rawScrollTop = scrollTop; // before validation\n        if (width < 0) {\n            width = 0;\n        }\n        if (scrollLeft + width > scrollWidth) {\n            scrollLeft = scrollWidth - width;\n        }\n        if (scrollLeft < 0) {\n            scrollLeft = 0;\n        }\n        if (height < 0) {\n            height = 0;\n        }\n        if (scrollTop + height > scrollHeight) {\n            scrollTop = scrollHeight - height;\n        }\n        if (scrollTop < 0) {\n            scrollTop = 0;\n        }\n        this.width = width;\n        this.scrollWidth = scrollWidth;\n        this.scrollLeft = scrollLeft;\n        this.height = height;\n        this.scrollHeight = scrollHeight;\n        this.scrollTop = scrollTop;\n    }\n    equals(other) {\n        return (this.rawScrollLeft === other.rawScrollLeft\n            && this.rawScrollTop === other.rawScrollTop\n            && this.width === other.width\n            && this.scrollWidth === other.scrollWidth\n            && this.scrollLeft === other.scrollLeft\n            && this.height === other.height\n            && this.scrollHeight === other.scrollHeight\n            && this.scrollTop === other.scrollTop);\n    }\n    withScrollDimensions(update, useRawScrollPositions) {\n        return new ScrollState(this._forceIntegerValues, (typeof update.width !== 'undefined' ? update.width : this.width), (typeof update.scrollWidth !== 'undefined' ? update.scrollWidth : this.scrollWidth), useRawScrollPositions ? this.rawScrollLeft : this.scrollLeft, (typeof update.height !== 'undefined' ? update.height : this.height), (typeof update.scrollHeight !== 'undefined' ? update.scrollHeight : this.scrollHeight), useRawScrollPositions ? this.rawScrollTop : this.scrollTop);\n    }\n    withScrollPosition(update) {\n        return new ScrollState(this._forceIntegerValues, this.width, this.scrollWidth, (typeof update.scrollLeft !== 'undefined' ? update.scrollLeft : this.rawScrollLeft), this.height, this.scrollHeight, (typeof update.scrollTop !== 'undefined' ? update.scrollTop : this.rawScrollTop));\n    }\n    createScrollEvent(previous, inSmoothScrolling) {\n        const widthChanged = (this.width !== previous.width);\n        const scrollWidthChanged = (this.scrollWidth !== previous.scrollWidth);\n        const scrollLeftChanged = (this.scrollLeft !== previous.scrollLeft);\n        const heightChanged = (this.height !== previous.height);\n        const scrollHeightChanged = (this.scrollHeight !== previous.scrollHeight);\n        const scrollTopChanged = (this.scrollTop !== previous.scrollTop);\n        return {\n            inSmoothScrolling: inSmoothScrolling,\n            oldWidth: previous.width,\n            oldScrollWidth: previous.scrollWidth,\n            oldScrollLeft: previous.scrollLeft,\n            width: this.width,\n            scrollWidth: this.scrollWidth,\n            scrollLeft: this.scrollLeft,\n            oldHeight: previous.height,\n            oldScrollHeight: previous.scrollHeight,\n            oldScrollTop: previous.scrollTop,\n            height: this.height,\n            scrollHeight: this.scrollHeight,\n            scrollTop: this.scrollTop,\n            widthChanged: widthChanged,\n            scrollWidthChanged: scrollWidthChanged,\n            scrollLeftChanged: scrollLeftChanged,\n            heightChanged: heightChanged,\n            scrollHeightChanged: scrollHeightChanged,\n            scrollTopChanged: scrollTopChanged,\n        };\n    }\n}\nexport class Scrollable extends Disposable {\n    constructor(options) {\n        super();\n        this._scrollableBrand = undefined;\n        this._onScroll = this._register(new Emitter());\n        this.onScroll = this._onScroll.event;\n        this._smoothScrollDuration = options.smoothScrollDuration;\n        this._scheduleAtNextAnimationFrame = options.scheduleAtNextAnimationFrame;\n        this._state = new ScrollState(options.forceIntegerValues, 0, 0, 0, 0, 0, 0);\n        this._smoothScrolling = null;\n    }\n    dispose() {\n        if (this._smoothScrolling) {\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = null;\n        }\n        super.dispose();\n    }\n    setSmoothScrollDuration(smoothScrollDuration) {\n        this._smoothScrollDuration = smoothScrollDuration;\n    }\n    validateScrollPosition(scrollPosition) {\n        return this._state.withScrollPosition(scrollPosition);\n    }\n    getScrollDimensions() {\n        return this._state;\n    }\n    setScrollDimensions(dimensions, useRawScrollPositions) {\n        var _a;\n        const newState = this._state.withScrollDimensions(dimensions, useRawScrollPositions);\n        this._setState(newState, Boolean(this._smoothScrolling));\n        // Validate outstanding animated scroll position target\n        (_a = this._smoothScrolling) === null || _a === void 0 ? void 0 : _a.acceptScrollDimensions(this._state);\n    }\n    /**\n     * Returns the final scroll position that the instance will have once the smooth scroll animation concludes.\n     * If no scroll animation is occurring, it will return the current scroll position instead.\n     */\n    getFutureScrollPosition() {\n        if (this._smoothScrolling) {\n            return this._smoothScrolling.to;\n        }\n        return this._state;\n    }\n    /**\n     * Returns the current scroll position.\n     * Note: This result might be an intermediate scroll position, as there might be an ongoing smooth scroll animation.\n     */\n    getCurrentScrollPosition() {\n        return this._state;\n    }\n    setScrollPositionNow(update) {\n        // no smooth scrolling requested\n        const newState = this._state.withScrollPosition(update);\n        // Terminate any outstanding smooth scrolling\n        if (this._smoothScrolling) {\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = null;\n        }\n        this._setState(newState, false);\n    }\n    setScrollPositionSmooth(update, reuseAnimation) {\n        if (this._smoothScrollDuration === 0) {\n            // Smooth scrolling not supported.\n            return this.setScrollPositionNow(update);\n        }\n        if (this._smoothScrolling) {\n            // Combine our pending scrollLeft/scrollTop with incoming scrollLeft/scrollTop\n            update = {\n                scrollLeft: (typeof update.scrollLeft === 'undefined' ? this._smoothScrolling.to.scrollLeft : update.scrollLeft),\n                scrollTop: (typeof update.scrollTop === 'undefined' ? this._smoothScrolling.to.scrollTop : update.scrollTop)\n            };\n            // Validate `update`\n            const validTarget = this._state.withScrollPosition(update);\n            if (this._smoothScrolling.to.scrollLeft === validTarget.scrollLeft && this._smoothScrolling.to.scrollTop === validTarget.scrollTop) {\n                // No need to interrupt or extend the current animation since we're going to the same place\n                return;\n            }\n            let newSmoothScrolling;\n            if (reuseAnimation) {\n                newSmoothScrolling = new SmoothScrollingOperation(this._smoothScrolling.from, validTarget, this._smoothScrolling.startTime, this._smoothScrolling.duration);\n            }\n            else {\n                newSmoothScrolling = this._smoothScrolling.combine(this._state, validTarget, this._smoothScrollDuration);\n            }\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = newSmoothScrolling;\n        }\n        else {\n            // Validate `update`\n            const validTarget = this._state.withScrollPosition(update);\n            this._smoothScrolling = SmoothScrollingOperation.start(this._state, validTarget, this._smoothScrollDuration);\n        }\n        // Begin smooth scrolling animation\n        this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(() => {\n            if (!this._smoothScrolling) {\n                return;\n            }\n            this._smoothScrolling.animationFrameDisposable = null;\n            this._performSmoothScrolling();\n        });\n    }\n    hasPendingScrollAnimation() {\n        return Boolean(this._smoothScrolling);\n    }\n    _performSmoothScrolling() {\n        if (!this._smoothScrolling) {\n            return;\n        }\n        const update = this._smoothScrolling.tick();\n        const newState = this._state.withScrollPosition(update);\n        this._setState(newState, true);\n        if (!this._smoothScrolling) {\n            // Looks like someone canceled the smooth scrolling\n            // from the scroll event handler\n            return;\n        }\n        if (update.isDone) {\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = null;\n            return;\n        }\n        // Continue smooth scrolling animation\n        this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(() => {\n            if (!this._smoothScrolling) {\n                return;\n            }\n            this._smoothScrolling.animationFrameDisposable = null;\n            this._performSmoothScrolling();\n        });\n    }\n    _setState(newState, inSmoothScrolling) {\n        const oldState = this._state;\n        if (oldState.equals(newState)) {\n            // no change\n            return;\n        }\n        this._state = newState;\n        this._onScroll.fire(this._state.createScrollEvent(oldState, inSmoothScrolling));\n    }\n}\nexport class SmoothScrollingUpdate {\n    constructor(scrollLeft, scrollTop, isDone) {\n        this.scrollLeft = scrollLeft;\n        this.scrollTop = scrollTop;\n        this.isDone = isDone;\n    }\n}\nfunction createEaseOutCubic(from, to) {\n    const delta = to - from;\n    return function (completion) {\n        return from + delta * easeOutCubic(completion);\n    };\n}\nfunction createComposed(a, b, cut) {\n    return function (completion) {\n        if (completion < cut) {\n            return a(completion / cut);\n        }\n        return b((completion - cut) / (1 - cut));\n    };\n}\nexport class SmoothScrollingOperation {\n    constructor(from, to, startTime, duration) {\n        this.from = from;\n        this.to = to;\n        this.duration = duration;\n        this.startTime = startTime;\n        this.animationFrameDisposable = null;\n        this._initAnimations();\n    }\n    _initAnimations() {\n        this.scrollLeft = this._initAnimation(this.from.scrollLeft, this.to.scrollLeft, this.to.width);\n        this.scrollTop = this._initAnimation(this.from.scrollTop, this.to.scrollTop, this.to.height);\n    }\n    _initAnimation(from, to, viewportSize) {\n        const delta = Math.abs(from - to);\n        if (delta > 2.5 * viewportSize) {\n            let stop1, stop2;\n            if (from < to) {\n                // scroll to 75% of the viewportSize\n                stop1 = from + 0.75 * viewportSize;\n                stop2 = to - 0.75 * viewportSize;\n            }\n            else {\n                stop1 = from - 0.75 * viewportSize;\n                stop2 = to + 0.75 * viewportSize;\n            }\n            return createComposed(createEaseOutCubic(from, stop1), createEaseOutCubic(stop2, to), 0.33);\n        }\n        return createEaseOutCubic(from, to);\n    }\n    dispose() {\n        if (this.animationFrameDisposable !== null) {\n            this.animationFrameDisposable.dispose();\n            this.animationFrameDisposable = null;\n        }\n    }\n    acceptScrollDimensions(state) {\n        this.to = state.withScrollPosition(this.to);\n        this._initAnimations();\n    }\n    tick() {\n        return this._tick(Date.now());\n    }\n    _tick(now) {\n        const completion = (now - this.startTime) / this.duration;\n        if (completion < 1) {\n            const newScrollLeft = this.scrollLeft(completion);\n            const newScrollTop = this.scrollTop(completion);\n            return new SmoothScrollingUpdate(newScrollLeft, newScrollTop, false);\n        }\n        return new SmoothScrollingUpdate(this.to.scrollLeft, this.to.scrollTop, true);\n    }\n    combine(from, to, duration) {\n        return SmoothScrollingOperation.start(from, to, duration);\n    }\n    static start(from, to, duration) {\n        // +10 / -10 : pretend the animation already started for a quicker response to a scroll request\n        duration = duration + 10;\n        const startTime = Date.now() - 10;\n        return new SmoothScrollingOperation(from, to, startTime, duration);\n    }\n}\nfunction easeInCubic(t) {\n    return Math.pow(t, 3);\n}\nfunction easeOutCubic(t) {\n    return 1 - easeInCubic(1 - t);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\nexport function buildReplaceStringWithCasePreserved(matches, pattern) {\n    if (matches && (matches[0] !== '')) {\n        const containsHyphens = validateSpecificSpecialCharacter(matches, pattern, '-');\n        const containsUnderscores = validateSpecificSpecialCharacter(matches, pattern, '_');\n        if (containsHyphens && !containsUnderscores) {\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '-');\n        }\n        else if (!containsHyphens && containsUnderscores) {\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '_');\n        }\n        if (matches[0].toUpperCase() === matches[0]) {\n            return pattern.toUpperCase();\n        }\n        else if (matches[0].toLowerCase() === matches[0]) {\n            return pattern.toLowerCase();\n        }\n        else if (strings.containsUppercaseCharacter(matches[0][0]) && pattern.length > 0) {\n            return pattern[0].toUpperCase() + pattern.substr(1);\n        }\n        else if (matches[0][0].toUpperCase() !== matches[0][0] && pattern.length > 0) {\n            return pattern[0].toLowerCase() + pattern.substr(1);\n        }\n        else {\n            // we don't understand its pattern yet.\n            return pattern;\n        }\n    }\n    else {\n        return pattern;\n    }\n}\nfunction validateSpecificSpecialCharacter(matches, pattern, specialCharacter) {\n    const doesContainSpecialCharacter = matches[0].indexOf(specialCharacter) !== -1 && pattern.indexOf(specialCharacter) !== -1;\n    return doesContainSpecialCharacter && matches[0].split(specialCharacter).length === pattern.split(specialCharacter).length;\n}\nfunction buildReplaceStringForSpecificSpecialCharacter(matches, pattern, specialCharacter) {\n    const splitPatternAtSpecialCharacter = pattern.split(specialCharacter);\n    const splitMatchAtSpecialCharacter = matches[0].split(specialCharacter);\n    let replaceString = '';\n    splitPatternAtSpecialCharacter.forEach((splitValue, index) => {\n        replaceString += buildReplaceStringWithCasePreserved([splitMatchAtSpecialCharacter[index]], splitValue) + specialCharacter;\n    });\n    return replaceString.slice(0, -1);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\nvar Severity;\n(function (Severity) {\n    Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\n    Severity[Severity[\"Info\"] = 1] = \"Info\";\n    Severity[Severity[\"Warning\"] = 2] = \"Warning\";\n    Severity[Severity[\"Error\"] = 3] = \"Error\";\n})(Severity || (Severity = {}));\n(function (Severity) {\n    const _error = 'error';\n    const _warning = 'warning';\n    const _warn = 'warn';\n    const _info = 'info';\n    const _ignore = 'ignore';\n    /**\n     * Parses 'error', 'warning', 'warn', 'info' in call casings\n     * and falls back to ignore.\n     */\n    function fromValue(value) {\n        if (!value) {\n            return Severity.Ignore;\n        }\n        if (strings.equalsIgnoreCase(_error, value)) {\n            return Severity.Error;\n        }\n        if (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n            return Severity.Warning;\n        }\n        if (strings.equalsIgnoreCase(_info, value)) {\n            return Severity.Info;\n        }\n        return Severity.Ignore;\n    }\n    Severity.fromValue = fromValue;\n    function toString(severity) {\n        switch (severity) {\n            case Severity.Error: return _error;\n            case Severity.Warning: return _warning;\n            case Severity.Info: return _info;\n            default: return _ignore;\n        }\n    }\n    Severity.toString = toString;\n})(Severity || (Severity = {}));\nexport default Severity;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nconst hasPerformanceNow = (globalThis.performance && typeof globalThis.performance.now === 'function');\nexport class StopWatch {\n    static create(highResolution) {\n        return new StopWatch(highResolution);\n    }\n    constructor(highResolution) {\n        this._now = hasPerformanceNow && highResolution === false ? Date.now : globalThis.performance.now.bind(globalThis.performance);\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    stop() {\n        this._stopTime = this._now();\n    }\n    elapsed() {\n        if (this._stopTime !== -1) {\n            return this._stopTime - this._startTime;\n        }\n        return this._now() - this._startTime;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nimport { LRUCachedFunction } from './cache.js';\nimport { Lazy } from './lazy.js';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value, ...args) {\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        const idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle = ' ') {\n    const trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    let offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    let offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\nexport function createRegExp(searchString, isRegex, options = {}) {\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    let modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    const match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function splitLines(str) {\n    return str.split(/\\r\\n|\\r|\\n/);\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start = 0, end = str.length) {\n    for (let i = start; i < end; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n    for (let i = startIndex; i >= 0; i--) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        const codeA = a.charCodeAt(aStart);\n        const codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        }\n        else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function compareIgnoreCase(a, b) {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nexport function compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n        if (codeA >= 128 || codeB >= 128) {\n            // not ASCII letters -> fallback to lower-casing strings\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n        // mapper lower-case ascii letter onto upper-case varinats\n        // [97-122] (lower ascii) --> [65-90] (upper ascii)\n        if (isLowerAsciiLetter(codeA)) {\n            codeA -= 32;\n        }\n        if (isLowerAsciiLetter(codeB)) {\n            codeB -= 32;\n        }\n        // compare both code points\n        const diff = codeA - codeB;\n        if (diff === 0) {\n            continue;\n        }\n        return diff;\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function isAsciiDigit(code) {\n    return code >= 48 /* CharCode.Digit0 */ && code <= 57 /* CharCode.Digit9 */;\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* CharCode.a */ && code <= 122 /* CharCode.z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */;\n}\nexport function equalsIgnoreCase(a, b) {\n    return a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    const aLastIndex = a.length - 1;\n    const bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str, len, offset) {\n    const charCode = str.charCodeAt(offset);\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\n        const nextCharCode = str.charCodeAt(offset + 1);\n        if (isLowSurrogate(nextCharCode)) {\n            return computeCodePoint(charCode, nextCharCode);\n        }\n    }\n    return charCode;\n}\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str, offset) {\n    const charCode = str.charCodeAt(offset - 1);\n    if (isLowSurrogate(charCode) && offset > 1) {\n        const prevCharCode = str.charCodeAt(offset - 2);\n        if (isHighSurrogate(prevCharCode)) {\n            return computeCodePoint(prevCharCode, charCode);\n        }\n    }\n    return charCode;\n}\nexport class CodePointIterator {\n    get offset() {\n        return this._offset;\n    }\n    constructor(str, offset = 0) {\n        this._str = str;\n        this._len = str.length;\n        this._offset = offset;\n    }\n    setOffset(offset) {\n        this._offset = offset;\n    }\n    prevCodePoint() {\n        const codePoint = getPrevCodePoint(this._str, this._offset);\n        this._offset -= (codePoint >= 65536 /* Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    nextCodePoint() {\n        const codePoint = getNextCodePoint(this._str, this._len, this._offset);\n        this._offset += (codePoint >= 65536 /* Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    eol() {\n        return (this._offset >= this._len);\n    }\n}\nexport class GraphemeIterator {\n    get offset() {\n        return this._iterator.offset;\n    }\n    constructor(str, offset = 0) {\n        this._iterator = new CodePointIterator(str, offset);\n    }\n    nextGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n        while (!iterator.eol()) {\n            const offset = iterator.offset;\n            const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n            if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = nextGraphemeBreakType;\n        }\n        return (iterator.offset - initialOffset);\n    }\n    prevGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n        while (iterator.offset > 0) {\n            const offset = iterator.offset;\n            const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n            if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = prevGraphemeBreakType;\n        }\n        return (initialOffset - iterator.offset);\n    }\n    eol() {\n        return this._iterator.eol();\n    }\n}\nexport function nextCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.nextGraphemeLength();\n}\nexport function prevCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.prevGraphemeLength();\n}\nexport function getCharContainingOffset(str, offset) {\n    if (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n        offset--;\n    }\n    const endOffset = offset + nextCharLength(str, offset);\n    const startOffset = endOffset - prevCharLength(str, endOffset);\n    return [startOffset, endOffset];\n}\nlet CONTAINS_RTL = undefined;\nfunction makeContainsRtl() {\n    // Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js\n    return /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n}\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    if (!CONTAINS_RTL) {\n        CONTAINS_RTL = makeContainsRtl();\n    }\n    return CONTAINS_RTL.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str) {\n    return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 - 2EFF   CJK Radicals Supplement\n    //          2F00 - 2FDF   Kangxi Radicals\n    //          2FF0 - 2FFF   Ideographic Description Characters\n    //          3000 - 303F   CJK Symbols and Punctuation\n    //          3040 - 309F   Hiragana\n    //          30A0 - 30FF   Katakana\n    //          3100 - 312F   Bopomofo\n    //          3130 - 318F   Hangul Compatibility Jamo\n    //          3190 - 319F   Kanbun\n    //          31A0 - 31BF   Bopomofo Extended\n    //          31F0 - 31FF   Katakana Phonetic Extensions\n    //          3200 - 32FF   Enclosed CJK Letters and Months\n    //          3300 - 33FF   CJK Compatibility\n    //          3400 - 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 - 4DFF   Yijing Hexagram Symbols\n    //          4E00 - 9FFF   CJK Unified Ideographs\n    //          A000 - A48F   Yi Syllables\n    //          A490 - A4CF   Yi Radicals\n    //          AC00 - D7AF   Hangul Syllables\n    // [IGNORE] D800 - DB7F   High Surrogates\n    // [IGNORE] DB80 - DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 - DFFF   Low Surrogates\n    // [IGNORE] E000 - F8FF   Private Use Area\n    //          F900 - FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 - FE0F   Variation Selectors\n    // [IGNORE] FE20 - FE2F   Combining Half Marks\n    // [IGNORE] FE30 - FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 - FE6F   Small Form Variants\n    // [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B\n    //          FF00 - FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 - FFFF   Specials\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nexport function isEmojiImprecise(x) {\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n        || (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n        || (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n        || (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n        || (x >= 129648 && x <= 129782));\n}\n// -- UTF-8 BOM\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* CharCode.UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* CharCode.UTF8_BOM */);\n}\nexport function containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n) {\n    const LETTERS_CNT = (90 /* CharCode.Z */ - 65 /* CharCode.A */ + 1);\n    n = n % (2 * LETTERS_CNT);\n    if (n < LETTERS_CNT) {\n        return String.fromCharCode(97 /* CharCode.a */ + n);\n    }\n    return String.fromCharCode(65 /* CharCode.A */ + n - LETTERS_CNT);\n}\nfunction breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n    // http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n    // !!! Let's make the common case a bit faster\n    if (breakTypeA === 0 /* GraphemeBreakType.Other */) {\n        // see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n        return (breakTypeB !== 5 /* GraphemeBreakType.Extend */ && breakTypeB !== 7 /* GraphemeBreakType.SpacingMark */);\n    }\n    // Do not break between a CR and LF. Otherwise, break before and after controls.\n    // GB3                                        CR × LF\n    // GB4                       (Control | CR | LF) ÷\n    // GB5                                           ÷ (Control | CR | LF)\n    if (breakTypeA === 2 /* GraphemeBreakType.CR */) {\n        if (breakTypeB === 3 /* GraphemeBreakType.LF */) {\n            return false; // GB3\n        }\n    }\n    if (breakTypeA === 4 /* GraphemeBreakType.Control */ || breakTypeA === 2 /* GraphemeBreakType.CR */ || breakTypeA === 3 /* GraphemeBreakType.LF */) {\n        return true; // GB4\n    }\n    if (breakTypeB === 4 /* GraphemeBreakType.Control */ || breakTypeB === 2 /* GraphemeBreakType.CR */ || breakTypeB === 3 /* GraphemeBreakType.LF */) {\n        return true; // GB5\n    }\n    // Do not break Hangul syllable sequences.\n    // GB6                                         L × (L | V | LV | LVT)\n    // GB7                                  (LV | V) × (V | T)\n    // GB8                                 (LVT | T) × T\n    if (breakTypeA === 8 /* GraphemeBreakType.L */) {\n        if (breakTypeB === 8 /* GraphemeBreakType.L */ || breakTypeB === 9 /* GraphemeBreakType.V */ || breakTypeB === 11 /* GraphemeBreakType.LV */ || breakTypeB === 12 /* GraphemeBreakType.LVT */) {\n            return false; // GB6\n        }\n    }\n    if (breakTypeA === 11 /* GraphemeBreakType.LV */ || breakTypeA === 9 /* GraphemeBreakType.V */) {\n        if (breakTypeB === 9 /* GraphemeBreakType.V */ || breakTypeB === 10 /* GraphemeBreakType.T */) {\n            return false; // GB7\n        }\n    }\n    if (breakTypeA === 12 /* GraphemeBreakType.LVT */ || breakTypeA === 10 /* GraphemeBreakType.T */) {\n        if (breakTypeB === 10 /* GraphemeBreakType.T */) {\n            return false; // GB8\n        }\n    }\n    // Do not break before extending characters or ZWJ.\n    // GB9                                           × (Extend | ZWJ)\n    if (breakTypeB === 5 /* GraphemeBreakType.Extend */ || breakTypeB === 13 /* GraphemeBreakType.ZWJ */) {\n        return false; // GB9\n    }\n    // The GB9a and GB9b rules only apply to extended grapheme clusters:\n    // Do not break before SpacingMarks, or after Prepend characters.\n    // GB9a                                          × SpacingMark\n    // GB9b                                  Prepend ×\n    if (breakTypeB === 7 /* GraphemeBreakType.SpacingMark */) {\n        return false; // GB9a\n    }\n    if (breakTypeA === 1 /* GraphemeBreakType.Prepend */) {\n        return false; // GB9b\n    }\n    // Do not break within emoji modifier sequences or emoji zwj sequences.\n    // GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n    if (breakTypeA === 13 /* GraphemeBreakType.ZWJ */ && breakTypeB === 14 /* GraphemeBreakType.Extended_Pictographic */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB11\n    }\n    // GB12                          sot (RI RI)* RI × RI\n    // GB13                        [^RI] (RI RI)* RI × RI\n    if (breakTypeA === 6 /* GraphemeBreakType.Regional_Indicator */ && breakTypeB === 6 /* GraphemeBreakType.Regional_Indicator */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB12 & GB13\n    }\n    // GB999                                     Any ÷ Any\n    return true;\n}\nclass GraphemeBreakTree {\n    static getInstance() {\n        if (!GraphemeBreakTree._INSTANCE) {\n            GraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n        }\n        return GraphemeBreakTree._INSTANCE;\n    }\n    constructor() {\n        this._data = getGraphemeBreakRawData();\n    }\n    getGraphemeBreakType(codePoint) {\n        // !!! Let's make 7bit ASCII a bit faster: 0..31\n        if (codePoint < 32) {\n            if (codePoint === 10 /* CharCode.LineFeed */) {\n                return 3 /* GraphemeBreakType.LF */;\n            }\n            if (codePoint === 13 /* CharCode.CarriageReturn */) {\n                return 2 /* GraphemeBreakType.CR */;\n            }\n            return 4 /* GraphemeBreakType.Control */;\n        }\n        // !!! Let's make 7bit ASCII a bit faster: 32..126\n        if (codePoint < 127) {\n            return 0 /* GraphemeBreakType.Other */;\n        }\n        const data = this._data;\n        const nodeCount = data.length / 3;\n        let nodeIndex = 1;\n        while (nodeIndex <= nodeCount) {\n            if (codePoint < data[3 * nodeIndex]) {\n                // go left\n                nodeIndex = 2 * nodeIndex;\n            }\n            else if (codePoint > data[3 * nodeIndex + 1]) {\n                // go right\n                nodeIndex = 2 * nodeIndex + 1;\n            }\n            else {\n                // hit\n                return data[3 * nodeIndex + 2];\n            }\n        }\n        return 0 /* GraphemeBreakType.Other */;\n    }\n}\nGraphemeBreakTree._INSTANCE = null;\nfunction getGraphemeBreakRawData() {\n    // generated using https://github.com/alexdima/unicode-utils/blob/main/grapheme-break.js\n    return JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\n//#endregion\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset, str) {\n    if (offset === 0) {\n        return 0;\n    }\n    // Try to delete emoji part.\n    const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n    if (emojiOffset !== undefined) {\n        return emojiOffset;\n    }\n    // Otherwise, just skip a single code point.\n    const iterator = new CodePointIterator(str, offset);\n    iterator.prevCodePoint();\n    return iterator.offset;\n}\nfunction getOffsetBeforeLastEmojiComponent(initialOffset, str) {\n    // See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n    // structure of emojis.\n    const iterator = new CodePointIterator(str, initialOffset);\n    let codePoint = iterator.prevCodePoint();\n    // Skip modifiers\n    while ((isEmojiModifier(codePoint) || codePoint === 65039 /* CodePoint.emojiVariantSelector */ || codePoint === 8419 /* CodePoint.enclosingKeyCap */)) {\n        if (iterator.offset === 0) {\n            // Cannot skip modifier, no preceding emoji base.\n            return undefined;\n        }\n        codePoint = iterator.prevCodePoint();\n    }\n    // Expect base emoji\n    if (!isEmojiImprecise(codePoint)) {\n        // Unexpected code point, not a valid emoji.\n        return undefined;\n    }\n    let resultOffset = iterator.offset;\n    if (resultOffset > 0) {\n        // Skip optional ZWJ code points that combine multiple emojis.\n        // In theory, we should check if that ZWJ actually combines multiple emojis\n        // to prevent deleting ZWJs in situations we didn't account for.\n        const optionalZwjCodePoint = iterator.prevCodePoint();\n        if (optionalZwjCodePoint === 8205 /* CodePoint.zwj */) {\n            resultOffset = iterator.offset;\n        }\n    }\n    return resultOffset;\n}\nfunction isEmojiModifier(codePoint) {\n    return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\nexport const noBreakWhitespace = '\\xa0';\nexport class AmbiguousCharacters {\n    static getInstance(locales) {\n        return _a.cache.get(Array.from(locales));\n    }\n    static getLocales() {\n        return _a._locales.value;\n    }\n    constructor(confusableDictionary) {\n        this.confusableDictionary = confusableDictionary;\n    }\n    isAmbiguous(codePoint) {\n        return this.confusableDictionary.has(codePoint);\n    }\n    /**\n     * Returns the non basic ASCII code point that the given code point can be confused,\n     * or undefined if such code point does note exist.\n     */\n    getPrimaryConfusable(codePoint) {\n        return this.confusableDictionary.get(codePoint);\n    }\n    getConfusableCodePoints() {\n        return new Set(this.confusableDictionary.keys());\n    }\n}\n_a = AmbiguousCharacters;\nAmbiguousCharacters.ambiguousCharacterData = new Lazy(() => {\n    // Generated using https://github.com/hediet/vscode-unicode-data\n    // Stored as key1, value1, key2, value2, ...\n    return JSON.parse('{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}');\n});\nAmbiguousCharacters.cache = new LRUCachedFunction((locales) => {\n    function arrayToMap(arr) {\n        const result = new Map();\n        for (let i = 0; i < arr.length; i += 2) {\n            result.set(arr[i], arr[i + 1]);\n        }\n        return result;\n    }\n    function mergeMaps(map1, map2) {\n        const result = new Map(map1);\n        for (const [key, value] of map2) {\n            result.set(key, value);\n        }\n        return result;\n    }\n    function intersectMaps(map1, map2) {\n        if (!map1) {\n            return map2;\n        }\n        const result = new Map();\n        for (const [key, value] of map1) {\n            if (map2.has(key)) {\n                result.set(key, value);\n            }\n        }\n        return result;\n    }\n    const data = _a.ambiguousCharacterData.value;\n    let filteredLocales = locales.filter((l) => !l.startsWith('_') && l in data);\n    if (filteredLocales.length === 0) {\n        filteredLocales = ['_default'];\n    }\n    let languageSpecificMap = undefined;\n    for (const locale of filteredLocales) {\n        const map = arrayToMap(data[locale]);\n        languageSpecificMap = intersectMaps(languageSpecificMap, map);\n    }\n    const commonMap = arrayToMap(data['_common']);\n    const map = mergeMaps(commonMap, languageSpecificMap);\n    return new _a(map);\n});\nAmbiguousCharacters._locales = new Lazy(() => Object.keys(_a.ambiguousCharacterData.value).filter((k) => !k.startsWith('_')));\nexport class InvisibleCharacters {\n    static getRawData() {\n        // Generated using https://github.com/hediet/vscode-unicode-data\n        return JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n    }\n    static getData() {\n        if (!this._data) {\n            this._data = new Set(InvisibleCharacters.getRawData());\n        }\n        return this._data;\n    }\n    static isInvisibleCharacter(codePoint) {\n        return InvisibleCharacters.getData().has(codePoint);\n    }\n    static get codePoints() {\n        return InvisibleCharacters.getData();\n    }\n}\nInvisibleCharacters._data = undefined;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Can be passed into the Delayed to defer using a microtask\n * */\nexport const MicrotaskDelay = Symbol('MicrotaskDelay');\n","import { compare, compareIgnoreCase, compareSubstring, compareSubstringIgnoreCase } from './strings.js';\nexport class StringIterator {\n    constructor() {\n        this._value = '';\n        this._pos = 0;\n    }\n    reset(key) {\n        this._value = key;\n        this._pos = 0;\n        return this;\n    }\n    next() {\n        this._pos += 1;\n        return this;\n    }\n    hasNext() {\n        return this._pos < this._value.length - 1;\n    }\n    cmp(a) {\n        const aCode = a.charCodeAt(0);\n        const thisCode = this._value.charCodeAt(this._pos);\n        return aCode - thisCode;\n    }\n    value() {\n        return this._value[this._pos];\n    }\n}\nexport class ConfigKeysIterator {\n    constructor(_caseSensitive = true) {\n        this._caseSensitive = _caseSensitive;\n    }\n    reset(key) {\n        this._value = key;\n        this._from = 0;\n        this._to = 0;\n        return this.next();\n    }\n    hasNext() {\n        return this._to < this._value.length;\n    }\n    next() {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        let justSeps = true;\n        for (; this._to < this._value.length; this._to++) {\n            const ch = this._value.charCodeAt(this._to);\n            if (ch === 46 /* CharCode.Period */) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    }\n    cmp(a) {\n        return this._caseSensitive\n            ? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n            : compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n    }\n    value() {\n        return this._value.substring(this._from, this._to);\n    }\n}\nexport class PathIterator {\n    constructor(_splitOnBackslash = true, _caseSensitive = true) {\n        this._splitOnBackslash = _splitOnBackslash;\n        this._caseSensitive = _caseSensitive;\n    }\n    reset(key) {\n        this._from = 0;\n        this._to = 0;\n        this._value = key;\n        this._valueLen = key.length;\n        for (let pos = key.length - 1; pos >= 0; pos--, this._valueLen--) {\n            const ch = this._value.charCodeAt(pos);\n            if (!(ch === 47 /* CharCode.Slash */ || this._splitOnBackslash && ch === 92 /* CharCode.Backslash */)) {\n                break;\n            }\n        }\n        return this.next();\n    }\n    hasNext() {\n        return this._to < this._valueLen;\n    }\n    next() {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        let justSeps = true;\n        for (; this._to < this._valueLen; this._to++) {\n            const ch = this._value.charCodeAt(this._to);\n            if (ch === 47 /* CharCode.Slash */ || this._splitOnBackslash && ch === 92 /* CharCode.Backslash */) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    }\n    cmp(a) {\n        return this._caseSensitive\n            ? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n            : compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n    }\n    value() {\n        return this._value.substring(this._from, this._to);\n    }\n}\nexport class UriIterator {\n    constructor(_ignorePathCasing, _ignoreQueryAndFragment) {\n        this._ignorePathCasing = _ignorePathCasing;\n        this._ignoreQueryAndFragment = _ignoreQueryAndFragment;\n        this._states = [];\n        this._stateIdx = 0;\n    }\n    reset(key) {\n        this._value = key;\n        this._states = [];\n        if (this._value.scheme) {\n            this._states.push(1 /* UriIteratorState.Scheme */);\n        }\n        if (this._value.authority) {\n            this._states.push(2 /* UriIteratorState.Authority */);\n        }\n        if (this._value.path) {\n            this._pathIterator = new PathIterator(false, !this._ignorePathCasing(key));\n            this._pathIterator.reset(key.path);\n            if (this._pathIterator.value()) {\n                this._states.push(3 /* UriIteratorState.Path */);\n            }\n        }\n        if (!this._ignoreQueryAndFragment(key)) {\n            if (this._value.query) {\n                this._states.push(4 /* UriIteratorState.Query */);\n            }\n            if (this._value.fragment) {\n                this._states.push(5 /* UriIteratorState.Fragment */);\n            }\n        }\n        this._stateIdx = 0;\n        return this;\n    }\n    next() {\n        if (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */ && this._pathIterator.hasNext()) {\n            this._pathIterator.next();\n        }\n        else {\n            this._stateIdx += 1;\n        }\n        return this;\n    }\n    hasNext() {\n        return (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */ && this._pathIterator.hasNext())\n            || this._stateIdx < this._states.length - 1;\n    }\n    cmp(a) {\n        if (this._states[this._stateIdx] === 1 /* UriIteratorState.Scheme */) {\n            return compareIgnoreCase(a, this._value.scheme);\n        }\n        else if (this._states[this._stateIdx] === 2 /* UriIteratorState.Authority */) {\n            return compareIgnoreCase(a, this._value.authority);\n        }\n        else if (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */) {\n            return this._pathIterator.cmp(a);\n        }\n        else if (this._states[this._stateIdx] === 4 /* UriIteratorState.Query */) {\n            return compare(a, this._value.query);\n        }\n        else if (this._states[this._stateIdx] === 5 /* UriIteratorState.Fragment */) {\n            return compare(a, this._value.fragment);\n        }\n        throw new Error();\n    }\n    value() {\n        if (this._states[this._stateIdx] === 1 /* UriIteratorState.Scheme */) {\n            return this._value.scheme;\n        }\n        else if (this._states[this._stateIdx] === 2 /* UriIteratorState.Authority */) {\n            return this._value.authority;\n        }\n        else if (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */) {\n            return this._pathIterator.value();\n        }\n        else if (this._states[this._stateIdx] === 4 /* UriIteratorState.Query */) {\n            return this._value.query;\n        }\n        else if (this._states[this._stateIdx] === 5 /* UriIteratorState.Fragment */) {\n            return this._value.fragment;\n        }\n        throw new Error();\n    }\n}\nclass TernarySearchTreeNode {\n    constructor() {\n        this.height = 1;\n    }\n    rotateLeft() {\n        const tmp = this.right;\n        this.right = tmp.left;\n        tmp.left = this;\n        this.updateHeight();\n        tmp.updateHeight();\n        return tmp;\n    }\n    rotateRight() {\n        const tmp = this.left;\n        this.left = tmp.right;\n        tmp.right = this;\n        this.updateHeight();\n        tmp.updateHeight();\n        return tmp;\n    }\n    updateHeight() {\n        this.height = 1 + Math.max(this.heightLeft, this.heightRight);\n    }\n    balanceFactor() {\n        return this.heightRight - this.heightLeft;\n    }\n    get heightLeft() {\n        var _a, _b;\n        return (_b = (_a = this.left) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : 0;\n    }\n    get heightRight() {\n        var _a, _b;\n        return (_b = (_a = this.right) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : 0;\n    }\n}\nexport class TernarySearchTree {\n    static forUris(ignorePathCasing = () => false, ignoreQueryAndFragment = () => false) {\n        return new TernarySearchTree(new UriIterator(ignorePathCasing, ignoreQueryAndFragment));\n    }\n    static forStrings() {\n        return new TernarySearchTree(new StringIterator());\n    }\n    static forConfigKeys() {\n        return new TernarySearchTree(new ConfigKeysIterator());\n    }\n    constructor(segments) {\n        this._iter = segments;\n    }\n    clear() {\n        this._root = undefined;\n    }\n    set(key, element) {\n        const iter = this._iter.reset(key);\n        let node;\n        if (!this._root) {\n            this._root = new TernarySearchTreeNode();\n            this._root.segment = iter.value();\n        }\n        const stack = [];\n        // find insert_node\n        node = this._root;\n        while (true) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                if (!node.left) {\n                    node.left = new TernarySearchTreeNode();\n                    node.left.segment = iter.value();\n                }\n                stack.push([-1 /* Dir.Left */, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                if (!node.right) {\n                    node.right = new TernarySearchTreeNode();\n                    node.right.segment = iter.value();\n                }\n                stack.push([1 /* Dir.Right */, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                if (!node.mid) {\n                    node.mid = new TernarySearchTreeNode();\n                    node.mid.segment = iter.value();\n                }\n                stack.push([0 /* Dir.Mid */, node]);\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        // set value\n        const oldElement = node.value;\n        node.value = element;\n        node.key = key;\n        // balance\n        for (let i = stack.length - 1; i >= 0; i--) {\n            const node = stack[i][1];\n            node.updateHeight();\n            const bf = node.balanceFactor();\n            if (bf < -1 || bf > 1) {\n                // needs rotate\n                const d1 = stack[i][0];\n                const d2 = stack[i + 1][0];\n                if (d1 === 1 /* Dir.Right */ && d2 === 1 /* Dir.Right */) {\n                    //right, right -> rotate left\n                    stack[i][1] = node.rotateLeft();\n                }\n                else if (d1 === -1 /* Dir.Left */ && d2 === -1 /* Dir.Left */) {\n                    // left, left -> rotate right\n                    stack[i][1] = node.rotateRight();\n                }\n                else if (d1 === 1 /* Dir.Right */ && d2 === -1 /* Dir.Left */) {\n                    // right, left -> double rotate right, left\n                    node.right = stack[i + 1][1] = stack[i + 1][1].rotateRight();\n                    stack[i][1] = node.rotateLeft();\n                }\n                else if (d1 === -1 /* Dir.Left */ && d2 === 1 /* Dir.Right */) {\n                    // left, right -> double rotate left, right\n                    node.left = stack[i + 1][1] = stack[i + 1][1].rotateLeft();\n                    stack[i][1] = node.rotateRight();\n                }\n                else {\n                    throw new Error();\n                }\n                // patch path to parent\n                if (i > 0) {\n                    switch (stack[i - 1][0]) {\n                        case -1 /* Dir.Left */:\n                            stack[i - 1][1].left = stack[i][1];\n                            break;\n                        case 1 /* Dir.Right */:\n                            stack[i - 1][1].right = stack[i][1];\n                            break;\n                        case 0 /* Dir.Mid */:\n                            stack[i - 1][1].mid = stack[i][1];\n                            break;\n                    }\n                }\n                else {\n                    this._root = stack[0][1];\n                }\n            }\n        }\n        return oldElement;\n    }\n    get(key) {\n        var _a;\n        return (_a = this._getNode(key)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    _getNode(key) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node;\n    }\n    has(key) {\n        const node = this._getNode(key);\n        return !((node === null || node === void 0 ? void 0 : node.value) === undefined && (node === null || node === void 0 ? void 0 : node.mid) === undefined);\n    }\n    delete(key) {\n        return this._delete(key, false);\n    }\n    deleteSuperstr(key) {\n        return this._delete(key, true);\n    }\n    _delete(key, superStr) {\n        var _a;\n        const iter = this._iter.reset(key);\n        const stack = [];\n        let node = this._root;\n        // find node\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                stack.push([-1 /* Dir.Left */, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                stack.push([1 /* Dir.Right */, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                stack.push([0 /* Dir.Mid */, node]);\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        if (!node) {\n            // node not found\n            return;\n        }\n        if (superStr) {\n            // removing children, reset height\n            node.left = undefined;\n            node.mid = undefined;\n            node.right = undefined;\n            node.height = 1;\n        }\n        else {\n            // removing element\n            node.key = undefined;\n            node.value = undefined;\n        }\n        // BST node removal\n        if (!node.mid && !node.value) {\n            if (node.left && node.right) {\n                // full node\n                // replace deleted-node with the min-node of the right branch.\n                // If there is no true min-node leave things as they are\n                const min = this._min(node.right);\n                if (min.key) {\n                    const { key, value, segment } = min;\n                    this._delete(min.key, false);\n                    node.key = key;\n                    node.value = value;\n                    node.segment = segment;\n                }\n            }\n            else {\n                // empty or half empty\n                const newChild = (_a = node.left) !== null && _a !== void 0 ? _a : node.right;\n                if (stack.length > 0) {\n                    const [dir, parent] = stack[stack.length - 1];\n                    switch (dir) {\n                        case -1 /* Dir.Left */:\n                            parent.left = newChild;\n                            break;\n                        case 0 /* Dir.Mid */:\n                            parent.mid = newChild;\n                            break;\n                        case 1 /* Dir.Right */:\n                            parent.right = newChild;\n                            break;\n                    }\n                }\n                else {\n                    this._root = newChild;\n                }\n            }\n        }\n        // AVL balance\n        for (let i = stack.length - 1; i >= 0; i--) {\n            const node = stack[i][1];\n            node.updateHeight();\n            const bf = node.balanceFactor();\n            if (bf > 1) {\n                // right heavy\n                if (node.right.balanceFactor() >= 0) {\n                    // right, right -> rotate left\n                    stack[i][1] = node.rotateLeft();\n                }\n                else {\n                    // right, left -> double rotate\n                    node.right = node.right.rotateRight();\n                    stack[i][1] = node.rotateLeft();\n                }\n            }\n            else if (bf < -1) {\n                // left heavy\n                if (node.left.balanceFactor() <= 0) {\n                    // left, left -> rotate right\n                    stack[i][1] = node.rotateRight();\n                }\n                else {\n                    // left, right -> double rotate\n                    node.left = node.left.rotateLeft();\n                    stack[i][1] = node.rotateRight();\n                }\n            }\n            // patch path to parent\n            if (i > 0) {\n                switch (stack[i - 1][0]) {\n                    case -1 /* Dir.Left */:\n                        stack[i - 1][1].left = stack[i][1];\n                        break;\n                    case 1 /* Dir.Right */:\n                        stack[i - 1][1].right = stack[i][1];\n                        break;\n                    case 0 /* Dir.Mid */:\n                        stack[i - 1][1].mid = stack[i][1];\n                        break;\n                }\n            }\n            else {\n                this._root = stack[0][1];\n            }\n        }\n    }\n    _min(node) {\n        while (node.left) {\n            node = node.left;\n        }\n        return node;\n    }\n    findSubstr(key) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        let candidate = undefined;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                candidate = node.value || candidate;\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node && node.value || candidate;\n    }\n    findSuperstr(key) {\n        return this._findSuperstrOrElement(key, false);\n    }\n    _findSuperstrOrElement(key, allowValue) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                // collect\n                if (!node.mid) {\n                    if (allowValue) {\n                        return node.value;\n                    }\n                    else {\n                        return undefined;\n                    }\n                }\n                else {\n                    return this._entries(node.mid);\n                }\n            }\n        }\n        return undefined;\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key);\n        }\n    }\n    *[Symbol.iterator]() {\n        yield* this._entries(this._root);\n    }\n    _entries(node) {\n        const result = [];\n        this._dfsEntries(node, result);\n        return result[Symbol.iterator]();\n    }\n    _dfsEntries(node, bucket) {\n        // DFS\n        if (!node) {\n            return;\n        }\n        if (node.left) {\n            this._dfsEntries(node.left, bucket);\n        }\n        if (node.value) {\n            bucket.push([node.key, node.value]);\n        }\n        if (node.mid) {\n            this._dfsEntries(node.mid, bucket);\n        }\n        if (node.right) {\n            this._dfsEntries(node.right, bucket);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nfunction countMapFrom(values) {\n    var _a;\n    const map = new Map();\n    for (const value of values) {\n        map.set(value, ((_a = map.get(value)) !== null && _a !== void 0 ? _a : 0) + 1);\n    }\n    return map;\n}\n/**\n * Implementation of tf-idf (term frequency-inverse document frequency) for a set of\n * documents where each document contains one or more chunks of text.\n * Each document is identified by a key, and the score for each document is computed\n * by taking the max score over all the chunks in the document.\n */\nexport class TfIdfCalculator {\n    constructor() {\n        /**\n         * Total number of chunks\n         */\n        this.chunkCount = 0;\n        this.chunkOccurrences = new Map();\n        this.documents = new Map();\n    }\n    calculateScores(query, token) {\n        const embedding = this.computeEmbedding(query);\n        const idfCache = new Map();\n        const scores = [];\n        // For each document, generate one score\n        for (const [key, doc] of this.documents) {\n            if (token.isCancellationRequested) {\n                return [];\n            }\n            for (const chunk of doc.chunks) {\n                const score = this.computeSimilarityScore(chunk, embedding, idfCache);\n                if (score > 0) {\n                    scores.push({ key, score });\n                }\n            }\n        }\n        return scores;\n    }\n    /**\n     * Count how many times each term (word) appears in a string.\n     */\n    static termFrequencies(input) {\n        return countMapFrom(TfIdfCalculator.splitTerms(input));\n    }\n    /**\n     * Break a string into terms (words).\n     */\n    static *splitTerms(input) {\n        const normalize = (word) => word.toLowerCase();\n        // Only match on words that are at least 3 characters long and start with a letter\n        for (const [word] of input.matchAll(/\\b\\p{Letter}[\\p{Letter}\\d]{2,}\\b/gu)) {\n            yield normalize(word);\n            // eslint-disable-next-line local/code-no-look-behind-regex\n            const camelParts = word.split(/(?<=[a-z])(?=[A-Z])/g);\n            if (camelParts.length > 1) {\n                for (const part of camelParts) {\n                    // Require at least 3 letters in the parts of a camel case word\n                    if (part.length > 2 && /\\p{Letter}{3,}/gu.test(part)) {\n                        yield normalize(part);\n                    }\n                }\n            }\n        }\n    }\n    updateDocuments(documents) {\n        var _a;\n        for (const { key } of documents) {\n            this.deleteDocument(key);\n        }\n        for (const doc of documents) {\n            const chunks = [];\n            for (const text of doc.textChunks) {\n                // TODO: See if we can compute the tf lazily\n                // The challenge is that we need to also update the `chunkOccurrences`\n                // and all of those updates need to get flushed before the real TF-IDF of\n                // anything is computed.\n                const tf = TfIdfCalculator.termFrequencies(text);\n                // Update occurrences list\n                for (const term of tf.keys()) {\n                    this.chunkOccurrences.set(term, ((_a = this.chunkOccurrences.get(term)) !== null && _a !== void 0 ? _a : 0) + 1);\n                }\n                chunks.push({ text, tf });\n            }\n            this.chunkCount += chunks.length;\n            this.documents.set(doc.key, { chunks });\n        }\n        return this;\n    }\n    deleteDocument(key) {\n        const doc = this.documents.get(key);\n        if (!doc) {\n            return;\n        }\n        this.documents.delete(key);\n        this.chunkCount -= doc.chunks.length;\n        // Update term occurrences for the document\n        for (const chunk of doc.chunks) {\n            for (const term of chunk.tf.keys()) {\n                const currentOccurrences = this.chunkOccurrences.get(term);\n                if (typeof currentOccurrences === 'number') {\n                    const newOccurrences = currentOccurrences - 1;\n                    if (newOccurrences <= 0) {\n                        this.chunkOccurrences.delete(term);\n                    }\n                    else {\n                        this.chunkOccurrences.set(term, newOccurrences);\n                    }\n                }\n            }\n        }\n    }\n    computeSimilarityScore(chunk, queryEmbedding, idfCache) {\n        // Compute the dot product between the chunk's embedding and the query embedding\n        // Note that the chunk embedding is computed lazily on a per-term basis.\n        // This lets us skip a large number of calculations because the majority\n        // of chunks do not share any terms with the query.\n        let sum = 0;\n        for (const [term, termTfidf] of Object.entries(queryEmbedding)) {\n            const chunkTf = chunk.tf.get(term);\n            if (!chunkTf) {\n                // Term does not appear in chunk so it has no contribution\n                continue;\n            }\n            let chunkIdf = idfCache.get(term);\n            if (typeof chunkIdf !== 'number') {\n                chunkIdf = this.computeIdf(term);\n                idfCache.set(term, chunkIdf);\n            }\n            const chunkTfidf = chunkTf * chunkIdf;\n            sum += chunkTfidf * termTfidf;\n        }\n        return sum;\n    }\n    computeEmbedding(input) {\n        const tf = TfIdfCalculator.termFrequencies(input);\n        return this.computeTfidf(tf);\n    }\n    computeIdf(term) {\n        var _a;\n        const chunkOccurrences = (_a = this.chunkOccurrences.get(term)) !== null && _a !== void 0 ? _a : 0;\n        return chunkOccurrences > 0\n            ? Math.log((this.chunkCount + 1) / chunkOccurrences)\n            : 0;\n    }\n    computeTfidf(termFrequencies) {\n        const embedding = Object.create(null);\n        for (const [word, occurrences] of termFrequencies) {\n            const idf = this.computeIdf(word);\n            if (idf > 0) {\n                embedding[word] = occurrences * idf;\n            }\n        }\n        return embedding;\n    }\n}\n/**\n * Normalize the scores to be between 0 and 1 and sort them decending.\n * @param scores array of scores from {@link TfIdfCalculator.calculateScores}\n * @returns normalized scores\n */\nexport function normalizeTfIdfScores(scores) {\n    var _a, _b;\n    // copy of scores\n    const result = scores.slice(0);\n    // sort descending\n    result.sort((a, b) => b.score - a.score);\n    // normalize\n    const max = (_b = (_a = result[0]) === null || _a === void 0 ? void 0 : _a.score) !== null && _b !== void 0 ? _b : 0;\n    if (max > 0) {\n        for (const score of result) {\n            score.score /= max;\n        }\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Codicon } from './codicons.js';\nexport var ThemeColor;\n(function (ThemeColor) {\n    function isThemeColor(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string';\n    }\n    ThemeColor.isThemeColor = isThemeColor;\n})(ThemeColor || (ThemeColor = {}));\nexport var ThemeIcon;\n(function (ThemeIcon) {\n    ThemeIcon.iconNameSegment = '[A-Za-z0-9]+';\n    ThemeIcon.iconNameExpression = '[A-Za-z0-9-]+';\n    ThemeIcon.iconModifierExpression = '~[A-Za-z]+';\n    ThemeIcon.iconNameCharacter = '[A-Za-z0-9~-]';\n    const ThemeIconIdRegex = new RegExp(`^(${ThemeIcon.iconNameExpression})(${ThemeIcon.iconModifierExpression})?$`);\n    function asClassNameArray(icon) {\n        const match = ThemeIconIdRegex.exec(icon.id);\n        if (!match) {\n            return asClassNameArray(Codicon.error);\n        }\n        const [, id, modifier] = match;\n        const classNames = ['codicon', 'codicon-' + id];\n        if (modifier) {\n            classNames.push('codicon-modifier-' + modifier.substring(1));\n        }\n        return classNames;\n    }\n    ThemeIcon.asClassNameArray = asClassNameArray;\n    function asClassName(icon) {\n        return asClassNameArray(icon).join(' ');\n    }\n    ThemeIcon.asClassName = asClassName;\n    function asCSSSelector(icon) {\n        return '.' + asClassNameArray(icon).join('.');\n    }\n    ThemeIcon.asCSSSelector = asCSSSelector;\n    function isThemeIcon(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string' && (typeof obj.color === 'undefined' || ThemeColor.isThemeColor(obj.color));\n    }\n    ThemeIcon.isThemeIcon = isThemeIcon;\n    const _regexFromString = new RegExp(`^\\\\$\\\\((${ThemeIcon.iconNameExpression}(?:${ThemeIcon.iconModifierExpression})?)\\\\)$`);\n    function fromString(str) {\n        const match = _regexFromString.exec(str);\n        if (!match) {\n            return undefined;\n        }\n        const [, name] = match;\n        return { id: name };\n    }\n    ThemeIcon.fromString = fromString;\n    function fromId(id) {\n        return { id };\n    }\n    ThemeIcon.fromId = fromId;\n    function modify(icon, modifier) {\n        let id = icon.id;\n        const tildeIndex = id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            id = id.substring(0, tildeIndex);\n        }\n        if (modifier) {\n            id = `${id}~${modifier}`;\n        }\n        return { id };\n    }\n    ThemeIcon.modify = modify;\n    function getModifier(icon) {\n        const tildeIndex = icon.id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            return icon.id.substring(tildeIndex + 1);\n        }\n        return undefined;\n    }\n    ThemeIcon.getModifier = getModifier;\n    function isEqual(ti1, ti2) {\n        var _a, _b;\n        return ti1.id === ti2.id && ((_a = ti1.color) === null || _a === void 0 ? void 0 : _a.id) === ((_b = ti2.color) === null || _b === void 0 ? void 0 : _b.id);\n    }\n    ThemeIcon.isEqual = isEqual;\n})(ThemeIcon || (ThemeIcon = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    return (typeof str === 'string');\n}\n/**\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * @returns whether the provided parameter is of type `Buffer` or Uint8Array dervived type\n */\nexport function isTypedArray(obj) {\n    const TypedArray = Object.getPrototypeOf(Uint8Array);\n    return typeof obj === 'object'\n        && obj instanceof TypedArray;\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return (obj === true || obj === false);\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined(arg) {\n    return !isUndefinedOrNull(arg);\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nexport function assertType(condition, type) {\n    if (!condition) {\n        throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n    }\n}\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined(arg) {\n    if (isUndefinedOrNull(arg)) {\n        throw new Error('Assertion Failed: argument is undefined or null');\n    }\n    return arg;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return (typeof obj === 'function');\n}\nexport function validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(`argument does not match constraint: typeof ${constraint}`);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* Constants.MAX_UINT_8 */) {\n        return 255 /* Constants.MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* Constants.MAX_UINT_32 */) {\n        return 4294967295 /* Constants.MAX_UINT_32 */;\n    }\n    return v | 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as paths from './path.js';\nimport { isWindows } from './platform.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI {\n    static isUri(thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'string'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    }\n    /**\n     * @internal\n     */\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    // ---- filesystem path -----------------------\n    /**\n     * Returns a string representing the corresponding file system path of this URI.\n     * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n     * platform specific path separator.\n     *\n     * * Will *not* validate the path for invalid characters and semantics.\n     * * Will *not* look at the scheme of this URI.\n     * * The result shall *not* be used for display purposes but for accessing a file on disk.\n     *\n     *\n     * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n     * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n     *\n     * ```ts\n        const u = URI.parse('file://server/c$/folder/file.txt')\n        u.authority === 'server'\n        u.path === '/shares/c$/file.txt'\n        u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n    ```\n     *\n     * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n     * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n     * with URIs that represent files on disk (`file` scheme).\n     */\n    get fsPath() {\n        // if (this.scheme !== 'file') {\n        // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n        // }\n        return uriToFsPath(this, false);\n    }\n    // ---- modify to new -------------------------\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new Uri(scheme, authority, path, query, fragment);\n    }\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.example.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return new Uri(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new Uri(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n    }\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    static file(path) {\n        let authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new Uri('file', authority, path, _empty, _empty);\n    }\n    /**\n     * Creates new URI from uri components.\n     *\n     * Unless `strict` is `true` the scheme is defaults to be `file`. This function performs\n     * validation and should be used for untrusted uri components retrieved from storage,\n     * user input, command arguments etc\n     */\n    static from(components, strict) {\n        const result = new Uri(components.scheme, components.authority, components.path, components.query, components.fragment, strict);\n        return result;\n    }\n    /**\n     * Join a URI path with path fragments and normalizes the resulting path.\n     *\n     * @param uri The input URI.\n     * @param pathFragment The path fragment to add to the URI path.\n     * @returns The resulting URI.\n     */\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw new Error(`[UriError]: cannot call joinPath on URI without path`);\n        }\n        let newPath;\n        if (isWindows && uri.scheme === 'file') {\n            newPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n        }\n        else {\n            newPath = paths.posix.join(uri.path, ...pathFragment);\n        }\n        return uri.with({ path: newPath });\n    }\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    toString(skipEncoding = false) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        var _a, _b;\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            const result = new Uri(data);\n            result._formatted = (_a = data.external) !== null && _a !== void 0 ? _a : null;\n            result._fsPath = data._sep === _pathSepMarker ? (_b = data.fsPath) !== null && _b !== void 0 ? _b : null : null;\n            return result;\n        }\n    }\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = false) {\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: 1 /* MarshalledId.Uri */\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        //--- uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        // TODO\n        // this isn't correct and can violate the UriComponents contract but\n        // this is part of the vscode.Uri API and we shouldn't change how that\n        // works anymore\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable = {\n    [58 /* CharCode.Colon */]: '%3A', // gen-delims\n    [47 /* CharCode.Slash */]: '%2F',\n    [63 /* CharCode.QuestionMark */]: '%3F',\n    [35 /* CharCode.Hash */]: '%23',\n    [91 /* CharCode.OpenSquareBracket */]: '%5B',\n    [93 /* CharCode.CloseSquareBracket */]: '%5D',\n    [64 /* CharCode.AtSign */]: '%40',\n    [33 /* CharCode.ExclamationMark */]: '%21', // sub-delims\n    [36 /* CharCode.DollarSign */]: '%24',\n    [38 /* CharCode.Ampersand */]: '%26',\n    [39 /* CharCode.SingleQuote */]: '%27',\n    [40 /* CharCode.OpenParen */]: '%28',\n    [41 /* CharCode.CloseParen */]: '%29',\n    [42 /* CharCode.Asterisk */]: '%2A',\n    [43 /* CharCode.Plus */]: '%2B',\n    [44 /* CharCode.Comma */]: '%2C',\n    [59 /* CharCode.Semicolon */]: '%3B',\n    [61 /* CharCode.Equals */]: '%3D',\n    [32 /* CharCode.Space */]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, isPath, isAuthority) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* CharCode.a */ && code <= 122 /* CharCode.z */)\n            || (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */)\n            || (code >= 48 /* CharCode.Digit0 */ && code <= 57 /* CharCode.Digit9 */)\n            || code === 45 /* CharCode.Dash */\n            || code === 46 /* CharCode.Period */\n            || code === 95 /* CharCode.Underline */\n            || code === 126 /* CharCode.Tilde */\n            || (isPath && code === 47 /* CharCode.Slash */)\n            || (isAuthority && code === 91 /* CharCode.OpenSquareBracket */)\n            || (isAuthority && code === 93 /* CharCode.CloseSquareBracket */)\n            || (isAuthority && code === 58 /* CharCode.Colon */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === 35 /* CharCode.Hash */ || code === 63 /* CharCode.QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* CharCode.Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* CharCode.A */ && uri.path.charCodeAt(1) <= 90 /* CharCode.Z */ || uri.path.charCodeAt(1) >= 97 /* CharCode.a */ && uri.path.charCodeAt(1) <= 122 /* CharCode.z */)\n        && uri.path.charCodeAt(2) === 58 /* CharCode.Colon */) {\n        if (!keepDriveLetterCasing) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.lastIndexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false, false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false, true);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.lastIndexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false, true);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false, true);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* CharCode.Slash */ && path.charCodeAt(2) === 58 /* CharCode.Colon */) {\n            const code = path.charCodeAt(1);\n            if (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* CharCode.Colon */) {\n            const code = path.charCodeAt(0);\n            if (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true, false);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false, false) : fragment;\n    }\n    return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (_a) {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","export const generateUuid = (function () {\n    // use `randomUUID` if possible\n    if (typeof crypto === 'object' && typeof crypto.randomUUID === 'function') {\n        return crypto.randomUUID.bind(crypto);\n    }\n    // use `randomValues` if possible\n    let getRandomValues;\n    if (typeof crypto === 'object' && typeof crypto.getRandomValues === 'function') {\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    else {\n        getRandomValues = function (bucket) {\n            for (let i = 0; i < bucket.length; i++) {\n                bucket[i] = Math.floor(Math.random() * 256);\n            }\n            return bucket;\n        };\n    }\n    // prep-work\n    const _data = new Uint8Array(16);\n    const _hex = [];\n    for (let i = 0; i < 256; i++) {\n        _hex.push(i.toString(16).padStart(2, '0'));\n    }\n    return function generateUuid() {\n        // get data\n        getRandomValues(_data);\n        // set version bits\n        _data[6] = (_data[6] & 0x0f) | 0x40;\n        _data[8] = (_data[8] & 0x3f) | 0x80;\n        // print as string\n        let i = 0;\n        let result = '';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        return result;\n    };\n})();\n"],"names":["Mimes","Object","freeze","text","binary","unknown","markdown","latex","uriList","ArrayNavigator","items","start","arguments","length","undefined","end","index","_classCallCheck","this","_createClass","key","value","Math","min","current","max","Schemas","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","file","mailto","untitled","data","command","vscodeRemote","vscodeRemoteResource","vscodeManagedRemoteResource","vscodeUserData","vscodeCustomEditor","vscodeNotebookCell","vscodeNotebookCellMetadata","vscodeNotebookCellOutput","vscodeInteractiveInput","vscodeSettings","vscodeWorkspaceTrust","vscodeTerminal","vscodeChatSesssion","webviewPanel","vscodeWebview","extension","vscodeFileResource","tmp","vsls","vscodeSourceControl","RemoteAuthorities","RemoteAuthoritiesImpl","_hosts","create","_ports","_connectionTokens","_preferredWebSchema","_delegate","_remoteResourcesPath","concat","schema","uri","err","errors","authority","host","indexOf","port","connectionToken","query","encodeURIComponent","path","URI","from","scheme","platform","FileAccessImpl","rewrite","origin","FALLBACK_AUTHORITY","with","fragment","COI","FileAccess","coiHeaders","Map","CoopAndCoep","get","coiSearchParamName","getHeadersFromQuery","url","params","URL","searchParams","isUri","toString","addSearchParam","urlOrSearch","coop","coep","globalThis","crossOriginIsolated","URLSearchParams","set","clamp","MovingAverage","_n","_val","SlidingWindowAverage","size","_values","_index","_sum","Array","fill","oldValue","deepClone","obj","RegExp","result","isArray","entries","forEach","_ref","_ref2","_slicedToArray","deepFreeze","stack","shift","_hasOwnProperty","call","prop","isFrozen","isTypedArray","push","prototype","hasOwnProperty","cloneAndChange","changer","_cloneAndChange","Set","seen","isUndefinedOrNull","changed","_step","r1","_iterator","_createForOfIteratorHelper","s","n","done","e","f","isObject","has","Error","add","r2","i2","delete","mixin","destination","source","overwrite","keys","equals","one","other","i","oneKeys","sort","otherKeys","getAllMethodNames","_step2","methods","_iterator2","res","getOwnPropertyNames","getPrototypeOf","getAllPropertyNames","createProxyObject","methodNames","invoke","_step3","createProxyMethod","method","args","slice","_iterator3","methodName","globalObservableLogger","getLogger","_derived","ConvenientObservable","reader","readObservable","fnOrOwner","fnOrUndefined","_this","owner","fn","debugName","name","getFunctionName","match","exec","read","BaseObservable","_ConvenientObservable","_inherits","_super","_createSuper","_this2","apply","observers","observer","len","onFirstObserverAdded","onLastObserverRemoved","transaction","getDebugName","tx","TransactionImpl","finish","subtransaction","_fn","_getDebugName","_a","updatingObservers","handleBeginTransaction","observable","beginUpdate","_step$value","endUpdate","handleEndTransaction","debugNameFn","self","fnSrc","trim","observableValue","nameOrOwner","initialValue","ObservableValue","_BaseObservable","_super2","_owner","_debugName","_this3","_value","change","_this4","_tx","_setValue","handleObservableChanged","newValue","didChange","hadValue","updateObserver","handleChange","disposableObservableValue","DisposableObservableValue","_ObservableValue","_super3","dispose","defaultEqualityComparer","a","b","derived","computeFnOrOwner","computeFn","Derived","derivedOpts","options","equalityComparer","derivedHandleChanges","createEmptyChangeSummary","derivedWithStore","computeFnOrUndefined","store","DisposableStore","r","clear","_setDerivedOpts","_computeFn","createChangeSummary","_handleChange","_b","_handleLastObserverRemoved","_equalityComparator","state","updateCount","dependencies","dependenciesToBeRemoved","changeSummary","_assertThisInitialized","handleDerivedCreated","removeObserver","reportChanges","_recomputeIfNeeded","emptySet","handleDerivedRecomputed","_step4","_iterator4","_observable","propagateBeginUpdate","_step5","_iterator5","handlePossibleChange","_step6","_iterator6","_step7","_toConsumableArray","_iterator7","BugIndicatingError","_step8","_iterator8","shouldReact","changedObservable","o","wasUpToDate","_step9","_iterator9","addObserver","shouldCallBeginUpdate","_get","_getPrototypeOf","shouldCallEndUpdate","autorunOpts","AutorunObserver","autorun","autorunHandleChanges","autorunWithStore","disposable","toDisposable","_runFn","disposed","handleAutorunCreated","_runIfNeeded","trackDisposable","markAsDisposed","_c","handleAutorunTriggered","handleAutorunFinished","assertFn","constObservable","ConstObservable","Observer","waitForState","predicate","Promise","resolve","didRun","shouldDispose","d","currentState","observableFromEvent","event","getValue","FromEventObservable","_getValue","hasValue","handleEvent","handleFromEventObservableTriggered","subscription","observableSignalFromEvent","FromEventObservableSignal","_BaseObservable2","observableSignal","debugNameOrOwner","ObservableSignal","_BaseObservable3","_super4","_this5","trigger","recomputeInitiallyAndOnChange","KeepAliveObserver","forceRecompute","counter","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","ErrorInvalidArgType","_Error","expected","actual","determiner","replace","type","msg","code","_wrapNativeSuper","validateString","platformIsWin32","process","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","allowAboveRoot","separator","lastSegmentLength","lastSlash","dots","charCodeAt","lastSlashIndex","lastIndexOf","_format","sep","pathObject","validateObject","dir","root","base","ext","win32","resolvedDevice","resolvedTail","resolvedAbsolute","toLowerCase","rootEnd","device","isAbsolute","j","last","firstPart","normalize","tail","join","joined","arg","needsReplace","slashCount","firstLen","relative","to","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","out","toNamespacedPath","resolvedPath","dirname","offset","matchedSlash","basename","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","bind","parse","ret","delimiter","posix","posixCwd","regexp","cwd","trailingSeparator","hasRoot","LANGUAGE_DEFAULT","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_isMobile","_language","_userAgent","globals","global","nodeProcess","isElectronProcess","versions","electron","isElectronRenderer","navigator","env","rawNlsConfig","nlsConfig","JSON","resolved","availableLanguages","locale","osLocale","_translationsConfigFile","console","error","userAgent","maxTouchPoints","nls","comment","language","isWindows","isMacintosh","isLinux","isNative","isWeb","isWebWorker","importScripts","isIOS","isMobile","setTimeout0IsFaster","postMessage","setTimeout0","pending","addEventListener","vscodeScheduleAsyncWork","candidate","id","splice","callback","lastId","myId","setTimeout","OS","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","test","Uint8Array","view","Uint16Array","buffer","isChrome","isFirefox","isSafari","isEdge","safeProcess","sandboxProcess","arch","Range","intersect","isEmpty","range","intersects","relativeComplement","first","second","originalFSPath","uriToFsPath","DataUri","ExtUri","_ignorePathCasing","uri1","uri2","ignoreFragment","strCompare","getComparisonKey","parentCandidate","extpath","isEqualAuthority","resource","_len","pathFragment","_key","joinPath","paths","normalizedPath","relativePath","fromPath","toPath","charAt","substr","newURI","a1","a2","equalsIgnoreCase","fsp","p","fsPath","hasTrailingPathSeparator","isRootSep","extUri","isEqual","_","basenameOrAuthority","isEqualOrParent","normalizePath","resolvePath","isAbsolutePath","removeTrailingPathSeparator","addTrailingPathSeparator","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","metadata","substring","split","property","_property$split","_property$split2","mime","ScrollState","_forceIntegerValues","width","scrollWidth","scrollLeft","height","scrollHeight","scrollTop","_scrollStateBrand","rawScrollLeft","rawScrollTop","update","useRawScrollPositions","previous","inSmoothScrolling","widthChanged","scrollWidthChanged","scrollLeftChanged","heightChanged","scrollHeightChanged","scrollTopChanged","oldWidth","oldScrollWidth","oldScrollLeft","oldHeight","oldScrollHeight","oldScrollTop","Scrollable","_Disposable","_scrollableBrand","_onScroll","_register","Emitter","onScroll","_smoothScrollDuration","smoothScrollDuration","_scheduleAtNextAnimationFrame","scheduleAtNextAnimationFrame","_state","forceIntegerValues","_smoothScrolling","scrollPosition","withScrollPosition","dimensions","newState","withScrollDimensions","_setState","Boolean","acceptScrollDimensions","reuseAnimation","setScrollPositionNow","newSmoothScrolling","validTarget","SmoothScrollingOperation","startTime","duration","combine","animationFrameDisposable","_performSmoothScrolling","tick","isDone","oldState","fire","createScrollEvent","Disposable","SmoothScrollingUpdate","createEaseOutCubic","delta","completion","t","pow","easeInCubic","_initAnimations","_initAnimation","viewportSize","stop1","stop2","cut","abs","_tick","Date","now","newScrollLeft","newScrollTop","buildReplaceStringWithCasePreserved","matches","pattern","containsHyphens","validateSpecificSpecialCharacter","containsUnderscores","buildReplaceStringForSpecificSpecialCharacter","toUpperCase","strings","specialCharacter","splitPatternAtSpecialCharacter","splitMatchAtSpecialCharacter","replaceString","splitValue","Severity","_error","_warning","_info","fromValue","Warning","Info","Ignore","severity","hasPerformanceNow","performance","StopWatch","highResolution","_now","_startTime","_stopTime","isFalsyOrWhitespace","str","_formatRegexp","group","idx","parseInt","isNaN","escape","html","escapeRegExpCharacters","haystack","needle","rtrim","ltrim","needleLen","haystackLen","convertSimple2RegExpPattern","stripWildcards","createRegExp","searchString","isRegex","wholeWord","modifiers","matchCase","multiline","unicode","regExpLeadsToEndlessLoop","lastIndex","splitLines","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","compare","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareIgnoreCase","compareSubstringIgnoreCase","isLowerAsciiLetter","diff","isAsciiDigit","isUpperAsciiLetter","startsWithIgnoreCase","candidateLength","commonPrefixLength","commonSuffixLength","aLastIndex","bLastIndex","isHighSurrogate","charCode","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","nextCharCode","CodePointIterator","_str","_offset","codePoint","prevCharCode","getPrevCodePoint","GraphemeIterator","graphemeBreakTree","GraphemeBreakTree","getInstance","iterator","initialOffset","graphemeBreakType","getGraphemeBreakType","nextCodePoint","eol","nextGraphemeBreakType","breakBetweenGraphemeBreakType","setOffset","prevCodePoint","prevGraphemeBreakType","nextCharLength","nextGraphemeLength","prevCharLength","prevGraphemeLength","getCharContainingOffset","endOffset","CONTAINS_RTL","containsRTL","IS_BASIC_ASCII","isBasicASCII","UNUSUAL_LINE_TERMINATORS","containsUnusualLineTerminators","isFullWidthCharacter","isEmojiImprecise","x","UTF8_BOM_CHARACTER","String","fromCharCode","startsWithUTF8BOM","containsUppercaseCharacter","target","singleLetterHash","breakTypeA","breakTypeB","_data","nodeCount","nodeIndex","_INSTANCE","getLeftDeleteOffset","emojiOffset","isEmojiModifier","resultOffset","getOffsetBeforeLastEmojiComponent","noBreakWhitespace","AmbiguousCharacters","confusableDictionary","locales","cache","_locales","ambiguousCharacterData","Lazy","LRUCachedFunction","arrayToMap","arr","intersectMaps","map1","map2","_step2$value","filteredLocales","filter","l","startsWith","languageSpecificMap","map","mergeMaps","k","InvisibleCharacters","getRawData","getData","MicrotaskDelay","Symbol","StringIterator","_pos","ConfigKeysIterator","_caseSensitive","_from","_to","next","justSeps","PathIterator","_splitOnBackslash","_valueLen","pos","ch","UriIterator","_ignoreQueryAndFragment","_states","_stateIdx","_pathIterator","reset","hasNext","cmp","TernarySearchTreeNode","right","left","updateHeight","heightLeft","heightRight","TernarySearchTree","_Symbol$iterator","segments","_iter","_root","element","node","iter","segment","val","mid","oldElement","bf","balanceFactor","d1","d2","rotateLeft","rotateRight","_getNode","_delete","superStr","_min","newChild","_stack","parent","_findSuperstrOrElement","allowValue","_entries","_regeneratorRuntime","mark","wrap","_context","prev","delegateYield","stop","_dfsEntries","bucket","TfIdfCalculator","chunkCount","chunkOccurrences","documents","token","embedding","computeEmbedding","idfCache","scores","doc","isCancellationRequested","chunks","chunk","score","computeSimilarityScore","deleteDocument","textChunks","tf","termFrequencies","term","currentOccurrences","newOccurrences","queryEmbedding","sum","_i","_Object$entries","_Object$entries$_i","termTfidf","chunkTf","chunkIdf","computeIdf","input","computeTfidf","log","_step10","_iterator10","_step10$value","word","occurrences","idf","values","countMapFrom","splitTerms","_iterator11","_step11","_step11$value","camelParts","_iterator12","_step12","part","matchAll","t0","t1","normalizeTfIdfScores","_step13","_iterator13","ThemeColor","ThemeIcon","isThemeColor","iconNameSegment","iconNameExpression","iconModifierExpression","iconNameCharacter","ThemeIconIdRegex","asClassNameArray","icon","Codicon","_match","modifier","classNames","asClassName","asCSSSelector","isThemeIcon","color","_regexFromString","fromString","fromId","modify","tildeIndex","getModifier","ti1","ti2","isString","TypedArray","isNumber","isIterable","isBoolean","isUndefined","isDefined","assertType","condition","assertIsDefined","isFunction","validateConstraints","constraints","validateConstraint","constraint","constructor","toUint8","v","toUint32","_schemePattern","_singleSlashStart","_doubleSlashStart","_empty","_slash","_regexp","schemeOrData","_strict","_schemeFix","_referenceResolution","_validateUri","Uri","_asFormatted","thing","percentDecode","components","strict","newPath","_paths$win","_paths$posix","_formatted","external","_fsPath","_sep","_pathSepMarker","_URI","$mid","encodeTable","_encodeTable","_defineProperty","encodeURIComponentFast","uriComponent","isPath","isAuthority","nativeEncodePos","escaped","encodeURIComponentMinimal","keepDriveLetterCasing","skipEncoding","encoder","userinfo","decodeURIComponentGraceful","decodeURIComponent","_rEncodedAsHex","generateUuid","crypto","randomUUID","getRandomValues","floor","random","_hex","padStart"],"sourceRoot":""}