"use strict";(self.webpackChunkmonaco_editor_nginx=self.webpackChunkmonaco_editor_nginx||[]).push([[7476],{67048:(t,e,n)=>{n.d(e,{K:()=>r});const r=Object.freeze({text:"text/plain",binary:"application/octet-stream",unknown:"application/unknown",markdown:"text/markdown",latex:"text/latex",uriList:"text/uri-list"})},96003:(t,e,n)=>{n.d(e,{N:()=>r});class r{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t.length,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:e-1;this.items=t,this.start=e,this.end=n,this.index=r}current(){return this.index===this.start-1||this.index===this.end?null:this.items[this.index]}next(){return this.index=Math.min(this.index+1,this.end),this.current()}previous(){return this.index=Math.max(this.index-1,this.start-1),this.current()}first(){return this.index=this.start,this.current()}last(){return this.index=this.end-1,this.current()}}},15424:(t,e,n)=>{n.d(e,{Ez:()=>h,ny:()=>r,zl:()=>c});var r,s=n(62951),i=n(51611),o=n(55456);!function(t){t.inMemory="inmemory",t.vscode="vscode",t.internal="private",t.walkThrough="walkThrough",t.walkThroughSnippet="walkThroughSnippet",t.http="http",t.https="https",t.file="file",t.mailto="mailto",t.untitled="untitled",t.data="data",t.command="command",t.vscodeRemote="vscode-remote",t.vscodeRemoteResource="vscode-remote-resource",t.vscodeManagedRemoteResource="vscode-managed-remote-resource",t.vscodeUserData="vscode-userdata",t.vscodeCustomEditor="vscode-custom-editor",t.vscodeNotebookCell="vscode-notebook-cell",t.vscodeNotebookCellMetadata="vscode-notebook-cell-metadata",t.vscodeNotebookCellOutput="vscode-notebook-cell-output",t.vscodeInteractiveInput="vscode-interactive-input",t.vscodeSettings="vscode-settings",t.vscodeWorkspaceTrust="vscode-workspace-trust",t.vscodeTerminal="vscode-terminal",t.vscodeChatSesssion="vscode-chat-editor",t.webviewPanel="webview-panel",t.vscodeWebview="vscode-webview",t.extension="extension",t.vscodeFileResource="vscode-file",t.tmp="tmp",t.vsls="vsls",t.vscodeSourceControl="vscode-scm"}(r||(r={}));const h=new class{constructor(){this._hosts=Object.create(null),this._ports=Object.create(null),this._connectionTokens=Object.create(null),this._preferredWebSchema="http",this._delegate=null,this._remoteResourcesPath="/".concat(r.vscodeRemoteResource)}setPreferredWebSchema(t){this._preferredWebSchema=t}rewrite(t){if(this._delegate)try{return this._delegate(t)}catch(l){return s.dz(l),t}const e=t.authority;let n=this._hosts[e];n&&-1!==n.indexOf(":")&&-1===n.indexOf("[")&&(n="[".concat(n,"]"));const h=this._ports[e],a=this._connectionTokens[e];let c="path=".concat(encodeURIComponent(t.path));return"string"===typeof a&&(c+="&".concat("tkn","=").concat(encodeURIComponent(a))),o.r.from({scheme:i.HZ?this._preferredWebSchema:r.vscodeRemoteResource,authority:"".concat(n,":").concat(h),path:this._remoteResourcesPath,query:c})}};class a{uriToBrowserUri(t){return t.scheme===r.vscodeRemote?h.rewrite(t):t.scheme===r.file&&(i.ib||i.p7&&i.zQ.origin==="".concat(r.vscodeFileResource,"://").concat(a.FALLBACK_AUTHORITY))?t.with({scheme:r.vscodeFileResource,authority:t.authority||a.FALLBACK_AUTHORITY,query:null,fragment:null}):t}}a.FALLBACK_AUTHORITY="vscode-app";const c=new a;var l;!function(t){const e=new Map([["1",{"Cross-Origin-Opener-Policy":"same-origin"}],["2",{"Cross-Origin-Embedder-Policy":"require-corp"}],["3",{"Cross-Origin-Opener-Policy":"same-origin","Cross-Origin-Embedder-Policy":"require-corp"}]]);t.CoopAndCoep=Object.freeze(e.get("3"));const n="vscode-coi";t.getHeadersFromQuery=function(t){let r;"string"===typeof t?r=new URL(t).searchParams:t instanceof URL?r=t.searchParams:o.r.isUri(t)&&(r=new URL(t.toString(!0)).searchParams);const s=null===r||void 0===r?void 0:r.get(n);if(s)return e.get(s)},t.addSearchParam=function(t,e,r){if(!globalThis.crossOriginIsolated)return;const s=e&&r?"3":r?"2":"1";t instanceof URLSearchParams?t.set(n,s):t[n]=s}}(l||(l={}))},84640:(t,e,n)=>{function r(t,e,n){return Math.min(Math.max(t,e),n)}n.d(e,{Uq:()=>s,mu:()=>i,qE:()=>r});class s{constructor(){this._n=1,this._val=0}update(t){return this._val=this._val+(t-this._val)/this._n,this._n+=1,this._val}get value(){return this._val}}class i{constructor(t){this._n=0,this._val=0,this._values=[],this._index=0,this._sum=0,this._values=new Array(t),this._values.fill(0,0,t)}update(t){const e=this._values[this._index];return this._values[this._index]=t,this._index=(this._index+1)%this._values.length,this._sum-=e,this._sum+=t,this._n<this._values.length&&(this._n+=1),this._val=this._sum/this._n,this._val}get value(){return this._val}}},70474:(t,e,n)=>{n.d(e,{Go:()=>s,PI:()=>h,V0:()=>u,aI:()=>l,co:()=>c,kT:()=>d,ol:()=>i});var r=n(25935);function s(t){if(!t||"object"!==typeof t)return t;if(t instanceof RegExp)return t;const e=Array.isArray(t)?[]:{};return Object.entries(t).forEach((t=>{let[n,r]=t;e[n]=r&&"object"===typeof r?s(r):r})),e}function i(t){if(!t||"object"!==typeof t)return t;const e=[t];for(;e.length>0;){const t=e.shift();Object.freeze(t);for(const n in t)if(o.call(t,n)){const s=t[n];"object"!==typeof s||Object.isFrozen(s)||(0,r.iu)(s)||e.push(s)}}return t}const o=Object.prototype.hasOwnProperty;function h(t,e){return a(t,e,new Set)}function a(t,e,n){if((0,r.z)(t))return t;const s=e(t);if("undefined"!==typeof s)return s;if(Array.isArray(t)){const r=[];for(const s of t)r.push(a(s,e,n));return r}if((0,r.Gv)(t)){if(n.has(t))throw new Error("Cannot clone recursive data-structure");n.add(t);const r={};for(const s in t)o.call(t,s)&&(r[s]=a(t[s],e,n));return n.delete(t),r}return t}function c(t,e){let n=!(arguments.length>2&&void 0!==arguments[2])||arguments[2];return(0,r.Gv)(t)?((0,r.Gv)(e)&&Object.keys(e).forEach((s=>{s in t?n&&((0,r.Gv)(t[s])&&(0,r.Gv)(e[s])?c(t[s],e[s],n):t[s]=e[s]):t[s]=e[s]})),t):e}function l(t,e){if(t===e)return!0;if(null===t||void 0===t||null===e||void 0===e)return!1;if(typeof t!==typeof e)return!1;if("object"!==typeof t)return!1;if(Array.isArray(t)!==Array.isArray(e))return!1;let n,r;if(Array.isArray(t)){if(t.length!==e.length)return!1;for(n=0;n<t.length;n++)if(!l(t[n],e[n]))return!1}else{const s=[];for(r in t)s.push(r);s.sort();const i=[];for(r in e)i.push(r);if(i.sort(),!l(s,i))return!1;for(n=0;n<s.length;n++)if(!l(t[s[n]],e[s[n]]))return!1}return!0}function u(t){const e=[];for(const n of function(t){let e=[];for(;Object.prototype!==t;)e=e.concat(Object.getOwnPropertyNames(t)),t=Object.getPrototypeOf(t);return e}(t))"function"===typeof t[n]&&e.push(n);return e}function d(t,e){const n=t=>function(){const n=Array.prototype.slice.call(arguments,0);return e(t,n)},r={};for(const s of t)r[s]=n(s);return r}},22280:(t,e,n)=>{let r,s;function i(){return r}n.d(e,{fm:()=>T,Y:()=>D,zL:()=>O,yC:()=>E,lk:()=>L,un:()=>C,nb:()=>w,C:()=>y,rm:()=>A,X2:()=>p,y0:()=>F,Yd:()=>B,yQ:()=>R,FY:()=>f,OI:()=>z,PO:()=>c,Rn:()=>a,oJ:()=>k});class o{get TChange(){return null}reportChanges(){this.get()}read(t){return t?t.readObservable(this):this.get()}map(t,e){const n=void 0===e?void 0:t,r=void 0===e?t:e;return s({owner:n,debugName:()=>{const t=d(r);if(void 0!==t)return t;const e=/^\s*\(?\s*([a-zA-Z_$][a-zA-Z_$0-9]*)\s*\)?\s*=>\s*\1\.([a-zA-Z_$][a-zA-Z_$0-9]*)\s*$/.exec(r.toString());return e?"".concat(this.debugName,".").concat(e[2]):n?void 0:"".concat(this.debugName," (mapped)")}},(t=>r(this.read(t),t)))}}class h extends o{constructor(){super(...arguments),this.observers=new Set}addObserver(t){const e=this.observers.size;this.observers.add(t),0===e&&this.onFirstObserverAdded()}removeObserver(t){this.observers.delete(t)&&0===this.observers.size&&this.onLastObserverRemoved()}onFirstObserverAdded(){}onLastObserverRemoved(){}}function a(t,e){const n=new l(t,e);try{t(n)}finally{n.finish()}}function c(t,e,n){t?e(t):a(e,n)}class l{constructor(t,e){var n;this._fn=t,this._getDebugName=e,this.updatingObservers=[],null===(n=i())||void 0===n||n.handleBeginTransaction(this)}getDebugName(){return this._getDebugName?this._getDebugName():d(this._fn)}updateObserver(t,e){this.updatingObservers.push({observer:t,observable:e}),t.beginUpdate(e)}finish(){var t;const e=this.updatingObservers;this.updatingObservers=null;for(const{observer:n,observable:r}of e)n.endUpdate(r);null===(t=i())||void 0===t||t.handleEndTransaction()}}function u(t,e,n,r){let s;if(void 0!==t){if("function"!==typeof t)return t;if(s=t(),void 0!==s)return s}if(void 0!==e&&(s=d(e),void 0!==s))return s;if(void 0!==n)for(const i in n)if(n[i]===r)return i}function d(t){const e=t.toString(),n=/\/\*\*\s*@description\s*([^*]*)\*\//.exec(e),r=n?n[1]:void 0;return null===r||void 0===r?void 0:r.trim()}function f(t,e){return"string"===typeof t?new g(void 0,t,e):new g(t,void 0,e)}class g extends h{get debugName(){var t;return null!==(t=u(this._debugName,void 0,this._owner,this))&&void 0!==t?t:"ObservableValue"}constructor(t,e,n){super(),this._owner=t,this._debugName=e,this._value=n}get(){return this._value}set(t,e,n){var r;if(this._value===t)return;let s;e||(e=s=new l((()=>{}),(()=>"Setting ".concat(this.debugName))));try{const s=this._value;this._setValue(t),null===(r=i())||void 0===r||r.handleObservableChanged(this,{oldValue:s,newValue:t,change:n,didChange:!0,hadValue:!0});for(const t of this.observers)e.updateObserver(t,this),t.handleChange(this,n)}finally{s&&s.finish()}}toString(){return"".concat(this.debugName,": ").concat(this._value)}_setValue(t){this._value=t}}function p(t,e){return"string"===typeof t?new m(void 0,t,e):new m(t,void 0,e)}class m extends g{_setValue(t){this._value!==t&&(this._value&&this._value.dispose(),this._value=t)}dispose(){var t;null===(t=this._value)||void 0===t||t.dispose()}}var v=n(62951),_=n(58662);const b=(t,e)=>t===e;function C(t,e){return void 0!==e?new S(t,void 0,e,void 0,void 0,void 0,b):new S(void 0,void 0,t,void 0,void 0,void 0,b)}function y(t,e){var n;return new S(t.owner,t.debugName,e,void 0,void 0,void 0,null!==(n=t.equalityComparer)&&void 0!==n?n:b)}function w(t,e){var n;return new S(t.owner,t.debugName,e,t.createEmptyChangeSummary,t.handleChange,void 0,null!==(n=t.equalityComparer)&&void 0!==n?n:b)}function A(t,e){let n,r;void 0===e?(n=t,r=void 0):(r=t,n=e);const s=new _.Cm;return new S(r,(()=>{var t;return null!==(t=d(n))&&void 0!==t?t:"(anonymous)"}),(t=>(s.clear(),n(t,s))),void 0,void 0,(()=>s.dispose()),b)}!function(t){s=t}(C);class S extends h{get debugName(){var t;return null!==(t=u(this._debugName,this._computeFn,this._owner,this))&&void 0!==t?t:"(anonymous)"}constructor(t,e,n,r,s){let o=arguments.length>5&&void 0!==arguments[5]?arguments[5]:void 0,h=arguments.length>6?arguments[6]:void 0;var a,c;super(),this._owner=t,this._debugName=e,this._computeFn=n,this.createChangeSummary=r,this._handleChange=s,this._handleLastObserverRemoved=o,this._equalityComparator=h,this.state=0,this.value=void 0,this.updateCount=0,this.dependencies=new Set,this.dependenciesToBeRemoved=new Set,this.changeSummary=void 0,this.changeSummary=null===(a=this.createChangeSummary)||void 0===a?void 0:a.call(this),null===(c=i())||void 0===c||c.handleDerivedCreated(this)}onLastObserverRemoved(){var t;this.state=0,this.value=void 0;for(const e of this.dependencies)e.removeObserver(this);this.dependencies.clear(),null===(t=this._handleLastObserverRemoved)||void 0===t||t.call(this)}get(){var t;if(0===this.observers.size){const e=this._computeFn(this,null===(t=this.createChangeSummary)||void 0===t?void 0:t.call(this));return this.onLastObserverRemoved(),e}do{if(1===this.state)for(const t of this.dependencies)if(t.reportChanges(),2===this.state)break;1===this.state&&(this.state=3),this._recomputeIfNeeded()}while(3!==this.state);return this.value}_recomputeIfNeeded(){var t,e;if(3===this.state)return;const n=this.dependenciesToBeRemoved;this.dependenciesToBeRemoved=this.dependencies,this.dependencies=n;const r=0!==this.state,s=this.value;this.state=3;const o=this.changeSummary;this.changeSummary=null===(t=this.createChangeSummary)||void 0===t?void 0:t.call(this);try{this.value=this._computeFn(this,o)}finally{for(const t of this.dependenciesToBeRemoved)t.removeObserver(this);this.dependenciesToBeRemoved.clear()}const h=r&&!this._equalityComparator(s,this.value);if(null===(e=i())||void 0===e||e.handleDerivedRecomputed(this,{oldValue:s,newValue:this.value,change:void 0,didChange:h,hadValue:r}),h)for(const i of this.observers)i.handleChange(this,void 0)}toString(){return"LazyDerived<".concat(this.debugName,">")}beginUpdate(t){this.updateCount++;const e=1===this.updateCount;if(3===this.state&&(this.state=1,!e))for(const n of this.observers)n.handlePossibleChange(this);if(e)for(const n of this.observers)n.beginUpdate(this)}endUpdate(t){if(this.updateCount--,0===this.updateCount){const t=[...this.observers];for(const e of t)e.endUpdate(this)}if(this.updateCount<0)throw new v.D7}handlePossibleChange(t){if(3===this.state&&this.dependencies.has(t)&&!this.dependenciesToBeRemoved.has(t)){this.state=1;for(const t of this.observers)t.handlePossibleChange(this)}}handleChange(t,e){if(this.dependencies.has(t)&&!this.dependenciesToBeRemoved.has(t)){const n=!this._handleChange||this._handleChange({changedObservable:t,change:e,didChange:e=>e===t},this.changeSummary),r=3===this.state;if(n&&(1===this.state||r)&&(this.state=2,r))for(const t of this.observers)t.handlePossibleChange(this)}}readObservable(t){t.addObserver(this);const e=t.get();return this.dependencies.add(t),this.dependenciesToBeRemoved.delete(t),e}addObserver(t){const e=!this.observers.has(t)&&this.updateCount>0;super.addObserver(t),e&&t.beginUpdate(this)}removeObserver(t){const e=this.observers.has(t)&&this.updateCount>0;super.removeObserver(t),e&&t.endUpdate(this)}}var x=n(17910);function O(t,e){return new P(t.debugName,e,void 0,void 0)}function T(t){return new P(void 0,t,void 0,void 0)}function D(t,e){return new P(t.debugName,e,t.createEmptyChangeSummary,t.handleChange)}function E(t){const e=new _.Cm,n=O({debugName:()=>d(t)||"(anonymous)"},(n=>{e.clear(),t(n,e)}));return(0,_.s)((()=>{n.dispose(),e.dispose()}))}class P{get debugName(){if("string"===typeof this._debugName)return this._debugName;if("function"===typeof this._debugName){const t=this._debugName();if(void 0!==t)return t}const t=d(this._runFn);return void 0!==t?t:"(anonymous)"}constructor(t,e,n,r){var s,o;this._debugName=t,this._runFn=e,this.createChangeSummary=n,this._handleChange=r,this.state=2,this.updateCount=0,this.disposed=!1,this.dependencies=new Set,this.dependenciesToBeRemoved=new Set,this.changeSummary=null===(s=this.createChangeSummary)||void 0===s?void 0:s.call(this),null===(o=i())||void 0===o||o.handleAutorunCreated(this),this._runIfNeeded(),(0,_.Ay)(this)}dispose(){this.disposed=!0;for(const t of this.dependencies)t.removeObserver(this);this.dependencies.clear(),(0,_.VD)(this)}_runIfNeeded(){var t,e,n;if(3===this.state)return;const r=this.dependenciesToBeRemoved;this.dependenciesToBeRemoved=this.dependencies,this.dependencies=r,this.state=3;try{if(!this.disposed){null===(t=i())||void 0===t||t.handleAutorunTriggered(this);const n=this.changeSummary;this.changeSummary=null===(e=this.createChangeSummary)||void 0===e?void 0:e.call(this),this._runFn(this,n)}}finally{null===(n=i())||void 0===n||n.handleAutorunFinished(this);for(const t of this.dependenciesToBeRemoved)t.removeObserver(this);this.dependenciesToBeRemoved.clear()}}toString(){return"Autorun<".concat(this.debugName,">")}beginUpdate(){3===this.state&&(this.state=1),this.updateCount++}endUpdate(){if(1===this.updateCount)do{if(1===this.state){this.state=3;for(const t of this.dependencies)if(t.reportChanges(),2===this.state)break}this._runIfNeeded()}while(3!==this.state);this.updateCount--,(0,x.Ft)((()=>this.updateCount>=0))}handlePossibleChange(t){3===this.state&&this.dependencies.has(t)&&!this.dependenciesToBeRemoved.has(t)&&(this.state=1)}handleChange(t,e){if(this.dependencies.has(t)&&!this.dependenciesToBeRemoved.has(t)){(!this._handleChange||this._handleChange({changedObservable:t,change:e,didChange:e=>e===t},this.changeSummary))&&(this.state=2)}}readObservable(t){if(this.disposed)return t.get();t.addObserver(this);const e=t.get();return this.dependencies.add(t),this.dependenciesToBeRemoved.delete(t),e}}function L(t){return new N(t)}!function(t){t.Observer=P}(T||(T={}));class N extends o{constructor(t){super(),this.value=t}get debugName(){return this.toString()}get(){return this.value}addObserver(t){}removeObserver(t){}toString(){return"Const: ".concat(this.value)}}function k(t,e){return new Promise((n=>{let r=!1,s=!1;const i=T((o=>{const h=t.read(o);e(h)&&(r?i.dispose():s=!0,n(h))}));r=!0,s&&i.dispose()}))}function F(t,e){return new I(t,e)}class I extends h{constructor(t,e){super(),this.event=t,this._getValue=e,this.hasValue=!1,this.handleEvent=t=>{var e;const n=this._getValue(t),r=!this.hasValue||this.value!==n;null===(e=i())||void 0===e||e.handleFromEventObservableTriggered(this,{oldValue:this.value,newValue:n,change:void 0,didChange:r,hadValue:this.hasValue}),r&&(this.value=n,this.hasValue&&a((t=>{for(const e of this.observers)t.updateObserver(e,this),e.handleChange(this,void 0)}),(()=>{const t=this.getDebugName();return"Event fired"+(t?": ".concat(t):"")})),this.hasValue=!0)}}getDebugName(){return d(this._getValue)}get debugName(){const t=this.getDebugName();return"From Event"+(t?": ".concat(t):"")}onFirstObserverAdded(){this.subscription=this.event(this.handleEvent)}onLastObserverRemoved(){this.subscription.dispose(),this.subscription=void 0,this.hasValue=!1,this.value=void 0}get(){return this.subscription?(this.hasValue||this.handleEvent(void 0),this.value):this._getValue(void 0)}}function R(t,e){return new U(t,e)}!function(t){t.Observer=I}(F||(F={}));class U extends h{constructor(t,e){super(),this.debugName=t,this.event=e,this.handleEvent=()=>{a((t=>{for(const e of this.observers)t.updateObserver(e,this),e.handleChange(this,void 0)}),(()=>this.debugName))}}onFirstObserverAdded(){this.subscription=this.event(this.handleEvent)}onLastObserverRemoved(){this.subscription.dispose(),this.subscription=void 0}get(){}}function B(t){return"string"===typeof t?new j(t):new j(void 0,t)}class j extends h{get debugName(){var t;return null!==(t=u(this._debugName,void 0,this._owner,this))&&void 0!==t?t:"Observable Signal"}constructor(t,e){super(),this._debugName=t,this._owner=e}trigger(t,e){if(t)for(const n of this.observers)t.updateObserver(n,this),n.handleChange(this,e);else a((t=>{this.trigger(t,e)}),(()=>"Trigger signal ".concat(this.debugName)))}get(){}}function z(t){const e=new M(!0);return t.addObserver(e),t.reportChanges(),(0,_.s)((()=>{t.removeObserver(e)}))}class M{constructor(t){this.forceRecompute=t,this.counter=0}beginUpdate(t){this.counter++}endUpdate(t){this.counter--,0===this.counter&&this.forceRecompute&&t.reportChanges()}handlePossibleChange(t){}handleChange(t,e){}}},9075:(t,e,n)=>{n.d(e,{IN:()=>m,LC:()=>S,P8:()=>A,S8:()=>b,SA:()=>_,V8:()=>y,Vn:()=>x,hd:()=>C,pD:()=>w});var r=n(37759);const s=46,i=47,o=92,h=58;class a extends Error{constructor(t,e,n){let r;"string"===typeof e&&0===e.indexOf("not ")?(r="must not be",e=e.replace(/^not /,"")):r="must be";const s=-1!==t.indexOf(".")?"property":"argument";let i='The "'.concat(t,'" ').concat(s," ").concat(r," of type ").concat(e);i+=". Received type ".concat(typeof n),super(i),this.code="ERR_INVALID_ARG_TYPE"}}function c(t,e){if("string"!==typeof t)throw new a(e,"string",t)}const l="win32"===r.iD;function u(t){return t===i||t===o}function d(t){return t===i}function f(t){return t>=65&&t<=90||t>=97&&t<=122}function g(t,e,n,r){let o="",h=0,a=-1,c=0,l=0;for(let u=0;u<=t.length;++u){if(u<t.length)l=t.charCodeAt(u);else{if(r(l))break;l=i}if(r(l)){if(a===u-1||1===c);else if(2===c){if(o.length<2||2!==h||o.charCodeAt(o.length-1)!==s||o.charCodeAt(o.length-2)!==s){if(o.length>2){const t=o.lastIndexOf(n);-1===t?(o="",h=0):(o=o.slice(0,t),h=o.length-1-o.lastIndexOf(n)),a=u,c=0;continue}if(0!==o.length){o="",h=0,a=u,c=0;continue}}e&&(o+=o.length>0?"".concat(n,".."):"..",h=2)}else o.length>0?o+="".concat(n).concat(t.slice(a+1,u)):o=t.slice(a+1,u),h=u-a-1;a=u,c=0}else l===s&&-1!==c?++c:c=-1}return o}function p(t,e){!function(t,e){if(null===t||"object"!==typeof t)throw new a(e,"Object",t)}(e,"pathObject");const n=e.dir||e.root,r=e.base||"".concat(e.name||"").concat(e.ext||"");return n?n===e.root?"".concat(n).concat(r):"".concat(n).concat(t).concat(r):r}const m={resolve(){let t="",e="",n=!1;for(let s=arguments.length-1;s>=-1;s--){let i;if(s>=0){if(i=s<0||arguments.length<=s?void 0:arguments[s],c(i,"path"),0===i.length)continue}else 0===t.length?i=r.bJ():(i={NODE_ENV:"production",PUBLIC_URL:"/nginx-editor",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}["=".concat(t)]||r.bJ(),(void 0===i||i.slice(0,2).toLowerCase()!==t.toLowerCase()&&i.charCodeAt(2)===o)&&(i="".concat(t,"\\")));const a=i.length;let l=0,d="",g=!1;const p=i.charCodeAt(0);if(1===a)u(p)&&(l=1,g=!0);else if(u(p))if(g=!0,u(i.charCodeAt(1))){let t=2,e=t;for(;t<a&&!u(i.charCodeAt(t));)t++;if(t<a&&t!==e){const n=i.slice(e,t);for(e=t;t<a&&u(i.charCodeAt(t));)t++;if(t<a&&t!==e){for(e=t;t<a&&!u(i.charCodeAt(t));)t++;t!==a&&t===e||(d="\\\\".concat(n,"\\").concat(i.slice(e,t)),l=t)}}}else l=1;else f(p)&&i.charCodeAt(1)===h&&(d=i.slice(0,2),l=2,a>2&&u(i.charCodeAt(2))&&(g=!0,l=3));if(d.length>0)if(t.length>0){if(d.toLowerCase()!==t.toLowerCase())continue}else t=d;if(n){if(t.length>0)break}else if(e="".concat(i.slice(l),"\\").concat(e),n=g,g&&t.length>0)break}return e=g(e,!n,"\\",u),n?"".concat(t,"\\").concat(e):"".concat(t).concat(e)||"."},normalize(t){c(t,"path");const e=t.length;if(0===e)return".";let n,r=0,s=!1;const i=t.charCodeAt(0);if(1===e)return d(i)?"\\":t;if(u(i))if(s=!0,u(t.charCodeAt(1))){let s=2,i=s;for(;s<e&&!u(t.charCodeAt(s));)s++;if(s<e&&s!==i){const o=t.slice(i,s);for(i=s;s<e&&u(t.charCodeAt(s));)s++;if(s<e&&s!==i){for(i=s;s<e&&!u(t.charCodeAt(s));)s++;if(s===e)return"\\\\".concat(o,"\\").concat(t.slice(i),"\\");s!==i&&(n="\\\\".concat(o,"\\").concat(t.slice(i,s)),r=s)}}}else r=1;else f(i)&&t.charCodeAt(1)===h&&(n=t.slice(0,2),r=2,e>2&&u(t.charCodeAt(2))&&(s=!0,r=3));let o=r<e?g(t.slice(r),!s,"\\",u):"";return 0!==o.length||s||(o="."),o.length>0&&u(t.charCodeAt(e-1))&&(o+="\\"),void 0===n?s?"\\".concat(o):o:s?"".concat(n,"\\").concat(o):"".concat(n).concat(o)},isAbsolute(t){c(t,"path");const e=t.length;if(0===e)return!1;const n=t.charCodeAt(0);return u(n)||e>2&&f(n)&&t.charCodeAt(1)===h&&u(t.charCodeAt(2))},join(){if(0===arguments.length)return".";let t,e;for(let s=0;s<arguments.length;++s){const n=s<0||arguments.length<=s?void 0:arguments[s];c(n,"path"),n.length>0&&(void 0===t?t=e=n:t+="\\".concat(n))}if(void 0===t)return".";let n=!0,r=0;if("string"===typeof e&&u(e.charCodeAt(0))){++r;const t=e.length;t>1&&u(e.charCodeAt(1))&&(++r,t>2&&(u(e.charCodeAt(2))?++r:n=!1))}if(n){for(;r<t.length&&u(t.charCodeAt(r));)r++;r>=2&&(t="\\".concat(t.slice(r)))}return m.normalize(t)},relative(t,e){if(c(t,"from"),c(e,"to"),t===e)return"";const n=m.resolve(t),r=m.resolve(e);if(n===r)return"";if((t=n.toLowerCase())===(e=r.toLowerCase()))return"";let s=0;for(;s<t.length&&t.charCodeAt(s)===o;)s++;let i=t.length;for(;i-1>s&&t.charCodeAt(i-1)===o;)i--;const h=i-s;let a=0;for(;a<e.length&&e.charCodeAt(a)===o;)a++;let l=e.length;for(;l-1>a&&e.charCodeAt(l-1)===o;)l--;const u=l-a,d=h<u?h:u;let f=-1,g=0;for(;g<d;g++){const n=t.charCodeAt(s+g);if(n!==e.charCodeAt(a+g))break;n===o&&(f=g)}if(g!==d){if(-1===f)return r}else{if(u>d){if(e.charCodeAt(a+g)===o)return r.slice(a+g+1);if(2===g)return r.slice(a+g)}h>d&&(t.charCodeAt(s+g)===o?f=g:2===g&&(f=3)),-1===f&&(f=0)}let p="";for(g=s+f+1;g<=i;++g)g!==i&&t.charCodeAt(g)!==o||(p+=0===p.length?"..":"\\..");return a+=f,p.length>0?"".concat(p).concat(r.slice(a,l)):(r.charCodeAt(a)===o&&++a,r.slice(a,l))},toNamespacedPath(t){if("string"!==typeof t||0===t.length)return t;const e=m.resolve(t);if(e.length<=2)return t;if(e.charCodeAt(0)===o){if(e.charCodeAt(1)===o){const t=e.charCodeAt(2);if(63!==t&&t!==s)return"\\\\?\\UNC\\".concat(e.slice(2))}}else if(f(e.charCodeAt(0))&&e.charCodeAt(1)===h&&e.charCodeAt(2)===o)return"\\\\?\\".concat(e);return t},dirname(t){c(t,"path");const e=t.length;if(0===e)return".";let n=-1,r=0;const s=t.charCodeAt(0);if(1===e)return u(s)?t:".";if(u(s)){if(n=r=1,u(t.charCodeAt(1))){let s=2,i=s;for(;s<e&&!u(t.charCodeAt(s));)s++;if(s<e&&s!==i){for(i=s;s<e&&u(t.charCodeAt(s));)s++;if(s<e&&s!==i){for(i=s;s<e&&!u(t.charCodeAt(s));)s++;if(s===e)return t;s!==i&&(n=r=s+1)}}}}else f(s)&&t.charCodeAt(1)===h&&(n=e>2&&u(t.charCodeAt(2))?3:2,r=n);let i=-1,o=!0;for(let h=e-1;h>=r;--h)if(u(t.charCodeAt(h))){if(!o){i=h;break}}else o=!1;if(-1===i){if(-1===n)return".";i=n}return t.slice(0,i)},basename(t,e){void 0!==e&&c(e,"ext"),c(t,"path");let n,r=0,s=-1,i=!0;if(t.length>=2&&f(t.charCodeAt(0))&&t.charCodeAt(1)===h&&(r=2),void 0!==e&&e.length>0&&e.length<=t.length){if(e===t)return"";let o=e.length-1,h=-1;for(n=t.length-1;n>=r;--n){const a=t.charCodeAt(n);if(u(a)){if(!i){r=n+1;break}}else-1===h&&(i=!1,h=n+1),o>=0&&(a===e.charCodeAt(o)?-1===--o&&(s=n):(o=-1,s=h))}return r===s?s=h:-1===s&&(s=t.length),t.slice(r,s)}for(n=t.length-1;n>=r;--n)if(u(t.charCodeAt(n))){if(!i){r=n+1;break}}else-1===s&&(i=!1,s=n+1);return-1===s?"":t.slice(r,s)},extname(t){c(t,"path");let e=0,n=-1,r=0,i=-1,o=!0,a=0;t.length>=2&&t.charCodeAt(1)===h&&f(t.charCodeAt(0))&&(e=r=2);for(let h=t.length-1;h>=e;--h){const e=t.charCodeAt(h);if(u(e)){if(!o){r=h+1;break}}else-1===i&&(o=!1,i=h+1),e===s?-1===n?n=h:1!==a&&(a=1):-1!==n&&(a=-1)}return-1===n||-1===i||0===a||1===a&&n===i-1&&n===r+1?"":t.slice(n,i)},format:p.bind(null,"\\"),parse(t){c(t,"path");const e={root:"",dir:"",base:"",ext:"",name:""};if(0===t.length)return e;const n=t.length;let r=0,i=t.charCodeAt(0);if(1===n)return u(i)?(e.root=e.dir=t,e):(e.base=e.name=t,e);if(u(i)){if(r=1,u(t.charCodeAt(1))){let e=2,s=e;for(;e<n&&!u(t.charCodeAt(e));)e++;if(e<n&&e!==s){for(s=e;e<n&&u(t.charCodeAt(e));)e++;if(e<n&&e!==s){for(s=e;e<n&&!u(t.charCodeAt(e));)e++;e===n?r=e:e!==s&&(r=e+1)}}}}else if(f(i)&&t.charCodeAt(1)===h){if(n<=2)return e.root=e.dir=t,e;if(r=2,u(t.charCodeAt(2))){if(3===n)return e.root=e.dir=t,e;r=3}}r>0&&(e.root=t.slice(0,r));let o=-1,a=r,l=-1,d=!0,g=t.length-1,p=0;for(;g>=r;--g)if(i=t.charCodeAt(g),u(i)){if(!d){a=g+1;break}}else-1===l&&(d=!1,l=g+1),i===s?-1===o?o=g:1!==p&&(p=1):-1!==o&&(p=-1);return-1!==l&&(-1===o||0===p||1===p&&o===l-1&&o===a+1?e.base=e.name=t.slice(a,l):(e.name=t.slice(a,o),e.base=t.slice(a,l),e.ext=t.slice(o,l))),e.dir=a>0&&a!==r?t.slice(0,a-1):e.root,e},sep:"\\",delimiter:";",win32:null,posix:null},v=(()=>{if(l){const t=/\\/g;return()=>{const e=r.bJ().replace(t,"/");return e.slice(e.indexOf("/"))}}return()=>r.bJ()})(),_={resolve(){let t="",e=!1;for(let n=arguments.length-1;n>=-1&&!e;n--){const r=n>=0?n<0||arguments.length<=n?void 0:arguments[n]:v();c(r,"path"),0!==r.length&&(t="".concat(r,"/").concat(t),e=r.charCodeAt(0)===i)}return t=g(t,!e,"/",d),e?"/".concat(t):t.length>0?t:"."},normalize(t){if(c(t,"path"),0===t.length)return".";const e=t.charCodeAt(0)===i,n=t.charCodeAt(t.length-1)===i;return 0===(t=g(t,!e,"/",d)).length?e?"/":n?"./":".":(n&&(t+="/"),e?"/".concat(t):t)},isAbsolute:t=>(c(t,"path"),t.length>0&&t.charCodeAt(0)===i),join(){if(0===arguments.length)return".";let t;for(let e=0;e<arguments.length;++e){const n=e<0||arguments.length<=e?void 0:arguments[e];c(n,"path"),n.length>0&&(void 0===t?t=n:t+="/".concat(n))}return void 0===t?".":_.normalize(t)},relative(t,e){if(c(t,"from"),c(e,"to"),t===e)return"";if((t=_.resolve(t))===(e=_.resolve(e)))return"";const n=t.length,r=n-1,s=e.length-1,o=r<s?r:s;let h=-1,a=0;for(;a<o;a++){const n=t.charCodeAt(1+a);if(n!==e.charCodeAt(1+a))break;n===i&&(h=a)}if(a===o)if(s>o){if(e.charCodeAt(1+a)===i)return e.slice(1+a+1);if(0===a)return e.slice(1+a)}else r>o&&(t.charCodeAt(1+a)===i?h=a:0===a&&(h=0));let l="";for(a=1+h+1;a<=n;++a)a!==n&&t.charCodeAt(a)!==i||(l+=0===l.length?"..":"/..");return"".concat(l).concat(e.slice(1+h))},toNamespacedPath:t=>t,dirname(t){if(c(t,"path"),0===t.length)return".";const e=t.charCodeAt(0)===i;let n=-1,r=!0;for(let s=t.length-1;s>=1;--s)if(t.charCodeAt(s)===i){if(!r){n=s;break}}else r=!1;return-1===n?e?"/":".":e&&1===n?"//":t.slice(0,n)},basename(t,e){void 0!==e&&c(e,"ext"),c(t,"path");let n,r=0,s=-1,o=!0;if(void 0!==e&&e.length>0&&e.length<=t.length){if(e===t)return"";let h=e.length-1,a=-1;for(n=t.length-1;n>=0;--n){const c=t.charCodeAt(n);if(c===i){if(!o){r=n+1;break}}else-1===a&&(o=!1,a=n+1),h>=0&&(c===e.charCodeAt(h)?-1===--h&&(s=n):(h=-1,s=a))}return r===s?s=a:-1===s&&(s=t.length),t.slice(r,s)}for(n=t.length-1;n>=0;--n)if(t.charCodeAt(n)===i){if(!o){r=n+1;break}}else-1===s&&(o=!1,s=n+1);return-1===s?"":t.slice(r,s)},extname(t){c(t,"path");let e=-1,n=0,r=-1,o=!0,h=0;for(let a=t.length-1;a>=0;--a){const c=t.charCodeAt(a);if(c!==i)-1===r&&(o=!1,r=a+1),c===s?-1===e?e=a:1!==h&&(h=1):-1!==e&&(h=-1);else if(!o){n=a+1;break}}return-1===e||-1===r||0===h||1===h&&e===r-1&&e===n+1?"":t.slice(e,r)},format:p.bind(null,"/"),parse(t){c(t,"path");const e={root:"",dir:"",base:"",ext:"",name:""};if(0===t.length)return e;const n=t.charCodeAt(0)===i;let r;n?(e.root="/",r=1):r=0;let o=-1,h=0,a=-1,l=!0,u=t.length-1,d=0;for(;u>=r;--u){const e=t.charCodeAt(u);if(e!==i)-1===a&&(l=!1,a=u+1),e===s?-1===o?o=u:1!==d&&(d=1):-1!==o&&(d=-1);else if(!l){h=u+1;break}}if(-1!==a){const r=0===h&&n?1:h;-1===o||0===d||1===d&&o===a-1&&o===h+1?e.base=e.name=t.slice(r,a):(e.name=t.slice(r,o),e.base=t.slice(r,a),e.ext=t.slice(o,a))}return h>0?e.dir=t.slice(0,h-1):n&&(e.dir="/"),e},sep:"/",delimiter:":",win32:null,posix:null};_.win32=m.win32=m,_.posix=m.posix=_;const b=l?m.normalize:_.normalize,C=l?m.resolve:_.resolve,y=l?m.relative:_.relative,w=l?m.dirname:_.dirname,A=l?m.basename:_.basename,S=l?m.extname:_.extname,x=l?m.sep:_.sep},51611:(t,e,n)=>{n.d(e,{BH:()=>R,Fr:()=>F,H8:()=>W,HZ:()=>L,OS:()=>j,UP:()=>G,_p:()=>B,cm:()=>V,gm:()=>q,ib:()=>P,j9:()=>E,nr:()=>H,p7:()=>N,uF:()=>T,un:()=>k,zQ:()=>w,zx:()=>D});var r,s=n(27845),i=n(26296);const o="en";let h,a,c=!1,l=!1,u=!1,d=!1,f=!1,g=!1,p=!1,m=!1,v=!1,_=!1,b=o,C=null,y=null;const w="object"===typeof self?self:"object"===typeof n.g?n.g:{};let A;"undefined"!==typeof w.vscode&&"undefined"!==typeof w.vscode.process?A=w.vscode.process:"undefined"!==typeof i&&(A=i);const S="string"===typeof(null===(r=null===A||void 0===A?void 0:A.versions)||void 0===r?void 0:r.electron),x=S&&"renderer"===(null===A||void 0===A?void 0:A.type);if("object"!==typeof navigator||x)if("object"===typeof A){c="win32"===A.platform,l="darwin"===A.platform,u="linux"===A.platform,d=u&&!!A.env.SNAP&&!!A.env.SNAP_REVISION,p=S,v=!!A.env.CI||!!A.env.BUILD_ARTIFACTSTAGINGDIRECTORY,h=o,b=o;const t=A.env.VSCODE_NLS_CONFIG;if(t)try{const e=JSON.parse(t),n=e.availableLanguages["*"];h=e.locale,C=e.osLocale,b=n||o,y=e._translationsConfigFile}catch(K){}f=!0}else console.error("Unable to resolve platform.");else{a=navigator.userAgent,c=a.indexOf("Windows")>=0,l=a.indexOf("Macintosh")>=0,m=(a.indexOf("Macintosh")>=0||a.indexOf("iPad")>=0||a.indexOf("iPhone")>=0)&&!!navigator.maxTouchPoints&&navigator.maxTouchPoints>0,u=a.indexOf("Linux")>=0,_=(null===a||void 0===a?void 0:a.indexOf("Mobi"))>=0,g=!0;h=s.AM(s.kg({key:"ensureLoaderPluginIsLoaded",comment:["{Locked}"]},"_"))||o,b=h,C=navigator.language}let O=0;l?O=1:c?O=3:u&&(O=2);const T=c,D=l,E=u,P=f,L=g,N=g&&"function"===typeof w.importScripts,k=m,F=_,I=a,R=b,U="function"===typeof w.postMessage&&!w.importScripts,B=(()=>{if(U){const t=[];w.addEventListener("message",(e=>{if(e.data&&e.data.vscodeScheduleAsyncWork)for(let n=0,r=t.length;n<r;n++){const r=t[n];if(r.id===e.data.vscodeScheduleAsyncWork)return t.splice(n,1),void r.callback()}}));let e=0;return n=>{const r=++e;t.push({id:r,callback:n}),w.postMessage({vscodeScheduleAsyncWork:r},"*")}}return t=>setTimeout(t)})(),j=l||m?2:c?1:3;let z=!0,M=!1;function V(){if(!M){M=!0;const t=new Uint8Array(2);t[0]=1,t[1]=2;const e=new Uint16Array(t.buffer);z=513===e[0]}return z}const W=!!(I&&I.indexOf("Chrome")>=0),q=!!(I&&I.indexOf("Firefox")>=0),H=!!(!W&&I&&I.indexOf("Safari")>=0),G=!!(I&&I.indexOf("Edg/")>=0);I&&I.indexOf("Android")},37759:(t,e,n)=>{n.d(e,{_K:()=>h,bJ:()=>o,iD:()=>a});var r=n(51611),s=n(26296);let i;if("undefined"!==typeof r.zQ.vscode&&"undefined"!==typeof r.zQ.vscode.process){const t=r.zQ.vscode.process;i={get platform(){return t.platform},get arch(){return t.arch},get env(){return t.env},cwd:()=>t.cwd()}}else i="undefined"!==typeof s?{get platform(){return s.platform},get arch(){return s.arch},get env(){return{NODE_ENV:"production",PUBLIC_URL:"/nginx-editor",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}},cwd:()=>({NODE_ENV:"production",PUBLIC_URL:"/nginx-editor",WDS_SOCKET_HOST:void 0,WDS_SOCKET_PATH:void 0,WDS_SOCKET_PORT:void 0,FAST_REFRESH:!0}.VSCODE_CWD||s.cwd())}:{get platform(){return r.uF?"win32":r.zx?"darwin":"linux"},get arch(){},get env(){return{}},cwd:()=>"/"};const o=i.cwd,h=i.env,a=i.platform},99175:(t,e,n)=>{var r;n.d(e,{Q:()=>r}),function(t){function e(t,e){if(t.start>=e.end||e.start>=t.end)return{start:0,end:0};const n=Math.max(t.start,e.start),r=Math.min(t.end,e.end);return r-n<=0?{start:0,end:0}:{start:n,end:r}}function n(t){return t.end-t.start<=0}t.intersect=e,t.isEmpty=n,t.intersects=function(t,r){return!n(e(t,r))},t.relativeComplement=function(t,e){const r=[],s={start:t.start,end:Math.min(e.start,t.end)},i={start:Math.max(e.end,t.start),end:t.end};return n(s)||r.push(s),n(i)||r.push(i),r}}(r||(r={}))},64211:(t,e,n)=>{n.d(e,{B6:()=>A,Fd:()=>_,LC:()=>p,P8:()=>g,Pi:()=>f,er:()=>u,iZ:()=>b,n4:()=>d,o1:()=>C,pD:()=>m,su:()=>c,uJ:()=>v});var r=n(75046),s=n(15424),i=n(9075),o=n(51611),h=n(21788),a=n(55456);function c(t){return(0,a.I)(t,!0)}class l{constructor(t){this._ignorePathCasing=t}compare(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return t===e?0:(0,h.UD)(this.getComparisonKey(t,n),this.getComparisonKey(e,n))}isEqual(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];return t===e||!(!t||!e)&&this.getComparisonKey(t,n)===this.getComparisonKey(e,n)}getComparisonKey(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];return t.with({path:this._ignorePathCasing(t)?t.path.toLowerCase():void 0,fragment:e?null:void 0}).toString()}isEqualOrParent(t,e){let n=arguments.length>2&&void 0!==arguments[2]&&arguments[2];if(t.scheme===e.scheme){if(t.scheme===s.ny.file)return r._1(c(t),c(e),this._ignorePathCasing(t))&&t.query===e.query&&(n||t.fragment===e.fragment);if(y(t.authority,e.authority))return r._1(t.path,e.path,this._ignorePathCasing(t),"/")&&t.query===e.query&&(n||t.fragment===e.fragment)}return!1}joinPath(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];return a.r.joinPath(t,...n)}basenameOrAuthority(t){return g(t)||t.authority}basename(t){return i.SA.basename(t.path)}extname(t){return i.SA.extname(t.path)}dirname(t){if(0===t.path.length)return t;let e;return t.scheme===s.ny.file?e=a.r.file(i.pD(c(t))).path:(e=i.SA.dirname(t.path),t.authority&&e.length&&47!==e.charCodeAt(0)&&(console.error('dirname("'.concat(t.toString,")) resulted in a relative path")),e="/")),t.with({path:e})}normalizePath(t){if(!t.path.length)return t;let e;return e=t.scheme===s.ny.file?a.r.file(i.S8(c(t))).path:i.SA.normalize(t.path),t.with({path:e})}relativePath(t,e){if(t.scheme!==e.scheme||!y(t.authority,e.authority))return;if(t.scheme===s.ny.file){const n=i.V8(c(t),c(e));return o.uF?r.TH(n):n}let n=t.path||"/";const h=e.path||"/";if(this._ignorePathCasing(t)){let t=0;for(const e=Math.min(n.length,h.length);t<e&&(n.charCodeAt(t)===h.charCodeAt(t)||n.charAt(t).toLowerCase()===h.charAt(t).toLowerCase());t++);n=h.substr(0,t)+n.substr(t)}return i.SA.relative(n,h)}resolvePath(t,e){if(t.scheme===s.ny.file){const n=a.r.file(i.hd(c(t),e));return t.with({authority:n.authority,path:n.path})}return e=r.kb(e),t.with({path:i.SA.resolve(t.path,e)})}isAbsolutePath(t){return!!t.path&&"/"===t.path[0]}isEqualAuthority(t,e){return t===e||void 0!==t&&void 0!==e&&(0,h.Q_)(t,e)}hasTrailingPathSeparator(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i.Vn;if(t.scheme===s.ny.file){const n=c(t);return n.length>r.Zn(n).length&&n[n.length-1]===e}{const e=t.path;return e.length>1&&47===e.charCodeAt(e.length-1)&&!/^[a-zA-Z]:(\/$|\\$)/.test(t.fsPath)}}removeTrailingPathSeparator(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i.Vn;return w(t,e)?t.with({path:t.path.substr(0,t.path.length-1)}):t}addTrailingPathSeparator(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i.Vn,n=!1;if(t.scheme===s.ny.file){const s=c(t);n=void 0!==s&&s.length===r.Zn(s).length&&s[s.length-1]===e}else{e="/";const r=t.path;n=1===r.length&&47===r.charCodeAt(r.length-1)}return n||w(t,e)?t:t.with({path:t.path+"/"})}}const u=new l((()=>!1)),d=(new l((t=>t.scheme!==s.ny.file||!o.j9)),new l((t=>!0)),u.isEqual.bind(u)),f=(u.isEqualOrParent.bind(u),u.getComparisonKey.bind(u),u.basenameOrAuthority.bind(u)),g=u.basename.bind(u),p=u.extname.bind(u),m=u.dirname.bind(u),v=u.joinPath.bind(u),_=u.normalizePath.bind(u),b=u.relativePath.bind(u),C=u.resolvePath.bind(u),y=(u.isAbsolutePath.bind(u),u.isEqualAuthority.bind(u)),w=u.hasTrailingPathSeparator.bind(u);u.removeTrailingPathSeparator.bind(u),u.addTrailingPathSeparator.bind(u);var A;!function(t){t.META_DATA_LABEL="label",t.META_DATA_DESCRIPTION="description",t.META_DATA_SIZE="size",t.META_DATA_MIME="mime",t.parseMetaData=function(e){const n=new Map;e.path.substring(e.path.indexOf(";")+1,e.path.lastIndexOf(";")).split(";").forEach((t=>{const[e,r]=t.split(":");e&&r&&n.set(e,r)}));const r=e.path.substring(0,e.path.indexOf(";"));return r&&n.set(t.META_DATA_MIME,r),n}}(A||(A={}))},91937:(t,e,n)=>{n.d(e,{yE:()=>o});var r=n(58570),s=n(58662);class i{constructor(t,e,n,r,s,i,o){this._forceIntegerValues=t,this._scrollStateBrand=void 0,this._forceIntegerValues&&(e|=0,n|=0,r|=0,s|=0,i|=0,o|=0),this.rawScrollLeft=r,this.rawScrollTop=o,e<0&&(e=0),r+e>n&&(r=n-e),r<0&&(r=0),s<0&&(s=0),o+s>i&&(o=i-s),o<0&&(o=0),this.width=e,this.scrollWidth=n,this.scrollLeft=r,this.height=s,this.scrollHeight=i,this.scrollTop=o}equals(t){return this.rawScrollLeft===t.rawScrollLeft&&this.rawScrollTop===t.rawScrollTop&&this.width===t.width&&this.scrollWidth===t.scrollWidth&&this.scrollLeft===t.scrollLeft&&this.height===t.height&&this.scrollHeight===t.scrollHeight&&this.scrollTop===t.scrollTop}withScrollDimensions(t,e){return new i(this._forceIntegerValues,"undefined"!==typeof t.width?t.width:this.width,"undefined"!==typeof t.scrollWidth?t.scrollWidth:this.scrollWidth,e?this.rawScrollLeft:this.scrollLeft,"undefined"!==typeof t.height?t.height:this.height,"undefined"!==typeof t.scrollHeight?t.scrollHeight:this.scrollHeight,e?this.rawScrollTop:this.scrollTop)}withScrollPosition(t){return new i(this._forceIntegerValues,this.width,this.scrollWidth,"undefined"!==typeof t.scrollLeft?t.scrollLeft:this.rawScrollLeft,this.height,this.scrollHeight,"undefined"!==typeof t.scrollTop?t.scrollTop:this.rawScrollTop)}createScrollEvent(t,e){const n=this.width!==t.width,r=this.scrollWidth!==t.scrollWidth,s=this.scrollLeft!==t.scrollLeft,i=this.height!==t.height,o=this.scrollHeight!==t.scrollHeight,h=this.scrollTop!==t.scrollTop;return{inSmoothScrolling:e,oldWidth:t.width,oldScrollWidth:t.scrollWidth,oldScrollLeft:t.scrollLeft,width:this.width,scrollWidth:this.scrollWidth,scrollLeft:this.scrollLeft,oldHeight:t.height,oldScrollHeight:t.scrollHeight,oldScrollTop:t.scrollTop,height:this.height,scrollHeight:this.scrollHeight,scrollTop:this.scrollTop,widthChanged:n,scrollWidthChanged:r,scrollLeftChanged:s,heightChanged:i,scrollHeightChanged:o,scrollTopChanged:h}}}class o extends s.jG{constructor(t){super(),this._scrollableBrand=void 0,this._onScroll=this._register(new r.vl),this.onScroll=this._onScroll.event,this._smoothScrollDuration=t.smoothScrollDuration,this._scheduleAtNextAnimationFrame=t.scheduleAtNextAnimationFrame,this._state=new i(t.forceIntegerValues,0,0,0,0,0,0),this._smoothScrolling=null}dispose(){this._smoothScrolling&&(this._smoothScrolling.dispose(),this._smoothScrolling=null),super.dispose()}setSmoothScrollDuration(t){this._smoothScrollDuration=t}validateScrollPosition(t){return this._state.withScrollPosition(t)}getScrollDimensions(){return this._state}setScrollDimensions(t,e){var n;const r=this._state.withScrollDimensions(t,e);this._setState(r,Boolean(this._smoothScrolling)),null===(n=this._smoothScrolling)||void 0===n||n.acceptScrollDimensions(this._state)}getFutureScrollPosition(){return this._smoothScrolling?this._smoothScrolling.to:this._state}getCurrentScrollPosition(){return this._state}setScrollPositionNow(t){const e=this._state.withScrollPosition(t);this._smoothScrolling&&(this._smoothScrolling.dispose(),this._smoothScrolling=null),this._setState(e,!1)}setScrollPositionSmooth(t,e){if(0===this._smoothScrollDuration)return this.setScrollPositionNow(t);if(this._smoothScrolling){t={scrollLeft:"undefined"===typeof t.scrollLeft?this._smoothScrolling.to.scrollLeft:t.scrollLeft,scrollTop:"undefined"===typeof t.scrollTop?this._smoothScrolling.to.scrollTop:t.scrollTop};const n=this._state.withScrollPosition(t);if(this._smoothScrolling.to.scrollLeft===n.scrollLeft&&this._smoothScrolling.to.scrollTop===n.scrollTop)return;let r;r=e?new c(this._smoothScrolling.from,n,this._smoothScrolling.startTime,this._smoothScrolling.duration):this._smoothScrolling.combine(this._state,n,this._smoothScrollDuration),this._smoothScrolling.dispose(),this._smoothScrolling=r}else{const e=this._state.withScrollPosition(t);this._smoothScrolling=c.start(this._state,e,this._smoothScrollDuration)}this._smoothScrolling.animationFrameDisposable=this._scheduleAtNextAnimationFrame((()=>{this._smoothScrolling&&(this._smoothScrolling.animationFrameDisposable=null,this._performSmoothScrolling())}))}hasPendingScrollAnimation(){return Boolean(this._smoothScrolling)}_performSmoothScrolling(){if(!this._smoothScrolling)return;const t=this._smoothScrolling.tick(),e=this._state.withScrollPosition(t);return this._setState(e,!0),this._smoothScrolling?t.isDone?(this._smoothScrolling.dispose(),void(this._smoothScrolling=null)):void(this._smoothScrolling.animationFrameDisposable=this._scheduleAtNextAnimationFrame((()=>{this._smoothScrolling&&(this._smoothScrolling.animationFrameDisposable=null,this._performSmoothScrolling())}))):void 0}_setState(t,e){const n=this._state;n.equals(t)||(this._state=t,this._onScroll.fire(this._state.createScrollEvent(n,e)))}}class h{constructor(t,e,n){this.scrollLeft=t,this.scrollTop=e,this.isDone=n}}function a(t,e){const n=e-t;return function(e){return t+n*(1-function(t){return Math.pow(t,3)}(1-e))}}class c{constructor(t,e,n,r){this.from=t,this.to=e,this.duration=r,this.startTime=n,this.animationFrameDisposable=null,this._initAnimations()}_initAnimations(){this.scrollLeft=this._initAnimation(this.from.scrollLeft,this.to.scrollLeft,this.to.width),this.scrollTop=this._initAnimation(this.from.scrollTop,this.to.scrollTop,this.to.height)}_initAnimation(t,e,n){if(Math.abs(t-e)>2.5*n){let o,h;return t<e?(o=t+.75*n,h=e-.75*n):(o=t-.75*n,h=e+.75*n),r=a(t,o),s=a(h,e),i=.33,function(t){return t<i?r(t/i):s((t-i)/(1-i))}}var r,s,i;return a(t,e)}dispose(){null!==this.animationFrameDisposable&&(this.animationFrameDisposable.dispose(),this.animationFrameDisposable=null)}acceptScrollDimensions(t){this.to=t.withScrollPosition(this.to),this._initAnimations()}tick(){return this._tick(Date.now())}_tick(t){const e=(t-this.startTime)/this.duration;if(e<1){const t=this.scrollLeft(e),n=this.scrollTop(e);return new h(t,n,!1)}return new h(this.to.scrollLeft,this.to.scrollTop,!0)}combine(t,e,n){return c.start(t,e,n)}static start(t,e,n){n+=10;const r=Date.now()-10;return new c(t,e,r,n)}}},91896:(t,e,n)=>{n.d(e,{u:()=>s});var r=n(21788);function s(t,e){if(t&&""!==t[0]){const n=i(t,e,"-"),s=i(t,e,"_");return n&&!s?o(t,e,"-"):!n&&s?o(t,e,"_"):t[0].toUpperCase()===t[0]?e.toUpperCase():t[0].toLowerCase()===t[0]?e.toLowerCase():r.zY(t[0][0])&&e.length>0?e[0].toUpperCase()+e.substr(1):t[0][0].toUpperCase()!==t[0][0]&&e.length>0?e[0].toLowerCase()+e.substr(1):e}return e}function i(t,e,n){return-1!==t[0].indexOf(n)&&-1!==e.indexOf(n)&&t[0].split(n).length===e.split(n).length}function o(t,e,n){const r=e.split(n),i=t[0].split(n);let o="";return r.forEach(((t,e)=>{o+=s([i[e]],t)+n})),o.slice(0,-1)}},26603:(t,e,n)=>{n.d(e,{A:()=>i});var r,s=n(21788);!function(t){t[t.Ignore=0]="Ignore",t[t.Info=1]="Info",t[t.Warning=2]="Warning",t[t.Error=3]="Error"}(r||(r={})),function(t){const e="error",n="warning",r="info";t.fromValue=function(i){return i?s.Q_(e,i)?t.Error:s.Q_(n,i)||s.Q_("warn",i)?t.Warning:s.Q_(r,i)?t.Info:t.Ignore:t.Ignore},t.toString=function(s){switch(s){case t.Error:return e;case t.Warning:return n;case t.Info:return r;default:return"ignore"}}}(r||(r={}));const i=r},64149:(t,e,n)=>{n.d(e,{W:()=>s});const r=globalThis.performance&&"function"===typeof globalThis.performance.now;class s{static create(t){return new s(t)}constructor(t){this._now=r&&!1===t?Date.now:globalThis.performance.now.bind(globalThis.performance),this._startTime=this._now(),this._stopTime=-1}stop(){this._stopTime=this._now()}elapsed(){return-1!==this._stopTime?this._stopTime-this._startTime:this._now()-this._startTime}}},21788:(t,e,n)=>{n.d(e,{$X:()=>K,AV:()=>o,BO:()=>f,Bm:()=>g,Bq:()=>u,DB:()=>O,E_:()=>W,GP:()=>a,HG:()=>b,LJ:()=>F,LU:()=>J,Lv:()=>T,MV:()=>z,NB:()=>d,OS:()=>m,Q_:()=>E,Qp:()=>L,S8:()=>st,Ss:()=>Z,UD:()=>w,UU:()=>C,Vi:()=>N,W1:()=>S,Wd:()=>nt,Wv:()=>D,Z5:()=>R,_J:()=>G,aC:()=>H,bm:()=>l,eY:()=>v,ih:()=>c,iy:()=>j,km:()=>B,lF:()=>A,lT:()=>y,m:()=>M,ne:()=>$,ns:()=>P,pc:()=>k,r_:()=>Q,tk:()=>X,tl:()=>it,uz:()=>_,wB:()=>p,y_:()=>ot,zY:()=>Y,z_:()=>I,zd:()=>x});var r,s=n(99572),i=n(53434);function o(t){return!t||"string"!==typeof t||0===t.trim().length}const h=/{(\d+)}/g;function a(t){for(var e=arguments.length,n=new Array(e>1?e-1:0),r=1;r<e;r++)n[r-1]=arguments[r];return 0===n.length?t:t.replace(h,(function(t,e){const r=parseInt(e,10);return isNaN(r)||r<0||r>=n.length?t:n[r]}))}function c(t){return t.replace(/[<>&]/g,(function(t){switch(t){case"<":return"&lt;";case">":return"&gt;";case"&":return"&amp;";default:return t}}))}function l(t){return t.replace(/[\\\{\}\*\+\?\|\^\$\.\[\]\(\)]/g,"\\$&")}function u(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:" ";return f(d(t,e),e)}function d(t,e){if(!t||!e)return t;const n=e.length;if(0===n||0===t.length)return t;let r=0;for(;t.indexOf(e,r)===r;)r+=n;return t.substring(r)}function f(t,e){if(!t||!e)return t;const n=e.length,r=t.length;if(0===n||0===r)return t;let s=r,i=-1;for(;i=t.lastIndexOf(e,s-1),-1!==i&&i+n===s;){if(0===i)return"";s=i}return t.substring(0,s)}function g(t){return t.replace(/[\-\\\{\}\+\?\|\^\$\.\,\[\]\(\)\#\s]/g,"\\$&").replace(/[\*]/g,".*")}function p(t){return t.replace(/\*/g,"")}function m(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};if(!t)throw new Error("Cannot create regex from empty string");e||(t=l(t)),n.wholeWord&&(/\B/.test(t.charAt(0))||(t="\\b"+t),/\B/.test(t.charAt(t.length-1))||(t+="\\b"));let r="";return n.global&&(r+="g"),n.matchCase||(r+="i"),n.multiline&&(r+="m"),n.unicode&&(r+="u"),new RegExp(t,r)}function v(t){if("^"===t.source||"^$"===t.source||"$"===t.source||"^\\s*$"===t.source)return!1;return!(!t.exec("")||0!==t.lastIndex)}function _(t){return t.split(/\r\n|\r|\n/)}function b(t){for(let e=0,n=t.length;e<n;e++){const n=t.charCodeAt(e);if(32!==n&&9!==n)return e}return-1}function C(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:t.length;for(let r=e;r<n;r++){const n=t.charCodeAt(r);if(32!==n&&9!==n)return t.substring(e,r)}return t.substring(e,n)}function y(t){for(let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:t.length-1;e>=0;e--){const n=t.charCodeAt(e);if(32!==n&&9!==n)return e}return-1}function w(t,e){return t<e?-1:t>e?1:0}function A(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:t.length,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:e.length;for(;n<r&&s<i;n++,s++){const r=t.charCodeAt(n),i=e.charCodeAt(s);if(r<i)return-1;if(r>i)return 1}const o=r-n,h=i-s;return o<h?-1:o>h?1:0}function S(t,e){return x(t,e,0,t.length,0,e.length)}function x(t,e){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0,r=arguments.length>3&&void 0!==arguments[3]?arguments[3]:t.length,s=arguments.length>4&&void 0!==arguments[4]?arguments[4]:0,i=arguments.length>5&&void 0!==arguments[5]?arguments[5]:e.length;for(;n<r&&s<i;n++,s++){let o=t.charCodeAt(n),h=e.charCodeAt(s);if(o===h)continue;if(o>=128||h>=128)return A(t.toLowerCase(),e.toLowerCase(),n,r,s,i);T(o)&&(o-=32),T(h)&&(h-=32);const a=o-h;if(0!==a)return a}const o=r-n,h=i-s;return o<h?-1:o>h?1:0}function O(t){return t>=48&&t<=57}function T(t){return t>=97&&t<=122}function D(t){return t>=65&&t<=90}function E(t,e){return t.length===e.length&&0===x(t,e)}function P(t,e){const n=e.length;return!(e.length>t.length)&&0===x(t,e,0,n)}function L(t,e){const n=Math.min(t.length,e.length);let r;for(r=0;r<n;r++)if(t.charCodeAt(r)!==e.charCodeAt(r))return r;return n}function N(t,e){const n=Math.min(t.length,e.length);let r;const s=t.length-1,i=e.length-1;for(r=0;r<n;r++)if(t.charCodeAt(s-r)!==e.charCodeAt(i-r))return r;return n}function k(t){return 55296<=t&&t<=56319}function F(t){return 56320<=t&&t<=57343}function I(t,e){return e-56320+(t-55296<<10)+65536}function R(t,e,n){const r=t.charCodeAt(n);if(k(r)&&n+1<e){const e=t.charCodeAt(n+1);if(F(e))return I(r,e)}return r}class U{get offset(){return this._offset}constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;this._str=t,this._len=t.length,this._offset=e}setOffset(t){this._offset=t}prevCodePoint(){const t=function(t,e){const n=t.charCodeAt(e-1);if(F(n)&&e>1){const r=t.charCodeAt(e-2);if(k(r))return I(r,n)}return n}(this._str,this._offset);return this._offset-=t>=65536?2:1,t}nextCodePoint(){const t=R(this._str,this._len,this._offset);return this._offset+=t>=65536?2:1,t}eol(){return this._offset>=this._len}}class B{get offset(){return this._iterator.offset}constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0;this._iterator=new U(t,e)}nextGraphemeLength(){const t=et.getInstance(),e=this._iterator,n=e.offset;let r=t.getGraphemeBreakType(e.nextCodePoint());for(;!e.eol();){const n=e.offset,s=t.getGraphemeBreakType(e.nextCodePoint());if(tt(r,s)){e.setOffset(n);break}r=s}return e.offset-n}prevGraphemeLength(){const t=et.getInstance(),e=this._iterator,n=e.offset;let r=t.getGraphemeBreakType(e.prevCodePoint());for(;e.offset>0;){const n=e.offset,s=t.getGraphemeBreakType(e.prevCodePoint());if(tt(s,r)){e.setOffset(n);break}r=s}return n-e.offset}eol(){return this._iterator.eol()}}function j(t,e){return new B(t,e).nextGraphemeLength()}function z(t,e){return new B(t,e).prevGraphemeLength()}function M(t,e){e>0&&F(t.charCodeAt(e))&&e--;const n=e+j(t,e);return[n-z(t,n),n]}let V;function W(t){return V||(V=/(?:[\u05BE\u05C0\u05C3\u05C6\u05D0-\u05F4\u0608\u060B\u060D\u061B-\u064A\u066D-\u066F\u0671-\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u0710\u0712-\u072F\u074D-\u07A5\u07B1-\u07EA\u07F4\u07F5\u07FA\u07FE-\u0815\u081A\u0824\u0828\u0830-\u0858\u085E-\u088E\u08A0-\u08C9\u200F\uFB1D\uFB1F-\uFB28\uFB2A-\uFD3D\uFD50-\uFDC7\uFDF0-\uFDFC\uFE70-\uFEFC]|\uD802[\uDC00-\uDD1B\uDD20-\uDE00\uDE10-\uDE35\uDE40-\uDEE4\uDEEB-\uDF35\uDF40-\uDFFF]|\uD803[\uDC00-\uDD23\uDE80-\uDEA9\uDEAD-\uDF45\uDF51-\uDF81\uDF86-\uDFF6]|\uD83A[\uDC00-\uDCCF\uDD00-\uDD43\uDD4B-\uDFFF]|\uD83B[\uDC00-\uDEBB])/),V.test(t)}const q=/^[\t\n\r\x20-\x7E]*$/;function H(t){return q.test(t)}const G=/[\u2028\u2029]/;function K(t){return G.test(t)}function $(t){return t>=11904&&t<=55215||t>=63744&&t<=64255||t>=65281&&t<=65374}function Z(t){return t>=127462&&t<=127487||8986===t||8987===t||9200===t||9203===t||t>=9728&&t<=10175||11088===t||11093===t||t>=127744&&t<=128591||t>=128640&&t<=128764||t>=128992&&t<=129008||t>=129280&&t<=129535||t>=129648&&t<=129782}const Q=String.fromCharCode(65279);function J(t){return!!(t&&t.length>0&&65279===t.charCodeAt(0))}function Y(t){return!!t&&(arguments.length>1&&void 0!==arguments[1]&&arguments[1]&&(t=t.replace(/\\./g,"")),t.toLowerCase()!==t)}function X(t){return(t%=52)<26?String.fromCharCode(97+t):String.fromCharCode(65+t-26)}function tt(t,e){return 0===t?5!==e&&7!==e:(2!==t||3!==e)&&(4===t||2===t||3===t||(4===e||2===e||3===e||(8!==t||8!==e&&9!==e&&11!==e&&12!==e)&&((11!==t&&9!==t||9!==e&&10!==e)&&((12!==t&&10!==t||10!==e)&&(5!==e&&13!==e&&(7!==e&&(1!==t&&((13!==t||14!==e)&&(6!==t||6!==e)))))))))}class et{static getInstance(){return et._INSTANCE||(et._INSTANCE=new et),et._INSTANCE}constructor(){this._data=JSON.parse("[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]")}getGraphemeBreakType(t){if(t<32)return 10===t?3:13===t?2:4;if(t<127)return 0;const e=this._data,n=e.length/3;let r=1;for(;r<=n;)if(t<e[3*r])r*=2;else{if(!(t>e[3*r+1]))return e[3*r+2];r=2*r+1}return 0}}function nt(t,e){if(0===t)return 0;const n=function(t,e){const n=new U(e,t);let r=n.prevCodePoint();for(;rt(r)||65039===r||8419===r;){if(0===n.offset)return;r=n.prevCodePoint()}if(!Z(r))return;let s=n.offset;if(s>0){8205===n.prevCodePoint()&&(s=n.offset)}return s}(t,e);if(void 0!==n)return n;const r=new U(e,t);return r.prevCodePoint(),r.offset}function rt(t){return 127995<=t&&t<=127999}et._INSTANCE=null;const st="\xa0";class it{static getInstance(t){return r.cache.get(Array.from(t))}static getLocales(){return r._locales.value}constructor(t){this.confusableDictionary=t}isAmbiguous(t){return this.confusableDictionary.has(t)}getPrimaryConfusable(t){return this.confusableDictionary.get(t)}getConfusableCodePoints(){return new Set(this.confusableDictionary.keys())}}r=it,it.ambiguousCharacterData=new i.d((()=>JSON.parse('{"_common":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],"_default":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"cs":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"de":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"es":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"fr":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"it":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"ja":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],"ko":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"pl":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"pt-BR":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"qps-ploc":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"ru":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"tr":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],"zh-hans":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],"zh-hant":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}'))),it.cache=new s.o((t=>{function e(t){const e=new Map;for(let n=0;n<t.length;n+=2)e.set(t[n],t[n+1]);return e}function n(t,e){if(!t)return e;const n=new Map;for(const[r,s]of t)e.has(r)&&n.set(r,s);return n}const s=r.ambiguousCharacterData.value;let i,o=t.filter((t=>!t.startsWith("_")&&t in s));0===o.length&&(o=["_default"]);for(const r of o){i=n(i,e(s[r]))}const h=function(t,e){const n=new Map(t);for(const[r,s]of e)n.set(r,s);return n}(e(s._common),i);return new r(h)})),it._locales=new i.d((()=>Object.keys(r.ambiguousCharacterData.value).filter((t=>!t.startsWith("_")))));class ot{static getRawData(){return JSON.parse("[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]")}static getData(){return this._data||(this._data=new Set(ot.getRawData())),this._data}static isInvisibleCharacter(t){return ot.getData().has(t)}static get codePoints(){return ot.getData()}}ot._data=void 0},77823:(t,e,n)=>{n.d(e,{h:()=>r});const r=Symbol("MicrotaskDelay")},35821:(t,e,n)=>{n.d(e,{cB:()=>c});var r=n(21788);class s{constructor(){this._value="",this._pos=0}reset(t){return this._value=t,this._pos=0,this}next(){return this._pos+=1,this}hasNext(){return this._pos<this._value.length-1}cmp(t){return t.charCodeAt(0)-this._value.charCodeAt(this._pos)}value(){return this._value[this._pos]}}class i{constructor(){let t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0];this._caseSensitive=t}reset(t){return this._value=t,this._from=0,this._to=0,this.next()}hasNext(){return this._to<this._value.length}next(){this._from=this._to;let t=!0;for(;this._to<this._value.length;this._to++){if(46===this._value.charCodeAt(this._to)){if(!t)break;this._from++}else t=!1}return this}cmp(t){return this._caseSensitive?(0,r.lF)(t,this._value,0,t.length,this._from,this._to):(0,r.zd)(t,this._value,0,t.length,this._from,this._to)}value(){return this._value.substring(this._from,this._to)}}class o{constructor(){let t=!(arguments.length>0&&void 0!==arguments[0])||arguments[0],e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];this._splitOnBackslash=t,this._caseSensitive=e}reset(t){this._from=0,this._to=0,this._value=t,this._valueLen=t.length;for(let e=t.length-1;e>=0;e--,this._valueLen--){const t=this._value.charCodeAt(e);if(!(47===t||this._splitOnBackslash&&92===t))break}return this.next()}hasNext(){return this._to<this._valueLen}next(){this._from=this._to;let t=!0;for(;this._to<this._valueLen;this._to++){const e=this._value.charCodeAt(this._to);if(47===e||this._splitOnBackslash&&92===e){if(!t)break;this._from++}else t=!1}return this}cmp(t){return this._caseSensitive?(0,r.lF)(t,this._value,0,t.length,this._from,this._to):(0,r.zd)(t,this._value,0,t.length,this._from,this._to)}value(){return this._value.substring(this._from,this._to)}}class h{constructor(t,e){this._ignorePathCasing=t,this._ignoreQueryAndFragment=e,this._states=[],this._stateIdx=0}reset(t){return this._value=t,this._states=[],this._value.scheme&&this._states.push(1),this._value.authority&&this._states.push(2),this._value.path&&(this._pathIterator=new o(!1,!this._ignorePathCasing(t)),this._pathIterator.reset(t.path),this._pathIterator.value()&&this._states.push(3)),this._ignoreQueryAndFragment(t)||(this._value.query&&this._states.push(4),this._value.fragment&&this._states.push(5)),this._stateIdx=0,this}next(){return 3===this._states[this._stateIdx]&&this._pathIterator.hasNext()?this._pathIterator.next():this._stateIdx+=1,this}hasNext(){return 3===this._states[this._stateIdx]&&this._pathIterator.hasNext()||this._stateIdx<this._states.length-1}cmp(t){if(1===this._states[this._stateIdx])return(0,r.W1)(t,this._value.scheme);if(2===this._states[this._stateIdx])return(0,r.W1)(t,this._value.authority);if(3===this._states[this._stateIdx])return this._pathIterator.cmp(t);if(4===this._states[this._stateIdx])return(0,r.UD)(t,this._value.query);if(5===this._states[this._stateIdx])return(0,r.UD)(t,this._value.fragment);throw new Error}value(){if(1===this._states[this._stateIdx])return this._value.scheme;if(2===this._states[this._stateIdx])return this._value.authority;if(3===this._states[this._stateIdx])return this._pathIterator.value();if(4===this._states[this._stateIdx])return this._value.query;if(5===this._states[this._stateIdx])return this._value.fragment;throw new Error}}class a{constructor(){this.height=1}rotateLeft(){const t=this.right;return this.right=t.left,t.left=this,this.updateHeight(),t.updateHeight(),t}rotateRight(){const t=this.left;return this.left=t.right,t.right=this,this.updateHeight(),t.updateHeight(),t}updateHeight(){this.height=1+Math.max(this.heightLeft,this.heightRight)}balanceFactor(){return this.heightRight-this.heightLeft}get heightLeft(){var t,e;return null!==(e=null===(t=this.left)||void 0===t?void 0:t.height)&&void 0!==e?e:0}get heightRight(){var t,e;return null!==(e=null===(t=this.right)||void 0===t?void 0:t.height)&&void 0!==e?e:0}}class c{static forUris(){return new c(new h(arguments.length>0&&void 0!==arguments[0]?arguments[0]:()=>!1,arguments.length>1&&void 0!==arguments[1]?arguments[1]:()=>!1))}static forStrings(){return new c(new s)}static forConfigKeys(){return new c(new i)}constructor(t){this._iter=t}clear(){this._root=void 0}set(t,e){const n=this._iter.reset(t);let r;this._root||(this._root=new a,this._root.segment=n.value());const s=[];for(r=this._root;;){const t=n.cmp(r.segment);if(t>0)r.left||(r.left=new a,r.left.segment=n.value()),s.push([-1,r]),r=r.left;else if(t<0)r.right||(r.right=new a,r.right.segment=n.value()),s.push([1,r]),r=r.right;else{if(!n.hasNext())break;n.next(),r.mid||(r.mid=new a,r.mid.segment=n.value()),s.push([0,r]),r=r.mid}}const i=r.value;r.value=e,r.key=t;for(let o=s.length-1;o>=0;o--){const t=s[o][1];t.updateHeight();const e=t.balanceFactor();if(e<-1||e>1){const e=s[o][0],n=s[o+1][0];if(1===e&&1===n)s[o][1]=t.rotateLeft();else if(-1===e&&-1===n)s[o][1]=t.rotateRight();else if(1===e&&-1===n)t.right=s[o+1][1]=s[o+1][1].rotateRight(),s[o][1]=t.rotateLeft();else{if(-1!==e||1!==n)throw new Error;t.left=s[o+1][1]=s[o+1][1].rotateLeft(),s[o][1]=t.rotateRight()}if(o>0)switch(s[o-1][0]){case-1:s[o-1][1].left=s[o][1];break;case 1:s[o-1][1].right=s[o][1];break;case 0:s[o-1][1].mid=s[o][1]}else this._root=s[0][1]}}return i}get(t){var e;return null===(e=this._getNode(t))||void 0===e?void 0:e.value}_getNode(t){const e=this._iter.reset(t);let n=this._root;for(;n;){const t=e.cmp(n.segment);if(t>0)n=n.left;else if(t<0)n=n.right;else{if(!e.hasNext())break;e.next(),n=n.mid}}return n}has(t){const e=this._getNode(t);return!(void 0===(null===e||void 0===e?void 0:e.value)&&void 0===(null===e||void 0===e?void 0:e.mid))}delete(t){return this._delete(t,!1)}deleteSuperstr(t){return this._delete(t,!0)}_delete(t,e){var n;const r=this._iter.reset(t),s=[];let i=this._root;for(;i;){const t=r.cmp(i.segment);if(t>0)s.push([-1,i]),i=i.left;else if(t<0)s.push([1,i]),i=i.right;else{if(!r.hasNext())break;r.next(),s.push([0,i]),i=i.mid}}if(i){if(e?(i.left=void 0,i.mid=void 0,i.right=void 0,i.height=1):(i.key=void 0,i.value=void 0),!i.mid&&!i.value)if(i.left&&i.right){const t=this._min(i.right);if(t.key){const{key:e,value:n,segment:r}=t;this._delete(t.key,!1),i.key=e,i.value=n,i.segment=r}}else{const t=null!==(n=i.left)&&void 0!==n?n:i.right;if(s.length>0){const[e,n]=s[s.length-1];switch(e){case-1:n.left=t;break;case 0:n.mid=t;break;case 1:n.right=t}}else this._root=t}for(let t=s.length-1;t>=0;t--){const e=s[t][1];e.updateHeight();const n=e.balanceFactor();if(n>1?(e.right.balanceFactor()>=0||(e.right=e.right.rotateRight()),s[t][1]=e.rotateLeft()):n<-1&&(e.left.balanceFactor()<=0||(e.left=e.left.rotateLeft()),s[t][1]=e.rotateRight()),t>0)switch(s[t-1][0]){case-1:s[t-1][1].left=s[t][1];break;case 1:s[t-1][1].right=s[t][1];break;case 0:s[t-1][1].mid=s[t][1]}else this._root=s[0][1]}}}_min(t){for(;t.left;)t=t.left;return t}findSubstr(t){const e=this._iter.reset(t);let n,r=this._root;for(;r;){const t=e.cmp(r.segment);if(t>0)r=r.left;else if(t<0)r=r.right;else{if(!e.hasNext())break;e.next(),n=r.value||n,r=r.mid}}return r&&r.value||n}findSuperstr(t){return this._findSuperstrOrElement(t,!1)}_findSuperstrOrElement(t,e){const n=this._iter.reset(t);let r=this._root;for(;r;){const t=n.cmp(r.segment);if(t>0)r=r.left;else if(t<0)r=r.right;else{if(!n.hasNext())return r.mid?this._entries(r.mid):e?r.value:void 0;n.next(),r=r.mid}}}forEach(t){for(const[e,n]of this)t(n,e)}*[Symbol.iterator](){yield*this._entries(this._root)}_entries(t){const e=[];return this._dfsEntries(t,e),e[Symbol.iterator]()}_dfsEntries(t,e){t&&(t.left&&this._dfsEntries(t.left,e),t.value&&e.push([t.key,t.value]),t.mid&&this._dfsEntries(t.mid,e),t.right&&this._dfsEntries(t.right,e))}}},881:(t,e,n)=>{n.d(e,{K:()=>s,s:()=>r});class r{constructor(){this.chunkCount=0,this.chunkOccurrences=new Map,this.documents=new Map}calculateScores(t,e){const n=this.computeEmbedding(t),r=new Map,s=[];for(const[i,o]of this.documents){if(e.isCancellationRequested)return[];for(const t of o.chunks){const e=this.computeSimilarityScore(t,n,r);e>0&&s.push({key:i,score:e})}}return s}static termFrequencies(t){return function(t){var e;const n=new Map;for(const r of t)n.set(r,(null!==(e=n.get(r))&&void 0!==e?e:0)+1);return n}(r.splitTerms(t))}static*splitTerms(t){const e=t=>t.toLowerCase();for(const[n]of t.matchAll(/\b\p{Letter}[\p{Letter}\d]{2,}\b/gu)){yield e(n);const t=n.split(/(?<=[a-z])(?=[A-Z])/g);if(t.length>1)for(const n of t)n.length>2&&/\p{Letter}{3,}/gu.test(n)&&(yield e(n))}}updateDocuments(t){var e;for(const{key:n}of t)this.deleteDocument(n);for(const n of t){const t=[];for(const s of n.textChunks){const n=r.termFrequencies(s);for(const t of n.keys())this.chunkOccurrences.set(t,(null!==(e=this.chunkOccurrences.get(t))&&void 0!==e?e:0)+1);t.push({text:s,tf:n})}this.chunkCount+=t.length,this.documents.set(n.key,{chunks:t})}return this}deleteDocument(t){const e=this.documents.get(t);if(e){this.documents.delete(t),this.chunkCount-=e.chunks.length;for(const t of e.chunks)for(const e of t.tf.keys()){const t=this.chunkOccurrences.get(e);if("number"===typeof t){const n=t-1;n<=0?this.chunkOccurrences.delete(e):this.chunkOccurrences.set(e,n)}}}}computeSimilarityScore(t,e,n){let r=0;for(const[s,i]of Object.entries(e)){const e=t.tf.get(s);if(!e)continue;let o=n.get(s);"number"!==typeof o&&(o=this.computeIdf(s),n.set(s,o));r+=e*o*i}return r}computeEmbedding(t){const e=r.termFrequencies(t);return this.computeTfidf(e)}computeIdf(t){var e;const n=null!==(e=this.chunkOccurrences.get(t))&&void 0!==e?e:0;return n>0?Math.log((this.chunkCount+1)/n):0}computeTfidf(t){const e=Object.create(null);for(const[n,r]of t){const t=this.computeIdf(n);t>0&&(e[n]=r*t)}return e}}function s(t){var e,n;const r=t.slice(0);r.sort(((t,e)=>e.score-t.score));const s=null!==(n=null===(e=r[0])||void 0===e?void 0:e.score)&&void 0!==n?n:0;if(s>0)for(const i of r)i.score/=s;return r}},99089:(t,e,n)=>{n.d(e,{L:()=>s});var r,s,i=n(27152);!function(t){t.isThemeColor=function(t){return t&&"object"===typeof t&&"string"===typeof t.id}}(r||(r={})),function(t){t.iconNameSegment="[A-Za-z0-9]+",t.iconNameExpression="[A-Za-z0-9-]+",t.iconModifierExpression="~[A-Za-z]+",t.iconNameCharacter="[A-Za-z0-9~-]";const e=new RegExp("^(".concat(t.iconNameExpression,")(").concat(t.iconModifierExpression,")?$"));function n(t){const r=e.exec(t.id);if(!r)return n(i.W.error);const[,s,o]=r,h=["codicon","codicon-"+s];return o&&h.push("codicon-modifier-"+o.substring(1)),h}t.asClassNameArray=n,t.asClassName=function(t){return n(t).join(" ")},t.asCSSSelector=function(t){return"."+n(t).join(".")},t.isThemeIcon=function(t){return t&&"object"===typeof t&&"string"===typeof t.id&&("undefined"===typeof t.color||r.isThemeColor(t.color))};const s=new RegExp("^\\$\\((".concat(t.iconNameExpression,"(?:").concat(t.iconModifierExpression,")?)\\)$"));t.fromString=function(t){const e=s.exec(t);if(!e)return;const[,n]=e;return{id:n}},t.fromId=function(t){return{id:t}},t.modify=function(t,e){let n=t.id;const r=n.lastIndexOf("~");return-1!==r&&(n=n.substring(0,r)),e&&(n="".concat(n,"~").concat(e)),{id:n}},t.getModifier=function(t){const e=t.id.lastIndexOf("~");if(-1!==e)return t.id.substring(e+1)},t.isEqual=function(t,e){var n,r;return t.id===e.id&&(null===(n=t.color)||void 0===n?void 0:n.id)===(null===(r=e.color)||void 0===r?void 0:r.id)}}(s||(s={}))},25935:(t,e,n)=>{function r(t){return"string"===typeof t}function s(t){return"object"===typeof t&&null!==t&&!Array.isArray(t)&&!(t instanceof RegExp)&&!(t instanceof Date)}function i(t){const e=Object.getPrototypeOf(Uint8Array);return"object"===typeof t&&t instanceof e}function o(t){return"number"===typeof t&&!isNaN(t)}function h(t){return!!t&&"function"===typeof t[Symbol.iterator]}function a(t){return!0===t||!1===t}function c(t){return"undefined"===typeof t}function l(t){return!u(t)}function u(t){return c(t)||null===t}function d(t,e){if(!t)throw new Error(e?"Unexpected type, expected '".concat(e,"'"):"Unexpected type")}function f(t){if(u(t))throw new Error("Assertion Failed: argument is undefined or null");return t}function g(t){return"function"===typeof t}function p(t,e){const n=Math.min(t.length,e.length);for(let r=0;r<n;r++)m(t[r],e[r])}function m(t,e){if(r(e)){if(typeof t!==e)throw new Error("argument does not match constraint: typeof ".concat(e))}else if(g(e)){try{if(t instanceof e)return}catch(n){}if(!u(t)&&t.constructor===e)return;if(1===e.length&&!0===e.call(void 0,t))return;throw new Error("argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true")}}n.d(e,{Et:()=>o,Gv:()=>s,Kg:()=>r,Lm:()=>a,O9:()=>l,Tn:()=>g,b0:()=>c,eU:()=>f,iu:()=>i,j:()=>d,jx:()=>p,xZ:()=>h,z:()=>u})},95352:(t,e,n)=>{function r(t){return t<0?0:t>255?255:0|t}function s(t){return t<0?0:t>4294967295?4294967295:0|t}n.d(e,{W:()=>r,j:()=>s})},55456:(t,e,n)=>{n.d(e,{I:()=>v,r:()=>u});var r=n(9075),s=n(51611);const i=/^\w[\w\d+.-]*$/,o=/^\//,h=/^\/\//;const a="",c="/",l=/^(([^:/?#]+?):)?(\/\/([^/?#]*))?([^?#]*)(\?([^#]*))?(#(.*))?/;class u{static isUri(t){return t instanceof u||!!t&&("string"===typeof t.authority&&"string"===typeof t.fragment&&"string"===typeof t.path&&"string"===typeof t.query&&"string"===typeof t.scheme&&"string"===typeof t.fsPath&&"function"===typeof t.with&&"function"===typeof t.toString)}constructor(t,e,n,r,s){let l=arguments.length>5&&void 0!==arguments[5]&&arguments[5];"object"===typeof t?(this.scheme=t.scheme||a,this.authority=t.authority||a,this.path=t.path||a,this.query=t.query||a,this.fragment=t.fragment||a):(this.scheme=function(t,e){return t||e?t:"file"}(t,l),this.authority=e||a,this.path=function(t,e){switch(t){case"https":case"http":case"file":e?e[0]!==c&&(e=c+e):e=c}return e}(this.scheme,n||a),this.query=r||a,this.fragment=s||a,function(t,e){if(!t.scheme&&e)throw new Error('[UriError]: Scheme is missing: {scheme: "", authority: "'.concat(t.authority,'", path: "').concat(t.path,'", query: "').concat(t.query,'", fragment: "').concat(t.fragment,'"}'));if(t.scheme&&!i.test(t.scheme))throw new Error("[UriError]: Scheme contains illegal characters.");if(t.path)if(t.authority){if(!o.test(t.path))throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash ("/") character')}else if(h.test(t.path))throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters ("//")')}(this,l))}get fsPath(){return v(this,!1)}with(t){if(!t)return this;let{scheme:e,authority:n,path:r,query:s,fragment:i}=t;return void 0===e?e=this.scheme:null===e&&(e=a),void 0===n?n=this.authority:null===n&&(n=a),void 0===r?r=this.path:null===r&&(r=a),void 0===s?s=this.query:null===s&&(s=a),void 0===i?i=this.fragment:null===i&&(i=a),e===this.scheme&&n===this.authority&&r===this.path&&s===this.query&&i===this.fragment?this:new f(e,n,r,s,i)}static parse(t){let e=arguments.length>1&&void 0!==arguments[1]&&arguments[1];const n=l.exec(t);return n?new f(n[2]||a,y(n[4]||a),y(n[5]||a),y(n[7]||a),y(n[9]||a),e):new f(a,a,a,a,a)}static file(t){let e=a;if(s.uF&&(t=t.replace(/\\/g,c)),t[0]===c&&t[1]===c){const n=t.indexOf(c,2);-1===n?(e=t.substring(2),t=c):(e=t.substring(2,n),t=t.substring(n)||c)}return new f("file",e,t,a,a)}static from(t,e){return new f(t.scheme,t.authority,t.path,t.query,t.fragment,e)}static joinPath(t){if(!t.path)throw new Error("[UriError]: cannot call joinPath on URI without path");let e;for(var n=arguments.length,i=new Array(n>1?n-1:0),o=1;o<n;o++)i[o-1]=arguments[o];return e=s.uF&&"file"===t.scheme?u.file(r.IN.join(v(t,!0),...i)).path:r.SA.join(t.path,...i),t.with({path:e})}toString(){return _(this,arguments.length>0&&void 0!==arguments[0]&&arguments[0])}toJSON(){return this}static revive(t){var e,n;if(t){if(t instanceof u)return t;{const r=new f(t);return r._formatted=null!==(e=t.external)&&void 0!==e?e:null,r._fsPath=t._sep===d&&null!==(n=t.fsPath)&&void 0!==n?n:null,r}}return t}}const d=s.uF?1:void 0;class f extends u{constructor(){super(...arguments),this._formatted=null,this._fsPath=null}get fsPath(){return this._fsPath||(this._fsPath=v(this,!1)),this._fsPath}toString(){return arguments.length>0&&void 0!==arguments[0]&&arguments[0]?_(this,!0):(this._formatted||(this._formatted=_(this,!1)),this._formatted)}toJSON(){const t={$mid:1};return this._fsPath&&(t.fsPath=this._fsPath,t._sep=d),this._formatted&&(t.external=this._formatted),this.path&&(t.path=this.path),this.scheme&&(t.scheme=this.scheme),this.authority&&(t.authority=this.authority),this.query&&(t.query=this.query),this.fragment&&(t.fragment=this.fragment),t}}const g={58:"%3A",47:"%2F",63:"%3F",35:"%23",91:"%5B",93:"%5D",64:"%40",33:"%21",36:"%24",38:"%26",39:"%27",40:"%28",41:"%29",42:"%2A",43:"%2B",44:"%2C",59:"%3B",61:"%3D",32:"%20"};function p(t,e,n){let r,s=-1;for(let i=0;i<t.length;i++){const o=t.charCodeAt(i);if(o>=97&&o<=122||o>=65&&o<=90||o>=48&&o<=57||45===o||46===o||95===o||126===o||e&&47===o||n&&91===o||n&&93===o||n&&58===o)-1!==s&&(r+=encodeURIComponent(t.substring(s,i)),s=-1),void 0!==r&&(r+=t.charAt(i));else{void 0===r&&(r=t.substr(0,i));const e=g[o];void 0!==e?(-1!==s&&(r+=encodeURIComponent(t.substring(s,i)),s=-1),r+=e):-1===s&&(s=i)}}return-1!==s&&(r+=encodeURIComponent(t.substring(s))),void 0!==r?r:t}function m(t){let e;for(let n=0;n<t.length;n++){const r=t.charCodeAt(n);35===r||63===r?(void 0===e&&(e=t.substr(0,n)),e+=g[r]):void 0!==e&&(e+=t[n])}return void 0!==e?e:t}function v(t,e){let n;return n=t.authority&&t.path.length>1&&"file"===t.scheme?"//".concat(t.authority).concat(t.path):47===t.path.charCodeAt(0)&&(t.path.charCodeAt(1)>=65&&t.path.charCodeAt(1)<=90||t.path.charCodeAt(1)>=97&&t.path.charCodeAt(1)<=122)&&58===t.path.charCodeAt(2)?e?t.path.substr(1):t.path[1].toLowerCase()+t.path.substr(2):t.path,s.uF&&(n=n.replace(/\//g,"\\")),n}function _(t,e){const n=e?m:p;let r="",{scheme:s,authority:i,path:o,query:h,fragment:a}=t;if(s&&(r+=s,r+=":"),(i||"file"===s)&&(r+=c,r+=c),i){let t=i.indexOf("@");if(-1!==t){const e=i.substr(0,t);i=i.substr(t+1),t=e.lastIndexOf(":"),-1===t?r+=n(e,!1,!1):(r+=n(e.substr(0,t),!1,!1),r+=":",r+=n(e.substr(t+1),!1,!0)),r+="@"}i=i.toLowerCase(),t=i.lastIndexOf(":"),-1===t?r+=n(i,!1,!0):(r+=n(i.substr(0,t),!1,!0),r+=i.substr(t))}if(o){if(o.length>=3&&47===o.charCodeAt(0)&&58===o.charCodeAt(2)){const t=o.charCodeAt(1);t>=65&&t<=90&&(o="/".concat(String.fromCharCode(t+32),":").concat(o.substr(3)))}else if(o.length>=2&&58===o.charCodeAt(1)){const t=o.charCodeAt(0);t>=65&&t<=90&&(o="".concat(String.fromCharCode(t+32),":").concat(o.substr(2)))}r+=n(o,!0,!1)}return h&&(r+="?",r+=n(h,!1,!1)),a&&(r+="#",r+=e?a:p(a,!1,!1)),r}function b(t){try{return decodeURIComponent(t)}catch(e){return t.length>3?t.substr(0,3)+b(t.substr(3)):t}}const C=/(%[0-9A-Za-z][0-9A-Za-z])+/g;function y(t){return t.match(C)?t.replace(C,(t=>b(t))):t}},64887:(t,e,n)=>{n.d(e,{b:()=>r});const r=function(){if("object"===typeof crypto&&"function"===typeof crypto.randomUUID)return crypto.randomUUID.bind(crypto);let t;t="object"===typeof crypto&&"function"===typeof crypto.getRandomValues?crypto.getRandomValues.bind(crypto):function(t){for(let e=0;e<t.length;e++)t[e]=Math.floor(256*Math.random());return t};const e=new Uint8Array(16),n=[];for(let r=0;r<256;r++)n.push(r.toString(16).padStart(2,"0"));return function(){t(e),e[6]=15&e[6]|64,e[8]=63&e[8]|128;let r=0,s="";return s+=n[e[r++]],s+=n[e[r++]],s+=n[e[r++]],s+=n[e[r++]],s+="-",s+=n[e[r++]],s+=n[e[r++]],s+="-",s+=n[e[r++]],s+=n[e[r++]],s+="-",s+=n[e[r++]],s+=n[e[r++]],s+="-",s+=n[e[r++]],s+=n[e[r++]],s+=n[e[r++]],s+=n[e[r++]],s+=n[e[r++]],s+=n[e[r++]],s}}()}}]);
//# sourceMappingURL=monaco-editor-vendor.7f636d0c.4653bb77.js.map