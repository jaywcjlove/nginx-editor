{"version":3,"file":"static/js/monaco-editor-vendor.d262a4b1.cc5db6ae.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/nls.js","../node_modules/monaco-editor/esm/vs/platform/accessibility/browser/accessibilityService.js","../node_modules/monaco-editor/esm/vs/platform/accessibility/common/accessibility.js","../node_modules/monaco-editor/esm/vs/platform/accessibilitySignal/browser/accessibilitySignalService.js","../node_modules/monaco-editor/esm/vs/platform/action/common/action.js","../node_modules/monaco-editor/esm/vs/platform/action/common/actionCommonCategories.js","../node_modules/monaco-editor/esm/vs/platform/actionWidget/browser/actionList.js","../node_modules/monaco-editor/esm/vs/platform/actionWidget/browser/actionWidget.js","../node_modules/monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js","../node_modules/monaco-editor/esm/vs/platform/actions/browser/toolbar.js","../node_modules/monaco-editor/esm/vs/platform/actions/common/actions.js","../node_modules/monaco-editor/esm/vs/platform/actions/common/menuService.js","../node_modules/monaco-editor/esm/vs/platform/clipboard/browser/clipboardService.js","../node_modules/monaco-editor/esm/vs/platform/clipboard/common/clipboardService.js","../node_modules/monaco-editor/esm/vs/platform/commands/common/commands.js","../node_modules/monaco-editor/esm/vs/platform/configuration/common/configuration.js","../node_modules/monaco-editor/esm/vs/platform/configuration/common/configurationModels.js","../node_modules/monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js","../node_modules/monaco-editor/esm/vs/platform/configuration/common/configurations.js","../node_modules/monaco-editor/esm/vs/platform/contextkey/browser/contextKeyService.js","../node_modules/monaco-editor/esm/vs/platform/contextkey/common/scanner.js","../node_modules/monaco-editor/esm/vs/platform/contextkey/common/contextkey.js","../node_modules/monaco-editor/esm/vs/platform/contextkey/common/contextkeys.js","../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextMenuHandler.js","../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextMenuService.js","../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextView.js","../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextViewService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nlet isPseudo = (typeof document !== 'undefined' && document.location && document.location.hash.indexOf('pseudo=true') >= 0);\nconst DEFAULT_TAG = 'i-default';\nfunction _format(message, args) {\n    let result;\n    if (args.length === 0) {\n        result = message;\n    }\n    else {\n        result = message.replace(/\\{(\\d+)\\}/g, (match, rest) => {\n            const index = rest[0];\n            const arg = args[index];\n            let result = match;\n            if (typeof arg === 'string') {\n                result = arg;\n            }\n            else if (typeof arg === 'number' || typeof arg === 'boolean' || arg === void 0 || arg === null) {\n                result = String(arg);\n            }\n            return result;\n        });\n    }\n    if (isPseudo) {\n        // FF3B and FF3D is the Unicode zenkaku representation for [ and ]\n        result = '\\uFF3B' + result.replace(/[aouei]/g, '$&$&') + '\\uFF3D';\n    }\n    return result;\n}\nfunction findLanguageForModule(config, name) {\n    let result = config[name];\n    if (result) {\n        return result;\n    }\n    result = config['*'];\n    if (result) {\n        return result;\n    }\n    return null;\n}\nfunction endWithSlash(path) {\n    if (path.charAt(path.length - 1) === '/') {\n        return path;\n    }\n    return path + '/';\n}\nasync function getMessagesFromTranslationsService(translationServiceUrl, language, name) {\n    const url = endWithSlash(translationServiceUrl) + endWithSlash(language) + 'vscode/' + endWithSlash(name);\n    const res = await fetch(url);\n    if (res.ok) {\n        const messages = await res.json();\n        return messages;\n    }\n    throw new Error(`${res.status} - ${res.statusText}`);\n}\nfunction createScopedLocalize(scope) {\n    return function (idx, defaultValue) {\n        const restArgs = Array.prototype.slice.call(arguments, 2);\n        return _format(scope[idx], restArgs);\n    };\n}\nfunction createScopedLocalize2(scope) {\n    return (idx, defaultValue, ...args) => ({\n        value: _format(scope[idx], args),\n        original: _format(defaultValue, args)\n    });\n}\n/**\n * @skipMangle\n */\nexport function localize(data, message, ...args) {\n    return _format(message, args);\n}\n/**\n * @skipMangle\n */\nexport function localize2(data, message, ...args) {\n    const original = _format(message, args);\n    return {\n        value: original,\n        original\n    };\n}\n/**\n * @skipMangle\n */\nexport function getConfiguredDefaultLocale(_) {\n    // This returns undefined because this implementation isn't used and is overwritten by the loader\n    // when loaded.\n    return undefined;\n}\n/**\n * @skipMangle\n */\nexport function setPseudoTranslation(value) {\n    isPseudo = value;\n}\n/**\n * Invoked in a built product at run-time\n * @skipMangle\n */\nexport function create(key, data) {\n    var _a;\n    return {\n        localize: createScopedLocalize(data[key]),\n        localize2: createScopedLocalize2(data[key]),\n        getConfiguredDefaultLocale: (_a = data.getConfiguredDefaultLocale) !== null && _a !== void 0 ? _a : ((_) => undefined)\n    };\n}\n/**\n * Invoked by the loader at run-time\n * @skipMangle\n */\nexport function load(name, req, load, config) {\n    var _a;\n    const pluginConfig = (_a = config['vs/nls']) !== null && _a !== void 0 ? _a : {};\n    if (!name || name.length === 0) {\n        // TODO: We need to give back the mangled names here\n        return load({\n            localize: localize,\n            localize2: localize2,\n            getConfiguredDefaultLocale: () => { var _a; return (_a = pluginConfig.availableLanguages) === null || _a === void 0 ? void 0 : _a['*']; }\n        });\n    }\n    const language = pluginConfig.availableLanguages ? findLanguageForModule(pluginConfig.availableLanguages, name) : null;\n    const useDefaultLanguage = language === null || language === DEFAULT_TAG;\n    let suffix = '.nls';\n    if (!useDefaultLanguage) {\n        suffix = suffix + '.' + language;\n    }\n    const messagesLoaded = (messages) => {\n        if (Array.isArray(messages)) {\n            messages.localize = createScopedLocalize(messages);\n            messages.localize2 = createScopedLocalize2(messages);\n        }\n        else {\n            messages.localize = createScopedLocalize(messages[name]);\n            messages.localize2 = createScopedLocalize2(messages[name]);\n        }\n        messages.getConfiguredDefaultLocale = () => { var _a; return (_a = pluginConfig.availableLanguages) === null || _a === void 0 ? void 0 : _a['*']; };\n        load(messages);\n    };\n    if (typeof pluginConfig.loadBundle === 'function') {\n        pluginConfig.loadBundle(name, language, (err, messages) => {\n            // We have an error. Load the English default strings to not fail\n            if (err) {\n                req([name + '.nls'], messagesLoaded);\n            }\n            else {\n                messagesLoaded(messages);\n            }\n        });\n    }\n    else if (pluginConfig.translationServiceUrl && !useDefaultLanguage) {\n        (async () => {\n            var _a;\n            try {\n                const messages = await getMessagesFromTranslationsService(pluginConfig.translationServiceUrl, language, name);\n                return messagesLoaded(messages);\n            }\n            catch (err) {\n                // Language is already as generic as it gets, so require default messages\n                if (!language.includes('-')) {\n                    console.error(err);\n                    return req([name + '.nls'], messagesLoaded);\n                }\n                try {\n                    // Since there is a dash, the language configured is a specific sub-language of the same generic language.\n                    // Since we were unable to load the specific language, try to load the generic language. Ex. we failed to find a\n                    // Swiss German (de-CH), so try to load the generic German (de) messages instead.\n                    const genericLanguage = language.split('-')[0];\n                    const messages = await getMessagesFromTranslationsService(pluginConfig.translationServiceUrl, genericLanguage, name);\n                    // We got some messages, so we configure the configuration to use the generic language for this session.\n                    (_a = pluginConfig.availableLanguages) !== null && _a !== void 0 ? _a : (pluginConfig.availableLanguages = {});\n                    pluginConfig.availableLanguages['*'] = genericLanguage;\n                    return messagesLoaded(messages);\n                }\n                catch (err) {\n                    console.error(err);\n                    return req([name + '.nls'], messagesLoaded);\n                }\n            }\n        })();\n    }\n    else {\n        req([name + suffix], messagesLoaded, (err) => {\n            if (suffix === '.nls') {\n                console.error('Failed trying to load default language strings', err);\n                return;\n            }\n            console.error(`Failed to load message bundle for language ${language}. Falling back to the default language:`, err);\n            req([name + '.nls'], messagesLoaded);\n        });\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { addDisposableListener } from '../../../base/browser/dom.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from '../common/accessibility.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nlet AccessibilityService = class AccessibilityService extends Disposable {\n    constructor(_contextKeyService, _layoutService, _configurationService) {\n        super();\n        this._contextKeyService = _contextKeyService;\n        this._layoutService = _layoutService;\n        this._configurationService = _configurationService;\n        this._accessibilitySupport = 0 /* AccessibilitySupport.Unknown */;\n        this._onDidChangeScreenReaderOptimized = new Emitter();\n        this._onDidChangeReducedMotion = new Emitter();\n        this._accessibilityModeEnabledContext = CONTEXT_ACCESSIBILITY_MODE_ENABLED.bindTo(this._contextKeyService);\n        const updateContextKey = () => this._accessibilityModeEnabledContext.set(this.isScreenReaderOptimized());\n        this._register(this._configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('editor.accessibilitySupport')) {\n                updateContextKey();\n                this._onDidChangeScreenReaderOptimized.fire();\n            }\n            if (e.affectsConfiguration('workbench.reduceMotion')) {\n                this._configMotionReduced = this._configurationService.getValue('workbench.reduceMotion');\n                this._onDidChangeReducedMotion.fire();\n            }\n        }));\n        updateContextKey();\n        this._register(this.onDidChangeScreenReaderOptimized(() => updateContextKey()));\n        const reduceMotionMatcher = mainWindow.matchMedia(`(prefers-reduced-motion: reduce)`);\n        this._systemMotionReduced = reduceMotionMatcher.matches;\n        this._configMotionReduced = this._configurationService.getValue('workbench.reduceMotion');\n        this.initReducedMotionListeners(reduceMotionMatcher);\n    }\n    initReducedMotionListeners(reduceMotionMatcher) {\n        this._register(addDisposableListener(reduceMotionMatcher, 'change', () => {\n            this._systemMotionReduced = reduceMotionMatcher.matches;\n            if (this._configMotionReduced === 'auto') {\n                this._onDidChangeReducedMotion.fire();\n            }\n        }));\n        const updateRootClasses = () => {\n            const reduce = this.isMotionReduced();\n            this._layoutService.mainContainer.classList.toggle('reduce-motion', reduce);\n            this._layoutService.mainContainer.classList.toggle('enable-motion', !reduce);\n        };\n        updateRootClasses();\n        this._register(this.onDidChangeReducedMotion(() => updateRootClasses()));\n    }\n    get onDidChangeScreenReaderOptimized() {\n        return this._onDidChangeScreenReaderOptimized.event;\n    }\n    isScreenReaderOptimized() {\n        const config = this._configurationService.getValue('editor.accessibilitySupport');\n        return config === 'on' || (config === 'auto' && this._accessibilitySupport === 2 /* AccessibilitySupport.Enabled */);\n    }\n    get onDidChangeReducedMotion() {\n        return this._onDidChangeReducedMotion.event;\n    }\n    isMotionReduced() {\n        const config = this._configMotionReduced;\n        return config === 'on' || (config === 'auto' && this._systemMotionReduced);\n    }\n    getAccessibilitySupport() {\n        return this._accessibilitySupport;\n    }\n};\nAccessibilityService = __decorate([\n    __param(0, IContextKeyService),\n    __param(1, ILayoutService),\n    __param(2, IConfigurationService)\n], AccessibilityService);\nexport { AccessibilityService };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IAccessibilityService = createDecorator('accessibilityService');\nexport const CONTEXT_ACCESSIBILITY_MODE_ENABLED = new RawContextKey('accessibilityModeEnabled', false);\n","import { localize } from '../../../nls.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IAccessibilitySignalService = createDecorator('accessibilitySignalService');\n/** Make sure you understand the doc comments of the method you want to call when using this token! */\nexport const AcknowledgeDocCommentsToken = Symbol('AcknowledgeDocCommentsToken');\n/**\n * Corresponds to the audio files in ./media.\n*/\nexport class Sound {\n    static register(options) {\n        const sound = new Sound(options.fileName);\n        return sound;\n    }\n    constructor(fileName) {\n        this.fileName = fileName;\n    }\n}\nSound.error = Sound.register({ fileName: 'error.mp3' });\nSound.warning = Sound.register({ fileName: 'warning.mp3' });\nSound.foldedArea = Sound.register({ fileName: 'foldedAreas.mp3' });\nSound.break = Sound.register({ fileName: 'break.mp3' });\nSound.quickFixes = Sound.register({ fileName: 'quickFixes.mp3' });\nSound.taskCompleted = Sound.register({ fileName: 'taskCompleted.mp3' });\nSound.taskFailed = Sound.register({ fileName: 'taskFailed.mp3' });\nSound.terminalBell = Sound.register({ fileName: 'terminalBell.mp3' });\nSound.diffLineInserted = Sound.register({ fileName: 'diffLineInserted.mp3' });\nSound.diffLineDeleted = Sound.register({ fileName: 'diffLineDeleted.mp3' });\nSound.diffLineModified = Sound.register({ fileName: 'diffLineModified.mp3' });\nSound.chatRequestSent = Sound.register({ fileName: 'chatRequestSent.mp3' });\nSound.chatResponseReceived1 = Sound.register({ fileName: 'chatResponseReceived1.mp3' });\nSound.chatResponseReceived2 = Sound.register({ fileName: 'chatResponseReceived2.mp3' });\nSound.chatResponseReceived3 = Sound.register({ fileName: 'chatResponseReceived3.mp3' });\nSound.chatResponseReceived4 = Sound.register({ fileName: 'chatResponseReceived4.mp3' });\nSound.clear = Sound.register({ fileName: 'clear.mp3' });\nSound.save = Sound.register({ fileName: 'save.mp3' });\nSound.format = Sound.register({ fileName: 'format.mp3' });\nSound.voiceRecordingStarted = Sound.register({ fileName: 'voiceRecordingStarted.mp3' });\nSound.voiceRecordingStopped = Sound.register({ fileName: 'voiceRecordingStopped.mp3' });\nSound.progress = Sound.register({ fileName: 'progress.mp3' });\nexport class SoundSource {\n    constructor(randomOneOf) {\n        this.randomOneOf = randomOneOf;\n    }\n}\nexport class AccessibilitySignal {\n    constructor(sound, name, legacySoundSettingsKey, settingsKey, legacyAnnouncementSettingsKey, announcementMessage) {\n        this.sound = sound;\n        this.name = name;\n        this.legacySoundSettingsKey = legacySoundSettingsKey;\n        this.settingsKey = settingsKey;\n        this.legacyAnnouncementSettingsKey = legacyAnnouncementSettingsKey;\n        this.announcementMessage = announcementMessage;\n    }\n    static register(options) {\n        const soundSource = new SoundSource('randomOneOf' in options.sound ? options.sound.randomOneOf : [options.sound]);\n        const signal = new AccessibilitySignal(soundSource, options.name, options.legacySoundSettingsKey, options.settingsKey, options.legacyAnnouncementSettingsKey, options.announcementMessage);\n        AccessibilitySignal._signals.add(signal);\n        return signal;\n    }\n}\nAccessibilitySignal._signals = new Set();\nAccessibilitySignal.errorAtPosition = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.positionHasError.name', 'Error at Position'),\n    sound: Sound.error,\n    announcementMessage: localize('accessibility.signals.positionHasError', 'Error'),\n    settingsKey: 'accessibility.signals.positionHasError',\n});\nAccessibilitySignal.warningAtPosition = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.positionHasWarning.name', 'Warning at Position'),\n    sound: Sound.warning,\n    announcementMessage: localize('accessibility.signals.positionHasWarning', 'Warning'),\n    settingsKey: 'accessibility.signals.positionHasWarning',\n});\nAccessibilitySignal.errorOnLine = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.lineHasError.name', 'Error on Line'),\n    sound: Sound.error,\n    legacySoundSettingsKey: 'audioCues.lineHasError',\n    legacyAnnouncementSettingsKey: \"accessibility.alert.error\" /* AccessibilityAlertSettingId.Error */,\n    announcementMessage: localize('accessibility.signals.lineHasError', 'Error on Line'),\n    settingsKey: 'accessibility.signals.lineHasError',\n});\nAccessibilitySignal.warningOnLine = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.lineHasWarning.name', 'Warning on Line'),\n    sound: Sound.warning,\n    legacySoundSettingsKey: 'audioCues.lineHasWarning',\n    legacyAnnouncementSettingsKey: \"accessibility.alert.warning\" /* AccessibilityAlertSettingId.Warning */,\n    announcementMessage: localize('accessibility.signals.lineHasWarning', 'Warning on Line'),\n    settingsKey: 'accessibility.signals.lineHasWarning',\n});\nAccessibilitySignal.foldedArea = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.lineHasFoldedArea.name', 'Folded Area on Line'),\n    sound: Sound.foldedArea,\n    legacySoundSettingsKey: 'audioCues.lineHasFoldedArea',\n    legacyAnnouncementSettingsKey: \"accessibility.alert.foldedArea\" /* AccessibilityAlertSettingId.FoldedArea */,\n    announcementMessage: localize('accessibility.signals.lineHasFoldedArea', 'Folded'),\n    settingsKey: 'accessibility.signals.lineHasFoldedArea',\n});\nAccessibilitySignal.break = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.lineHasBreakpoint.name', 'Breakpoint on Line'),\n    sound: Sound.break,\n    legacySoundSettingsKey: 'audioCues.lineHasBreakpoint',\n    legacyAnnouncementSettingsKey: \"accessibility.alert.breakpoint\" /* AccessibilityAlertSettingId.Breakpoint */,\n    announcementMessage: localize('accessibility.signals.lineHasBreakpoint', 'Breakpoint'),\n    settingsKey: 'accessibility.signals.lineHasBreakpoint',\n});\nAccessibilitySignal.inlineSuggestion = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.lineHasInlineSuggestion.name', 'Inline Suggestion on Line'),\n    sound: Sound.quickFixes,\n    legacySoundSettingsKey: 'audioCues.lineHasInlineSuggestion',\n    settingsKey: 'accessibility.signals.lineHasInlineSuggestion',\n});\nAccessibilitySignal.terminalQuickFix = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.terminalQuickFix.name', 'Terminal Quick Fix'),\n    sound: Sound.quickFixes,\n    legacySoundSettingsKey: 'audioCues.terminalQuickFix',\n    legacyAnnouncementSettingsKey: \"accessibility.alert.terminalQuickFix\" /* AccessibilityAlertSettingId.TerminalQuickFix */,\n    announcementMessage: localize('accessibility.signals.terminalQuickFix', 'Quick Fix'),\n    settingsKey: 'accessibility.signals.terminalQuickFix',\n});\nAccessibilitySignal.onDebugBreak = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.onDebugBreak.name', 'Debugger Stopped on Breakpoint'),\n    sound: Sound.break,\n    legacySoundSettingsKey: 'audioCues.onDebugBreak',\n    legacyAnnouncementSettingsKey: \"accessibility.alert.onDebugBreak\" /* AccessibilityAlertSettingId.OnDebugBreak */,\n    announcementMessage: localize('accessibility.signals.onDebugBreak', 'Breakpoint'),\n    settingsKey: 'accessibility.signals.onDebugBreak',\n});\nAccessibilitySignal.noInlayHints = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.noInlayHints', 'No Inlay Hints on Line'),\n    sound: Sound.error,\n    legacySoundSettingsKey: 'audioCues.noInlayHints',\n    legacyAnnouncementSettingsKey: \"accessibility.alert.noInlayHints\" /* AccessibilityAlertSettingId.NoInlayHints */,\n    announcementMessage: localize('accessibility.signals.noInlayHints', 'No Inlay Hints'),\n    settingsKey: 'accessibility.signals.noInlayHints',\n});\nAccessibilitySignal.taskCompleted = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.taskCompleted', 'Task Completed'),\n    sound: Sound.taskCompleted,\n    legacySoundSettingsKey: 'audioCues.taskCompleted',\n    legacyAnnouncementSettingsKey: \"accessibility.alert.taskCompleted\" /* AccessibilityAlertSettingId.TaskCompleted */,\n    announcementMessage: localize('accessibility.signals.taskCompleted', 'Task Completed'),\n    settingsKey: 'accessibility.signals.taskCompleted',\n});\nAccessibilitySignal.taskFailed = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.taskFailed', 'Task Failed'),\n    sound: Sound.taskFailed,\n    legacySoundSettingsKey: 'audioCues.taskFailed',\n    legacyAnnouncementSettingsKey: \"accessibility.alert.taskFailed\" /* AccessibilityAlertSettingId.TaskFailed */,\n    announcementMessage: localize('accessibility.signals.taskFailed', 'Task Failed'),\n    settingsKey: 'accessibility.signals.taskFailed',\n});\nAccessibilitySignal.terminalCommandFailed = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.terminalCommandFailed', 'Terminal Command Failed'),\n    sound: Sound.error,\n    legacySoundSettingsKey: 'audioCues.terminalCommandFailed',\n    legacyAnnouncementSettingsKey: \"accessibility.alert.terminalCommandFailed\" /* AccessibilityAlertSettingId.TerminalCommandFailed */,\n    announcementMessage: localize('accessibility.signals.terminalCommandFailed', 'Command Failed'),\n    settingsKey: 'accessibility.signals.terminalCommandFailed',\n});\nAccessibilitySignal.terminalBell = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.terminalBell', 'Terminal Bell'),\n    sound: Sound.terminalBell,\n    legacySoundSettingsKey: 'audioCues.terminalBell',\n    legacyAnnouncementSettingsKey: \"accessibility.alert.terminalBell\" /* AccessibilityAlertSettingId.TerminalBell */,\n    announcementMessage: localize('accessibility.signals.terminalBell', 'Terminal Bell'),\n    settingsKey: 'accessibility.signals.terminalBell',\n});\nAccessibilitySignal.notebookCellCompleted = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.notebookCellCompleted', 'Notebook Cell Completed'),\n    sound: Sound.taskCompleted,\n    legacySoundSettingsKey: 'audioCues.notebookCellCompleted',\n    legacyAnnouncementSettingsKey: \"accessibility.alert.notebookCellCompleted\" /* AccessibilityAlertSettingId.NotebookCellCompleted */,\n    announcementMessage: localize('accessibility.signals.notebookCellCompleted', 'Notebook Cell Completed'),\n    settingsKey: 'accessibility.signals.notebookCellCompleted',\n});\nAccessibilitySignal.notebookCellFailed = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.notebookCellFailed', 'Notebook Cell Failed'),\n    sound: Sound.taskFailed,\n    legacySoundSettingsKey: 'audioCues.notebookCellFailed',\n    legacyAnnouncementSettingsKey: \"accessibility.alert.notebookCellFailed\" /* AccessibilityAlertSettingId.NotebookCellFailed */,\n    announcementMessage: localize('accessibility.signals.notebookCellFailed', 'Notebook Cell Failed'),\n    settingsKey: 'accessibility.signals.notebookCellFailed',\n});\nAccessibilitySignal.diffLineInserted = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.diffLineInserted', 'Diff Line Inserted'),\n    sound: Sound.diffLineInserted,\n    legacySoundSettingsKey: 'audioCues.diffLineInserted',\n    settingsKey: 'accessibility.signals.diffLineInserted',\n});\nAccessibilitySignal.diffLineDeleted = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.diffLineDeleted', 'Diff Line Deleted'),\n    sound: Sound.diffLineDeleted,\n    legacySoundSettingsKey: 'audioCues.diffLineDeleted',\n    settingsKey: 'accessibility.signals.diffLineDeleted',\n});\nAccessibilitySignal.diffLineModified = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.diffLineModified', 'Diff Line Modified'),\n    sound: Sound.diffLineModified,\n    legacySoundSettingsKey: 'audioCues.diffLineModified',\n    settingsKey: 'accessibility.signals.diffLineModified',\n});\nAccessibilitySignal.chatRequestSent = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.chatRequestSent', 'Chat Request Sent'),\n    sound: Sound.chatRequestSent,\n    legacySoundSettingsKey: 'audioCues.chatRequestSent',\n    legacyAnnouncementSettingsKey: \"accessibility.alert.chatRequestSent\" /* AccessibilityAlertSettingId.ChatRequestSent */,\n    announcementMessage: localize('accessibility.signals.chatRequestSent', 'Chat Request Sent'),\n    settingsKey: 'accessibility.signals.chatRequestSent',\n});\nAccessibilitySignal.chatResponseReceived = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.chatResponseReceived', 'Chat Response Received'),\n    legacySoundSettingsKey: 'audioCues.chatResponseReceived',\n    sound: {\n        randomOneOf: [\n            Sound.chatResponseReceived1,\n            Sound.chatResponseReceived2,\n            Sound.chatResponseReceived3,\n            Sound.chatResponseReceived4\n        ]\n    },\n    settingsKey: 'accessibility.signals.chatResponseReceived'\n});\nAccessibilitySignal.progress = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.progress', 'Progress'),\n    sound: Sound.progress,\n    legacySoundSettingsKey: 'audioCues.chatResponsePending',\n    legacyAnnouncementSettingsKey: \"accessibility.alert.chatResponseProgress\" /* AccessibilityAlertSettingId.Progress */,\n    announcementMessage: localize('accessibility.signals.progress', 'Progress'),\n    settingsKey: 'accessibility.signals.progress'\n});\nAccessibilitySignal.clear = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.clear', 'Clear'),\n    sound: Sound.clear,\n    legacySoundSettingsKey: 'audioCues.clear',\n    legacyAnnouncementSettingsKey: \"accessibility.alert.clear\" /* AccessibilityAlertSettingId.Clear */,\n    announcementMessage: localize('accessibility.signals.clear', 'Clear'),\n    settingsKey: 'accessibility.signals.clear'\n});\nAccessibilitySignal.save = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.save', 'Save'),\n    sound: Sound.save,\n    legacySoundSettingsKey: 'audioCues.save',\n    legacyAnnouncementSettingsKey: \"accessibility.alert.save\" /* AccessibilityAlertSettingId.Save */,\n    announcementMessage: localize('accessibility.signals.save', 'Save'),\n    settingsKey: 'accessibility.signals.save'\n});\nAccessibilitySignal.format = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.format', 'Format'),\n    sound: Sound.format,\n    legacySoundSettingsKey: 'audioCues.format',\n    legacyAnnouncementSettingsKey: \"accessibility.alert.format\" /* AccessibilityAlertSettingId.Format */,\n    announcementMessage: localize('accessibility.signals.format', 'Format'),\n    settingsKey: 'accessibility.signals.format'\n});\nAccessibilitySignal.voiceRecordingStarted = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.voiceRecordingStarted', 'Voice Recording Started'),\n    sound: Sound.voiceRecordingStarted,\n    legacySoundSettingsKey: 'audioCues.voiceRecordingStarted',\n    settingsKey: 'accessibility.signals.voiceRecordingStarted'\n});\nAccessibilitySignal.voiceRecordingStopped = AccessibilitySignal.register({\n    name: localize('accessibilitySignals.voiceRecordingStopped', 'Voice Recording Stopped'),\n    sound: Sound.voiceRecordingStopped,\n    legacySoundSettingsKey: 'audioCues.voiceRecordingStopped',\n    settingsKey: 'accessibility.signals.voiceRecordingStopped'\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function isLocalizedString(thing) {\n    return thing\n        && typeof thing === 'object'\n        && typeof thing.original === 'string'\n        && typeof thing.value === 'string';\n}\nexport function isICommandActionToggleInfo(thing) {\n    return thing ? thing.condition !== undefined : false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { localize2 } from '../../../nls.js';\nexport const Categories = Object.freeze({\n    View: localize2('view', 'View'),\n    Help: localize2('help', 'Help'),\n    Test: localize2('test', 'Test'),\n    File: localize2('file', 'File'),\n    Preferences: localize2('preferences', 'Preferences'),\n    Developer: localize2({ key: 'developer', comment: ['A developer on Code itself or someone diagnosing issues in Code'] }, \"Developer\"),\n});\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { KeybindingLabel } from '../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { List } from '../../../base/browser/ui/list/listWidget.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { OS } from '../../../base/common/platform.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport './actionWidget.css';\nimport { localize } from '../../../nls.js';\nimport { IContextViewService } from '../../contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { defaultListStyles } from '../../theme/browser/defaultStyles.js';\nimport { asCssVariable } from '../../theme/common/colorRegistry.js';\nexport const acceptSelectedActionCommand = 'acceptSelectedCodeAction';\nexport const previewSelectedActionCommand = 'previewSelectedCodeAction';\nclass HeaderRenderer {\n    get templateId() { return \"header\" /* ActionListItemKind.Header */; }\n    renderTemplate(container) {\n        container.classList.add('group-header');\n        const text = document.createElement('span');\n        container.append(text);\n        return { container, text };\n    }\n    renderElement(element, _index, templateData) {\n        var _a, _b;\n        templateData.text.textContent = (_b = (_a = element.group) === null || _a === void 0 ? void 0 : _a.title) !== null && _b !== void 0 ? _b : '';\n    }\n    disposeTemplate(_templateData) {\n        // noop\n    }\n}\nlet ActionItemRenderer = class ActionItemRenderer {\n    get templateId() { return \"action\" /* ActionListItemKind.Action */; }\n    constructor(_supportsPreview, _keybindingService) {\n        this._supportsPreview = _supportsPreview;\n        this._keybindingService = _keybindingService;\n    }\n    renderTemplate(container) {\n        container.classList.add(this.templateId);\n        const icon = document.createElement('div');\n        icon.className = 'icon';\n        container.append(icon);\n        const text = document.createElement('span');\n        text.className = 'title';\n        container.append(text);\n        const keybinding = new KeybindingLabel(container, OS);\n        return { container, icon, text, keybinding };\n    }\n    renderElement(element, _index, data) {\n        var _a, _b, _c;\n        if ((_a = element.group) === null || _a === void 0 ? void 0 : _a.icon) {\n            data.icon.className = ThemeIcon.asClassName(element.group.icon);\n            if (element.group.icon.color) {\n                data.icon.style.color = asCssVariable(element.group.icon.color.id);\n            }\n        }\n        else {\n            data.icon.className = ThemeIcon.asClassName(Codicon.lightBulb);\n            data.icon.style.color = 'var(--vscode-editorLightBulb-foreground)';\n        }\n        if (!element.item || !element.label) {\n            return;\n        }\n        data.text.textContent = stripNewlines(element.label);\n        data.keybinding.set(element.keybinding);\n        dom.setVisibility(!!element.keybinding, data.keybinding.element);\n        const actionTitle = (_b = this._keybindingService.lookupKeybinding(acceptSelectedActionCommand)) === null || _b === void 0 ? void 0 : _b.getLabel();\n        const previewTitle = (_c = this._keybindingService.lookupKeybinding(previewSelectedActionCommand)) === null || _c === void 0 ? void 0 : _c.getLabel();\n        data.container.classList.toggle('option-disabled', element.disabled);\n        if (element.disabled) {\n            data.container.title = element.label;\n        }\n        else if (actionTitle && previewTitle) {\n            if (this._supportsPreview && element.canPreview) {\n                data.container.title = localize({ key: 'label-preview', comment: ['placeholders are keybindings, e.g \"F2 to Apply, Shift+F2 to Preview\"'] }, \"{0} to Apply, {1} to Preview\", actionTitle, previewTitle);\n            }\n            else {\n                data.container.title = localize({ key: 'label', comment: ['placeholder is a keybinding, e.g \"F2 to Apply\"'] }, \"{0} to Apply\", actionTitle);\n            }\n        }\n        else {\n            data.container.title = '';\n        }\n    }\n    disposeTemplate(_templateData) {\n        _templateData.keybinding.dispose();\n    }\n};\nActionItemRenderer = __decorate([\n    __param(1, IKeybindingService)\n], ActionItemRenderer);\nclass AcceptSelectedEvent extends UIEvent {\n    constructor() { super('acceptSelectedAction'); }\n}\nclass PreviewSelectedEvent extends UIEvent {\n    constructor() { super('previewSelectedAction'); }\n}\nfunction getKeyboardNavigationLabel(item) {\n    // Filter out header vs. action\n    if (item.kind === 'action') {\n        return item.label;\n    }\n    return undefined;\n}\nlet ActionList = class ActionList extends Disposable {\n    constructor(user, preview, items, _delegate, _contextViewService, _keybindingService) {\n        super();\n        this._delegate = _delegate;\n        this._contextViewService = _contextViewService;\n        this._keybindingService = _keybindingService;\n        this._actionLineHeight = 24;\n        this._headerLineHeight = 26;\n        this.cts = this._register(new CancellationTokenSource());\n        this.domNode = document.createElement('div');\n        this.domNode.classList.add('actionList');\n        const virtualDelegate = {\n            getHeight: element => element.kind === \"header\" /* ActionListItemKind.Header */ ? this._headerLineHeight : this._actionLineHeight,\n            getTemplateId: element => element.kind\n        };\n        this._list = this._register(new List(user, this.domNode, virtualDelegate, [\n            new ActionItemRenderer(preview, this._keybindingService),\n            new HeaderRenderer(),\n        ], {\n            keyboardSupport: false,\n            typeNavigationEnabled: true,\n            keyboardNavigationLabelProvider: { getKeyboardNavigationLabel },\n            accessibilityProvider: {\n                getAriaLabel: element => {\n                    if (element.kind === \"action\" /* ActionListItemKind.Action */) {\n                        let label = element.label ? stripNewlines(element === null || element === void 0 ? void 0 : element.label) : '';\n                        if (element.disabled) {\n                            label = localize({ key: 'customQuickFixWidget.labels', comment: [`Action widget labels for accessibility.`] }, \"{0}, Disabled Reason: {1}\", label, element.disabled);\n                        }\n                        return label;\n                    }\n                    return null;\n                },\n                getWidgetAriaLabel: () => localize({ key: 'customQuickFixWidget', comment: [`An action widget option`] }, \"Action Widget\"),\n                getRole: (e) => e.kind === \"action\" /* ActionListItemKind.Action */ ? 'option' : 'separator',\n                getWidgetRole: () => 'listbox',\n            },\n        }));\n        this._list.style(defaultListStyles);\n        this._register(this._list.onMouseClick(e => this.onListClick(e)));\n        this._register(this._list.onMouseOver(e => this.onListHover(e)));\n        this._register(this._list.onDidChangeFocus(() => this.onFocus()));\n        this._register(this._list.onDidChangeSelection(e => this.onListSelection(e)));\n        this._allMenuItems = items;\n        this._list.splice(0, this._list.length, this._allMenuItems);\n        if (this._list.length) {\n            this.focusNext();\n        }\n    }\n    focusCondition(element) {\n        return !element.disabled && element.kind === \"action\" /* ActionListItemKind.Action */;\n    }\n    hide(didCancel) {\n        this._delegate.onHide(didCancel);\n        this.cts.cancel();\n        this._contextViewService.hideContextView();\n    }\n    layout(minWidth) {\n        // Updating list height, depending on how many separators and headers there are.\n        const numHeaders = this._allMenuItems.filter(item => item.kind === 'header').length;\n        const itemsHeight = this._allMenuItems.length * this._actionLineHeight;\n        const heightWithHeaders = itemsHeight + numHeaders * this._headerLineHeight - numHeaders * this._actionLineHeight;\n        this._list.layout(heightWithHeaders);\n        let maxWidth = minWidth;\n        if (this._allMenuItems.length >= 50) {\n            maxWidth = 380;\n        }\n        else {\n            // For finding width dynamically (not using resize observer)\n            const itemWidths = this._allMenuItems.map((_, index) => {\n                const element = this.domNode.ownerDocument.getElementById(this._list.getElementID(index));\n                if (element) {\n                    element.style.width = 'auto';\n                    const width = element.getBoundingClientRect().width;\n                    element.style.width = '';\n                    return width;\n                }\n                return 0;\n            });\n            // resize observer - can be used in the future since list widget supports dynamic height but not width\n            maxWidth = Math.max(...itemWidths, minWidth);\n        }\n        const maxVhPrecentage = 0.7;\n        const height = Math.min(heightWithHeaders, this.domNode.ownerDocument.body.clientHeight * maxVhPrecentage);\n        this._list.layout(height, maxWidth);\n        this.domNode.style.height = `${height}px`;\n        this._list.domFocus();\n        return maxWidth;\n    }\n    focusPrevious() {\n        this._list.focusPrevious(1, true, undefined, this.focusCondition);\n    }\n    focusNext() {\n        this._list.focusNext(1, true, undefined, this.focusCondition);\n    }\n    acceptSelected(preview) {\n        const focused = this._list.getFocus();\n        if (focused.length === 0) {\n            return;\n        }\n        const focusIndex = focused[0];\n        const element = this._list.element(focusIndex);\n        if (!this.focusCondition(element)) {\n            return;\n        }\n        const event = preview ? new PreviewSelectedEvent() : new AcceptSelectedEvent();\n        this._list.setSelection([focusIndex], event);\n    }\n    onListSelection(e) {\n        if (!e.elements.length) {\n            return;\n        }\n        const element = e.elements[0];\n        if (element.item && this.focusCondition(element)) {\n            this._delegate.onSelect(element.item, e.browserEvent instanceof PreviewSelectedEvent);\n        }\n        else {\n            this._list.setSelection([]);\n        }\n    }\n    onFocus() {\n        var _a, _b;\n        const focused = this._list.getFocus();\n        if (focused.length === 0) {\n            return;\n        }\n        const focusIndex = focused[0];\n        const element = this._list.element(focusIndex);\n        (_b = (_a = this._delegate).onFocus) === null || _b === void 0 ? void 0 : _b.call(_a, element.item);\n    }\n    async onListHover(e) {\n        const element = e.element;\n        if (element && element.item && this.focusCondition(element)) {\n            if (this._delegate.onHover && !element.disabled && element.kind === \"action\" /* ActionListItemKind.Action */) {\n                const result = await this._delegate.onHover(element.item, this.cts.token);\n                element.canPreview = result ? result.canPreview : undefined;\n            }\n            if (e.index) {\n                this._list.splice(e.index, 1, [element]);\n            }\n        }\n        this._list.setFocus(typeof e.index === 'number' ? [e.index] : []);\n    }\n    onListClick(e) {\n        if (e.element && this.focusCondition(e.element)) {\n            this._list.setFocus([]);\n        }\n    }\n};\nActionList = __decorate([\n    __param(4, IContextViewService),\n    __param(5, IKeybindingService)\n], ActionList);\nexport { ActionList };\nfunction stripNewlines(str) {\n    return str.replace(/\\r\\n|\\r|\\n/g, ' ');\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { Disposable, DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport './actionWidget.css';\nimport { localize, localize2 } from '../../../nls.js';\nimport { acceptSelectedActionCommand, ActionList, previewSelectedActionCommand } from './actionList.js';\nimport { Action2, registerAction2 } from '../../actions/common/actions.js';\nimport { IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { IContextViewService } from '../../contextview/browser/contextView.js';\nimport { registerSingleton } from '../../instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { inputActiveOptionBackground, registerColor } from '../../theme/common/colorRegistry.js';\nregisterColor('actionBar.toggledBackground', { dark: inputActiveOptionBackground, light: inputActiveOptionBackground, hcDark: inputActiveOptionBackground, hcLight: inputActiveOptionBackground, }, localize('actionBar.toggledBackground', 'Background color for toggled action items in action bar.'));\nconst ActionWidgetContextKeys = {\n    Visible: new RawContextKey('codeActionMenuVisible', false, localize('codeActionMenuVisible', \"Whether the action widget list is visible\"))\n};\nexport const IActionWidgetService = createDecorator('actionWidgetService');\nlet ActionWidgetService = class ActionWidgetService extends Disposable {\n    get isVisible() {\n        return ActionWidgetContextKeys.Visible.getValue(this._contextKeyService) || false;\n    }\n    constructor(_contextViewService, _contextKeyService, _instantiationService) {\n        super();\n        this._contextViewService = _contextViewService;\n        this._contextKeyService = _contextKeyService;\n        this._instantiationService = _instantiationService;\n        this._list = this._register(new MutableDisposable());\n    }\n    show(user, supportsPreview, items, delegate, anchor, container, actionBarActions) {\n        const visibleContext = ActionWidgetContextKeys.Visible.bindTo(this._contextKeyService);\n        const list = this._instantiationService.createInstance(ActionList, user, supportsPreview, items, delegate);\n        this._contextViewService.showContextView({\n            getAnchor: () => anchor,\n            render: (container) => {\n                visibleContext.set(true);\n                return this._renderWidget(container, list, actionBarActions !== null && actionBarActions !== void 0 ? actionBarActions : []);\n            },\n            onHide: (didCancel) => {\n                visibleContext.reset();\n                this._onWidgetClosed(didCancel);\n            },\n        }, container, false);\n    }\n    acceptSelected(preview) {\n        var _a;\n        (_a = this._list.value) === null || _a === void 0 ? void 0 : _a.acceptSelected(preview);\n    }\n    focusPrevious() {\n        var _a, _b;\n        (_b = (_a = this._list) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.focusPrevious();\n    }\n    focusNext() {\n        var _a, _b;\n        (_b = (_a = this._list) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.focusNext();\n    }\n    hide(didCancel) {\n        var _a;\n        (_a = this._list.value) === null || _a === void 0 ? void 0 : _a.hide(didCancel);\n        this._list.clear();\n    }\n    _renderWidget(element, list, actionBarActions) {\n        var _a;\n        const widget = document.createElement('div');\n        widget.classList.add('action-widget');\n        element.appendChild(widget);\n        this._list.value = list;\n        if (this._list.value) {\n            widget.appendChild(this._list.value.domNode);\n        }\n        else {\n            throw new Error('List has no value');\n        }\n        const renderDisposables = new DisposableStore();\n        // Invisible div to block mouse interaction in the rest of the UI\n        const menuBlock = document.createElement('div');\n        const block = element.appendChild(menuBlock);\n        block.classList.add('context-view-block');\n        renderDisposables.add(dom.addDisposableListener(block, dom.EventType.MOUSE_DOWN, e => e.stopPropagation()));\n        // Invisible div to block mouse interaction with the menu\n        const pointerBlockDiv = document.createElement('div');\n        const pointerBlock = element.appendChild(pointerBlockDiv);\n        pointerBlock.classList.add('context-view-pointerBlock');\n        // Removes block on click INSIDE widget or ANY mouse movement\n        renderDisposables.add(dom.addDisposableListener(pointerBlock, dom.EventType.POINTER_MOVE, () => pointerBlock.remove()));\n        renderDisposables.add(dom.addDisposableListener(pointerBlock, dom.EventType.MOUSE_DOWN, () => pointerBlock.remove()));\n        // Action bar\n        let actionBarWidth = 0;\n        if (actionBarActions.length) {\n            const actionBar = this._createActionBar('.action-widget-action-bar', actionBarActions);\n            if (actionBar) {\n                widget.appendChild(actionBar.getContainer().parentElement);\n                renderDisposables.add(actionBar);\n                actionBarWidth = actionBar.getContainer().offsetWidth;\n            }\n        }\n        const width = (_a = this._list.value) === null || _a === void 0 ? void 0 : _a.layout(actionBarWidth);\n        widget.style.width = `${width}px`;\n        const focusTracker = renderDisposables.add(dom.trackFocus(element));\n        renderDisposables.add(focusTracker.onDidBlur(() => this.hide(true)));\n        return renderDisposables;\n    }\n    _createActionBar(className, actions) {\n        if (!actions.length) {\n            return undefined;\n        }\n        const container = dom.$(className);\n        const actionBar = new ActionBar(container);\n        actionBar.push(actions, { icon: false, label: true });\n        return actionBar;\n    }\n    _onWidgetClosed(didCancel) {\n        var _a;\n        (_a = this._list.value) === null || _a === void 0 ? void 0 : _a.hide(didCancel);\n    }\n};\nActionWidgetService = __decorate([\n    __param(0, IContextViewService),\n    __param(1, IContextKeyService),\n    __param(2, IInstantiationService)\n], ActionWidgetService);\nregisterSingleton(IActionWidgetService, ActionWidgetService, 1 /* InstantiationType.Delayed */);\nconst weight = 100 /* KeybindingWeight.EditorContrib */ + 1000;\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'hideCodeActionWidget',\n            title: localize2('hideCodeActionWidget.title', \"Hide action widget\"),\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 9 /* KeyCode.Escape */,\n                secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n            },\n        });\n    }\n    run(accessor) {\n        accessor.get(IActionWidgetService).hide(true);\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'selectPrevCodeAction',\n            title: localize2('selectPrevCodeAction.title', \"Select previous action\"),\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 16 /* KeyCode.UpArrow */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */],\n                mac: { primary: 16 /* KeyCode.UpArrow */, secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */, 256 /* KeyMod.WinCtrl */ | 46 /* KeyCode.KeyP */] },\n            }\n        });\n    }\n    run(accessor) {\n        const widgetService = accessor.get(IActionWidgetService);\n        if (widgetService instanceof ActionWidgetService) {\n            widgetService.focusPrevious();\n        }\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'selectNextCodeAction',\n            title: localize2('selectNextCodeAction.title', \"Select next action\"),\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 18 /* KeyCode.DownArrow */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */],\n                mac: { primary: 18 /* KeyCode.DownArrow */, secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */, 256 /* KeyMod.WinCtrl */ | 44 /* KeyCode.KeyN */] }\n            }\n        });\n    }\n    run(accessor) {\n        const widgetService = accessor.get(IActionWidgetService);\n        if (widgetService instanceof ActionWidgetService) {\n            widgetService.focusNext();\n        }\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: acceptSelectedActionCommand,\n            title: localize2('acceptSelected.title', \"Accept selected action\"),\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 3 /* KeyCode.Enter */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 89 /* KeyCode.Period */],\n            }\n        });\n    }\n    run(accessor) {\n        const widgetService = accessor.get(IActionWidgetService);\n        if (widgetService instanceof ActionWidgetService) {\n            widgetService.acceptSelected();\n        }\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: previewSelectedActionCommand,\n            title: localize2('previewSelected.title', \"Preview selected action\"),\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n            }\n        });\n    }\n    run(accessor) {\n        const widgetService = accessor.get(IActionWidgetService);\n        if (widgetService instanceof ActionWidgetService) {\n            widgetService.acceptSelected(true);\n        }\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { $, addDisposableListener, append, asCSSUrl, EventType, ModifierKeyEmitter, prepend } from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { ActionViewItem, BaseActionViewItem, SelectActionViewItem } from '../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { DropdownMenuActionViewItem } from '../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\nimport { ActionRunner, Separator, SubmenuAction } from '../../../base/common/actions.js';\nimport { UILabelProvider } from '../../../base/common/keybindingLabels.js';\nimport { combinedDisposable, MutableDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { isLinux, isWindows, OS } from '../../../base/common/platform.js';\nimport './menuEntryActionViewItem.css';\nimport { localize } from '../../../nls.js';\nimport { IMenuService, MenuItemAction, SubmenuItemAction } from '../common/actions.js';\nimport { isICommandActionToggleInfo } from '../../action/common/action.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IContextMenuService, IContextViewService } from '../../contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { IThemeService } from '../../theme/common/themeService.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { isDark } from '../../theme/common/theme.js';\nimport { assertType } from '../../../base/common/types.js';\nimport { asCssVariable, selectBorder } from '../../theme/common/colorRegistry.js';\nimport { defaultSelectBoxStyles } from '../../theme/browser/defaultStyles.js';\nimport { IAccessibilityService } from '../../accessibility/common/accessibility.js';\nexport function createAndFillInContextMenuActions(menu, options, target, primaryGroup) {\n    const groups = menu.getActions(options);\n    const modifierKeyEmitter = ModifierKeyEmitter.getInstance();\n    const useAlternativeActions = modifierKeyEmitter.keyStatus.altKey || ((isWindows || isLinux) && modifierKeyEmitter.keyStatus.shiftKey);\n    fillInActions(groups, target, useAlternativeActions, primaryGroup ? actionGroup => actionGroup === primaryGroup : actionGroup => actionGroup === 'navigation');\n}\nexport function createAndFillInActionBarActions(menu, options, target, primaryGroup, shouldInlineSubmenu, useSeparatorsInPrimaryActions) {\n    const groups = menu.getActions(options);\n    const isPrimaryAction = typeof primaryGroup === 'string' ? (actionGroup) => actionGroup === primaryGroup : primaryGroup;\n    // Action bars handle alternative actions on their own so the alternative actions should be ignored\n    fillInActions(groups, target, false, isPrimaryAction, shouldInlineSubmenu, useSeparatorsInPrimaryActions);\n}\nfunction fillInActions(groups, target, useAlternativeActions, isPrimaryAction = actionGroup => actionGroup === 'navigation', shouldInlineSubmenu = () => false, useSeparatorsInPrimaryActions = false) {\n    let primaryBucket;\n    let secondaryBucket;\n    if (Array.isArray(target)) {\n        primaryBucket = target;\n        secondaryBucket = target;\n    }\n    else {\n        primaryBucket = target.primary;\n        secondaryBucket = target.secondary;\n    }\n    const submenuInfo = new Set();\n    for (const [group, actions] of groups) {\n        let target;\n        if (isPrimaryAction(group)) {\n            target = primaryBucket;\n            if (target.length > 0 && useSeparatorsInPrimaryActions) {\n                target.push(new Separator());\n            }\n        }\n        else {\n            target = secondaryBucket;\n            if (target.length > 0) {\n                target.push(new Separator());\n            }\n        }\n        for (let action of actions) {\n            if (useAlternativeActions) {\n                action = action instanceof MenuItemAction && action.alt ? action.alt : action;\n            }\n            const newLen = target.push(action);\n            // keep submenu info for later inlining\n            if (action instanceof SubmenuAction) {\n                submenuInfo.add({ group, action, index: newLen - 1 });\n            }\n        }\n    }\n    // ask the outside if submenu should be inlined or not. only ask when\n    // there would be enough space\n    for (const { group, action, index } of submenuInfo) {\n        const target = isPrimaryAction(group) ? primaryBucket : secondaryBucket;\n        // inlining submenus with length 0 or 1 is easy,\n        // larger submenus need to be checked with the overall limit\n        const submenuActions = action.actions;\n        if (shouldInlineSubmenu(action, group, target.length)) {\n            target.splice(index, 1, ...submenuActions);\n        }\n    }\n}\nlet MenuEntryActionViewItem = class MenuEntryActionViewItem extends ActionViewItem {\n    constructor(action, options, _keybindingService, _notificationService, _contextKeyService, _themeService, _contextMenuService, _accessibilityService) {\n        super(undefined, action, { icon: !!(action.class || action.item.icon), label: !action.class && !action.item.icon, draggable: options === null || options === void 0 ? void 0 : options.draggable, keybinding: options === null || options === void 0 ? void 0 : options.keybinding, hoverDelegate: options === null || options === void 0 ? void 0 : options.hoverDelegate });\n        this._keybindingService = _keybindingService;\n        this._notificationService = _notificationService;\n        this._contextKeyService = _contextKeyService;\n        this._themeService = _themeService;\n        this._contextMenuService = _contextMenuService;\n        this._accessibilityService = _accessibilityService;\n        this._wantsAltCommand = false;\n        this._itemClassDispose = this._register(new MutableDisposable());\n        this._altKey = ModifierKeyEmitter.getInstance();\n    }\n    get _menuItemAction() {\n        return this._action;\n    }\n    get _commandAction() {\n        return this._wantsAltCommand && this._menuItemAction.alt || this._menuItemAction;\n    }\n    async onClick(event) {\n        event.preventDefault();\n        event.stopPropagation();\n        try {\n            await this.actionRunner.run(this._commandAction, this._context);\n        }\n        catch (err) {\n            this._notificationService.error(err);\n        }\n    }\n    render(container) {\n        super.render(container);\n        container.classList.add('menu-entry');\n        if (this.options.icon) {\n            this._updateItemClass(this._menuItemAction.item);\n        }\n        if (this._menuItemAction.alt) {\n            let isMouseOver = false;\n            const updateAltState = () => {\n                var _a;\n                const wantsAltCommand = !!((_a = this._menuItemAction.alt) === null || _a === void 0 ? void 0 : _a.enabled) &&\n                    (!this._accessibilityService.isMotionReduced() || isMouseOver) && (this._altKey.keyStatus.altKey ||\n                    (this._altKey.keyStatus.shiftKey && isMouseOver));\n                if (wantsAltCommand !== this._wantsAltCommand) {\n                    this._wantsAltCommand = wantsAltCommand;\n                    this.updateLabel();\n                    this.updateTooltip();\n                    this.updateClass();\n                }\n            };\n            this._register(this._altKey.event(updateAltState));\n            this._register(addDisposableListener(container, 'mouseleave', _ => {\n                isMouseOver = false;\n                updateAltState();\n            }));\n            this._register(addDisposableListener(container, 'mouseenter', _ => {\n                isMouseOver = true;\n                updateAltState();\n            }));\n            updateAltState();\n        }\n    }\n    updateLabel() {\n        if (this.options.label && this.label) {\n            this.label.textContent = this._commandAction.label;\n        }\n    }\n    getTooltip() {\n        var _a;\n        const keybinding = this._keybindingService.lookupKeybinding(this._commandAction.id, this._contextKeyService);\n        const keybindingLabel = keybinding && keybinding.getLabel();\n        const tooltip = this._commandAction.tooltip || this._commandAction.label;\n        let title = keybindingLabel\n            ? localize('titleAndKb', \"{0} ({1})\", tooltip, keybindingLabel)\n            : tooltip;\n        if (!this._wantsAltCommand && ((_a = this._menuItemAction.alt) === null || _a === void 0 ? void 0 : _a.enabled)) {\n            const altTooltip = this._menuItemAction.alt.tooltip || this._menuItemAction.alt.label;\n            const altKeybinding = this._keybindingService.lookupKeybinding(this._menuItemAction.alt.id, this._contextKeyService);\n            const altKeybindingLabel = altKeybinding && altKeybinding.getLabel();\n            const altTitleSection = altKeybindingLabel\n                ? localize('titleAndKb', \"{0} ({1})\", altTooltip, altKeybindingLabel)\n                : altTooltip;\n            title = localize('titleAndKbAndAlt', \"{0}\\n[{1}] {2}\", title, UILabelProvider.modifierLabels[OS].altKey, altTitleSection);\n        }\n        return title;\n    }\n    updateClass() {\n        if (this.options.icon) {\n            if (this._commandAction !== this._menuItemAction) {\n                if (this._menuItemAction.alt) {\n                    this._updateItemClass(this._menuItemAction.alt.item);\n                }\n            }\n            else {\n                this._updateItemClass(this._menuItemAction.item);\n            }\n        }\n    }\n    _updateItemClass(item) {\n        this._itemClassDispose.value = undefined;\n        const { element, label } = this;\n        if (!element || !label) {\n            return;\n        }\n        const icon = this._commandAction.checked && isICommandActionToggleInfo(item.toggled) && item.toggled.icon ? item.toggled.icon : item.icon;\n        if (!icon) {\n            return;\n        }\n        if (ThemeIcon.isThemeIcon(icon)) {\n            // theme icons\n            const iconClasses = ThemeIcon.asClassNameArray(icon);\n            label.classList.add(...iconClasses);\n            this._itemClassDispose.value = toDisposable(() => {\n                label.classList.remove(...iconClasses);\n            });\n        }\n        else {\n            // icon path/url\n            label.style.backgroundImage = (isDark(this._themeService.getColorTheme().type)\n                ? asCSSUrl(icon.dark)\n                : asCSSUrl(icon.light));\n            label.classList.add('icon');\n            this._itemClassDispose.value = combinedDisposable(toDisposable(() => {\n                label.style.backgroundImage = '';\n                label.classList.remove('icon');\n            }), this._themeService.onDidColorThemeChange(() => {\n                // refresh when the theme changes in case we go between dark <-> light\n                this.updateClass();\n            }));\n        }\n    }\n};\nMenuEntryActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, INotificationService),\n    __param(4, IContextKeyService),\n    __param(5, IThemeService),\n    __param(6, IContextMenuService),\n    __param(7, IAccessibilityService)\n], MenuEntryActionViewItem);\nexport { MenuEntryActionViewItem };\nlet SubmenuEntryActionViewItem = class SubmenuEntryActionViewItem extends DropdownMenuActionViewItem {\n    constructor(action, options, _keybindingService, _contextMenuService, _themeService) {\n        var _a, _b, _c;\n        const dropdownOptions = {\n            ...options,\n            menuAsChild: (_a = options === null || options === void 0 ? void 0 : options.menuAsChild) !== null && _a !== void 0 ? _a : false,\n            classNames: (_b = options === null || options === void 0 ? void 0 : options.classNames) !== null && _b !== void 0 ? _b : (ThemeIcon.isThemeIcon(action.item.icon) ? ThemeIcon.asClassName(action.item.icon) : undefined),\n            keybindingProvider: (_c = options === null || options === void 0 ? void 0 : options.keybindingProvider) !== null && _c !== void 0 ? _c : (action => _keybindingService.lookupKeybinding(action.id))\n        };\n        super(action, { getActions: () => action.actions }, _contextMenuService, dropdownOptions);\n        this._keybindingService = _keybindingService;\n        this._contextMenuService = _contextMenuService;\n        this._themeService = _themeService;\n    }\n    render(container) {\n        super.render(container);\n        assertType(this.element);\n        container.classList.add('menu-entry');\n        const action = this._action;\n        const { icon } = action.item;\n        if (icon && !ThemeIcon.isThemeIcon(icon)) {\n            this.element.classList.add('icon');\n            const setBackgroundImage = () => {\n                if (this.element) {\n                    this.element.style.backgroundImage = (isDark(this._themeService.getColorTheme().type)\n                        ? asCSSUrl(icon.dark)\n                        : asCSSUrl(icon.light));\n                }\n            };\n            setBackgroundImage();\n            this._register(this._themeService.onDidColorThemeChange(() => {\n                // refresh when the theme changes in case we go between dark <-> light\n                setBackgroundImage();\n            }));\n        }\n    }\n};\nSubmenuEntryActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, IContextMenuService),\n    __param(4, IThemeService)\n], SubmenuEntryActionViewItem);\nexport { SubmenuEntryActionViewItem };\nlet DropdownWithDefaultActionViewItem = class DropdownWithDefaultActionViewItem extends BaseActionViewItem {\n    constructor(submenuAction, options, _keybindingService, _notificationService, _contextMenuService, _menuService, _instaService, _storageService) {\n        var _a, _b, _c;\n        super(null, submenuAction);\n        this._keybindingService = _keybindingService;\n        this._notificationService = _notificationService;\n        this._contextMenuService = _contextMenuService;\n        this._menuService = _menuService;\n        this._instaService = _instaService;\n        this._storageService = _storageService;\n        this._container = null;\n        this._options = options;\n        this._storageKey = `${submenuAction.item.submenu.id}_lastActionId`;\n        // determine default action\n        let defaultAction;\n        const defaultActionId = (options === null || options === void 0 ? void 0 : options.persistLastActionId) ? _storageService.get(this._storageKey, 1 /* StorageScope.WORKSPACE */) : undefined;\n        if (defaultActionId) {\n            defaultAction = submenuAction.actions.find(a => defaultActionId === a.id);\n        }\n        if (!defaultAction) {\n            defaultAction = submenuAction.actions[0];\n        }\n        this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, defaultAction, { keybinding: this._getDefaultActionKeybindingLabel(defaultAction) });\n        const dropdownOptions = {\n            keybindingProvider: action => this._keybindingService.lookupKeybinding(action.id),\n            ...options,\n            menuAsChild: (_a = options === null || options === void 0 ? void 0 : options.menuAsChild) !== null && _a !== void 0 ? _a : true,\n            classNames: (_b = options === null || options === void 0 ? void 0 : options.classNames) !== null && _b !== void 0 ? _b : ['codicon', 'codicon-chevron-down'],\n            actionRunner: (_c = options === null || options === void 0 ? void 0 : options.actionRunner) !== null && _c !== void 0 ? _c : new ActionRunner(),\n        };\n        this._dropdown = new DropdownMenuActionViewItem(submenuAction, submenuAction.actions, this._contextMenuService, dropdownOptions);\n        this._register(this._dropdown.actionRunner.onDidRun((e) => {\n            if (e.action instanceof MenuItemAction) {\n                this.update(e.action);\n            }\n        }));\n    }\n    update(lastAction) {\n        var _a;\n        if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.persistLastActionId) {\n            this._storageService.store(this._storageKey, lastAction.id, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        this._defaultAction.dispose();\n        this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, lastAction, { keybinding: this._getDefaultActionKeybindingLabel(lastAction) });\n        this._defaultAction.actionRunner = new class extends ActionRunner {\n            async runAction(action, context) {\n                await action.run(undefined);\n            }\n        }();\n        if (this._container) {\n            this._defaultAction.render(prepend(this._container, $('.action-container')));\n        }\n    }\n    _getDefaultActionKeybindingLabel(defaultAction) {\n        var _a;\n        let defaultActionKeybinding;\n        if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.renderKeybindingWithDefaultActionLabel) {\n            const kb = this._keybindingService.lookupKeybinding(defaultAction.id);\n            if (kb) {\n                defaultActionKeybinding = `(${kb.getLabel()})`;\n            }\n        }\n        return defaultActionKeybinding;\n    }\n    setActionContext(newContext) {\n        super.setActionContext(newContext);\n        this._defaultAction.setActionContext(newContext);\n        this._dropdown.setActionContext(newContext);\n    }\n    render(container) {\n        this._container = container;\n        super.render(this._container);\n        this._container.classList.add('monaco-dropdown-with-default');\n        const primaryContainer = $('.action-container');\n        this._defaultAction.render(append(this._container, primaryContainer));\n        this._register(addDisposableListener(primaryContainer, EventType.KEY_DOWN, (e) => {\n            const event = new StandardKeyboardEvent(e);\n            if (event.equals(17 /* KeyCode.RightArrow */)) {\n                this._defaultAction.element.tabIndex = -1;\n                this._dropdown.focus();\n                event.stopPropagation();\n            }\n        }));\n        const dropdownContainer = $('.dropdown-action-container');\n        this._dropdown.render(append(this._container, dropdownContainer));\n        this._register(addDisposableListener(dropdownContainer, EventType.KEY_DOWN, (e) => {\n            var _a;\n            const event = new StandardKeyboardEvent(e);\n            if (event.equals(15 /* KeyCode.LeftArrow */)) {\n                this._defaultAction.element.tabIndex = 0;\n                this._dropdown.setFocusable(false);\n                (_a = this._defaultAction.element) === null || _a === void 0 ? void 0 : _a.focus();\n                event.stopPropagation();\n            }\n        }));\n    }\n    focus(fromRight) {\n        if (fromRight) {\n            this._dropdown.focus();\n        }\n        else {\n            this._defaultAction.element.tabIndex = 0;\n            this._defaultAction.element.focus();\n        }\n    }\n    blur() {\n        this._defaultAction.element.tabIndex = -1;\n        this._dropdown.blur();\n        this._container.blur();\n    }\n    setFocusable(focusable) {\n        if (focusable) {\n            this._defaultAction.element.tabIndex = 0;\n        }\n        else {\n            this._defaultAction.element.tabIndex = -1;\n            this._dropdown.setFocusable(false);\n        }\n    }\n    dispose() {\n        this._defaultAction.dispose();\n        this._dropdown.dispose();\n        super.dispose();\n    }\n};\nDropdownWithDefaultActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, INotificationService),\n    __param(4, IContextMenuService),\n    __param(5, IMenuService),\n    __param(6, IInstantiationService),\n    __param(7, IStorageService)\n], DropdownWithDefaultActionViewItem);\nexport { DropdownWithDefaultActionViewItem };\nlet SubmenuEntrySelectActionViewItem = class SubmenuEntrySelectActionViewItem extends SelectActionViewItem {\n    constructor(action, contextViewService) {\n        super(null, action, action.actions.map(a => ({\n            text: a.id === Separator.ID ? '\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500' : a.label,\n            isDisabled: !a.enabled,\n        })), 0, contextViewService, defaultSelectBoxStyles, { ariaLabel: action.tooltip, optionsAsChildren: true });\n        this.select(Math.max(0, action.actions.findIndex(a => a.checked)));\n    }\n    render(container) {\n        super.render(container);\n        container.style.borderColor = asCssVariable(selectBorder);\n    }\n    runAction(option, index) {\n        const action = this.action.actions[index];\n        if (action) {\n            this.actionRunner.run(action);\n        }\n    }\n};\nSubmenuEntrySelectActionViewItem = __decorate([\n    __param(1, IContextViewService)\n], SubmenuEntrySelectActionViewItem);\n/**\n * Creates action view items for menu actions or submenu actions.\n */\nexport function createActionViewItem(instaService, action, options) {\n    if (action instanceof MenuItemAction) {\n        return instaService.createInstance(MenuEntryActionViewItem, action, options);\n    }\n    else if (action instanceof SubmenuItemAction) {\n        if (action.item.isSelection) {\n            return instaService.createInstance(SubmenuEntrySelectActionViewItem, action);\n        }\n        else {\n            if (action.item.rememberDefaultAction) {\n                return instaService.createInstance(DropdownWithDefaultActionViewItem, action, { ...options, persistLastActionId: true });\n            }\n            else {\n                return instaService.createInstance(SubmenuEntryActionViewItem, action, options);\n            }\n        }\n    }\n    else {\n        return undefined;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { addDisposableListener, getWindow } from '../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { ToggleMenuAction, ToolBar } from '../../../base/browser/ui/toolbar/toolbar.js';\nimport { Separator, toAction } from '../../../base/common/actions.js';\nimport { coalesceInPlace } from '../../../base/common/arrays.js';\nimport { intersection } from '../../../base/common/collections.js';\nimport { BugIndicatingError } from '../../../base/common/errors.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { localize } from '../../../nls.js';\nimport { createAndFillInActionBarActions } from './menuEntryActionViewItem.js';\nimport { IMenuService, MenuItemAction, SubmenuItemAction } from '../common/actions.js';\nimport { createConfigureKeybindingAction } from '../common/menuService.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\n/**\n * The `WorkbenchToolBar` does\n * - support hiding of menu items\n * - lookup keybindings for each actions automatically\n * - send `workbenchActionExecuted`-events for each action\n *\n * See {@link MenuWorkbenchToolBar} for a toolbar that is backed by a menu.\n */\nlet WorkbenchToolBar = class WorkbenchToolBar extends ToolBar {\n    constructor(container, _options, _menuService, _contextKeyService, _contextMenuService, _keybindingService, _commandService, telemetryService) {\n        super(container, _contextMenuService, {\n            // defaults\n            getKeyBinding: (action) => { var _a; return (_a = _keybindingService.lookupKeybinding(action.id)) !== null && _a !== void 0 ? _a : undefined; },\n            // options (override defaults)\n            ..._options,\n            // mandatory (overide options)\n            allowContextMenu: true,\n            skipTelemetry: typeof (_options === null || _options === void 0 ? void 0 : _options.telemetrySource) === 'string',\n        });\n        this._options = _options;\n        this._menuService = _menuService;\n        this._contextKeyService = _contextKeyService;\n        this._contextMenuService = _contextMenuService;\n        this._keybindingService = _keybindingService;\n        this._commandService = _commandService;\n        this._sessionDisposables = this._store.add(new DisposableStore());\n        // telemetry logic\n        const telemetrySource = _options === null || _options === void 0 ? void 0 : _options.telemetrySource;\n        if (telemetrySource) {\n            this._store.add(this.actionBar.onDidRun(e => telemetryService.publicLog2('workbenchActionExecuted', { id: e.action.id, from: telemetrySource })));\n        }\n    }\n    setActions(_primary, _secondary = [], menuIds) {\n        var _a, _b, _c;\n        this._sessionDisposables.clear();\n        const primary = _primary.slice(); // for hiding and overflow we set some items to undefined\n        const secondary = _secondary.slice();\n        const toggleActions = [];\n        let toggleActionsCheckedCount = 0;\n        const extraSecondary = [];\n        let someAreHidden = false;\n        // unless disabled, move all hidden items to secondary group or ignore them\n        if (((_a = this._options) === null || _a === void 0 ? void 0 : _a.hiddenItemStrategy) !== -1 /* HiddenItemStrategy.NoHide */) {\n            for (let i = 0; i < primary.length; i++) {\n                const action = primary[i];\n                if (!(action instanceof MenuItemAction) && !(action instanceof SubmenuItemAction)) {\n                    // console.warn(`Action ${action.id}/${action.label} is not a MenuItemAction`);\n                    continue;\n                }\n                if (!action.hideActions) {\n                    continue;\n                }\n                // collect all toggle actions\n                toggleActions.push(action.hideActions.toggle);\n                if (action.hideActions.toggle.checked) {\n                    toggleActionsCheckedCount++;\n                }\n                // hidden items move into overflow or ignore\n                if (action.hideActions.isHidden) {\n                    someAreHidden = true;\n                    primary[i] = undefined;\n                    if (((_b = this._options) === null || _b === void 0 ? void 0 : _b.hiddenItemStrategy) !== 0 /* HiddenItemStrategy.Ignore */) {\n                        extraSecondary[i] = action;\n                    }\n                }\n            }\n        }\n        // count for max\n        if (((_c = this._options) === null || _c === void 0 ? void 0 : _c.overflowBehavior) !== undefined) {\n            const exemptedIds = intersection(new Set(this._options.overflowBehavior.exempted), Iterable.map(primary, a => a === null || a === void 0 ? void 0 : a.id));\n            const maxItems = this._options.overflowBehavior.maxItems - exemptedIds.size;\n            let count = 0;\n            for (let i = 0; i < primary.length; i++) {\n                const action = primary[i];\n                if (!action) {\n                    continue;\n                }\n                count++;\n                if (exemptedIds.has(action.id)) {\n                    continue;\n                }\n                if (count >= maxItems) {\n                    primary[i] = undefined;\n                    extraSecondary[i] = action;\n                }\n            }\n        }\n        // coalesce turns Array<IAction|undefined> into IAction[]\n        coalesceInPlace(primary);\n        coalesceInPlace(extraSecondary);\n        super.setActions(primary, Separator.join(extraSecondary, secondary));\n        // add context menu for toggle and configure keybinding actions\n        if (toggleActions.length > 0 || primary.length > 0) {\n            this._sessionDisposables.add(addDisposableListener(this.getElement(), 'contextmenu', e => {\n                var _a, _b, _c, _d, _e;\n                const event = new StandardMouseEvent(getWindow(this.getElement()), e);\n                const action = this.getItemAction(event.target);\n                if (!(action)) {\n                    return;\n                }\n                event.preventDefault();\n                event.stopPropagation();\n                const primaryActions = [];\n                // -- Configure Keybinding Action --\n                if (action instanceof MenuItemAction && action.menuKeybinding) {\n                    primaryActions.push(action.menuKeybinding);\n                }\n                else if (!(action instanceof SubmenuItemAction || action instanceof ToggleMenuAction)) {\n                    primaryActions.push(createConfigureKeybindingAction(action.id, undefined, this._commandService, this._keybindingService));\n                }\n                // -- Hide Actions --\n                if (toggleActions.length > 0) {\n                    let noHide = false;\n                    // last item cannot be hidden when using ignore strategy\n                    if (toggleActionsCheckedCount === 1 && ((_a = this._options) === null || _a === void 0 ? void 0 : _a.hiddenItemStrategy) === 0 /* HiddenItemStrategy.Ignore */) {\n                        noHide = true;\n                        for (let i = 0; i < toggleActions.length; i++) {\n                            if (toggleActions[i].checked) {\n                                toggleActions[i] = toAction({\n                                    id: action.id,\n                                    label: action.label,\n                                    checked: true,\n                                    enabled: false,\n                                    run() { }\n                                });\n                                break; // there is only one\n                            }\n                        }\n                    }\n                    // add \"hide foo\" actions\n                    if (!noHide && (action instanceof MenuItemAction || action instanceof SubmenuItemAction)) {\n                        if (!action.hideActions) {\n                            // no context menu for MenuItemAction instances that support no hiding\n                            // those are fake actions and need to be cleaned up\n                            return;\n                        }\n                        primaryActions.push(action.hideActions.hide);\n                    }\n                    else {\n                        primaryActions.push(toAction({\n                            id: 'label',\n                            label: localize('hide', \"Hide\"),\n                            enabled: false,\n                            run() { }\n                        }));\n                    }\n                }\n                const actions = Separator.join(primaryActions, toggleActions);\n                // add \"Reset Menu\" action\n                if (((_b = this._options) === null || _b === void 0 ? void 0 : _b.resetMenu) && !menuIds) {\n                    menuIds = [this._options.resetMenu];\n                }\n                if (someAreHidden && menuIds) {\n                    actions.push(new Separator());\n                    actions.push(toAction({\n                        id: 'resetThisMenu',\n                        label: localize('resetThisMenu', \"Reset Menu\"),\n                        run: () => this._menuService.resetHiddenStates(menuIds)\n                    }));\n                }\n                if (actions.length === 0) {\n                    return;\n                }\n                this._contextMenuService.showContextMenu({\n                    getAnchor: () => event,\n                    getActions: () => actions,\n                    // add context menu actions (iff appicable)\n                    menuId: (_c = this._options) === null || _c === void 0 ? void 0 : _c.contextMenu,\n                    menuActionOptions: { renderShortTitle: true, ...(_d = this._options) === null || _d === void 0 ? void 0 : _d.menuOptions },\n                    skipTelemetry: typeof ((_e = this._options) === null || _e === void 0 ? void 0 : _e.telemetrySource) === 'string',\n                    contextKeyService: this._contextKeyService,\n                });\n            }));\n        }\n    }\n};\nWorkbenchToolBar = __decorate([\n    __param(2, IMenuService),\n    __param(3, IContextKeyService),\n    __param(4, IContextMenuService),\n    __param(5, IKeybindingService),\n    __param(6, ICommandService),\n    __param(7, ITelemetryService)\n], WorkbenchToolBar);\nexport { WorkbenchToolBar };\n/**\n * A {@link WorkbenchToolBar workbench toolbar} that is purely driven from a {@link MenuId menu}-identifier.\n *\n * *Note* that Manual updates via `setActions` are NOT supported.\n */\nlet MenuWorkbenchToolBar = class MenuWorkbenchToolBar extends WorkbenchToolBar {\n    constructor(container, menuId, options, menuService, contextKeyService, contextMenuService, keybindingService, commandService, telemetryService) {\n        super(container, { resetMenu: menuId, ...options }, menuService, contextKeyService, contextMenuService, keybindingService, commandService, telemetryService);\n        this._onDidChangeMenuItems = this._store.add(new Emitter());\n        this.onDidChangeMenuItems = this._onDidChangeMenuItems.event;\n        // update logic\n        const menu = this._store.add(menuService.createMenu(menuId, contextKeyService, { emitEventsForSubmenuChanges: true }));\n        const updateToolbar = () => {\n            var _a, _b, _c;\n            const primary = [];\n            const secondary = [];\n            createAndFillInActionBarActions(menu, options === null || options === void 0 ? void 0 : options.menuOptions, { primary, secondary }, (_a = options === null || options === void 0 ? void 0 : options.toolbarOptions) === null || _a === void 0 ? void 0 : _a.primaryGroup, (_b = options === null || options === void 0 ? void 0 : options.toolbarOptions) === null || _b === void 0 ? void 0 : _b.shouldInlineSubmenu, (_c = options === null || options === void 0 ? void 0 : options.toolbarOptions) === null || _c === void 0 ? void 0 : _c.useSeparatorsInPrimaryActions);\n            container.classList.toggle('has-no-actions', primary.length === 0 && secondary.length === 0);\n            super.setActions(primary, secondary);\n        };\n        this._store.add(menu.onDidChange(() => {\n            updateToolbar();\n            this._onDidChangeMenuItems.fire(this);\n        }));\n        updateToolbar();\n    }\n    /**\n     * @deprecated The WorkbenchToolBar does not support this method because it works with menus.\n     */\n    setActions() {\n        throw new BugIndicatingError('This toolbar is populated from a menu.');\n    }\n};\nMenuWorkbenchToolBar = __decorate([\n    __param(3, IMenuService),\n    __param(4, IContextKeyService),\n    __param(5, IContextMenuService),\n    __param(6, IKeybindingService),\n    __param(7, ICommandService),\n    __param(8, ITelemetryService)\n], MenuWorkbenchToolBar);\nexport { MenuWorkbenchToolBar };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar MenuItemAction_1;\nimport { SubmenuAction } from '../../../base/common/actions.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { MicrotaskEmitter } from '../../../base/common/event.js';\nimport { DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { CommandsRegistry, ICommandService } from '../../commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../keybinding/common/keybindingsRegistry.js';\nexport function isIMenuItem(item) {\n    return item.command !== undefined;\n}\nexport function isISubmenuItem(item) {\n    return item.submenu !== undefined;\n}\nexport class MenuId {\n    /**\n     * Create a new `MenuId` with the unique identifier. Will throw if a menu\n     * with the identifier already exists, use `MenuId.for(ident)` or a unique\n     * identifier\n     */\n    constructor(identifier) {\n        if (MenuId._instances.has(identifier)) {\n            throw new TypeError(`MenuId with identifier '${identifier}' already exists. Use MenuId.for(ident) or a unique identifier`);\n        }\n        MenuId._instances.set(identifier, this);\n        this.id = identifier;\n    }\n}\nMenuId._instances = new Map();\nMenuId.CommandPalette = new MenuId('CommandPalette');\nMenuId.DebugBreakpointsContext = new MenuId('DebugBreakpointsContext');\nMenuId.DebugCallStackContext = new MenuId('DebugCallStackContext');\nMenuId.DebugConsoleContext = new MenuId('DebugConsoleContext');\nMenuId.DebugVariablesContext = new MenuId('DebugVariablesContext');\nMenuId.NotebookVariablesContext = new MenuId('NotebookVariablesContext');\nMenuId.DebugHoverContext = new MenuId('DebugHoverContext');\nMenuId.DebugWatchContext = new MenuId('DebugWatchContext');\nMenuId.DebugToolBar = new MenuId('DebugToolBar');\nMenuId.DebugToolBarStop = new MenuId('DebugToolBarStop');\nMenuId.EditorContext = new MenuId('EditorContext');\nMenuId.SimpleEditorContext = new MenuId('SimpleEditorContext');\nMenuId.EditorContent = new MenuId('EditorContent');\nMenuId.EditorLineNumberContext = new MenuId('EditorLineNumberContext');\nMenuId.EditorContextCopy = new MenuId('EditorContextCopy');\nMenuId.EditorContextPeek = new MenuId('EditorContextPeek');\nMenuId.EditorContextShare = new MenuId('EditorContextShare');\nMenuId.EditorTitle = new MenuId('EditorTitle');\nMenuId.EditorTitleRun = new MenuId('EditorTitleRun');\nMenuId.EditorTitleContext = new MenuId('EditorTitleContext');\nMenuId.EditorTitleContextShare = new MenuId('EditorTitleContextShare');\nMenuId.EmptyEditorGroup = new MenuId('EmptyEditorGroup');\nMenuId.EmptyEditorGroupContext = new MenuId('EmptyEditorGroupContext');\nMenuId.EditorTabsBarContext = new MenuId('EditorTabsBarContext');\nMenuId.EditorTabsBarShowTabsSubmenu = new MenuId('EditorTabsBarShowTabsSubmenu');\nMenuId.EditorTabsBarShowTabsZenModeSubmenu = new MenuId('EditorTabsBarShowTabsZenModeSubmenu');\nMenuId.EditorActionsPositionSubmenu = new MenuId('EditorActionsPositionSubmenu');\nMenuId.ExplorerContext = new MenuId('ExplorerContext');\nMenuId.ExplorerContextShare = new MenuId('ExplorerContextShare');\nMenuId.ExtensionContext = new MenuId('ExtensionContext');\nMenuId.GlobalActivity = new MenuId('GlobalActivity');\nMenuId.CommandCenter = new MenuId('CommandCenter');\nMenuId.CommandCenterCenter = new MenuId('CommandCenterCenter');\nMenuId.LayoutControlMenuSubmenu = new MenuId('LayoutControlMenuSubmenu');\nMenuId.LayoutControlMenu = new MenuId('LayoutControlMenu');\nMenuId.MenubarMainMenu = new MenuId('MenubarMainMenu');\nMenuId.MenubarAppearanceMenu = new MenuId('MenubarAppearanceMenu');\nMenuId.MenubarDebugMenu = new MenuId('MenubarDebugMenu');\nMenuId.MenubarEditMenu = new MenuId('MenubarEditMenu');\nMenuId.MenubarCopy = new MenuId('MenubarCopy');\nMenuId.MenubarFileMenu = new MenuId('MenubarFileMenu');\nMenuId.MenubarGoMenu = new MenuId('MenubarGoMenu');\nMenuId.MenubarHelpMenu = new MenuId('MenubarHelpMenu');\nMenuId.MenubarLayoutMenu = new MenuId('MenubarLayoutMenu');\nMenuId.MenubarNewBreakpointMenu = new MenuId('MenubarNewBreakpointMenu');\nMenuId.PanelAlignmentMenu = new MenuId('PanelAlignmentMenu');\nMenuId.PanelPositionMenu = new MenuId('PanelPositionMenu');\nMenuId.ActivityBarPositionMenu = new MenuId('ActivityBarPositionMenu');\nMenuId.MenubarPreferencesMenu = new MenuId('MenubarPreferencesMenu');\nMenuId.MenubarRecentMenu = new MenuId('MenubarRecentMenu');\nMenuId.MenubarSelectionMenu = new MenuId('MenubarSelectionMenu');\nMenuId.MenubarShare = new MenuId('MenubarShare');\nMenuId.MenubarSwitchEditorMenu = new MenuId('MenubarSwitchEditorMenu');\nMenuId.MenubarSwitchGroupMenu = new MenuId('MenubarSwitchGroupMenu');\nMenuId.MenubarTerminalMenu = new MenuId('MenubarTerminalMenu');\nMenuId.MenubarViewMenu = new MenuId('MenubarViewMenu');\nMenuId.MenubarHomeMenu = new MenuId('MenubarHomeMenu');\nMenuId.OpenEditorsContext = new MenuId('OpenEditorsContext');\nMenuId.OpenEditorsContextShare = new MenuId('OpenEditorsContextShare');\nMenuId.ProblemsPanelContext = new MenuId('ProblemsPanelContext');\nMenuId.SCMInputBox = new MenuId('SCMInputBox');\nMenuId.SCMChangesSeparator = new MenuId('SCMChangesSeparator');\nMenuId.SCMIncomingChanges = new MenuId('SCMIncomingChanges');\nMenuId.SCMIncomingChangesContext = new MenuId('SCMIncomingChangesContext');\nMenuId.SCMIncomingChangesSetting = new MenuId('SCMIncomingChangesSetting');\nMenuId.SCMOutgoingChanges = new MenuId('SCMOutgoingChanges');\nMenuId.SCMOutgoingChangesContext = new MenuId('SCMOutgoingChangesContext');\nMenuId.SCMOutgoingChangesSetting = new MenuId('SCMOutgoingChangesSetting');\nMenuId.SCMIncomingChangesAllChangesContext = new MenuId('SCMIncomingChangesAllChangesContext');\nMenuId.SCMIncomingChangesHistoryItemContext = new MenuId('SCMIncomingChangesHistoryItemContext');\nMenuId.SCMOutgoingChangesAllChangesContext = new MenuId('SCMOutgoingChangesAllChangesContext');\nMenuId.SCMOutgoingChangesHistoryItemContext = new MenuId('SCMOutgoingChangesHistoryItemContext');\nMenuId.SCMChangeContext = new MenuId('SCMChangeContext');\nMenuId.SCMResourceContext = new MenuId('SCMResourceContext');\nMenuId.SCMResourceContextShare = new MenuId('SCMResourceContextShare');\nMenuId.SCMResourceFolderContext = new MenuId('SCMResourceFolderContext');\nMenuId.SCMResourceGroupContext = new MenuId('SCMResourceGroupContext');\nMenuId.SCMSourceControl = new MenuId('SCMSourceControl');\nMenuId.SCMSourceControlInline = new MenuId('SCMSourceControlInline');\nMenuId.SCMSourceControlTitle = new MenuId('SCMSourceControlTitle');\nMenuId.SCMTitle = new MenuId('SCMTitle');\nMenuId.SearchContext = new MenuId('SearchContext');\nMenuId.SearchActionMenu = new MenuId('SearchActionContext');\nMenuId.StatusBarWindowIndicatorMenu = new MenuId('StatusBarWindowIndicatorMenu');\nMenuId.StatusBarRemoteIndicatorMenu = new MenuId('StatusBarRemoteIndicatorMenu');\nMenuId.StickyScrollContext = new MenuId('StickyScrollContext');\nMenuId.TestItem = new MenuId('TestItem');\nMenuId.TestItemGutter = new MenuId('TestItemGutter');\nMenuId.TestMessageContext = new MenuId('TestMessageContext');\nMenuId.TestMessageContent = new MenuId('TestMessageContent');\nMenuId.TestPeekElement = new MenuId('TestPeekElement');\nMenuId.TestPeekTitle = new MenuId('TestPeekTitle');\nMenuId.TouchBarContext = new MenuId('TouchBarContext');\nMenuId.TitleBarContext = new MenuId('TitleBarContext');\nMenuId.TitleBarTitleContext = new MenuId('TitleBarTitleContext');\nMenuId.TunnelContext = new MenuId('TunnelContext');\nMenuId.TunnelPrivacy = new MenuId('TunnelPrivacy');\nMenuId.TunnelProtocol = new MenuId('TunnelProtocol');\nMenuId.TunnelPortInline = new MenuId('TunnelInline');\nMenuId.TunnelTitle = new MenuId('TunnelTitle');\nMenuId.TunnelLocalAddressInline = new MenuId('TunnelLocalAddressInline');\nMenuId.TunnelOriginInline = new MenuId('TunnelOriginInline');\nMenuId.ViewItemContext = new MenuId('ViewItemContext');\nMenuId.ViewContainerTitle = new MenuId('ViewContainerTitle');\nMenuId.ViewContainerTitleContext = new MenuId('ViewContainerTitleContext');\nMenuId.ViewTitle = new MenuId('ViewTitle');\nMenuId.ViewTitleContext = new MenuId('ViewTitleContext');\nMenuId.CommentEditorActions = new MenuId('CommentEditorActions');\nMenuId.CommentThreadTitle = new MenuId('CommentThreadTitle');\nMenuId.CommentThreadActions = new MenuId('CommentThreadActions');\nMenuId.CommentThreadAdditionalActions = new MenuId('CommentThreadAdditionalActions');\nMenuId.CommentThreadTitleContext = new MenuId('CommentThreadTitleContext');\nMenuId.CommentThreadCommentContext = new MenuId('CommentThreadCommentContext');\nMenuId.CommentTitle = new MenuId('CommentTitle');\nMenuId.CommentActions = new MenuId('CommentActions');\nMenuId.CommentsViewThreadActions = new MenuId('CommentsViewThreadActions');\nMenuId.InteractiveToolbar = new MenuId('InteractiveToolbar');\nMenuId.InteractiveCellTitle = new MenuId('InteractiveCellTitle');\nMenuId.InteractiveCellDelete = new MenuId('InteractiveCellDelete');\nMenuId.InteractiveCellExecute = new MenuId('InteractiveCellExecute');\nMenuId.InteractiveInputExecute = new MenuId('InteractiveInputExecute');\nMenuId.IssueReporter = new MenuId('IssueReporter');\nMenuId.NotebookToolbar = new MenuId('NotebookToolbar');\nMenuId.NotebookStickyScrollContext = new MenuId('NotebookStickyScrollContext');\nMenuId.NotebookCellTitle = new MenuId('NotebookCellTitle');\nMenuId.NotebookCellDelete = new MenuId('NotebookCellDelete');\nMenuId.NotebookCellInsert = new MenuId('NotebookCellInsert');\nMenuId.NotebookCellBetween = new MenuId('NotebookCellBetween');\nMenuId.NotebookCellListTop = new MenuId('NotebookCellTop');\nMenuId.NotebookCellExecute = new MenuId('NotebookCellExecute');\nMenuId.NotebookCellExecuteGoTo = new MenuId('NotebookCellExecuteGoTo');\nMenuId.NotebookCellExecutePrimary = new MenuId('NotebookCellExecutePrimary');\nMenuId.NotebookDiffCellInputTitle = new MenuId('NotebookDiffCellInputTitle');\nMenuId.NotebookDiffCellMetadataTitle = new MenuId('NotebookDiffCellMetadataTitle');\nMenuId.NotebookDiffCellOutputsTitle = new MenuId('NotebookDiffCellOutputsTitle');\nMenuId.NotebookOutputToolbar = new MenuId('NotebookOutputToolbar');\nMenuId.NotebookOutlineFilter = new MenuId('NotebookOutlineFilter');\nMenuId.NotebookOutlineActionMenu = new MenuId('NotebookOutlineActionMenu');\nMenuId.NotebookEditorLayoutConfigure = new MenuId('NotebookEditorLayoutConfigure');\nMenuId.NotebookKernelSource = new MenuId('NotebookKernelSource');\nMenuId.BulkEditTitle = new MenuId('BulkEditTitle');\nMenuId.BulkEditContext = new MenuId('BulkEditContext');\nMenuId.TimelineItemContext = new MenuId('TimelineItemContext');\nMenuId.TimelineTitle = new MenuId('TimelineTitle');\nMenuId.TimelineTitleContext = new MenuId('TimelineTitleContext');\nMenuId.TimelineFilterSubMenu = new MenuId('TimelineFilterSubMenu');\nMenuId.AccountsContext = new MenuId('AccountsContext');\nMenuId.SidebarTitle = new MenuId('SidebarTitle');\nMenuId.PanelTitle = new MenuId('PanelTitle');\nMenuId.AuxiliaryBarTitle = new MenuId('AuxiliaryBarTitle');\nMenuId.AuxiliaryBarHeader = new MenuId('AuxiliaryBarHeader');\nMenuId.TerminalInstanceContext = new MenuId('TerminalInstanceContext');\nMenuId.TerminalEditorInstanceContext = new MenuId('TerminalEditorInstanceContext');\nMenuId.TerminalNewDropdownContext = new MenuId('TerminalNewDropdownContext');\nMenuId.TerminalTabContext = new MenuId('TerminalTabContext');\nMenuId.TerminalTabEmptyAreaContext = new MenuId('TerminalTabEmptyAreaContext');\nMenuId.TerminalStickyScrollContext = new MenuId('TerminalStickyScrollContext');\nMenuId.WebviewContext = new MenuId('WebviewContext');\nMenuId.InlineCompletionsActions = new MenuId('InlineCompletionsActions');\nMenuId.InlineEditActions = new MenuId('InlineEditActions');\nMenuId.NewFile = new MenuId('NewFile');\nMenuId.MergeInput1Toolbar = new MenuId('MergeToolbar1Toolbar');\nMenuId.MergeInput2Toolbar = new MenuId('MergeToolbar2Toolbar');\nMenuId.MergeBaseToolbar = new MenuId('MergeBaseToolbar');\nMenuId.MergeInputResultToolbar = new MenuId('MergeToolbarResultToolbar');\nMenuId.InlineSuggestionToolbar = new MenuId('InlineSuggestionToolbar');\nMenuId.InlineEditToolbar = new MenuId('InlineEditToolbar');\nMenuId.ChatContext = new MenuId('ChatContext');\nMenuId.ChatCodeBlock = new MenuId('ChatCodeblock');\nMenuId.ChatCompareBlock = new MenuId('ChatCompareBlock');\nMenuId.ChatMessageTitle = new MenuId('ChatMessageTitle');\nMenuId.ChatExecute = new MenuId('ChatExecute');\nMenuId.ChatExecuteSecondary = new MenuId('ChatExecuteSecondary');\nMenuId.ChatInputSide = new MenuId('ChatInputSide');\nMenuId.AccessibleView = new MenuId('AccessibleView');\nMenuId.MultiDiffEditorFileToolbar = new MenuId('MultiDiffEditorFileToolbar');\nMenuId.DiffEditorHunkToolbar = new MenuId('DiffEditorHunkToolbar');\nMenuId.DiffEditorSelectionToolbar = new MenuId('DiffEditorSelectionToolbar');\nexport const IMenuService = createDecorator('menuService');\nclass MenuRegistryChangeEvent {\n    static for(id) {\n        let value = this._all.get(id);\n        if (!value) {\n            value = new MenuRegistryChangeEvent(id);\n            this._all.set(id, value);\n        }\n        return value;\n    }\n    static merge(events) {\n        const ids = new Set();\n        for (const item of events) {\n            if (item instanceof MenuRegistryChangeEvent) {\n                ids.add(item.id);\n            }\n        }\n        return ids;\n    }\n    constructor(id) {\n        this.id = id;\n        this.has = candidate => candidate === id;\n    }\n}\nMenuRegistryChangeEvent._all = new Map();\nexport const MenuRegistry = new class {\n    constructor() {\n        this._commands = new Map();\n        this._menuItems = new Map();\n        this._onDidChangeMenu = new MicrotaskEmitter({\n            merge: MenuRegistryChangeEvent.merge\n        });\n        this.onDidChangeMenu = this._onDidChangeMenu.event;\n    }\n    addCommand(command) {\n        this._commands.set(command.id, command);\n        this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n        return toDisposable(() => {\n            if (this._commands.delete(command.id)) {\n                this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n            }\n        });\n    }\n    getCommand(id) {\n        return this._commands.get(id);\n    }\n    getCommands() {\n        const map = new Map();\n        this._commands.forEach((value, key) => map.set(key, value));\n        return map;\n    }\n    appendMenuItem(id, item) {\n        let list = this._menuItems.get(id);\n        if (!list) {\n            list = new LinkedList();\n            this._menuItems.set(id, list);\n        }\n        const rm = list.push(item);\n        this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n        return toDisposable(() => {\n            rm();\n            this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n        });\n    }\n    appendMenuItems(items) {\n        const result = new DisposableStore();\n        for (const { id, item } of items) {\n            result.add(this.appendMenuItem(id, item));\n        }\n        return result;\n    }\n    getMenuItems(id) {\n        let result;\n        if (this._menuItems.has(id)) {\n            result = [...this._menuItems.get(id)];\n        }\n        else {\n            result = [];\n        }\n        if (id === MenuId.CommandPalette) {\n            // CommandPalette is special because it shows\n            // all commands by default\n            this._appendImplicitItems(result);\n        }\n        return result;\n    }\n    _appendImplicitItems(result) {\n        const set = new Set();\n        for (const item of result) {\n            if (isIMenuItem(item)) {\n                set.add(item.command.id);\n                if (item.alt) {\n                    set.add(item.alt.id);\n                }\n            }\n        }\n        this._commands.forEach((command, id) => {\n            if (!set.has(id)) {\n                result.push({ command });\n            }\n        });\n    }\n};\nexport class SubmenuItemAction extends SubmenuAction {\n    constructor(item, hideActions, actions) {\n        super(`submenuitem.${item.submenu.id}`, typeof item.title === 'string' ? item.title : item.title.value, actions, 'submenu');\n        this.item = item;\n        this.hideActions = hideActions;\n    }\n}\n// implements IAction, does NOT extend Action, so that no one\n// subscribes to events of Action or modified properties\nlet MenuItemAction = MenuItemAction_1 = class MenuItemAction {\n    static label(action, options) {\n        return (options === null || options === void 0 ? void 0 : options.renderShortTitle) && action.shortTitle\n            ? (typeof action.shortTitle === 'string' ? action.shortTitle : action.shortTitle.value)\n            : (typeof action.title === 'string' ? action.title : action.title.value);\n    }\n    constructor(item, alt, options, hideActions, menuKeybinding, contextKeyService, _commandService) {\n        var _a, _b;\n        this.hideActions = hideActions;\n        this.menuKeybinding = menuKeybinding;\n        this._commandService = _commandService;\n        this.id = item.id;\n        this.label = MenuItemAction_1.label(item, options);\n        this.tooltip = (_b = (typeof item.tooltip === 'string' ? item.tooltip : (_a = item.tooltip) === null || _a === void 0 ? void 0 : _a.value)) !== null && _b !== void 0 ? _b : '';\n        this.enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\n        this.checked = undefined;\n        let icon;\n        if (item.toggled) {\n            const toggled = (item.toggled.condition ? item.toggled : { condition: item.toggled });\n            this.checked = contextKeyService.contextMatchesRules(toggled.condition);\n            if (this.checked && toggled.tooltip) {\n                this.tooltip = typeof toggled.tooltip === 'string' ? toggled.tooltip : toggled.tooltip.value;\n            }\n            if (this.checked && ThemeIcon.isThemeIcon(toggled.icon)) {\n                icon = toggled.icon;\n            }\n            if (this.checked && toggled.title) {\n                this.label = typeof toggled.title === 'string' ? toggled.title : toggled.title.value;\n            }\n        }\n        if (!icon) {\n            icon = ThemeIcon.isThemeIcon(item.icon) ? item.icon : undefined;\n        }\n        this.item = item;\n        this.alt = alt ? new MenuItemAction_1(alt, undefined, options, hideActions, undefined, contextKeyService, _commandService) : undefined;\n        this._options = options;\n        this.class = icon && ThemeIcon.asClassName(icon);\n    }\n    run(...args) {\n        var _a, _b;\n        let runArgs = [];\n        if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.arg) {\n            runArgs = [...runArgs, this._options.arg];\n        }\n        if ((_b = this._options) === null || _b === void 0 ? void 0 : _b.shouldForwardArgs) {\n            runArgs = [...runArgs, ...args];\n        }\n        return this._commandService.executeCommand(this.id, ...runArgs);\n    }\n};\nMenuItemAction = MenuItemAction_1 = __decorate([\n    __param(5, IContextKeyService),\n    __param(6, ICommandService)\n], MenuItemAction);\nexport { MenuItemAction };\nexport class Action2 {\n    constructor(desc) {\n        this.desc = desc;\n    }\n}\nexport function registerAction2(ctor) {\n    const disposables = new DisposableStore();\n    const action = new ctor();\n    const { f1, menu, keybinding, ...command } = action.desc;\n    if (CommandsRegistry.getCommand(command.id)) {\n        throw new Error(`Cannot register two commands with the same id: ${command.id}`);\n    }\n    // command\n    disposables.add(CommandsRegistry.registerCommand({\n        id: command.id,\n        handler: (accessor, ...args) => action.run(accessor, ...args),\n        metadata: command.metadata,\n    }));\n    // menu\n    if (Array.isArray(menu)) {\n        for (const item of menu) {\n            disposables.add(MenuRegistry.appendMenuItem(item.id, { command: { ...command, precondition: item.precondition === null ? undefined : command.precondition }, ...item }));\n        }\n    }\n    else if (menu) {\n        disposables.add(MenuRegistry.appendMenuItem(menu.id, { command: { ...command, precondition: menu.precondition === null ? undefined : command.precondition }, ...menu }));\n    }\n    if (f1) {\n        disposables.add(MenuRegistry.appendMenuItem(MenuId.CommandPalette, { command, when: command.precondition }));\n        disposables.add(MenuRegistry.addCommand(command));\n    }\n    // keybinding\n    if (Array.isArray(keybinding)) {\n        for (const item of keybinding) {\n            disposables.add(KeybindingsRegistry.registerKeybindingRule({\n                ...item,\n                id: command.id,\n                when: command.precondition ? ContextKeyExpr.and(command.precondition, item.when) : item.when\n            }));\n        }\n    }\n    else if (keybinding) {\n        disposables.add(KeybindingsRegistry.registerKeybindingRule({\n            ...keybinding,\n            id: command.id,\n            when: command.precondition ? ContextKeyExpr.and(command.precondition, keybinding.when) : keybinding.when\n        }));\n    }\n    return disposables;\n}\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar PersistedMenuHideState_1, MenuInfo_1;\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { DebounceEmitter, Emitter } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { isIMenuItem, isISubmenuItem, MenuItemAction, MenuRegistry, SubmenuItemAction } from './actions.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { Separator, toAction } from '../../../base/common/actions.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { removeFastWithoutKeepingOrder } from '../../../base/common/arrays.js';\nimport { localize } from '../../../nls.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nlet MenuService = class MenuService {\n    constructor(_commandService, _keybindingService, storageService) {\n        this._commandService = _commandService;\n        this._keybindingService = _keybindingService;\n        this._hiddenStates = new PersistedMenuHideState(storageService);\n    }\n    createMenu(id, contextKeyService, options) {\n        return new MenuImpl(id, this._hiddenStates, { emitEventsForSubmenuChanges: false, eventDebounceDelay: 50, ...options }, this._commandService, this._keybindingService, contextKeyService);\n    }\n    resetHiddenStates(ids) {\n        this._hiddenStates.reset(ids);\n    }\n};\nMenuService = __decorate([\n    __param(0, ICommandService),\n    __param(1, IKeybindingService),\n    __param(2, IStorageService)\n], MenuService);\nexport { MenuService };\nlet PersistedMenuHideState = PersistedMenuHideState_1 = class PersistedMenuHideState {\n    constructor(_storageService) {\n        this._storageService = _storageService;\n        this._disposables = new DisposableStore();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._ignoreChangeEvent = false;\n        this._hiddenByDefaultCache = new Map();\n        try {\n            const raw = _storageService.get(PersistedMenuHideState_1._key, 0 /* StorageScope.PROFILE */, '{}');\n            this._data = JSON.parse(raw);\n        }\n        catch (err) {\n            this._data = Object.create(null);\n        }\n        this._disposables.add(_storageService.onDidChangeValue(0 /* StorageScope.PROFILE */, PersistedMenuHideState_1._key, this._disposables)(() => {\n            if (!this._ignoreChangeEvent) {\n                try {\n                    const raw = _storageService.get(PersistedMenuHideState_1._key, 0 /* StorageScope.PROFILE */, '{}');\n                    this._data = JSON.parse(raw);\n                }\n                catch (err) {\n                    console.log('FAILED to read storage after UPDATE', err);\n                }\n            }\n            this._onDidChange.fire();\n        }));\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposables.dispose();\n    }\n    _isHiddenByDefault(menu, commandId) {\n        var _a;\n        return (_a = this._hiddenByDefaultCache.get(`${menu.id}/${commandId}`)) !== null && _a !== void 0 ? _a : false;\n    }\n    setDefaultState(menu, commandId, hidden) {\n        this._hiddenByDefaultCache.set(`${menu.id}/${commandId}`, hidden);\n    }\n    isHidden(menu, commandId) {\n        var _a, _b;\n        const hiddenByDefault = this._isHiddenByDefault(menu, commandId);\n        const state = (_b = (_a = this._data[menu.id]) === null || _a === void 0 ? void 0 : _a.includes(commandId)) !== null && _b !== void 0 ? _b : false;\n        return hiddenByDefault ? !state : state;\n    }\n    updateHidden(menu, commandId, hidden) {\n        const hiddenByDefault = this._isHiddenByDefault(menu, commandId);\n        if (hiddenByDefault) {\n            hidden = !hidden;\n        }\n        const entries = this._data[menu.id];\n        if (!hidden) {\n            // remove and cleanup\n            if (entries) {\n                const idx = entries.indexOf(commandId);\n                if (idx >= 0) {\n                    removeFastWithoutKeepingOrder(entries, idx);\n                }\n                if (entries.length === 0) {\n                    delete this._data[menu.id];\n                }\n            }\n        }\n        else {\n            // add unless already added\n            if (!entries) {\n                this._data[menu.id] = [commandId];\n            }\n            else {\n                const idx = entries.indexOf(commandId);\n                if (idx < 0) {\n                    entries.push(commandId);\n                }\n            }\n        }\n        this._persist();\n    }\n    reset(menus) {\n        if (menus === undefined) {\n            // reset all\n            this._data = Object.create(null);\n            this._persist();\n        }\n        else {\n            // reset only for a specific menu\n            for (const { id } of menus) {\n                if (this._data[id]) {\n                    delete this._data[id];\n                }\n            }\n            this._persist();\n        }\n    }\n    _persist() {\n        try {\n            this._ignoreChangeEvent = true;\n            const raw = JSON.stringify(this._data);\n            this._storageService.store(PersistedMenuHideState_1._key, raw, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n        }\n        finally {\n            this._ignoreChangeEvent = false;\n        }\n    }\n};\nPersistedMenuHideState._key = 'menu.hiddenCommands';\nPersistedMenuHideState = PersistedMenuHideState_1 = __decorate([\n    __param(0, IStorageService)\n], PersistedMenuHideState);\nlet MenuInfo = MenuInfo_1 = class MenuInfo {\n    constructor(_id, _hiddenStates, _collectContextKeysForSubmenus, _commandService, _keybindingService, _contextKeyService) {\n        this._id = _id;\n        this._hiddenStates = _hiddenStates;\n        this._collectContextKeysForSubmenus = _collectContextKeysForSubmenus;\n        this._commandService = _commandService;\n        this._keybindingService = _keybindingService;\n        this._contextKeyService = _contextKeyService;\n        this._menuGroups = [];\n        this._structureContextKeys = new Set();\n        this._preconditionContextKeys = new Set();\n        this._toggledContextKeys = new Set();\n        this.refresh();\n    }\n    get structureContextKeys() {\n        return this._structureContextKeys;\n    }\n    get preconditionContextKeys() {\n        return this._preconditionContextKeys;\n    }\n    get toggledContextKeys() {\n        return this._toggledContextKeys;\n    }\n    refresh() {\n        // reset\n        this._menuGroups.length = 0;\n        this._structureContextKeys.clear();\n        this._preconditionContextKeys.clear();\n        this._toggledContextKeys.clear();\n        const menuItems = MenuRegistry.getMenuItems(this._id);\n        let group;\n        menuItems.sort(MenuInfo_1._compareMenuItems);\n        for (const item of menuItems) {\n            // group by groupId\n            const groupName = item.group || '';\n            if (!group || group[0] !== groupName) {\n                group = [groupName, []];\n                this._menuGroups.push(group);\n            }\n            group[1].push(item);\n            // keep keys for eventing\n            this._collectContextKeys(item);\n        }\n    }\n    _collectContextKeys(item) {\n        MenuInfo_1._fillInKbExprKeys(item.when, this._structureContextKeys);\n        if (isIMenuItem(item)) {\n            // keep precondition keys for event if applicable\n            if (item.command.precondition) {\n                MenuInfo_1._fillInKbExprKeys(item.command.precondition, this._preconditionContextKeys);\n            }\n            // keep toggled keys for event if applicable\n            if (item.command.toggled) {\n                const toggledExpression = item.command.toggled.condition || item.command.toggled;\n                MenuInfo_1._fillInKbExprKeys(toggledExpression, this._toggledContextKeys);\n            }\n        }\n        else if (this._collectContextKeysForSubmenus) {\n            // recursively collect context keys from submenus so that this\n            // menu fires events when context key changes affect submenus\n            MenuRegistry.getMenuItems(item.submenu).forEach(this._collectContextKeys, this);\n        }\n    }\n    createActionGroups(options) {\n        const result = [];\n        for (const group of this._menuGroups) {\n            const [id, items] = group;\n            const activeActions = [];\n            for (const item of items) {\n                if (this._contextKeyService.contextMatchesRules(item.when)) {\n                    const isMenuItem = isIMenuItem(item);\n                    if (isMenuItem) {\n                        this._hiddenStates.setDefaultState(this._id, item.command.id, !!item.isHiddenByDefault);\n                    }\n                    const menuHide = createMenuHide(this._id, isMenuItem ? item.command : item, this._hiddenStates);\n                    if (isMenuItem) {\n                        // MenuItemAction\n                        const menuKeybinding = createConfigureKeybindingAction(item.command.id, item.when, this._commandService, this._keybindingService);\n                        activeActions.push(new MenuItemAction(item.command, item.alt, options, menuHide, menuKeybinding, this._contextKeyService, this._commandService));\n                    }\n                    else {\n                        // SubmenuItemAction\n                        const groups = new MenuInfo_1(item.submenu, this._hiddenStates, this._collectContextKeysForSubmenus, this._commandService, this._keybindingService, this._contextKeyService).createActionGroups(options);\n                        const submenuActions = Separator.join(...groups.map(g => g[1]));\n                        if (submenuActions.length > 0) {\n                            activeActions.push(new SubmenuItemAction(item, menuHide, submenuActions));\n                        }\n                    }\n                }\n            }\n            if (activeActions.length > 0) {\n                result.push([id, activeActions]);\n            }\n        }\n        return result;\n    }\n    static _fillInKbExprKeys(exp, set) {\n        if (exp) {\n            for (const key of exp.keys()) {\n                set.add(key);\n            }\n        }\n    }\n    static _compareMenuItems(a, b) {\n        const aGroup = a.group;\n        const bGroup = b.group;\n        if (aGroup !== bGroup) {\n            // Falsy groups come last\n            if (!aGroup) {\n                return 1;\n            }\n            else if (!bGroup) {\n                return -1;\n            }\n            // 'navigation' group comes first\n            if (aGroup === 'navigation') {\n                return -1;\n            }\n            else if (bGroup === 'navigation') {\n                return 1;\n            }\n            // lexical sort for groups\n            const value = aGroup.localeCompare(bGroup);\n            if (value !== 0) {\n                return value;\n            }\n        }\n        // sort on priority - default is 0\n        const aPrio = a.order || 0;\n        const bPrio = b.order || 0;\n        if (aPrio < bPrio) {\n            return -1;\n        }\n        else if (aPrio > bPrio) {\n            return 1;\n        }\n        // sort on titles\n        return MenuInfo_1._compareTitles(isIMenuItem(a) ? a.command.title : a.title, isIMenuItem(b) ? b.command.title : b.title);\n    }\n    static _compareTitles(a, b) {\n        const aStr = typeof a === 'string' ? a : a.original;\n        const bStr = typeof b === 'string' ? b : b.original;\n        return aStr.localeCompare(bStr);\n    }\n};\nMenuInfo = MenuInfo_1 = __decorate([\n    __param(3, ICommandService),\n    __param(4, IKeybindingService),\n    __param(5, IContextKeyService)\n], MenuInfo);\nlet MenuImpl = class MenuImpl {\n    constructor(id, hiddenStates, options, commandService, keybindingService, contextKeyService) {\n        this._disposables = new DisposableStore();\n        this._menuInfo = new MenuInfo(id, hiddenStates, options.emitEventsForSubmenuChanges, commandService, keybindingService, contextKeyService);\n        // Rebuild this menu whenever the menu registry reports an event for this MenuId.\n        // This usually happen while code and extensions are loaded and affects the over\n        // structure of the menu\n        const rebuildMenuSoon = new RunOnceScheduler(() => {\n            this._menuInfo.refresh();\n            this._onDidChange.fire({ menu: this, isStructuralChange: true, isEnablementChange: true, isToggleChange: true });\n        }, options.eventDebounceDelay);\n        this._disposables.add(rebuildMenuSoon);\n        this._disposables.add(MenuRegistry.onDidChangeMenu(e => {\n            if (e.has(id)) {\n                rebuildMenuSoon.schedule();\n            }\n        }));\n        // When context keys or storage state changes we need to check if the menu also has changed. However,\n        // we only do that when someone listens on this menu because (1) these events are\n        // firing often and (2) menu are often leaked\n        const lazyListener = this._disposables.add(new DisposableStore());\n        const merge = (events) => {\n            let isStructuralChange = false;\n            let isEnablementChange = false;\n            let isToggleChange = false;\n            for (const item of events) {\n                isStructuralChange = isStructuralChange || item.isStructuralChange;\n                isEnablementChange = isEnablementChange || item.isEnablementChange;\n                isToggleChange = isToggleChange || item.isToggleChange;\n                if (isStructuralChange && isEnablementChange && isToggleChange) {\n                    // everything is TRUE, no need to continue iterating\n                    break;\n                }\n            }\n            return { menu: this, isStructuralChange, isEnablementChange, isToggleChange };\n        };\n        const startLazyListener = () => {\n            lazyListener.add(contextKeyService.onDidChangeContext(e => {\n                const isStructuralChange = e.affectsSome(this._menuInfo.structureContextKeys);\n                const isEnablementChange = e.affectsSome(this._menuInfo.preconditionContextKeys);\n                const isToggleChange = e.affectsSome(this._menuInfo.toggledContextKeys);\n                if (isStructuralChange || isEnablementChange || isToggleChange) {\n                    this._onDidChange.fire({ menu: this, isStructuralChange, isEnablementChange, isToggleChange });\n                }\n            }));\n            lazyListener.add(hiddenStates.onDidChange(e => {\n                this._onDidChange.fire({ menu: this, isStructuralChange: true, isEnablementChange: false, isToggleChange: false });\n            }));\n        };\n        this._onDidChange = new DebounceEmitter({\n            // start/stop context key listener\n            onWillAddFirstListener: startLazyListener,\n            onDidRemoveLastListener: lazyListener.clear.bind(lazyListener),\n            delay: options.eventDebounceDelay,\n            merge\n        });\n        this.onDidChange = this._onDidChange.event;\n    }\n    getActions(options) {\n        return this._menuInfo.createActionGroups(options);\n    }\n    dispose() {\n        this._disposables.dispose();\n        this._onDidChange.dispose();\n    }\n};\nMenuImpl = __decorate([\n    __param(3, ICommandService),\n    __param(4, IKeybindingService),\n    __param(5, IContextKeyService)\n], MenuImpl);\nfunction createMenuHide(menu, command, states) {\n    const id = isISubmenuItem(command) ? command.submenu.id : command.id;\n    const title = typeof command.title === 'string' ? command.title : command.title.value;\n    const hide = toAction({\n        id: `hide/${menu.id}/${id}`,\n        label: localize('hide.label', 'Hide \\'{0}\\'', title),\n        run() { states.updateHidden(menu, id, true); }\n    });\n    const toggle = toAction({\n        id: `toggle/${menu.id}/${id}`,\n        label: title,\n        get checked() { return !states.isHidden(menu, id); },\n        run() { states.updateHidden(menu, id, !!this.checked); }\n    });\n    return {\n        hide,\n        toggle,\n        get isHidden() { return !toggle.checked; },\n    };\n}\nexport function createConfigureKeybindingAction(commandId, when = undefined, commandService, keybindingService) {\n    return toAction({\n        id: `configureKeybinding/${commandId}`,\n        label: localize('configure keybinding', \"Configure Keybinding\"),\n        run() {\n            // Only set the when clause when there is no keybinding\n            // It is possible that the action and the keybinding have different when clauses\n            const hasKeybinding = !!keybindingService.lookupKeybinding(commandId); // This may only be called inside the `run()` method as it can be expensive on startup. #210529\n            const whenValue = !hasKeybinding && when ? when.serialize() : undefined;\n            commandService.executeCommand('workbench.action.openGlobalKeybindings', `@command:${commandId}` + (whenValue ? ` +when:${whenValue}` : ''));\n        }\n    });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar BrowserClipboardService_1;\nimport { isSafari, isWebkitWebView } from '../../../base/browser/browser.js';\nimport { $, addDisposableListener, getActiveDocument, onDidRegisterWindow } from '../../../base/browser/dom.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { DeferredPromise } from '../../../base/common/async.js';\nimport { Event } from '../../../base/common/event.js';\nimport { hash } from '../../../base/common/hash.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { ILogService } from '../../log/common/log.js';\nlet BrowserClipboardService = BrowserClipboardService_1 = class BrowserClipboardService extends Disposable {\n    constructor(layoutService, logService) {\n        super();\n        this.layoutService = layoutService;\n        this.logService = logService;\n        this.mapTextToType = new Map(); // unsupported in web (only in-memory)\n        this.findText = ''; // unsupported in web (only in-memory)\n        this.resources = []; // unsupported in web (only in-memory)\n        this.resourcesStateHash = undefined;\n        if (isSafari || isWebkitWebView) {\n            this.installWebKitWriteTextWorkaround();\n        }\n        // Keep track of copy operations to reset our set of\n        // copied resources: since we keep resources in memory\n        // and not in the clipboard, we have to invalidate\n        // that state when the user copies other data.\n        this._register(Event.runAndSubscribe(onDidRegisterWindow, ({ window, disposables }) => {\n            disposables.add(addDisposableListener(window.document, 'copy', () => this.clearResources()));\n        }, { window: mainWindow, disposables: this._store }));\n    }\n    // In Safari, it has the following note:\n    //\n    // \"The request to write to the clipboard must be triggered during a user gesture.\n    // A call to clipboard.write or clipboard.writeText outside the scope of a user\n    // gesture(such as \"click\" or \"touch\" event handlers) will result in the immediate\n    // rejection of the promise returned by the API call.\"\n    // From: https://webkit.org/blog/10855/async-clipboard-api/\n    //\n    // Since extensions run in a web worker, and handle gestures in an asynchronous way,\n    // they are not classified by Safari as \"in response to a user gesture\" and will reject.\n    //\n    // This function sets up some handlers to work around that behavior.\n    installWebKitWriteTextWorkaround() {\n        const handler = () => {\n            const currentWritePromise = new DeferredPromise();\n            // Cancel the previous promise since we just created a new one in response to this new event\n            if (this.webKitPendingClipboardWritePromise && !this.webKitPendingClipboardWritePromise.isSettled) {\n                this.webKitPendingClipboardWritePromise.cancel();\n            }\n            this.webKitPendingClipboardWritePromise = currentWritePromise;\n            // The ctor of ClipboardItem allows you to pass in a promise that will resolve to a string.\n            // This allows us to pass in a Promise that will either be cancelled by another event or\n            // resolved with the contents of the first call to this.writeText.\n            // see https://developer.mozilla.org/en-US/docs/Web/API/ClipboardItem/ClipboardItem#parameters\n            navigator.clipboard.write([new ClipboardItem({\n                    'text/plain': currentWritePromise.p,\n                })]).catch(async (err) => {\n                if (!(err instanceof Error) || err.name !== 'NotAllowedError' || !currentWritePromise.isRejected) {\n                    this.logService.error(err);\n                }\n            });\n        };\n        this._register(Event.runAndSubscribe(this.layoutService.onDidAddContainer, ({ container, disposables }) => {\n            disposables.add(addDisposableListener(container, 'click', handler));\n            disposables.add(addDisposableListener(container, 'keydown', handler));\n        }, { container: this.layoutService.mainContainer, disposables: this._store }));\n    }\n    async writeText(text, type) {\n        // Clear resources given we are writing text\n        this.writeResources([]);\n        // With type: only in-memory is supported\n        if (type) {\n            this.mapTextToType.set(type, text);\n            return;\n        }\n        if (this.webKitPendingClipboardWritePromise) {\n            // For Safari, we complete this Promise which allows the call to `navigator.clipboard.write()`\n            // above to resolve and successfully copy to the clipboard. If we let this continue, Safari\n            // would throw an error because this call stack doesn't appear to originate from a user gesture.\n            return this.webKitPendingClipboardWritePromise.complete(text);\n        }\n        // Guard access to navigator.clipboard with try/catch\n        // as we have seen DOMExceptions in certain browsers\n        // due to security policies.\n        try {\n            return await navigator.clipboard.writeText(text);\n        }\n        catch (error) {\n            console.error(error);\n        }\n        // Fallback to textarea and execCommand solution\n        this.fallbackWriteText(text);\n    }\n    fallbackWriteText(text) {\n        const activeDocument = getActiveDocument();\n        const activeElement = activeDocument.activeElement;\n        const textArea = activeDocument.body.appendChild($('textarea', { 'aria-hidden': true }));\n        textArea.style.height = '1px';\n        textArea.style.width = '1px';\n        textArea.style.position = 'absolute';\n        textArea.value = text;\n        textArea.focus();\n        textArea.select();\n        activeDocument.execCommand('copy');\n        if (activeElement instanceof HTMLElement) {\n            activeElement.focus();\n        }\n        activeDocument.body.removeChild(textArea);\n    }\n    async readText(type) {\n        // With type: only in-memory is supported\n        if (type) {\n            return this.mapTextToType.get(type) || '';\n        }\n        // Guard access to navigator.clipboard with try/catch\n        // as we have seen DOMExceptions in certain browsers\n        // due to security policies.\n        try {\n            return await navigator.clipboard.readText();\n        }\n        catch (error) {\n            console.error(error);\n        }\n        return '';\n    }\n    async readFindText() {\n        return this.findText;\n    }\n    async writeFindText(text) {\n        this.findText = text;\n    }\n    async writeResources(resources) {\n        if (resources.length === 0) {\n            this.clearResources();\n        }\n        else {\n            this.resources = resources;\n            this.resourcesStateHash = await this.computeResourcesStateHash();\n        }\n    }\n    async readResources() {\n        const resourcesStateHash = await this.computeResourcesStateHash();\n        if (this.resourcesStateHash !== resourcesStateHash) {\n            this.clearResources(); // state mismatch, resources no longer valid\n        }\n        return this.resources;\n    }\n    async computeResourcesStateHash() {\n        if (this.resources.length === 0) {\n            return undefined; // no resources, no hash needed\n        }\n        // Resources clipboard is managed in-memory only and thus\n        // fails to invalidate when clipboard data is changing.\n        // As such, we compute the hash of the current clipboard\n        // and use that to later validate the resources clipboard.\n        const clipboardText = await this.readText();\n        return hash(clipboardText.substring(0, BrowserClipboardService_1.MAX_RESOURCE_STATE_SOURCE_LENGTH));\n    }\n    clearResources() {\n        this.resources = [];\n        this.resourcesStateHash = undefined;\n    }\n};\nBrowserClipboardService.MAX_RESOURCE_STATE_SOURCE_LENGTH = 1000;\nBrowserClipboardService = BrowserClipboardService_1 = __decorate([\n    __param(0, ILayoutService),\n    __param(1, ILogService)\n], BrowserClipboardService);\nexport { BrowserClipboardService };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IClipboardService = createDecorator('clipboardService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { validateConstraints } from '../../../base/common/types.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ICommandService = createDecorator('commandService');\nexport const CommandsRegistry = new class {\n    constructor() {\n        this._commands = new Map();\n        this._onDidRegisterCommand = new Emitter();\n        this.onDidRegisterCommand = this._onDidRegisterCommand.event;\n    }\n    registerCommand(idOrCommand, handler) {\n        if (!idOrCommand) {\n            throw new Error(`invalid command`);\n        }\n        if (typeof idOrCommand === 'string') {\n            if (!handler) {\n                throw new Error(`invalid command`);\n            }\n            return this.registerCommand({ id: idOrCommand, handler });\n        }\n        // add argument validation if rich command metadata is provided\n        if (idOrCommand.metadata && Array.isArray(idOrCommand.metadata.args)) {\n            const constraints = [];\n            for (const arg of idOrCommand.metadata.args) {\n                constraints.push(arg.constraint);\n            }\n            const actualHandler = idOrCommand.handler;\n            idOrCommand.handler = function (accessor, ...args) {\n                validateConstraints(args, constraints);\n                return actualHandler(accessor, ...args);\n            };\n        }\n        // find a place to store the command\n        const { id } = idOrCommand;\n        let commands = this._commands.get(id);\n        if (!commands) {\n            commands = new LinkedList();\n            this._commands.set(id, commands);\n        }\n        const removeFn = commands.unshift(idOrCommand);\n        const ret = toDisposable(() => {\n            removeFn();\n            const command = this._commands.get(id);\n            if (command === null || command === void 0 ? void 0 : command.isEmpty()) {\n                this._commands.delete(id);\n            }\n        });\n        // tell the world about this command\n        this._onDidRegisterCommand.fire(id);\n        return ret;\n    }\n    registerCommandAlias(oldId, newId) {\n        return CommandsRegistry.registerCommand(oldId, (accessor, ...args) => accessor.get(ICommandService).executeCommand(newId, ...args));\n    }\n    getCommand(id) {\n        const list = this._commands.get(id);\n        if (!list || list.isEmpty()) {\n            return undefined;\n        }\n        return Iterable.first(list);\n    }\n    getCommands() {\n        const result = new Map();\n        for (const key of this._commands.keys()) {\n            const command = this.getCommand(key);\n            if (command) {\n                result.set(key, command);\n            }\n        }\n        return result;\n    }\n};\nCommandsRegistry.registerCommand('noop', () => { });\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IConfigurationService = createDecorator('configurationService');\nexport function toValuesTree(properties, conflictReporter) {\n    const root = Object.create(null);\n    for (const key in properties) {\n        addToValueTree(root, key, properties[key], conflictReporter);\n    }\n    return root;\n}\nexport function addToValueTree(settingsTreeRoot, key, value, conflictReporter) {\n    const segments = key.split('.');\n    const last = segments.pop();\n    let curr = settingsTreeRoot;\n    for (let i = 0; i < segments.length; i++) {\n        const s = segments[i];\n        let obj = curr[s];\n        switch (typeof obj) {\n            case 'undefined':\n                obj = curr[s] = Object.create(null);\n                break;\n            case 'object':\n                if (obj === null) {\n                    conflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is null`);\n                    return;\n                }\n                break;\n            default:\n                conflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n                return;\n        }\n        curr = obj;\n    }\n    if (typeof curr === 'object' && curr !== null) {\n        try {\n            curr[last] = value; // workaround https://github.com/microsoft/vscode/issues/13606\n        }\n        catch (e) {\n            conflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n        }\n    }\n    else {\n        conflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n    }\n}\nexport function removeFromValueTree(valueTree, key) {\n    const segments = key.split('.');\n    doRemoveFromValueTree(valueTree, segments);\n}\nfunction doRemoveFromValueTree(valueTree, segments) {\n    const first = segments.shift();\n    if (segments.length === 0) {\n        // Reached last segment\n        delete valueTree[first];\n        return;\n    }\n    if (Object.keys(valueTree).indexOf(first) !== -1) {\n        const value = valueTree[first];\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            doRemoveFromValueTree(value, segments);\n            if (Object.keys(value).length === 0) {\n                delete valueTree[first];\n            }\n        }\n    }\n}\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue(config, settingPath, defaultValue) {\n    function accessSetting(config, path) {\n        let current = config;\n        for (const component of path) {\n            if (typeof current !== 'object' || current === null) {\n                return undefined;\n            }\n            current = current[component];\n        }\n        return current;\n    }\n    const path = settingPath.split('.');\n    const result = accessSetting(config, path);\n    return typeof result === 'undefined' ? defaultValue : result;\n}\nexport function getLanguageTagSettingPlainKey(settingKey) {\n    return settingKey.replace(/[\\[\\]]/g, '');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from '../../../base/common/arrays.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport * as objects from '../../../base/common/objects.js';\nimport * as types from '../../../base/common/types.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { addToValueTree, getConfigurationValue, removeFromValueTree, toValuesTree } from './configuration.js';\nimport { Extensions, overrideIdentifiersFromKey, OVERRIDE_PROPERTY_REGEX } from './configurationRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nfunction freeze(data) {\n    return Object.isFrozen(data) ? data : objects.deepFreeze(data);\n}\nexport class ConfigurationModel {\n    static createEmptyModel(logService) {\n        return new ConfigurationModel({}, [], [], undefined, logService);\n    }\n    constructor(_contents, _keys, _overrides, raw, logService) {\n        this._contents = _contents;\n        this._keys = _keys;\n        this._overrides = _overrides;\n        this.raw = raw;\n        this.logService = logService;\n        this.overrideConfigurations = new Map();\n    }\n    get rawConfiguration() {\n        var _a;\n        if (!this._rawConfiguration) {\n            if ((_a = this.raw) === null || _a === void 0 ? void 0 : _a.length) {\n                const rawConfigurationModels = this.raw.map(raw => {\n                    if (raw instanceof ConfigurationModel) {\n                        return raw;\n                    }\n                    const parser = new ConfigurationModelParser('', this.logService);\n                    parser.parseRaw(raw);\n                    return parser.configurationModel;\n                });\n                this._rawConfiguration = rawConfigurationModels.reduce((previous, current) => current === previous ? current : previous.merge(current), rawConfigurationModels[0]);\n            }\n            else {\n                // raw is same as current\n                this._rawConfiguration = this;\n            }\n        }\n        return this._rawConfiguration;\n    }\n    get contents() {\n        return this._contents;\n    }\n    get overrides() {\n        return this._overrides;\n    }\n    get keys() {\n        return this._keys;\n    }\n    isEmpty() {\n        return this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n    }\n    getValue(section) {\n        return section ? getConfigurationValue(this.contents, section) : this.contents;\n    }\n    inspect(section, overrideIdentifier) {\n        const that = this;\n        return {\n            get value() {\n                return freeze(that.rawConfiguration.getValue(section));\n            },\n            get override() {\n                return overrideIdentifier ? freeze(that.rawConfiguration.getOverrideValue(section, overrideIdentifier)) : undefined;\n            },\n            get merged() {\n                return freeze(overrideIdentifier ? that.rawConfiguration.override(overrideIdentifier).getValue(section) : that.rawConfiguration.getValue(section));\n            },\n            get overrides() {\n                const overrides = [];\n                for (const { contents, identifiers, keys } of that.rawConfiguration.overrides) {\n                    const value = new ConfigurationModel(contents, keys, [], undefined, that.logService).getValue(section);\n                    if (value !== undefined) {\n                        overrides.push({ identifiers, value });\n                    }\n                }\n                return overrides.length ? freeze(overrides) : undefined;\n            }\n        };\n    }\n    getOverrideValue(section, overrideIdentifier) {\n        const overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n        return overrideContents\n            ? section ? getConfigurationValue(overrideContents, section) : overrideContents\n            : undefined;\n    }\n    override(identifier) {\n        let overrideConfigurationModel = this.overrideConfigurations.get(identifier);\n        if (!overrideConfigurationModel) {\n            overrideConfigurationModel = this.createOverrideConfigurationModel(identifier);\n            this.overrideConfigurations.set(identifier, overrideConfigurationModel);\n        }\n        return overrideConfigurationModel;\n    }\n    merge(...others) {\n        var _a, _b;\n        const contents = objects.deepClone(this.contents);\n        const overrides = objects.deepClone(this.overrides);\n        const keys = [...this.keys];\n        const raws = ((_a = this.raw) === null || _a === void 0 ? void 0 : _a.length) ? [...this.raw] : [this];\n        for (const other of others) {\n            raws.push(...(((_b = other.raw) === null || _b === void 0 ? void 0 : _b.length) ? other.raw : [other]));\n            if (other.isEmpty()) {\n                continue;\n            }\n            this.mergeContents(contents, other.contents);\n            for (const otherOverride of other.overrides) {\n                const [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n                if (override) {\n                    this.mergeContents(override.contents, otherOverride.contents);\n                    override.keys.push(...otherOverride.keys);\n                    override.keys = arrays.distinct(override.keys);\n                }\n                else {\n                    overrides.push(objects.deepClone(otherOverride));\n                }\n            }\n            for (const key of other.keys) {\n                if (keys.indexOf(key) === -1) {\n                    keys.push(key);\n                }\n            }\n        }\n        return new ConfigurationModel(contents, keys, overrides, raws.every(raw => raw instanceof ConfigurationModel) ? undefined : raws, this.logService);\n    }\n    createOverrideConfigurationModel(identifier) {\n        const overrideContents = this.getContentsForOverrideIdentifer(identifier);\n        if (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n            // If there are no valid overrides, return self\n            return this;\n        }\n        const contents = {};\n        for (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n            let contentsForKey = this.contents[key];\n            const overrideContentsForKey = overrideContents[key];\n            // If there are override contents for the key, clone and merge otherwise use base contents\n            if (overrideContentsForKey) {\n                // Clone and merge only if base contents and override contents are of type object otherwise just override\n                if (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n                    contentsForKey = objects.deepClone(contentsForKey);\n                    this.mergeContents(contentsForKey, overrideContentsForKey);\n                }\n                else {\n                    contentsForKey = overrideContentsForKey;\n                }\n            }\n            contents[key] = contentsForKey;\n        }\n        return new ConfigurationModel(contents, this.keys, this.overrides, undefined, this.logService);\n    }\n    mergeContents(source, target) {\n        for (const key of Object.keys(target)) {\n            if (key in source) {\n                if (types.isObject(source[key]) && types.isObject(target[key])) {\n                    this.mergeContents(source[key], target[key]);\n                    continue;\n                }\n            }\n            source[key] = objects.deepClone(target[key]);\n        }\n    }\n    getContentsForOverrideIdentifer(identifier) {\n        let contentsForIdentifierOnly = null;\n        let contents = null;\n        const mergeContents = (contentsToMerge) => {\n            if (contentsToMerge) {\n                if (contents) {\n                    this.mergeContents(contents, contentsToMerge);\n                }\n                else {\n                    contents = objects.deepClone(contentsToMerge);\n                }\n            }\n        };\n        for (const override of this.overrides) {\n            if (override.identifiers.length === 1 && override.identifiers[0] === identifier) {\n                contentsForIdentifierOnly = override.contents;\n            }\n            else if (override.identifiers.includes(identifier)) {\n                mergeContents(override.contents);\n            }\n        }\n        // Merge contents of the identifier only at the end to take precedence.\n        mergeContents(contentsForIdentifierOnly);\n        return contents;\n    }\n    toJSON() {\n        return {\n            contents: this.contents,\n            overrides: this.overrides,\n            keys: this.keys\n        };\n    }\n    // Update methods\n    addValue(key, value) {\n        this.updateValue(key, value, true);\n    }\n    setValue(key, value) {\n        this.updateValue(key, value, false);\n    }\n    removeValue(key) {\n        const index = this.keys.indexOf(key);\n        if (index === -1) {\n            return;\n        }\n        this.keys.splice(index, 1);\n        removeFromValueTree(this.contents, key);\n        if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n            this.overrides.splice(this.overrides.findIndex(o => arrays.equals(o.identifiers, overrideIdentifiersFromKey(key))), 1);\n        }\n    }\n    updateValue(key, value, add) {\n        addToValueTree(this.contents, key, value, e => this.logService.error(e));\n        add = add || this.keys.indexOf(key) === -1;\n        if (add) {\n            this.keys.push(key);\n        }\n        if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n            this.overrides.push({\n                identifiers: overrideIdentifiersFromKey(key),\n                keys: Object.keys(this.contents[key]),\n                contents: toValuesTree(this.contents[key], message => this.logService.error(message)),\n            });\n        }\n    }\n}\nexport class ConfigurationModelParser {\n    constructor(_name, logService) {\n        this._name = _name;\n        this.logService = logService;\n        this._raw = null;\n        this._configurationModel = null;\n        this._restrictedConfigurations = [];\n    }\n    get configurationModel() {\n        return this._configurationModel || ConfigurationModel.createEmptyModel(this.logService);\n    }\n    parseRaw(raw, options) {\n        this._raw = raw;\n        const { contents, keys, overrides, restricted, hasExcludedProperties } = this.doParseRaw(raw, options);\n        this._configurationModel = new ConfigurationModel(contents, keys, overrides, hasExcludedProperties ? [raw] : undefined /* raw has not changed */, this.logService);\n        this._restrictedConfigurations = restricted || [];\n    }\n    doParseRaw(raw, options) {\n        const configurationProperties = Registry.as(Extensions.Configuration).getConfigurationProperties();\n        const filtered = this.filter(raw, configurationProperties, true, options);\n        raw = filtered.raw;\n        const contents = toValuesTree(raw, message => this.logService.error(`Conflict in settings file ${this._name}: ${message}`));\n        const keys = Object.keys(raw);\n        const overrides = this.toOverrides(raw, message => this.logService.error(`Conflict in settings file ${this._name}: ${message}`));\n        return { contents, keys, overrides, restricted: filtered.restricted, hasExcludedProperties: filtered.hasExcludedProperties };\n    }\n    filter(properties, configurationProperties, filterOverriddenProperties, options) {\n        var _a, _b, _c;\n        let hasExcludedProperties = false;\n        if (!(options === null || options === void 0 ? void 0 : options.scopes) && !(options === null || options === void 0 ? void 0 : options.skipRestricted) && !((_a = options === null || options === void 0 ? void 0 : options.exclude) === null || _a === void 0 ? void 0 : _a.length)) {\n            return { raw: properties, restricted: [], hasExcludedProperties };\n        }\n        const raw = {};\n        const restricted = [];\n        for (const key in properties) {\n            if (OVERRIDE_PROPERTY_REGEX.test(key) && filterOverriddenProperties) {\n                const result = this.filter(properties[key], configurationProperties, false, options);\n                raw[key] = result.raw;\n                hasExcludedProperties = hasExcludedProperties || result.hasExcludedProperties;\n                restricted.push(...result.restricted);\n            }\n            else {\n                const propertySchema = configurationProperties[key];\n                const scope = propertySchema ? typeof propertySchema.scope !== 'undefined' ? propertySchema.scope : 3 /* ConfigurationScope.WINDOW */ : undefined;\n                if (propertySchema === null || propertySchema === void 0 ? void 0 : propertySchema.restricted) {\n                    restricted.push(key);\n                }\n                if (!((_b = options.exclude) === null || _b === void 0 ? void 0 : _b.includes(key)) /* Check exclude */\n                    && (((_c = options.include) === null || _c === void 0 ? void 0 : _c.includes(key) /* Check include */)\n                        || ((scope === undefined || options.scopes === undefined || options.scopes.includes(scope)) /* Check scopes */\n                            && !(options.skipRestricted && (propertySchema === null || propertySchema === void 0 ? void 0 : propertySchema.restricted))))) /* Check restricted */ {\n                    raw[key] = properties[key];\n                }\n                else {\n                    hasExcludedProperties = true;\n                }\n            }\n        }\n        return { raw, restricted, hasExcludedProperties };\n    }\n    toOverrides(raw, conflictReporter) {\n        const overrides = [];\n        for (const key of Object.keys(raw)) {\n            if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                const overrideRaw = {};\n                for (const keyInOverrideRaw in raw[key]) {\n                    overrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n                }\n                overrides.push({\n                    identifiers: overrideIdentifiersFromKey(key),\n                    keys: Object.keys(overrideRaw),\n                    contents: toValuesTree(overrideRaw, conflictReporter)\n                });\n            }\n        }\n        return overrides;\n    }\n}\nclass ConfigurationInspectValue {\n    constructor(key, overrides, _value, overrideIdentifiers, defaultConfiguration, policyConfiguration, applicationConfiguration, userConfiguration, localUserConfiguration, remoteUserConfiguration, workspaceConfiguration, folderConfigurationModel, memoryConfigurationModel) {\n        this.key = key;\n        this.overrides = overrides;\n        this._value = _value;\n        this.overrideIdentifiers = overrideIdentifiers;\n        this.defaultConfiguration = defaultConfiguration;\n        this.policyConfiguration = policyConfiguration;\n        this.applicationConfiguration = applicationConfiguration;\n        this.userConfiguration = userConfiguration;\n        this.localUserConfiguration = localUserConfiguration;\n        this.remoteUserConfiguration = remoteUserConfiguration;\n        this.workspaceConfiguration = workspaceConfiguration;\n        this.folderConfigurationModel = folderConfigurationModel;\n        this.memoryConfigurationModel = memoryConfigurationModel;\n    }\n    toInspectValue(inspectValue) {\n        return (inspectValue === null || inspectValue === void 0 ? void 0 : inspectValue.value) !== undefined || (inspectValue === null || inspectValue === void 0 ? void 0 : inspectValue.override) !== undefined || (inspectValue === null || inspectValue === void 0 ? void 0 : inspectValue.overrides) !== undefined ? inspectValue : undefined;\n    }\n    get userInspectValue() {\n        if (!this._userInspectValue) {\n            this._userInspectValue = this.userConfiguration.inspect(this.key, this.overrides.overrideIdentifier);\n        }\n        return this._userInspectValue;\n    }\n    get user() {\n        return this.toInspectValue(this.userInspectValue);\n    }\n}\nexport class Configuration {\n    constructor(_defaultConfiguration, _policyConfiguration, _applicationConfiguration, _localUserConfiguration, _remoteUserConfiguration, _workspaceConfiguration, _folderConfigurations, _memoryConfiguration, _memoryConfigurationByResource, logService) {\n        this._defaultConfiguration = _defaultConfiguration;\n        this._policyConfiguration = _policyConfiguration;\n        this._applicationConfiguration = _applicationConfiguration;\n        this._localUserConfiguration = _localUserConfiguration;\n        this._remoteUserConfiguration = _remoteUserConfiguration;\n        this._workspaceConfiguration = _workspaceConfiguration;\n        this._folderConfigurations = _folderConfigurations;\n        this._memoryConfiguration = _memoryConfiguration;\n        this._memoryConfigurationByResource = _memoryConfigurationByResource;\n        this.logService = logService;\n        this._workspaceConsolidatedConfiguration = null;\n        this._foldersConsolidatedConfigurations = new ResourceMap();\n        this._userConfiguration = null;\n    }\n    getValue(section, overrides, workspace) {\n        const consolidateConfigurationModel = this.getConsolidatedConfigurationModel(section, overrides, workspace);\n        return consolidateConfigurationModel.getValue(section);\n    }\n    updateValue(key, value, overrides = {}) {\n        let memoryConfiguration;\n        if (overrides.resource) {\n            memoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n            if (!memoryConfiguration) {\n                memoryConfiguration = ConfigurationModel.createEmptyModel(this.logService);\n                this._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n            }\n        }\n        else {\n            memoryConfiguration = this._memoryConfiguration;\n        }\n        if (value === undefined) {\n            memoryConfiguration.removeValue(key);\n        }\n        else {\n            memoryConfiguration.setValue(key, value);\n        }\n        if (!overrides.resource) {\n            this._workspaceConsolidatedConfiguration = null;\n        }\n    }\n    inspect(key, overrides, workspace) {\n        const consolidateConfigurationModel = this.getConsolidatedConfigurationModel(key, overrides, workspace);\n        const folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n        const memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n        const overrideIdentifiers = new Set();\n        for (const override of consolidateConfigurationModel.overrides) {\n            for (const overrideIdentifier of override.identifiers) {\n                if (consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined) {\n                    overrideIdentifiers.add(overrideIdentifier);\n                }\n            }\n        }\n        return new ConfigurationInspectValue(key, overrides, consolidateConfigurationModel.getValue(key), overrideIdentifiers.size ? [...overrideIdentifiers] : undefined, this._defaultConfiguration, this._policyConfiguration.isEmpty() ? undefined : this._policyConfiguration, this.applicationConfiguration.isEmpty() ? undefined : this.applicationConfiguration, this.userConfiguration, this.localUserConfiguration, this.remoteUserConfiguration, workspace ? this._workspaceConfiguration : undefined, folderConfigurationModel ? folderConfigurationModel : undefined, memoryConfigurationModel);\n    }\n    get applicationConfiguration() {\n        return this._applicationConfiguration;\n    }\n    get userConfiguration() {\n        if (!this._userConfiguration) {\n            this._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n        }\n        return this._userConfiguration;\n    }\n    get localUserConfiguration() {\n        return this._localUserConfiguration;\n    }\n    get remoteUserConfiguration() {\n        return this._remoteUserConfiguration;\n    }\n    getConsolidatedConfigurationModel(section, overrides, workspace) {\n        let configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n        if (overrides.overrideIdentifier) {\n            configurationModel = configurationModel.override(overrides.overrideIdentifier);\n        }\n        if (!this._policyConfiguration.isEmpty() && this._policyConfiguration.getValue(section) !== undefined) {\n            configurationModel = configurationModel.merge(this._policyConfiguration);\n        }\n        return configurationModel;\n    }\n    getConsolidatedConfigurationModelForResource({ resource }, workspace) {\n        let consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n        if (workspace && resource) {\n            const root = workspace.getFolder(resource);\n            if (root) {\n                consolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n            }\n            const memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n            if (memoryConfigurationForResource) {\n                consolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n            }\n        }\n        return consolidateConfiguration;\n    }\n    getWorkspaceConsolidatedConfiguration() {\n        if (!this._workspaceConsolidatedConfiguration) {\n            this._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.applicationConfiguration, this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n        }\n        return this._workspaceConsolidatedConfiguration;\n    }\n    getFolderConsolidatedConfiguration(folder) {\n        let folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n        if (!folderConsolidatedConfiguration) {\n            const workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n            const folderConfiguration = this._folderConfigurations.get(folder);\n            if (folderConfiguration) {\n                folderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n                this._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n            }\n            else {\n                folderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n            }\n        }\n        return folderConsolidatedConfiguration;\n    }\n    getFolderConfigurationModelForResource(resource, workspace) {\n        if (workspace && resource) {\n            const root = workspace.getFolder(resource);\n            if (root) {\n                return this._folderConfigurations.get(root.uri);\n            }\n        }\n        return undefined;\n    }\n    toData() {\n        return {\n            defaults: {\n                contents: this._defaultConfiguration.contents,\n                overrides: this._defaultConfiguration.overrides,\n                keys: this._defaultConfiguration.keys\n            },\n            policy: {\n                contents: this._policyConfiguration.contents,\n                overrides: this._policyConfiguration.overrides,\n                keys: this._policyConfiguration.keys\n            },\n            application: {\n                contents: this.applicationConfiguration.contents,\n                overrides: this.applicationConfiguration.overrides,\n                keys: this.applicationConfiguration.keys\n            },\n            user: {\n                contents: this.userConfiguration.contents,\n                overrides: this.userConfiguration.overrides,\n                keys: this.userConfiguration.keys\n            },\n            workspace: {\n                contents: this._workspaceConfiguration.contents,\n                overrides: this._workspaceConfiguration.overrides,\n                keys: this._workspaceConfiguration.keys\n            },\n            folders: [...this._folderConfigurations.keys()].reduce((result, folder) => {\n                const { contents, overrides, keys } = this._folderConfigurations.get(folder);\n                result.push([folder, { contents, overrides, keys }]);\n                return result;\n            }, [])\n        };\n    }\n    static parse(data, logService) {\n        const defaultConfiguration = this.parseConfigurationModel(data.defaults, logService);\n        const policyConfiguration = this.parseConfigurationModel(data.policy, logService);\n        const applicationConfiguration = this.parseConfigurationModel(data.application, logService);\n        const userConfiguration = this.parseConfigurationModel(data.user, logService);\n        const workspaceConfiguration = this.parseConfigurationModel(data.workspace, logService);\n        const folders = data.folders.reduce((result, value) => {\n            result.set(URI.revive(value[0]), this.parseConfigurationModel(value[1], logService));\n            return result;\n        }, new ResourceMap());\n        return new Configuration(defaultConfiguration, policyConfiguration, applicationConfiguration, userConfiguration, ConfigurationModel.createEmptyModel(logService), workspaceConfiguration, folders, ConfigurationModel.createEmptyModel(logService), new ResourceMap(), logService);\n    }\n    static parseConfigurationModel(model, logService) {\n        return new ConfigurationModel(model.contents, model.keys, model.overrides, undefined, logService);\n    }\n}\nexport class ConfigurationChangeEvent {\n    constructor(change, previous, currentConfiguraiton, currentWorkspace, logService) {\n        this.change = change;\n        this.previous = previous;\n        this.currentConfiguraiton = currentConfiguraiton;\n        this.currentWorkspace = currentWorkspace;\n        this.logService = logService;\n        this._marker = '\\n';\n        this._markerCode1 = this._marker.charCodeAt(0);\n        this._markerCode2 = '.'.charCodeAt(0);\n        this.affectedKeys = new Set();\n        this._previousConfiguration = undefined;\n        for (const key of change.keys) {\n            this.affectedKeys.add(key);\n        }\n        for (const [, keys] of change.overrides) {\n            for (const key of keys) {\n                this.affectedKeys.add(key);\n            }\n        }\n        // Example: '\\nfoo.bar\\nabc.def\\n'\n        this._affectsConfigStr = this._marker;\n        for (const key of this.affectedKeys) {\n            this._affectsConfigStr += key + this._marker;\n        }\n    }\n    get previousConfiguration() {\n        if (!this._previousConfiguration && this.previous) {\n            this._previousConfiguration = Configuration.parse(this.previous.data, this.logService);\n        }\n        return this._previousConfiguration;\n    }\n    affectsConfiguration(section, overrides) {\n        var _a;\n        // we have one large string with all keys that have changed. we pad (marker) the section\n        // and check that either find it padded or before a segment character\n        const needle = this._marker + section;\n        const idx = this._affectsConfigStr.indexOf(needle);\n        if (idx < 0) {\n            // NOT: (marker + section)\n            return false;\n        }\n        const pos = idx + needle.length;\n        if (pos >= this._affectsConfigStr.length) {\n            return false;\n        }\n        const code = this._affectsConfigStr.charCodeAt(pos);\n        if (code !== this._markerCode1 && code !== this._markerCode2) {\n            // NOT: section + (marker | segment)\n            return false;\n        }\n        if (overrides) {\n            const value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, (_a = this.previous) === null || _a === void 0 ? void 0 : _a.workspace) : undefined;\n            const value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n            return !objects.equals(value1, value2);\n        }\n        return true;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { distinct } from '../../../base/common/arrays.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport * as types from '../../../base/common/types.js';\nimport * as nls from '../../../nls.js';\nimport { getLanguageTagSettingPlainKey } from './configuration.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport const Extensions = {\n    Configuration: 'base.contributions.configuration'\n};\nexport const allSettings = { properties: {}, patternProperties: {} };\nexport const applicationSettings = { properties: {}, patternProperties: {} };\nexport const machineSettings = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings = { properties: {}, patternProperties: {} };\nexport const windowSettings = { properties: {}, patternProperties: {} };\nexport const resourceSettings = { properties: {}, patternProperties: {} };\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\nconst contributionRegistry = Registry.as(JSONExtensions.JSONContribution);\nclass ConfigurationRegistry {\n    constructor() {\n        this.overrideIdentifiers = new Set();\n        this._onDidSchemaChange = new Emitter();\n        this._onDidUpdateConfiguration = new Emitter();\n        this.configurationDefaultsOverrides = new Map();\n        this.defaultLanguageConfigurationOverridesNode = {\n            id: 'defaultOverrides',\n            title: nls.localize('defaultLanguageConfigurationOverrides.title', \"Default Language Configuration Overrides\"),\n            properties: {}\n        };\n        this.configurationContributors = [this.defaultLanguageConfigurationOverridesNode];\n        this.resourceLanguageSettingsSchema = {\n            properties: {},\n            patternProperties: {},\n            additionalProperties: true,\n            allowTrailingCommas: true,\n            allowComments: true\n        };\n        this.configurationProperties = {};\n        this.policyConfigurations = new Map();\n        this.excludedConfigurationProperties = {};\n        contributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n        this.registerOverridePropertyPatternKey();\n    }\n    registerConfiguration(configuration, validate = true) {\n        this.registerConfigurations([configuration], validate);\n    }\n    registerConfigurations(configurations, validate = true) {\n        const properties = new Set();\n        this.doRegisterConfigurations(configurations, validate, properties);\n        contributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n        this._onDidSchemaChange.fire();\n        this._onDidUpdateConfiguration.fire({ properties });\n    }\n    registerDefaultConfigurations(configurationDefaults) {\n        const properties = new Set();\n        this.doRegisterDefaultConfigurations(configurationDefaults, properties);\n        this._onDidSchemaChange.fire();\n        this._onDidUpdateConfiguration.fire({ properties, defaultsOverrides: true });\n    }\n    doRegisterDefaultConfigurations(configurationDefaults, bucket) {\n        var _a;\n        const overrideIdentifiers = [];\n        for (const { overrides, source } of configurationDefaults) {\n            for (const key in overrides) {\n                bucket.add(key);\n                if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                    const configurationDefaultOverride = this.configurationDefaultsOverrides.get(key);\n                    const valuesSources = (_a = configurationDefaultOverride === null || configurationDefaultOverride === void 0 ? void 0 : configurationDefaultOverride.valuesSources) !== null && _a !== void 0 ? _a : new Map();\n                    if (source) {\n                        for (const configuration of Object.keys(overrides[key])) {\n                            valuesSources.set(configuration, source);\n                        }\n                    }\n                    const defaultValue = { ...((configurationDefaultOverride === null || configurationDefaultOverride === void 0 ? void 0 : configurationDefaultOverride.value) || {}), ...overrides[key] };\n                    this.configurationDefaultsOverrides.set(key, { source, value: defaultValue, valuesSources });\n                    const plainKey = getLanguageTagSettingPlainKey(key);\n                    const property = {\n                        type: 'object',\n                        default: defaultValue,\n                        description: nls.localize('defaultLanguageConfiguration.description', \"Configure settings to be overridden for the {0} language.\", plainKey),\n                        $ref: resourceLanguageSettingsSchemaId,\n                        defaultDefaultValue: defaultValue,\n                        source: types.isString(source) ? undefined : source,\n                        defaultValueSource: source\n                    };\n                    overrideIdentifiers.push(...overrideIdentifiersFromKey(key));\n                    this.configurationProperties[key] = property;\n                    this.defaultLanguageConfigurationOverridesNode.properties[key] = property;\n                }\n                else {\n                    this.configurationDefaultsOverrides.set(key, { value: overrides[key], source });\n                    const property = this.configurationProperties[key];\n                    if (property) {\n                        this.updatePropertyDefaultValue(key, property);\n                        this.updateSchema(key, property);\n                    }\n                }\n            }\n        }\n        this.doRegisterOverrideIdentifiers(overrideIdentifiers);\n    }\n    registerOverrideIdentifiers(overrideIdentifiers) {\n        this.doRegisterOverrideIdentifiers(overrideIdentifiers);\n        this._onDidSchemaChange.fire();\n    }\n    doRegisterOverrideIdentifiers(overrideIdentifiers) {\n        for (const overrideIdentifier of overrideIdentifiers) {\n            this.overrideIdentifiers.add(overrideIdentifier);\n        }\n        this.updateOverridePropertyPatternKey();\n    }\n    doRegisterConfigurations(configurations, validate, bucket) {\n        configurations.forEach(configuration => {\n            this.validateAndRegisterProperties(configuration, validate, configuration.extensionInfo, configuration.restrictedProperties, undefined, bucket);\n            this.configurationContributors.push(configuration);\n            this.registerJSONConfiguration(configuration);\n        });\n    }\n    validateAndRegisterProperties(configuration, validate = true, extensionInfo, restrictedProperties, scope = 3 /* ConfigurationScope.WINDOW */, bucket) {\n        var _a;\n        scope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n        const properties = configuration.properties;\n        if (properties) {\n            for (const key in properties) {\n                const property = properties[key];\n                if (validate && validateProperty(key, property)) {\n                    delete properties[key];\n                    continue;\n                }\n                property.source = extensionInfo;\n                // update default value\n                property.defaultDefaultValue = properties[key].default;\n                this.updatePropertyDefaultValue(key, property);\n                // update scope\n                if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                    property.scope = undefined; // No scope for overridable properties `[${identifier}]`\n                }\n                else {\n                    property.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n                    property.restricted = types.isUndefinedOrNull(property.restricted) ? !!(restrictedProperties === null || restrictedProperties === void 0 ? void 0 : restrictedProperties.includes(key)) : property.restricted;\n                }\n                // Add to properties maps\n                // Property is included by default if 'included' is unspecified\n                if (properties[key].hasOwnProperty('included') && !properties[key].included) {\n                    this.excludedConfigurationProperties[key] = properties[key];\n                    delete properties[key];\n                    continue;\n                }\n                else {\n                    this.configurationProperties[key] = properties[key];\n                    if ((_a = properties[key].policy) === null || _a === void 0 ? void 0 : _a.name) {\n                        this.policyConfigurations.set(properties[key].policy.name, key);\n                    }\n                }\n                if (!properties[key].deprecationMessage && properties[key].markdownDeprecationMessage) {\n                    // If not set, default deprecationMessage to the markdown source\n                    properties[key].deprecationMessage = properties[key].markdownDeprecationMessage;\n                }\n                bucket.add(key);\n            }\n        }\n        const subNodes = configuration.allOf;\n        if (subNodes) {\n            for (const node of subNodes) {\n                this.validateAndRegisterProperties(node, validate, extensionInfo, restrictedProperties, scope, bucket);\n            }\n        }\n    }\n    getConfigurationProperties() {\n        return this.configurationProperties;\n    }\n    getPolicyConfigurations() {\n        return this.policyConfigurations;\n    }\n    registerJSONConfiguration(configuration) {\n        const register = (configuration) => {\n            const properties = configuration.properties;\n            if (properties) {\n                for (const key in properties) {\n                    this.updateSchema(key, properties[key]);\n                }\n            }\n            const subNodes = configuration.allOf;\n            subNodes === null || subNodes === void 0 ? void 0 : subNodes.forEach(register);\n        };\n        register(configuration);\n    }\n    updateSchema(key, property) {\n        allSettings.properties[key] = property;\n        switch (property.scope) {\n            case 1 /* ConfigurationScope.APPLICATION */:\n                applicationSettings.properties[key] = property;\n                break;\n            case 2 /* ConfigurationScope.MACHINE */:\n                machineSettings.properties[key] = property;\n                break;\n            case 6 /* ConfigurationScope.MACHINE_OVERRIDABLE */:\n                machineOverridableSettings.properties[key] = property;\n                break;\n            case 3 /* ConfigurationScope.WINDOW */:\n                windowSettings.properties[key] = property;\n                break;\n            case 4 /* ConfigurationScope.RESOURCE */:\n                resourceSettings.properties[key] = property;\n                break;\n            case 5 /* ConfigurationScope.LANGUAGE_OVERRIDABLE */:\n                resourceSettings.properties[key] = property;\n                this.resourceLanguageSettingsSchema.properties[key] = property;\n                break;\n        }\n    }\n    updateOverridePropertyPatternKey() {\n        for (const overrideIdentifier of this.overrideIdentifiers.values()) {\n            const overrideIdentifierProperty = `[${overrideIdentifier}]`;\n            const resourceLanguagePropertiesSchema = {\n                type: 'object',\n                description: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n                errorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n                $ref: resourceLanguageSettingsSchemaId,\n            };\n            this.updatePropertyDefaultValue(overrideIdentifierProperty, resourceLanguagePropertiesSchema);\n            allSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            applicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            machineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            machineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            windowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            resourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n        }\n    }\n    registerOverridePropertyPatternKey() {\n        const resourceLanguagePropertiesSchema = {\n            type: 'object',\n            description: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n            errorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n            $ref: resourceLanguageSettingsSchemaId,\n        };\n        allSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        applicationSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        machineSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        machineOverridableSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        windowSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        resourceSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        this._onDidSchemaChange.fire();\n    }\n    updatePropertyDefaultValue(key, property) {\n        const configurationdefaultOverride = this.configurationDefaultsOverrides.get(key);\n        let defaultValue = configurationdefaultOverride === null || configurationdefaultOverride === void 0 ? void 0 : configurationdefaultOverride.value;\n        let defaultSource = configurationdefaultOverride === null || configurationdefaultOverride === void 0 ? void 0 : configurationdefaultOverride.source;\n        if (types.isUndefined(defaultValue)) {\n            defaultValue = property.defaultDefaultValue;\n            defaultSource = undefined;\n        }\n        if (types.isUndefined(defaultValue)) {\n            defaultValue = getDefaultValue(property.type);\n        }\n        property.default = defaultValue;\n        property.defaultValueSource = defaultSource;\n    }\n}\nconst OVERRIDE_IDENTIFIER_PATTERN = `\\\\[([^\\\\]]+)\\\\]`;\nconst OVERRIDE_IDENTIFIER_REGEX = new RegExp(OVERRIDE_IDENTIFIER_PATTERN, 'g');\nexport const OVERRIDE_PROPERTY_PATTERN = `^(${OVERRIDE_IDENTIFIER_PATTERN})+$`;\nexport const OVERRIDE_PROPERTY_REGEX = new RegExp(OVERRIDE_PROPERTY_PATTERN);\nexport function overrideIdentifiersFromKey(key) {\n    const identifiers = [];\n    if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n        let matches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n        while (matches === null || matches === void 0 ? void 0 : matches.length) {\n            const identifier = matches[1].trim();\n            if (identifier) {\n                identifiers.push(identifier);\n            }\n            matches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n        }\n    }\n    return distinct(identifiers);\n}\nexport function getDefaultValue(type) {\n    const t = Array.isArray(type) ? type[0] : type;\n    switch (t) {\n        case 'boolean':\n            return false;\n        case 'integer':\n        case 'number':\n            return 0;\n        case 'string':\n            return '';\n        case 'array':\n            return [];\n        case 'object':\n            return {};\n        default:\n            return null;\n    }\n}\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\nexport function validateProperty(property, schema) {\n    var _a, _b, _c, _d;\n    if (!property.trim()) {\n        return nls.localize('config.property.empty', \"Cannot register an empty property\");\n    }\n    if (OVERRIDE_PROPERTY_REGEX.test(property)) {\n        return nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n    }\n    if (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n        return nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n    }\n    if (((_a = schema.policy) === null || _a === void 0 ? void 0 : _a.name) && configurationRegistry.getPolicyConfigurations().get((_b = schema.policy) === null || _b === void 0 ? void 0 : _b.name) !== undefined) {\n        return nls.localize('config.policy.duplicate', \"Cannot register '{0}'. The associated policy {1} is already registered with {2}.\", property, (_c = schema.policy) === null || _c === void 0 ? void 0 : _c.name, configurationRegistry.getPolicyConfigurations().get((_d = schema.policy) === null || _d === void 0 ? void 0 : _d.name));\n    }\n    return null;\n}\n","import { Disposable } from '../../../base/common/lifecycle.js';\nimport { ConfigurationModel } from './configurationModels.js';\nimport { Extensions } from './configurationRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport class DefaultConfiguration extends Disposable {\n    get configurationModel() {\n        return this._configurationModel;\n    }\n    constructor(logService) {\n        super();\n        this.logService = logService;\n        this._configurationModel = ConfigurationModel.createEmptyModel(this.logService);\n    }\n    reload() {\n        this.resetConfigurationModel();\n        return this.configurationModel;\n    }\n    getConfigurationDefaultOverrides() {\n        return {};\n    }\n    resetConfigurationModel() {\n        this._configurationModel = ConfigurationModel.createEmptyModel(this.logService);\n        const properties = Registry.as(Extensions.Configuration).getConfigurationProperties();\n        this.updateConfigurationModel(Object.keys(properties), properties);\n    }\n    updateConfigurationModel(properties, configurationProperties) {\n        const configurationDefaultsOverrides = this.getConfigurationDefaultOverrides();\n        for (const key of properties) {\n            const defaultOverrideValue = configurationDefaultsOverrides[key];\n            const propertySchema = configurationProperties[key];\n            if (defaultOverrideValue !== undefined) {\n                this._configurationModel.addValue(key, defaultOverrideValue);\n            }\n            else if (propertySchema) {\n                this._configurationModel.addValue(key, propertySchema.default);\n            }\n            else {\n                this._configurationModel.removeValue(key);\n            }\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { PauseableEmitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport { cloneAndChange } from '../../../base/common/objects.js';\nimport { TernarySearchTree } from '../../../base/common/ternarySearchTree.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { CommandsRegistry } from '../../commands/common/commands.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IContextKeyService, RawContextKey } from '../common/contextkey.js';\nconst KEYBINDING_CONTEXT_ATTR = 'data-keybinding-context';\nexport class Context {\n    constructor(id, parent) {\n        this._id = id;\n        this._parent = parent;\n        this._value = Object.create(null);\n        this._value['_contextId'] = id;\n    }\n    get value() {\n        return { ...this._value };\n    }\n    setValue(key, value) {\n        // console.log('SET ' + key + ' = ' + value + ' ON ' + this._id);\n        if (this._value[key] !== value) {\n            this._value[key] = value;\n            return true;\n        }\n        return false;\n    }\n    removeValue(key) {\n        // console.log('REMOVE ' + key + ' FROM ' + this._id);\n        if (key in this._value) {\n            delete this._value[key];\n            return true;\n        }\n        return false;\n    }\n    getValue(key) {\n        const ret = this._value[key];\n        if (typeof ret === 'undefined' && this._parent) {\n            return this._parent.getValue(key);\n        }\n        return ret;\n    }\n}\nclass NullContext extends Context {\n    constructor() {\n        super(-1, null);\n    }\n    setValue(key, value) {\n        return false;\n    }\n    removeValue(key) {\n        return false;\n    }\n    getValue(key) {\n        return undefined;\n    }\n}\nNullContext.INSTANCE = new NullContext();\nclass ConfigAwareContextValuesContainer extends Context {\n    constructor(id, _configurationService, emitter) {\n        super(id, null);\n        this._configurationService = _configurationService;\n        this._values = TernarySearchTree.forConfigKeys();\n        this._listener = this._configurationService.onDidChangeConfiguration(event => {\n            if (event.source === 7 /* ConfigurationTarget.DEFAULT */) {\n                // new setting, reset everything\n                const allKeys = Array.from(this._values, ([k]) => k);\n                this._values.clear();\n                emitter.fire(new ArrayContextKeyChangeEvent(allKeys));\n            }\n            else {\n                const changedKeys = [];\n                for (const configKey of event.affectedKeys) {\n                    const contextKey = `config.${configKey}`;\n                    const cachedItems = this._values.findSuperstr(contextKey);\n                    if (cachedItems !== undefined) {\n                        changedKeys.push(...Iterable.map(cachedItems, ([key]) => key));\n                        this._values.deleteSuperstr(contextKey);\n                    }\n                    if (this._values.has(contextKey)) {\n                        changedKeys.push(contextKey);\n                        this._values.delete(contextKey);\n                    }\n                }\n                emitter.fire(new ArrayContextKeyChangeEvent(changedKeys));\n            }\n        });\n    }\n    dispose() {\n        this._listener.dispose();\n    }\n    getValue(key) {\n        if (key.indexOf(ConfigAwareContextValuesContainer._keyPrefix) !== 0) {\n            return super.getValue(key);\n        }\n        if (this._values.has(key)) {\n            return this._values.get(key);\n        }\n        const configKey = key.substr(ConfigAwareContextValuesContainer._keyPrefix.length);\n        const configValue = this._configurationService.getValue(configKey);\n        let value = undefined;\n        switch (typeof configValue) {\n            case 'number':\n            case 'boolean':\n            case 'string':\n                value = configValue;\n                break;\n            default:\n                if (Array.isArray(configValue)) {\n                    value = JSON.stringify(configValue);\n                }\n                else {\n                    value = configValue;\n                }\n        }\n        this._values.set(key, value);\n        return value;\n    }\n    setValue(key, value) {\n        return super.setValue(key, value);\n    }\n    removeValue(key) {\n        return super.removeValue(key);\n    }\n}\nConfigAwareContextValuesContainer._keyPrefix = 'config.';\nclass ContextKey {\n    constructor(service, key, defaultValue) {\n        this._service = service;\n        this._key = key;\n        this._defaultValue = defaultValue;\n        this.reset();\n    }\n    set(value) {\n        this._service.setContext(this._key, value);\n    }\n    reset() {\n        if (typeof this._defaultValue === 'undefined') {\n            this._service.removeContext(this._key);\n        }\n        else {\n            this._service.setContext(this._key, this._defaultValue);\n        }\n    }\n    get() {\n        return this._service.getContextKeyValue(this._key);\n    }\n}\nclass SimpleContextKeyChangeEvent {\n    constructor(key) {\n        this.key = key;\n    }\n    affectsSome(keys) {\n        return keys.has(this.key);\n    }\n    allKeysContainedIn(keys) {\n        return this.affectsSome(keys);\n    }\n}\nclass ArrayContextKeyChangeEvent {\n    constructor(keys) {\n        this.keys = keys;\n    }\n    affectsSome(keys) {\n        for (const key of this.keys) {\n            if (keys.has(key)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    allKeysContainedIn(keys) {\n        return this.keys.every(key => keys.has(key));\n    }\n}\nclass CompositeContextKeyChangeEvent {\n    constructor(events) {\n        this.events = events;\n    }\n    affectsSome(keys) {\n        for (const e of this.events) {\n            if (e.affectsSome(keys)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    allKeysContainedIn(keys) {\n        return this.events.every(evt => evt.allKeysContainedIn(keys));\n    }\n}\nfunction allEventKeysInContext(event, context) {\n    return event.allKeysContainedIn(new Set(Object.keys(context)));\n}\nexport class AbstractContextKeyService extends Disposable {\n    constructor(myContextId) {\n        super();\n        this._onDidChangeContext = this._register(new PauseableEmitter({ merge: input => new CompositeContextKeyChangeEvent(input) }));\n        this.onDidChangeContext = this._onDidChangeContext.event;\n        this._isDisposed = false;\n        this._myContextId = myContextId;\n    }\n    createKey(key, defaultValue) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        return new ContextKey(this, key, defaultValue);\n    }\n    bufferChangeEvents(callback) {\n        this._onDidChangeContext.pause();\n        try {\n            callback();\n        }\n        finally {\n            this._onDidChangeContext.resume();\n        }\n    }\n    createScoped(domNode) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        return new ScopedContextKeyService(this, domNode);\n    }\n    contextMatchesRules(rules) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        const context = this.getContextValuesContainer(this._myContextId);\n        const result = (rules ? rules.evaluate(context) : true);\n        // console.group(rules.serialize() + ' -> ' + result);\n        // rules.keys().forEach(key => { console.log(key, ctx[key]); });\n        // console.groupEnd();\n        return result;\n    }\n    getContextKeyValue(key) {\n        if (this._isDisposed) {\n            return undefined;\n        }\n        return this.getContextValuesContainer(this._myContextId).getValue(key);\n    }\n    setContext(key, value) {\n        if (this._isDisposed) {\n            return;\n        }\n        const myContext = this.getContextValuesContainer(this._myContextId);\n        if (!myContext) {\n            return;\n        }\n        if (myContext.setValue(key, value)) {\n            this._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\n        }\n    }\n    removeContext(key) {\n        if (this._isDisposed) {\n            return;\n        }\n        if (this.getContextValuesContainer(this._myContextId).removeValue(key)) {\n            this._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\n        }\n    }\n    getContext(target) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this.getContextValuesContainer(findContextAttr(target));\n    }\n    dispose() {\n        super.dispose();\n        this._isDisposed = true;\n    }\n}\nlet ContextKeyService = class ContextKeyService extends AbstractContextKeyService {\n    constructor(configurationService) {\n        super(0);\n        this._contexts = new Map();\n        this._lastContextId = 0;\n        const myContext = this._register(new ConfigAwareContextValuesContainer(this._myContextId, configurationService, this._onDidChangeContext));\n        this._contexts.set(this._myContextId, myContext);\n        // Uncomment this to see the contexts continuously logged\n        // let lastLoggedValue: string | null = null;\n        // setInterval(() => {\n        // \tlet values = Object.keys(this._contexts).map((key) => this._contexts[key]);\n        // \tlet logValue = values.map(v => JSON.stringify(v._value, null, '\\t')).join('\\n');\n        // \tif (lastLoggedValue !== logValue) {\n        // \t\tlastLoggedValue = logValue;\n        // \t\tconsole.log(lastLoggedValue);\n        // \t}\n        // }, 2000);\n    }\n    getContextValuesContainer(contextId) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this._contexts.get(contextId) || NullContext.INSTANCE;\n    }\n    createChildContext(parentContextId = this._myContextId) {\n        if (this._isDisposed) {\n            throw new Error(`ContextKeyService has been disposed`);\n        }\n        const id = (++this._lastContextId);\n        this._contexts.set(id, new Context(id, this.getContextValuesContainer(parentContextId)));\n        return id;\n    }\n    disposeContext(contextId) {\n        if (!this._isDisposed) {\n            this._contexts.delete(contextId);\n        }\n    }\n};\nContextKeyService = __decorate([\n    __param(0, IConfigurationService)\n], ContextKeyService);\nexport { ContextKeyService };\nclass ScopedContextKeyService extends AbstractContextKeyService {\n    constructor(parent, domNode) {\n        super(parent.createChildContext());\n        this._parentChangeListener = this._register(new MutableDisposable());\n        this._parent = parent;\n        this._updateParentChangeListener();\n        this._domNode = domNode;\n        if (this._domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\n            let extraInfo = '';\n            if (this._domNode.classList) {\n                extraInfo = Array.from(this._domNode.classList.values()).join(', ');\n            }\n            console.error(`Element already has context attribute${extraInfo ? ': ' + extraInfo : ''}`);\n        }\n        this._domNode.setAttribute(KEYBINDING_CONTEXT_ATTR, String(this._myContextId));\n    }\n    _updateParentChangeListener() {\n        // Forward parent events to this listener. Parent will change.\n        this._parentChangeListener.value = this._parent.onDidChangeContext(e => {\n            const thisContainer = this._parent.getContextValuesContainer(this._myContextId);\n            const thisContextValues = thisContainer.value;\n            if (!allEventKeysInContext(e, thisContextValues)) {\n                this._onDidChangeContext.fire(e);\n            }\n        });\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._parent.disposeContext(this._myContextId);\n        this._domNode.removeAttribute(KEYBINDING_CONTEXT_ATTR);\n        super.dispose();\n    }\n    getContextValuesContainer(contextId) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this._parent.getContextValuesContainer(contextId);\n    }\n    createChildContext(parentContextId = this._myContextId) {\n        if (this._isDisposed) {\n            throw new Error(`ScopedContextKeyService has been disposed`);\n        }\n        return this._parent.createChildContext(parentContextId);\n    }\n    disposeContext(contextId) {\n        if (this._isDisposed) {\n            return;\n        }\n        this._parent.disposeContext(contextId);\n    }\n}\nfunction findContextAttr(domNode) {\n    while (domNode) {\n        if (domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\n            const attr = domNode.getAttribute(KEYBINDING_CONTEXT_ATTR);\n            if (attr) {\n                return parseInt(attr, 10);\n            }\n            return NaN;\n        }\n        domNode = domNode.parentElement;\n    }\n    return 0;\n}\nexport function setContext(accessor, contextKey, contextValue) {\n    const contextKeyService = accessor.get(IContextKeyService);\n    contextKeyService.createKey(String(contextKey), stringifyURIs(contextValue));\n}\nfunction stringifyURIs(contextValue) {\n    return cloneAndChange(contextValue, (obj) => {\n        if (typeof obj === 'object' && obj.$mid === 1 /* MarshalledId.Uri */) {\n            return URI.revive(obj).toString();\n        }\n        if (obj instanceof URI) {\n            return obj.toString();\n        }\n        return undefined;\n    });\n}\nCommandsRegistry.registerCommand('_setContext', setContext);\nCommandsRegistry.registerCommand({\n    id: 'getContextKeyInfo',\n    handler() {\n        return [...RawContextKey.all()].sort((a, b) => a.key.localeCompare(b.key));\n    },\n    metadata: {\n        description: localize('getContextKeyInfo', \"A command that returns information about context keys\"),\n        args: []\n    }\n});\nCommandsRegistry.registerCommand('_generateContextKeyInfo', function () {\n    const result = [];\n    const seen = new Set();\n    for (const info of RawContextKey.all()) {\n        if (!seen.has(info.key)) {\n            seen.add(info.key);\n            result.push(info);\n        }\n    }\n    result.sort((a, b) => a.key.localeCompare(b.key));\n    console.log(JSON.stringify(result, undefined, 2));\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalState } from '../../../base/common/errors.js';\nimport { localize } from '../../../nls.js';\nfunction hintDidYouMean(...meant) {\n    switch (meant.length) {\n        case 1:\n            return localize('contextkey.scanner.hint.didYouMean1', \"Did you mean {0}?\", meant[0]);\n        case 2:\n            return localize('contextkey.scanner.hint.didYouMean2', \"Did you mean {0} or {1}?\", meant[0], meant[1]);\n        case 3:\n            return localize('contextkey.scanner.hint.didYouMean3', \"Did you mean {0}, {1} or {2}?\", meant[0], meant[1], meant[2]);\n        default: // we just don't expect that many\n            return undefined;\n    }\n}\nconst hintDidYouForgetToOpenOrCloseQuote = localize('contextkey.scanner.hint.didYouForgetToOpenOrCloseQuote', \"Did you forget to open or close the quote?\");\nconst hintDidYouForgetToEscapeSlash = localize('contextkey.scanner.hint.didYouForgetToEscapeSlash', \"Did you forget to escape the '/' (slash) character? Put two backslashes before it to escape, e.g., '\\\\\\\\/\\'.\");\n/**\n * A simple scanner for context keys.\n *\n * Example:\n *\n * ```ts\n * const scanner = new Scanner().reset('resourceFileName =~ /docker/ && !config.docker.enabled');\n * const tokens = [...scanner];\n * if (scanner.errorTokens.length > 0) {\n *     scanner.errorTokens.forEach(err => console.error(`Unexpected token at ${err.offset}: ${err.lexeme}\\nHint: ${err.additional}`));\n * } else {\n *     // process tokens\n * }\n * ```\n */\nexport class Scanner {\n    constructor() {\n        this._input = '';\n        this._start = 0;\n        this._current = 0;\n        this._tokens = [];\n        this._errors = [];\n        // u - unicode, y - sticky // TODO@ulugbekna: we accept double quotes as part of the string rather than as a delimiter (to preserve old parser's behavior)\n        this.stringRe = /[a-zA-Z0-9_<>\\-\\./\\\\:\\*\\?\\+\\[\\]\\^,#@;\"%\\$\\p{L}-]+/uy;\n    }\n    static getLexeme(token) {\n        switch (token.type) {\n            case 0 /* TokenType.LParen */:\n                return '(';\n            case 1 /* TokenType.RParen */:\n                return ')';\n            case 2 /* TokenType.Neg */:\n                return '!';\n            case 3 /* TokenType.Eq */:\n                return token.isTripleEq ? '===' : '==';\n            case 4 /* TokenType.NotEq */:\n                return token.isTripleEq ? '!==' : '!=';\n            case 5 /* TokenType.Lt */:\n                return '<';\n            case 6 /* TokenType.LtEq */:\n                return '<=';\n            case 7 /* TokenType.Gt */:\n                return '>=';\n            case 8 /* TokenType.GtEq */:\n                return '>=';\n            case 9 /* TokenType.RegexOp */:\n                return '=~';\n            case 10 /* TokenType.RegexStr */:\n                return token.lexeme;\n            case 11 /* TokenType.True */:\n                return 'true';\n            case 12 /* TokenType.False */:\n                return 'false';\n            case 13 /* TokenType.In */:\n                return 'in';\n            case 14 /* TokenType.Not */:\n                return 'not';\n            case 15 /* TokenType.And */:\n                return '&&';\n            case 16 /* TokenType.Or */:\n                return '||';\n            case 17 /* TokenType.Str */:\n                return token.lexeme;\n            case 18 /* TokenType.QuotedStr */:\n                return token.lexeme;\n            case 19 /* TokenType.Error */:\n                return token.lexeme;\n            case 20 /* TokenType.EOF */:\n                return 'EOF';\n            default:\n                throw illegalState(`unhandled token type: ${JSON.stringify(token)}; have you forgotten to add a case?`);\n        }\n    }\n    reset(value) {\n        this._input = value;\n        this._start = 0;\n        this._current = 0;\n        this._tokens = [];\n        this._errors = [];\n        return this;\n    }\n    scan() {\n        while (!this._isAtEnd()) {\n            this._start = this._current;\n            const ch = this._advance();\n            switch (ch) {\n                case 40 /* CharCode.OpenParen */:\n                    this._addToken(0 /* TokenType.LParen */);\n                    break;\n                case 41 /* CharCode.CloseParen */:\n                    this._addToken(1 /* TokenType.RParen */);\n                    break;\n                case 33 /* CharCode.ExclamationMark */:\n                    if (this._match(61 /* CharCode.Equals */)) {\n                        const isTripleEq = this._match(61 /* CharCode.Equals */); // eat last `=` if `!==`\n                        this._tokens.push({ type: 4 /* TokenType.NotEq */, offset: this._start, isTripleEq });\n                    }\n                    else {\n                        this._addToken(2 /* TokenType.Neg */);\n                    }\n                    break;\n                case 39 /* CharCode.SingleQuote */:\n                    this._quotedString();\n                    break;\n                case 47 /* CharCode.Slash */:\n                    this._regex();\n                    break;\n                case 61 /* CharCode.Equals */:\n                    if (this._match(61 /* CharCode.Equals */)) { // support `==`\n                        const isTripleEq = this._match(61 /* CharCode.Equals */); // eat last `=` if `===`\n                        this._tokens.push({ type: 3 /* TokenType.Eq */, offset: this._start, isTripleEq });\n                    }\n                    else if (this._match(126 /* CharCode.Tilde */)) {\n                        this._addToken(9 /* TokenType.RegexOp */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('==', '=~'));\n                    }\n                    break;\n                case 60 /* CharCode.LessThan */:\n                    this._addToken(this._match(61 /* CharCode.Equals */) ? 6 /* TokenType.LtEq */ : 5 /* TokenType.Lt */);\n                    break;\n                case 62 /* CharCode.GreaterThan */:\n                    this._addToken(this._match(61 /* CharCode.Equals */) ? 8 /* TokenType.GtEq */ : 7 /* TokenType.Gt */);\n                    break;\n                case 38 /* CharCode.Ampersand */:\n                    if (this._match(38 /* CharCode.Ampersand */)) {\n                        this._addToken(15 /* TokenType.And */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('&&'));\n                    }\n                    break;\n                case 124 /* CharCode.Pipe */:\n                    if (this._match(124 /* CharCode.Pipe */)) {\n                        this._addToken(16 /* TokenType.Or */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('||'));\n                    }\n                    break;\n                // TODO@ulugbekna: 1) rewrite using a regex 2) reconsider what characters are considered whitespace, including unicode, nbsp, etc.\n                case 32 /* CharCode.Space */:\n                case 13 /* CharCode.CarriageReturn */:\n                case 9 /* CharCode.Tab */:\n                case 10 /* CharCode.LineFeed */:\n                case 160 /* CharCode.NoBreakSpace */: // &nbsp\n                    break;\n                default:\n                    this._string();\n            }\n        }\n        this._start = this._current;\n        this._addToken(20 /* TokenType.EOF */);\n        return Array.from(this._tokens);\n    }\n    _match(expected) {\n        if (this._isAtEnd()) {\n            return false;\n        }\n        if (this._input.charCodeAt(this._current) !== expected) {\n            return false;\n        }\n        this._current++;\n        return true;\n    }\n    _advance() {\n        return this._input.charCodeAt(this._current++);\n    }\n    _peek() {\n        return this._isAtEnd() ? 0 /* CharCode.Null */ : this._input.charCodeAt(this._current);\n    }\n    _addToken(type) {\n        this._tokens.push({ type, offset: this._start });\n    }\n    _error(additional) {\n        const offset = this._start;\n        const lexeme = this._input.substring(this._start, this._current);\n        const errToken = { type: 19 /* TokenType.Error */, offset: this._start, lexeme };\n        this._errors.push({ offset, lexeme, additionalInfo: additional });\n        this._tokens.push(errToken);\n    }\n    _string() {\n        this.stringRe.lastIndex = this._start;\n        const match = this.stringRe.exec(this._input);\n        if (match) {\n            this._current = this._start + match[0].length;\n            const lexeme = this._input.substring(this._start, this._current);\n            const keyword = Scanner._keywords.get(lexeme);\n            if (keyword) {\n                this._addToken(keyword);\n            }\n            else {\n                this._tokens.push({ type: 17 /* TokenType.Str */, lexeme, offset: this._start });\n            }\n        }\n    }\n    // captures the lexeme without the leading and trailing '\n    _quotedString() {\n        while (this._peek() !== 39 /* CharCode.SingleQuote */ && !this._isAtEnd()) { // TODO@ulugbekna: add support for escaping ' ?\n            this._advance();\n        }\n        if (this._isAtEnd()) {\n            this._error(hintDidYouForgetToOpenOrCloseQuote);\n            return;\n        }\n        // consume the closing '\n        this._advance();\n        this._tokens.push({ type: 18 /* TokenType.QuotedStr */, lexeme: this._input.substring(this._start + 1, this._current - 1), offset: this._start + 1 });\n    }\n    /*\n     * Lexing a regex expression: /.../[igsmyu]*\n     * Based on https://github.com/microsoft/TypeScript/blob/9247ef115e617805983740ba795d7a8164babf89/src/compiler/scanner.ts#L2129-L2181\n     *\n     * Note that we want slashes within a regex to be escaped, e.g., /file:\\\\/\\\\/\\\\// should match `file:///`\n     */\n    _regex() {\n        let p = this._current;\n        let inEscape = false;\n        let inCharacterClass = false;\n        while (true) {\n            if (p >= this._input.length) {\n                this._current = p;\n                this._error(hintDidYouForgetToEscapeSlash);\n                return;\n            }\n            const ch = this._input.charCodeAt(p);\n            if (inEscape) { // parsing an escape character\n                inEscape = false;\n            }\n            else if (ch === 47 /* CharCode.Slash */ && !inCharacterClass) { // end of regex\n                p++;\n                break;\n            }\n            else if (ch === 91 /* CharCode.OpenSquareBracket */) {\n                inCharacterClass = true;\n            }\n            else if (ch === 92 /* CharCode.Backslash */) {\n                inEscape = true;\n            }\n            else if (ch === 93 /* CharCode.CloseSquareBracket */) {\n                inCharacterClass = false;\n            }\n            p++;\n        }\n        // Consume flags // TODO@ulugbekna: use regex instead\n        while (p < this._input.length && Scanner._regexFlags.has(this._input.charCodeAt(p))) {\n            p++;\n        }\n        this._current = p;\n        const lexeme = this._input.substring(this._start, this._current);\n        this._tokens.push({ type: 10 /* TokenType.RegexStr */, lexeme, offset: this._start });\n    }\n    _isAtEnd() {\n        return this._current >= this._input.length;\n    }\n}\nScanner._regexFlags = new Set(['i', 'g', 's', 'm', 'y', 'u'].map(ch => ch.charCodeAt(0)));\nScanner._keywords = new Map([\n    ['not', 14 /* TokenType.Not */],\n    ['in', 13 /* TokenType.In */],\n    ['false', 12 /* TokenType.False */],\n    ['true', 11 /* TokenType.True */],\n]);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isChrome, isEdge, isFirefox, isLinux, isMacintosh, isSafari, isWeb, isWindows } from '../../../base/common/platform.js';\nimport { isFalsyOrWhitespace } from '../../../base/common/strings.js';\nimport { Scanner } from './scanner.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { localize } from '../../../nls.js';\nconst CONSTANT_VALUES = new Map();\nCONSTANT_VALUES.set('false', false);\nCONSTANT_VALUES.set('true', true);\nCONSTANT_VALUES.set('isMac', isMacintosh);\nCONSTANT_VALUES.set('isLinux', isLinux);\nCONSTANT_VALUES.set('isWindows', isWindows);\nCONSTANT_VALUES.set('isWeb', isWeb);\nCONSTANT_VALUES.set('isMacNative', isMacintosh && !isWeb);\nCONSTANT_VALUES.set('isEdge', isEdge);\nCONSTANT_VALUES.set('isFirefox', isFirefox);\nCONSTANT_VALUES.set('isChrome', isChrome);\nCONSTANT_VALUES.set('isSafari', isSafari);\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst defaultConfig = {\n    regexParsingWithErrorRecovery: true\n};\nconst errorEmptyString = localize('contextkey.parser.error.emptyString', \"Empty context key expression\");\nconst hintEmptyString = localize('contextkey.parser.error.emptyString.hint', \"Did you forget to write an expression? You can also put 'false' or 'true' to always evaluate to false or true, respectively.\");\nconst errorNoInAfterNot = localize('contextkey.parser.error.noInAfterNot', \"'in' after 'not'.\");\nconst errorClosingParenthesis = localize('contextkey.parser.error.closingParenthesis', \"closing parenthesis ')'\");\nconst errorUnexpectedToken = localize('contextkey.parser.error.unexpectedToken', \"Unexpected token\");\nconst hintUnexpectedToken = localize('contextkey.parser.error.unexpectedToken.hint', \"Did you forget to put && or || before the token?\");\nconst errorUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF', \"Unexpected end of expression\");\nconst hintUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF.hint', \"Did you forget to put a context key?\");\n/**\n * A parser for context key expressions.\n *\n * Example:\n * ```ts\n * const parser = new Parser();\n * const expr = parser.parse('foo == \"bar\" && baz == true');\n *\n * if (expr === undefined) {\n * \t// there were lexing or parsing errors\n * \t// process lexing errors with `parser.lexingErrors`\n *  // process parsing errors with `parser.parsingErrors`\n * } else {\n * \t// expr is a valid expression\n * }\n * ```\n */\nexport class Parser {\n    constructor(_config = defaultConfig) {\n        this._config = _config;\n        // lifetime note: `_scanner` lives as long as the parser does, i.e., is not reset between calls to `parse`\n        this._scanner = new Scanner();\n        // lifetime note: `_tokens`, `_current`, and `_parsingErrors` must be reset between calls to `parse`\n        this._tokens = [];\n        this._current = 0; // invariant: 0 <= this._current < this._tokens.length ; any incrementation of this value must first call `_isAtEnd`\n        this._parsingErrors = [];\n        this._flagsGYRe = /g|y/g;\n    }\n    /**\n     * Parse a context key expression.\n     *\n     * @param input the expression to parse\n     * @returns the parsed expression or `undefined` if there's an error - call `lexingErrors` and `parsingErrors` to see the errors\n     */\n    parse(input) {\n        if (input === '') {\n            this._parsingErrors.push({ message: errorEmptyString, offset: 0, lexeme: '', additionalInfo: hintEmptyString });\n            return undefined;\n        }\n        this._tokens = this._scanner.reset(input).scan();\n        // @ulugbekna: we do not stop parsing if there are lexing errors to be able to reconstruct regexes with unescaped slashes; TODO@ulugbekna: make this respect config option for recovery\n        this._current = 0;\n        this._parsingErrors = [];\n        try {\n            const expr = this._expr();\n            if (!this._isAtEnd()) {\n                const peek = this._peek();\n                const additionalInfo = peek.type === 17 /* TokenType.Str */ ? hintUnexpectedToken : undefined;\n                this._parsingErrors.push({ message: errorUnexpectedToken, offset: peek.offset, lexeme: Scanner.getLexeme(peek), additionalInfo });\n                throw Parser._parseError;\n            }\n            return expr;\n        }\n        catch (e) {\n            if (!(e === Parser._parseError)) {\n                throw e;\n            }\n            return undefined;\n        }\n    }\n    _expr() {\n        return this._or();\n    }\n    _or() {\n        const expr = [this._and()];\n        while (this._matchOne(16 /* TokenType.Or */)) {\n            const right = this._and();\n            expr.push(right);\n        }\n        return expr.length === 1 ? expr[0] : ContextKeyExpr.or(...expr);\n    }\n    _and() {\n        const expr = [this._term()];\n        while (this._matchOne(15 /* TokenType.And */)) {\n            const right = this._term();\n            expr.push(right);\n        }\n        return expr.length === 1 ? expr[0] : ContextKeyExpr.and(...expr);\n    }\n    _term() {\n        if (this._matchOne(2 /* TokenType.Neg */)) {\n            const peek = this._peek();\n            switch (peek.type) {\n                case 11 /* TokenType.True */:\n                    this._advance();\n                    return ContextKeyFalseExpr.INSTANCE;\n                case 12 /* TokenType.False */:\n                    this._advance();\n                    return ContextKeyTrueExpr.INSTANCE;\n                case 0 /* TokenType.LParen */: {\n                    this._advance();\n                    const expr = this._expr();\n                    this._consume(1 /* TokenType.RParen */, errorClosingParenthesis);\n                    return expr === null || expr === void 0 ? void 0 : expr.negate();\n                }\n                case 17 /* TokenType.Str */:\n                    this._advance();\n                    return ContextKeyNotExpr.create(peek.lexeme);\n                default:\n                    throw this._errExpectedButGot(`KEY | true | false | '(' expression ')'`, peek);\n            }\n        }\n        return this._primary();\n    }\n    _primary() {\n        const peek = this._peek();\n        switch (peek.type) {\n            case 11 /* TokenType.True */:\n                this._advance();\n                return ContextKeyExpr.true();\n            case 12 /* TokenType.False */:\n                this._advance();\n                return ContextKeyExpr.false();\n            case 0 /* TokenType.LParen */: {\n                this._advance();\n                const expr = this._expr();\n                this._consume(1 /* TokenType.RParen */, errorClosingParenthesis);\n                return expr;\n            }\n            case 17 /* TokenType.Str */: {\n                // KEY\n                const key = peek.lexeme;\n                this._advance();\n                // =~ regex\n                if (this._matchOne(9 /* TokenType.RegexOp */)) {\n                    // @ulugbekna: we need to reconstruct the regex from the tokens because some extensions use unescaped slashes in regexes\n                    const expr = this._peek();\n                    if (!this._config.regexParsingWithErrorRecovery) {\n                        this._advance();\n                        if (expr.type !== 10 /* TokenType.RegexStr */) {\n                            throw this._errExpectedButGot(`REGEX`, expr);\n                        }\n                        const regexLexeme = expr.lexeme;\n                        const closingSlashIndex = regexLexeme.lastIndexOf('/');\n                        const flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n                        let regexp;\n                        try {\n                            regexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n                        }\n                        catch (e) {\n                            throw this._errExpectedButGot(`REGEX`, expr);\n                        }\n                        return ContextKeyRegexExpr.create(key, regexp);\n                    }\n                    switch (expr.type) {\n                        case 10 /* TokenType.RegexStr */:\n                        case 19 /* TokenType.Error */: { // also handle an ErrorToken in case of smth such as /(/file)/\n                            const lexemeReconstruction = [expr.lexeme]; // /REGEX/ or /REGEX/FLAGS\n                            this._advance();\n                            let followingToken = this._peek();\n                            let parenBalance = 0;\n                            for (let i = 0; i < expr.lexeme.length; i++) {\n                                if (expr.lexeme.charCodeAt(i) === 40 /* CharCode.OpenParen */) {\n                                    parenBalance++;\n                                }\n                                else if (expr.lexeme.charCodeAt(i) === 41 /* CharCode.CloseParen */) {\n                                    parenBalance--;\n                                }\n                            }\n                            while (!this._isAtEnd() && followingToken.type !== 15 /* TokenType.And */ && followingToken.type !== 16 /* TokenType.Or */) {\n                                switch (followingToken.type) {\n                                    case 0 /* TokenType.LParen */:\n                                        parenBalance++;\n                                        break;\n                                    case 1 /* TokenType.RParen */:\n                                        parenBalance--;\n                                        break;\n                                    case 10 /* TokenType.RegexStr */:\n                                    case 18 /* TokenType.QuotedStr */:\n                                        for (let i = 0; i < followingToken.lexeme.length; i++) {\n                                            if (followingToken.lexeme.charCodeAt(i) === 40 /* CharCode.OpenParen */) {\n                                                parenBalance++;\n                                            }\n                                            else if (expr.lexeme.charCodeAt(i) === 41 /* CharCode.CloseParen */) {\n                                                parenBalance--;\n                                            }\n                                        }\n                                }\n                                if (parenBalance < 0) {\n                                    break;\n                                }\n                                lexemeReconstruction.push(Scanner.getLexeme(followingToken));\n                                this._advance();\n                                followingToken = this._peek();\n                            }\n                            const regexLexeme = lexemeReconstruction.join('');\n                            const closingSlashIndex = regexLexeme.lastIndexOf('/');\n                            const flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n                            let regexp;\n                            try {\n                                regexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n                            }\n                            catch (e) {\n                                throw this._errExpectedButGot(`REGEX`, expr);\n                            }\n                            return ContextKeyExpr.regex(key, regexp);\n                        }\n                        case 18 /* TokenType.QuotedStr */: {\n                            const serializedValue = expr.lexeme;\n                            this._advance();\n                            // replicate old regex parsing behavior\n                            let regex = null;\n                            if (!isFalsyOrWhitespace(serializedValue)) {\n                                const start = serializedValue.indexOf('/');\n                                const end = serializedValue.lastIndexOf('/');\n                                if (start !== end && start >= 0) {\n                                    const value = serializedValue.slice(start + 1, end);\n                                    const caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n                                    try {\n                                        regex = new RegExp(value, caseIgnoreFlag);\n                                    }\n                                    catch (_e) {\n                                        throw this._errExpectedButGot(`REGEX`, expr);\n                                    }\n                                }\n                            }\n                            if (regex === null) {\n                                throw this._errExpectedButGot('REGEX', expr);\n                            }\n                            return ContextKeyRegexExpr.create(key, regex);\n                        }\n                        default:\n                            throw this._errExpectedButGot('REGEX', this._peek());\n                    }\n                }\n                // [ 'not' 'in' value ]\n                if (this._matchOne(14 /* TokenType.Not */)) {\n                    this._consume(13 /* TokenType.In */, errorNoInAfterNot);\n                    const right = this._value();\n                    return ContextKeyExpr.notIn(key, right);\n                }\n                // [ ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in') value ]\n                const maybeOp = this._peek().type;\n                switch (maybeOp) {\n                    case 3 /* TokenType.Eq */: {\n                        this._advance();\n                        const right = this._value();\n                        if (this._previous().type === 18 /* TokenType.QuotedStr */) { // to preserve old parser behavior: \"foo == 'true'\" is preserved as \"foo == 'true'\", but \"foo == true\" is optimized as \"foo\"\n                            return ContextKeyExpr.equals(key, right);\n                        }\n                        switch (right) {\n                            case 'true':\n                                return ContextKeyExpr.has(key);\n                            case 'false':\n                                return ContextKeyExpr.not(key);\n                            default:\n                                return ContextKeyExpr.equals(key, right);\n                        }\n                    }\n                    case 4 /* TokenType.NotEq */: {\n                        this._advance();\n                        const right = this._value();\n                        if (this._previous().type === 18 /* TokenType.QuotedStr */) { // same as above with \"foo != 'true'\"\n                            return ContextKeyExpr.notEquals(key, right);\n                        }\n                        switch (right) {\n                            case 'true':\n                                return ContextKeyExpr.not(key);\n                            case 'false':\n                                return ContextKeyExpr.has(key);\n                            default:\n                                return ContextKeyExpr.notEquals(key, right);\n                        }\n                    }\n                    // TODO: ContextKeyExpr.smaller(key, right) accepts only `number` as `right` AND during eval of this node, we just eval to `false` if `right` is not a number\n                    // consequently, package.json linter should _warn_ the user if they're passing undesired things to ops\n                    case 5 /* TokenType.Lt */:\n                        this._advance();\n                        return ContextKeySmallerExpr.create(key, this._value());\n                    case 6 /* TokenType.LtEq */:\n                        this._advance();\n                        return ContextKeySmallerEqualsExpr.create(key, this._value());\n                    case 7 /* TokenType.Gt */:\n                        this._advance();\n                        return ContextKeyGreaterExpr.create(key, this._value());\n                    case 8 /* TokenType.GtEq */:\n                        this._advance();\n                        return ContextKeyGreaterEqualsExpr.create(key, this._value());\n                    case 13 /* TokenType.In */:\n                        this._advance();\n                        return ContextKeyExpr.in(key, this._value());\n                    default:\n                        return ContextKeyExpr.has(key);\n                }\n            }\n            case 20 /* TokenType.EOF */:\n                this._parsingErrors.push({ message: errorUnexpectedEOF, offset: peek.offset, lexeme: '', additionalInfo: hintUnexpectedEOF });\n                throw Parser._parseError;\n            default:\n                throw this._errExpectedButGot(`true | false | KEY \\n\\t| KEY '=~' REGEX \\n\\t| KEY ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in' | 'not' 'in') value`, this._peek());\n        }\n    }\n    _value() {\n        const token = this._peek();\n        switch (token.type) {\n            case 17 /* TokenType.Str */:\n            case 18 /* TokenType.QuotedStr */:\n                this._advance();\n                return token.lexeme;\n            case 11 /* TokenType.True */:\n                this._advance();\n                return 'true';\n            case 12 /* TokenType.False */:\n                this._advance();\n                return 'false';\n            case 13 /* TokenType.In */: // we support `in` as a value, e.g., \"when\": \"languageId == in\" - exists in existing extensions\n                this._advance();\n                return 'in';\n            default:\n                // this allows \"when\": \"foo == \" which's used by existing extensions\n                // we do not call `_advance` on purpose - we don't want to eat unintended tokens\n                return '';\n        }\n    }\n    _removeFlagsGY(flags) {\n        return flags.replaceAll(this._flagsGYRe, '');\n    }\n    // careful: this can throw if current token is the initial one (ie index = 0)\n    _previous() {\n        return this._tokens[this._current - 1];\n    }\n    _matchOne(token) {\n        if (this._check(token)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    }\n    _advance() {\n        if (!this._isAtEnd()) {\n            this._current++;\n        }\n        return this._previous();\n    }\n    _consume(type, message) {\n        if (this._check(type)) {\n            return this._advance();\n        }\n        throw this._errExpectedButGot(message, this._peek());\n    }\n    _errExpectedButGot(expected, got, additionalInfo) {\n        const message = localize('contextkey.parser.error.expectedButGot', \"Expected: {0}\\nReceived: '{1}'.\", expected, Scanner.getLexeme(got));\n        const offset = got.offset;\n        const lexeme = Scanner.getLexeme(got);\n        this._parsingErrors.push({ message, offset, lexeme, additionalInfo });\n        return Parser._parseError;\n    }\n    _check(type) {\n        return this._peek().type === type;\n    }\n    _peek() {\n        return this._tokens[this._current];\n    }\n    _isAtEnd() {\n        return this._peek().type === 20 /* TokenType.EOF */;\n    }\n}\n// Note: this doesn't produce an exact syntax tree but a normalized one\n// ContextKeyExpression's that we use as AST nodes do not expose constructors that do not normalize\nParser._parseError = new Error();\nexport class ContextKeyExpr {\n    static false() {\n        return ContextKeyFalseExpr.INSTANCE;\n    }\n    static true() {\n        return ContextKeyTrueExpr.INSTANCE;\n    }\n    static has(key) {\n        return ContextKeyDefinedExpr.create(key);\n    }\n    static equals(key, value) {\n        return ContextKeyEqualsExpr.create(key, value);\n    }\n    static notEquals(key, value) {\n        return ContextKeyNotEqualsExpr.create(key, value);\n    }\n    static regex(key, value) {\n        return ContextKeyRegexExpr.create(key, value);\n    }\n    static in(key, value) {\n        return ContextKeyInExpr.create(key, value);\n    }\n    static notIn(key, value) {\n        return ContextKeyNotInExpr.create(key, value);\n    }\n    static not(key) {\n        return ContextKeyNotExpr.create(key);\n    }\n    static and(...expr) {\n        return ContextKeyAndExpr.create(expr, null, true);\n    }\n    static or(...expr) {\n        return ContextKeyOrExpr.create(expr, null, true);\n    }\n    static deserialize(serialized) {\n        if (serialized === undefined || serialized === null) { // an empty string needs to be handled by the parser to get a corresponding parsing error reported\n            return undefined;\n        }\n        const expr = this._parser.parse(serialized);\n        return expr;\n    }\n}\nContextKeyExpr._parser = new Parser({ regexParsingWithErrorRecovery: false });\nexport function expressionsAreEqualWithConstantSubstitution(a, b) {\n    const aExpr = a ? a.substituteConstants() : undefined;\n    const bExpr = b ? b.substituteConstants() : undefined;\n    if (!aExpr && !bExpr) {\n        return true;\n    }\n    if (!aExpr || !bExpr) {\n        return false;\n    }\n    return aExpr.equals(bExpr);\n}\nfunction cmp(a, b) {\n    return a.cmp(b);\n}\nexport class ContextKeyFalseExpr {\n    constructor() {\n        this.type = 0 /* ContextKeyExprType.False */;\n    }\n    cmp(other) {\n        return this.type - other.type;\n    }\n    equals(other) {\n        return (other.type === this.type);\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return false;\n    }\n    serialize() {\n        return 'false';\n    }\n    keys() {\n        return [];\n    }\n    negate() {\n        return ContextKeyTrueExpr.INSTANCE;\n    }\n}\nContextKeyFalseExpr.INSTANCE = new ContextKeyFalseExpr();\nexport class ContextKeyTrueExpr {\n    constructor() {\n        this.type = 1 /* ContextKeyExprType.True */;\n    }\n    cmp(other) {\n        return this.type - other.type;\n    }\n    equals(other) {\n        return (other.type === this.type);\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return true;\n    }\n    serialize() {\n        return 'true';\n    }\n    keys() {\n        return [];\n    }\n    negate() {\n        return ContextKeyFalseExpr.INSTANCE;\n    }\n}\nContextKeyTrueExpr.INSTANCE = new ContextKeyTrueExpr();\nexport class ContextKeyDefinedExpr {\n    static create(key, negated = null) {\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            return constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n        }\n        return new ContextKeyDefinedExpr(key, negated);\n    }\n    constructor(key, negated) {\n        this.key = key;\n        this.negated = negated;\n        this.type = 2 /* ContextKeyExprType.Defined */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp1(this.key, other.key);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            return constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n        }\n        return this;\n    }\n    evaluate(context) {\n        return (!!context.getValue(this.key));\n    }\n    serialize() {\n        return this.key;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotExpr.create(this.key, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyEqualsExpr {\n    static create(key, value, negated = null) {\n        if (typeof value === 'boolean') {\n            return (value ? ContextKeyDefinedExpr.create(key, negated) : ContextKeyNotExpr.create(key, negated));\n        }\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            const trueValue = constantValue ? 'true' : 'false';\n            return (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n        }\n        return new ContextKeyEqualsExpr(key, value, negated);\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 4 /* ContextKeyExprType.Equals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            const trueValue = constantValue ? 'true' : 'false';\n            return (this.value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        // Intentional ==\n        // eslint-disable-next-line eqeqeq\n        return (context.getValue(this.key) == this.value);\n    }\n    serialize() {\n        return `${this.key} == '${this.value}'`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyInExpr {\n    static create(key, valueKey) {\n        return new ContextKeyInExpr(key, valueKey);\n    }\n    constructor(key, valueKey) {\n        this.key = key;\n        this.valueKey = valueKey;\n        this.type = 10 /* ContextKeyExprType.In */;\n        this.negated = null;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.valueKey, other.key, other.valueKey);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.valueKey === other.valueKey);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        const source = context.getValue(this.valueKey);\n        const item = context.getValue(this.key);\n        if (Array.isArray(source)) {\n            return source.includes(item);\n        }\n        if (typeof item === 'string' && typeof source === 'object' && source !== null) {\n            return hasOwnProperty.call(source, item);\n        }\n        return false;\n    }\n    serialize() {\n        return `${this.key} in '${this.valueKey}'`;\n    }\n    keys() {\n        return [this.key, this.valueKey];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotInExpr.create(this.key, this.valueKey);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotInExpr {\n    static create(key, valueKey) {\n        return new ContextKeyNotInExpr(key, valueKey);\n    }\n    constructor(key, valueKey) {\n        this.key = key;\n        this.valueKey = valueKey;\n        this.type = 11 /* ContextKeyExprType.NotIn */;\n        this._negated = ContextKeyInExpr.create(key, valueKey);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return this._negated.cmp(other._negated);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return this._negated.equals(other._negated);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return !this._negated.evaluate(context);\n    }\n    serialize() {\n        return `${this.key} not in '${this.valueKey}'`;\n    }\n    keys() {\n        return this._negated.keys();\n    }\n    negate() {\n        return this._negated;\n    }\n}\nexport class ContextKeyNotEqualsExpr {\n    static create(key, value, negated = null) {\n        if (typeof value === 'boolean') {\n            if (value) {\n                return ContextKeyNotExpr.create(key, negated);\n            }\n            return ContextKeyDefinedExpr.create(key, negated);\n        }\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            const falseValue = constantValue ? 'true' : 'false';\n            return (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return new ContextKeyNotEqualsExpr(key, value, negated);\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 5 /* ContextKeyExprType.NotEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            const falseValue = constantValue ? 'true' : 'false';\n            return (this.value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        // Intentional !=\n        // eslint-disable-next-line eqeqeq\n        return (context.getValue(this.key) != this.value);\n    }\n    serialize() {\n        return `${this.key} != '${this.value}'`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotExpr {\n    static create(key, negated = null) {\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            return (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return new ContextKeyNotExpr(key, negated);\n    }\n    constructor(key, negated) {\n        this.key = key;\n        this.negated = negated;\n        this.type = 3 /* ContextKeyExprType.Not */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp1(this.key, other.key);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            return (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        return (!context.getValue(this.key));\n    }\n    serialize() {\n        return `!${this.key}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyDefinedExpr.create(this.key, this);\n        }\n        return this.negated;\n    }\n}\nfunction withFloatOrStr(value, callback) {\n    if (typeof value === 'string') {\n        const n = parseFloat(value);\n        if (!isNaN(n)) {\n            value = n;\n        }\n    }\n    if (typeof value === 'string' || typeof value === 'number') {\n        return callback(value);\n    }\n    return ContextKeyFalseExpr.INSTANCE;\n}\nexport class ContextKeyGreaterExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeyGreaterExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 12 /* ContextKeyExprType.Greater */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) > this.value);\n    }\n    serialize() {\n        return `${this.key} > ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeySmallerEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyGreaterEqualsExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeyGreaterEqualsExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 13 /* ContextKeyExprType.GreaterEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) >= this.value);\n    }\n    serialize() {\n        return `${this.key} >= ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeySmallerExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeySmallerExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeySmallerExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 14 /* ContextKeyExprType.Smaller */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) < this.value);\n    }\n    serialize() {\n        return `${this.key} < ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyGreaterEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeySmallerEqualsExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeySmallerEqualsExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 15 /* ContextKeyExprType.SmallerEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) <= this.value);\n    }\n    serialize() {\n        return `${this.key} <= ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyGreaterExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyRegexExpr {\n    static create(key, regexp) {\n        return new ContextKeyRegexExpr(key, regexp);\n    }\n    constructor(key, regexp) {\n        this.key = key;\n        this.regexp = regexp;\n        this.type = 7 /* ContextKeyExprType.Regex */;\n        this.negated = null;\n        //\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.key < other.key) {\n            return -1;\n        }\n        if (this.key > other.key) {\n            return 1;\n        }\n        const thisSource = this.regexp ? this.regexp.source : '';\n        const otherSource = other.regexp ? other.regexp.source : '';\n        if (thisSource < otherSource) {\n            return -1;\n        }\n        if (thisSource > otherSource) {\n            return 1;\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            const thisSource = this.regexp ? this.regexp.source : '';\n            const otherSource = other.regexp ? other.regexp.source : '';\n            return (this.key === other.key && thisSource === otherSource);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        const value = context.getValue(this.key);\n        return this.regexp ? this.regexp.test(value) : false;\n    }\n    serialize() {\n        const value = this.regexp\n            ? `/${this.regexp.source}/${this.regexp.flags}`\n            : '/invalid/';\n        return `${this.key} =~ ${value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotRegexExpr.create(this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotRegexExpr {\n    static create(actual) {\n        return new ContextKeyNotRegexExpr(actual);\n    }\n    constructor(_actual) {\n        this._actual = _actual;\n        this.type = 8 /* ContextKeyExprType.NotRegex */;\n        //\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return this._actual.cmp(other._actual);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return this._actual.equals(other._actual);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return !this._actual.evaluate(context);\n    }\n    serialize() {\n        return `!(${this._actual.serialize()})`;\n    }\n    keys() {\n        return this._actual.keys();\n    }\n    negate() {\n        return this._actual;\n    }\n}\n/**\n * @returns the same instance if nothing changed.\n */\nfunction eliminateConstantsInArray(arr) {\n    // Allocate array only if there is a difference\n    let newArr = null;\n    for (let i = 0, len = arr.length; i < len; i++) {\n        const newExpr = arr[i].substituteConstants();\n        if (arr[i] !== newExpr) {\n            // something has changed!\n            // allocate array on first difference\n            if (newArr === null) {\n                newArr = [];\n                for (let j = 0; j < i; j++) {\n                    newArr[j] = arr[j];\n                }\n            }\n        }\n        if (newArr !== null) {\n            newArr[i] = newExpr;\n        }\n    }\n    if (newArr === null) {\n        return arr;\n    }\n    return newArr;\n}\nexport class ContextKeyAndExpr {\n    static create(_expr, negated, extraRedundantCheck) {\n        return ContextKeyAndExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n    }\n    constructor(expr, negated) {\n        this.expr = expr;\n        this.negated = negated;\n        this.type = 6 /* ContextKeyExprType.And */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.expr.length < other.expr.length) {\n            return -1;\n        }\n        if (this.expr.length > other.expr.length) {\n            return 1;\n        }\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            const r = cmp(this.expr[i], other.expr[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            if (this.expr.length !== other.expr.length) {\n                return false;\n            }\n            for (let i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].equals(other.expr[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    substituteConstants() {\n        const exprArr = eliminateConstantsInArray(this.expr);\n        if (exprArr === this.expr) {\n            // no change\n            return this;\n        }\n        return ContextKeyAndExpr.create(exprArr, this.negated, false);\n    }\n    evaluate(context) {\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            if (!this.expr[i].evaluate(context)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static _normalizeArr(arr, negated, extraRedundantCheck) {\n        const expr = [];\n        let hasTrue = false;\n        for (const e of arr) {\n            if (!e) {\n                continue;\n            }\n            if (e.type === 1 /* ContextKeyExprType.True */) {\n                // anything && true ==> anything\n                hasTrue = true;\n                continue;\n            }\n            if (e.type === 0 /* ContextKeyExprType.False */) {\n                // anything && false ==> false\n                return ContextKeyFalseExpr.INSTANCE;\n            }\n            if (e.type === 6 /* ContextKeyExprType.And */) {\n                expr.push(...e.expr);\n                continue;\n            }\n            expr.push(e);\n        }\n        if (expr.length === 0 && hasTrue) {\n            return ContextKeyTrueExpr.INSTANCE;\n        }\n        if (expr.length === 0) {\n            return undefined;\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        expr.sort(cmp);\n        // eliminate duplicate terms\n        for (let i = 1; i < expr.length; i++) {\n            if (expr[i - 1].equals(expr[i])) {\n                expr.splice(i, 1);\n                i--;\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // We must distribute any OR expression because we don't support parens\n        // OR extensions will be at the end (due to sorting rules)\n        while (expr.length > 1) {\n            const lastElement = expr[expr.length - 1];\n            if (lastElement.type !== 9 /* ContextKeyExprType.Or */) {\n                break;\n            }\n            // pop the last element\n            expr.pop();\n            // pop the second to last element\n            const secondToLastElement = expr.pop();\n            const isFinished = (expr.length === 0);\n            // distribute `lastElement` over `secondToLastElement`\n            const resultElement = ContextKeyOrExpr.create(lastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement], null, extraRedundantCheck)), null, isFinished);\n            if (resultElement) {\n                expr.push(resultElement);\n                expr.sort(cmp);\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // resolve false AND expressions\n        if (extraRedundantCheck) {\n            for (let i = 0; i < expr.length; i++) {\n                for (let j = i + 1; j < expr.length; j++) {\n                    if (expr[i].negate().equals(expr[j])) {\n                        // A && !A case\n                        return ContextKeyFalseExpr.INSTANCE;\n                    }\n                }\n            }\n            if (expr.length === 1) {\n                return expr[0];\n            }\n        }\n        return new ContextKeyAndExpr(expr, negated);\n    }\n    serialize() {\n        return this.expr.map(e => e.serialize()).join(' && ');\n    }\n    keys() {\n        const result = [];\n        for (const expr of this.expr) {\n            result.push(...expr.keys());\n        }\n        return result;\n    }\n    negate() {\n        if (!this.negated) {\n            const result = [];\n            for (const expr of this.expr) {\n                result.push(expr.negate());\n            }\n            this.negated = ContextKeyOrExpr.create(result, this, true);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyOrExpr {\n    static create(_expr, negated, extraRedundantCheck) {\n        return ContextKeyOrExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n    }\n    constructor(expr, negated) {\n        this.expr = expr;\n        this.negated = negated;\n        this.type = 9 /* ContextKeyExprType.Or */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.expr.length < other.expr.length) {\n            return -1;\n        }\n        if (this.expr.length > other.expr.length) {\n            return 1;\n        }\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            const r = cmp(this.expr[i], other.expr[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            if (this.expr.length !== other.expr.length) {\n                return false;\n            }\n            for (let i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].equals(other.expr[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    substituteConstants() {\n        const exprArr = eliminateConstantsInArray(this.expr);\n        if (exprArr === this.expr) {\n            // no change\n            return this;\n        }\n        return ContextKeyOrExpr.create(exprArr, this.negated, false);\n    }\n    evaluate(context) {\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            if (this.expr[i].evaluate(context)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    static _normalizeArr(arr, negated, extraRedundantCheck) {\n        let expr = [];\n        let hasFalse = false;\n        if (arr) {\n            for (let i = 0, len = arr.length; i < len; i++) {\n                const e = arr[i];\n                if (!e) {\n                    continue;\n                }\n                if (e.type === 0 /* ContextKeyExprType.False */) {\n                    // anything || false ==> anything\n                    hasFalse = true;\n                    continue;\n                }\n                if (e.type === 1 /* ContextKeyExprType.True */) {\n                    // anything || true ==> true\n                    return ContextKeyTrueExpr.INSTANCE;\n                }\n                if (e.type === 9 /* ContextKeyExprType.Or */) {\n                    expr = expr.concat(e.expr);\n                    continue;\n                }\n                expr.push(e);\n            }\n            if (expr.length === 0 && hasFalse) {\n                return ContextKeyFalseExpr.INSTANCE;\n            }\n            expr.sort(cmp);\n        }\n        if (expr.length === 0) {\n            return undefined;\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // eliminate duplicate terms\n        for (let i = 1; i < expr.length; i++) {\n            if (expr[i - 1].equals(expr[i])) {\n                expr.splice(i, 1);\n                i--;\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // resolve true OR expressions\n        if (extraRedundantCheck) {\n            for (let i = 0; i < expr.length; i++) {\n                for (let j = i + 1; j < expr.length; j++) {\n                    if (expr[i].negate().equals(expr[j])) {\n                        // A || !A case\n                        return ContextKeyTrueExpr.INSTANCE;\n                    }\n                }\n            }\n            if (expr.length === 1) {\n                return expr[0];\n            }\n        }\n        return new ContextKeyOrExpr(expr, negated);\n    }\n    serialize() {\n        return this.expr.map(e => e.serialize()).join(' || ');\n    }\n    keys() {\n        const result = [];\n        for (const expr of this.expr) {\n            result.push(...expr.keys());\n        }\n        return result;\n    }\n    negate() {\n        if (!this.negated) {\n            const result = [];\n            for (const expr of this.expr) {\n                result.push(expr.negate());\n            }\n            // We don't support parens, so here we distribute the AND over the OR terminals\n            // We always take the first 2 AND pairs and distribute them\n            while (result.length > 1) {\n                const LEFT = result.shift();\n                const RIGHT = result.shift();\n                const all = [];\n                for (const left of getTerminals(LEFT)) {\n                    for (const right of getTerminals(RIGHT)) {\n                        all.push(ContextKeyAndExpr.create([left, right], null, false));\n                    }\n                }\n                result.unshift(ContextKeyOrExpr.create(all, null, false));\n            }\n            this.negated = ContextKeyOrExpr.create(result, this, true);\n        }\n        return this.negated;\n    }\n}\nexport class RawContextKey extends ContextKeyDefinedExpr {\n    static all() {\n        return RawContextKey._info.values();\n    }\n    constructor(key, defaultValue, metaOrHide) {\n        super(key, null);\n        this._defaultValue = defaultValue;\n        // collect all context keys into a central place\n        if (typeof metaOrHide === 'object') {\n            RawContextKey._info.push({ ...metaOrHide, key });\n        }\n        else if (metaOrHide !== true) {\n            RawContextKey._info.push({ key, description: metaOrHide, type: defaultValue !== null && defaultValue !== undefined ? typeof defaultValue : undefined });\n        }\n    }\n    bindTo(target) {\n        return target.createKey(this.key, this._defaultValue);\n    }\n    getValue(target) {\n        return target.getContextKeyValue(this.key);\n    }\n    toNegated() {\n        return this.negate();\n    }\n    isEqualTo(value) {\n        return ContextKeyEqualsExpr.create(this.key, value);\n    }\n}\nRawContextKey._info = [];\nexport const IContextKeyService = createDecorator('contextKeyService');\nfunction cmp1(key1, key2) {\n    if (key1 < key2) {\n        return -1;\n    }\n    if (key1 > key2) {\n        return 1;\n    }\n    return 0;\n}\nfunction cmp2(key1, value1, key2, value2) {\n    if (key1 < key2) {\n        return -1;\n    }\n    if (key1 > key2) {\n        return 1;\n    }\n    if (value1 < value2) {\n        return -1;\n    }\n    if (value1 > value2) {\n        return 1;\n    }\n    return 0;\n}\n/**\n * Returns true if it is provable `p` implies `q`.\n */\nexport function implies(p, q) {\n    if (p.type === 0 /* ContextKeyExprType.False */ || q.type === 1 /* ContextKeyExprType.True */) {\n        // false implies anything\n        // anything implies true\n        return true;\n    }\n    if (p.type === 9 /* ContextKeyExprType.Or */) {\n        if (q.type === 9 /* ContextKeyExprType.Or */) {\n            // `a || b || c` can only imply something like `a || b || c || d`\n            return allElementsIncluded(p.expr, q.expr);\n        }\n        return false;\n    }\n    if (q.type === 9 /* ContextKeyExprType.Or */) {\n        for (const element of q.expr) {\n            if (implies(p, element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (p.type === 6 /* ContextKeyExprType.And */) {\n        if (q.type === 6 /* ContextKeyExprType.And */) {\n            // `a && b && c` implies `a && c`\n            return allElementsIncluded(q.expr, p.expr);\n        }\n        for (const element of p.expr) {\n            if (implies(element, q)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    return p.equals(q);\n}\n/**\n * Returns true if all elements in `p` are also present in `q`.\n * The two arrays are assumed to be sorted\n */\nfunction allElementsIncluded(p, q) {\n    let pIndex = 0;\n    let qIndex = 0;\n    while (pIndex < p.length && qIndex < q.length) {\n        const cmp = p[pIndex].cmp(q[qIndex]);\n        if (cmp < 0) {\n            // an element from `p` is missing from `q`\n            return false;\n        }\n        else if (cmp === 0) {\n            pIndex++;\n            qIndex++;\n        }\n        else {\n            qIndex++;\n        }\n    }\n    return (pIndex === p.length);\n}\nfunction getTerminals(node) {\n    if (node.type === 9 /* ContextKeyExprType.Or */) {\n        return node.expr;\n    }\n    return [node];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isIOS, isLinux, isMacintosh, isMobile, isWeb, isWindows } from '../../../base/common/platform.js';\nimport { localize } from '../../../nls.js';\nimport { RawContextKey } from './contextkey.js';\nexport const IsMacContext = new RawContextKey('isMac', isMacintosh, localize('isMac', \"Whether the operating system is macOS\"));\nexport const IsLinuxContext = new RawContextKey('isLinux', isLinux, localize('isLinux', \"Whether the operating system is Linux\"));\nexport const IsWindowsContext = new RawContextKey('isWindows', isWindows, localize('isWindows', \"Whether the operating system is Windows\"));\nexport const IsWebContext = new RawContextKey('isWeb', isWeb, localize('isWeb', \"Whether the platform is a web browser\"));\nexport const IsMacNativeContext = new RawContextKey('isMacNative', isMacintosh && !isWeb, localize('isMacNative', \"Whether the operating system is macOS on a non-browser platform\"));\nexport const IsIOSContext = new RawContextKey('isIOS', isIOS, localize('isIOS', \"Whether the operating system is iOS\"));\nexport const IsMobileContext = new RawContextKey('isMobile', isMobile, localize('isMobile', \"Whether the platform is a mobile web browser\"));\nexport const IsDevelopmentContext = new RawContextKey('isDevelopment', false, true);\nexport const ProductQualityContext = new RawContextKey('productQualityType', '', localize('productQualityType', \"Quality type of VS Code\"));\nexport const InputFocusedContextKey = 'inputFocus';\nexport const InputFocusedContext = new RawContextKey(InputFocusedContextKey, false, localize('inputFocus', \"Whether keyboard focus is inside an input box\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, addDisposableListener, EventType, getActiveElement, getWindow, isAncestor } from '../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { Menu } from '../../../base/browser/ui/menu/menu.js';\nimport { ActionRunner } from '../../../base/common/actions.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { combinedDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { defaultMenuStyles } from '../../theme/browser/defaultStyles.js';\nexport class ContextMenuHandler {\n    constructor(contextViewService, telemetryService, notificationService, keybindingService) {\n        this.contextViewService = contextViewService;\n        this.telemetryService = telemetryService;\n        this.notificationService = notificationService;\n        this.keybindingService = keybindingService;\n        this.focusToReturn = null;\n        this.lastContainer = null;\n        this.block = null;\n        this.blockDisposable = null;\n        this.options = { blockMouse: true };\n    }\n    configure(options) {\n        this.options = options;\n    }\n    showContextMenu(delegate) {\n        const actions = delegate.getActions();\n        if (!actions.length) {\n            return; // Don't render an empty context menu\n        }\n        this.focusToReturn = getActiveElement();\n        let menu;\n        const shadowRootElement = delegate.domForShadowRoot instanceof HTMLElement ? delegate.domForShadowRoot : undefined;\n        this.contextViewService.showContextView({\n            getAnchor: () => delegate.getAnchor(),\n            canRelayout: false,\n            anchorAlignment: delegate.anchorAlignment,\n            anchorAxisAlignment: delegate.anchorAxisAlignment,\n            render: (container) => {\n                var _a;\n                this.lastContainer = container;\n                const className = delegate.getMenuClassName ? delegate.getMenuClassName() : '';\n                if (className) {\n                    container.className += ' ' + className;\n                }\n                // Render invisible div to block mouse interaction in the rest of the UI\n                if (this.options.blockMouse) {\n                    this.block = container.appendChild($('.context-view-block'));\n                    this.block.style.position = 'fixed';\n                    this.block.style.cursor = 'initial';\n                    this.block.style.left = '0';\n                    this.block.style.top = '0';\n                    this.block.style.width = '100%';\n                    this.block.style.height = '100%';\n                    this.block.style.zIndex = '-1';\n                    (_a = this.blockDisposable) === null || _a === void 0 ? void 0 : _a.dispose();\n                    this.blockDisposable = addDisposableListener(this.block, EventType.MOUSE_DOWN, e => e.stopPropagation());\n                }\n                const menuDisposables = new DisposableStore();\n                const actionRunner = delegate.actionRunner || new ActionRunner();\n                actionRunner.onWillRun(evt => this.onActionRun(evt, !delegate.skipTelemetry), this, menuDisposables);\n                actionRunner.onDidRun(this.onDidActionRun, this, menuDisposables);\n                menu = new Menu(container, actions, {\n                    actionViewItemProvider: delegate.getActionViewItem,\n                    context: delegate.getActionsContext ? delegate.getActionsContext() : null,\n                    actionRunner,\n                    getKeyBinding: delegate.getKeyBinding ? delegate.getKeyBinding : action => this.keybindingService.lookupKeybinding(action.id)\n                }, defaultMenuStyles);\n                menu.onDidCancel(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n                menu.onDidBlur(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n                const targetWindow = getWindow(container);\n                menuDisposables.add(addDisposableListener(targetWindow, EventType.BLUR, () => this.contextViewService.hideContextView(true)));\n                menuDisposables.add(addDisposableListener(targetWindow, EventType.MOUSE_DOWN, (e) => {\n                    if (e.defaultPrevented) {\n                        return;\n                    }\n                    const event = new StandardMouseEvent(targetWindow, e);\n                    let element = event.target;\n                    // Don't do anything as we are likely creating a context menu\n                    if (event.rightButton) {\n                        return;\n                    }\n                    while (element) {\n                        if (element === container) {\n                            return;\n                        }\n                        element = element.parentElement;\n                    }\n                    this.contextViewService.hideContextView(true);\n                }));\n                return combinedDisposable(menuDisposables, menu);\n            },\n            focus: () => {\n                menu === null || menu === void 0 ? void 0 : menu.focus(!!delegate.autoSelectFirstItem);\n            },\n            onHide: (didCancel) => {\n                var _a, _b, _c;\n                (_a = delegate.onHide) === null || _a === void 0 ? void 0 : _a.call(delegate, !!didCancel);\n                if (this.block) {\n                    this.block.remove();\n                    this.block = null;\n                }\n                (_b = this.blockDisposable) === null || _b === void 0 ? void 0 : _b.dispose();\n                this.blockDisposable = null;\n                if (!!this.lastContainer && (getActiveElement() === this.lastContainer || isAncestor(getActiveElement(), this.lastContainer))) {\n                    (_c = this.focusToReturn) === null || _c === void 0 ? void 0 : _c.focus();\n                }\n                this.lastContainer = null;\n            }\n        }, shadowRootElement, !!shadowRootElement);\n    }\n    onActionRun(e, logTelemetry) {\n        if (logTelemetry) {\n            this.telemetryService.publicLog2('workbenchActionExecuted', { id: e.action.id, from: 'contextMenu' });\n        }\n        this.contextViewService.hideContextView(false);\n    }\n    onDidActionRun(e) {\n        if (e.error && !isCancellationError(e.error)) {\n            this.notificationService.error(e.error);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { ModifierKeyEmitter } from '../../../base/browser/dom.js';\nimport { Separator } from '../../../base/common/actions.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { createAndFillInContextMenuActions } from '../../actions/browser/menuEntryActionViewItem.js';\nimport { IMenuService, MenuId } from '../../actions/common/actions.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\nimport { ContextMenuHandler } from './contextMenuHandler.js';\nimport { IContextViewService } from './contextView.js';\nlet ContextMenuService = class ContextMenuService extends Disposable {\n    get contextMenuHandler() {\n        if (!this._contextMenuHandler) {\n            this._contextMenuHandler = new ContextMenuHandler(this.contextViewService, this.telemetryService, this.notificationService, this.keybindingService);\n        }\n        return this._contextMenuHandler;\n    }\n    constructor(telemetryService, notificationService, contextViewService, keybindingService, menuService, contextKeyService) {\n        super();\n        this.telemetryService = telemetryService;\n        this.notificationService = notificationService;\n        this.contextViewService = contextViewService;\n        this.keybindingService = keybindingService;\n        this.menuService = menuService;\n        this.contextKeyService = contextKeyService;\n        this._contextMenuHandler = undefined;\n        this._onDidShowContextMenu = this._store.add(new Emitter());\n        this.onDidShowContextMenu = this._onDidShowContextMenu.event;\n        this._onDidHideContextMenu = this._store.add(new Emitter());\n    }\n    configure(options) {\n        this.contextMenuHandler.configure(options);\n    }\n    // ContextMenu\n    showContextMenu(delegate) {\n        delegate = ContextMenuMenuDelegate.transform(delegate, this.menuService, this.contextKeyService);\n        this.contextMenuHandler.showContextMenu({\n            ...delegate,\n            onHide: (didCancel) => {\n                var _a;\n                (_a = delegate.onHide) === null || _a === void 0 ? void 0 : _a.call(delegate, didCancel);\n                this._onDidHideContextMenu.fire();\n            }\n        });\n        ModifierKeyEmitter.getInstance().resetKeyStatus();\n        this._onDidShowContextMenu.fire();\n    }\n};\nContextMenuService = __decorate([\n    __param(0, ITelemetryService),\n    __param(1, INotificationService),\n    __param(2, IContextViewService),\n    __param(3, IKeybindingService),\n    __param(4, IMenuService),\n    __param(5, IContextKeyService)\n], ContextMenuService);\nexport { ContextMenuService };\nexport var ContextMenuMenuDelegate;\n(function (ContextMenuMenuDelegate) {\n    function is(thing) {\n        return thing && thing.menuId instanceof MenuId;\n    }\n    function transform(delegate, menuService, globalContextKeyService) {\n        if (!is(delegate)) {\n            return delegate;\n        }\n        const { menuId, menuActionOptions, contextKeyService } = delegate;\n        return {\n            ...delegate,\n            getActions: () => {\n                const target = [];\n                if (menuId) {\n                    const menu = menuService.createMenu(menuId, contextKeyService !== null && contextKeyService !== void 0 ? contextKeyService : globalContextKeyService);\n                    createAndFillInContextMenuActions(menu, menuActionOptions, target);\n                    menu.dispose();\n                }\n                if (!delegate.getActions) {\n                    return target;\n                }\n                else {\n                    return Separator.join(delegate.getActions(), target);\n                }\n            }\n        };\n    }\n    ContextMenuMenuDelegate.transform = transform;\n})(ContextMenuMenuDelegate || (ContextMenuMenuDelegate = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IContextViewService = createDecorator('contextViewService');\nexport const IContextMenuService = createDecorator('contextMenuService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { ContextView } from '../../../base/browser/ui/contextview/contextview.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { getWindow } from '../../../base/browser/dom.js';\nlet ContextViewHandler = class ContextViewHandler extends Disposable {\n    constructor(layoutService) {\n        super();\n        this.layoutService = layoutService;\n        this.contextView = this._register(new ContextView(this.layoutService.mainContainer, 1 /* ContextViewDOMPosition.ABSOLUTE */));\n        this.layout();\n        this._register(layoutService.onDidLayoutContainer(() => this.layout()));\n    }\n    // ContextView\n    showContextView(delegate, container, shadowRoot) {\n        let domPosition;\n        if (container) {\n            if (container === this.layoutService.getContainer(getWindow(container))) {\n                domPosition = 1 /* ContextViewDOMPosition.ABSOLUTE */;\n            }\n            else if (shadowRoot) {\n                domPosition = 3 /* ContextViewDOMPosition.FIXED_SHADOW */;\n            }\n            else {\n                domPosition = 2 /* ContextViewDOMPosition.FIXED */;\n            }\n        }\n        else {\n            domPosition = 1 /* ContextViewDOMPosition.ABSOLUTE */;\n        }\n        this.contextView.setContainer(container !== null && container !== void 0 ? container : this.layoutService.activeContainer, domPosition);\n        this.contextView.show(delegate);\n        const openContextView = {\n            close: () => {\n                if (this.openContextView === openContextView) {\n                    this.hideContextView();\n                }\n            }\n        };\n        this.openContextView = openContextView;\n        return openContextView;\n    }\n    layout() {\n        this.contextView.layout();\n    }\n    hideContextView(data) {\n        this.contextView.hide(data);\n        this.openContextView = undefined;\n    }\n};\nContextViewHandler = __decorate([\n    __param(0, ILayoutService)\n], ContextViewHandler);\nexport { ContextViewHandler };\nexport class ContextViewService extends ContextViewHandler {\n    getContextViewElement() {\n        return this.contextView.getViewElement();\n    }\n}\n"],"names":["isPseudo","document","location","hash","indexOf","_format","message","args","result","length","replace","match","rest","index","arg","String","localize","data","_len2","arguments","Array","_key2","localize2","_len3","_key3","original","value","getConfiguredDefaultLocale","_","__decorate","decorators","target","key","desc","d","c","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","AccessibilityService","Disposable","constructor","_contextKeyService","_layoutService","_configurationService","super","this","_accessibilitySupport","_onDidChangeScreenReaderOptimized","Emitter","_onDidChangeReducedMotion","_accessibilityModeEnabledContext","CONTEXT_ACCESSIBILITY_MODE_ENABLED","bindTo","updateContextKey","set","isScreenReaderOptimized","_register","onDidChangeConfiguration","e","affectsConfiguration","fire","_configMotionReduced","getValue","onDidChangeScreenReaderOptimized","reduceMotionMatcher","mainWindow","matchMedia","_systemMotionReduced","matches","initReducedMotionListeners","addDisposableListener","updateRootClasses","reduce","isMotionReduced","mainContainer","classList","toggle","onDidChangeReducedMotion","event","config","getAccessibilitySupport","IContextKeyService","ILayoutService","IConfigurationService","IAccessibilityService","createDecorator","RawContextKey","IAccessibilitySignalService","Symbol","Sound","register","options","fileName","error","warning","foldedArea","break","quickFixes","taskCompleted","taskFailed","terminalBell","diffLineInserted","diffLineDeleted","diffLineModified","chatRequestSent","chatResponseReceived1","chatResponseReceived2","chatResponseReceived3","chatResponseReceived4","clear","save","format","voiceRecordingStarted","voiceRecordingStopped","progress","SoundSource","randomOneOf","AccessibilitySignal","sound","name","legacySoundSettingsKey","settingsKey","legacyAnnouncementSettingsKey","announcementMessage","soundSource","signal","_signals","add","Set","errorAtPosition","warningAtPosition","errorOnLine","warningOnLine","inlineSuggestion","terminalQuickFix","onDebugBreak","noInlayHints","terminalCommandFailed","notebookCellCompleted","notebookCellFailed","chatResponseReceived","isLocalizedString","thing","isICommandActionToggleInfo","undefined","condition","Categories","freeze","View","Help","Test","File","Preferences","Developer","comment","acceptSelectedActionCommand","previewSelectedActionCommand","HeaderRenderer","templateId","renderTemplate","container","text","createElement","append","renderElement","element","_index","templateData","_a","_b","textContent","group","title","disposeTemplate","_templateData","ActionItemRenderer","_supportsPreview","_keybindingService","icon","className","keybinding","KeybindingLabel","OS","_c","ThemeIcon","asClassName","color","style","asCssVariable","id","Codicon","lightBulb","item","label","stripNewlines","dom","actionTitle","lookupKeybinding","getLabel","previewTitle","disabled","canPreview","dispose","IKeybindingService","AcceptSelectedEvent","UIEvent","PreviewSelectedEvent","getKeyboardNavigationLabel","kind","ActionList","user","preview","items","_delegate","_contextViewService","_actionLineHeight","_headerLineHeight","cts","CancellationTokenSource","domNode","virtualDelegate","getHeight","getTemplateId","_list","List","keyboardSupport","typeNavigationEnabled","keyboardNavigationLabelProvider","accessibilityProvider","getAriaLabel","getWidgetAriaLabel","getRole","getWidgetRole","defaultListStyles","onMouseClick","onListClick","onMouseOver","onListHover","onDidChangeFocus","onFocus","onDidChangeSelection","onListSelection","_allMenuItems","splice","focusNext","focusCondition","hide","didCancel","onHide","cancel","hideContextView","layout","minWidth","numHeaders","filter","heightWithHeaders","maxWidth","itemWidths","map","ownerDocument","getElementById","getElementID","width","getBoundingClientRect","Math","max","height","min","body","clientHeight","concat","domFocus","focusPrevious","acceptSelected","focused","getFocus","focusIndex","setSelection","elements","onSelect","browserEvent","call","onHover","token","setFocus","str","IContextViewService","registerColor","dark","inputActiveOptionBackground","light","hcDark","hcLight","ActionWidgetContextKeys","Visible","IActionWidgetService","ActionWidgetService","isVisible","_instantiationService","MutableDisposable","show","supportsPreview","delegate","anchor","actionBarActions","visibleContext","list","createInstance","showContextView","getAnchor","render","_renderWidget","reset","_onWidgetClosed","widget","appendChild","Error","renderDisposables","DisposableStore","menuBlock","block","MOUSE_DOWN","stopPropagation","pointerBlockDiv","pointerBlock","POINTER_MOVE","remove","actionBarWidth","actionBar","_createActionBar","getContainer","parentElement","offsetWidth","focusTracker","onDidBlur","actions","$","ActionBar","push","IInstantiationService","registerSingleton","weight","registerAction2","Action2","precondition","primary","secondary","run","accessor","get","mac","widgetService","createAndFillInContextMenuActions","menu","primaryGroup","groups","getActions","modifierKeyEmitter","ModifierKeyEmitter","getInstance","fillInActions","keyStatus","altKey","isWindows","isLinux","shiftKey","actionGroup","createAndFillInActionBarActions","shouldInlineSubmenu","useSeparatorsInPrimaryActions","useAlternativeActions","primaryBucket","secondaryBucket","isPrimaryAction","isArray","submenuInfo","Separator","action","MenuItemAction","alt","newLen","SubmenuAction","submenuActions","MenuEntryActionViewItem","ActionViewItem","_notificationService","_themeService","_contextMenuService","_accessibilityService","class","draggable","hoverDelegate","_wantsAltCommand","_itemClassDispose","_altKey","_menuItemAction","_action","_commandAction","onClick","preventDefault","actionRunner","_context","err","_updateItemClass","isMouseOver","updateAltState","wantsAltCommand","enabled","updateLabel","updateTooltip","updateClass","getTooltip","keybindingLabel","tooltip","altTooltip","altKeybinding","altKeybindingLabel","altTitleSection","UILabelProvider","modifierLabels","checked","toggled","isThemeIcon","iconClasses","asClassNameArray","toDisposable","backgroundImage","isDark","getColorTheme","type","asCSSUrl","combinedDisposable","onDidColorThemeChange","INotificationService","IThemeService","IContextMenuService","SubmenuEntryActionViewItem","DropdownMenuActionViewItem","dropdownOptions","menuAsChild","classNames","keybindingProvider","assertType","setBackgroundImage","DropdownWithDefaultActionViewItem","BaseActionViewItem","submenuAction","_menuService","_instaService","_storageService","defaultAction","_container","_options","_storageKey","submenu","defaultActionId","persistLastActionId","find","a","_defaultAction","_getDefaultActionKeybindingLabel","ActionRunner","_dropdown","onDidRun","update","lastAction","store","runAction","context","prepend","defaultActionKeybinding","renderKeybindingWithDefaultActionLabel","kb","setActionContext","newContext","primaryContainer","EventType","KEY_DOWN","StandardKeyboardEvent","equals","tabIndex","focus","dropdownContainer","setFocusable","fromRight","blur","focusable","IMenuService","IStorageService","SubmenuEntrySelectActionViewItem","SelectActionViewItem","contextViewService","ID","isDisabled","defaultSelectBoxStyles","ariaLabel","optionsAsChildren","select","findIndex","borderColor","selectBorder","option","createActionViewItem","instaService","SubmenuItemAction","isSelection","rememberDefaultAction","WorkbenchToolBar","ToolBar","_commandService","telemetryService","getKeyBinding","allowContextMenu","skipTelemetry","telemetrySource","_sessionDisposables","_store","publicLog2","from","setActions","_primary","_secondary","menuIds","slice","toggleActions","toggleActionsCheckedCount","extraSecondary","someAreHidden","hiddenItemStrategy","hideActions","isHidden","overflowBehavior","exemptedIds","intersection","exempted","Iterable","maxItems","size","count","has","coalesceInPlace","join","getElement","_d","_e","StandardMouseEvent","getWindow","getItemAction","primaryActions","menuKeybinding","ToggleMenuAction","createConfigureKeybindingAction","noHide","toAction","resetMenu","resetHiddenStates","showContextMenu","menuId","contextMenu","menuActionOptions","renderShortTitle","menuOptions","contextKeyService","ICommandService","ITelemetryService","MenuWorkbenchToolBar","menuService","contextMenuService","keybindingService","commandService","_onDidChangeMenuItems","onDidChangeMenuItems","createMenu","emitEventsForSubmenuChanges","updateToolbar","toolbarOptions","onDidChange","BugIndicatingError","MenuItemAction_1","isIMenuItem","command","isISubmenuItem","MenuId","identifier","_instances","TypeError","Map","CommandPalette","DebugBreakpointsContext","DebugCallStackContext","DebugConsoleContext","DebugVariablesContext","NotebookVariablesContext","DebugHoverContext","DebugWatchContext","DebugToolBar","DebugToolBarStop","EditorContext","SimpleEditorContext","EditorContent","EditorLineNumberContext","EditorContextCopy","EditorContextPeek","EditorContextShare","EditorTitle","EditorTitleRun","EditorTitleContext","EditorTitleContextShare","EmptyEditorGroup","EmptyEditorGroupContext","EditorTabsBarContext","EditorTabsBarShowTabsSubmenu","EditorTabsBarShowTabsZenModeSubmenu","EditorActionsPositionSubmenu","ExplorerContext","ExplorerContextShare","ExtensionContext","GlobalActivity","CommandCenter","CommandCenterCenter","LayoutControlMenuSubmenu","LayoutControlMenu","MenubarMainMenu","MenubarAppearanceMenu","MenubarDebugMenu","MenubarEditMenu","MenubarCopy","MenubarFileMenu","MenubarGoMenu","MenubarHelpMenu","MenubarLayoutMenu","MenubarNewBreakpointMenu","PanelAlignmentMenu","PanelPositionMenu","ActivityBarPositionMenu","MenubarPreferencesMenu","MenubarRecentMenu","MenubarSelectionMenu","MenubarShare","MenubarSwitchEditorMenu","MenubarSwitchGroupMenu","MenubarTerminalMenu","MenubarViewMenu","MenubarHomeMenu","OpenEditorsContext","OpenEditorsContextShare","ProblemsPanelContext","SCMInputBox","SCMChangesSeparator","SCMIncomingChanges","SCMIncomingChangesContext","SCMIncomingChangesSetting","SCMOutgoingChanges","SCMOutgoingChangesContext","SCMOutgoingChangesSetting","SCMIncomingChangesAllChangesContext","SCMIncomingChangesHistoryItemContext","SCMOutgoingChangesAllChangesContext","SCMOutgoingChangesHistoryItemContext","SCMChangeContext","SCMResourceContext","SCMResourceContextShare","SCMResourceFolderContext","SCMResourceGroupContext","SCMSourceControl","SCMSourceControlInline","SCMSourceControlTitle","SCMTitle","SearchContext","SearchActionMenu","StatusBarWindowIndicatorMenu","StatusBarRemoteIndicatorMenu","StickyScrollContext","TestItem","TestItemGutter","TestMessageContext","TestMessageContent","TestPeekElement","TestPeekTitle","TouchBarContext","TitleBarContext","TitleBarTitleContext","TunnelContext","TunnelPrivacy","TunnelProtocol","TunnelPortInline","TunnelTitle","TunnelLocalAddressInline","TunnelOriginInline","ViewItemContext","ViewContainerTitle","ViewContainerTitleContext","ViewTitle","ViewTitleContext","CommentEditorActions","CommentThreadTitle","CommentThreadActions","CommentThreadAdditionalActions","CommentThreadTitleContext","CommentThreadCommentContext","CommentTitle","CommentActions","CommentsViewThreadActions","InteractiveToolbar","InteractiveCellTitle","InteractiveCellDelete","InteractiveCellExecute","InteractiveInputExecute","IssueReporter","NotebookToolbar","NotebookStickyScrollContext","NotebookCellTitle","NotebookCellDelete","NotebookCellInsert","NotebookCellBetween","NotebookCellListTop","NotebookCellExecute","NotebookCellExecuteGoTo","NotebookCellExecutePrimary","NotebookDiffCellInputTitle","NotebookDiffCellMetadataTitle","NotebookDiffCellOutputsTitle","NotebookOutputToolbar","NotebookOutlineFilter","NotebookOutlineActionMenu","NotebookEditorLayoutConfigure","NotebookKernelSource","BulkEditTitle","BulkEditContext","TimelineItemContext","TimelineTitle","TimelineTitleContext","TimelineFilterSubMenu","AccountsContext","SidebarTitle","PanelTitle","AuxiliaryBarTitle","AuxiliaryBarHeader","TerminalInstanceContext","TerminalEditorInstanceContext","TerminalNewDropdownContext","TerminalTabContext","TerminalTabEmptyAreaContext","TerminalStickyScrollContext","WebviewContext","InlineCompletionsActions","InlineEditActions","NewFile","MergeInput1Toolbar","MergeInput2Toolbar","MergeBaseToolbar","MergeInputResultToolbar","InlineSuggestionToolbar","InlineEditToolbar","ChatContext","ChatCodeBlock","ChatCompareBlock","ChatMessageTitle","ChatExecute","ChatExecuteSecondary","ChatInputSide","AccessibleView","MultiDiffEditorFileToolbar","DiffEditorHunkToolbar","DiffEditorSelectionToolbar","MenuRegistryChangeEvent","for","_all","merge","events","ids","candidate","MenuRegistry","_commands","_menuItems","_onDidChangeMenu","MicrotaskEmitter","onDidChangeMenu","addCommand","delete","getCommand","getCommands","forEach","appendMenuItem","LinkedList","rm","appendMenuItems","getMenuItems","_appendImplicitItems","shortTitle","contextMatchesRules","runArgs","shouldForwardArgs","_len","_key","executeCommand","ctor","disposables","f1","CommandsRegistry","registerCommand","handler","metadata","when","KeybindingsRegistry","registerKeybindingRule","ContextKeyExpr","and","PersistedMenuHideState_1","MenuInfo_1","MenuService","storageService","_hiddenStates","PersistedMenuHideState","MenuImpl","eventDebounceDelay","_disposables","_onDidChange","_ignoreChangeEvent","_hiddenByDefaultCache","raw","_data","JSON","parse","create","onDidChangeValue","console","log","_isHiddenByDefault","commandId","setDefaultState","hidden","hiddenByDefault","state","includes","updateHidden","entries","idx","removeFastWithoutKeepingOrder","_persist","menus","stringify","MenuInfo","_id","_collectContextKeysForSubmenus","_menuGroups","_structureContextKeys","_preconditionContextKeys","_toggledContextKeys","refresh","structureContextKeys","preconditionContextKeys","toggledContextKeys","menuItems","sort","_compareMenuItems","groupName","_collectContextKeys","_fillInKbExprKeys","toggledExpression","createActionGroups","activeActions","isMenuItem","isHiddenByDefault","menuHide","createMenuHide","g","exp","keys","b","aGroup","bGroup","localeCompare","aPrio","order","bPrio","_compareTitles","aStr","bStr","hiddenStates","_menuInfo","rebuildMenuSoon","RunOnceScheduler","isStructuralChange","isEnablementChange","isToggleChange","schedule","lazyListener","DebounceEmitter","onWillAddFirstListener","startLazyListener","onDidChangeContext","affectsSome","onDidRemoveLastListener","bind","delay","states","whenValue","serialize","BrowserClipboardService_1","BrowserClipboardService","layoutService","logService","mapTextToType","findText","resources","resourcesStateHash","isSafari","isWebkitWebView","installWebKitWriteTextWorkaround","Event","runAndSubscribe","onDidRegisterWindow","_ref","window","clearResources","currentWritePromise","DeferredPromise","webKitPendingClipboardWritePromise","isSettled","navigator","clipboard","write","ClipboardItem","p","catch","async","isRejected","onDidAddContainer","_ref2","writeText","writeResources","complete","fallbackWriteText","activeDocument","getActiveDocument","activeElement","textArea","position","execCommand","HTMLElement","removeChild","readText","readFindText","writeFindText","computeResourcesStateHash","readResources","clipboardText","substring","MAX_RESOURCE_STATE_SOURCE_LENGTH","ILogService","IClipboardService","_onDidRegisterCommand","onDidRegisterCommand","idOrCommand","constraints","constraint","actualHandler","validateConstraints","commands","removeFn","unshift","ret","isEmpty","registerCommandAlias","oldId","newId","first","toValuesTree","properties","conflictReporter","root","addToValueTree","settingsTreeRoot","segments","split","last","pop","curr","s","obj","removeFromValueTree","valueTree","doRemoveFromValueTree","shift","getConfigurationValue","settingPath","defaultValue","path","current","component","accessSetting","getLanguageTagSettingPlainKey","settingKey","isFrozen","objects","ConfigurationModel","createEmptyModel","_contents","_keys","_overrides","overrideConfigurations","rawConfiguration","_rawConfiguration","rawConfigurationModels","parser","ConfigurationModelParser","parseRaw","configurationModel","previous","contents","overrides","section","inspect","overrideIdentifier","that","override","getOverrideValue","merged","identifiers","overrideContents","getContentsForOverrideIdentifer","overrideConfigurationModel","createOverrideConfigurationModel","raws","others","other","mergeContents","otherOverride","o","arrays","every","contentsForKey","overrideContentsForKey","source","types","contentsForIdentifierOnly","contentsToMerge","toJSON","addValue","updateValue","setValue","removeValue","OVERRIDE_PROPERTY_REGEX","test","overrideIdentifiersFromKey","_name","_raw","_configurationModel","_restrictedConfigurations","restricted","hasExcludedProperties","doParseRaw","configurationProperties","Registry","as","Extensions","Configuration","getConfigurationProperties","filtered","toOverrides","filterOverriddenProperties","scopes","skipRestricted","exclude","propertySchema","scope","include","overrideRaw","keyInOverrideRaw","ConfigurationInspectValue","_value","overrideIdentifiers","defaultConfiguration","policyConfiguration","applicationConfiguration","userConfiguration","localUserConfiguration","remoteUserConfiguration","workspaceConfiguration","folderConfigurationModel","memoryConfigurationModel","toInspectValue","inspectValue","userInspectValue","_userInspectValue","_defaultConfiguration","_policyConfiguration","_applicationConfiguration","_localUserConfiguration","_remoteUserConfiguration","_workspaceConfiguration","_folderConfigurations","_memoryConfiguration","_memoryConfigurationByResource","_workspaceConsolidatedConfiguration","_foldersConsolidatedConfigurations","ResourceMap","_userConfiguration","workspace","getConsolidatedConfigurationModel","memoryConfiguration","resource","consolidateConfigurationModel","getFolderConfigurationModelForResource","getConsolidatedConfigurationModelForResource","consolidateConfiguration","getWorkspaceConsolidatedConfiguration","getFolder","getFolderConsolidatedConfiguration","uri","memoryConfigurationForResource","folder","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguration","toData","defaults","policy","application","folders","parseConfigurationModel","URI","revive","model","ConfigurationChangeEvent","change","currentConfiguraiton","currentWorkspace","_marker","_markerCode1","charCodeAt","_markerCode2","affectedKeys","_previousConfiguration","_affectsConfigStr","previousConfiguration","needle","pos","code","value1","value2","allSettings","patternProperties","applicationSettings","machineSettings","machineOverridableSettings","windowSettings","resourceSettings","resourceLanguageSettingsSchemaId","contributionRegistry","JSONExtensions","JSONContribution","OVERRIDE_IDENTIFIER_PATTERN","OVERRIDE_IDENTIFIER_REGEX","RegExp","OVERRIDE_PROPERTY_PATTERN","exec","trim","distinct","configurationRegistry","_onDidSchemaChange","_onDidUpdateConfiguration","configurationDefaultsOverrides","defaultLanguageConfigurationOverridesNode","nls","configurationContributors","resourceLanguageSettingsSchema","additionalProperties","allowTrailingCommas","allowComments","policyConfigurations","excludedConfigurationProperties","registerSchema","registerOverridePropertyPatternKey","registerConfiguration","configuration","validate","registerConfigurations","configurations","doRegisterConfigurations","registerDefaultConfigurations","configurationDefaults","doRegisterDefaultConfigurations","defaultsOverrides","bucket","configurationDefaultOverride","valuesSources","plainKey","property","default","description","$ref","defaultDefaultValue","defaultValueSource","updatePropertyDefaultValue","updateSchema","doRegisterOverrideIdentifiers","registerOverrideIdentifiers","updateOverridePropertyPatternKey","validateAndRegisterProperties","extensionInfo","restrictedProperties","registerJSONConfiguration","validateProperty","hasOwnProperty","included","deprecationMessage","markdownDeprecationMessage","subNodes","allOf","node","getPolicyConfigurations","values","overrideIdentifierProperty","resourceLanguagePropertiesSchema","errorMessage","configurationdefaultOverride","defaultSource","getDefaultValue","schema","DefaultConfiguration","reload","resetConfigurationModel","getConfigurationDefaultOverrides","updateConfigurationModel","defaultOverrideValue","KEYBINDING_CONTEXT_ATTR","Context","parent","_parent","NullContext","INSTANCE","ConfigAwareContextValuesContainer","emitter","_values","TernarySearchTree","forConfigKeys","_listener","allKeys","k","ArrayContextKeyChangeEvent","changedKeys","configKey","contextKey","cachedItems","findSuperstr","deleteSuperstr","_keyPrefix","substr","configValue","ContextKey","service","_service","_defaultValue","setContext","removeContext","getContextKeyValue","SimpleContextKeyChangeEvent","allKeysContainedIn","CompositeContextKeyChangeEvent","evt","AbstractContextKeyService","myContextId","_onDidChangeContext","PauseableEmitter","input","_isDisposed","_myContextId","createKey","bufferChangeEvents","callback","pause","resume","createScoped","ScopedContextKeyService","rules","getContextValuesContainer","evaluate","myContext","getContext","hasAttribute","attr","getAttribute","parseInt","NaN","findContextAttr","ContextKeyService","configurationService","_contexts","_lastContextId","contextId","createChildContext","parentContextId","disposeContext","_parentChangeListener","_updateParentChangeListener","_domNode","extraInfo","setAttribute","thisContextValues","removeAttribute","contextValue","cloneAndChange","$mid","toString","stringifyURIs","all","seen","info","hintDidYouMean","hintDidYouForgetToOpenOrCloseQuote","hintDidYouForgetToEscapeSlash","Scanner","_input","_start","_current","_tokens","_errors","stringRe","getLexeme","isTripleEq","lexeme","illegalState","scan","_isAtEnd","_advance","_addToken","_match","offset","_quotedString","_regex","_error","_string","expected","_peek","additional","errToken","additionalInfo","lastIndex","keyword","_keywords","inEscape","inCharacterClass","ch","_regexFlags","CONSTANT_VALUES","isMacintosh","isWeb","isEdge","isFirefox","isChrome","prototype","defaultConfig","regexParsingWithErrorRecovery","errorEmptyString","hintEmptyString","errorNoInAfterNot","errorClosingParenthesis","errorUnexpectedToken","hintUnexpectedToken","errorUnexpectedEOF","hintUnexpectedEOF","Parser","_config","_scanner","_parsingErrors","_flagsGYRe","expr","_expr","peek","_parseError","_or","_and","_matchOne","right","or","_term","ContextKeyFalseExpr","ContextKeyTrueExpr","_consume","negate","ContextKeyNotExpr","_errExpectedButGot","true","false","regexLexeme","closingSlashIndex","lastIndexOf","flags","_removeFlagsGY","regexp","ContextKeyRegexExpr","lexemeReconstruction","followingToken","parenBalance","regex","serializedValue","isFalsyOrWhitespace","start","end","caseIgnoreFlag","notIn","_previous","not","notEquals","ContextKeySmallerExpr","ContextKeySmallerEqualsExpr","ContextKeyGreaterExpr","ContextKeyGreaterEqualsExpr","in","replaceAll","_check","got","ContextKeyDefinedExpr","ContextKeyEqualsExpr","ContextKeyNotEqualsExpr","ContextKeyInExpr","ContextKeyNotInExpr","ContextKeyAndExpr","ContextKeyOrExpr","deserialize","serialized","_parser","expressionsAreEqualWithConstantSubstitution","aExpr","substituteConstants","bExpr","cmp","negated","constantValue","cmp1","cmp2","trueValue","valueKey","_negated","falseValue","withFloatOrStr","n","parseFloat","isNaN","thisSource","otherSource","ContextKeyNotRegexExpr","actual","_actual","eliminateConstantsInArray","arr","newArr","len","newExpr","j","extraRedundantCheck","_normalizeArr","exprArr","hasTrue","lastElement","secondToLastElement","isFinished","resultElement","el","hasFalse","LEFT","RIGHT","left","getTerminals","_info","metaOrHide","toNegated","isEqualTo","key1","key2","implies","q","allElementsIncluded","pIndex","qIndex","IsWindowsContext","IsWebContext","InputFocusedContextKey","isIOS","isMobile","InputFocusedContext","ContextMenuHandler","notificationService","focusToReturn","lastContainer","blockDisposable","blockMouse","configure","getActiveElement","shadowRootElement","domForShadowRoot","canRelayout","anchorAlignment","anchorAxisAlignment","getMenuClassName","cursor","top","zIndex","menuDisposables","onWillRun","onActionRun","onDidActionRun","Menu","actionViewItemProvider","getActionViewItem","getActionsContext","defaultMenuStyles","onDidCancel","targetWindow","BLUR","defaultPrevented","rightButton","autoSelectFirstItem","isAncestor","logTelemetry","isCancellationError","ContextMenuService","contextMenuHandler","_contextMenuHandler","_onDidShowContextMenu","onDidShowContextMenu","_onDidHideContextMenu","ContextMenuMenuDelegate","transform","resetKeyStatus","globalContextKeyService","ContextViewHandler","contextView","ContextView","onDidLayoutContainer","shadowRoot","domPosition","setContainer","activeContainer","openContextView","close","ContextViewService","getContextViewElement","getViewElement"],"sourceRoot":""}