{"version":3,"file":"static/js/monaco-editor-vendor.80c937b5.43ea19bd.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/platform/log/common/log.js","../node_modules/monaco-editor/esm/vs/platform/markers/common/markerService.js","../node_modules/monaco-editor/esm/vs/platform/markers/common/markers.js","../node_modules/monaco-editor/esm/vs/platform/notification/common/notification.js","../node_modules/monaco-editor/esm/vs/platform/opener/browser/link.js","../node_modules/monaco-editor/esm/vs/platform/opener/common/opener.js","../node_modules/monaco-editor/esm/vs/platform/progress/common/progress.js","../node_modules/monaco-editor/esm/vs/platform/quickinput/browser/pickerQuickAccess.js","../node_modules/monaco-editor/esm/vs/platform/quickinput/browser/commandsQuickAccess.js","../node_modules/monaco-editor/esm/vs/platform/quickinput/browser/helpQuickAccess.js","../node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickAccess.js","../node_modules/monaco-editor/esm/vs/platform/quickinput/browser/quickInput.js","../node_modules/monaco-editor/esm/vs/platform/quickinput/common/quickAccess.js","../node_modules/monaco-editor/esm/vs/platform/quickinput/common/quickInput.js","../node_modules/monaco-editor/esm/vs/platform/registry/common/platform.js","../node_modules/monaco-editor/esm/vs/platform/severityIcon/common/severityIcon.js","../node_modules/monaco-editor/esm/vs/platform/storage/common/storage.js","../node_modules/monaco-editor/esm/vs/platform/telemetry/common/telemetry.js","../node_modules/monaco-editor/esm/vs/platform/theme/browser/iconsStyleSheet.js","../node_modules/monaco-editor/esm/vs/platform/theme/common/colorRegistry.js","../node_modules/monaco-editor/esm/vs/platform/theme/common/iconRegistry.js","../node_modules/monaco-editor/esm/vs/platform/theme/common/styler.js","../node_modules/monaco-editor/esm/vs/platform/theme/common/theme.js","../node_modules/monaco-editor/esm/vs/platform/theme/common/themeService.js","../node_modules/monaco-editor/esm/vs/platform/undoRedo/common/undoRedo.js","../node_modules/monaco-editor/esm/vs/platform/undoRedo/common/undoRedoService.js","../node_modules/monaco-editor/esm/vs/platform/workspace/common/workspace.js","../node_modules/monaco-editor/esm/vs/platform/workspace/common/workspaceTrust.js","../node_modules/monaco-editor/esm/vs/platform/workspaces/common/workspaces.js"],"sourcesContent":["import { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ILogService = createDecorator('logService');\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[LogLevel[\"Trace\"] = 0] = \"Trace\";\n    LogLevel[LogLevel[\"Debug\"] = 1] = \"Debug\";\n    LogLevel[LogLevel[\"Info\"] = 2] = \"Info\";\n    LogLevel[LogLevel[\"Warning\"] = 3] = \"Warning\";\n    LogLevel[LogLevel[\"Error\"] = 4] = \"Error\";\n    LogLevel[LogLevel[\"Critical\"] = 5] = \"Critical\";\n    LogLevel[LogLevel[\"Off\"] = 6] = \"Off\";\n})(LogLevel || (LogLevel = {}));\nexport const DEFAULT_LOG_LEVEL = LogLevel.Info;\nexport class AbstractLogger extends Disposable {\n    constructor() {\n        super(...arguments);\n        this.level = DEFAULT_LOG_LEVEL;\n        this._onDidChangeLogLevel = this._register(new Emitter());\n    }\n    setLevel(level) {\n        if (this.level !== level) {\n            this.level = level;\n            this._onDidChangeLogLevel.fire(this.level);\n        }\n    }\n    getLevel() {\n        return this.level;\n    }\n}\nexport class ConsoleLogger extends AbstractLogger {\n    constructor(logLevel = DEFAULT_LOG_LEVEL) {\n        super();\n        this.setLevel(logLevel);\n    }\n    trace(message, ...args) {\n        if (this.getLevel() <= LogLevel.Trace) {\n            console.log('%cTRACE', 'color: #888', message, ...args);\n        }\n    }\n    debug(message, ...args) {\n        if (this.getLevel() <= LogLevel.Debug) {\n            console.log('%cDEBUG', 'background: #eee; color: #888', message, ...args);\n        }\n    }\n    info(message, ...args) {\n        if (this.getLevel() <= LogLevel.Info) {\n            console.log('%c INFO', 'color: #33f', message, ...args);\n        }\n    }\n    error(message, ...args) {\n        if (this.getLevel() <= LogLevel.Error) {\n            console.log('%c  ERR', 'color: #f33', message, ...args);\n        }\n    }\n    dispose() {\n        // noop\n    }\n}\nexport class LogService extends Disposable {\n    constructor(logger) {\n        super();\n        this.logger = logger;\n        this._register(logger);\n    }\n    getLevel() {\n        return this.logger.getLevel();\n    }\n    trace(message, ...args) {\n        this.logger.trace(message, ...args);\n    }\n    debug(message, ...args) {\n        this.logger.debug(message, ...args);\n    }\n    info(message, ...args) {\n        this.logger.info(message, ...args);\n    }\n    error(message, ...args) {\n        this.logger.error(message, ...args);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isFalsyOrEmpty } from '../../../base/common/arrays.js';\nimport { DebounceEmitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { MarkerSeverity } from './markers.js';\nclass DoubleResourceMap {\n    constructor() {\n        this._byResource = new ResourceMap();\n        this._byOwner = new Map();\n    }\n    set(resource, owner, value) {\n        let ownerMap = this._byResource.get(resource);\n        if (!ownerMap) {\n            ownerMap = new Map();\n            this._byResource.set(resource, ownerMap);\n        }\n        ownerMap.set(owner, value);\n        let resourceMap = this._byOwner.get(owner);\n        if (!resourceMap) {\n            resourceMap = new ResourceMap();\n            this._byOwner.set(owner, resourceMap);\n        }\n        resourceMap.set(resource, value);\n    }\n    get(resource, owner) {\n        let ownerMap = this._byResource.get(resource);\n        return ownerMap === null || ownerMap === void 0 ? void 0 : ownerMap.get(owner);\n    }\n    delete(resource, owner) {\n        let removedA = false;\n        let removedB = false;\n        let ownerMap = this._byResource.get(resource);\n        if (ownerMap) {\n            removedA = ownerMap.delete(owner);\n        }\n        let resourceMap = this._byOwner.get(owner);\n        if (resourceMap) {\n            removedB = resourceMap.delete(resource);\n        }\n        if (removedA !== removedB) {\n            throw new Error('illegal state');\n        }\n        return removedA && removedB;\n    }\n    values(key) {\n        var _a, _b, _c, _d;\n        if (typeof key === 'string') {\n            return (_b = (_a = this._byOwner.get(key)) === null || _a === void 0 ? void 0 : _a.values()) !== null && _b !== void 0 ? _b : Iterable.empty();\n        }\n        if (URI.isUri(key)) {\n            return (_d = (_c = this._byResource.get(key)) === null || _c === void 0 ? void 0 : _c.values()) !== null && _d !== void 0 ? _d : Iterable.empty();\n        }\n        return Iterable.map(Iterable.concat(...this._byOwner.values()), map => map[1]);\n    }\n}\nclass MarkerStats {\n    constructor(service) {\n        this.errors = 0;\n        this.infos = 0;\n        this.warnings = 0;\n        this.unknowns = 0;\n        this._data = new ResourceMap();\n        this._service = service;\n        this._subscription = service.onMarkerChanged(this._update, this);\n    }\n    dispose() {\n        this._subscription.dispose();\n    }\n    _update(resources) {\n        for (const resource of resources) {\n            const oldStats = this._data.get(resource);\n            if (oldStats) {\n                this._substract(oldStats);\n            }\n            const newStats = this._resourceStats(resource);\n            this._add(newStats);\n            this._data.set(resource, newStats);\n        }\n    }\n    _resourceStats(resource) {\n        const result = { errors: 0, warnings: 0, infos: 0, unknowns: 0 };\n        // TODO this is a hack\n        if (resource.scheme === Schemas.inMemory || resource.scheme === Schemas.walkThrough || resource.scheme === Schemas.walkThroughSnippet) {\n            return result;\n        }\n        for (const { severity } of this._service.read({ resource })) {\n            if (severity === MarkerSeverity.Error) {\n                result.errors += 1;\n            }\n            else if (severity === MarkerSeverity.Warning) {\n                result.warnings += 1;\n            }\n            else if (severity === MarkerSeverity.Info) {\n                result.infos += 1;\n            }\n            else {\n                result.unknowns += 1;\n            }\n        }\n        return result;\n    }\n    _substract(op) {\n        this.errors -= op.errors;\n        this.warnings -= op.warnings;\n        this.infos -= op.infos;\n        this.unknowns -= op.unknowns;\n    }\n    _add(op) {\n        this.errors += op.errors;\n        this.warnings += op.warnings;\n        this.infos += op.infos;\n        this.unknowns += op.unknowns;\n    }\n}\nexport class MarkerService {\n    constructor() {\n        this._onMarkerChanged = new DebounceEmitter({\n            delay: 0,\n            merge: MarkerService._merge\n        });\n        this.onMarkerChanged = this._onMarkerChanged.event;\n        this._data = new DoubleResourceMap();\n        this._stats = new MarkerStats(this);\n    }\n    dispose() {\n        this._stats.dispose();\n        this._onMarkerChanged.dispose();\n    }\n    remove(owner, resources) {\n        for (const resource of resources || []) {\n            this.changeOne(owner, resource, []);\n        }\n    }\n    changeOne(owner, resource, markerData) {\n        if (isFalsyOrEmpty(markerData)) {\n            // remove marker for this (owner,resource)-tuple\n            const removed = this._data.delete(resource, owner);\n            if (removed) {\n                this._onMarkerChanged.fire([resource]);\n            }\n        }\n        else {\n            // insert marker for this (owner,resource)-tuple\n            const markers = [];\n            for (const data of markerData) {\n                const marker = MarkerService._toMarker(owner, resource, data);\n                if (marker) {\n                    markers.push(marker);\n                }\n            }\n            this._data.set(resource, owner, markers);\n            this._onMarkerChanged.fire([resource]);\n        }\n    }\n    static _toMarker(owner, resource, data) {\n        let { code, severity, message, source, startLineNumber, startColumn, endLineNumber, endColumn, relatedInformation, tags, } = data;\n        if (!message) {\n            return undefined;\n        }\n        // santize data\n        startLineNumber = startLineNumber > 0 ? startLineNumber : 1;\n        startColumn = startColumn > 0 ? startColumn : 1;\n        endLineNumber = endLineNumber >= startLineNumber ? endLineNumber : startLineNumber;\n        endColumn = endColumn > 0 ? endColumn : startColumn;\n        return {\n            resource,\n            owner,\n            code,\n            severity,\n            message,\n            source,\n            startLineNumber,\n            startColumn,\n            endLineNumber,\n            endColumn,\n            relatedInformation,\n            tags,\n        };\n    }\n    read(filter = Object.create(null)) {\n        let { owner, resource, severities, take } = filter;\n        if (!take || take < 0) {\n            take = -1;\n        }\n        if (owner && resource) {\n            // exactly one owner AND resource\n            const data = this._data.get(resource, owner);\n            if (!data) {\n                return [];\n            }\n            else {\n                const result = [];\n                for (const marker of data) {\n                    if (MarkerService._accept(marker, severities)) {\n                        const newLen = result.push(marker);\n                        if (take > 0 && newLen === take) {\n                            break;\n                        }\n                    }\n                }\n                return result;\n            }\n        }\n        else if (!owner && !resource) {\n            // all\n            const result = [];\n            for (let markers of this._data.values()) {\n                for (let data of markers) {\n                    if (MarkerService._accept(data, severities)) {\n                        const newLen = result.push(data);\n                        if (take > 0 && newLen === take) {\n                            return result;\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n        else {\n            // of one resource OR owner\n            const iterable = this._data.values(resource !== null && resource !== void 0 ? resource : owner);\n            const result = [];\n            for (const markers of iterable) {\n                for (const data of markers) {\n                    if (MarkerService._accept(data, severities)) {\n                        const newLen = result.push(data);\n                        if (take > 0 && newLen === take) {\n                            return result;\n                        }\n                    }\n                }\n            }\n            return result;\n        }\n    }\n    static _accept(marker, severities) {\n        return severities === undefined || (severities & marker.severity) === marker.severity;\n    }\n    // --- event debounce logic\n    static _merge(all) {\n        const set = new ResourceMap();\n        for (let array of all) {\n            for (let item of array) {\n                set.set(item, true);\n            }\n        }\n        return Array.from(set.keys());\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport Severity from '../../../base/common/severity.js';\nimport { localize } from '../../../nls.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport var MarkerSeverity;\n(function (MarkerSeverity) {\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\n})(MarkerSeverity || (MarkerSeverity = {}));\n(function (MarkerSeverity) {\n    function compare(a, b) {\n        return b - a;\n    }\n    MarkerSeverity.compare = compare;\n    const _displayStrings = Object.create(null);\n    _displayStrings[MarkerSeverity.Error] = localize('sev.error', \"Error\");\n    _displayStrings[MarkerSeverity.Warning] = localize('sev.warning', \"Warning\");\n    _displayStrings[MarkerSeverity.Info] = localize('sev.info', \"Info\");\n    function toString(a) {\n        return _displayStrings[a] || '';\n    }\n    MarkerSeverity.toString = toString;\n    function fromSeverity(severity) {\n        switch (severity) {\n            case Severity.Error: return MarkerSeverity.Error;\n            case Severity.Warning: return MarkerSeverity.Warning;\n            case Severity.Info: return MarkerSeverity.Info;\n            case Severity.Ignore: return MarkerSeverity.Hint;\n        }\n    }\n    MarkerSeverity.fromSeverity = fromSeverity;\n    function toSeverity(severity) {\n        switch (severity) {\n            case MarkerSeverity.Error: return Severity.Error;\n            case MarkerSeverity.Warning: return Severity.Warning;\n            case MarkerSeverity.Info: return Severity.Info;\n            case MarkerSeverity.Hint: return Severity.Ignore;\n        }\n    }\n    MarkerSeverity.toSeverity = toSeverity;\n})(MarkerSeverity || (MarkerSeverity = {}));\nexport var IMarkerData;\n(function (IMarkerData) {\n    const emptyString = '';\n    function makeKey(markerData) {\n        return makeKeyOptionalMessage(markerData, true);\n    }\n    IMarkerData.makeKey = makeKey;\n    function makeKeyOptionalMessage(markerData, useMessage) {\n        let result = [emptyString];\n        if (markerData.source) {\n            result.push(markerData.source.replace('¦', '\\\\¦'));\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.code) {\n            if (typeof markerData.code === 'string') {\n                result.push(markerData.code.replace('¦', '\\\\¦'));\n            }\n            else {\n                result.push(markerData.code.value.replace('¦', '\\\\¦'));\n            }\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.severity !== undefined && markerData.severity !== null) {\n            result.push(MarkerSeverity.toString(markerData.severity));\n        }\n        else {\n            result.push(emptyString);\n        }\n        // Modifed to not include the message as part of the marker key to work around\n        // https://github.com/microsoft/vscode/issues/77475\n        if (markerData.message && useMessage) {\n            result.push(markerData.message.replace('¦', '\\\\¦'));\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.startLineNumber !== undefined && markerData.startLineNumber !== null) {\n            result.push(markerData.startLineNumber.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.startColumn !== undefined && markerData.startColumn !== null) {\n            result.push(markerData.startColumn.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.endLineNumber !== undefined && markerData.endLineNumber !== null) {\n            result.push(markerData.endLineNumber.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        if (markerData.endColumn !== undefined && markerData.endColumn !== null) {\n            result.push(markerData.endColumn.toString());\n        }\n        else {\n            result.push(emptyString);\n        }\n        result.push(emptyString);\n        return result.join('¦');\n    }\n    IMarkerData.makeKeyOptionalMessage = makeKeyOptionalMessage;\n})(IMarkerData || (IMarkerData = {}));\nexport const IMarkerService = createDecorator('markerService');\n","import BaseSeverity from '../../../base/common/severity.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport var Severity = BaseSeverity;\nexport const INotificationService = createDecorator('notificationService');\nexport class NoOpNotification {\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { $, append, EventHelper } from '../../../base/browser/dom.js';\nimport { DomEmitter } from '../../../base/browser/event.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { EventType as TouchEventType, Gesture } from '../../../base/browser/touch.js';\nimport { Event } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { IOpenerService } from '../common/opener.js';\nimport { textLinkActiveForeground, textLinkForeground } from '../../theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../theme/common/themeService.js';\nlet Link = class Link extends Disposable {\n    constructor(container, _link, options = {}, openerService) {\n        var _a;\n        super();\n        this._link = _link;\n        this._enabled = true;\n        this.el = append(container, $('a.monaco-link', {\n            tabIndex: (_a = _link.tabIndex) !== null && _a !== void 0 ? _a : 0,\n            href: _link.href,\n            title: _link.title\n        }, _link.label));\n        this.el.setAttribute('role', 'button');\n        const onClickEmitter = this._register(new DomEmitter(this.el, 'click'));\n        const onKeyPress = this._register(new DomEmitter(this.el, 'keypress'));\n        const onEnterPress = Event.chain(onKeyPress.event)\n            .map(e => new StandardKeyboardEvent(e))\n            .filter(e => e.keyCode === 3 /* Enter */)\n            .event;\n        const onTap = this._register(new DomEmitter(this.el, TouchEventType.Tap)).event;\n        this._register(Gesture.addTarget(this.el));\n        const onOpen = Event.any(onClickEmitter.event, onEnterPress, onTap);\n        this._register(onOpen(e => {\n            if (!this.enabled) {\n                return;\n            }\n            EventHelper.stop(e, true);\n            if (options === null || options === void 0 ? void 0 : options.opener) {\n                options.opener(this._link.href);\n            }\n            else {\n                openerService.open(this._link.href, { allowCommands: true });\n            }\n        }));\n        this.enabled = true;\n    }\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(enabled) {\n        if (enabled) {\n            this.el.setAttribute('aria-disabled', 'false');\n            this.el.tabIndex = 0;\n            this.el.style.pointerEvents = 'auto';\n            this.el.style.opacity = '1';\n            this.el.style.cursor = 'pointer';\n            this._enabled = false;\n        }\n        else {\n            this.el.setAttribute('aria-disabled', 'true');\n            this.el.tabIndex = -1;\n            this.el.style.pointerEvents = 'none';\n            this.el.style.opacity = '0.4';\n            this.el.style.cursor = 'default';\n            this._enabled = true;\n        }\n        this._enabled = enabled;\n    }\n};\nLink = __decorate([\n    __param(3, IOpenerService)\n], Link);\nexport { Link };\nregisterThemingParticipant((theme, collector) => {\n    const textLinkForegroundColor = theme.getColor(textLinkForeground);\n    if (textLinkForegroundColor) {\n        collector.addRule(`.monaco-link { color: ${textLinkForegroundColor}; }`);\n    }\n    const textLinkActiveForegroundColor = theme.getColor(textLinkActiveForeground);\n    if (textLinkActiveForegroundColor) {\n        collector.addRule(`.monaco-link:hover { color: ${textLinkActiveForegroundColor}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { equalsIgnoreCase, startsWithIgnoreCase } from '../../../base/common/strings.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IOpenerService = createDecorator('openerService');\nexport const NullOpenerService = Object.freeze({\n    _serviceBrand: undefined,\n    registerOpener() { return Disposable.None; },\n    registerValidator() { return Disposable.None; },\n    registerExternalUriResolver() { return Disposable.None; },\n    setDefaultExternalOpener() { },\n    registerExternalOpener() { return Disposable.None; },\n    open() {\n        return __awaiter(this, void 0, void 0, function* () { return false; });\n    },\n    resolveExternalUri(uri) {\n        return __awaiter(this, void 0, void 0, function* () { return { resolved: uri, dispose() { } }; });\n    },\n});\nexport function matchesScheme(target, scheme) {\n    if (URI.isUri(target)) {\n        return equalsIgnoreCase(target.scheme, scheme);\n    }\n    else {\n        return startsWithIgnoreCase(target, scheme + ':');\n    }\n}\nexport function matchesSomeScheme(target, ...schemes) {\n    return schemes.some(scheme => matchesScheme(target, scheme));\n}\nexport function selectionFragment(target) {\n    let selection = undefined;\n    const match = /^L?(\\d+)(?:,(\\d+))?/.exec(target.fragment);\n    if (match) {\n        // support file:///some/file.js#73,84\n        // support file:///some/file.js#L73\n        selection = {\n            startLineNumber: parseInt(match[1]),\n            startColumn: match[2] ? parseInt(match[2]) : 1\n        };\n    }\n    return selection;\n}\n","import { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const emptyProgressRunner = Object.freeze({\n    total() { },\n    worked() { },\n    done() { }\n});\nexport class Progress {\n    constructor(callback) {\n        this.callback = callback;\n    }\n    report(item) {\n        this._value = item;\n        this.callback(this._value);\n    }\n}\nProgress.None = Object.freeze({ report() { } });\nexport const IEditorProgressService = createDecorator('editorProgressService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { timeout } from '../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Disposable, DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\nexport var TriggerAction;\n(function (TriggerAction) {\n    /**\n     * Do nothing after the button was clicked.\n     */\n    TriggerAction[TriggerAction[\"NO_ACTION\"] = 0] = \"NO_ACTION\";\n    /**\n     * Close the picker.\n     */\n    TriggerAction[TriggerAction[\"CLOSE_PICKER\"] = 1] = \"CLOSE_PICKER\";\n    /**\n     * Update the results of the picker.\n     */\n    TriggerAction[TriggerAction[\"REFRESH_PICKER\"] = 2] = \"REFRESH_PICKER\";\n    /**\n     * Remove the item from the picker.\n     */\n    TriggerAction[TriggerAction[\"REMOVE_ITEM\"] = 3] = \"REMOVE_ITEM\";\n})(TriggerAction || (TriggerAction = {}));\nfunction isPicksWithActive(obj) {\n    const candidate = obj;\n    return Array.isArray(candidate.items);\n}\nfunction isFastAndSlowPicks(obj) {\n    const candidate = obj;\n    return !!candidate.picks && candidate.additionalPicks instanceof Promise;\n}\nexport class PickerQuickAccessProvider extends Disposable {\n    constructor(prefix, options) {\n        super();\n        this.prefix = prefix;\n        this.options = options;\n    }\n    provide(picker, token) {\n        var _a;\n        const disposables = new DisposableStore();\n        // Apply options if any\n        picker.canAcceptInBackground = !!((_a = this.options) === null || _a === void 0 ? void 0 : _a.canAcceptInBackground);\n        // Disable filtering & sorting, we control the results\n        picker.matchOnLabel = picker.matchOnDescription = picker.matchOnDetail = picker.sortByLabel = false;\n        // Set initial picks and update on type\n        let picksCts = undefined;\n        const picksDisposable = disposables.add(new MutableDisposable());\n        const updatePickerItems = () => __awaiter(this, void 0, void 0, function* () {\n            const picksDisposables = picksDisposable.value = new DisposableStore();\n            // Cancel any previous ask for picks and busy\n            picksCts === null || picksCts === void 0 ? void 0 : picksCts.dispose(true);\n            picker.busy = false;\n            // Create new cancellation source for this run\n            picksCts = new CancellationTokenSource(token);\n            // Collect picks and support both long running and short or combined\n            const picksToken = picksCts.token;\n            const picksFilter = picker.value.substr(this.prefix.length).trim();\n            const providedPicks = this._getPicks(picksFilter, picksDisposables, picksToken);\n            const applyPicks = (picks, skipEmpty) => {\n                var _a;\n                let items;\n                let activeItem = undefined;\n                if (isPicksWithActive(picks)) {\n                    items = picks.items;\n                    activeItem = picks.active;\n                }\n                else {\n                    items = picks;\n                }\n                if (items.length === 0) {\n                    if (skipEmpty) {\n                        return false;\n                    }\n                    if (picksFilter.length > 0 && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.noResultsPick)) {\n                        items = [this.options.noResultsPick];\n                    }\n                }\n                picker.items = items;\n                if (activeItem) {\n                    picker.activeItems = [activeItem];\n                }\n                return true;\n            };\n            // No Picks\n            if (providedPicks === null) {\n                // Ignore\n            }\n            // Fast and Slow Picks\n            else if (isFastAndSlowPicks(providedPicks)) {\n                let fastPicksApplied = false;\n                let slowPicksApplied = false;\n                yield Promise.all([\n                    // Fast Picks: to reduce amount of flicker, we race against\n                    // the slow picks over 500ms and then set the fast picks.\n                    // If the slow picks are faster, we reduce the flicker by\n                    // only setting the items once.\n                    (() => __awaiter(this, void 0, void 0, function* () {\n                        yield timeout(PickerQuickAccessProvider.FAST_PICKS_RACE_DELAY);\n                        if (picksToken.isCancellationRequested) {\n                            return;\n                        }\n                        if (!slowPicksApplied) {\n                            fastPicksApplied = applyPicks(providedPicks.picks, true /* skip over empty to reduce flicker */);\n                        }\n                    }))(),\n                    // Slow Picks: we await the slow picks and then set them at\n                    // once together with the fast picks, but only if we actually\n                    // have additional results.\n                    (() => __awaiter(this, void 0, void 0, function* () {\n                        picker.busy = true;\n                        try {\n                            const awaitedAdditionalPicks = yield providedPicks.additionalPicks;\n                            if (picksToken.isCancellationRequested) {\n                                return;\n                            }\n                            let picks;\n                            let activePick = undefined;\n                            if (isPicksWithActive(providedPicks.picks)) {\n                                picks = providedPicks.picks.items;\n                                activePick = providedPicks.picks.active;\n                            }\n                            else {\n                                picks = providedPicks.picks;\n                            }\n                            let additionalPicks;\n                            let additionalActivePick = undefined;\n                            if (isPicksWithActive(awaitedAdditionalPicks)) {\n                                additionalPicks = awaitedAdditionalPicks.items;\n                                additionalActivePick = awaitedAdditionalPicks.active;\n                            }\n                            else {\n                                additionalPicks = awaitedAdditionalPicks;\n                            }\n                            if (additionalPicks.length > 0 || !fastPicksApplied) {\n                                // If we do not have any activePick or additionalActivePick\n                                // we try to preserve the currently active pick from the\n                                // fast results. This fixes an issue where the user might\n                                // have made a pick active before the additional results\n                                // kick in.\n                                // See https://github.com/microsoft/vscode/issues/102480\n                                let fallbackActivePick = undefined;\n                                if (!activePick && !additionalActivePick) {\n                                    const fallbackActivePickCandidate = picker.activeItems[0];\n                                    if (fallbackActivePickCandidate && picks.indexOf(fallbackActivePickCandidate) !== -1) {\n                                        fallbackActivePick = fallbackActivePickCandidate;\n                                    }\n                                }\n                                applyPicks({\n                                    items: [...picks, ...additionalPicks],\n                                    active: activePick || additionalActivePick || fallbackActivePick\n                                });\n                            }\n                        }\n                        finally {\n                            if (!picksToken.isCancellationRequested) {\n                                picker.busy = false;\n                            }\n                            slowPicksApplied = true;\n                        }\n                    }))()\n                ]);\n            }\n            // Fast Picks\n            else if (!(providedPicks instanceof Promise)) {\n                applyPicks(providedPicks);\n            }\n            // Slow Picks\n            else {\n                picker.busy = true;\n                try {\n                    const awaitedPicks = yield providedPicks;\n                    if (picksToken.isCancellationRequested) {\n                        return;\n                    }\n                    applyPicks(awaitedPicks);\n                }\n                finally {\n                    if (!picksToken.isCancellationRequested) {\n                        picker.busy = false;\n                    }\n                }\n            }\n        });\n        disposables.add(picker.onDidChangeValue(() => updatePickerItems()));\n        updatePickerItems();\n        // Accept the pick on accept and hide picker\n        disposables.add(picker.onDidAccept(event => {\n            const [item] = picker.selectedItems;\n            if (typeof (item === null || item === void 0 ? void 0 : item.accept) === 'function') {\n                if (!event.inBackground) {\n                    picker.hide(); // hide picker unless we accept in background\n                }\n                item.accept(picker.keyMods, event);\n            }\n        }));\n        // Trigger the pick with button index if button triggered\n        disposables.add(picker.onDidTriggerItemButton(({ button, item }) => __awaiter(this, void 0, void 0, function* () {\n            var _b, _c;\n            if (typeof item.trigger === 'function') {\n                const buttonIndex = (_c = (_b = item.buttons) === null || _b === void 0 ? void 0 : _b.indexOf(button)) !== null && _c !== void 0 ? _c : -1;\n                if (buttonIndex >= 0) {\n                    const result = item.trigger(buttonIndex, picker.keyMods);\n                    const action = (typeof result === 'number') ? result : yield result;\n                    if (token.isCancellationRequested) {\n                        return;\n                    }\n                    switch (action) {\n                        case TriggerAction.NO_ACTION:\n                            break;\n                        case TriggerAction.CLOSE_PICKER:\n                            picker.hide();\n                            break;\n                        case TriggerAction.REFRESH_PICKER:\n                            updatePickerItems();\n                            break;\n                        case TriggerAction.REMOVE_ITEM: {\n                            const index = picker.items.indexOf(item);\n                            if (index !== -1) {\n                                const items = picker.items.slice();\n                                const removed = items.splice(index, 1);\n                                const activeItems = picker.activeItems.filter(activeItem => activeItem !== removed[0]);\n                                const keepScrollPositionBefore = picker.keepScrollPosition;\n                                picker.keepScrollPosition = true;\n                                picker.items = items;\n                                if (activeItems) {\n                                    picker.activeItems = activeItems;\n                                }\n                                picker.keepScrollPosition = keepScrollPositionBefore;\n                            }\n                            break;\n                        }\n                    }\n                }\n            }\n        })));\n        return disposables;\n    }\n}\nPickerQuickAccessProvider.FAST_PICKS_RACE_DELAY = 200; // timeout before we accept fast results before slow results are present\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { toErrorMessage } from '../../../base/common/errorMessage.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { matchesContiguousSubString, matchesPrefix, matchesWords, or } from '../../../base/common/filters.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../base/common/map.js';\nimport Severity from '../../../base/common/severity.js';\nimport { withNullAsUndefined } from '../../../base/common/types.js';\nimport { localize } from '../../../nls.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IDialogService } from '../../dialogs/common/dialogs.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { PickerQuickAccessProvider } from './pickerQuickAccess.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\nlet AbstractCommandsQuickAccessProvider = class AbstractCommandsQuickAccessProvider extends PickerQuickAccessProvider {\n    constructor(options, instantiationService, keybindingService, commandService, telemetryService, dialogService) {\n        super(AbstractCommandsQuickAccessProvider.PREFIX, options);\n        this.instantiationService = instantiationService;\n        this.keybindingService = keybindingService;\n        this.commandService = commandService;\n        this.telemetryService = telemetryService;\n        this.dialogService = dialogService;\n        this.commandsHistory = this._register(this.instantiationService.createInstance(CommandsHistory));\n        this.options = options;\n    }\n    _getPicks(filter, disposables, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // Ask subclass for all command picks\n            const allCommandPicks = yield this.getCommandPicks(disposables, token);\n            if (token.isCancellationRequested) {\n                return [];\n            }\n            // Filter\n            const filteredCommandPicks = [];\n            for (const commandPick of allCommandPicks) {\n                const labelHighlights = withNullAsUndefined(AbstractCommandsQuickAccessProvider.WORD_FILTER(filter, commandPick.label));\n                const aliasHighlights = commandPick.commandAlias ? withNullAsUndefined(AbstractCommandsQuickAccessProvider.WORD_FILTER(filter, commandPick.commandAlias)) : undefined;\n                // Add if matching in label or alias\n                if (labelHighlights || aliasHighlights) {\n                    commandPick.highlights = {\n                        label: labelHighlights,\n                        detail: this.options.showAlias ? aliasHighlights : undefined\n                    };\n                    filteredCommandPicks.push(commandPick);\n                }\n                // Also add if we have a 100% command ID match\n                else if (filter === commandPick.commandId) {\n                    filteredCommandPicks.push(commandPick);\n                }\n            }\n            // Add description to commands that have duplicate labels\n            const mapLabelToCommand = new Map();\n            for (const commandPick of filteredCommandPicks) {\n                const existingCommandForLabel = mapLabelToCommand.get(commandPick.label);\n                if (existingCommandForLabel) {\n                    commandPick.description = commandPick.commandId;\n                    existingCommandForLabel.description = existingCommandForLabel.commandId;\n                }\n                else {\n                    mapLabelToCommand.set(commandPick.label, commandPick);\n                }\n            }\n            // Sort by MRU order and fallback to name otherwise\n            filteredCommandPicks.sort((commandPickA, commandPickB) => {\n                const commandACounter = this.commandsHistory.peek(commandPickA.commandId);\n                const commandBCounter = this.commandsHistory.peek(commandPickB.commandId);\n                if (commandACounter && commandBCounter) {\n                    return commandACounter > commandBCounter ? -1 : 1; // use more recently used command before older\n                }\n                if (commandACounter) {\n                    return -1; // first command was used, so it wins over the non used one\n                }\n                if (commandBCounter) {\n                    return 1; // other command was used so it wins over the command\n                }\n                // both commands were never used, so we sort by name\n                return commandPickA.label.localeCompare(commandPickB.label);\n            });\n            const commandPicks = [];\n            let addSeparator = false;\n            for (let i = 0; i < filteredCommandPicks.length; i++) {\n                const commandPick = filteredCommandPicks[i];\n                const keybinding = this.keybindingService.lookupKeybinding(commandPick.commandId);\n                const ariaLabel = keybinding ?\n                    localize('commandPickAriaLabelWithKeybinding', \"{0}, {1}\", commandPick.label, keybinding.getAriaLabel()) :\n                    commandPick.label;\n                // Separator: recently used\n                if (i === 0 && this.commandsHistory.peek(commandPick.commandId)) {\n                    commandPicks.push({ type: 'separator', label: localize('recentlyUsed', \"recently used\") });\n                    addSeparator = true;\n                }\n                // Separator: other commands\n                if (i !== 0 && addSeparator && !this.commandsHistory.peek(commandPick.commandId)) {\n                    commandPicks.push({ type: 'separator', label: localize('morecCommands', \"other commands\") });\n                    addSeparator = false; // only once\n                }\n                // Command\n                commandPicks.push(Object.assign(Object.assign({}, commandPick), { ariaLabel, detail: this.options.showAlias && commandPick.commandAlias !== commandPick.label ? commandPick.commandAlias : undefined, keybinding, accept: () => __awaiter(this, void 0, void 0, function* () {\n                        // Add to history\n                        this.commandsHistory.push(commandPick.commandId);\n                        // Telementry\n                        this.telemetryService.publicLog2('workbenchActionExecuted', {\n                            id: commandPick.commandId,\n                            from: 'quick open'\n                        });\n                        // Run\n                        try {\n                            yield this.commandService.executeCommand(commandPick.commandId);\n                        }\n                        catch (error) {\n                            if (!isCancellationError(error)) {\n                                this.dialogService.show(Severity.Error, localize('canNotRun', \"Command '{0}' resulted in an error ({1})\", commandPick.label, toErrorMessage(error)));\n                            }\n                        }\n                    }) }));\n            }\n            return commandPicks;\n        });\n    }\n};\nAbstractCommandsQuickAccessProvider.PREFIX = '>';\nAbstractCommandsQuickAccessProvider.WORD_FILTER = or(matchesPrefix, matchesWords, matchesContiguousSubString);\nAbstractCommandsQuickAccessProvider = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IKeybindingService),\n    __param(3, ICommandService),\n    __param(4, ITelemetryService),\n    __param(5, IDialogService)\n], AbstractCommandsQuickAccessProvider);\nexport { AbstractCommandsQuickAccessProvider };\nlet CommandsHistory = class CommandsHistory extends Disposable {\n    constructor(storageService, configurationService) {\n        super();\n        this.storageService = storageService;\n        this.configurationService = configurationService;\n        this.configuredCommandsHistoryLength = 0;\n        this.updateConfiguration();\n        this.load();\n        this.registerListeners();\n    }\n    registerListeners() {\n        this._register(this.configurationService.onDidChangeConfiguration(() => this.updateConfiguration()));\n    }\n    updateConfiguration() {\n        this.configuredCommandsHistoryLength = CommandsHistory.getConfiguredCommandHistoryLength(this.configurationService);\n        if (CommandsHistory.cache && CommandsHistory.cache.limit !== this.configuredCommandsHistoryLength) {\n            CommandsHistory.cache.limit = this.configuredCommandsHistoryLength;\n            CommandsHistory.saveState(this.storageService);\n        }\n    }\n    load() {\n        const raw = this.storageService.get(CommandsHistory.PREF_KEY_CACHE, 0 /* GLOBAL */);\n        let serializedCache;\n        if (raw) {\n            try {\n                serializedCache = JSON.parse(raw);\n            }\n            catch (error) {\n                // invalid data\n            }\n        }\n        const cache = CommandsHistory.cache = new LRUCache(this.configuredCommandsHistoryLength, 1);\n        if (serializedCache) {\n            let entries;\n            if (serializedCache.usesLRU) {\n                entries = serializedCache.entries;\n            }\n            else {\n                entries = serializedCache.entries.sort((a, b) => a.value - b.value);\n            }\n            entries.forEach(entry => cache.set(entry.key, entry.value));\n        }\n        CommandsHistory.counter = this.storageService.getNumber(CommandsHistory.PREF_KEY_COUNTER, 0 /* GLOBAL */, CommandsHistory.counter);\n    }\n    push(commandId) {\n        if (!CommandsHistory.cache) {\n            return;\n        }\n        CommandsHistory.cache.set(commandId, CommandsHistory.counter++); // set counter to command\n        CommandsHistory.saveState(this.storageService);\n    }\n    peek(commandId) {\n        var _a;\n        return (_a = CommandsHistory.cache) === null || _a === void 0 ? void 0 : _a.peek(commandId);\n    }\n    static saveState(storageService) {\n        if (!CommandsHistory.cache) {\n            return;\n        }\n        const serializedCache = { usesLRU: true, entries: [] };\n        CommandsHistory.cache.forEach((value, key) => serializedCache.entries.push({ key, value }));\n        storageService.store(CommandsHistory.PREF_KEY_CACHE, JSON.stringify(serializedCache), 0 /* GLOBAL */, 0 /* USER */);\n        storageService.store(CommandsHistory.PREF_KEY_COUNTER, CommandsHistory.counter, 0 /* GLOBAL */, 0 /* USER */);\n    }\n    static getConfiguredCommandHistoryLength(configurationService) {\n        var _a, _b;\n        const config = configurationService.getValue();\n        const configuredCommandHistoryLength = (_b = (_a = config.workbench) === null || _a === void 0 ? void 0 : _a.commandPalette) === null || _b === void 0 ? void 0 : _b.history;\n        if (typeof configuredCommandHistoryLength === 'number') {\n            return configuredCommandHistoryLength;\n        }\n        return CommandsHistory.DEFAULT_COMMANDS_HISTORY_LENGTH;\n    }\n};\nCommandsHistory.DEFAULT_COMMANDS_HISTORY_LENGTH = 50;\nCommandsHistory.PREF_KEY_CACHE = 'commandPalette.mru.cache';\nCommandsHistory.PREF_KEY_COUNTER = 'commandPalette.mru.counter';\nCommandsHistory.counter = 1;\nCommandsHistory = __decorate([\n    __param(0, IStorageService),\n    __param(1, IConfigurationService)\n], CommandsHistory);\nexport { CommandsHistory };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { localize } from '../../../nls.js';\nimport { Extensions } from '../common/quickAccess.js';\nimport { IQuickInputService } from '../common/quickInput.js';\nimport { Registry } from '../../registry/common/platform.js';\nlet HelpQuickAccessProvider = class HelpQuickAccessProvider {\n    constructor(quickInputService) {\n        this.quickInputService = quickInputService;\n        this.registry = Registry.as(Extensions.Quickaccess);\n    }\n    provide(picker) {\n        const disposables = new DisposableStore();\n        // Open a picker with the selected value if picked\n        disposables.add(picker.onDidAccept(() => {\n            const [item] = picker.selectedItems;\n            if (item) {\n                this.quickInputService.quickAccess.show(item.prefix, { preserveValue: true });\n            }\n        }));\n        // Also open a picker when we detect the user typed the exact\n        // name of a provider (e.g. `?term` for terminals)\n        disposables.add(picker.onDidChangeValue(value => {\n            const providerDescriptor = this.registry.getQuickAccessProvider(value.substr(HelpQuickAccessProvider.PREFIX.length));\n            if (providerDescriptor && providerDescriptor.prefix && providerDescriptor.prefix !== HelpQuickAccessProvider.PREFIX) {\n                this.quickInputService.quickAccess.show(providerDescriptor.prefix, { preserveValue: true });\n            }\n        }));\n        // Fill in all providers separated by editor/global scope\n        const { editorProviders, globalProviders } = this.getQuickAccessProviders();\n        picker.items = editorProviders.length === 0 || globalProviders.length === 0 ?\n            // Without groups\n            [\n                ...(editorProviders.length === 0 ? globalProviders : editorProviders)\n            ] :\n            // With groups\n            [\n                { label: localize('globalCommands', \"global commands\"), type: 'separator' },\n                ...globalProviders,\n                { label: localize('editorCommands', \"editor commands\"), type: 'separator' },\n                ...editorProviders\n            ];\n        return disposables;\n    }\n    getQuickAccessProviders() {\n        const globalProviders = [];\n        const editorProviders = [];\n        for (const provider of this.registry.getQuickAccessProviders().sort((providerA, providerB) => providerA.prefix.localeCompare(providerB.prefix))) {\n            if (provider.prefix === HelpQuickAccessProvider.PREFIX) {\n                continue; // exclude help which is already active\n            }\n            for (const helpEntry of provider.helpEntries) {\n                const prefix = helpEntry.prefix || provider.prefix;\n                const label = prefix || '\\u2026' /* ... */;\n                (helpEntry.needsEditor ? editorProviders : globalProviders).push({\n                    prefix,\n                    label,\n                    ariaLabel: localize('helpPickAriaLabel', \"{0}, {1}\", label, helpEntry.description),\n                    description: helpEntry.description\n                });\n            }\n        }\n        return { editorProviders, globalProviders };\n    }\n};\nHelpQuickAccessProvider.PREFIX = '?';\nHelpQuickAccessProvider = __decorate([\n    __param(0, IQuickInputService)\n], HelpQuickAccessProvider);\nexport { HelpQuickAccessProvider };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { DeferredPromise } from '../../../base/common/async.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { once } from '../../../base/common/functional.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { DefaultQuickAccessFilterValue, Extensions } from '../common/quickAccess.js';\nimport { IQuickInputService, ItemActivation } from '../common/quickInput.js';\nimport { Registry } from '../../registry/common/platform.js';\nlet QuickAccessController = class QuickAccessController extends Disposable {\n    constructor(quickInputService, instantiationService) {\n        super();\n        this.quickInputService = quickInputService;\n        this.instantiationService = instantiationService;\n        this.registry = Registry.as(Extensions.Quickaccess);\n        this.mapProviderToDescriptor = new Map();\n        this.lastAcceptedPickerValues = new Map();\n        this.visibleQuickAccess = undefined;\n    }\n    show(value = '', options) {\n        this.doShowOrPick(value, false, options);\n    }\n    doShowOrPick(value, pick, options) {\n        var _a;\n        // Find provider for the value to show\n        const [provider, descriptor] = this.getOrInstantiateProvider(value);\n        // Return early if quick access is already showing on that same prefix\n        const visibleQuickAccess = this.visibleQuickAccess;\n        const visibleDescriptor = visibleQuickAccess === null || visibleQuickAccess === void 0 ? void 0 : visibleQuickAccess.descriptor;\n        if (visibleQuickAccess && descriptor && visibleDescriptor === descriptor) {\n            // Apply value only if it is more specific than the prefix\n            // from the provider and we are not instructed to preserve\n            if (value !== descriptor.prefix && !(options === null || options === void 0 ? void 0 : options.preserveValue)) {\n                visibleQuickAccess.picker.value = value;\n            }\n            // Always adjust selection\n            this.adjustValueSelection(visibleQuickAccess.picker, descriptor, options);\n            return;\n        }\n        // Rewrite the filter value based on certain rules unless disabled\n        if (descriptor && !(options === null || options === void 0 ? void 0 : options.preserveValue)) {\n            let newValue = undefined;\n            // If we have a visible provider with a value, take it's filter value but\n            // rewrite to new provider prefix in case they differ\n            if (visibleQuickAccess && visibleDescriptor && visibleDescriptor !== descriptor) {\n                const newValueCandidateWithoutPrefix = visibleQuickAccess.value.substr(visibleDescriptor.prefix.length);\n                if (newValueCandidateWithoutPrefix) {\n                    newValue = `${descriptor.prefix}${newValueCandidateWithoutPrefix}`;\n                }\n            }\n            // Otherwise, take a default value as instructed\n            if (!newValue) {\n                const defaultFilterValue = provider === null || provider === void 0 ? void 0 : provider.defaultFilterValue;\n                if (defaultFilterValue === DefaultQuickAccessFilterValue.LAST) {\n                    newValue = this.lastAcceptedPickerValues.get(descriptor);\n                }\n                else if (typeof defaultFilterValue === 'string') {\n                    newValue = `${descriptor.prefix}${defaultFilterValue}`;\n                }\n            }\n            if (typeof newValue === 'string') {\n                value = newValue;\n            }\n        }\n        // Create a picker for the provider to use with the initial value\n        // and adjust the filtering to exclude the prefix from filtering\n        const disposables = new DisposableStore();\n        const picker = disposables.add(this.quickInputService.createQuickPick());\n        picker.value = value;\n        this.adjustValueSelection(picker, descriptor, options);\n        picker.placeholder = descriptor === null || descriptor === void 0 ? void 0 : descriptor.placeholder;\n        picker.quickNavigate = options === null || options === void 0 ? void 0 : options.quickNavigateConfiguration;\n        picker.hideInput = !!picker.quickNavigate && !visibleQuickAccess; // only hide input if there was no picker opened already\n        if (typeof (options === null || options === void 0 ? void 0 : options.itemActivation) === 'number' || (options === null || options === void 0 ? void 0 : options.quickNavigateConfiguration)) {\n            picker.itemActivation = (_a = options === null || options === void 0 ? void 0 : options.itemActivation) !== null && _a !== void 0 ? _a : ItemActivation.SECOND /* quick nav is always second */;\n        }\n        picker.contextKey = descriptor === null || descriptor === void 0 ? void 0 : descriptor.contextKey;\n        picker.filterValue = (value) => value.substring(descriptor ? descriptor.prefix.length : 0);\n        if (descriptor === null || descriptor === void 0 ? void 0 : descriptor.placeholder) {\n            picker.ariaLabel = descriptor === null || descriptor === void 0 ? void 0 : descriptor.placeholder;\n        }\n        // Pick mode: setup a promise that can be resolved\n        // with the selected items and prevent execution\n        let pickPromise = undefined;\n        if (pick) {\n            pickPromise = new DeferredPromise();\n            disposables.add(once(picker.onWillAccept)(e => {\n                e.veto();\n                picker.hide();\n            }));\n        }\n        // Register listeners\n        disposables.add(this.registerPickerListeners(picker, provider, descriptor, value));\n        // Ask provider to fill the picker as needed if we have one\n        // and pass over a cancellation token that will indicate when\n        // the picker is hiding without a pick being made.\n        const cts = disposables.add(new CancellationTokenSource());\n        if (provider) {\n            disposables.add(provider.provide(picker, cts.token));\n        }\n        // Finally, trigger disposal and cancellation when the picker\n        // hides depending on items selected or not.\n        once(picker.onDidHide)(() => {\n            if (picker.selectedItems.length === 0) {\n                cts.cancel();\n            }\n            // Start to dispose once picker hides\n            disposables.dispose();\n            // Resolve pick promise with selected items\n            pickPromise === null || pickPromise === void 0 ? void 0 : pickPromise.complete(picker.selectedItems.slice(0));\n        });\n        // Finally, show the picker. This is important because a provider\n        // may not call this and then our disposables would leak that rely\n        // on the onDidHide event.\n        picker.show();\n        // Pick mode: return with promise\n        if (pick) {\n            return pickPromise === null || pickPromise === void 0 ? void 0 : pickPromise.p;\n        }\n    }\n    adjustValueSelection(picker, descriptor, options) {\n        var _a;\n        let valueSelection;\n        // Preserve: just always put the cursor at the end\n        if (options === null || options === void 0 ? void 0 : options.preserveValue) {\n            valueSelection = [picker.value.length, picker.value.length];\n        }\n        // Otherwise: select the value up until the prefix\n        else {\n            valueSelection = [(_a = descriptor === null || descriptor === void 0 ? void 0 : descriptor.prefix.length) !== null && _a !== void 0 ? _a : 0, picker.value.length];\n        }\n        picker.valueSelection = valueSelection;\n    }\n    registerPickerListeners(picker, provider, descriptor, value) {\n        const disposables = new DisposableStore();\n        // Remember as last visible picker and clean up once picker get's disposed\n        const visibleQuickAccess = this.visibleQuickAccess = { picker, descriptor, value };\n        disposables.add(toDisposable(() => {\n            if (visibleQuickAccess === this.visibleQuickAccess) {\n                this.visibleQuickAccess = undefined;\n            }\n        }));\n        // Whenever the value changes, check if the provider has\n        // changed and if so - re-create the picker from the beginning\n        disposables.add(picker.onDidChangeValue(value => {\n            const [providerForValue] = this.getOrInstantiateProvider(value);\n            if (providerForValue !== provider) {\n                this.show(value, { preserveValue: true } /* do not rewrite value from user typing! */);\n            }\n            else {\n                visibleQuickAccess.value = value; // remember the value in our visible one\n            }\n        }));\n        // Remember picker input for future use when accepting\n        if (descriptor) {\n            disposables.add(picker.onDidAccept(() => {\n                this.lastAcceptedPickerValues.set(descriptor, picker.value);\n            }));\n        }\n        return disposables;\n    }\n    getOrInstantiateProvider(value) {\n        const providerDescriptor = this.registry.getQuickAccessProvider(value);\n        if (!providerDescriptor) {\n            return [undefined, undefined];\n        }\n        let provider = this.mapProviderToDescriptor.get(providerDescriptor);\n        if (!provider) {\n            provider = this.instantiationService.createInstance(providerDescriptor.ctor);\n            this.mapProviderToDescriptor.set(providerDescriptor, provider);\n        }\n        return [provider, providerDescriptor];\n    }\n};\nQuickAccessController = __decorate([\n    __param(0, IQuickInputService),\n    __param(1, IInstantiationService)\n], QuickAccessController);\nexport { QuickAccessController };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { CancellationToken } from '../../../base/common/cancellation.js';\nimport { QuickInputController } from '../../../base/parts/quickinput/browser/quickInput.js';\nimport { IAccessibilityService } from '../../accessibility/common/accessibility.js';\nimport { IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { WorkbenchList } from '../../list/browser/listService.js';\nimport { QuickAccessController } from './quickAccess.js';\nimport { activeContrastBorder, badgeBackground, badgeForeground, buttonBackground, buttonForeground, buttonHoverBackground, contrastBorder, inputBackground, inputBorder, inputForeground, inputValidationErrorBackground, inputValidationErrorBorder, inputValidationErrorForeground, inputValidationInfoBackground, inputValidationInfoBorder, inputValidationInfoForeground, inputValidationWarningBackground, inputValidationWarningBorder, inputValidationWarningForeground, keybindingLabelBackground, keybindingLabelBorder, keybindingLabelBottomBorder, keybindingLabelForeground, pickerGroupBorder, pickerGroupForeground, progressBarBackground, quickInputBackground, quickInputForeground, quickInputListFocusBackground, quickInputListFocusForeground, quickInputListFocusIconForeground, quickInputTitleBackground, widgetShadow } from '../../theme/common/colorRegistry.js';\nimport { computeStyles } from '../../theme/common/styler.js';\nimport { IThemeService, Themable } from '../../theme/common/themeService.js';\nlet QuickInputService = class QuickInputService extends Themable {\n    constructor(instantiationService, contextKeyService, themeService, accessibilityService, layoutService) {\n        super(themeService);\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.accessibilityService = accessibilityService;\n        this.layoutService = layoutService;\n        this.contexts = new Map();\n    }\n    get controller() {\n        if (!this._controller) {\n            this._controller = this._register(this.createController());\n        }\n        return this._controller;\n    }\n    get quickAccess() {\n        if (!this._quickAccess) {\n            this._quickAccess = this._register(this.instantiationService.createInstance(QuickAccessController));\n        }\n        return this._quickAccess;\n    }\n    createController(host = this.layoutService, options) {\n        var _a, _b;\n        const defaultOptions = {\n            idPrefix: 'quickInput_',\n            container: host.container,\n            ignoreFocusOut: () => false,\n            isScreenReaderOptimized: () => this.accessibilityService.isScreenReaderOptimized(),\n            backKeybindingLabel: () => undefined,\n            setContextKey: (id) => this.setContextKey(id),\n            returnFocus: () => host.focus(),\n            createList: (user, container, delegate, renderers, options) => this.instantiationService.createInstance(WorkbenchList, user, container, delegate, renderers, options),\n            styles: this.computeStyles()\n        };\n        const controller = this._register(new QuickInputController(Object.assign(Object.assign({}, defaultOptions), options)));\n        controller.layout(host.dimension, (_b = (_a = host.offset) === null || _a === void 0 ? void 0 : _a.top) !== null && _b !== void 0 ? _b : 0);\n        // Layout changes\n        this._register(host.onDidLayout(dimension => { var _a, _b; return controller.layout(dimension, (_b = (_a = host.offset) === null || _a === void 0 ? void 0 : _a.top) !== null && _b !== void 0 ? _b : 0); }));\n        // Context keys\n        this._register(controller.onShow(() => this.resetContextKeys()));\n        this._register(controller.onHide(() => this.resetContextKeys()));\n        return controller;\n    }\n    setContextKey(id) {\n        let key;\n        if (id) {\n            key = this.contexts.get(id);\n            if (!key) {\n                key = new RawContextKey(id, false)\n                    .bindTo(this.contextKeyService);\n                this.contexts.set(id, key);\n            }\n        }\n        if (key && key.get()) {\n            return; // already active context\n        }\n        this.resetContextKeys();\n        if (key) {\n            key.set(true);\n        }\n    }\n    resetContextKeys() {\n        this.contexts.forEach(context => {\n            if (context.get()) {\n                context.reset();\n            }\n        });\n    }\n    pick(picks, options = {}, token = CancellationToken.None) {\n        return this.controller.pick(picks, options, token);\n    }\n    createQuickPick() {\n        return this.controller.createQuickPick();\n    }\n    updateStyles() {\n        this.controller.applyStyles(this.computeStyles());\n    }\n    computeStyles() {\n        return {\n            widget: Object.assign({}, computeStyles(this.theme, {\n                quickInputBackground,\n                quickInputForeground,\n                quickInputTitleBackground,\n                contrastBorder,\n                widgetShadow\n            })),\n            inputBox: computeStyles(this.theme, {\n                inputForeground,\n                inputBackground,\n                inputBorder,\n                inputValidationInfoBackground,\n                inputValidationInfoForeground,\n                inputValidationInfoBorder,\n                inputValidationWarningBackground,\n                inputValidationWarningForeground,\n                inputValidationWarningBorder,\n                inputValidationErrorBackground,\n                inputValidationErrorForeground,\n                inputValidationErrorBorder\n            }),\n            countBadge: computeStyles(this.theme, {\n                badgeBackground,\n                badgeForeground,\n                badgeBorder: contrastBorder\n            }),\n            button: computeStyles(this.theme, {\n                buttonForeground,\n                buttonBackground,\n                buttonHoverBackground,\n                buttonBorder: contrastBorder\n            }),\n            progressBar: computeStyles(this.theme, {\n                progressBarBackground\n            }),\n            keybindingLabel: computeStyles(this.theme, {\n                keybindingLabelBackground,\n                keybindingLabelForeground,\n                keybindingLabelBorder,\n                keybindingLabelBottomBorder,\n                keybindingLabelShadow: widgetShadow\n            }),\n            list: computeStyles(this.theme, {\n                listBackground: quickInputBackground,\n                // Look like focused when inactive.\n                listInactiveFocusForeground: quickInputListFocusForeground,\n                listInactiveSelectionIconForeground: quickInputListFocusIconForeground,\n                listInactiveFocusBackground: quickInputListFocusBackground,\n                listFocusOutline: activeContrastBorder,\n                listInactiveFocusOutline: activeContrastBorder,\n                pickerGroupBorder,\n                pickerGroupForeground\n            })\n        };\n    }\n};\nQuickInputService = __decorate([\n    __param(0, IInstantiationService),\n    __param(1, IContextKeyService),\n    __param(2, IThemeService),\n    __param(3, IAccessibilityService),\n    __param(4, ILayoutService)\n], QuickInputService);\nexport { QuickInputService };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { coalesce } from '../../../base/common/arrays.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport var DefaultQuickAccessFilterValue;\n(function (DefaultQuickAccessFilterValue) {\n    /**\n     * Keep the value as it is given to quick access.\n     */\n    DefaultQuickAccessFilterValue[DefaultQuickAccessFilterValue[\"PRESERVE\"] = 0] = \"PRESERVE\";\n    /**\n     * Use the value that was used last time something was accepted from the picker.\n     */\n    DefaultQuickAccessFilterValue[DefaultQuickAccessFilterValue[\"LAST\"] = 1] = \"LAST\";\n})(DefaultQuickAccessFilterValue || (DefaultQuickAccessFilterValue = {}));\nexport const Extensions = {\n    Quickaccess: 'workbench.contributions.quickaccess'\n};\nexport class QuickAccessRegistry {\n    constructor() {\n        this.providers = [];\n        this.defaultProvider = undefined;\n    }\n    registerQuickAccessProvider(provider) {\n        // Extract the default provider when no prefix is present\n        if (provider.prefix.length === 0) {\n            this.defaultProvider = provider;\n        }\n        else {\n            this.providers.push(provider);\n        }\n        // sort the providers by decreasing prefix length, such that longer\n        // prefixes take priority: 'ext' vs 'ext install' - the latter should win\n        this.providers.sort((providerA, providerB) => providerB.prefix.length - providerA.prefix.length);\n        return toDisposable(() => {\n            this.providers.splice(this.providers.indexOf(provider), 1);\n            if (this.defaultProvider === provider) {\n                this.defaultProvider = undefined;\n            }\n        });\n    }\n    getQuickAccessProviders() {\n        return coalesce([this.defaultProvider, ...this.providers]);\n    }\n    getQuickAccessProvider(prefix) {\n        const result = prefix ? (this.providers.find(provider => prefix.startsWith(provider.prefix)) || undefined) : undefined;\n        return result || this.defaultProvider;\n    }\n}\nRegistry.add(Extensions.Quickaccess, new QuickAccessRegistry());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport * from '../../../base/parts/quickinput/common/quickInput.js';\nexport const IQuickInputService = createDecorator('quickInputService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Assert from '../../../base/common/assert.js';\nimport * as Types from '../../../base/common/types.js';\nclass RegistryImpl {\n    constructor() {\n        this.data = new Map();\n    }\n    add(id, data) {\n        Assert.ok(Types.isString(id));\n        Assert.ok(Types.isObject(data));\n        Assert.ok(!this.data.has(id), 'There is already an extension with this id');\n        this.data.set(id, data);\n    }\n    as(id) {\n        return this.data.get(id) || null;\n    }\n}\nexport const Registry = new RegistryImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Codicon } from '../../../base/common/codicons.js';\nimport Severity from '../../../base/common/severity.js';\nimport { problemsErrorIconForeground, problemsInfoIconForeground, problemsWarningIconForeground } from '../../theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../theme/common/themeService.js';\nexport var SeverityIcon;\n(function (SeverityIcon) {\n    function className(severity) {\n        switch (severity) {\n            case Severity.Ignore:\n                return 'severity-ignore ' + Codicon.info.classNames;\n            case Severity.Info:\n                return Codicon.info.classNames;\n            case Severity.Warning:\n                return Codicon.warning.classNames;\n            case Severity.Error:\n                return Codicon.error.classNames;\n            default:\n                return '';\n        }\n    }\n    SeverityIcon.className = className;\n})(SeverityIcon || (SeverityIcon = {}));\nregisterThemingParticipant((theme, collector) => {\n    const errorIconForeground = theme.getColor(problemsErrorIconForeground);\n    if (errorIconForeground) {\n        const errorCodiconSelector = Codicon.error.cssSelector;\n        collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${errorCodiconSelector},\n\t\t\t.markers-panel .marker-icon${errorCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${errorCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${errorCodiconSelector} {\n\t\t\t\tcolor: ${errorIconForeground};\n\t\t\t}\n\t\t`);\n    }\n    const warningIconForeground = theme.getColor(problemsWarningIconForeground);\n    if (warningIconForeground) {\n        const warningCodiconSelector = Codicon.warning.cssSelector;\n        collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${warningCodiconSelector},\n\t\t\t.markers-panel .marker-icon${warningCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${warningCodiconSelector},\n\t\t\t.extension-editor ${warningCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${warningCodiconSelector},\n\t\t\t.preferences-editor ${warningCodiconSelector} {\n\t\t\t\tcolor: ${warningIconForeground};\n\t\t\t}\n\t\t`);\n    }\n    const infoIconForeground = theme.getColor(problemsInfoIconForeground);\n    if (infoIconForeground) {\n        const infoCodiconSelector = Codicon.info.cssSelector;\n        collector.addRule(`\n\t\t\t.monaco-editor .zone-widget ${infoCodiconSelector},\n\t\t\t.markers-panel .marker-icon${infoCodiconSelector},\n\t\t\t.extensions-viewlet > .extensions ${infoCodiconSelector},\n\t\t\t.text-search-provider-messages .providerMessage ${infoCodiconSelector},\n\t\t\t.extension-editor ${infoCodiconSelector} {\n\t\t\t\tcolor: ${infoIconForeground};\n\t\t\t}\n\t\t`);\n    }\n});\n","import { Emitter, PauseableEmitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { isUndefinedOrNull } from '../../../base/common/types.js';\nimport { InMemoryStorageDatabase, Storage } from '../../../base/parts/storage/common/storage.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nconst TARGET_KEY = '__$__targetStorageMarker';\nexport const IStorageService = createDecorator('storageService');\nexport var WillSaveStateReason;\n(function (WillSaveStateReason) {\n    /**\n     * No specific reason to save state.\n     */\n    WillSaveStateReason[WillSaveStateReason[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * A hint that the workbench is about to shutdown.\n     */\n    WillSaveStateReason[WillSaveStateReason[\"SHUTDOWN\"] = 1] = \"SHUTDOWN\";\n})(WillSaveStateReason || (WillSaveStateReason = {}));\nexport class AbstractStorageService extends Disposable {\n    constructor(options = { flushInterval: AbstractStorageService.DEFAULT_FLUSH_INTERVAL }) {\n        super();\n        this.options = options;\n        this._onDidChangeValue = this._register(new PauseableEmitter());\n        this._onDidChangeTarget = this._register(new PauseableEmitter());\n        this._onWillSaveState = this._register(new Emitter());\n        this.onWillSaveState = this._onWillSaveState.event;\n        this._workspaceKeyTargets = undefined;\n        this._globalKeyTargets = undefined;\n    }\n    emitDidChangeValue(scope, key) {\n        // Specially handle `TARGET_KEY`\n        if (key === TARGET_KEY) {\n            // Clear our cached version which is now out of date\n            if (scope === 0 /* GLOBAL */) {\n                this._globalKeyTargets = undefined;\n            }\n            else if (scope === 1 /* WORKSPACE */) {\n                this._workspaceKeyTargets = undefined;\n            }\n            // Emit as `didChangeTarget` event\n            this._onDidChangeTarget.fire({ scope });\n        }\n        // Emit any other key to outside\n        else {\n            this._onDidChangeValue.fire({ scope, key, target: this.getKeyTargets(scope)[key] });\n        }\n    }\n    get(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.get(key, fallbackValue);\n    }\n    getBoolean(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.getBoolean(key, fallbackValue);\n    }\n    getNumber(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.getNumber(key, fallbackValue);\n    }\n    store(key, value, scope, target) {\n        // We remove the key for undefined/null values\n        if (isUndefinedOrNull(value)) {\n            this.remove(key, scope);\n            return;\n        }\n        // Update our datastructures but send events only after\n        this.withPausedEmitters(() => {\n            var _a;\n            // Update key-target map\n            this.updateKeyTarget(key, scope, target);\n            // Store actual value\n            (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.set(key, value);\n        });\n    }\n    remove(key, scope) {\n        // Update our datastructures but send events only after\n        this.withPausedEmitters(() => {\n            var _a;\n            // Update key-target map\n            this.updateKeyTarget(key, scope, undefined);\n            // Remove actual key\n            (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.delete(key);\n        });\n    }\n    withPausedEmitters(fn) {\n        // Pause emitters\n        this._onDidChangeValue.pause();\n        this._onDidChangeTarget.pause();\n        try {\n            fn();\n        }\n        finally {\n            // Resume emitters\n            this._onDidChangeValue.resume();\n            this._onDidChangeTarget.resume();\n        }\n    }\n    updateKeyTarget(key, scope, target) {\n        var _a, _b;\n        // Add\n        const keyTargets = this.getKeyTargets(scope);\n        if (typeof target === 'number') {\n            if (keyTargets[key] !== target) {\n                keyTargets[key] = target;\n                (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.set(TARGET_KEY, JSON.stringify(keyTargets));\n            }\n        }\n        // Remove\n        else {\n            if (typeof keyTargets[key] === 'number') {\n                delete keyTargets[key];\n                (_b = this.getStorage(scope)) === null || _b === void 0 ? void 0 : _b.set(TARGET_KEY, JSON.stringify(keyTargets));\n            }\n        }\n    }\n    get workspaceKeyTargets() {\n        if (!this._workspaceKeyTargets) {\n            this._workspaceKeyTargets = this.loadKeyTargets(1 /* WORKSPACE */);\n        }\n        return this._workspaceKeyTargets;\n    }\n    get globalKeyTargets() {\n        if (!this._globalKeyTargets) {\n            this._globalKeyTargets = this.loadKeyTargets(0 /* GLOBAL */);\n        }\n        return this._globalKeyTargets;\n    }\n    getKeyTargets(scope) {\n        return scope === 0 /* GLOBAL */ ? this.globalKeyTargets : this.workspaceKeyTargets;\n    }\n    loadKeyTargets(scope) {\n        const keysRaw = this.get(TARGET_KEY, scope);\n        if (keysRaw) {\n            try {\n                return JSON.parse(keysRaw);\n            }\n            catch (error) {\n                // Fail gracefully\n            }\n        }\n        return Object.create(null);\n    }\n}\nAbstractStorageService.DEFAULT_FLUSH_INTERVAL = 60 * 1000; // every minute\nexport class InMemoryStorageService extends AbstractStorageService {\n    constructor() {\n        super();\n        this.globalStorage = this._register(new Storage(new InMemoryStorageDatabase()));\n        this.workspaceStorage = this._register(new Storage(new InMemoryStorageDatabase()));\n        this._register(this.workspaceStorage.onDidChangeStorage(key => this.emitDidChangeValue(1 /* WORKSPACE */, key)));\n        this._register(this.globalStorage.onDidChangeStorage(key => this.emitDidChangeValue(0 /* GLOBAL */, key)));\n    }\n    getStorage(scope) {\n        return scope === 0 /* GLOBAL */ ? this.globalStorage : this.workspaceStorage;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ITelemetryService = createDecorator('telemetryService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { asCSSPropertyValue, asCSSUrl } from '../../../base/browser/dom.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { getIconRegistry } from '../common/iconRegistry.js';\nimport { ThemeIcon } from '../common/themeService.js';\nexport function getIconsStyleSheet(themeService) {\n    const onDidChangeEmmiter = new Emitter();\n    const iconRegistry = getIconRegistry();\n    iconRegistry.onDidChange(() => onDidChangeEmmiter.fire());\n    themeService === null || themeService === void 0 ? void 0 : themeService.onDidProductIconThemeChange(() => onDidChangeEmmiter.fire());\n    return {\n        onDidChange: onDidChangeEmmiter.event,\n        getCSS() {\n            const productIconTheme = themeService ? themeService.getProductIconTheme() : new UnthemedProductIconTheme();\n            const usedFontIds = {};\n            const formatIconRule = (contribution) => {\n                const definition = productIconTheme.getIcon(contribution);\n                if (!definition) {\n                    return undefined;\n                }\n                const fontContribution = definition.font;\n                if (fontContribution) {\n                    usedFontIds[fontContribution.id] = fontContribution.getDefinition();\n                    return `.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; font-family: ${asCSSPropertyValue(fontContribution.id)}; }`;\n                }\n                // default font (codicon)\n                return `.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; }`;\n            };\n            const rules = [];\n            for (let contribution of iconRegistry.getIcons()) {\n                const rule = formatIconRule(contribution);\n                if (rule) {\n                    rules.push(rule);\n                }\n            }\n            for (let id in usedFontIds) {\n                const definition = usedFontIds[id];\n                if (definition) {\n                    const fontWeight = definition.weight ? `font-weight: ${definition.weight};` : '';\n                    const fontStyle = definition.style ? `font-style: ${definition.style};` : '';\n                    const src = definition.src.map(l => `${asCSSUrl(l.location)} format('${l.format}')`).join(', ');\n                    rules.push(`@font-face { src: ${src}; font-family: ${asCSSPropertyValue(id)};${fontWeight}${fontStyle} font-display: block; }`);\n                }\n            }\n            return rules.join('\\n');\n        }\n    };\n}\nexport class UnthemedProductIconTheme {\n    getIcon(contribution) {\n        const iconRegistry = getIconRegistry();\n        let definition = contribution.defaults;\n        while (ThemeIcon.isThemeIcon(definition)) {\n            const c = iconRegistry.getIcon(definition.id);\n            if (!c) {\n                return undefined;\n            }\n            definition = c.defaults;\n        }\n        return definition;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Color, RGBA } from '../../../base/common/color.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { assertNever } from '../../../base/common/types.js';\nimport * as nls from '../../../nls.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport * as platform from '../../registry/common/platform.js';\n/**\n * Returns the css variable name for the given color identifier. Dots (`.`) are replaced with hyphens (`-`) and\n * everything is prefixed with `--vscode-`.\n *\n * @sample `editorSuggestWidget.background` is `--vscode-editorSuggestWidget-background`.\n */\nexport function asCssVariableName(colorIdent) {\n    return `--vscode-${colorIdent.replace('.', '-')}`;\n}\n// color registry\nexport const Extensions = {\n    ColorContribution: 'base.contributions.colors'\n};\nclass ColorRegistry {\n    constructor() {\n        this._onDidChangeSchema = new Emitter();\n        this.onDidChangeSchema = this._onDidChangeSchema.event;\n        this.colorSchema = { type: 'object', properties: {} };\n        this.colorReferenceSchema = { type: 'string', enum: [], enumDescriptions: [] };\n        this.colorsById = {};\n    }\n    registerColor(id, defaults, description, needsTransparency = false, deprecationMessage) {\n        let colorContribution = { id, description, defaults, needsTransparency, deprecationMessage };\n        this.colorsById[id] = colorContribution;\n        let propertySchema = { type: 'string', description, format: 'color-hex', defaultSnippets: [{ body: '${1:#ff0000}' }] };\n        if (deprecationMessage) {\n            propertySchema.deprecationMessage = deprecationMessage;\n        }\n        this.colorSchema.properties[id] = propertySchema;\n        this.colorReferenceSchema.enum.push(id);\n        this.colorReferenceSchema.enumDescriptions.push(description);\n        this._onDidChangeSchema.fire();\n        return id;\n    }\n    getColors() {\n        return Object.keys(this.colorsById).map(id => this.colorsById[id]);\n    }\n    resolveDefaultColor(id, theme) {\n        const colorDesc = this.colorsById[id];\n        if (colorDesc && colorDesc.defaults) {\n            const colorValue = colorDesc.defaults[theme.type];\n            return resolveColorValue(colorValue, theme);\n        }\n        return undefined;\n    }\n    getColorSchema() {\n        return this.colorSchema;\n    }\n    toString() {\n        let sorter = (a, b) => {\n            let cat1 = a.indexOf('.') === -1 ? 0 : 1;\n            let cat2 = b.indexOf('.') === -1 ? 0 : 1;\n            if (cat1 !== cat2) {\n                return cat1 - cat2;\n            }\n            return a.localeCompare(b);\n        };\n        return Object.keys(this.colorsById).sort(sorter).map(k => `- \\`${k}\\`: ${this.colorsById[k].description}`).join('\\n');\n    }\n}\nconst colorRegistry = new ColorRegistry();\nplatform.Registry.add(Extensions.ColorContribution, colorRegistry);\nexport function registerColor(id, defaults, description, needsTransparency, deprecationMessage) {\n    return colorRegistry.registerColor(id, defaults, description, needsTransparency, deprecationMessage);\n}\n// ----- base colors\nexport const foreground = registerColor('foreground', { dark: '#CCCCCC', light: '#616161', hc: '#FFFFFF' }, nls.localize('foreground', \"Overall foreground color. This color is only used if not overridden by a component.\"));\nexport const errorForeground = registerColor('errorForeground', { dark: '#F48771', light: '#A1260D', hc: '#F48771' }, nls.localize('errorForeground', \"Overall foreground color for error messages. This color is only used if not overridden by a component.\"));\nexport const descriptionForeground = registerColor('descriptionForeground', { light: '#717171', dark: transparent(foreground, 0.7), hc: transparent(foreground, 0.7) }, nls.localize('descriptionForeground', \"Foreground color for description text providing additional information, for example for a label.\"));\nexport const iconForeground = registerColor('icon.foreground', { dark: '#C5C5C5', light: '#424242', hc: '#FFFFFF' }, nls.localize('iconForeground', \"The default color for icons in the workbench.\"));\nexport const focusBorder = registerColor('focusBorder', { dark: '#007FD4', light: '#0090F1', hc: '#F38518' }, nls.localize('focusBorder', \"Overall border color for focused elements. This color is only used if not overridden by a component.\"));\nexport const contrastBorder = registerColor('contrastBorder', { light: null, dark: null, hc: '#6FC3DF' }, nls.localize('contrastBorder', \"An extra border around elements to separate them from others for greater contrast.\"));\nexport const activeContrastBorder = registerColor('contrastActiveBorder', { light: null, dark: null, hc: focusBorder }, nls.localize('activeContrastBorder', \"An extra border around active elements to separate them from others for greater contrast.\"));\nexport const selectionBackground = registerColor('selection.background', { light: null, dark: null, hc: null }, nls.localize('selectionBackground', \"The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.\"));\n// ------ text colors\nexport const textSeparatorForeground = registerColor('textSeparator.foreground', { light: '#0000002e', dark: '#ffffff2e', hc: Color.black }, nls.localize('textSeparatorForeground', \"Color for text separators.\"));\nexport const textLinkForeground = registerColor('textLink.foreground', { light: '#006AB1', dark: '#3794FF', hc: '#3794FF' }, nls.localize('textLinkForeground', \"Foreground color for links in text.\"));\nexport const textLinkActiveForeground = registerColor('textLink.activeForeground', { light: '#006AB1', dark: '#3794FF', hc: '#3794FF' }, nls.localize('textLinkActiveForeground', \"Foreground color for links in text when clicked on and on mouse hover.\"));\nexport const textPreformatForeground = registerColor('textPreformat.foreground', { light: '#A31515', dark: '#D7BA7D', hc: '#D7BA7D' }, nls.localize('textPreformatForeground', \"Foreground color for preformatted text segments.\"));\nexport const textBlockQuoteBackground = registerColor('textBlockQuote.background', { light: '#7f7f7f1a', dark: '#7f7f7f1a', hc: null }, nls.localize('textBlockQuoteBackground', \"Background color for block quotes in text.\"));\nexport const textBlockQuoteBorder = registerColor('textBlockQuote.border', { light: '#007acc80', dark: '#007acc80', hc: Color.white }, nls.localize('textBlockQuoteBorder', \"Border color for block quotes in text.\"));\nexport const textCodeBlockBackground = registerColor('textCodeBlock.background', { light: '#dcdcdc66', dark: '#0a0a0a66', hc: Color.black }, nls.localize('textCodeBlockBackground', \"Background color for code blocks in text.\"));\n// ----- widgets\nexport const widgetShadow = registerColor('widget.shadow', { dark: transparent(Color.black, .36), light: transparent(Color.black, .16), hc: null }, nls.localize('widgetShadow', 'Shadow color of widgets such as find/replace inside the editor.'));\nexport const inputBackground = registerColor('input.background', { dark: '#3C3C3C', light: Color.white, hc: Color.black }, nls.localize('inputBoxBackground', \"Input box background.\"));\nexport const inputForeground = registerColor('input.foreground', { dark: foreground, light: foreground, hc: foreground }, nls.localize('inputBoxForeground', \"Input box foreground.\"));\nexport const inputBorder = registerColor('input.border', { dark: null, light: null, hc: contrastBorder }, nls.localize('inputBoxBorder', \"Input box border.\"));\nexport const inputActiveOptionBorder = registerColor('inputOption.activeBorder', { dark: '#007ACC00', light: '#007ACC00', hc: contrastBorder }, nls.localize('inputBoxActiveOptionBorder', \"Border color of activated options in input fields.\"));\nexport const inputActiveOptionHoverBackground = registerColor('inputOption.hoverBackground', { dark: '#5a5d5e80', light: '#b8b8b850', hc: null }, nls.localize('inputOption.hoverBackground', \"Background color of activated options in input fields.\"));\nexport const inputActiveOptionBackground = registerColor('inputOption.activeBackground', { dark: transparent(focusBorder, 0.4), light: transparent(focusBorder, 0.2), hc: Color.transparent }, nls.localize('inputOption.activeBackground', \"Background hover color of options in input fields.\"));\nexport const inputActiveOptionForeground = registerColor('inputOption.activeForeground', { dark: Color.white, light: Color.black, hc: null }, nls.localize('inputOption.activeForeground', \"Foreground color of activated options in input fields.\"));\nexport const inputPlaceholderForeground = registerColor('input.placeholderForeground', { light: transparent(foreground, 0.5), dark: transparent(foreground, 0.5), hc: transparent(foreground, 0.7) }, nls.localize('inputPlaceholderForeground', \"Input box foreground color for placeholder text.\"));\nexport const inputValidationInfoBackground = registerColor('inputValidation.infoBackground', { dark: '#063B49', light: '#D6ECF2', hc: Color.black }, nls.localize('inputValidationInfoBackground', \"Input validation background color for information severity.\"));\nexport const inputValidationInfoForeground = registerColor('inputValidation.infoForeground', { dark: null, light: null, hc: null }, nls.localize('inputValidationInfoForeground', \"Input validation foreground color for information severity.\"));\nexport const inputValidationInfoBorder = registerColor('inputValidation.infoBorder', { dark: '#007acc', light: '#007acc', hc: contrastBorder }, nls.localize('inputValidationInfoBorder', \"Input validation border color for information severity.\"));\nexport const inputValidationWarningBackground = registerColor('inputValidation.warningBackground', { dark: '#352A05', light: '#F6F5D2', hc: Color.black }, nls.localize('inputValidationWarningBackground', \"Input validation background color for warning severity.\"));\nexport const inputValidationWarningForeground = registerColor('inputValidation.warningForeground', { dark: null, light: null, hc: null }, nls.localize('inputValidationWarningForeground', \"Input validation foreground color for warning severity.\"));\nexport const inputValidationWarningBorder = registerColor('inputValidation.warningBorder', { dark: '#B89500', light: '#B89500', hc: contrastBorder }, nls.localize('inputValidationWarningBorder', \"Input validation border color for warning severity.\"));\nexport const inputValidationErrorBackground = registerColor('inputValidation.errorBackground', { dark: '#5A1D1D', light: '#F2DEDE', hc: Color.black }, nls.localize('inputValidationErrorBackground', \"Input validation background color for error severity.\"));\nexport const inputValidationErrorForeground = registerColor('inputValidation.errorForeground', { dark: null, light: null, hc: null }, nls.localize('inputValidationErrorForeground', \"Input validation foreground color for error severity.\"));\nexport const inputValidationErrorBorder = registerColor('inputValidation.errorBorder', { dark: '#BE1100', light: '#BE1100', hc: contrastBorder }, nls.localize('inputValidationErrorBorder', \"Input validation border color for error severity.\"));\nexport const selectBackground = registerColor('dropdown.background', { dark: '#3C3C3C', light: Color.white, hc: Color.black }, nls.localize('dropdownBackground', \"Dropdown background.\"));\nexport const selectListBackground = registerColor('dropdown.listBackground', { dark: null, light: null, hc: Color.black }, nls.localize('dropdownListBackground', \"Dropdown list background.\"));\nexport const selectForeground = registerColor('dropdown.foreground', { dark: '#F0F0F0', light: null, hc: Color.white }, nls.localize('dropdownForeground', \"Dropdown foreground.\"));\nexport const selectBorder = registerColor('dropdown.border', { dark: selectBackground, light: '#CECECE', hc: contrastBorder }, nls.localize('dropdownBorder', \"Dropdown border.\"));\nexport const simpleCheckboxBackground = registerColor('checkbox.background', { dark: selectBackground, light: selectBackground, hc: selectBackground }, nls.localize('checkbox.background', \"Background color of checkbox widget.\"));\nexport const simpleCheckboxForeground = registerColor('checkbox.foreground', { dark: selectForeground, light: selectForeground, hc: selectForeground }, nls.localize('checkbox.foreground', \"Foreground color of checkbox widget.\"));\nexport const simpleCheckboxBorder = registerColor('checkbox.border', { dark: selectBorder, light: selectBorder, hc: selectBorder }, nls.localize('checkbox.border', \"Border color of checkbox widget.\"));\nexport const buttonForeground = registerColor('button.foreground', { dark: Color.white, light: Color.white, hc: Color.white }, nls.localize('buttonForeground', \"Button foreground color.\"));\nexport const buttonBackground = registerColor('button.background', { dark: '#0E639C', light: '#007ACC', hc: null }, nls.localize('buttonBackground', \"Button background color.\"));\nexport const buttonHoverBackground = registerColor('button.hoverBackground', { dark: lighten(buttonBackground, 0.2), light: darken(buttonBackground, 0.2), hc: null }, nls.localize('buttonHoverBackground', \"Button background color when hovering.\"));\nexport const buttonBorder = registerColor('button.border', { dark: contrastBorder, light: contrastBorder, hc: contrastBorder }, nls.localize('buttonBorder', \"Button border color.\"));\nexport const buttonSecondaryForeground = registerColor('button.secondaryForeground', { dark: Color.white, light: Color.white, hc: Color.white }, nls.localize('buttonSecondaryForeground', \"Secondary button foreground color.\"));\nexport const buttonSecondaryBackground = registerColor('button.secondaryBackground', { dark: '#3A3D41', light: '#5F6A79', hc: null }, nls.localize('buttonSecondaryBackground', \"Secondary button background color.\"));\nexport const buttonSecondaryHoverBackground = registerColor('button.secondaryHoverBackground', { dark: lighten(buttonSecondaryBackground, 0.2), light: darken(buttonSecondaryBackground, 0.2), hc: null }, nls.localize('buttonSecondaryHoverBackground', \"Secondary button background color when hovering.\"));\nexport const badgeBackground = registerColor('badge.background', { dark: '#4D4D4D', light: '#C4C4C4', hc: Color.black }, nls.localize('badgeBackground', \"Badge background color. Badges are small information labels, e.g. for search results count.\"));\nexport const badgeForeground = registerColor('badge.foreground', { dark: Color.white, light: '#333', hc: Color.white }, nls.localize('badgeForeground', \"Badge foreground color. Badges are small information labels, e.g. for search results count.\"));\nexport const scrollbarShadow = registerColor('scrollbar.shadow', { dark: '#000000', light: '#DDDDDD', hc: null }, nls.localize('scrollbarShadow', \"Scrollbar shadow to indicate that the view is scrolled.\"));\nexport const scrollbarSliderBackground = registerColor('scrollbarSlider.background', { dark: Color.fromHex('#797979').transparent(0.4), light: Color.fromHex('#646464').transparent(0.4), hc: transparent(contrastBorder, 0.6) }, nls.localize('scrollbarSliderBackground', \"Scrollbar slider background color.\"));\nexport const scrollbarSliderHoverBackground = registerColor('scrollbarSlider.hoverBackground', { dark: Color.fromHex('#646464').transparent(0.7), light: Color.fromHex('#646464').transparent(0.7), hc: transparent(contrastBorder, 0.8) }, nls.localize('scrollbarSliderHoverBackground', \"Scrollbar slider background color when hovering.\"));\nexport const scrollbarSliderActiveBackground = registerColor('scrollbarSlider.activeBackground', { dark: Color.fromHex('#BFBFBF').transparent(0.4), light: Color.fromHex('#000000').transparent(0.6), hc: contrastBorder }, nls.localize('scrollbarSliderActiveBackground', \"Scrollbar slider background color when clicked on.\"));\nexport const progressBarBackground = registerColor('progressBar.background', { dark: Color.fromHex('#0E70C0'), light: Color.fromHex('#0E70C0'), hc: contrastBorder }, nls.localize('progressBarBackground', \"Background color of the progress bar that can show for long running operations.\"));\nexport const editorErrorBackground = registerColor('editorError.background', { dark: null, light: null, hc: null }, nls.localize('editorError.background', 'Background color of error text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorErrorForeground = registerColor('editorError.foreground', { dark: '#F14C4C', light: '#E51400', hc: null }, nls.localize('editorError.foreground', 'Foreground color of error squigglies in the editor.'));\nexport const editorErrorBorder = registerColor('editorError.border', { dark: null, light: null, hc: Color.fromHex('#E47777').transparent(0.8) }, nls.localize('errorBorder', 'Border color of error boxes in the editor.'));\nexport const editorWarningBackground = registerColor('editorWarning.background', { dark: null, light: null, hc: null }, nls.localize('editorWarning.background', 'Background color of warning text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorWarningForeground = registerColor('editorWarning.foreground', { dark: '#CCA700', light: '#BF8803', hc: null }, nls.localize('editorWarning.foreground', 'Foreground color of warning squigglies in the editor.'));\nexport const editorWarningBorder = registerColor('editorWarning.border', { dark: null, light: null, hc: Color.fromHex('#FFCC00').transparent(0.8) }, nls.localize('warningBorder', 'Border color of warning boxes in the editor.'));\nexport const editorInfoBackground = registerColor('editorInfo.background', { dark: null, light: null, hc: null }, nls.localize('editorInfo.background', 'Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorInfoForeground = registerColor('editorInfo.foreground', { dark: '#3794FF', light: '#1a85ff', hc: '#3794FF' }, nls.localize('editorInfo.foreground', 'Foreground color of info squigglies in the editor.'));\nexport const editorInfoBorder = registerColor('editorInfo.border', { dark: null, light: null, hc: Color.fromHex('#3794FF').transparent(0.8) }, nls.localize('infoBorder', 'Border color of info boxes in the editor.'));\nexport const editorHintForeground = registerColor('editorHint.foreground', { dark: Color.fromHex('#eeeeee').transparent(0.7), light: '#6c6c6c', hc: null }, nls.localize('editorHint.foreground', 'Foreground color of hint squigglies in the editor.'));\nexport const editorHintBorder = registerColor('editorHint.border', { dark: null, light: null, hc: Color.fromHex('#eeeeee').transparent(0.8) }, nls.localize('hintBorder', 'Border color of hint boxes in the editor.'));\nexport const sashHoverBorder = registerColor('sash.hoverBorder', { dark: focusBorder, light: focusBorder, hc: focusBorder }, nls.localize('sashActiveBorder', \"Border color of active sashes.\"));\n/**\n * Editor background color.\n * Because of bug https://monacotools.visualstudio.com/DefaultCollection/Monaco/_workitems/edit/13254\n * we are *not* using the color white (or #ffffff, rgba(255,255,255)) but something very close to white.\n */\nexport const editorBackground = registerColor('editor.background', { light: '#fffffe', dark: '#1E1E1E', hc: Color.black }, nls.localize('editorBackground', \"Editor background color.\"));\n/**\n * Editor foreground color.\n */\nexport const editorForeground = registerColor('editor.foreground', { light: '#333333', dark: '#BBBBBB', hc: Color.white }, nls.localize('editorForeground', \"Editor default foreground color.\"));\n/**\n * Editor widgets\n */\nexport const editorWidgetBackground = registerColor('editorWidget.background', { dark: '#252526', light: '#F3F3F3', hc: '#0C141F' }, nls.localize('editorWidgetBackground', 'Background color of editor widgets, such as find/replace.'));\nexport const editorWidgetForeground = registerColor('editorWidget.foreground', { dark: foreground, light: foreground, hc: foreground }, nls.localize('editorWidgetForeground', 'Foreground color of editor widgets, such as find/replace.'));\nexport const editorWidgetBorder = registerColor('editorWidget.border', { dark: '#454545', light: '#C8C8C8', hc: contrastBorder }, nls.localize('editorWidgetBorder', 'Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.'));\nexport const editorWidgetResizeBorder = registerColor('editorWidget.resizeBorder', { light: null, dark: null, hc: null }, nls.localize('editorWidgetResizeBorder', \"Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.\"));\n/**\n * Quick pick widget\n */\nexport const quickInputBackground = registerColor('quickInput.background', { dark: editorWidgetBackground, light: editorWidgetBackground, hc: editorWidgetBackground }, nls.localize('pickerBackground', \"Quick picker background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputForeground = registerColor('quickInput.foreground', { dark: editorWidgetForeground, light: editorWidgetForeground, hc: editorWidgetForeground }, nls.localize('pickerForeground', \"Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputTitleBackground = registerColor('quickInputTitle.background', { dark: new Color(new RGBA(255, 255, 255, 0.105)), light: new Color(new RGBA(0, 0, 0, 0.06)), hc: '#000000' }, nls.localize('pickerTitleBackground', \"Quick picker title background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const pickerGroupForeground = registerColor('pickerGroup.foreground', { dark: '#3794FF', light: '#0066BF', hc: Color.white }, nls.localize('pickerGroupForeground', \"Quick picker color for grouping labels.\"));\nexport const pickerGroupBorder = registerColor('pickerGroup.border', { dark: '#3F3F46', light: '#CCCEDB', hc: Color.white }, nls.localize('pickerGroupBorder', \"Quick picker color for grouping borders.\"));\n/**\n * Keybinding label\n */\nexport const keybindingLabelBackground = registerColor('keybindingLabel.background', { dark: new Color(new RGBA(128, 128, 128, 0.17)), light: new Color(new RGBA(221, 221, 221, 0.4)), hc: Color.transparent }, nls.localize('keybindingLabelBackground', \"Keybinding label background color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelForeground = registerColor('keybindingLabel.foreground', { dark: Color.fromHex('#CCCCCC'), light: Color.fromHex('#555555'), hc: Color.white }, nls.localize('keybindingLabelForeground', \"Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBorder = registerColor('keybindingLabel.border', { dark: new Color(new RGBA(51, 51, 51, 0.6)), light: new Color(new RGBA(204, 204, 204, 0.4)), hc: new Color(new RGBA(111, 195, 223)) }, nls.localize('keybindingLabelBorder', \"Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBottomBorder = registerColor('keybindingLabel.bottomBorder', { dark: new Color(new RGBA(68, 68, 68, 0.6)), light: new Color(new RGBA(187, 187, 187, 0.4)), hc: new Color(new RGBA(111, 195, 223)) }, nls.localize('keybindingLabelBottomBorder', \"Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut.\"));\n/**\n * Editor selection colors.\n */\nexport const editorSelectionBackground = registerColor('editor.selectionBackground', { light: '#ADD6FF', dark: '#264F78', hc: '#f3f518' }, nls.localize('editorSelectionBackground', \"Color of the editor selection.\"));\nexport const editorSelectionForeground = registerColor('editor.selectionForeground', { light: null, dark: null, hc: '#000000' }, nls.localize('editorSelectionForeground', \"Color of the selected text for high contrast.\"));\nexport const editorInactiveSelection = registerColor('editor.inactiveSelectionBackground', { light: transparent(editorSelectionBackground, 0.5), dark: transparent(editorSelectionBackground, 0.5), hc: transparent(editorSelectionBackground, 0.5) }, nls.localize('editorInactiveSelection', \"Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorSelectionHighlight = registerColor('editor.selectionHighlightBackground', { light: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), dark: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), hc: null }, nls.localize('editorSelectionHighlight', 'Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSelectionHighlightBorder = registerColor('editor.selectionHighlightBorder', { light: null, dark: null, hc: activeContrastBorder }, nls.localize('editorSelectionHighlightBorder', \"Border color for regions with the same content as the selection.\"));\n/**\n * Editor find match colors.\n */\nexport const editorFindMatch = registerColor('editor.findMatchBackground', { light: '#A8AC94', dark: '#515C6A', hc: null }, nls.localize('editorFindMatch', \"Color of the current search match.\"));\nexport const editorFindMatchHighlight = registerColor('editor.findMatchHighlightBackground', { light: '#EA5C0055', dark: '#EA5C0055', hc: null }, nls.localize('findMatchHighlight', \"Color of the other search matches. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFindRangeHighlight = registerColor('editor.findRangeHighlightBackground', { dark: '#3a3d4166', light: '#b4b4b44d', hc: null }, nls.localize('findRangeHighlight', \"Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFindMatchBorder = registerColor('editor.findMatchBorder', { light: null, dark: null, hc: activeContrastBorder }, nls.localize('editorFindMatchBorder', \"Border color of the current search match.\"));\nexport const editorFindMatchHighlightBorder = registerColor('editor.findMatchHighlightBorder', { light: null, dark: null, hc: activeContrastBorder }, nls.localize('findMatchHighlightBorder', \"Border color of the other search matches.\"));\nexport const editorFindRangeHighlightBorder = registerColor('editor.findRangeHighlightBorder', { dark: null, light: null, hc: transparent(activeContrastBorder, 0.4) }, nls.localize('findRangeHighlightBorder', \"Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\n/**\n * Search Editor query match colors.\n *\n * Distinct from normal editor find match to allow for better differentiation\n */\nexport const searchEditorFindMatch = registerColor('searchEditor.findMatchBackground', { light: transparent(editorFindMatchHighlight, 0.66), dark: transparent(editorFindMatchHighlight, 0.66), hc: editorFindMatchHighlight }, nls.localize('searchEditor.queryMatch', \"Color of the Search Editor query matches.\"));\nexport const searchEditorFindMatchBorder = registerColor('searchEditor.findMatchBorder', { light: transparent(editorFindMatchHighlightBorder, 0.66), dark: transparent(editorFindMatchHighlightBorder, 0.66), hc: editorFindMatchHighlightBorder }, nls.localize('searchEditor.editorFindMatchBorder', \"Border color of the Search Editor query matches.\"));\n/**\n * Editor hover\n */\nexport const editorHoverHighlight = registerColor('editor.hoverHighlightBackground', { light: '#ADD6FF26', dark: '#264f7840', hc: '#ADD6FF26' }, nls.localize('hoverHighlight', 'Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorHoverBackground = registerColor('editorHoverWidget.background', { light: editorWidgetBackground, dark: editorWidgetBackground, hc: editorWidgetBackground }, nls.localize('hoverBackground', 'Background color of the editor hover.'));\nexport const editorHoverForeground = registerColor('editorHoverWidget.foreground', { light: editorWidgetForeground, dark: editorWidgetForeground, hc: editorWidgetForeground }, nls.localize('hoverForeground', 'Foreground color of the editor hover.'));\nexport const editorHoverBorder = registerColor('editorHoverWidget.border', { light: editorWidgetBorder, dark: editorWidgetBorder, hc: editorWidgetBorder }, nls.localize('hoverBorder', 'Border color of the editor hover.'));\nexport const editorHoverStatusBarBackground = registerColor('editorHoverWidget.statusBarBackground', { dark: lighten(editorHoverBackground, 0.2), light: darken(editorHoverBackground, 0.05), hc: editorWidgetBackground }, nls.localize('statusBarBackground', \"Background color of the editor hover status bar.\"));\n/**\n * Editor link colors\n */\nexport const editorActiveLinkForeground = registerColor('editorLink.activeForeground', { dark: '#4E94CE', light: Color.blue, hc: Color.cyan }, nls.localize('activeLinkForeground', 'Color of active links.'));\n/**\n * Inline hints\n */\nexport const editorInlayHintForeground = registerColor('editorInlayHint.foreground', { dark: transparent(badgeForeground, .8), light: transparent(badgeForeground, .8), hc: badgeForeground }, nls.localize('editorInlayHintForeground', 'Foreground color of inline hints'));\nexport const editorInlayHintBackground = registerColor('editorInlayHint.background', { dark: transparent(badgeBackground, .6), light: transparent(badgeBackground, .3), hc: badgeBackground }, nls.localize('editorInlayHintBackground', 'Background color of inline hints'));\nexport const editorInlayHintTypeForeground = registerColor('editorInlayHint.typeForeground', { dark: editorInlayHintForeground, light: editorInlayHintForeground, hc: editorInlayHintForeground }, nls.localize('editorInlayHintForegroundTypes', 'Foreground color of inline hints for types'));\nexport const editorInlayHintTypeBackground = registerColor('editorInlayHint.typeBackground', { dark: editorInlayHintBackground, light: editorInlayHintBackground, hc: editorInlayHintBackground }, nls.localize('editorInlayHintBackgroundTypes', 'Background color of inline hints for types'));\nexport const editorInlayHintParameterForeground = registerColor('editorInlayHint.parameterForeground', { dark: editorInlayHintForeground, light: editorInlayHintForeground, hc: editorInlayHintForeground }, nls.localize('editorInlayHintForegroundParameter', 'Foreground color of inline hints for parameters'));\nexport const editorInlayHintParameterBackground = registerColor('editorInlayHint.parameterBackground', { dark: editorInlayHintBackground, light: editorInlayHintBackground, hc: editorInlayHintBackground }, nls.localize('editorInlayHintBackgroundParameter', 'Background color of inline hints for parameters'));\n/**\n * Editor lighbulb icon colors\n */\nexport const editorLightBulbForeground = registerColor('editorLightBulb.foreground', { dark: '#FFCC00', light: '#DDB100', hc: '#FFCC00' }, nls.localize('editorLightBulbForeground', \"The color used for the lightbulb actions icon.\"));\nexport const editorLightBulbAutoFixForeground = registerColor('editorLightBulbAutoFix.foreground', { dark: '#75BEFF', light: '#007ACC', hc: '#75BEFF' }, nls.localize('editorLightBulbAutoFixForeground', \"The color used for the lightbulb auto fix actions icon.\"));\n/**\n * Diff Editor Colors\n */\nexport const defaultInsertColor = new Color(new RGBA(155, 185, 85, 0.2));\nexport const defaultRemoveColor = new Color(new RGBA(255, 0, 0, 0.2));\nexport const diffInserted = registerColor('diffEditor.insertedTextBackground', { dark: defaultInsertColor, light: defaultInsertColor, hc: null }, nls.localize('diffEditorInserted', 'Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffRemoved = registerColor('diffEditor.removedTextBackground', { dark: defaultRemoveColor, light: defaultRemoveColor, hc: null }, nls.localize('diffEditorRemoved', 'Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffInsertedOutline = registerColor('diffEditor.insertedTextBorder', { dark: null, light: null, hc: '#33ff2eff' }, nls.localize('diffEditorInsertedOutline', 'Outline color for the text that got inserted.'));\nexport const diffRemovedOutline = registerColor('diffEditor.removedTextBorder', { dark: null, light: null, hc: '#FF008F' }, nls.localize('diffEditorRemovedOutline', 'Outline color for text that got removed.'));\nexport const diffBorder = registerColor('diffEditor.border', { dark: null, light: null, hc: contrastBorder }, nls.localize('diffEditorBorder', 'Border color between the two text editors.'));\nexport const diffDiagonalFill = registerColor('diffEditor.diagonalFill', { dark: '#cccccc33', light: '#22222233', hc: null }, nls.localize('diffDiagonalFill', \"Color of the diff editor's diagonal fill. The diagonal fill is used in side-by-side diff views.\"));\n/**\n * List and tree colors\n */\nexport const listFocusBackground = registerColor('list.focusBackground', { dark: null, light: null, hc: null }, nls.localize('listFocusBackground', \"List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusForeground = registerColor('list.focusForeground', { dark: null, light: null, hc: null }, nls.localize('listFocusForeground', \"List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusOutline = registerColor('list.focusOutline', { dark: focusBorder, light: focusBorder, hc: activeContrastBorder }, nls.localize('listFocusOutline', \"List/Tree outline color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionBackground = registerColor('list.activeSelectionBackground', { dark: '#094771', light: '#0060C0', hc: null }, nls.localize('listActiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionForeground = registerColor('list.activeSelectionForeground', { dark: Color.white, light: Color.white, hc: null }, nls.localize('listActiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionIconForeground = registerColor('list.activeSelectionIconForeground', { dark: null, light: null, hc: null }, nls.localize('listActiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionBackground = registerColor('list.inactiveSelectionBackground', { dark: '#37373D', light: '#E4E6F1', hc: null }, nls.localize('listInactiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionForeground = registerColor('list.inactiveSelectionForeground', { dark: null, light: null, hc: null }, nls.localize('listInactiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionIconForeground = registerColor('list.inactiveSelectionIconForeground', { dark: null, light: null, hc: null }, nls.localize('listInactiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusBackground = registerColor('list.inactiveFocusBackground', { dark: null, light: null, hc: null }, nls.localize('listInactiveFocusBackground', \"List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusOutline = registerColor('list.inactiveFocusOutline', { dark: null, light: null, hc: null }, nls.localize('listInactiveFocusOutline', \"List/Tree outline color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listHoverBackground = registerColor('list.hoverBackground', { dark: '#2A2D2E', light: '#F0F0F0', hc: null }, nls.localize('listHoverBackground', \"List/Tree background when hovering over items using the mouse.\"));\nexport const listHoverForeground = registerColor('list.hoverForeground', { dark: null, light: null, hc: null }, nls.localize('listHoverForeground', \"List/Tree foreground when hovering over items using the mouse.\"));\nexport const listDropBackground = registerColor('list.dropBackground', { dark: '#062F4A', light: '#D6EBFF', hc: null }, nls.localize('listDropBackground', \"List/Tree drag and drop background when moving items around using the mouse.\"));\nexport const listHighlightForeground = registerColor('list.highlightForeground', { dark: '#18A3FF', light: '#0066BF', hc: focusBorder }, nls.localize('highlight', 'List/Tree foreground color of the match highlights when searching inside the list/tree.'));\nexport const listFocusHighlightForeground = registerColor('list.focusHighlightForeground', { dark: listHighlightForeground, light: ifDefinedThenElse(listActiveSelectionBackground, listHighlightForeground, '#9DDDFF'), hc: listHighlightForeground }, nls.localize('listFocusHighlightForeground', 'List/Tree foreground color of the match highlights on actively focused items when searching inside the list/tree.'));\nexport const listInvalidItemForeground = registerColor('list.invalidItemForeground', { dark: '#B89500', light: '#B89500', hc: '#B89500' }, nls.localize('invalidItemForeground', 'List/Tree foreground color for invalid items, for example an unresolved root in explorer.'));\nexport const listErrorForeground = registerColor('list.errorForeground', { dark: '#F88070', light: '#B01011', hc: null }, nls.localize('listErrorForeground', 'Foreground color of list items containing errors.'));\nexport const listWarningForeground = registerColor('list.warningForeground', { dark: '#CCA700', light: '#855F00', hc: null }, nls.localize('listWarningForeground', 'Foreground color of list items containing warnings.'));\nexport const listFilterWidgetBackground = registerColor('listFilterWidget.background', { light: '#efc1ad', dark: '#653723', hc: Color.black }, nls.localize('listFilterWidgetBackground', 'Background color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetOutline = registerColor('listFilterWidget.outline', { dark: Color.transparent, light: Color.transparent, hc: '#f38518' }, nls.localize('listFilterWidgetOutline', 'Outline color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetNoMatchesOutline = registerColor('listFilterWidget.noMatchesOutline', { dark: '#BE1100', light: '#BE1100', hc: contrastBorder }, nls.localize('listFilterWidgetNoMatchesOutline', 'Outline color of the type filter widget in lists and trees, when there are no matches.'));\nexport const listFilterMatchHighlight = registerColor('list.filterMatchBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hc: null }, nls.localize('listFilterMatchHighlight', 'Background color of the filtered match.'));\nexport const listFilterMatchHighlightBorder = registerColor('list.filterMatchBorder', { dark: editorFindMatchHighlightBorder, light: editorFindMatchHighlightBorder, hc: contrastBorder }, nls.localize('listFilterMatchHighlightBorder', 'Border color of the filtered match.'));\nexport const treeIndentGuidesStroke = registerColor('tree.indentGuidesStroke', { dark: '#585858', light: '#a9a9a9', hc: '#a9a9a9' }, nls.localize('treeIndentGuidesStroke', \"Tree stroke color for the indentation guides.\"));\nexport const tableColumnsBorder = registerColor('tree.tableColumnsBorder', { dark: '#CCCCCC20', light: '#61616120', hc: null }, nls.localize('tableColumnsBorder', \"Table border color between columns.\"));\nexport const tableOddRowsBackgroundColor = registerColor('tree.tableOddRowsBackground', { dark: transparent(foreground, 0.04), light: transparent(foreground, 0.04), hc: null }, nls.localize('tableOddRowsBackgroundColor', \"Background color for odd table rows.\"));\nexport const listDeemphasizedForeground = registerColor('list.deemphasizedForeground', { dark: '#8C8C8C', light: '#8E8E90', hc: '#A7A8A9' }, nls.localize('listDeemphasizedForeground', \"List/Tree foreground color for items that are deemphasized. \"));\n/**\n * Quick pick widget (dependent on List and tree colors)\n */\nexport const _deprecatedQuickInputListFocusBackground = registerColor('quickInput.list.focusBackground', { dark: null, light: null, hc: null }, '', undefined, nls.localize('quickInput.list.focusBackground deprecation', \"Please use quickInputList.focusBackground instead\"));\nexport const quickInputListFocusForeground = registerColor('quickInputList.focusForeground', { dark: listActiveSelectionForeground, light: listActiveSelectionForeground, hc: listActiveSelectionForeground }, nls.localize('quickInput.listFocusForeground', \"Quick picker foreground color for the focused item.\"));\nexport const quickInputListFocusIconForeground = registerColor('quickInputList.focusIconForeground', { dark: listActiveSelectionIconForeground, light: listActiveSelectionIconForeground, hc: listActiveSelectionIconForeground }, nls.localize('quickInput.listFocusIconForeground', \"Quick picker icon foreground color for the focused item.\"));\nexport const quickInputListFocusBackground = registerColor('quickInputList.focusBackground', { dark: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), light: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), hc: null }, nls.localize('quickInput.listFocusBackground', \"Quick picker background color for the focused item.\"));\n/**\n * Menu colors\n */\nexport const menuBorder = registerColor('menu.border', { dark: null, light: null, hc: contrastBorder }, nls.localize('menuBorder', \"Border color of menus.\"));\nexport const menuForeground = registerColor('menu.foreground', { dark: selectForeground, light: foreground, hc: selectForeground }, nls.localize('menuForeground', \"Foreground color of menu items.\"));\nexport const menuBackground = registerColor('menu.background', { dark: selectBackground, light: selectBackground, hc: selectBackground }, nls.localize('menuBackground', \"Background color of menu items.\"));\nexport const menuSelectionForeground = registerColor('menu.selectionForeground', { dark: listActiveSelectionForeground, light: listActiveSelectionForeground, hc: listActiveSelectionForeground }, nls.localize('menuSelectionForeground', \"Foreground color of the selected menu item in menus.\"));\nexport const menuSelectionBackground = registerColor('menu.selectionBackground', { dark: listActiveSelectionBackground, light: listActiveSelectionBackground, hc: listActiveSelectionBackground }, nls.localize('menuSelectionBackground', \"Background color of the selected menu item in menus.\"));\nexport const menuSelectionBorder = registerColor('menu.selectionBorder', { dark: null, light: null, hc: activeContrastBorder }, nls.localize('menuSelectionBorder', \"Border color of the selected menu item in menus.\"));\nexport const menuSeparatorBackground = registerColor('menu.separatorBackground', { dark: '#BBBBBB', light: '#888888', hc: contrastBorder }, nls.localize('menuSeparatorBackground', \"Color of a separator menu item in menus.\"));\n/**\n * Toolbar colors\n */\nexport const toolbarHoverBackground = registerColor('toolbar.hoverBackground', { dark: '#5a5d5e50', light: '#b8b8b850', hc: null }, nls.localize('toolbarHoverBackground', \"Toolbar background when hovering over actions using the mouse\"));\nexport const toolbarHoverOutline = registerColor('toolbar.hoverOutline', { dark: null, light: null, hc: activeContrastBorder }, nls.localize('toolbarHoverOutline', \"Toolbar outline when hovering over actions using the mouse\"));\nexport const toolbarActiveBackground = registerColor('toolbar.activeBackground', { dark: lighten(toolbarHoverBackground, 0.1), light: darken(toolbarHoverBackground, 0.1), hc: null }, nls.localize('toolbarActiveBackground', \"Toolbar background when holding the mouse over actions\"));\n/**\n * Snippet placeholder colors\n */\nexport const snippetTabstopHighlightBackground = registerColor('editor.snippetTabstopHighlightBackground', { dark: new Color(new RGBA(124, 124, 124, 0.3)), light: new Color(new RGBA(10, 50, 100, 0.2)), hc: new Color(new RGBA(124, 124, 124, 0.3)) }, nls.localize('snippetTabstopHighlightBackground', \"Highlight background color of a snippet tabstop.\"));\nexport const snippetTabstopHighlightBorder = registerColor('editor.snippetTabstopHighlightBorder', { dark: null, light: null, hc: null }, nls.localize('snippetTabstopHighlightBorder', \"Highlight border color of a snippet tabstop.\"));\nexport const snippetFinalTabstopHighlightBackground = registerColor('editor.snippetFinalTabstopHighlightBackground', { dark: null, light: null, hc: null }, nls.localize('snippetFinalTabstopHighlightBackground', \"Highlight background color of the final tabstop of a snippet.\"));\nexport const snippetFinalTabstopHighlightBorder = registerColor('editor.snippetFinalTabstopHighlightBorder', { dark: '#525252', light: new Color(new RGBA(10, 50, 100, 0.5)), hc: '#525252' }, nls.localize('snippetFinalTabstopHighlightBorder', \"Highlight border color of the final tabstop of a snippet.\"));\n/**\n * Breadcrumb colors\n */\nexport const breadcrumbsForeground = registerColor('breadcrumb.foreground', { light: transparent(foreground, 0.8), dark: transparent(foreground, 0.8), hc: transparent(foreground, 0.8) }, nls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\nexport const breadcrumbsBackground = registerColor('breadcrumb.background', { light: editorBackground, dark: editorBackground, hc: editorBackground }, nls.localize('breadcrumbsBackground', \"Background color of breadcrumb items.\"));\nexport const breadcrumbsFocusForeground = registerColor('breadcrumb.focusForeground', { light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hc: lighten(foreground, 0.1) }, nls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\nexport const breadcrumbsActiveSelectionForeground = registerColor('breadcrumb.activeSelectionForeground', { light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hc: lighten(foreground, 0.1) }, nls.localize('breadcrumbsSelectedForegound', \"Color of selected breadcrumb items.\"));\nexport const breadcrumbsPickerBackground = registerColor('breadcrumbPicker.background', { light: editorWidgetBackground, dark: editorWidgetBackground, hc: editorWidgetBackground }, nls.localize('breadcrumbsSelectedBackground', \"Background color of breadcrumb item picker.\"));\n/**\n * Merge-conflict colors\n */\nconst headerTransparency = 0.5;\nconst currentBaseColor = Color.fromHex('#40C8AE').transparent(headerTransparency);\nconst incomingBaseColor = Color.fromHex('#40A6FF').transparent(headerTransparency);\nconst commonBaseColor = Color.fromHex('#606060').transparent(0.4);\nconst contentTransparency = 0.4;\nconst rulerTransparency = 1;\nexport const mergeCurrentHeaderBackground = registerColor('merge.currentHeaderBackground', { dark: currentBaseColor, light: currentBaseColor, hc: null }, nls.localize('mergeCurrentHeaderBackground', 'Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCurrentContentBackground = registerColor('merge.currentContentBackground', { dark: transparent(mergeCurrentHeaderBackground, contentTransparency), light: transparent(mergeCurrentHeaderBackground, contentTransparency), hc: transparent(mergeCurrentHeaderBackground, contentTransparency) }, nls.localize('mergeCurrentContentBackground', 'Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeIncomingHeaderBackground = registerColor('merge.incomingHeaderBackground', { dark: incomingBaseColor, light: incomingBaseColor, hc: null }, nls.localize('mergeIncomingHeaderBackground', 'Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeIncomingContentBackground = registerColor('merge.incomingContentBackground', { dark: transparent(mergeIncomingHeaderBackground, contentTransparency), light: transparent(mergeIncomingHeaderBackground, contentTransparency), hc: transparent(mergeIncomingHeaderBackground, contentTransparency) }, nls.localize('mergeIncomingContentBackground', 'Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCommonHeaderBackground = registerColor('merge.commonHeaderBackground', { dark: commonBaseColor, light: commonBaseColor, hc: null }, nls.localize('mergeCommonHeaderBackground', 'Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCommonContentBackground = registerColor('merge.commonContentBackground', { dark: transparent(mergeCommonHeaderBackground, contentTransparency), light: transparent(mergeCommonHeaderBackground, contentTransparency), hc: transparent(mergeCommonHeaderBackground, contentTransparency) }, nls.localize('mergeCommonContentBackground', 'Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeBorder = registerColor('merge.border', { dark: null, light: null, hc: '#C3DF6F' }, nls.localize('mergeBorder', 'Border color on headers and the splitter in inline merge-conflicts.'));\nexport const overviewRulerCurrentContentForeground = registerColor('editorOverviewRuler.currentContentForeground', { dark: transparent(mergeCurrentHeaderBackground, rulerTransparency), light: transparent(mergeCurrentHeaderBackground, rulerTransparency), hc: mergeBorder }, nls.localize('overviewRulerCurrentContentForeground', 'Current overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerIncomingContentForeground = registerColor('editorOverviewRuler.incomingContentForeground', { dark: transparent(mergeIncomingHeaderBackground, rulerTransparency), light: transparent(mergeIncomingHeaderBackground, rulerTransparency), hc: mergeBorder }, nls.localize('overviewRulerIncomingContentForeground', 'Incoming overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerCommonContentForeground = registerColor('editorOverviewRuler.commonContentForeground', { dark: transparent(mergeCommonHeaderBackground, rulerTransparency), light: transparent(mergeCommonHeaderBackground, rulerTransparency), hc: mergeBorder }, nls.localize('overviewRulerCommonContentForeground', 'Common ancestor overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerFindMatchForeground = registerColor('editorOverviewRuler.findMatchForeground', { dark: '#d186167e', light: '#d186167e', hc: '#AB5A00' }, nls.localize('overviewRulerFindMatchForeground', 'Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerSelectionHighlightForeground = registerColor('editorOverviewRuler.selectionHighlightForeground', { dark: '#A0A0A0CC', light: '#A0A0A0CC', hc: '#A0A0A0CC' }, nls.localize('overviewRulerSelectionHighlightForeground', 'Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const minimapFindMatch = registerColor('minimap.findMatchHighlight', { light: '#d18616', dark: '#d18616', hc: '#AB5A00' }, nls.localize('minimapFindMatchHighlight', 'Minimap marker color for find matches.'), true);\nexport const minimapSelectionOccurrenceHighlight = registerColor('minimap.selectionOccurrenceHighlight', { light: '#c9c9c9', dark: '#676767', hc: '#ffffff' }, nls.localize('minimapSelectionOccurrenceHighlight', 'Minimap marker color for repeating editor selections.'), true);\nexport const minimapSelection = registerColor('minimap.selectionHighlight', { light: '#ADD6FF', dark: '#264F78', hc: '#ffffff' }, nls.localize('minimapSelectionHighlight', 'Minimap marker color for the editor selection.'), true);\nexport const minimapError = registerColor('minimap.errorHighlight', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hc: new Color(new RGBA(255, 50, 50, 1)) }, nls.localize('minimapError', 'Minimap marker color for errors.'));\nexport const minimapWarning = registerColor('minimap.warningHighlight', { dark: editorWarningForeground, light: editorWarningForeground, hc: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Minimap marker color for warnings.'));\nexport const minimapBackground = registerColor('minimap.background', { dark: null, light: null, hc: null }, nls.localize('minimapBackground', \"Minimap background color.\"));\nexport const minimapForegroundOpacity = registerColor('minimap.foregroundOpacity', { dark: Color.fromHex('#000f'), light: Color.fromHex('#000f'), hc: Color.fromHex('#000f') }, nls.localize('minimapForegroundOpacity', 'Opacity of foreground elements rendered in the minimap. For example, \"#000000c0\" will render the elements with 75% opacity.'));\nexport const minimapSliderBackground = registerColor('minimapSlider.background', { light: transparent(scrollbarSliderBackground, 0.5), dark: transparent(scrollbarSliderBackground, 0.5), hc: transparent(scrollbarSliderBackground, 0.5) }, nls.localize('minimapSliderBackground', \"Minimap slider background color.\"));\nexport const minimapSliderHoverBackground = registerColor('minimapSlider.hoverBackground', { light: transparent(scrollbarSliderHoverBackground, 0.5), dark: transparent(scrollbarSliderHoverBackground, 0.5), hc: transparent(scrollbarSliderHoverBackground, 0.5) }, nls.localize('minimapSliderHoverBackground', \"Minimap slider background color when hovering.\"));\nexport const minimapSliderActiveBackground = registerColor('minimapSlider.activeBackground', { light: transparent(scrollbarSliderActiveBackground, 0.5), dark: transparent(scrollbarSliderActiveBackground, 0.5), hc: transparent(scrollbarSliderActiveBackground, 0.5) }, nls.localize('minimapSliderActiveBackground', \"Minimap slider background color when clicked on.\"));\nexport const problemsErrorIconForeground = registerColor('problemsErrorIcon.foreground', { dark: editorErrorForeground, light: editorErrorForeground, hc: editorErrorForeground }, nls.localize('problemsErrorIconForeground', \"The color used for the problems error icon.\"));\nexport const problemsWarningIconForeground = registerColor('problemsWarningIcon.foreground', { dark: editorWarningForeground, light: editorWarningForeground, hc: editorWarningForeground }, nls.localize('problemsWarningIconForeground', \"The color used for the problems warning icon.\"));\nexport const problemsInfoIconForeground = registerColor('problemsInfoIcon.foreground', { dark: editorInfoForeground, light: editorInfoForeground, hc: editorInfoForeground }, nls.localize('problemsInfoIconForeground', \"The color used for the problems info icon.\"));\n/**\n * Chart colors\n */\nexport const chartsForeground = registerColor('charts.foreground', { dark: foreground, light: foreground, hc: foreground }, nls.localize('chartsForeground', \"The foreground color used in charts.\"));\nexport const chartsLines = registerColor('charts.lines', { dark: transparent(foreground, .5), light: transparent(foreground, .5), hc: transparent(foreground, .5) }, nls.localize('chartsLines', \"The color used for horizontal lines in charts.\"));\nexport const chartsRed = registerColor('charts.red', { dark: editorErrorForeground, light: editorErrorForeground, hc: editorErrorForeground }, nls.localize('chartsRed', \"The red color used in chart visualizations.\"));\nexport const chartsBlue = registerColor('charts.blue', { dark: editorInfoForeground, light: editorInfoForeground, hc: editorInfoForeground }, nls.localize('chartsBlue', \"The blue color used in chart visualizations.\"));\nexport const chartsYellow = registerColor('charts.yellow', { dark: editorWarningForeground, light: editorWarningForeground, hc: editorWarningForeground }, nls.localize('chartsYellow', \"The yellow color used in chart visualizations.\"));\nexport const chartsOrange = registerColor('charts.orange', { dark: minimapFindMatch, light: minimapFindMatch, hc: minimapFindMatch }, nls.localize('chartsOrange', \"The orange color used in chart visualizations.\"));\nexport const chartsGreen = registerColor('charts.green', { dark: '#89D185', light: '#388A34', hc: '#89D185' }, nls.localize('chartsGreen', \"The green color used in chart visualizations.\"));\nexport const chartsPurple = registerColor('charts.purple', { dark: '#B180D7', light: '#652D90', hc: '#B180D7' }, nls.localize('chartsPurple', \"The purple color used in chart visualizations.\"));\n// ----- color functions\nexport function executeTransform(transform, theme) {\n    var _a, _b, _c;\n    switch (transform.op) {\n        case 0 /* Darken */:\n            return (_a = resolveColorValue(transform.value, theme)) === null || _a === void 0 ? void 0 : _a.darken(transform.factor);\n        case 1 /* Lighten */:\n            return (_b = resolveColorValue(transform.value, theme)) === null || _b === void 0 ? void 0 : _b.lighten(transform.factor);\n        case 2 /* Transparent */:\n            return (_c = resolveColorValue(transform.value, theme)) === null || _c === void 0 ? void 0 : _c.transparent(transform.factor);\n        case 3 /* OneOf */:\n            for (const candidate of transform.values) {\n                const color = resolveColorValue(candidate, theme);\n                if (color) {\n                    return color;\n                }\n            }\n            return undefined;\n        case 5 /* IfDefinedThenElse */:\n            return resolveColorValue(theme.defines(transform.if) ? transform.then : transform.else, theme);\n        case 4 /* LessProminent */: {\n            const from = resolveColorValue(transform.value, theme);\n            if (!from) {\n                return undefined;\n            }\n            const backgroundColor = resolveColorValue(transform.background, theme);\n            if (!backgroundColor) {\n                return from.transparent(transform.factor * transform.transparency);\n            }\n            return from.isDarkerThan(backgroundColor)\n                ? Color.getLighterColor(from, backgroundColor, transform.factor).transparent(transform.transparency)\n                : Color.getDarkerColor(from, backgroundColor, transform.factor).transparent(transform.transparency);\n        }\n        default:\n            throw assertNever(transform);\n    }\n}\nexport function darken(colorValue, factor) {\n    return { op: 0 /* Darken */, value: colorValue, factor };\n}\nexport function lighten(colorValue, factor) {\n    return { op: 1 /* Lighten */, value: colorValue, factor };\n}\nexport function transparent(colorValue, factor) {\n    return { op: 2 /* Transparent */, value: colorValue, factor };\n}\nexport function oneOf(...colorValues) {\n    return { op: 3 /* OneOf */, values: colorValues };\n}\nexport function ifDefinedThenElse(ifArg, thenArg, elseArg) {\n    return { op: 5 /* IfDefinedThenElse */, if: ifArg, then: thenArg, else: elseArg };\n}\nfunction lessProminent(colorValue, backgroundColorValue, factor, transparency) {\n    return { op: 4 /* LessProminent */, value: colorValue, background: backgroundColorValue, factor, transparency };\n}\n// ----- implementation\n/**\n * @param colorValue Resolve a color value in the context of a theme\n */\nexport function resolveColorValue(colorValue, theme) {\n    if (colorValue === null) {\n        return undefined;\n    }\n    else if (typeof colorValue === 'string') {\n        if (colorValue[0] === '#') {\n            return Color.fromHex(colorValue);\n        }\n        return theme.getColor(colorValue);\n    }\n    else if (colorValue instanceof Color) {\n        return colorValue;\n    }\n    else if (typeof colorValue === 'object') {\n        return executeTransform(colorValue, theme);\n    }\n    return undefined;\n}\nexport const workbenchColorsSchemaId = 'vscode://schemas/workbench-colors';\nlet schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(workbenchColorsSchemaId, colorRegistry.getColorSchema());\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(workbenchColorsSchemaId), 200);\ncolorRegistry.onDidChangeSchema(() => {\n    if (!delayer.isScheduled()) {\n        delayer.schedule();\n    }\n});\n// setTimeout(_ => console.log(colorRegistry.toString()), 5000);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Codicon, CSSIcon } from '../../../base/common/codicons.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { localize } from '../../../nls.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport * as platform from '../../registry/common/platform.js';\nimport { ThemeIcon } from './themeService.js';\n// icon registry\nexport const Extensions = {\n    IconContribution: 'base.contributions.icons'\n};\nexport var IconContribution;\n(function (IconContribution) {\n    function getDefinition(contribution, registry) {\n        let definition = contribution.defaults;\n        while (ThemeIcon.isThemeIcon(definition)) {\n            const c = iconRegistry.getIcon(definition.id);\n            if (!c) {\n                return undefined;\n            }\n            definition = c.defaults;\n        }\n        return definition;\n    }\n    IconContribution.getDefinition = getDefinition;\n})(IconContribution || (IconContribution = {}));\nclass IconRegistry {\n    constructor() {\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.iconSchema = {\n            definitions: {\n                icons: {\n                    type: 'object',\n                    properties: {\n                        fontId: { type: 'string', description: localize('iconDefintion.fontId', 'The id of the font to use. If not set, the font that is defined first is used.') },\n                        fontCharacter: { type: 'string', description: localize('iconDefintion.fontCharacter', 'The font character associated with the icon definition.') }\n                    },\n                    additionalProperties: false,\n                    defaultSnippets: [{ body: { fontCharacter: '\\\\\\\\e030' } }]\n                }\n            },\n            type: 'object',\n            properties: {}\n        };\n        this.iconReferenceSchema = { type: 'string', pattern: `^${CSSIcon.iconNameExpression}$`, enum: [], enumDescriptions: [] };\n        this.iconsById = {};\n        this.iconFontsById = {};\n    }\n    registerIcon(id, defaults, description, deprecationMessage) {\n        const existing = this.iconsById[id];\n        if (existing) {\n            if (description && !existing.description) {\n                existing.description = description;\n                this.iconSchema.properties[id].markdownDescription = `${description} $(${id})`;\n                const enumIndex = this.iconReferenceSchema.enum.indexOf(id);\n                if (enumIndex !== -1) {\n                    this.iconReferenceSchema.enumDescriptions[enumIndex] = description;\n                }\n                this._onDidChange.fire();\n            }\n            return existing;\n        }\n        let iconContribution = { id, description, defaults, deprecationMessage };\n        this.iconsById[id] = iconContribution;\n        let propertySchema = { $ref: '#/definitions/icons' };\n        if (deprecationMessage) {\n            propertySchema.deprecationMessage = deprecationMessage;\n        }\n        if (description) {\n            propertySchema.markdownDescription = `${description}: $(${id})`;\n        }\n        this.iconSchema.properties[id] = propertySchema;\n        this.iconReferenceSchema.enum.push(id);\n        this.iconReferenceSchema.enumDescriptions.push(description || '');\n        this._onDidChange.fire();\n        return { id };\n    }\n    getIcons() {\n        return Object.keys(this.iconsById).map(id => this.iconsById[id]);\n    }\n    getIcon(id) {\n        return this.iconsById[id];\n    }\n    getIconSchema() {\n        return this.iconSchema;\n    }\n    toString() {\n        const sorter = (i1, i2) => {\n            return i1.id.localeCompare(i2.id);\n        };\n        const classNames = (i) => {\n            while (ThemeIcon.isThemeIcon(i.defaults)) {\n                i = this.iconsById[i.defaults.id];\n            }\n            return `codicon codicon-${i ? i.id : ''}`;\n        };\n        let reference = [];\n        reference.push(`| preview     | identifier                        | default codicon ID                | description`);\n        reference.push(`| ----------- | --------------------------------- | --------------------------------- | --------------------------------- |`);\n        const contributions = Object.keys(this.iconsById).map(key => this.iconsById[key]);\n        for (const i of contributions.filter(i => !!i.description).sort(sorter)) {\n            reference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|${ThemeIcon.isThemeIcon(i.defaults) ? i.defaults.id : i.id}|${i.description || ''}|`);\n        }\n        reference.push(`| preview     | identifier                        `);\n        reference.push(`| ----------- | --------------------------------- |`);\n        for (const i of contributions.filter(i => !ThemeIcon.isThemeIcon(i.defaults)).sort(sorter)) {\n            reference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|`);\n        }\n        return reference.join('\\n');\n    }\n}\nconst iconRegistry = new IconRegistry();\nplatform.Registry.add(Extensions.IconContribution, iconRegistry);\nexport function registerIcon(id, defaults, description, deprecationMessage) {\n    return iconRegistry.registerIcon(id, defaults, description, deprecationMessage);\n}\nexport function getIconRegistry() {\n    return iconRegistry;\n}\nfunction initialize() {\n    for (const icon of Codicon.getAll()) {\n        iconRegistry.registerIcon(icon.id, icon.definition, icon.description);\n    }\n}\ninitialize();\nexport const iconsSchemaId = 'vscode://schemas/icons';\nlet schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(iconsSchemaId, iconRegistry.getIconSchema());\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(iconsSchemaId), 200);\niconRegistry.onDidChange(() => {\n    if (!delayer.isScheduled()) {\n        delayer.schedule();\n    }\n});\n//setTimeout(_ => console.log(iconRegistry.toString()), 5000);\n// common icons\nexport const widgetClose = registerIcon('widget-close', Codicon.close, localize('widgetClose', 'Icon for the close action in widgets.'));\nexport const gotoPreviousLocation = registerIcon('goto-previous-location', Codicon.arrowUp, localize('previousChangeIcon', 'Icon for goto previous editor location.'));\nexport const gotoNextLocation = registerIcon('goto-next-location', Codicon.arrowDown, localize('nextChangeIcon', 'Icon for goto next editor location.'));\nexport const syncing = ThemeIcon.modify(Codicon.sync, 'spin');\nexport const spinningLoading = ThemeIcon.modify(Codicon.loading, 'spin');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { activeContrastBorder, badgeBackground, badgeForeground, contrastBorder, listActiveSelectionBackground, listActiveSelectionForeground, listActiveSelectionIconForeground, listDropBackground, listFilterWidgetBackground, listFilterWidgetNoMatchesOutline, listFilterWidgetOutline, listFocusBackground, listFocusForeground, listFocusOutline, listHoverBackground, listHoverForeground, listInactiveFocusBackground, listInactiveFocusOutline, listInactiveSelectionBackground, listInactiveSelectionForeground, listInactiveSelectionIconForeground, menuBackground, menuBorder, menuForeground, menuSelectionBackground, menuSelectionBorder, menuSelectionForeground, menuSeparatorBackground, resolveColorValue, scrollbarShadow, scrollbarSliderActiveBackground, scrollbarSliderBackground, scrollbarSliderHoverBackground, tableColumnsBorder, tableOddRowsBackgroundColor, treeIndentGuidesStroke, widgetShadow } from './colorRegistry.js';\nexport function computeStyles(theme, styleMap) {\n    const styles = Object.create(null);\n    for (let key in styleMap) {\n        const value = styleMap[key];\n        if (value) {\n            styles[key] = resolveColorValue(value, theme);\n        }\n    }\n    return styles;\n}\nexport function attachStyler(themeService, styleMap, widgetOrCallback) {\n    function applyStyles() {\n        const styles = computeStyles(themeService.getColorTheme(), styleMap);\n        if (typeof widgetOrCallback === 'function') {\n            widgetOrCallback(styles);\n        }\n        else {\n            widgetOrCallback.style(styles);\n        }\n    }\n    applyStyles();\n    return themeService.onDidColorThemeChange(applyStyles);\n}\nexport function attachBadgeStyler(widget, themeService, style) {\n    return attachStyler(themeService, {\n        badgeBackground: (style === null || style === void 0 ? void 0 : style.badgeBackground) || badgeBackground,\n        badgeForeground: (style === null || style === void 0 ? void 0 : style.badgeForeground) || badgeForeground,\n        badgeBorder: contrastBorder\n    }, widget);\n}\nexport function attachListStyler(widget, themeService, overrides) {\n    return attachStyler(themeService, Object.assign(Object.assign({}, defaultListStyles), (overrides || {})), widget);\n}\nexport const defaultListStyles = {\n    listFocusBackground,\n    listFocusForeground,\n    listFocusOutline,\n    listActiveSelectionBackground,\n    listActiveSelectionForeground,\n    listActiveSelectionIconForeground,\n    listFocusAndSelectionBackground: listActiveSelectionBackground,\n    listFocusAndSelectionForeground: listActiveSelectionForeground,\n    listInactiveSelectionBackground,\n    listInactiveSelectionIconForeground,\n    listInactiveSelectionForeground,\n    listInactiveFocusBackground,\n    listInactiveFocusOutline,\n    listHoverBackground,\n    listHoverForeground,\n    listDropBackground,\n    listSelectionOutline: activeContrastBorder,\n    listHoverOutline: activeContrastBorder,\n    listFilterWidgetBackground,\n    listFilterWidgetOutline,\n    listFilterWidgetNoMatchesOutline,\n    listMatchesShadow: widgetShadow,\n    treeIndentGuidesStroke,\n    tableColumnsBorder,\n    tableOddRowsBackgroundColor\n};\nexport const defaultMenuStyles = {\n    shadowColor: widgetShadow,\n    borderColor: menuBorder,\n    foregroundColor: menuForeground,\n    backgroundColor: menuBackground,\n    selectionForegroundColor: menuSelectionForeground,\n    selectionBackgroundColor: menuSelectionBackground,\n    selectionBorderColor: menuSelectionBorder,\n    separatorColor: menuSeparatorBackground,\n    scrollbarShadow: scrollbarShadow,\n    scrollbarSliderBackground: scrollbarSliderBackground,\n    scrollbarSliderHoverBackground: scrollbarSliderHoverBackground,\n    scrollbarSliderActiveBackground: scrollbarSliderActiveBackground\n};\nexport function attachMenuStyler(widget, themeService, style) {\n    return attachStyler(themeService, Object.assign(Object.assign({}, defaultMenuStyles), style), widget);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Color scheme used by the OS and by color themes.\n */\nexport var ColorScheme;\n(function (ColorScheme) {\n    ColorScheme[\"DARK\"] = \"dark\";\n    ColorScheme[\"LIGHT\"] = \"light\";\n    ColorScheme[\"HIGH_CONTRAST\"] = \"hc\";\n})(ColorScheme || (ColorScheme = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CSSIcon } from '../../../base/common/codicons.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport * as platform from '../../registry/common/platform.js';\nimport { ColorScheme } from './theme.js';\nexport const IThemeService = createDecorator('themeService');\nexport var ThemeColor;\n(function (ThemeColor) {\n    function isThemeColor(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string';\n    }\n    ThemeColor.isThemeColor = isThemeColor;\n})(ThemeColor || (ThemeColor = {}));\nexport function themeColorFromId(id) {\n    return { id };\n}\nexport var ThemeIcon;\n(function (ThemeIcon) {\n    function isThemeIcon(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string' && (typeof obj.color === 'undefined' || ThemeColor.isThemeColor(obj.color));\n    }\n    ThemeIcon.isThemeIcon = isThemeIcon;\n    const _regexFromString = new RegExp(`^\\\\$\\\\((${CSSIcon.iconNameExpression}(?:${CSSIcon.iconModifierExpression})?)\\\\)$`);\n    function fromString(str) {\n        const match = _regexFromString.exec(str);\n        if (!match) {\n            return undefined;\n        }\n        let [, name] = match;\n        return { id: name };\n    }\n    ThemeIcon.fromString = fromString;\n    function fromId(id) {\n        return { id };\n    }\n    ThemeIcon.fromId = fromId;\n    function modify(icon, modifier) {\n        let id = icon.id;\n        const tildeIndex = id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            id = id.substring(0, tildeIndex);\n        }\n        if (modifier) {\n            id = `${id}~${modifier}`;\n        }\n        return { id };\n    }\n    ThemeIcon.modify = modify;\n    function getModifier(icon) {\n        const tildeIndex = icon.id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            return icon.id.substring(tildeIndex + 1);\n        }\n        return undefined;\n    }\n    ThemeIcon.getModifier = getModifier;\n    function isEqual(ti1, ti2) {\n        var _a, _b;\n        return ti1.id === ti2.id && ((_a = ti1.color) === null || _a === void 0 ? void 0 : _a.id) === ((_b = ti2.color) === null || _b === void 0 ? void 0 : _b.id);\n    }\n    ThemeIcon.isEqual = isEqual;\n    function asThemeIcon(codicon, color) {\n        return { id: codicon.id, color: color ? themeColorFromId(color) : undefined };\n    }\n    ThemeIcon.asThemeIcon = asThemeIcon;\n    ThemeIcon.asClassNameArray = CSSIcon.asClassNameArray;\n    ThemeIcon.asClassName = CSSIcon.asClassName;\n    ThemeIcon.asCSSSelector = CSSIcon.asCSSSelector;\n})(ThemeIcon || (ThemeIcon = {}));\nexport function getThemeTypeSelector(type) {\n    switch (type) {\n        case ColorScheme.DARK: return 'vs-dark';\n        case ColorScheme.HIGH_CONTRAST: return 'hc-black';\n        default: return 'vs';\n    }\n}\n// static theming participant\nexport const Extensions = {\n    ThemingContribution: 'base.contributions.theming'\n};\nclass ThemingRegistry {\n    constructor() {\n        this.themingParticipants = [];\n        this.themingParticipants = [];\n        this.onThemingParticipantAddedEmitter = new Emitter();\n    }\n    onColorThemeChange(participant) {\n        this.themingParticipants.push(participant);\n        this.onThemingParticipantAddedEmitter.fire(participant);\n        return toDisposable(() => {\n            const idx = this.themingParticipants.indexOf(participant);\n            this.themingParticipants.splice(idx, 1);\n        });\n    }\n    getThemingParticipants() {\n        return this.themingParticipants;\n    }\n}\nlet themingRegistry = new ThemingRegistry();\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\nexport function registerThemingParticipant(participant) {\n    return themingRegistry.onColorThemeChange(participant);\n}\n/**\n * Utility base class for all themable components.\n */\nexport class Themable extends Disposable {\n    constructor(themeService) {\n        super();\n        this.themeService = themeService;\n        this.theme = themeService.getColorTheme();\n        // Hook up to theme changes\n        this._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\n    }\n    onThemeChange(theme) {\n        this.theme = theme;\n        this.updateStyles();\n    }\n    updateStyles() {\n        // Subclasses to override\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IUndoRedoService = createDecorator('undoRedoService');\nexport class ResourceEditStackSnapshot {\n    constructor(resource, elements) {\n        this.resource = resource;\n        this.elements = elements;\n    }\n}\nexport class UndoRedoGroup {\n    constructor() {\n        this.id = UndoRedoGroup._ID++;\n        this.order = 1;\n    }\n    nextOrder() {\n        if (this.id === 0) {\n            return 0;\n        }\n        return this.order++;\n    }\n}\nUndoRedoGroup._ID = 0;\nUndoRedoGroup.None = new UndoRedoGroup();\nexport class UndoRedoSource {\n    constructor() {\n        this.id = UndoRedoSource._ID++;\n        this.order = 1;\n    }\n    nextOrder() {\n        if (this.id === 0) {\n            return 0;\n        }\n        return this.order++;\n    }\n}\nUndoRedoSource._ID = 0;\nUndoRedoSource.None = new UndoRedoSource();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Disposable, isDisposable } from '../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport Severity from '../../../base/common/severity.js';\nimport * as nls from '../../../nls.js';\nimport { IDialogService } from '../../dialogs/common/dialogs.js';\nimport { registerSingleton } from '../../instantiation/common/extensions.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { IUndoRedoService, ResourceEditStackSnapshot, UndoRedoGroup, UndoRedoSource } from './undoRedo.js';\nconst DEBUG = false;\nfunction getResourceLabel(resource) {\n    return resource.scheme === Schemas.file ? resource.fsPath : resource.path;\n}\nlet stackElementCounter = 0;\nclass ResourceStackElement {\n    constructor(actual, resourceLabel, strResource, groupId, groupOrder, sourceId, sourceOrder) {\n        this.id = (++stackElementCounter);\n        this.type = 0 /* Resource */;\n        this.actual = actual;\n        this.label = actual.label;\n        this.confirmBeforeUndo = actual.confirmBeforeUndo || false;\n        this.resourceLabel = resourceLabel;\n        this.strResource = strResource;\n        this.resourceLabels = [this.resourceLabel];\n        this.strResources = [this.strResource];\n        this.groupId = groupId;\n        this.groupOrder = groupOrder;\n        this.sourceId = sourceId;\n        this.sourceOrder = sourceOrder;\n        this.isValid = true;\n    }\n    setValid(isValid) {\n        this.isValid = isValid;\n    }\n    toString() {\n        return `[id:${this.id}] [group:${this.groupId}] [${this.isValid ? '  VALID' : 'INVALID'}] ${this.actual.constructor.name} - ${this.actual}`;\n    }\n}\nclass ResourceReasonPair {\n    constructor(resourceLabel, reason) {\n        this.resourceLabel = resourceLabel;\n        this.reason = reason;\n    }\n}\nclass RemovedResources {\n    constructor() {\n        this.elements = new Map();\n    }\n    createMessage() {\n        const externalRemoval = [];\n        const noParallelUniverses = [];\n        for (const [, element] of this.elements) {\n            const dest = (element.reason === 0 /* ExternalRemoval */\n                ? externalRemoval\n                : noParallelUniverses);\n            dest.push(element.resourceLabel);\n        }\n        let messages = [];\n        if (externalRemoval.length > 0) {\n            messages.push(nls.localize({ key: 'externalRemoval', comment: ['{0} is a list of filenames'] }, \"The following files have been closed and modified on disk: {0}.\", externalRemoval.join(', ')));\n        }\n        if (noParallelUniverses.length > 0) {\n            messages.push(nls.localize({ key: 'noParallelUniverses', comment: ['{0} is a list of filenames'] }, \"The following files have been modified in an incompatible way: {0}.\", noParallelUniverses.join(', ')));\n        }\n        return messages.join('\\n');\n    }\n    get size() {\n        return this.elements.size;\n    }\n    has(strResource) {\n        return this.elements.has(strResource);\n    }\n    set(strResource, value) {\n        this.elements.set(strResource, value);\n    }\n    delete(strResource) {\n        return this.elements.delete(strResource);\n    }\n}\nclass WorkspaceStackElement {\n    constructor(actual, resourceLabels, strResources, groupId, groupOrder, sourceId, sourceOrder) {\n        this.id = (++stackElementCounter);\n        this.type = 1 /* Workspace */;\n        this.actual = actual;\n        this.label = actual.label;\n        this.confirmBeforeUndo = actual.confirmBeforeUndo || false;\n        this.resourceLabels = resourceLabels;\n        this.strResources = strResources;\n        this.groupId = groupId;\n        this.groupOrder = groupOrder;\n        this.sourceId = sourceId;\n        this.sourceOrder = sourceOrder;\n        this.removedResources = null;\n        this.invalidatedResources = null;\n    }\n    canSplit() {\n        return (typeof this.actual.split === 'function');\n    }\n    removeResource(resourceLabel, strResource, reason) {\n        if (!this.removedResources) {\n            this.removedResources = new RemovedResources();\n        }\n        if (!this.removedResources.has(strResource)) {\n            this.removedResources.set(strResource, new ResourceReasonPair(resourceLabel, reason));\n        }\n    }\n    setValid(resourceLabel, strResource, isValid) {\n        if (isValid) {\n            if (this.invalidatedResources) {\n                this.invalidatedResources.delete(strResource);\n                if (this.invalidatedResources.size === 0) {\n                    this.invalidatedResources = null;\n                }\n            }\n        }\n        else {\n            if (!this.invalidatedResources) {\n                this.invalidatedResources = new RemovedResources();\n            }\n            if (!this.invalidatedResources.has(strResource)) {\n                this.invalidatedResources.set(strResource, new ResourceReasonPair(resourceLabel, 0 /* ExternalRemoval */));\n            }\n        }\n    }\n    toString() {\n        return `[id:${this.id}] [group:${this.groupId}] [${this.invalidatedResources ? 'INVALID' : '  VALID'}] ${this.actual.constructor.name} - ${this.actual}`;\n    }\n}\nclass ResourceEditStack {\n    constructor(resourceLabel, strResource) {\n        this.resourceLabel = resourceLabel;\n        this.strResource = strResource;\n        this._past = [];\n        this._future = [];\n        this.locked = false;\n        this.versionId = 1;\n    }\n    dispose() {\n        for (const element of this._past) {\n            if (element.type === 1 /* Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* ExternalRemoval */);\n            }\n        }\n        for (const element of this._future) {\n            if (element.type === 1 /* Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* ExternalRemoval */);\n            }\n        }\n        this.versionId++;\n    }\n    toString() {\n        let result = [];\n        result.push(`* ${this.strResource}:`);\n        for (let i = 0; i < this._past.length; i++) {\n            result.push(`   * [UNDO] ${this._past[i]}`);\n        }\n        for (let i = this._future.length - 1; i >= 0; i--) {\n            result.push(`   * [REDO] ${this._future[i]}`);\n        }\n        return result.join('\\n');\n    }\n    flushAllElements() {\n        this._past = [];\n        this._future = [];\n        this.versionId++;\n    }\n    _setElementValidFlag(element, isValid) {\n        if (element.type === 1 /* Workspace */) {\n            element.setValid(this.resourceLabel, this.strResource, isValid);\n        }\n        else {\n            element.setValid(isValid);\n        }\n    }\n    setElementsValidFlag(isValid, filter) {\n        for (const element of this._past) {\n            if (filter(element.actual)) {\n                this._setElementValidFlag(element, isValid);\n            }\n        }\n        for (const element of this._future) {\n            if (filter(element.actual)) {\n                this._setElementValidFlag(element, isValid);\n            }\n        }\n    }\n    pushElement(element) {\n        // remove the future\n        for (const futureElement of this._future) {\n            if (futureElement.type === 1 /* Workspace */) {\n                futureElement.removeResource(this.resourceLabel, this.strResource, 1 /* NoParallelUniverses */);\n            }\n        }\n        this._future = [];\n        this._past.push(element);\n        this.versionId++;\n    }\n    createSnapshot(resource) {\n        const elements = [];\n        for (let i = 0, len = this._past.length; i < len; i++) {\n            elements.push(this._past[i].id);\n        }\n        for (let i = this._future.length - 1; i >= 0; i--) {\n            elements.push(this._future[i].id);\n        }\n        return new ResourceEditStackSnapshot(resource, elements);\n    }\n    restoreSnapshot(snapshot) {\n        const snapshotLength = snapshot.elements.length;\n        let isOK = true;\n        let snapshotIndex = 0;\n        let removePastAfter = -1;\n        for (let i = 0, len = this._past.length; i < len; i++, snapshotIndex++) {\n            const element = this._past[i];\n            if (isOK && (snapshotIndex >= snapshotLength || element.id !== snapshot.elements[snapshotIndex])) {\n                isOK = false;\n                removePastAfter = 0;\n            }\n            if (!isOK && element.type === 1 /* Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* ExternalRemoval */);\n            }\n        }\n        let removeFutureBefore = -1;\n        for (let i = this._future.length - 1; i >= 0; i--, snapshotIndex++) {\n            const element = this._future[i];\n            if (isOK && (snapshotIndex >= snapshotLength || element.id !== snapshot.elements[snapshotIndex])) {\n                isOK = false;\n                removeFutureBefore = i;\n            }\n            if (!isOK && element.type === 1 /* Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* ExternalRemoval */);\n            }\n        }\n        if (removePastAfter !== -1) {\n            this._past = this._past.slice(0, removePastAfter);\n        }\n        if (removeFutureBefore !== -1) {\n            this._future = this._future.slice(removeFutureBefore + 1);\n        }\n        this.versionId++;\n    }\n    getElements() {\n        const past = [];\n        const future = [];\n        for (const element of this._past) {\n            past.push(element.actual);\n        }\n        for (const element of this._future) {\n            future.push(element.actual);\n        }\n        return { past, future };\n    }\n    getClosestPastElement() {\n        if (this._past.length === 0) {\n            return null;\n        }\n        return this._past[this._past.length - 1];\n    }\n    getSecondClosestPastElement() {\n        if (this._past.length < 2) {\n            return null;\n        }\n        return this._past[this._past.length - 2];\n    }\n    getClosestFutureElement() {\n        if (this._future.length === 0) {\n            return null;\n        }\n        return this._future[this._future.length - 1];\n    }\n    hasPastElements() {\n        return (this._past.length > 0);\n    }\n    hasFutureElements() {\n        return (this._future.length > 0);\n    }\n    splitPastWorkspaceElement(toRemove, individualMap) {\n        for (let j = this._past.length - 1; j >= 0; j--) {\n            if (this._past[j] === toRemove) {\n                if (individualMap.has(this.strResource)) {\n                    // gets replaced\n                    this._past[j] = individualMap.get(this.strResource);\n                }\n                else {\n                    // gets deleted\n                    this._past.splice(j, 1);\n                }\n                break;\n            }\n        }\n        this.versionId++;\n    }\n    splitFutureWorkspaceElement(toRemove, individualMap) {\n        for (let j = this._future.length - 1; j >= 0; j--) {\n            if (this._future[j] === toRemove) {\n                if (individualMap.has(this.strResource)) {\n                    // gets replaced\n                    this._future[j] = individualMap.get(this.strResource);\n                }\n                else {\n                    // gets deleted\n                    this._future.splice(j, 1);\n                }\n                break;\n            }\n        }\n        this.versionId++;\n    }\n    moveBackward(element) {\n        this._past.pop();\n        this._future.push(element);\n        this.versionId++;\n    }\n    moveForward(element) {\n        this._future.pop();\n        this._past.push(element);\n        this.versionId++;\n    }\n}\nclass EditStackSnapshot {\n    constructor(editStacks) {\n        this.editStacks = editStacks;\n        this._versionIds = [];\n        for (let i = 0, len = this.editStacks.length; i < len; i++) {\n            this._versionIds[i] = this.editStacks[i].versionId;\n        }\n    }\n    isValid() {\n        for (let i = 0, len = this.editStacks.length; i < len; i++) {\n            if (this._versionIds[i] !== this.editStacks[i].versionId) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nconst missingEditStack = new ResourceEditStack('', '');\nmissingEditStack.locked = true;\nlet UndoRedoService = class UndoRedoService {\n    constructor(_dialogService, _notificationService) {\n        this._dialogService = _dialogService;\n        this._notificationService = _notificationService;\n        this._editStacks = new Map();\n        this._uriComparisonKeyComputers = [];\n    }\n    getUriComparisonKey(resource) {\n        for (const uriComparisonKeyComputer of this._uriComparisonKeyComputers) {\n            if (uriComparisonKeyComputer[0] === resource.scheme) {\n                return uriComparisonKeyComputer[1].getComparisonKey(resource);\n            }\n        }\n        return resource.toString();\n    }\n    _print(label) {\n        console.log(`------------------------------------`);\n        console.log(`AFTER ${label}: `);\n        let str = [];\n        for (const element of this._editStacks) {\n            str.push(element[1].toString());\n        }\n        console.log(str.join('\\n'));\n    }\n    pushElement(element, group = UndoRedoGroup.None, source = UndoRedoSource.None) {\n        if (element.type === 0 /* Resource */) {\n            const resourceLabel = getResourceLabel(element.resource);\n            const strResource = this.getUriComparisonKey(element.resource);\n            this._pushElement(new ResourceStackElement(element, resourceLabel, strResource, group.id, group.nextOrder(), source.id, source.nextOrder()));\n        }\n        else {\n            const seen = new Set();\n            const resourceLabels = [];\n            const strResources = [];\n            for (const resource of element.resources) {\n                const resourceLabel = getResourceLabel(resource);\n                const strResource = this.getUriComparisonKey(resource);\n                if (seen.has(strResource)) {\n                    continue;\n                }\n                seen.add(strResource);\n                resourceLabels.push(resourceLabel);\n                strResources.push(strResource);\n            }\n            if (resourceLabels.length === 1) {\n                this._pushElement(new ResourceStackElement(element, resourceLabels[0], strResources[0], group.id, group.nextOrder(), source.id, source.nextOrder()));\n            }\n            else {\n                this._pushElement(new WorkspaceStackElement(element, resourceLabels, strResources, group.id, group.nextOrder(), source.id, source.nextOrder()));\n            }\n        }\n        if (DEBUG) {\n            this._print('pushElement');\n        }\n    }\n    _pushElement(element) {\n        for (let i = 0, len = element.strResources.length; i < len; i++) {\n            const resourceLabel = element.resourceLabels[i];\n            const strResource = element.strResources[i];\n            let editStack;\n            if (this._editStacks.has(strResource)) {\n                editStack = this._editStacks.get(strResource);\n            }\n            else {\n                editStack = new ResourceEditStack(resourceLabel, strResource);\n                this._editStacks.set(strResource, editStack);\n            }\n            editStack.pushElement(element);\n        }\n    }\n    getLastElement(resource) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            if (editStack.hasFutureElements()) {\n                return null;\n            }\n            const closestPastElement = editStack.getClosestPastElement();\n            return closestPastElement ? closestPastElement.actual : null;\n        }\n        return null;\n    }\n    _splitPastWorkspaceElement(toRemove, ignoreResources) {\n        const individualArr = toRemove.actual.split();\n        const individualMap = new Map();\n        for (const _element of individualArr) {\n            const resourceLabel = getResourceLabel(_element.resource);\n            const strResource = this.getUriComparisonKey(_element.resource);\n            const element = new ResourceStackElement(_element, resourceLabel, strResource, 0, 0, 0, 0);\n            individualMap.set(element.strResource, element);\n        }\n        for (const strResource of toRemove.strResources) {\n            if (ignoreResources && ignoreResources.has(strResource)) {\n                continue;\n            }\n            const editStack = this._editStacks.get(strResource);\n            editStack.splitPastWorkspaceElement(toRemove, individualMap);\n        }\n    }\n    _splitFutureWorkspaceElement(toRemove, ignoreResources) {\n        const individualArr = toRemove.actual.split();\n        const individualMap = new Map();\n        for (const _element of individualArr) {\n            const resourceLabel = getResourceLabel(_element.resource);\n            const strResource = this.getUriComparisonKey(_element.resource);\n            const element = new ResourceStackElement(_element, resourceLabel, strResource, 0, 0, 0, 0);\n            individualMap.set(element.strResource, element);\n        }\n        for (const strResource of toRemove.strResources) {\n            if (ignoreResources && ignoreResources.has(strResource)) {\n                continue;\n            }\n            const editStack = this._editStacks.get(strResource);\n            editStack.splitFutureWorkspaceElement(toRemove, individualMap);\n        }\n    }\n    removeElements(resource) {\n        const strResource = typeof resource === 'string' ? resource : this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            editStack.dispose();\n            this._editStacks.delete(strResource);\n        }\n        if (DEBUG) {\n            this._print('removeElements');\n        }\n    }\n    setElementsValidFlag(resource, isValid, filter) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            editStack.setElementsValidFlag(isValid, filter);\n        }\n        if (DEBUG) {\n            this._print('setElementsValidFlag');\n        }\n    }\n    createSnapshot(resource) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.createSnapshot(resource);\n        }\n        return new ResourceEditStackSnapshot(resource, []);\n    }\n    restoreSnapshot(snapshot) {\n        const strResource = this.getUriComparisonKey(snapshot.resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            editStack.restoreSnapshot(snapshot);\n            if (!editStack.hasPastElements() && !editStack.hasFutureElements()) {\n                // the edit stack is now empty, just remove it entirely\n                editStack.dispose();\n                this._editStacks.delete(strResource);\n            }\n        }\n        if (DEBUG) {\n            this._print('restoreSnapshot');\n        }\n    }\n    getElements(resource) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.getElements();\n        }\n        return { past: [], future: [] };\n    }\n    _findClosestUndoElementWithSource(sourceId) {\n        if (!sourceId) {\n            return [null, null];\n        }\n        // find an element with the sourceId and with the highest sourceOrder ready to be undone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestPastElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.sourceId === sourceId) {\n                if (!matchedElement || candidate.sourceOrder > matchedElement.sourceOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    canUndo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestUndoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? true : false;\n        }\n        const strResource = this.getUriComparisonKey(resourceOrSource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.hasPastElements();\n        }\n        return false;\n    }\n    _onError(err, element) {\n        onUnexpectedError(err);\n        // An error occurred while undoing or redoing => drop the undo/redo stack for all affected resources\n        for (const strResource of element.strResources) {\n            this.removeElements(strResource);\n        }\n        this._notificationService.error(err);\n    }\n    _acquireLocks(editStackSnapshot) {\n        // first, check if all locks can be acquired\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.locked) {\n                throw new Error('Cannot acquire edit stack lock');\n            }\n        }\n        // can acquire all locks\n        for (const editStack of editStackSnapshot.editStacks) {\n            editStack.locked = true;\n        }\n        return () => {\n            // release all locks\n            for (const editStack of editStackSnapshot.editStacks) {\n                editStack.locked = false;\n            }\n        };\n    }\n    _safeInvokeWithLocks(element, invoke, editStackSnapshot, cleanup, continuation) {\n        const releaseLocks = this._acquireLocks(editStackSnapshot);\n        let result;\n        try {\n            result = invoke();\n        }\n        catch (err) {\n            releaseLocks();\n            cleanup.dispose();\n            return this._onError(err, element);\n        }\n        if (result) {\n            // result is Promise<void>\n            return result.then(() => {\n                releaseLocks();\n                cleanup.dispose();\n                return continuation();\n            }, (err) => {\n                releaseLocks();\n                cleanup.dispose();\n                return this._onError(err, element);\n            });\n        }\n        else {\n            // result is void\n            releaseLocks();\n            cleanup.dispose();\n            return continuation();\n        }\n    }\n    _invokeWorkspacePrepare(element) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof element.actual.prepareUndoRedo === 'undefined') {\n                return Disposable.None;\n            }\n            const result = element.actual.prepareUndoRedo();\n            if (typeof result === 'undefined') {\n                return Disposable.None;\n            }\n            return result;\n        });\n    }\n    _invokeResourcePrepare(element, callback) {\n        if (element.actual.type !== 1 /* Workspace */ || typeof element.actual.prepareUndoRedo === 'undefined') {\n            // no preparation needed\n            return callback(Disposable.None);\n        }\n        const r = element.actual.prepareUndoRedo();\n        if (!r) {\n            // nothing to clean up\n            return callback(Disposable.None);\n        }\n        if (isDisposable(r)) {\n            return callback(r);\n        }\n        return r.then((disposable) => {\n            return callback(disposable);\n        });\n    }\n    _getAffectedEditStacks(element) {\n        const affectedEditStacks = [];\n        for (const strResource of element.strResources) {\n            affectedEditStacks.push(this._editStacks.get(strResource) || missingEditStack);\n        }\n        return new EditStackSnapshot(affectedEditStacks);\n    }\n    _tryToSplitAndUndo(strResource, element, ignoreResources, message) {\n        if (element.canSplit()) {\n            this._splitPastWorkspaceElement(element, ignoreResources);\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError(this._undo(strResource, 0, true));\n        }\n        else {\n            // Cannot safely split this workspace element => flush all undo/redo stacks\n            for (const strResource of element.strResources) {\n                this.removeElements(strResource);\n            }\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError();\n        }\n    }\n    _checkWorkspaceUndo(strResource, element, editStackSnapshot, checkInvalidatedResources) {\n        if (element.removedResources) {\n            return this._tryToSplitAndUndo(strResource, element, element.removedResources, nls.localize({ key: 'cannotWorkspaceUndo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not undo '{0}' across all files. {1}\", element.label, element.removedResources.createMessage()));\n        }\n        if (checkInvalidatedResources && element.invalidatedResources) {\n            return this._tryToSplitAndUndo(strResource, element, element.invalidatedResources, nls.localize({ key: 'cannotWorkspaceUndo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not undo '{0}' across all files. {1}\", element.label, element.invalidatedResources.createMessage()));\n        }\n        // this must be the last past element in all the impacted resources!\n        const cannotUndoDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.getClosestPastElement() !== element) {\n                cannotUndoDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotUndoDueToResources.length > 0) {\n            return this._tryToSplitAndUndo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceUndoDueToChanges', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not undo '{0}' across all files because changes were made to {1}\", element.label, cannotUndoDueToResources.join(', ')));\n        }\n        const cannotLockDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.locked) {\n                cannotLockDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotLockDueToResources.length > 0) {\n            return this._tryToSplitAndUndo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceUndoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not undo '{0}' across all files because there is already an undo or redo operation running on {1}\", element.label, cannotLockDueToResources.join(', ')));\n        }\n        // check if new stack elements were added in the meantime...\n        if (!editStackSnapshot.isValid()) {\n            return this._tryToSplitAndUndo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceUndoDueToInMeantimeUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not undo '{0}' across all files because an undo or redo operation occurred in the meantime\", element.label));\n        }\n        return null;\n    }\n    _workspaceUndo(strResource, element, undoConfirmed) {\n        const affectedEditStacks = this._getAffectedEditStacks(element);\n        const verificationError = this._checkWorkspaceUndo(strResource, element, affectedEditStacks, /*invalidated resources will be checked after the prepare call*/ false);\n        if (verificationError) {\n            return verificationError.returnValue;\n        }\n        return this._confirmAndExecuteWorkspaceUndo(strResource, element, affectedEditStacks, undoConfirmed);\n    }\n    _isPartOfUndoGroup(element) {\n        if (!element.groupId) {\n            return false;\n        }\n        // check that there is at least another element with the same groupId ready to be undone\n        for (const [, editStack] of this._editStacks) {\n            const pastElement = editStack.getClosestPastElement();\n            if (!pastElement) {\n                continue;\n            }\n            if (pastElement === element) {\n                const secondPastElement = editStack.getSecondClosestPastElement();\n                if (secondPastElement && secondPastElement.groupId === element.groupId) {\n                    // there is another element with the same group id in the same stack!\n                    return true;\n                }\n            }\n            if (pastElement.groupId === element.groupId) {\n                // there is another element with the same group id in another stack!\n                return true;\n            }\n        }\n        return false;\n    }\n    _confirmAndExecuteWorkspaceUndo(strResource, element, editStackSnapshot, undoConfirmed) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (element.canSplit() && !this._isPartOfUndoGroup(element)) {\n                // this element can be split\n                const result = yield this._dialogService.show(Severity.Info, nls.localize('confirmWorkspace', \"Would you like to undo '{0}' across all files?\", element.label), [\n                    nls.localize({ key: 'ok', comment: ['{0} denotes a number that is > 1'] }, \"Undo in {0} Files\", editStackSnapshot.editStacks.length),\n                    nls.localize('nok', \"Undo this File\"),\n                    nls.localize('cancel', \"Cancel\"),\n                ], {\n                    cancelId: 2\n                });\n                if (result.choice === 2) {\n                    // choice: cancel\n                    return;\n                }\n                if (result.choice === 1) {\n                    // choice: undo this file\n                    this._splitPastWorkspaceElement(element, null);\n                    return this._undo(strResource, 0, true);\n                }\n                // choice: undo in all files\n                // At this point, it is possible that the element has been made invalid in the meantime (due to the confirmation await)\n                const verificationError1 = this._checkWorkspaceUndo(strResource, element, editStackSnapshot, /*invalidated resources will be checked after the prepare call*/ false);\n                if (verificationError1) {\n                    return verificationError1.returnValue;\n                }\n                undoConfirmed = true;\n            }\n            // prepare\n            let cleanup;\n            try {\n                cleanup = yield this._invokeWorkspacePrepare(element);\n            }\n            catch (err) {\n                return this._onError(err, element);\n            }\n            // At this point, it is possible that the element has been made invalid in the meantime (due to the prepare await)\n            const verificationError2 = this._checkWorkspaceUndo(strResource, element, editStackSnapshot, /*now also check that there are no more invalidated resources*/ true);\n            if (verificationError2) {\n                cleanup.dispose();\n                return verificationError2.returnValue;\n            }\n            for (const editStack of editStackSnapshot.editStacks) {\n                editStack.moveBackward(element);\n            }\n            return this._safeInvokeWithLocks(element, () => element.actual.undo(), editStackSnapshot, cleanup, () => this._continueUndoInGroup(element.groupId, undoConfirmed));\n        });\n    }\n    _resourceUndo(editStack, element, undoConfirmed) {\n        if (!element.isValid) {\n            // invalid element => immediately flush edit stack!\n            editStack.flushAllElements();\n            return;\n        }\n        if (editStack.locked) {\n            const message = nls.localize({ key: 'cannotResourceUndoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation.'] }, \"Could not undo '{0}' because there is already an undo or redo operation running.\", element.label);\n            this._notificationService.warn(message);\n            return;\n        }\n        return this._invokeResourcePrepare(element, (cleanup) => {\n            editStack.moveBackward(element);\n            return this._safeInvokeWithLocks(element, () => element.actual.undo(), new EditStackSnapshot([editStack]), cleanup, () => this._continueUndoInGroup(element.groupId, undoConfirmed));\n        });\n    }\n    _findClosestUndoElementInGroup(groupId) {\n        if (!groupId) {\n            return [null, null];\n        }\n        // find another element with the same groupId and with the highest groupOrder ready to be undone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestPastElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.groupId === groupId) {\n                if (!matchedElement || candidate.groupOrder > matchedElement.groupOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    _continueUndoInGroup(groupId, undoConfirmed) {\n        if (!groupId) {\n            return;\n        }\n        const [, matchedStrResource] = this._findClosestUndoElementInGroup(groupId);\n        if (matchedStrResource) {\n            return this._undo(matchedStrResource, 0, undoConfirmed);\n        }\n    }\n    undo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestUndoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? this._undo(matchedStrResource, resourceOrSource.id, false) : undefined;\n        }\n        if (typeof resourceOrSource === 'string') {\n            return this._undo(resourceOrSource, 0, false);\n        }\n        return this._undo(this.getUriComparisonKey(resourceOrSource), 0, false);\n    }\n    _undo(strResource, sourceId = 0, undoConfirmed) {\n        if (!this._editStacks.has(strResource)) {\n            return;\n        }\n        const editStack = this._editStacks.get(strResource);\n        const element = editStack.getClosestPastElement();\n        if (!element) {\n            return;\n        }\n        if (element.groupId) {\n            // this element is a part of a group, we need to make sure undoing in a group is in order\n            const [matchedElement, matchedStrResource] = this._findClosestUndoElementInGroup(element.groupId);\n            if (element !== matchedElement && matchedStrResource) {\n                // there is an element in the same group that should be undone before this one\n                return this._undo(matchedStrResource, sourceId, undoConfirmed);\n            }\n        }\n        const shouldPromptForConfirmation = (element.sourceId !== sourceId || element.confirmBeforeUndo);\n        if (shouldPromptForConfirmation && !undoConfirmed) {\n            // Hit a different source or the element asks for prompt before undo, prompt for confirmation\n            return this._confirmAndContinueUndo(strResource, sourceId, element);\n        }\n        try {\n            if (element.type === 1 /* Workspace */) {\n                return this._workspaceUndo(strResource, element, undoConfirmed);\n            }\n            else {\n                return this._resourceUndo(editStack, element, undoConfirmed);\n            }\n        }\n        finally {\n            if (DEBUG) {\n                this._print('undo');\n            }\n        }\n    }\n    _confirmAndContinueUndo(strResource, sourceId, element) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this._dialogService.show(Severity.Info, nls.localize('confirmDifferentSource', \"Would you like to undo '{0}'?\", element.label), [\n                nls.localize('confirmDifferentSource.yes', \"Yes\"),\n                nls.localize('confirmDifferentSource.no', \"No\"),\n            ], {\n                cancelId: 1\n            });\n            if (result.choice === 1) {\n                // choice: cancel\n                return;\n            }\n            // choice: undo\n            return this._undo(strResource, sourceId, true);\n        });\n    }\n    _findClosestRedoElementWithSource(sourceId) {\n        if (!sourceId) {\n            return [null, null];\n        }\n        // find an element with sourceId and with the lowest sourceOrder ready to be redone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestFutureElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.sourceId === sourceId) {\n                if (!matchedElement || candidate.sourceOrder < matchedElement.sourceOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    canRedo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestRedoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? true : false;\n        }\n        const strResource = this.getUriComparisonKey(resourceOrSource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.hasFutureElements();\n        }\n        return false;\n    }\n    _tryToSplitAndRedo(strResource, element, ignoreResources, message) {\n        if (element.canSplit()) {\n            this._splitFutureWorkspaceElement(element, ignoreResources);\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError(this._redo(strResource));\n        }\n        else {\n            // Cannot safely split this workspace element => flush all undo/redo stacks\n            for (const strResource of element.strResources) {\n                this.removeElements(strResource);\n            }\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError();\n        }\n    }\n    _checkWorkspaceRedo(strResource, element, editStackSnapshot, checkInvalidatedResources) {\n        if (element.removedResources) {\n            return this._tryToSplitAndRedo(strResource, element, element.removedResources, nls.localize({ key: 'cannotWorkspaceRedo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not redo '{0}' across all files. {1}\", element.label, element.removedResources.createMessage()));\n        }\n        if (checkInvalidatedResources && element.invalidatedResources) {\n            return this._tryToSplitAndRedo(strResource, element, element.invalidatedResources, nls.localize({ key: 'cannotWorkspaceRedo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not redo '{0}' across all files. {1}\", element.label, element.invalidatedResources.createMessage()));\n        }\n        // this must be the last future element in all the impacted resources!\n        const cannotRedoDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.getClosestFutureElement() !== element) {\n                cannotRedoDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotRedoDueToResources.length > 0) {\n            return this._tryToSplitAndRedo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceRedoDueToChanges', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not redo '{0}' across all files because changes were made to {1}\", element.label, cannotRedoDueToResources.join(', ')));\n        }\n        const cannotLockDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.locked) {\n                cannotLockDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotLockDueToResources.length > 0) {\n            return this._tryToSplitAndRedo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceRedoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not redo '{0}' across all files because there is already an undo or redo operation running on {1}\", element.label, cannotLockDueToResources.join(', ')));\n        }\n        // check if new stack elements were added in the meantime...\n        if (!editStackSnapshot.isValid()) {\n            return this._tryToSplitAndRedo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceRedoDueToInMeantimeUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not redo '{0}' across all files because an undo or redo operation occurred in the meantime\", element.label));\n        }\n        return null;\n    }\n    _workspaceRedo(strResource, element) {\n        const affectedEditStacks = this._getAffectedEditStacks(element);\n        const verificationError = this._checkWorkspaceRedo(strResource, element, affectedEditStacks, /*invalidated resources will be checked after the prepare call*/ false);\n        if (verificationError) {\n            return verificationError.returnValue;\n        }\n        return this._executeWorkspaceRedo(strResource, element, affectedEditStacks);\n    }\n    _executeWorkspaceRedo(strResource, element, editStackSnapshot) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // prepare\n            let cleanup;\n            try {\n                cleanup = yield this._invokeWorkspacePrepare(element);\n            }\n            catch (err) {\n                return this._onError(err, element);\n            }\n            // At this point, it is possible that the element has been made invalid in the meantime (due to the prepare await)\n            const verificationError = this._checkWorkspaceRedo(strResource, element, editStackSnapshot, /*now also check that there are no more invalidated resources*/ true);\n            if (verificationError) {\n                cleanup.dispose();\n                return verificationError.returnValue;\n            }\n            for (const editStack of editStackSnapshot.editStacks) {\n                editStack.moveForward(element);\n            }\n            return this._safeInvokeWithLocks(element, () => element.actual.redo(), editStackSnapshot, cleanup, () => this._continueRedoInGroup(element.groupId));\n        });\n    }\n    _resourceRedo(editStack, element) {\n        if (!element.isValid) {\n            // invalid element => immediately flush edit stack!\n            editStack.flushAllElements();\n            return;\n        }\n        if (editStack.locked) {\n            const message = nls.localize({ key: 'cannotResourceRedoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation.'] }, \"Could not redo '{0}' because there is already an undo or redo operation running.\", element.label);\n            this._notificationService.warn(message);\n            return;\n        }\n        return this._invokeResourcePrepare(element, (cleanup) => {\n            editStack.moveForward(element);\n            return this._safeInvokeWithLocks(element, () => element.actual.redo(), new EditStackSnapshot([editStack]), cleanup, () => this._continueRedoInGroup(element.groupId));\n        });\n    }\n    _findClosestRedoElementInGroup(groupId) {\n        if (!groupId) {\n            return [null, null];\n        }\n        // find another element with the same groupId and with the lowest groupOrder ready to be redone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestFutureElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.groupId === groupId) {\n                if (!matchedElement || candidate.groupOrder < matchedElement.groupOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    _continueRedoInGroup(groupId) {\n        if (!groupId) {\n            return;\n        }\n        const [, matchedStrResource] = this._findClosestRedoElementInGroup(groupId);\n        if (matchedStrResource) {\n            return this._redo(matchedStrResource);\n        }\n    }\n    redo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestRedoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? this._redo(matchedStrResource) : undefined;\n        }\n        if (typeof resourceOrSource === 'string') {\n            return this._redo(resourceOrSource);\n        }\n        return this._redo(this.getUriComparisonKey(resourceOrSource));\n    }\n    _redo(strResource) {\n        if (!this._editStacks.has(strResource)) {\n            return;\n        }\n        const editStack = this._editStacks.get(strResource);\n        const element = editStack.getClosestFutureElement();\n        if (!element) {\n            return;\n        }\n        if (element.groupId) {\n            // this element is a part of a group, we need to make sure redoing in a group is in order\n            const [matchedElement, matchedStrResource] = this._findClosestRedoElementInGroup(element.groupId);\n            if (element !== matchedElement && matchedStrResource) {\n                // there is an element in the same group that should be redone before this one\n                return this._redo(matchedStrResource);\n            }\n        }\n        try {\n            if (element.type === 1 /* Workspace */) {\n                return this._workspaceRedo(strResource, element);\n            }\n            else {\n                return this._resourceRedo(editStack, element);\n            }\n        }\n        finally {\n            if (DEBUG) {\n                this._print('redo');\n            }\n        }\n    }\n};\nUndoRedoService = __decorate([\n    __param(0, IDialogService),\n    __param(1, INotificationService)\n], UndoRedoService);\nexport { UndoRedoService };\nclass WorkspaceVerificationError {\n    constructor(returnValue) {\n        this.returnValue = returnValue;\n    }\n}\nregisterSingleton(IUndoRedoService, UndoRedoService);\n","import { TernarySearchTree } from '../../../base/common/map.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IWorkspaceContextService = createDecorator('contextService');\nexport class Workspace {\n    constructor(_id, folders, _transient, _configuration, _ignorePathCasing) {\n        this._id = _id;\n        this._transient = _transient;\n        this._configuration = _configuration;\n        this._ignorePathCasing = _ignorePathCasing;\n        this._foldersMap = TernarySearchTree.forUris(this._ignorePathCasing);\n        this.folders = folders;\n    }\n    get folders() {\n        return this._folders;\n    }\n    set folders(folders) {\n        this._folders = folders;\n        this.updateFoldersMap();\n    }\n    get id() {\n        return this._id;\n    }\n    get transient() {\n        return this._transient;\n    }\n    get configuration() {\n        return this._configuration;\n    }\n    set configuration(configuration) {\n        this._configuration = configuration;\n    }\n    getFolder(resource) {\n        if (!resource) {\n            return null;\n        }\n        return this._foldersMap.findSubstr(resource.with({\n            scheme: resource.scheme,\n            authority: resource.authority,\n            path: resource.path\n        })) || null;\n    }\n    updateFoldersMap() {\n        this._foldersMap = TernarySearchTree.forUris(this._ignorePathCasing);\n        for (const folder of this.folders) {\n            this._foldersMap.set(folder.uri, folder);\n        }\n    }\n    toJSON() {\n        return { id: this.id, folders: this.folders, transient: this.transient, configuration: this.configuration };\n    }\n}\nexport class WorkspaceFolder {\n    constructor(data, raw) {\n        this.raw = raw;\n        this.uri = data.uri;\n        this.index = data.index;\n        this.name = data.name;\n    }\n    toJSON() {\n        return { uri: this.uri, name: this.name, index: this.index };\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IWorkspaceTrustManagementService = createDecorator('workspaceTrustManagementService');\n","import { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nexport const WORKSPACE_EXTENSION = 'code-workspace';\nexport const WORKSPACE_FILTER = [{ name: localize('codeWorkspace', \"Code Workspace\"), extensions: [WORKSPACE_EXTENSION] }];\nexport function isSingleFolderWorkspaceIdentifier(obj) {\n    const singleFolderIdentifier = obj;\n    return typeof (singleFolderIdentifier === null || singleFolderIdentifier === void 0 ? void 0 : singleFolderIdentifier.id) === 'string' && URI.isUri(singleFolderIdentifier.uri);\n}\nexport function toWorkspaceIdentifier(workspace) {\n    // Multi root\n    if (workspace.configuration) {\n        return {\n            id: workspace.id,\n            configPath: workspace.configuration\n        };\n    }\n    // Single folder\n    if (workspace.folders.length === 1) {\n        return {\n            id: workspace.id,\n            uri: workspace.folders[0].uri\n        };\n    }\n    // Empty workspace\n    return undefined;\n}\n//#endregion\n"],"names":["LogLevel","ILogService","createDecorator","DEFAULT_LOG_LEVEL","Info","AbstractLogger","arguments","level","_onDidChangeLogLevel","_register","Emitter","this","fire","Disposable","ConsoleLogger","logLevel","setLevel","message","getLevel","Trace","args","console","log","Debug","Error","LogService","logger","trace","debug","info","error","DoubleResourceMap","_byResource","ResourceMap","_byOwner","Map","resource","owner","value","ownerMap","get","set","resourceMap","removedA","removedB","delete","key","_a","_b","_c","_d","values","Iterable","URI","map","MarkerStats","service","errors","infos","warnings","unknowns","_data","_service","_subscription","onMarkerChanged","_update","dispose","resources","oldStats","_substract","newStats","_resourceStats","_add","result","scheme","Schemas","read","severity","MarkerSeverity","op","MarkerService","_onMarkerChanged","DebounceEmitter","delay","merge","_merge","event","_stats","changeOne","markerData","isFalsyOrEmpty","markers","data","marker","_toMarker","push","filter","Object","create","severities","take","_accept","newLen","iterable","code","source","startLineNumber","startColumn","endLineNumber","endColumn","relatedInformation","tags","undefined","all","array","item","Array","from","keys","IMarkerData","compare","a","b","_displayStrings","localize","Warning","toString","fromSeverity","Severity","Hint","toSeverity","emptyString","makeKeyOptionalMessage","useMessage","replace","join","makeKey","IMarkerService","BaseSeverity","INotificationService","NoOpNotification","__decorate","decorators","target","desc","d","c","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","Link","container","_link","options","openerService","_enabled","el","append","$","tabIndex","href","title","label","setAttribute","onClickEmitter","DomEmitter","onKeyPress","onEnterPress","Event","e","StandardKeyboardEvent","keyCode","onTap","TouchEventType","Gesture","onOpen","enabled","EventHelper","opener","open","allowCommands","style","pointerEvents","opacity","cursor","IOpenerService","registerThemingParticipant","theme","collector","textLinkForegroundColor","getColor","textLinkForeground","addRule","textLinkActiveForegroundColor","textLinkActiveForeground","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","then","apply","NullOpenerService","freeze","_serviceBrand","registerOpener","registerValidator","registerExternalUriResolver","setDefaultExternalOpener","registerExternalOpener","resolveExternalUri","uri","resolved","matchesScheme","equalsIgnoreCase","startsWithIgnoreCase","matchesSomeScheme","schemes","some","selectionFragment","selection","match","exec","fragment","parseInt","Progress","total","worked","callback","_value","None","report","IEditorProgressService","TriggerAction","isPicksWithActive","obj","candidate","isArray","items","isFastAndSlowPicks","picks","additionalPicks","PickerQuickAccessProvider","prefix","picker","token","disposables","DisposableStore","canAcceptInBackground","matchOnLabel","matchOnDescription","matchOnDetail","sortByLabel","picksCts","picksDisposable","add","MutableDisposable","updatePickerItems","picksDisposables","busy","CancellationTokenSource","picksToken","picksFilter","substr","trim","providedPicks","_getPicks","applyPicks","skipEmpty","activeItem","active","noResultsPick","activeItems","fastPicksApplied","slowPicksApplied","timeout","FAST_PICKS_RACE_DELAY","isCancellationRequested","awaitedAdditionalPicks","activePick","additionalActivePick","fallbackActivePick","fallbackActivePickCandidate","indexOf","awaitedPicks","onDidChangeValue","onDidAccept","selectedItems","accept","inBackground","hide","keyMods","onDidTriggerItemButton","button","trigger","buttonIndex","buttons","action","NO_ACTION","CLOSE_PICKER","REFRESH_PICKER","REMOVE_ITEM","index","slice","removed","splice","keepScrollPositionBefore","keepScrollPosition","AbstractCommandsQuickAccessProvider","instantiationService","keybindingService","commandService","telemetryService","dialogService","PREFIX","commandsHistory","createInstance","CommandsHistory","getCommandPicks","allCommandPicks","filteredCommandPicks","commandPick","labelHighlights","withNullAsUndefined","WORD_FILTER","aliasHighlights","commandAlias","highlights","detail","showAlias","commandId","f","mapLabelToCommand","existingCommandForLabel","description","sort","commandPickA","commandPickB","commandACounter","peek","commandBCounter","localeCompare","commandPicks","addSeparator","keybinding","lookupKeybinding","ariaLabel","getAriaLabel","type","assign","publicLog2","id","executeCommand","isCancellationError","show","toErrorMessage","or","matchesPrefix","matchesWords","matchesContiguousSubString","IInstantiationService","IKeybindingService","ICommandService","ITelemetryService","IDialogService","storageService","configurationService","configuredCommandsHistoryLength","updateConfiguration","load","registerListeners","onDidChangeConfiguration","getConfiguredCommandHistoryLength","cache","limit","saveState","serializedCache","raw","PREF_KEY_CACHE","JSON","parse","LRUCache","usesLRU","entries","forEach","entry","counter","getNumber","PREF_KEY_COUNTER","store","stringify","configuredCommandHistoryLength","getValue","workbench","commandPalette","history","DEFAULT_COMMANDS_HISTORY_LENGTH","IStorageService","IConfigurationService","HelpQuickAccessProvider","quickInputService","registry","Registry","Extensions","quickAccess","preserveValue","providerDescriptor","getQuickAccessProvider","getQuickAccessProviders","editorProviders","globalProviders","providerA","providerB","provider","helpEntries","helpEntry","needsEditor","IQuickInputService","QuickAccessController","mapProviderToDescriptor","lastAcceptedPickerValues","visibleQuickAccess","doShowOrPick","pick","getOrInstantiateProvider","descriptor","visibleDescriptor","adjustValueSelection","newValue","newValueCandidateWithoutPrefix","defaultFilterValue","DefaultQuickAccessFilterValue","createQuickPick","placeholder","quickNavigate","quickNavigateConfiguration","hideInput","itemActivation","ItemActivation","contextKey","filterValue","substring","pickPromise","DeferredPromise","once","onWillAccept","veto","registerPickerListeners","cts","provide","onDidHide","cancel","complete","p","valueSelection","toDisposable","ctor","QuickInputService","contextKeyService","themeService","accessibilityService","layoutService","contexts","_controller","createController","_quickAccess","host","defaultOptions","idPrefix","ignoreFocusOut","isScreenReaderOptimized","backKeybindingLabel","setContextKey","returnFocus","focus","createList","user","delegate","renderers","WorkbenchList","styles","computeStyles","controller","QuickInputController","layout","dimension","offset","top","onDidLayout","onShow","resetContextKeys","onHide","RawContextKey","bindTo","context","reset","CancellationToken","applyStyles","widget","quickInputBackground","quickInputForeground","quickInputTitleBackground","contrastBorder","widgetShadow","inputBox","inputForeground","inputBackground","inputBorder","inputValidationInfoBackground","inputValidationInfoForeground","inputValidationInfoBorder","inputValidationWarningBackground","inputValidationWarningForeground","inputValidationWarningBorder","inputValidationErrorBackground","inputValidationErrorForeground","inputValidationErrorBorder","countBadge","badgeBackground","badgeForeground","badgeBorder","buttonForeground","buttonBackground","buttonHoverBackground","buttonBorder","progressBar","progressBarBackground","keybindingLabel","keybindingLabelBackground","keybindingLabelForeground","keybindingLabelBorder","keybindingLabelBottomBorder","keybindingLabelShadow","list","listBackground","listInactiveFocusForeground","quickInputListFocusForeground","listInactiveSelectionIconForeground","quickInputListFocusIconForeground","listInactiveFocusBackground","quickInputListFocusBackground","listFocusOutline","activeContrastBorder","listInactiveFocusOutline","pickerGroupBorder","pickerGroupForeground","Themable","IContextKeyService","IThemeService","IAccessibilityService","ILayoutService","Quickaccess","QuickAccessRegistry","providers","defaultProvider","coalesce","find","startsWith","RegistryImpl","Assert","Types","has","SeverityIcon","className","Codicon","errorIconForeground","problemsErrorIconForeground","errorCodiconSelector","warningIconForeground","problemsWarningIconForeground","warningCodiconSelector","infoIconForeground","problemsInfoIconForeground","infoCodiconSelector","WillSaveStateReason","TARGET_KEY","AbstractStorageService","flushInterval","DEFAULT_FLUSH_INTERVAL","_onDidChangeValue","PauseableEmitter","_onDidChangeTarget","_onWillSaveState","onWillSaveState","_workspaceKeyTargets","_globalKeyTargets","scope","getKeyTargets","fallbackValue","getStorage","getBoolean","isUndefinedOrNull","remove","withPausedEmitters","updateKeyTarget","fn","pause","resume","keyTargets","loadKeyTargets","globalKeyTargets","workspaceKeyTargets","keysRaw","InMemoryStorageService","globalStorage","Storage","InMemoryStorageDatabase","workspaceStorage","onDidChangeStorage","emitDidChangeValue","getIconsStyleSheet","onDidChangeEmmiter","iconRegistry","getIconRegistry","onDidChange","onDidProductIconThemeChange","getCSS","productIconTheme","getProductIconTheme","UnthemedProductIconTheme","usedFontIds","formatIconRule","contribution","definition","getIcon","fontContribution","font","getDefinition","fontCharacter","asCSSPropertyValue","rules","getIcons","rule","fontWeight","weight","fontStyle","src","l","asCSSUrl","location","format","defaults","ThemeIcon","asCssVariableName","colorIdent","ColorContribution","ColorRegistry","_onDidChangeSchema","onDidChangeSchema","colorSchema","properties","colorReferenceSchema","enum","enumDescriptions","colorsById","needsTransparency","deprecationMessage","colorContribution","propertySchema","defaultSnippets","body","colorDesc","resolveColorValue","cat1","cat2","k","colorRegistry","registerColor","platform","ifArg","thenArg","elseArg","foreground","dark","light","hc","nls","errorForeground","iconForeground","transparent","focusBorder","Color","textCodeBlockBackground","inputActiveOptionBorder","inputActiveOptionBackground","inputActiveOptionForeground","selectBackground","selectForeground","selectBorder","lighten","darken","buttonSecondaryBackground","scrollbarShadow","scrollbarSliderBackground","scrollbarSliderHoverBackground","scrollbarSliderActiveBackground","editorErrorBackground","editorErrorForeground","editorErrorBorder","editorWarningBackground","editorWarningForeground","editorWarningBorder","editorInfoBackground","editorInfoForeground","editorInfoBorder","editorHintForeground","editorHintBorder","editorBackground","editorForeground","editorWidgetBackground","editorWidgetForeground","editorWidgetBorder","editorWidgetResizeBorder","RGBA","editorSelectionBackground","editorSelectionForeground","editorInactiveSelection","editorSelectionHighlight","lessProminent","editorSelectionHighlightBorder","editorFindMatch","editorFindMatchHighlight","editorFindRangeHighlight","editorFindMatchBorder","editorFindMatchHighlightBorder","editorFindRangeHighlightBorder","editorHoverHighlight","editorHoverBackground","editorHoverForeground","editorHoverBorder","editorHoverStatusBarBackground","editorActiveLinkForeground","editorInlayHintForeground","editorInlayHintBackground","editorInlayHintTypeForeground","editorInlayHintTypeBackground","editorInlayHintParameterForeground","editorInlayHintParameterBackground","editorLightBulbForeground","editorLightBulbAutoFixForeground","defaultInsertColor","defaultRemoveColor","diffInserted","diffRemoved","diffInsertedOutline","diffRemovedOutline","diffBorder","diffDiagonalFill","listFocusBackground","listFocusForeground","listActiveSelectionBackground","listActiveSelectionForeground","listActiveSelectionIconForeground","listInactiveSelectionBackground","listInactiveSelectionForeground","listHoverBackground","listHoverForeground","listDropBackground","listHighlightForeground","listFocusHighlightForeground","if","else","listFilterWidgetBackground","listFilterWidgetOutline","listFilterWidgetNoMatchesOutline","treeIndentGuidesStroke","tableColumnsBorder","tableOddRowsBackgroundColor","_deprecatedQuickInputListFocusBackground","oneOf","menuBorder","menuForeground","menuBackground","menuSelectionForeground","menuSelectionBackground","menuSelectionBorder","menuSeparatorBackground","toolbarHoverBackground","currentBaseColor","incomingBaseColor","commonBaseColor","contentTransparency","mergeCurrentHeaderBackground","mergeIncomingHeaderBackground","mergeCommonHeaderBackground","mergeBorder","overviewRulerFindMatchForeground","overviewRulerSelectionHighlightForeground","minimapFindMatch","minimapSelectionOccurrenceHighlight","minimapSelection","minimapError","minimapWarning","minimapBackground","minimapForegroundOpacity","minimapSliderBackground","minimapSliderHoverBackground","minimapSliderActiveBackground","colorValue","factor","colorValues","backgroundColorValue","transparency","background","transform","color","defines","backgroundColor","isDarkerThan","assertNever","executeTransform","workbenchColorsSchemaId","schemaRegistry","JSONExtensions","registerSchema","getColorSchema","delayer","RunOnceScheduler","notifySchemaChanged","isScheduled","schedule","IconContribution","IconRegistry","_onDidChange","iconSchema","definitions","icons","fontId","additionalProperties","iconReferenceSchema","pattern","CSSIcon","iconsById","iconFontsById","existing","markdownDescription","enumIndex","iconContribution","$ref","sorter","i1","i2","classNames","reference","contributions","registerIcon","icon","initialize","iconsSchemaId","getIconSchema","widgetClose","styleMap","attachStyler","widgetOrCallback","getColorTheme","onDidColorThemeChange","attachBadgeStyler","attachListStyler","overrides","defaultListStyles","listFocusAndSelectionBackground","listFocusAndSelectionForeground","listSelectionOutline","listHoverOutline","listMatchesShadow","defaultMenuStyles","shadowColor","borderColor","foregroundColor","selectionForegroundColor","selectionBackgroundColor","selectionBorderColor","separatorColor","attachMenuStyler","ColorScheme","ThemeColor","themeColorFromId","getThemeTypeSelector","isThemeColor","isThemeIcon","_regexFromString","RegExp","fromString","str","fromId","modify","modifier","tildeIndex","lastIndexOf","getModifier","isEqual","ti1","ti2","asThemeIcon","codicon","asClassNameArray","asClassName","asCSSSelector","ThemingContribution","themingRegistry","ThemingRegistry","themingParticipants","onThemingParticipantAddedEmitter","participant","idx","onColorThemeChange","onThemeChange","updateStyles","IUndoRedoService","ResourceEditStackSnapshot","elements","UndoRedoGroup","_ID","order","UndoRedoSource","DEBUG","getResourceLabel","fsPath","path","stackElementCounter","ResourceStackElement","actual","resourceLabel","strResource","groupId","groupOrder","sourceId","sourceOrder","confirmBeforeUndo","resourceLabels","strResources","isValid","constructor","name","ResourceReasonPair","reason","RemovedResources","externalRemoval","noParallelUniverses","element","messages","comment","size","WorkspaceStackElement","removedResources","invalidatedResources","split","ResourceEditStack","_past","_future","locked","versionId","removeResource","setValid","_setElementValidFlag","futureElement","len","snapshot","snapshotLength","isOK","snapshotIndex","removePastAfter","removeFutureBefore","past","future","toRemove","individualMap","j","pop","EditStackSnapshot","editStacks","_versionIds","missingEditStack","UndoRedoService","_dialogService","_notificationService","_editStacks","_uriComparisonKeyComputers","uriComparisonKeyComputer","getComparisonKey","group","getUriComparisonKey","_pushElement","nextOrder","seen","Set","editStack","pushElement","hasFutureElements","closestPastElement","getClosestPastElement","ignoreResources","individualArr","_element","splitPastWorkspaceElement","splitFutureWorkspaceElement","setElementsValidFlag","createSnapshot","restoreSnapshot","hasPastElements","getElements","matchedElement","matchedStrResource","resourceOrSource","_findClosestUndoElementWithSource","err","onUnexpectedError","removeElements","editStackSnapshot","invoke","cleanup","continuation","releaseLocks","_acquireLocks","_onError","prepareUndoRedo","isDisposable","disposable","affectedEditStacks","canSplit","_splitPastWorkspaceElement","warn","WorkspaceVerificationError","_undo","checkInvalidatedResources","_tryToSplitAndUndo","createMessage","cannotUndoDueToResources","cannotLockDueToResources","undoConfirmed","_getAffectedEditStacks","verificationError","_checkWorkspaceUndo","returnValue","_confirmAndExecuteWorkspaceUndo","pastElement","secondPastElement","getSecondClosestPastElement","_isPartOfUndoGroup","cancelId","choice","verificationError1","_invokeWorkspacePrepare","verificationError2","moveBackward","_safeInvokeWithLocks","undo","_continueUndoInGroup","_invokeResourcePrepare","flushAllElements","_findClosestUndoElementInGroup","shouldPromptForConfirmation","_confirmAndContinueUndo","_workspaceUndo","_resourceUndo","getClosestFutureElement","_findClosestRedoElementWithSource","_splitFutureWorkspaceElement","_redo","_tryToSplitAndRedo","cannotRedoDueToResources","_checkWorkspaceRedo","_executeWorkspaceRedo","moveForward","redo","_continueRedoInGroup","_findClosestRedoElementInGroup","_workspaceRedo","_resourceRedo","registerSingleton","IWorkspaceContextService","WorkspaceFolder","IWorkspaceTrustManagementService","WORKSPACE_EXTENSION","isSingleFolderWorkspaceIdentifier","singleFolderIdentifier","toWorkspaceIdentifier","workspace","configuration","configPath","folders"],"sourceRoot":""}