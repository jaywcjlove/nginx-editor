{"version":3,"file":"static/js/monaco-editor-vendor.6a6ecc0c.03c39f8d.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/platform/storage/common/storage.js","../node_modules/monaco-editor/esm/vs/platform/telemetry/common/telemetry.js","../node_modules/monaco-editor/esm/vs/platform/theme/browser/defaultStyles.js","../node_modules/monaco-editor/esm/vs/platform/theme/browser/iconsStyleSheet.js","../node_modules/monaco-editor/esm/vs/platform/theme/common/colorRegistry.js","../node_modules/monaco-editor/esm/vs/platform/theme/common/iconRegistry.js","../node_modules/monaco-editor/esm/vs/platform/theme/common/theme.js","../node_modules/monaco-editor/esm/vs/platform/theme/common/themeService.js","../node_modules/monaco-editor/esm/vs/platform/undoRedo/common/undoRedo.js","../node_modules/monaco-editor/esm/vs/platform/undoRedo/common/undoRedoService.js","../node_modules/monaco-editor/esm/vs/platform/workspace/common/workspace.js","../node_modules/monaco-editor/esm/vs/platform/workspace/common/workspaceTrust.js"],"sourcesContent":["import { Emitter, Event, PauseableEmitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { isUndefinedOrNull } from '../../../base/common/types.js';\nimport { InMemoryStorageDatabase, Storage, StorageHint } from '../../../base/parts/storage/common/storage.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const TARGET_KEY = '__$__targetStorageMarker';\nexport const IStorageService = createDecorator('storageService');\nexport var WillSaveStateReason;\n(function (WillSaveStateReason) {\n    /**\n     * No specific reason to save state.\n     */\n    WillSaveStateReason[WillSaveStateReason[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * A hint that the workbench is about to shutdown.\n     */\n    WillSaveStateReason[WillSaveStateReason[\"SHUTDOWN\"] = 1] = \"SHUTDOWN\";\n})(WillSaveStateReason || (WillSaveStateReason = {}));\nexport function loadKeyTargets(storage) {\n    const keysRaw = storage.get(TARGET_KEY);\n    if (keysRaw) {\n        try {\n            return JSON.parse(keysRaw);\n        }\n        catch (error) {\n            // Fail gracefully\n        }\n    }\n    return Object.create(null);\n}\nexport class AbstractStorageService extends Disposable {\n    constructor(options = { flushInterval: AbstractStorageService.DEFAULT_FLUSH_INTERVAL }) {\n        super();\n        this.options = options;\n        this._onDidChangeValue = this._register(new PauseableEmitter());\n        this._onDidChangeTarget = this._register(new PauseableEmitter());\n        this._onWillSaveState = this._register(new Emitter());\n        this.onWillSaveState = this._onWillSaveState.event;\n        this._workspaceKeyTargets = undefined;\n        this._profileKeyTargets = undefined;\n        this._applicationKeyTargets = undefined;\n    }\n    onDidChangeValue(scope, key, disposable) {\n        return Event.filter(this._onDidChangeValue.event, e => e.scope === scope && (key === undefined || e.key === key), disposable);\n    }\n    emitDidChangeValue(scope, event) {\n        const { key, external } = event;\n        // Specially handle `TARGET_KEY`\n        if (key === TARGET_KEY) {\n            // Clear our cached version which is now out of date\n            switch (scope) {\n                case -1 /* StorageScope.APPLICATION */:\n                    this._applicationKeyTargets = undefined;\n                    break;\n                case 0 /* StorageScope.PROFILE */:\n                    this._profileKeyTargets = undefined;\n                    break;\n                case 1 /* StorageScope.WORKSPACE */:\n                    this._workspaceKeyTargets = undefined;\n                    break;\n            }\n            // Emit as `didChangeTarget` event\n            this._onDidChangeTarget.fire({ scope });\n        }\n        // Emit any other key to outside\n        else {\n            this._onDidChangeValue.fire({ scope, key, target: this.getKeyTargets(scope)[key], external });\n        }\n    }\n    get(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.get(key, fallbackValue);\n    }\n    getBoolean(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.getBoolean(key, fallbackValue);\n    }\n    getNumber(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.getNumber(key, fallbackValue);\n    }\n    store(key, value, scope, target, external = false) {\n        // We remove the key for undefined/null values\n        if (isUndefinedOrNull(value)) {\n            this.remove(key, scope, external);\n            return;\n        }\n        // Update our datastructures but send events only after\n        this.withPausedEmitters(() => {\n            var _a;\n            // Update key-target map\n            this.updateKeyTarget(key, scope, target);\n            // Store actual value\n            (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.set(key, value, external);\n        });\n    }\n    remove(key, scope, external = false) {\n        // Update our datastructures but send events only after\n        this.withPausedEmitters(() => {\n            var _a;\n            // Update key-target map\n            this.updateKeyTarget(key, scope, undefined);\n            // Remove actual key\n            (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.delete(key, external);\n        });\n    }\n    withPausedEmitters(fn) {\n        // Pause emitters\n        this._onDidChangeValue.pause();\n        this._onDidChangeTarget.pause();\n        try {\n            fn();\n        }\n        finally {\n            // Resume emitters\n            this._onDidChangeValue.resume();\n            this._onDidChangeTarget.resume();\n        }\n    }\n    updateKeyTarget(key, scope, target, external = false) {\n        var _a, _b;\n        // Add\n        const keyTargets = this.getKeyTargets(scope);\n        if (typeof target === 'number') {\n            if (keyTargets[key] !== target) {\n                keyTargets[key] = target;\n                (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.set(TARGET_KEY, JSON.stringify(keyTargets), external);\n            }\n        }\n        // Remove\n        else {\n            if (typeof keyTargets[key] === 'number') {\n                delete keyTargets[key];\n                (_b = this.getStorage(scope)) === null || _b === void 0 ? void 0 : _b.set(TARGET_KEY, JSON.stringify(keyTargets), external);\n            }\n        }\n    }\n    get workspaceKeyTargets() {\n        if (!this._workspaceKeyTargets) {\n            this._workspaceKeyTargets = this.loadKeyTargets(1 /* StorageScope.WORKSPACE */);\n        }\n        return this._workspaceKeyTargets;\n    }\n    get profileKeyTargets() {\n        if (!this._profileKeyTargets) {\n            this._profileKeyTargets = this.loadKeyTargets(0 /* StorageScope.PROFILE */);\n        }\n        return this._profileKeyTargets;\n    }\n    get applicationKeyTargets() {\n        if (!this._applicationKeyTargets) {\n            this._applicationKeyTargets = this.loadKeyTargets(-1 /* StorageScope.APPLICATION */);\n        }\n        return this._applicationKeyTargets;\n    }\n    getKeyTargets(scope) {\n        switch (scope) {\n            case -1 /* StorageScope.APPLICATION */:\n                return this.applicationKeyTargets;\n            case 0 /* StorageScope.PROFILE */:\n                return this.profileKeyTargets;\n            default:\n                return this.workspaceKeyTargets;\n        }\n    }\n    loadKeyTargets(scope) {\n        const storage = this.getStorage(scope);\n        return storage ? loadKeyTargets(storage) : Object.create(null);\n    }\n}\nAbstractStorageService.DEFAULT_FLUSH_INTERVAL = 60 * 1000; // every minute\nexport class InMemoryStorageService extends AbstractStorageService {\n    constructor() {\n        super();\n        this.applicationStorage = this._register(new Storage(new InMemoryStorageDatabase(), { hint: StorageHint.STORAGE_IN_MEMORY }));\n        this.profileStorage = this._register(new Storage(new InMemoryStorageDatabase(), { hint: StorageHint.STORAGE_IN_MEMORY }));\n        this.workspaceStorage = this._register(new Storage(new InMemoryStorageDatabase(), { hint: StorageHint.STORAGE_IN_MEMORY }));\n        this._register(this.workspaceStorage.onDidChangeStorage(e => this.emitDidChangeValue(1 /* StorageScope.WORKSPACE */, e)));\n        this._register(this.profileStorage.onDidChangeStorage(e => this.emitDidChangeValue(0 /* StorageScope.PROFILE */, e)));\n        this._register(this.applicationStorage.onDidChangeStorage(e => this.emitDidChangeValue(-1 /* StorageScope.APPLICATION */, e)));\n    }\n    getStorage(scope) {\n        switch (scope) {\n            case -1 /* StorageScope.APPLICATION */:\n                return this.applicationStorage;\n            case 0 /* StorageScope.PROFILE */:\n                return this.profileStorage;\n            default:\n                return this.workspaceStorage;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ITelemetryService = createDecorator('telemetryService');\n","import { keybindingLabelBackground, keybindingLabelBorder, keybindingLabelBottomBorder, keybindingLabelForeground, asCssVariable, widgetShadow, buttonForeground, buttonSeparator, buttonBackground, buttonHoverBackground, buttonSecondaryForeground, buttonSecondaryBackground, buttonSecondaryHoverBackground, buttonBorder, progressBarBackground, inputActiveOptionBorder, inputActiveOptionForeground, inputActiveOptionBackground, editorWidgetBackground, editorWidgetForeground, contrastBorder, checkboxBorder, checkboxBackground, checkboxForeground, problemsErrorIconForeground, problemsWarningIconForeground, problemsInfoIconForeground, inputBackground, inputForeground, inputBorder, textLinkForeground, inputValidationInfoBorder, inputValidationInfoBackground, inputValidationInfoForeground, inputValidationWarningBorder, inputValidationWarningBackground, inputValidationWarningForeground, inputValidationErrorBorder, inputValidationErrorBackground, inputValidationErrorForeground, listFilterWidgetBackground, listFilterWidgetNoMatchesOutline, listFilterWidgetOutline, listFilterWidgetShadow, badgeBackground, badgeForeground, breadcrumbsBackground, breadcrumbsForeground, breadcrumbsFocusForeground, breadcrumbsActiveSelectionForeground, activeContrastBorder, listActiveSelectionBackground, listActiveSelectionForeground, listActiveSelectionIconForeground, listDropBackground, listFocusAndSelectionOutline, listFocusBackground, listFocusForeground, listFocusOutline, listHoverBackground, listHoverForeground, listInactiveFocusBackground, listInactiveFocusOutline, listInactiveSelectionBackground, listInactiveSelectionForeground, listInactiveSelectionIconForeground, tableColumnsBorder, tableOddRowsBackgroundColor, treeIndentGuidesStroke, asCssVariableWithDefault, editorWidgetBorder, focusBorder, pickerGroupForeground, quickInputListFocusBackground, quickInputListFocusForeground, quickInputListFocusIconForeground, selectBackground, selectBorder, selectForeground, selectListBackground, treeInactiveIndentGuidesStroke, menuBorder, menuForeground, menuBackground, menuSelectionForeground, menuSelectionBackground, menuSelectionBorder, menuSeparatorBackground, scrollbarShadow, scrollbarSliderActiveBackground, scrollbarSliderBackground, scrollbarSliderHoverBackground } from '../common/colorRegistry.js';\nimport { Color } from '../../../base/common/color.js';\nfunction overrideStyles(override, styles) {\n    const result = Object.assign({}, styles);\n    for (const key in override) {\n        const val = override[key];\n        result[key] = val !== undefined ? asCssVariable(val) : undefined;\n    }\n    return result;\n}\nexport const defaultKeybindingLabelStyles = {\n    keybindingLabelBackground: asCssVariable(keybindingLabelBackground),\n    keybindingLabelForeground: asCssVariable(keybindingLabelForeground),\n    keybindingLabelBorder: asCssVariable(keybindingLabelBorder),\n    keybindingLabelBottomBorder: asCssVariable(keybindingLabelBottomBorder),\n    keybindingLabelShadow: asCssVariable(widgetShadow)\n};\nexport const defaultButtonStyles = {\n    buttonForeground: asCssVariable(buttonForeground),\n    buttonSeparator: asCssVariable(buttonSeparator),\n    buttonBackground: asCssVariable(buttonBackground),\n    buttonHoverBackground: asCssVariable(buttonHoverBackground),\n    buttonSecondaryForeground: asCssVariable(buttonSecondaryForeground),\n    buttonSecondaryBackground: asCssVariable(buttonSecondaryBackground),\n    buttonSecondaryHoverBackground: asCssVariable(buttonSecondaryHoverBackground),\n    buttonBorder: asCssVariable(buttonBorder),\n};\nexport const defaultProgressBarStyles = {\n    progressBarBackground: asCssVariable(progressBarBackground)\n};\nexport const defaultToggleStyles = {\n    inputActiveOptionBorder: asCssVariable(inputActiveOptionBorder),\n    inputActiveOptionForeground: asCssVariable(inputActiveOptionForeground),\n    inputActiveOptionBackground: asCssVariable(inputActiveOptionBackground)\n};\nexport const defaultCheckboxStyles = {\n    checkboxBackground: asCssVariable(checkboxBackground),\n    checkboxBorder: asCssVariable(checkboxBorder),\n    checkboxForeground: asCssVariable(checkboxForeground)\n};\nexport const defaultDialogStyles = {\n    dialogBackground: asCssVariable(editorWidgetBackground),\n    dialogForeground: asCssVariable(editorWidgetForeground),\n    dialogShadow: asCssVariable(widgetShadow),\n    dialogBorder: asCssVariable(contrastBorder),\n    errorIconForeground: asCssVariable(problemsErrorIconForeground),\n    warningIconForeground: asCssVariable(problemsWarningIconForeground),\n    infoIconForeground: asCssVariable(problemsInfoIconForeground),\n    textLinkForeground: asCssVariable(textLinkForeground)\n};\nexport const defaultInputBoxStyles = {\n    inputBackground: asCssVariable(inputBackground),\n    inputForeground: asCssVariable(inputForeground),\n    inputBorder: asCssVariable(inputBorder),\n    inputValidationInfoBorder: asCssVariable(inputValidationInfoBorder),\n    inputValidationInfoBackground: asCssVariable(inputValidationInfoBackground),\n    inputValidationInfoForeground: asCssVariable(inputValidationInfoForeground),\n    inputValidationWarningBorder: asCssVariable(inputValidationWarningBorder),\n    inputValidationWarningBackground: asCssVariable(inputValidationWarningBackground),\n    inputValidationWarningForeground: asCssVariable(inputValidationWarningForeground),\n    inputValidationErrorBorder: asCssVariable(inputValidationErrorBorder),\n    inputValidationErrorBackground: asCssVariable(inputValidationErrorBackground),\n    inputValidationErrorForeground: asCssVariable(inputValidationErrorForeground)\n};\nexport const defaultFindWidgetStyles = {\n    listFilterWidgetBackground: asCssVariable(listFilterWidgetBackground),\n    listFilterWidgetOutline: asCssVariable(listFilterWidgetOutline),\n    listFilterWidgetNoMatchesOutline: asCssVariable(listFilterWidgetNoMatchesOutline),\n    listFilterWidgetShadow: asCssVariable(listFilterWidgetShadow),\n    inputBoxStyles: defaultInputBoxStyles,\n    toggleStyles: defaultToggleStyles\n};\nexport const defaultCountBadgeStyles = {\n    badgeBackground: asCssVariable(badgeBackground),\n    badgeForeground: asCssVariable(badgeForeground),\n    badgeBorder: asCssVariable(contrastBorder)\n};\nexport const defaultBreadcrumbsWidgetStyles = {\n    breadcrumbsBackground: asCssVariable(breadcrumbsBackground),\n    breadcrumbsForeground: asCssVariable(breadcrumbsForeground),\n    breadcrumbsHoverForeground: asCssVariable(breadcrumbsFocusForeground),\n    breadcrumbsFocusForeground: asCssVariable(breadcrumbsFocusForeground),\n    breadcrumbsFocusAndSelectionForeground: asCssVariable(breadcrumbsActiveSelectionForeground)\n};\nexport const defaultListStyles = {\n    listBackground: undefined,\n    listInactiveFocusForeground: undefined,\n    listFocusBackground: asCssVariable(listFocusBackground),\n    listFocusForeground: asCssVariable(listFocusForeground),\n    listFocusOutline: asCssVariable(listFocusOutline),\n    listActiveSelectionBackground: asCssVariable(listActiveSelectionBackground),\n    listActiveSelectionForeground: asCssVariable(listActiveSelectionForeground),\n    listActiveSelectionIconForeground: asCssVariable(listActiveSelectionIconForeground),\n    listFocusAndSelectionOutline: asCssVariable(listFocusAndSelectionOutline),\n    listFocusAndSelectionBackground: asCssVariable(listActiveSelectionBackground),\n    listFocusAndSelectionForeground: asCssVariable(listActiveSelectionForeground),\n    listInactiveSelectionBackground: asCssVariable(listInactiveSelectionBackground),\n    listInactiveSelectionIconForeground: asCssVariable(listInactiveSelectionIconForeground),\n    listInactiveSelectionForeground: asCssVariable(listInactiveSelectionForeground),\n    listInactiveFocusBackground: asCssVariable(listInactiveFocusBackground),\n    listInactiveFocusOutline: asCssVariable(listInactiveFocusOutline),\n    listHoverBackground: asCssVariable(listHoverBackground),\n    listHoverForeground: asCssVariable(listHoverForeground),\n    listDropBackground: asCssVariable(listDropBackground),\n    listSelectionOutline: asCssVariable(activeContrastBorder),\n    listHoverOutline: asCssVariable(activeContrastBorder),\n    treeIndentGuidesStroke: asCssVariable(treeIndentGuidesStroke),\n    treeInactiveIndentGuidesStroke: asCssVariable(treeInactiveIndentGuidesStroke),\n    tableColumnsBorder: asCssVariable(tableColumnsBorder),\n    tableOddRowsBackgroundColor: asCssVariable(tableOddRowsBackgroundColor),\n};\nexport function getListStyles(override) {\n    return overrideStyles(override, defaultListStyles);\n}\nexport const defaultSelectBoxStyles = {\n    selectBackground: asCssVariable(selectBackground),\n    selectListBackground: asCssVariable(selectListBackground),\n    selectForeground: asCssVariable(selectForeground),\n    decoratorRightForeground: asCssVariable(pickerGroupForeground),\n    selectBorder: asCssVariable(selectBorder),\n    focusBorder: asCssVariable(focusBorder),\n    listFocusBackground: asCssVariable(quickInputListFocusBackground),\n    listInactiveSelectionIconForeground: asCssVariable(quickInputListFocusIconForeground),\n    listFocusForeground: asCssVariable(quickInputListFocusForeground),\n    listFocusOutline: asCssVariableWithDefault(activeContrastBorder, Color.transparent.toString()),\n    listHoverBackground: asCssVariable(listHoverBackground),\n    listHoverForeground: asCssVariable(listHoverForeground),\n    listHoverOutline: asCssVariable(activeContrastBorder),\n    selectListBorder: asCssVariable(editorWidgetBorder),\n    listBackground: undefined,\n    listActiveSelectionBackground: undefined,\n    listActiveSelectionForeground: undefined,\n    listActiveSelectionIconForeground: undefined,\n    listFocusAndSelectionBackground: undefined,\n    listDropBackground: undefined,\n    listInactiveSelectionBackground: undefined,\n    listInactiveSelectionForeground: undefined,\n    listInactiveFocusBackground: undefined,\n    listInactiveFocusOutline: undefined,\n    listSelectionOutline: undefined,\n    listFocusAndSelectionForeground: undefined,\n    listFocusAndSelectionOutline: undefined,\n    listInactiveFocusForeground: undefined,\n    tableColumnsBorder: undefined,\n    tableOddRowsBackgroundColor: undefined,\n    treeIndentGuidesStroke: undefined,\n    treeInactiveIndentGuidesStroke: undefined,\n};\nexport const defaultMenuStyles = {\n    shadowColor: asCssVariable(widgetShadow),\n    borderColor: asCssVariable(menuBorder),\n    foregroundColor: asCssVariable(menuForeground),\n    backgroundColor: asCssVariable(menuBackground),\n    selectionForegroundColor: asCssVariable(menuSelectionForeground),\n    selectionBackgroundColor: asCssVariable(menuSelectionBackground),\n    selectionBorderColor: asCssVariable(menuSelectionBorder),\n    separatorColor: asCssVariable(menuSeparatorBackground),\n    scrollbarShadow: asCssVariable(scrollbarShadow),\n    scrollbarSliderBackground: asCssVariable(scrollbarSliderBackground),\n    scrollbarSliderHoverBackground: asCssVariable(scrollbarSliderHoverBackground),\n    scrollbarSliderActiveBackground: asCssVariable(scrollbarSliderActiveBackground)\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { asCSSPropertyValue, asCSSUrl } from '../../../base/browser/dom.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { getIconRegistry } from '../common/iconRegistry.js';\nexport function getIconsStyleSheet(themeService) {\n    const disposable = new DisposableStore();\n    const onDidChangeEmmiter = disposable.add(new Emitter());\n    const iconRegistry = getIconRegistry();\n    disposable.add(iconRegistry.onDidChange(() => onDidChangeEmmiter.fire()));\n    if (themeService) {\n        disposable.add(themeService.onDidProductIconThemeChange(() => onDidChangeEmmiter.fire()));\n    }\n    return {\n        dispose: () => disposable.dispose(),\n        onDidChange: onDidChangeEmmiter.event,\n        getCSS() {\n            const productIconTheme = themeService ? themeService.getProductIconTheme() : new UnthemedProductIconTheme();\n            const usedFontIds = {};\n            const formatIconRule = (contribution) => {\n                const definition = productIconTheme.getIcon(contribution);\n                if (!definition) {\n                    return undefined;\n                }\n                const fontContribution = definition.font;\n                if (fontContribution) {\n                    usedFontIds[fontContribution.id] = fontContribution.definition;\n                    return `.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; font-family: ${asCSSPropertyValue(fontContribution.id)}; }`;\n                }\n                // default font (codicon)\n                return `.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; }`;\n            };\n            const rules = [];\n            for (const contribution of iconRegistry.getIcons()) {\n                const rule = formatIconRule(contribution);\n                if (rule) {\n                    rules.push(rule);\n                }\n            }\n            for (const id in usedFontIds) {\n                const definition = usedFontIds[id];\n                const fontWeight = definition.weight ? `font-weight: ${definition.weight};` : '';\n                const fontStyle = definition.style ? `font-style: ${definition.style};` : '';\n                const src = definition.src.map(l => `${asCSSUrl(l.location)} format('${l.format}')`).join(', ');\n                rules.push(`@font-face { src: ${src}; font-family: ${asCSSPropertyValue(id)};${fontWeight}${fontStyle} font-display: block; }`);\n            }\n            return rules.join('\\n');\n        }\n    };\n}\nexport class UnthemedProductIconTheme {\n    getIcon(contribution) {\n        const iconRegistry = getIconRegistry();\n        let definition = contribution.defaults;\n        while (ThemeIcon.isThemeIcon(definition)) {\n            const c = iconRegistry.getIcon(definition.id);\n            if (!c) {\n                return undefined;\n            }\n            definition = c.defaults;\n        }\n        return definition;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Color, RGBA } from '../../../base/common/color.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { assertNever } from '../../../base/common/assert.js';\nimport * as nls from '../../../nls.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport * as platform from '../../registry/common/platform.js';\n/**\n * Returns the css variable name for the given color identifier. Dots (`.`) are replaced with hyphens (`-`) and\n * everything is prefixed with `--vscode-`.\n *\n * @sample `editorSuggestWidget.background` is `--vscode-editorSuggestWidget-background`.\n */\nexport function asCssVariableName(colorIdent) {\n    return `--vscode-${colorIdent.replace(/\\./g, '-')}`;\n}\nexport function asCssVariable(color) {\n    return `var(${asCssVariableName(color)})`;\n}\nexport function asCssVariableWithDefault(color, defaultCssValue) {\n    return `var(${asCssVariableName(color)}, ${defaultCssValue})`;\n}\n// color registry\nexport const Extensions = {\n    ColorContribution: 'base.contributions.colors'\n};\nclass ColorRegistry {\n    constructor() {\n        this._onDidChangeSchema = new Emitter();\n        this.onDidChangeSchema = this._onDidChangeSchema.event;\n        this.colorSchema = { type: 'object', properties: {} };\n        this.colorReferenceSchema = { type: 'string', enum: [], enumDescriptions: [] };\n        this.colorsById = {};\n    }\n    registerColor(id, defaults, description, needsTransparency = false, deprecationMessage) {\n        const colorContribution = { id, description, defaults, needsTransparency, deprecationMessage };\n        this.colorsById[id] = colorContribution;\n        const propertySchema = { type: 'string', description, format: 'color-hex', defaultSnippets: [{ body: '${1:#ff0000}' }] };\n        if (deprecationMessage) {\n            propertySchema.deprecationMessage = deprecationMessage;\n        }\n        this.colorSchema.properties[id] = propertySchema;\n        this.colorReferenceSchema.enum.push(id);\n        this.colorReferenceSchema.enumDescriptions.push(description);\n        this._onDidChangeSchema.fire();\n        return id;\n    }\n    getColors() {\n        return Object.keys(this.colorsById).map(id => this.colorsById[id]);\n    }\n    resolveDefaultColor(id, theme) {\n        const colorDesc = this.colorsById[id];\n        if (colorDesc && colorDesc.defaults) {\n            const colorValue = colorDesc.defaults[theme.type];\n            return resolveColorValue(colorValue, theme);\n        }\n        return undefined;\n    }\n    getColorSchema() {\n        return this.colorSchema;\n    }\n    toString() {\n        const sorter = (a, b) => {\n            const cat1 = a.indexOf('.') === -1 ? 0 : 1;\n            const cat2 = b.indexOf('.') === -1 ? 0 : 1;\n            if (cat1 !== cat2) {\n                return cat1 - cat2;\n            }\n            return a.localeCompare(b);\n        };\n        return Object.keys(this.colorsById).sort(sorter).map(k => `- \\`${k}\\`: ${this.colorsById[k].description}`).join('\\n');\n    }\n}\nconst colorRegistry = new ColorRegistry();\nplatform.Registry.add(Extensions.ColorContribution, colorRegistry);\nexport function registerColor(id, defaults, description, needsTransparency, deprecationMessage) {\n    return colorRegistry.registerColor(id, defaults, description, needsTransparency, deprecationMessage);\n}\n// ----- base colors\nexport const foreground = registerColor('foreground', { dark: '#CCCCCC', light: '#616161', hcDark: '#FFFFFF', hcLight: '#292929' }, nls.localize('foreground', \"Overall foreground color. This color is only used if not overridden by a component.\"));\nexport const disabledForeground = registerColor('disabledForeground', { dark: '#CCCCCC80', light: '#61616180', hcDark: '#A5A5A5', hcLight: '#7F7F7F' }, nls.localize('disabledForeground', \"Overall foreground for disabled elements. This color is only used if not overridden by a component.\"));\nexport const errorForeground = registerColor('errorForeground', { dark: '#F48771', light: '#A1260D', hcDark: '#F48771', hcLight: '#B5200D' }, nls.localize('errorForeground', \"Overall foreground color for error messages. This color is only used if not overridden by a component.\"));\nexport const descriptionForeground = registerColor('descriptionForeground', { light: '#717171', dark: transparent(foreground, 0.7), hcDark: transparent(foreground, 0.7), hcLight: transparent(foreground, 0.7) }, nls.localize('descriptionForeground', \"Foreground color for description text providing additional information, for example for a label.\"));\nexport const iconForeground = registerColor('icon.foreground', { dark: '#C5C5C5', light: '#424242', hcDark: '#FFFFFF', hcLight: '#292929' }, nls.localize('iconForeground', \"The default color for icons in the workbench.\"));\nexport const focusBorder = registerColor('focusBorder', { dark: '#007FD4', light: '#0090F1', hcDark: '#F38518', hcLight: '#006BBD' }, nls.localize('focusBorder', \"Overall border color for focused elements. This color is only used if not overridden by a component.\"));\nexport const contrastBorder = registerColor('contrastBorder', { light: null, dark: null, hcDark: '#6FC3DF', hcLight: '#0F4A85' }, nls.localize('contrastBorder', \"An extra border around elements to separate them from others for greater contrast.\"));\nexport const activeContrastBorder = registerColor('contrastActiveBorder', { light: null, dark: null, hcDark: focusBorder, hcLight: focusBorder }, nls.localize('activeContrastBorder', \"An extra border around active elements to separate them from others for greater contrast.\"));\nexport const selectionBackground = registerColor('selection.background', { light: null, dark: null, hcDark: null, hcLight: null }, nls.localize('selectionBackground', \"The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.\"));\n// ------ text colors\nexport const textSeparatorForeground = registerColor('textSeparator.foreground', { light: '#0000002e', dark: '#ffffff2e', hcDark: Color.black, hcLight: '#292929' }, nls.localize('textSeparatorForeground', \"Color for text separators.\"));\nexport const textLinkForeground = registerColor('textLink.foreground', { light: '#006AB1', dark: '#3794FF', hcDark: '#3794FF', hcLight: '#0F4A85' }, nls.localize('textLinkForeground', \"Foreground color for links in text.\"));\nexport const textLinkActiveForeground = registerColor('textLink.activeForeground', { light: '#006AB1', dark: '#3794FF', hcDark: '#3794FF', hcLight: '#0F4A85' }, nls.localize('textLinkActiveForeground', \"Foreground color for links in text when clicked on and on mouse hover.\"));\nexport const textPreformatForeground = registerColor('textPreformat.foreground', { light: '#A31515', dark: '#D7BA7D', hcDark: '#D7BA7D', hcLight: '#292929' }, nls.localize('textPreformatForeground', \"Foreground color for preformatted text segments.\"));\nexport const textBlockQuoteBackground = registerColor('textBlockQuote.background', { light: '#7f7f7f1a', dark: '#7f7f7f1a', hcDark: null, hcLight: '#F2F2F2' }, nls.localize('textBlockQuoteBackground', \"Background color for block quotes in text.\"));\nexport const textBlockQuoteBorder = registerColor('textBlockQuote.border', { light: '#007acc80', dark: '#007acc80', hcDark: Color.white, hcLight: '#292929' }, nls.localize('textBlockQuoteBorder', \"Border color for block quotes in text.\"));\nexport const textCodeBlockBackground = registerColor('textCodeBlock.background', { light: '#dcdcdc66', dark: '#0a0a0a66', hcDark: Color.black, hcLight: '#F2F2F2' }, nls.localize('textCodeBlockBackground', \"Background color for code blocks in text.\"));\n// ----- widgets\nexport const widgetShadow = registerColor('widget.shadow', { dark: transparent(Color.black, .36), light: transparent(Color.black, .16), hcDark: null, hcLight: null }, nls.localize('widgetShadow', 'Shadow color of widgets such as find/replace inside the editor.'));\nexport const widgetBorder = registerColor('widget.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('widgetBorder', 'Border color of widgets such as find/replace inside the editor.'));\nexport const inputBackground = registerColor('input.background', { dark: '#3C3C3C', light: Color.white, hcDark: Color.black, hcLight: Color.white }, nls.localize('inputBoxBackground', \"Input box background.\"));\nexport const inputForeground = registerColor('input.foreground', { dark: foreground, light: foreground, hcDark: foreground, hcLight: foreground }, nls.localize('inputBoxForeground', \"Input box foreground.\"));\nexport const inputBorder = registerColor('input.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputBoxBorder', \"Input box border.\"));\nexport const inputActiveOptionBorder = registerColor('inputOption.activeBorder', { dark: '#007ACC', light: '#007ACC', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputBoxActiveOptionBorder', \"Border color of activated options in input fields.\"));\nexport const inputActiveOptionHoverBackground = registerColor('inputOption.hoverBackground', { dark: '#5a5d5e80', light: '#b8b8b850', hcDark: null, hcLight: null }, nls.localize('inputOption.hoverBackground', \"Background color of activated options in input fields.\"));\nexport const inputActiveOptionBackground = registerColor('inputOption.activeBackground', { dark: transparent(focusBorder, 0.4), light: transparent(focusBorder, 0.2), hcDark: Color.transparent, hcLight: Color.transparent }, nls.localize('inputOption.activeBackground', \"Background hover color of options in input fields.\"));\nexport const inputActiveOptionForeground = registerColor('inputOption.activeForeground', { dark: Color.white, light: Color.black, hcDark: foreground, hcLight: foreground }, nls.localize('inputOption.activeForeground', \"Foreground color of activated options in input fields.\"));\nexport const inputPlaceholderForeground = registerColor('input.placeholderForeground', { light: transparent(foreground, 0.5), dark: transparent(foreground, 0.5), hcDark: transparent(foreground, 0.7), hcLight: transparent(foreground, 0.7) }, nls.localize('inputPlaceholderForeground', \"Input box foreground color for placeholder text.\"));\nexport const inputValidationInfoBackground = registerColor('inputValidation.infoBackground', { dark: '#063B49', light: '#D6ECF2', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationInfoBackground', \"Input validation background color for information severity.\"));\nexport const inputValidationInfoForeground = registerColor('inputValidation.infoForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationInfoForeground', \"Input validation foreground color for information severity.\"));\nexport const inputValidationInfoBorder = registerColor('inputValidation.infoBorder', { dark: '#007acc', light: '#007acc', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationInfoBorder', \"Input validation border color for information severity.\"));\nexport const inputValidationWarningBackground = registerColor('inputValidation.warningBackground', { dark: '#352A05', light: '#F6F5D2', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationWarningBackground', \"Input validation background color for warning severity.\"));\nexport const inputValidationWarningForeground = registerColor('inputValidation.warningForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationWarningForeground', \"Input validation foreground color for warning severity.\"));\nexport const inputValidationWarningBorder = registerColor('inputValidation.warningBorder', { dark: '#B89500', light: '#B89500', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationWarningBorder', \"Input validation border color for warning severity.\"));\nexport const inputValidationErrorBackground = registerColor('inputValidation.errorBackground', { dark: '#5A1D1D', light: '#F2DEDE', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationErrorBackground', \"Input validation background color for error severity.\"));\nexport const inputValidationErrorForeground = registerColor('inputValidation.errorForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationErrorForeground', \"Input validation foreground color for error severity.\"));\nexport const inputValidationErrorBorder = registerColor('inputValidation.errorBorder', { dark: '#BE1100', light: '#BE1100', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationErrorBorder', \"Input validation border color for error severity.\"));\nexport const selectBackground = registerColor('dropdown.background', { dark: '#3C3C3C', light: Color.white, hcDark: Color.black, hcLight: Color.white }, nls.localize('dropdownBackground', \"Dropdown background.\"));\nexport const selectListBackground = registerColor('dropdown.listBackground', { dark: null, light: null, hcDark: Color.black, hcLight: Color.white }, nls.localize('dropdownListBackground', \"Dropdown list background.\"));\nexport const selectForeground = registerColor('dropdown.foreground', { dark: '#F0F0F0', light: foreground, hcDark: Color.white, hcLight: foreground }, nls.localize('dropdownForeground', \"Dropdown foreground.\"));\nexport const selectBorder = registerColor('dropdown.border', { dark: selectBackground, light: '#CECECE', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('dropdownBorder', \"Dropdown border.\"));\nexport const buttonForeground = registerColor('button.foreground', { dark: Color.white, light: Color.white, hcDark: Color.white, hcLight: Color.white }, nls.localize('buttonForeground', \"Button foreground color.\"));\nexport const buttonSeparator = registerColor('button.separator', { dark: transparent(buttonForeground, .4), light: transparent(buttonForeground, .4), hcDark: transparent(buttonForeground, .4), hcLight: transparent(buttonForeground, .4) }, nls.localize('buttonSeparator', \"Button separator color.\"));\nexport const buttonBackground = registerColor('button.background', { dark: '#0E639C', light: '#007ACC', hcDark: null, hcLight: '#0F4A85' }, nls.localize('buttonBackground', \"Button background color.\"));\nexport const buttonHoverBackground = registerColor('button.hoverBackground', { dark: lighten(buttonBackground, 0.2), light: darken(buttonBackground, 0.2), hcDark: buttonBackground, hcLight: buttonBackground }, nls.localize('buttonHoverBackground', \"Button background color when hovering.\"));\nexport const buttonBorder = registerColor('button.border', { dark: contrastBorder, light: contrastBorder, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('buttonBorder', \"Button border color.\"));\nexport const buttonSecondaryForeground = registerColor('button.secondaryForeground', { dark: Color.white, light: Color.white, hcDark: Color.white, hcLight: foreground }, nls.localize('buttonSecondaryForeground', \"Secondary button foreground color.\"));\nexport const buttonSecondaryBackground = registerColor('button.secondaryBackground', { dark: '#3A3D41', light: '#5F6A79', hcDark: null, hcLight: Color.white }, nls.localize('buttonSecondaryBackground', \"Secondary button background color.\"));\nexport const buttonSecondaryHoverBackground = registerColor('button.secondaryHoverBackground', { dark: lighten(buttonSecondaryBackground, 0.2), light: darken(buttonSecondaryBackground, 0.2), hcDark: null, hcLight: null }, nls.localize('buttonSecondaryHoverBackground', \"Secondary button background color when hovering.\"));\nexport const badgeBackground = registerColor('badge.background', { dark: '#4D4D4D', light: '#C4C4C4', hcDark: Color.black, hcLight: '#0F4A85' }, nls.localize('badgeBackground', \"Badge background color. Badges are small information labels, e.g. for search results count.\"));\nexport const badgeForeground = registerColor('badge.foreground', { dark: Color.white, light: '#333', hcDark: Color.white, hcLight: Color.white }, nls.localize('badgeForeground', \"Badge foreground color. Badges are small information labels, e.g. for search results count.\"));\nexport const scrollbarShadow = registerColor('scrollbar.shadow', { dark: '#000000', light: '#DDDDDD', hcDark: null, hcLight: null }, nls.localize('scrollbarShadow', \"Scrollbar shadow to indicate that the view is scrolled.\"));\nexport const scrollbarSliderBackground = registerColor('scrollbarSlider.background', { dark: Color.fromHex('#797979').transparent(0.4), light: Color.fromHex('#646464').transparent(0.4), hcDark: transparent(contrastBorder, 0.6), hcLight: transparent(contrastBorder, 0.4) }, nls.localize('scrollbarSliderBackground', \"Scrollbar slider background color.\"));\nexport const scrollbarSliderHoverBackground = registerColor('scrollbarSlider.hoverBackground', { dark: Color.fromHex('#646464').transparent(0.7), light: Color.fromHex('#646464').transparent(0.7), hcDark: transparent(contrastBorder, 0.8), hcLight: transparent(contrastBorder, 0.8) }, nls.localize('scrollbarSliderHoverBackground', \"Scrollbar slider background color when hovering.\"));\nexport const scrollbarSliderActiveBackground = registerColor('scrollbarSlider.activeBackground', { dark: Color.fromHex('#BFBFBF').transparent(0.4), light: Color.fromHex('#000000').transparent(0.6), hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('scrollbarSliderActiveBackground', \"Scrollbar slider background color when clicked on.\"));\nexport const progressBarBackground = registerColor('progressBar.background', { dark: Color.fromHex('#0E70C0'), light: Color.fromHex('#0E70C0'), hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('progressBarBackground', \"Background color of the progress bar that can show for long running operations.\"));\nexport const editorErrorBackground = registerColor('editorError.background', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('editorError.background', 'Background color of error text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorErrorForeground = registerColor('editorError.foreground', { dark: '#F14C4C', light: '#E51400', hcDark: '#F48771', hcLight: '#B5200D' }, nls.localize('editorError.foreground', 'Foreground color of error squigglies in the editor.'));\nexport const editorErrorBorder = registerColor('editorError.border', { dark: null, light: null, hcDark: Color.fromHex('#E47777').transparent(0.8), hcLight: '#B5200D' }, nls.localize('errorBorder', 'If set, color of double underlines for errors in the editor.'));\nexport const editorWarningBackground = registerColor('editorWarning.background', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('editorWarning.background', 'Background color of warning text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorWarningForeground = registerColor('editorWarning.foreground', { dark: '#CCA700', light: '#BF8803', hcDark: '#FFD370', hcLight: '#895503' }, nls.localize('editorWarning.foreground', 'Foreground color of warning squigglies in the editor.'));\nexport const editorWarningBorder = registerColor('editorWarning.border', { dark: null, light: null, hcDark: Color.fromHex('#FFCC00').transparent(0.8), hcLight: Color.fromHex('#FFCC00').transparent(0.8) }, nls.localize('warningBorder', 'If set, color of double underlines for warnings in the editor.'));\nexport const editorInfoBackground = registerColor('editorInfo.background', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('editorInfo.background', 'Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorInfoForeground = registerColor('editorInfo.foreground', { dark: '#3794FF', light: '#1a85ff', hcDark: '#3794FF', hcLight: '#1a85ff' }, nls.localize('editorInfo.foreground', 'Foreground color of info squigglies in the editor.'));\nexport const editorInfoBorder = registerColor('editorInfo.border', { dark: null, light: null, hcDark: Color.fromHex('#3794FF').transparent(0.8), hcLight: '#292929' }, nls.localize('infoBorder', 'If set, color of double underlines for infos in the editor.'));\nexport const editorHintForeground = registerColor('editorHint.foreground', { dark: Color.fromHex('#eeeeee').transparent(0.7), light: '#6c6c6c', hcDark: null, hcLight: null }, nls.localize('editorHint.foreground', 'Foreground color of hint squigglies in the editor.'));\nexport const editorHintBorder = registerColor('editorHint.border', { dark: null, light: null, hcDark: Color.fromHex('#eeeeee').transparent(0.8), hcLight: '#292929' }, nls.localize('hintBorder', 'If set, color of double underlines for hints in the editor.'));\nexport const sashHoverBorder = registerColor('sash.hoverBorder', { dark: focusBorder, light: focusBorder, hcDark: focusBorder, hcLight: focusBorder }, nls.localize('sashActiveBorder', \"Border color of active sashes.\"));\n/**\n * Editor background color.\n */\nexport const editorBackground = registerColor('editor.background', { light: '#ffffff', dark: '#1E1E1E', hcDark: Color.black, hcLight: Color.white }, nls.localize('editorBackground', \"Editor background color.\"));\n/**\n * Editor foreground color.\n */\nexport const editorForeground = registerColor('editor.foreground', { light: '#333333', dark: '#BBBBBB', hcDark: Color.white, hcLight: foreground }, nls.localize('editorForeground', \"Editor default foreground color.\"));\n/**\n * Sticky scroll\n */\nexport const editorStickyScrollBackground = registerColor('editorStickyScroll.background', { light: editorBackground, dark: editorBackground, hcDark: editorBackground, hcLight: editorBackground }, nls.localize('editorStickyScrollBackground', \"Sticky scroll background color for the editor\"));\nexport const editorStickyScrollHoverBackground = registerColor('editorStickyScrollHover.background', { dark: '#2A2D2E', light: '#F0F0F0', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('editorStickyScrollHoverBackground', \"Sticky scroll on hover background color for the editor\"));\n/**\n * Editor widgets\n */\nexport const editorWidgetBackground = registerColor('editorWidget.background', { dark: '#252526', light: '#F3F3F3', hcDark: '#0C141F', hcLight: Color.white }, nls.localize('editorWidgetBackground', 'Background color of editor widgets, such as find/replace.'));\nexport const editorWidgetForeground = registerColor('editorWidget.foreground', { dark: foreground, light: foreground, hcDark: foreground, hcLight: foreground }, nls.localize('editorWidgetForeground', 'Foreground color of editor widgets, such as find/replace.'));\nexport const editorWidgetBorder = registerColor('editorWidget.border', { dark: '#454545', light: '#C8C8C8', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('editorWidgetBorder', 'Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.'));\nexport const editorWidgetResizeBorder = registerColor('editorWidget.resizeBorder', { light: null, dark: null, hcDark: null, hcLight: null }, nls.localize('editorWidgetResizeBorder', \"Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.\"));\n/**\n * Quick pick widget\n */\nexport const quickInputBackground = registerColor('quickInput.background', { dark: editorWidgetBackground, light: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('pickerBackground', \"Quick picker background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputForeground = registerColor('quickInput.foreground', { dark: editorWidgetForeground, light: editorWidgetForeground, hcDark: editorWidgetForeground, hcLight: editorWidgetForeground }, nls.localize('pickerForeground', \"Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputTitleBackground = registerColor('quickInputTitle.background', { dark: new Color(new RGBA(255, 255, 255, 0.105)), light: new Color(new RGBA(0, 0, 0, 0.06)), hcDark: '#000000', hcLight: Color.white }, nls.localize('pickerTitleBackground', \"Quick picker title background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const pickerGroupForeground = registerColor('pickerGroup.foreground', { dark: '#3794FF', light: '#0066BF', hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('pickerGroupForeground', \"Quick picker color for grouping labels.\"));\nexport const pickerGroupBorder = registerColor('pickerGroup.border', { dark: '#3F3F46', light: '#CCCEDB', hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('pickerGroupBorder', \"Quick picker color for grouping borders.\"));\n/**\n * Keybinding label\n */\nexport const keybindingLabelBackground = registerColor('keybindingLabel.background', { dark: new Color(new RGBA(128, 128, 128, 0.17)), light: new Color(new RGBA(221, 221, 221, 0.4)), hcDark: Color.transparent, hcLight: Color.transparent }, nls.localize('keybindingLabelBackground', \"Keybinding label background color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelForeground = registerColor('keybindingLabel.foreground', { dark: Color.fromHex('#CCCCCC'), light: Color.fromHex('#555555'), hcDark: Color.white, hcLight: foreground }, nls.localize('keybindingLabelForeground', \"Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBorder = registerColor('keybindingLabel.border', { dark: new Color(new RGBA(51, 51, 51, 0.6)), light: new Color(new RGBA(204, 204, 204, 0.4)), hcDark: new Color(new RGBA(111, 195, 223)), hcLight: contrastBorder }, nls.localize('keybindingLabelBorder', \"Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBottomBorder = registerColor('keybindingLabel.bottomBorder', { dark: new Color(new RGBA(68, 68, 68, 0.6)), light: new Color(new RGBA(187, 187, 187, 0.4)), hcDark: new Color(new RGBA(111, 195, 223)), hcLight: foreground }, nls.localize('keybindingLabelBottomBorder', \"Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut.\"));\n/**\n * Editor selection colors.\n */\nexport const editorSelectionBackground = registerColor('editor.selectionBackground', { light: '#ADD6FF', dark: '#264F78', hcDark: '#f3f518', hcLight: '#0F4A85' }, nls.localize('editorSelectionBackground', \"Color of the editor selection.\"));\nexport const editorSelectionForeground = registerColor('editor.selectionForeground', { light: null, dark: null, hcDark: '#000000', hcLight: Color.white }, nls.localize('editorSelectionForeground', \"Color of the selected text for high contrast.\"));\nexport const editorInactiveSelection = registerColor('editor.inactiveSelectionBackground', { light: transparent(editorSelectionBackground, 0.5), dark: transparent(editorSelectionBackground, 0.5), hcDark: transparent(editorSelectionBackground, 0.7), hcLight: transparent(editorSelectionBackground, 0.5) }, nls.localize('editorInactiveSelection', \"Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorSelectionHighlight = registerColor('editor.selectionHighlightBackground', { light: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), dark: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), hcDark: null, hcLight: null }, nls.localize('editorSelectionHighlight', 'Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSelectionHighlightBorder = registerColor('editor.selectionHighlightBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorSelectionHighlightBorder', \"Border color for regions with the same content as the selection.\"));\n/**\n * Editor find match colors.\n */\nexport const editorFindMatch = registerColor('editor.findMatchBackground', { light: '#A8AC94', dark: '#515C6A', hcDark: null, hcLight: null }, nls.localize('editorFindMatch', \"Color of the current search match.\"));\nexport const editorFindMatchHighlight = registerColor('editor.findMatchHighlightBackground', { light: '#EA5C0055', dark: '#EA5C0055', hcDark: null, hcLight: null }, nls.localize('findMatchHighlight', \"Color of the other search matches. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFindRangeHighlight = registerColor('editor.findRangeHighlightBackground', { dark: '#3a3d4166', light: '#b4b4b44d', hcDark: null, hcLight: null }, nls.localize('findRangeHighlight', \"Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFindMatchBorder = registerColor('editor.findMatchBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorFindMatchBorder', \"Border color of the current search match.\"));\nexport const editorFindMatchHighlightBorder = registerColor('editor.findMatchHighlightBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('findMatchHighlightBorder', \"Border color of the other search matches.\"));\nexport const editorFindRangeHighlightBorder = registerColor('editor.findRangeHighlightBorder', { dark: null, light: null, hcDark: transparent(activeContrastBorder, 0.4), hcLight: transparent(activeContrastBorder, 0.4) }, nls.localize('findRangeHighlightBorder', \"Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\n/**\n * Search Editor query match colors.\n *\n * Distinct from normal editor find match to allow for better differentiation\n */\nexport const searchEditorFindMatch = registerColor('searchEditor.findMatchBackground', { light: transparent(editorFindMatchHighlight, 0.66), dark: transparent(editorFindMatchHighlight, 0.66), hcDark: editorFindMatchHighlight, hcLight: editorFindMatchHighlight }, nls.localize('searchEditor.queryMatch', \"Color of the Search Editor query matches.\"));\nexport const searchEditorFindMatchBorder = registerColor('searchEditor.findMatchBorder', { light: transparent(editorFindMatchHighlightBorder, 0.66), dark: transparent(editorFindMatchHighlightBorder, 0.66), hcDark: editorFindMatchHighlightBorder, hcLight: editorFindMatchHighlightBorder }, nls.localize('searchEditor.editorFindMatchBorder', \"Border color of the Search Editor query matches.\"));\n/**\n * Search Viewlet colors.\n */\nexport const searchResultsInfoForeground = registerColor('search.resultsInfoForeground', { light: foreground, dark: transparent(foreground, 0.65), hcDark: foreground, hcLight: foreground }, nls.localize('search.resultsInfoForeground', \"Color of the text in the search viewlet's completion message.\"));\n/**\n * Editor hover\n */\nexport const editorHoverHighlight = registerColor('editor.hoverHighlightBackground', { light: '#ADD6FF26', dark: '#264f7840', hcDark: '#ADD6FF26', hcLight: null }, nls.localize('hoverHighlight', 'Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorHoverBackground = registerColor('editorHoverWidget.background', { light: editorWidgetBackground, dark: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('hoverBackground', 'Background color of the editor hover.'));\nexport const editorHoverForeground = registerColor('editorHoverWidget.foreground', { light: editorWidgetForeground, dark: editorWidgetForeground, hcDark: editorWidgetForeground, hcLight: editorWidgetForeground }, nls.localize('hoverForeground', 'Foreground color of the editor hover.'));\nexport const editorHoverBorder = registerColor('editorHoverWidget.border', { light: editorWidgetBorder, dark: editorWidgetBorder, hcDark: editorWidgetBorder, hcLight: editorWidgetBorder }, nls.localize('hoverBorder', 'Border color of the editor hover.'));\nexport const editorHoverStatusBarBackground = registerColor('editorHoverWidget.statusBarBackground', { dark: lighten(editorHoverBackground, 0.2), light: darken(editorHoverBackground, 0.05), hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('statusBarBackground', \"Background color of the editor hover status bar.\"));\n/**\n * Editor link colors\n */\nexport const editorActiveLinkForeground = registerColor('editorLink.activeForeground', { dark: '#4E94CE', light: Color.blue, hcDark: Color.cyan, hcLight: '#292929' }, nls.localize('activeLinkForeground', 'Color of active links.'));\n/**\n * Inline hints\n */\nexport const editorInlayHintForeground = registerColor('editorInlayHint.foreground', { dark: '#969696', light: '#969696', hcDark: Color.white, hcLight: Color.black }, nls.localize('editorInlayHintForeground', 'Foreground color of inline hints'));\nexport const editorInlayHintBackground = registerColor('editorInlayHint.background', { dark: transparent(badgeBackground, .10), light: transparent(badgeBackground, .10), hcDark: transparent(Color.white, .10), hcLight: transparent(badgeBackground, .10) }, nls.localize('editorInlayHintBackground', 'Background color of inline hints'));\nexport const editorInlayHintTypeForeground = registerColor('editorInlayHint.typeForeground', { dark: editorInlayHintForeground, light: editorInlayHintForeground, hcDark: editorInlayHintForeground, hcLight: editorInlayHintForeground }, nls.localize('editorInlayHintForegroundTypes', 'Foreground color of inline hints for types'));\nexport const editorInlayHintTypeBackground = registerColor('editorInlayHint.typeBackground', { dark: editorInlayHintBackground, light: editorInlayHintBackground, hcDark: editorInlayHintBackground, hcLight: editorInlayHintBackground }, nls.localize('editorInlayHintBackgroundTypes', 'Background color of inline hints for types'));\nexport const editorInlayHintParameterForeground = registerColor('editorInlayHint.parameterForeground', { dark: editorInlayHintForeground, light: editorInlayHintForeground, hcDark: editorInlayHintForeground, hcLight: editorInlayHintForeground }, nls.localize('editorInlayHintForegroundParameter', 'Foreground color of inline hints for parameters'));\nexport const editorInlayHintParameterBackground = registerColor('editorInlayHint.parameterBackground', { dark: editorInlayHintBackground, light: editorInlayHintBackground, hcDark: editorInlayHintBackground, hcLight: editorInlayHintBackground }, nls.localize('editorInlayHintBackgroundParameter', 'Background color of inline hints for parameters'));\n/**\n * Editor lightbulb icon colors\n */\nexport const editorLightBulbForeground = registerColor('editorLightBulb.foreground', { dark: '#FFCC00', light: '#DDB100', hcDark: '#FFCC00', hcLight: '#007ACC' }, nls.localize('editorLightBulbForeground', \"The color used for the lightbulb actions icon.\"));\nexport const editorLightBulbAutoFixForeground = registerColor('editorLightBulbAutoFix.foreground', { dark: '#75BEFF', light: '#007ACC', hcDark: '#75BEFF', hcLight: '#007ACC' }, nls.localize('editorLightBulbAutoFixForeground', \"The color used for the lightbulb auto fix actions icon.\"));\n/**\n * Diff Editor Colors\n */\nexport const defaultInsertColor = new Color(new RGBA(155, 185, 85, .2));\nexport const defaultRemoveColor = new Color(new RGBA(255, 0, 0, .2));\nexport const diffInserted = registerColor('diffEditor.insertedTextBackground', { dark: '#9ccc2c33', light: '#9ccc2c40', hcDark: null, hcLight: null }, nls.localize('diffEditorInserted', 'Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffRemoved = registerColor('diffEditor.removedTextBackground', { dark: '#ff000033', light: '#ff000033', hcDark: null, hcLight: null }, nls.localize('diffEditorRemoved', 'Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffInsertedLine = registerColor('diffEditor.insertedLineBackground', { dark: defaultInsertColor, light: defaultInsertColor, hcDark: null, hcLight: null }, nls.localize('diffEditorInsertedLines', 'Background color for lines that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffRemovedLine = registerColor('diffEditor.removedLineBackground', { dark: defaultRemoveColor, light: defaultRemoveColor, hcDark: null, hcLight: null }, nls.localize('diffEditorRemovedLines', 'Background color for lines that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffInsertedLineGutter = registerColor('diffEditorGutter.insertedLineBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('diffEditorInsertedLineGutter', 'Background color for the margin where lines got inserted.'));\nexport const diffRemovedLineGutter = registerColor('diffEditorGutter.removedLineBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('diffEditorRemovedLineGutter', 'Background color for the margin where lines got removed.'));\nexport const diffOverviewRulerInserted = registerColor('diffEditorOverview.insertedForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('diffEditorOverviewInserted', 'Diff overview ruler foreground for inserted content.'));\nexport const diffOverviewRulerRemoved = registerColor('diffEditorOverview.removedForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('diffEditorOverviewRemoved', 'Diff overview ruler foreground for removed content.'));\nexport const diffInsertedOutline = registerColor('diffEditor.insertedTextBorder', { dark: null, light: null, hcDark: '#33ff2eff', hcLight: '#374E06' }, nls.localize('diffEditorInsertedOutline', 'Outline color for the text that got inserted.'));\nexport const diffRemovedOutline = registerColor('diffEditor.removedTextBorder', { dark: null, light: null, hcDark: '#FF008F', hcLight: '#AD0707' }, nls.localize('diffEditorRemovedOutline', 'Outline color for text that got removed.'));\nexport const diffBorder = registerColor('diffEditor.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('diffEditorBorder', 'Border color between the two text editors.'));\nexport const diffDiagonalFill = registerColor('diffEditor.diagonalFill', { dark: '#cccccc33', light: '#22222233', hcDark: null, hcLight: null }, nls.localize('diffDiagonalFill', \"Color of the diff editor's diagonal fill. The diagonal fill is used in side-by-side diff views.\"));\nexport const diffUnchangedRegionBackground = registerColor('diffEditor.unchangedRegionBackground', { dark: '#3e3e3e', light: '#e4e4e4', hcDark: null, hcLight: null }, nls.localize('diffEditor.unchangedRegionBackground', \"The background color of unchanged blocks in the diff editor.\"));\nexport const diffUnchangedRegionForeground = registerColor('diffEditor.unchangedRegionForeground', { dark: '#a3a2a2', light: '#4d4c4c', hcDark: null, hcLight: null }, nls.localize('diffEditor.unchangedRegionForeground', \"The foreground color of unchanged blocks in the diff editor.\"));\nexport const diffUnchangedTextBackground = registerColor('diffEditor.unchangedCodeBackground', { dark: '#74747429', light: '#b8b8b829', hcDark: null, hcLight: null }, nls.localize('diffEditor.unchangedCodeBackground', \"The background color of unchanged code in the diff editor.\"));\n/**\n * List and tree colors\n */\nexport const listFocusBackground = registerColor('list.focusBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listFocusBackground', \"List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusForeground = registerColor('list.focusForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listFocusForeground', \"List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusOutline = registerColor('list.focusOutline', { dark: focusBorder, light: focusBorder, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('listFocusOutline', \"List/Tree outline color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusAndSelectionOutline = registerColor('list.focusAndSelectionOutline', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listFocusAndSelectionOutline', \"List/Tree outline color for the focused item when the list/tree is active and selected. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionBackground = registerColor('list.activeSelectionBackground', { dark: '#04395E', light: '#0060C0', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listActiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionForeground = registerColor('list.activeSelectionForeground', { dark: Color.white, light: Color.white, hcDark: null, hcLight: null }, nls.localize('listActiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionIconForeground = registerColor('list.activeSelectionIconForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listActiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionBackground = registerColor('list.inactiveSelectionBackground', { dark: '#37373D', light: '#E4E6F1', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listInactiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionForeground = registerColor('list.inactiveSelectionForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listInactiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionIconForeground = registerColor('list.inactiveSelectionIconForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listInactiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusBackground = registerColor('list.inactiveFocusBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listInactiveFocusBackground', \"List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusOutline = registerColor('list.inactiveFocusOutline', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listInactiveFocusOutline', \"List/Tree outline color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listHoverBackground = registerColor('list.hoverBackground', { dark: '#2A2D2E', light: '#F0F0F0', hcDark: Color.white.transparent(0.1), hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listHoverBackground', \"List/Tree background when hovering over items using the mouse.\"));\nexport const listHoverForeground = registerColor('list.hoverForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listHoverForeground', \"List/Tree foreground when hovering over items using the mouse.\"));\nexport const listDropBackground = registerColor('list.dropBackground', { dark: '#062F4A', light: '#D6EBFF', hcDark: null, hcLight: null }, nls.localize('listDropBackground', \"List/Tree drag and drop background when moving items around using the mouse.\"));\nexport const listHighlightForeground = registerColor('list.highlightForeground', { dark: '#2AAAFF', light: '#0066BF', hcDark: focusBorder, hcLight: focusBorder }, nls.localize('highlight', 'List/Tree foreground color of the match highlights when searching inside the list/tree.'));\nexport const listFocusHighlightForeground = registerColor('list.focusHighlightForeground', { dark: listHighlightForeground, light: ifDefinedThenElse(listActiveSelectionBackground, listHighlightForeground, '#BBE7FF'), hcDark: listHighlightForeground, hcLight: listHighlightForeground }, nls.localize('listFocusHighlightForeground', 'List/Tree foreground color of the match highlights on actively focused items when searching inside the list/tree.'));\nexport const listInvalidItemForeground = registerColor('list.invalidItemForeground', { dark: '#B89500', light: '#B89500', hcDark: '#B89500', hcLight: '#B5200D' }, nls.localize('invalidItemForeground', 'List/Tree foreground color for invalid items, for example an unresolved root in explorer.'));\nexport const listErrorForeground = registerColor('list.errorForeground', { dark: '#F88070', light: '#B01011', hcDark: null, hcLight: null }, nls.localize('listErrorForeground', 'Foreground color of list items containing errors.'));\nexport const listWarningForeground = registerColor('list.warningForeground', { dark: '#CCA700', light: '#855F00', hcDark: null, hcLight: null }, nls.localize('listWarningForeground', 'Foreground color of list items containing warnings.'));\nexport const listFilterWidgetBackground = registerColor('listFilterWidget.background', { light: darken(editorWidgetBackground, 0), dark: lighten(editorWidgetBackground, 0), hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('listFilterWidgetBackground', 'Background color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetOutline = registerColor('listFilterWidget.outline', { dark: Color.transparent, light: Color.transparent, hcDark: '#f38518', hcLight: '#007ACC' }, nls.localize('listFilterWidgetOutline', 'Outline color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetNoMatchesOutline = registerColor('listFilterWidget.noMatchesOutline', { dark: '#BE1100', light: '#BE1100', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('listFilterWidgetNoMatchesOutline', 'Outline color of the type filter widget in lists and trees, when there are no matches.'));\nexport const listFilterWidgetShadow = registerColor('listFilterWidget.shadow', { dark: widgetShadow, light: widgetShadow, hcDark: widgetShadow, hcLight: widgetShadow }, nls.localize('listFilterWidgetShadow', 'Shadow color of the type filter widget in lists and trees.'));\nexport const listFilterMatchHighlight = registerColor('list.filterMatchBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hcDark: null, hcLight: null }, nls.localize('listFilterMatchHighlight', 'Background color of the filtered match.'));\nexport const listFilterMatchHighlightBorder = registerColor('list.filterMatchBorder', { dark: editorFindMatchHighlightBorder, light: editorFindMatchHighlightBorder, hcDark: contrastBorder, hcLight: activeContrastBorder }, nls.localize('listFilterMatchHighlightBorder', 'Border color of the filtered match.'));\nexport const treeIndentGuidesStroke = registerColor('tree.indentGuidesStroke', { dark: '#585858', light: '#a9a9a9', hcDark: '#a9a9a9', hcLight: '#a5a5a5' }, nls.localize('treeIndentGuidesStroke', \"Tree stroke color for the indentation guides.\"));\nexport const treeInactiveIndentGuidesStroke = registerColor('tree.inactiveIndentGuidesStroke', { dark: transparent(treeIndentGuidesStroke, 0.4), light: transparent(treeIndentGuidesStroke, 0.4), hcDark: transparent(treeIndentGuidesStroke, 0.4), hcLight: transparent(treeIndentGuidesStroke, 0.4) }, nls.localize('treeInactiveIndentGuidesStroke', \"Tree stroke color for the indentation guides that are not active.\"));\nexport const tableColumnsBorder = registerColor('tree.tableColumnsBorder', { dark: '#CCCCCC20', light: '#61616120', hcDark: null, hcLight: null }, nls.localize('tableColumnsBorder', \"Table border color between columns.\"));\nexport const tableOddRowsBackgroundColor = registerColor('tree.tableOddRowsBackground', { dark: transparent(foreground, 0.04), light: transparent(foreground, 0.04), hcDark: null, hcLight: null }, nls.localize('tableOddRowsBackgroundColor', \"Background color for odd table rows.\"));\nexport const listDeemphasizedForeground = registerColor('list.deemphasizedForeground', { dark: '#8C8C8C', light: '#8E8E90', hcDark: '#A7A8A9', hcLight: '#666666' }, nls.localize('listDeemphasizedForeground', \"List/Tree foreground color for items that are deemphasized. \"));\n/**\n * Checkboxes\n */\nexport const checkboxBackground = registerColor('checkbox.background', { dark: selectBackground, light: selectBackground, hcDark: selectBackground, hcLight: selectBackground }, nls.localize('checkbox.background', \"Background color of checkbox widget.\"));\nexport const checkboxSelectBackground = registerColor('checkbox.selectBackground', { dark: editorWidgetBackground, light: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('checkbox.select.background', \"Background color of checkbox widget when the element it's in is selected.\"));\nexport const checkboxForeground = registerColor('checkbox.foreground', { dark: selectForeground, light: selectForeground, hcDark: selectForeground, hcLight: selectForeground }, nls.localize('checkbox.foreground', \"Foreground color of checkbox widget.\"));\nexport const checkboxBorder = registerColor('checkbox.border', { dark: selectBorder, light: selectBorder, hcDark: selectBorder, hcLight: selectBorder }, nls.localize('checkbox.border', \"Border color of checkbox widget.\"));\nexport const checkboxSelectBorder = registerColor('checkbox.selectBorder', { dark: iconForeground, light: iconForeground, hcDark: iconForeground, hcLight: iconForeground }, nls.localize('checkbox.select.border', \"Border color of checkbox widget when the element it's in is selected.\"));\n/**\n * Quick pick widget (dependent on List and tree colors)\n */\nexport const _deprecatedQuickInputListFocusBackground = registerColor('quickInput.list.focusBackground', { dark: null, light: null, hcDark: null, hcLight: null }, '', undefined, nls.localize('quickInput.list.focusBackground deprecation', \"Please use quickInputList.focusBackground instead\"));\nexport const quickInputListFocusForeground = registerColor('quickInputList.focusForeground', { dark: listActiveSelectionForeground, light: listActiveSelectionForeground, hcDark: listActiveSelectionForeground, hcLight: listActiveSelectionForeground }, nls.localize('quickInput.listFocusForeground', \"Quick picker foreground color for the focused item.\"));\nexport const quickInputListFocusIconForeground = registerColor('quickInputList.focusIconForeground', { dark: listActiveSelectionIconForeground, light: listActiveSelectionIconForeground, hcDark: listActiveSelectionIconForeground, hcLight: listActiveSelectionIconForeground }, nls.localize('quickInput.listFocusIconForeground', \"Quick picker icon foreground color for the focused item.\"));\nexport const quickInputListFocusBackground = registerColor('quickInputList.focusBackground', { dark: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), light: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), hcDark: null, hcLight: null }, nls.localize('quickInput.listFocusBackground', \"Quick picker background color for the focused item.\"));\n/**\n * Menu colors\n */\nexport const menuBorder = registerColor('menu.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('menuBorder', \"Border color of menus.\"));\nexport const menuForeground = registerColor('menu.foreground', { dark: selectForeground, light: selectForeground, hcDark: selectForeground, hcLight: selectForeground }, nls.localize('menuForeground', \"Foreground color of menu items.\"));\nexport const menuBackground = registerColor('menu.background', { dark: selectBackground, light: selectBackground, hcDark: selectBackground, hcLight: selectBackground }, nls.localize('menuBackground', \"Background color of menu items.\"));\nexport const menuSelectionForeground = registerColor('menu.selectionForeground', { dark: listActiveSelectionForeground, light: listActiveSelectionForeground, hcDark: listActiveSelectionForeground, hcLight: listActiveSelectionForeground }, nls.localize('menuSelectionForeground', \"Foreground color of the selected menu item in menus.\"));\nexport const menuSelectionBackground = registerColor('menu.selectionBackground', { dark: listActiveSelectionBackground, light: listActiveSelectionBackground, hcDark: listActiveSelectionBackground, hcLight: listActiveSelectionBackground }, nls.localize('menuSelectionBackground', \"Background color of the selected menu item in menus.\"));\nexport const menuSelectionBorder = registerColor('menu.selectionBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('menuSelectionBorder', \"Border color of the selected menu item in menus.\"));\nexport const menuSeparatorBackground = registerColor('menu.separatorBackground', { dark: '#606060', light: '#D4D4D4', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('menuSeparatorBackground', \"Color of a separator menu item in menus.\"));\n/**\n * Toolbar colors\n */\nexport const toolbarHoverBackground = registerColor('toolbar.hoverBackground', { dark: '#5a5d5e50', light: '#b8b8b850', hcDark: null, hcLight: null }, nls.localize('toolbarHoverBackground', \"Toolbar background when hovering over actions using the mouse\"));\nexport const toolbarHoverOutline = registerColor('toolbar.hoverOutline', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('toolbarHoverOutline', \"Toolbar outline when hovering over actions using the mouse\"));\nexport const toolbarActiveBackground = registerColor('toolbar.activeBackground', { dark: lighten(toolbarHoverBackground, 0.1), light: darken(toolbarHoverBackground, 0.1), hcDark: null, hcLight: null }, nls.localize('toolbarActiveBackground', \"Toolbar background when holding the mouse over actions\"));\n/**\n * Snippet placeholder colors\n */\nexport const snippetTabstopHighlightBackground = registerColor('editor.snippetTabstopHighlightBackground', { dark: new Color(new RGBA(124, 124, 124, 0.3)), light: new Color(new RGBA(10, 50, 100, 0.2)), hcDark: new Color(new RGBA(124, 124, 124, 0.3)), hcLight: new Color(new RGBA(10, 50, 100, 0.2)) }, nls.localize('snippetTabstopHighlightBackground', \"Highlight background color of a snippet tabstop.\"));\nexport const snippetTabstopHighlightBorder = registerColor('editor.snippetTabstopHighlightBorder', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('snippetTabstopHighlightBorder', \"Highlight border color of a snippet tabstop.\"));\nexport const snippetFinalTabstopHighlightBackground = registerColor('editor.snippetFinalTabstopHighlightBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('snippetFinalTabstopHighlightBackground', \"Highlight background color of the final tabstop of a snippet.\"));\nexport const snippetFinalTabstopHighlightBorder = registerColor('editor.snippetFinalTabstopHighlightBorder', { dark: '#525252', light: new Color(new RGBA(10, 50, 100, 0.5)), hcDark: '#525252', hcLight: '#292929' }, nls.localize('snippetFinalTabstopHighlightBorder', \"Highlight border color of the final tabstop of a snippet.\"));\n/**\n * Breadcrumb colors\n */\nexport const breadcrumbsForeground = registerColor('breadcrumb.foreground', { light: transparent(foreground, 0.8), dark: transparent(foreground, 0.8), hcDark: transparent(foreground, 0.8), hcLight: transparent(foreground, 0.8) }, nls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\nexport const breadcrumbsBackground = registerColor('breadcrumb.background', { light: editorBackground, dark: editorBackground, hcDark: editorBackground, hcLight: editorBackground }, nls.localize('breadcrumbsBackground', \"Background color of breadcrumb items.\"));\nexport const breadcrumbsFocusForeground = registerColor('breadcrumb.focusForeground', { light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hcDark: lighten(foreground, 0.1), hcLight: lighten(foreground, 0.1) }, nls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\nexport const breadcrumbsActiveSelectionForeground = registerColor('breadcrumb.activeSelectionForeground', { light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hcDark: lighten(foreground, 0.1), hcLight: lighten(foreground, 0.1) }, nls.localize('breadcrumbsSelectedForeground', \"Color of selected breadcrumb items.\"));\nexport const breadcrumbsPickerBackground = registerColor('breadcrumbPicker.background', { light: editorWidgetBackground, dark: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('breadcrumbsSelectedBackground', \"Background color of breadcrumb item picker.\"));\n/**\n * Merge-conflict colors\n */\nconst headerTransparency = 0.5;\nconst currentBaseColor = Color.fromHex('#40C8AE').transparent(headerTransparency);\nconst incomingBaseColor = Color.fromHex('#40A6FF').transparent(headerTransparency);\nconst commonBaseColor = Color.fromHex('#606060').transparent(0.4);\nconst contentTransparency = 0.4;\nconst rulerTransparency = 1;\nexport const mergeCurrentHeaderBackground = registerColor('merge.currentHeaderBackground', { dark: currentBaseColor, light: currentBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeCurrentHeaderBackground', 'Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCurrentContentBackground = registerColor('merge.currentContentBackground', { dark: transparent(mergeCurrentHeaderBackground, contentTransparency), light: transparent(mergeCurrentHeaderBackground, contentTransparency), hcDark: transparent(mergeCurrentHeaderBackground, contentTransparency), hcLight: transparent(mergeCurrentHeaderBackground, contentTransparency) }, nls.localize('mergeCurrentContentBackground', 'Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeIncomingHeaderBackground = registerColor('merge.incomingHeaderBackground', { dark: incomingBaseColor, light: incomingBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeIncomingHeaderBackground', 'Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeIncomingContentBackground = registerColor('merge.incomingContentBackground', { dark: transparent(mergeIncomingHeaderBackground, contentTransparency), light: transparent(mergeIncomingHeaderBackground, contentTransparency), hcDark: transparent(mergeIncomingHeaderBackground, contentTransparency), hcLight: transparent(mergeIncomingHeaderBackground, contentTransparency) }, nls.localize('mergeIncomingContentBackground', 'Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCommonHeaderBackground = registerColor('merge.commonHeaderBackground', { dark: commonBaseColor, light: commonBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeCommonHeaderBackground', 'Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCommonContentBackground = registerColor('merge.commonContentBackground', { dark: transparent(mergeCommonHeaderBackground, contentTransparency), light: transparent(mergeCommonHeaderBackground, contentTransparency), hcDark: transparent(mergeCommonHeaderBackground, contentTransparency), hcLight: transparent(mergeCommonHeaderBackground, contentTransparency) }, nls.localize('mergeCommonContentBackground', 'Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeBorder = registerColor('merge.border', { dark: null, light: null, hcDark: '#C3DF6F', hcLight: '#007ACC' }, nls.localize('mergeBorder', 'Border color on headers and the splitter in inline merge-conflicts.'));\nexport const overviewRulerCurrentContentForeground = registerColor('editorOverviewRuler.currentContentForeground', { dark: transparent(mergeCurrentHeaderBackground, rulerTransparency), light: transparent(mergeCurrentHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerCurrentContentForeground', 'Current overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerIncomingContentForeground = registerColor('editorOverviewRuler.incomingContentForeground', { dark: transparent(mergeIncomingHeaderBackground, rulerTransparency), light: transparent(mergeIncomingHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerIncomingContentForeground', 'Incoming overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerCommonContentForeground = registerColor('editorOverviewRuler.commonContentForeground', { dark: transparent(mergeCommonHeaderBackground, rulerTransparency), light: transparent(mergeCommonHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerCommonContentForeground', 'Common ancestor overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerFindMatchForeground = registerColor('editorOverviewRuler.findMatchForeground', { dark: '#d186167e', light: '#d186167e', hcDark: '#AB5A00', hcLight: '' }, nls.localize('overviewRulerFindMatchForeground', 'Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerSelectionHighlightForeground = registerColor('editorOverviewRuler.selectionHighlightForeground', { dark: '#A0A0A0CC', light: '#A0A0A0CC', hcDark: '#A0A0A0CC', hcLight: '#A0A0A0CC' }, nls.localize('overviewRulerSelectionHighlightForeground', 'Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const minimapFindMatch = registerColor('minimap.findMatchHighlight', { light: '#d18616', dark: '#d18616', hcDark: '#AB5A00', hcLight: '#0F4A85' }, nls.localize('minimapFindMatchHighlight', 'Minimap marker color for find matches.'), true);\nexport const minimapSelectionOccurrenceHighlight = registerColor('minimap.selectionOccurrenceHighlight', { light: '#c9c9c9', dark: '#676767', hcDark: '#ffffff', hcLight: '#0F4A85' }, nls.localize('minimapSelectionOccurrenceHighlight', 'Minimap marker color for repeating editor selections.'), true);\nexport const minimapSelection = registerColor('minimap.selectionHighlight', { light: '#ADD6FF', dark: '#264F78', hcDark: '#ffffff', hcLight: '#0F4A85' }, nls.localize('minimapSelectionHighlight', 'Minimap marker color for the editor selection.'), true);\nexport const minimapInfo = registerColor('minimap.infoHighlight', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoBorder, hcLight: editorInfoBorder }, nls.localize('minimapInfo', 'Minimap marker color for infos.'));\nexport const minimapWarning = registerColor('minimap.warningHighlight', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningBorder, hcLight: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Minimap marker color for warnings.'));\nexport const minimapError = registerColor('minimap.errorHighlight', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hcDark: new Color(new RGBA(255, 50, 50, 1)), hcLight: '#B5200D' }, nls.localize('minimapError', 'Minimap marker color for errors.'));\nexport const minimapBackground = registerColor('minimap.background', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('minimapBackground', \"Minimap background color.\"));\nexport const minimapForegroundOpacity = registerColor('minimap.foregroundOpacity', { dark: Color.fromHex('#000f'), light: Color.fromHex('#000f'), hcDark: Color.fromHex('#000f'), hcLight: Color.fromHex('#000f') }, nls.localize('minimapForegroundOpacity', 'Opacity of foreground elements rendered in the minimap. For example, \"#000000c0\" will render the elements with 75% opacity.'));\nexport const minimapSliderBackground = registerColor('minimapSlider.background', { light: transparent(scrollbarSliderBackground, 0.5), dark: transparent(scrollbarSliderBackground, 0.5), hcDark: transparent(scrollbarSliderBackground, 0.5), hcLight: transparent(scrollbarSliderBackground, 0.5) }, nls.localize('minimapSliderBackground', \"Minimap slider background color.\"));\nexport const minimapSliderHoverBackground = registerColor('minimapSlider.hoverBackground', { light: transparent(scrollbarSliderHoverBackground, 0.5), dark: transparent(scrollbarSliderHoverBackground, 0.5), hcDark: transparent(scrollbarSliderHoverBackground, 0.5), hcLight: transparent(scrollbarSliderHoverBackground, 0.5) }, nls.localize('minimapSliderHoverBackground', \"Minimap slider background color when hovering.\"));\nexport const minimapSliderActiveBackground = registerColor('minimapSlider.activeBackground', { light: transparent(scrollbarSliderActiveBackground, 0.5), dark: transparent(scrollbarSliderActiveBackground, 0.5), hcDark: transparent(scrollbarSliderActiveBackground, 0.5), hcLight: transparent(scrollbarSliderActiveBackground, 0.5) }, nls.localize('minimapSliderActiveBackground', \"Minimap slider background color when clicked on.\"));\nexport const problemsErrorIconForeground = registerColor('problemsErrorIcon.foreground', { dark: editorErrorForeground, light: editorErrorForeground, hcDark: editorErrorForeground, hcLight: editorErrorForeground }, nls.localize('problemsErrorIconForeground', \"The color used for the problems error icon.\"));\nexport const problemsWarningIconForeground = registerColor('problemsWarningIcon.foreground', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningForeground, hcLight: editorWarningForeground }, nls.localize('problemsWarningIconForeground', \"The color used for the problems warning icon.\"));\nexport const problemsInfoIconForeground = registerColor('problemsInfoIcon.foreground', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoForeground, hcLight: editorInfoForeground }, nls.localize('problemsInfoIconForeground', \"The color used for the problems info icon.\"));\n/**\n * Chart colors\n */\nexport const chartsForeground = registerColor('charts.foreground', { dark: foreground, light: foreground, hcDark: foreground, hcLight: foreground }, nls.localize('chartsForeground', \"The foreground color used in charts.\"));\nexport const chartsLines = registerColor('charts.lines', { dark: transparent(foreground, .5), light: transparent(foreground, .5), hcDark: transparent(foreground, .5), hcLight: transparent(foreground, .5) }, nls.localize('chartsLines', \"The color used for horizontal lines in charts.\"));\nexport const chartsRed = registerColor('charts.red', { dark: editorErrorForeground, light: editorErrorForeground, hcDark: editorErrorForeground, hcLight: editorErrorForeground }, nls.localize('chartsRed', \"The red color used in chart visualizations.\"));\nexport const chartsBlue = registerColor('charts.blue', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoForeground, hcLight: editorInfoForeground }, nls.localize('chartsBlue', \"The blue color used in chart visualizations.\"));\nexport const chartsYellow = registerColor('charts.yellow', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningForeground, hcLight: editorWarningForeground }, nls.localize('chartsYellow', \"The yellow color used in chart visualizations.\"));\nexport const chartsOrange = registerColor('charts.orange', { dark: minimapFindMatch, light: minimapFindMatch, hcDark: minimapFindMatch, hcLight: minimapFindMatch }, nls.localize('chartsOrange', \"The orange color used in chart visualizations.\"));\nexport const chartsGreen = registerColor('charts.green', { dark: '#89D185', light: '#388A34', hcDark: '#89D185', hcLight: '#374e06' }, nls.localize('chartsGreen', \"The green color used in chart visualizations.\"));\nexport const chartsPurple = registerColor('charts.purple', { dark: '#B180D7', light: '#652D90', hcDark: '#B180D7', hcLight: '#652D90' }, nls.localize('chartsPurple', \"The purple color used in chart visualizations.\"));\n// ----- color functions\nexport function executeTransform(transform, theme) {\n    var _a, _b, _c, _d;\n    switch (transform.op) {\n        case 0 /* ColorTransformType.Darken */:\n            return (_a = resolveColorValue(transform.value, theme)) === null || _a === void 0 ? void 0 : _a.darken(transform.factor);\n        case 1 /* ColorTransformType.Lighten */:\n            return (_b = resolveColorValue(transform.value, theme)) === null || _b === void 0 ? void 0 : _b.lighten(transform.factor);\n        case 2 /* ColorTransformType.Transparent */:\n            return (_c = resolveColorValue(transform.value, theme)) === null || _c === void 0 ? void 0 : _c.transparent(transform.factor);\n        case 3 /* ColorTransformType.Opaque */: {\n            const backgroundColor = resolveColorValue(transform.background, theme);\n            if (!backgroundColor) {\n                return resolveColorValue(transform.value, theme);\n            }\n            return (_d = resolveColorValue(transform.value, theme)) === null || _d === void 0 ? void 0 : _d.makeOpaque(backgroundColor);\n        }\n        case 4 /* ColorTransformType.OneOf */:\n            for (const candidate of transform.values) {\n                const color = resolveColorValue(candidate, theme);\n                if (color) {\n                    return color;\n                }\n            }\n            return undefined;\n        case 6 /* ColorTransformType.IfDefinedThenElse */:\n            return resolveColorValue(theme.defines(transform.if) ? transform.then : transform.else, theme);\n        case 5 /* ColorTransformType.LessProminent */: {\n            const from = resolveColorValue(transform.value, theme);\n            if (!from) {\n                return undefined;\n            }\n            const backgroundColor = resolveColorValue(transform.background, theme);\n            if (!backgroundColor) {\n                return from.transparent(transform.factor * transform.transparency);\n            }\n            return from.isDarkerThan(backgroundColor)\n                ? Color.getLighterColor(from, backgroundColor, transform.factor).transparent(transform.transparency)\n                : Color.getDarkerColor(from, backgroundColor, transform.factor).transparent(transform.transparency);\n        }\n        default:\n            throw assertNever(transform);\n    }\n}\nexport function darken(colorValue, factor) {\n    return { op: 0 /* ColorTransformType.Darken */, value: colorValue, factor };\n}\nexport function lighten(colorValue, factor) {\n    return { op: 1 /* ColorTransformType.Lighten */, value: colorValue, factor };\n}\nexport function transparent(colorValue, factor) {\n    return { op: 2 /* ColorTransformType.Transparent */, value: colorValue, factor };\n}\nexport function oneOf(...colorValues) {\n    return { op: 4 /* ColorTransformType.OneOf */, values: colorValues };\n}\nexport function ifDefinedThenElse(ifArg, thenArg, elseArg) {\n    return { op: 6 /* ColorTransformType.IfDefinedThenElse */, if: ifArg, then: thenArg, else: elseArg };\n}\nfunction lessProminent(colorValue, backgroundColorValue, factor, transparency) {\n    return { op: 5 /* ColorTransformType.LessProminent */, value: colorValue, background: backgroundColorValue, factor, transparency };\n}\n// ----- implementation\n/**\n * @param colorValue Resolve a color value in the context of a theme\n */\nexport function resolveColorValue(colorValue, theme) {\n    if (colorValue === null) {\n        return undefined;\n    }\n    else if (typeof colorValue === 'string') {\n        if (colorValue[0] === '#') {\n            return Color.fromHex(colorValue);\n        }\n        return theme.getColor(colorValue);\n    }\n    else if (colorValue instanceof Color) {\n        return colorValue;\n    }\n    else if (typeof colorValue === 'object') {\n        return executeTransform(colorValue, theme);\n    }\n    return undefined;\n}\nexport const workbenchColorsSchemaId = 'vscode://schemas/workbench-colors';\nconst schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(workbenchColorsSchemaId, colorRegistry.getColorSchema());\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(workbenchColorsSchemaId), 200);\ncolorRegistry.onDidChangeSchema(() => {\n    if (!delayer.isScheduled()) {\n        delayer.schedule();\n    }\n});\n// setTimeout(_ => console.log(colorRegistry.toString()), 5000);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Codicon, getCodiconFontCharacters } from '../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { isString } from '../../../base/common/types.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport * as platform from '../../registry/common/platform.js';\n//  ------ API types\n// icon registry\nexport const Extensions = {\n    IconContribution: 'base.contributions.icons'\n};\nexport var IconContribution;\n(function (IconContribution) {\n    function getDefinition(contribution, registry) {\n        let definition = contribution.defaults;\n        while (ThemeIcon.isThemeIcon(definition)) {\n            const c = iconRegistry.getIcon(definition.id);\n            if (!c) {\n                return undefined;\n            }\n            definition = c.defaults;\n        }\n        return definition;\n    }\n    IconContribution.getDefinition = getDefinition;\n})(IconContribution || (IconContribution = {}));\nexport var IconFontDefinition;\n(function (IconFontDefinition) {\n    function toJSONObject(iconFont) {\n        return {\n            weight: iconFont.weight,\n            style: iconFont.style,\n            src: iconFont.src.map(s => ({ format: s.format, location: s.location.toString() }))\n        };\n    }\n    IconFontDefinition.toJSONObject = toJSONObject;\n    function fromJSONObject(json) {\n        const stringOrUndef = (s) => isString(s) ? s : undefined;\n        if (json && Array.isArray(json.src) && json.src.every((s) => isString(s.format) && isString(s.location))) {\n            return {\n                weight: stringOrUndef(json.weight),\n                style: stringOrUndef(json.style),\n                src: json.src.map((s) => ({ format: s.format, location: URI.parse(s.location) }))\n            };\n        }\n        return undefined;\n    }\n    IconFontDefinition.fromJSONObject = fromJSONObject;\n})(IconFontDefinition || (IconFontDefinition = {}));\nclass IconRegistry {\n    constructor() {\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.iconSchema = {\n            definitions: {\n                icons: {\n                    type: 'object',\n                    properties: {\n                        fontId: { type: 'string', description: localize('iconDefinition.fontId', 'The id of the font to use. If not set, the font that is defined first is used.') },\n                        fontCharacter: { type: 'string', description: localize('iconDefinition.fontCharacter', 'The font character associated with the icon definition.') }\n                    },\n                    additionalProperties: false,\n                    defaultSnippets: [{ body: { fontCharacter: '\\\\\\\\e030' } }]\n                }\n            },\n            type: 'object',\n            properties: {}\n        };\n        this.iconReferenceSchema = { type: 'string', pattern: `^${ThemeIcon.iconNameExpression}$`, enum: [], enumDescriptions: [] };\n        this.iconsById = {};\n        this.iconFontsById = {};\n    }\n    registerIcon(id, defaults, description, deprecationMessage) {\n        const existing = this.iconsById[id];\n        if (existing) {\n            if (description && !existing.description) {\n                existing.description = description;\n                this.iconSchema.properties[id].markdownDescription = `${description} $(${id})`;\n                const enumIndex = this.iconReferenceSchema.enum.indexOf(id);\n                if (enumIndex !== -1) {\n                    this.iconReferenceSchema.enumDescriptions[enumIndex] = description;\n                }\n                this._onDidChange.fire();\n            }\n            return existing;\n        }\n        const iconContribution = { id, description, defaults, deprecationMessage };\n        this.iconsById[id] = iconContribution;\n        const propertySchema = { $ref: '#/definitions/icons' };\n        if (deprecationMessage) {\n            propertySchema.deprecationMessage = deprecationMessage;\n        }\n        if (description) {\n            propertySchema.markdownDescription = `${description}: $(${id})`;\n        }\n        this.iconSchema.properties[id] = propertySchema;\n        this.iconReferenceSchema.enum.push(id);\n        this.iconReferenceSchema.enumDescriptions.push(description || '');\n        this._onDidChange.fire();\n        return { id };\n    }\n    getIcons() {\n        return Object.keys(this.iconsById).map(id => this.iconsById[id]);\n    }\n    getIcon(id) {\n        return this.iconsById[id];\n    }\n    getIconSchema() {\n        return this.iconSchema;\n    }\n    toString() {\n        const sorter = (i1, i2) => {\n            return i1.id.localeCompare(i2.id);\n        };\n        const classNames = (i) => {\n            while (ThemeIcon.isThemeIcon(i.defaults)) {\n                i = this.iconsById[i.defaults.id];\n            }\n            return `codicon codicon-${i ? i.id : ''}`;\n        };\n        const reference = [];\n        reference.push(`| preview     | identifier                        | default codicon ID                | description`);\n        reference.push(`| ----------- | --------------------------------- | --------------------------------- | --------------------------------- |`);\n        const contributions = Object.keys(this.iconsById).map(key => this.iconsById[key]);\n        for (const i of contributions.filter(i => !!i.description).sort(sorter)) {\n            reference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|${ThemeIcon.isThemeIcon(i.defaults) ? i.defaults.id : i.id}|${i.description || ''}|`);\n        }\n        reference.push(`| preview     | identifier                        `);\n        reference.push(`| ----------- | --------------------------------- |`);\n        for (const i of contributions.filter(i => !ThemeIcon.isThemeIcon(i.defaults)).sort(sorter)) {\n            reference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|`);\n        }\n        return reference.join('\\n');\n    }\n}\nconst iconRegistry = new IconRegistry();\nplatform.Registry.add(Extensions.IconContribution, iconRegistry);\nexport function registerIcon(id, defaults, description, deprecationMessage) {\n    return iconRegistry.registerIcon(id, defaults, description, deprecationMessage);\n}\nexport function getIconRegistry() {\n    return iconRegistry;\n}\nfunction initialize() {\n    const codiconFontCharacters = getCodiconFontCharacters();\n    for (const icon in codiconFontCharacters) {\n        const fontCharacter = '\\\\' + codiconFontCharacters[icon].toString(16);\n        iconRegistry.registerIcon(icon, { fontCharacter });\n    }\n}\ninitialize();\nexport const iconsSchemaId = 'vscode://schemas/icons';\nconst schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(iconsSchemaId, iconRegistry.getIconSchema());\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(iconsSchemaId), 200);\niconRegistry.onDidChange(() => {\n    if (!delayer.isScheduled()) {\n        delayer.schedule();\n    }\n});\n//setTimeout(_ => console.log(iconRegistry.toString()), 5000);\n// common icons\nexport const widgetClose = registerIcon('widget-close', Codicon.close, localize('widgetClose', 'Icon for the close action in widgets.'));\nexport const gotoPreviousLocation = registerIcon('goto-previous-location', Codicon.arrowUp, localize('previousChangeIcon', 'Icon for goto previous editor location.'));\nexport const gotoNextLocation = registerIcon('goto-next-location', Codicon.arrowDown, localize('nextChangeIcon', 'Icon for goto next editor location.'));\nexport const syncing = ThemeIcon.modify(Codicon.sync, 'spin');\nexport const spinningLoading = ThemeIcon.modify(Codicon.loading, 'spin');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Color scheme used by the OS and by color themes.\n */\nexport var ColorScheme;\n(function (ColorScheme) {\n    ColorScheme[\"DARK\"] = \"dark\";\n    ColorScheme[\"LIGHT\"] = \"light\";\n    ColorScheme[\"HIGH_CONTRAST_DARK\"] = \"hcDark\";\n    ColorScheme[\"HIGH_CONTRAST_LIGHT\"] = \"hcLight\";\n})(ColorScheme || (ColorScheme = {}));\nexport function isHighContrast(scheme) {\n    return scheme === ColorScheme.HIGH_CONTRAST_DARK || scheme === ColorScheme.HIGH_CONTRAST_LIGHT;\n}\nexport function isDark(scheme) {\n    return scheme === ColorScheme.DARK || scheme === ColorScheme.HIGH_CONTRAST_DARK;\n}\n","import { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport * as platform from '../../registry/common/platform.js';\nimport { ColorScheme } from './theme.js';\nexport const IThemeService = createDecorator('themeService');\nexport function themeColorFromId(id) {\n    return { id };\n}\nexport function getThemeTypeSelector(type) {\n    switch (type) {\n        case ColorScheme.DARK: return 'vs-dark';\n        case ColorScheme.HIGH_CONTRAST_DARK: return 'hc-black';\n        case ColorScheme.HIGH_CONTRAST_LIGHT: return 'hc-light';\n        default: return 'vs';\n    }\n}\n// static theming participant\nexport const Extensions = {\n    ThemingContribution: 'base.contributions.theming'\n};\nclass ThemingRegistry {\n    constructor() {\n        this.themingParticipants = [];\n        this.themingParticipants = [];\n        this.onThemingParticipantAddedEmitter = new Emitter();\n    }\n    onColorThemeChange(participant) {\n        this.themingParticipants.push(participant);\n        this.onThemingParticipantAddedEmitter.fire(participant);\n        return toDisposable(() => {\n            const idx = this.themingParticipants.indexOf(participant);\n            this.themingParticipants.splice(idx, 1);\n        });\n    }\n    getThemingParticipants() {\n        return this.themingParticipants;\n    }\n}\nconst themingRegistry = new ThemingRegistry();\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\nexport function registerThemingParticipant(participant) {\n    return themingRegistry.onColorThemeChange(participant);\n}\n/**\n * Utility base class for all themable components.\n */\nexport class Themable extends Disposable {\n    constructor(themeService) {\n        super();\n        this.themeService = themeService;\n        this.theme = themeService.getColorTheme();\n        // Hook up to theme changes\n        this._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\n    }\n    onThemeChange(theme) {\n        this.theme = theme;\n        this.updateStyles();\n    }\n    updateStyles() {\n        // Subclasses to override\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IUndoRedoService = createDecorator('undoRedoService');\nexport class ResourceEditStackSnapshot {\n    constructor(resource, elements) {\n        this.resource = resource;\n        this.elements = elements;\n    }\n}\nexport class UndoRedoGroup {\n    constructor() {\n        this.id = UndoRedoGroup._ID++;\n        this.order = 1;\n    }\n    nextOrder() {\n        if (this.id === 0) {\n            return 0;\n        }\n        return this.order++;\n    }\n}\nUndoRedoGroup._ID = 0;\nUndoRedoGroup.None = new UndoRedoGroup();\nexport class UndoRedoSource {\n    constructor() {\n        this.id = UndoRedoSource._ID++;\n        this.order = 1;\n    }\n    nextOrder() {\n        if (this.id === 0) {\n            return 0;\n        }\n        return this.order++;\n    }\n}\nUndoRedoSource._ID = 0;\nUndoRedoSource.None = new UndoRedoSource();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Disposable, isDisposable } from '../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport Severity from '../../../base/common/severity.js';\nimport * as nls from '../../../nls.js';\nimport { IDialogService } from '../../dialogs/common/dialogs.js';\nimport { registerSingleton } from '../../instantiation/common/extensions.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { IUndoRedoService, ResourceEditStackSnapshot, UndoRedoGroup, UndoRedoSource } from './undoRedo.js';\nconst DEBUG = false;\nfunction getResourceLabel(resource) {\n    return resource.scheme === Schemas.file ? resource.fsPath : resource.path;\n}\nlet stackElementCounter = 0;\nclass ResourceStackElement {\n    constructor(actual, resourceLabel, strResource, groupId, groupOrder, sourceId, sourceOrder) {\n        this.id = (++stackElementCounter);\n        this.type = 0 /* UndoRedoElementType.Resource */;\n        this.actual = actual;\n        this.label = actual.label;\n        this.confirmBeforeUndo = actual.confirmBeforeUndo || false;\n        this.resourceLabel = resourceLabel;\n        this.strResource = strResource;\n        this.resourceLabels = [this.resourceLabel];\n        this.strResources = [this.strResource];\n        this.groupId = groupId;\n        this.groupOrder = groupOrder;\n        this.sourceId = sourceId;\n        this.sourceOrder = sourceOrder;\n        this.isValid = true;\n    }\n    setValid(isValid) {\n        this.isValid = isValid;\n    }\n    toString() {\n        return `[id:${this.id}] [group:${this.groupId}] [${this.isValid ? '  VALID' : 'INVALID'}] ${this.actual.constructor.name} - ${this.actual}`;\n    }\n}\nclass ResourceReasonPair {\n    constructor(resourceLabel, reason) {\n        this.resourceLabel = resourceLabel;\n        this.reason = reason;\n    }\n}\nclass RemovedResources {\n    constructor() {\n        this.elements = new Map();\n    }\n    createMessage() {\n        const externalRemoval = [];\n        const noParallelUniverses = [];\n        for (const [, element] of this.elements) {\n            const dest = (element.reason === 0 /* RemovedResourceReason.ExternalRemoval */\n                ? externalRemoval\n                : noParallelUniverses);\n            dest.push(element.resourceLabel);\n        }\n        const messages = [];\n        if (externalRemoval.length > 0) {\n            messages.push(nls.localize({ key: 'externalRemoval', comment: ['{0} is a list of filenames'] }, \"The following files have been closed and modified on disk: {0}.\", externalRemoval.join(', ')));\n        }\n        if (noParallelUniverses.length > 0) {\n            messages.push(nls.localize({ key: 'noParallelUniverses', comment: ['{0} is a list of filenames'] }, \"The following files have been modified in an incompatible way: {0}.\", noParallelUniverses.join(', ')));\n        }\n        return messages.join('\\n');\n    }\n    get size() {\n        return this.elements.size;\n    }\n    has(strResource) {\n        return this.elements.has(strResource);\n    }\n    set(strResource, value) {\n        this.elements.set(strResource, value);\n    }\n    delete(strResource) {\n        return this.elements.delete(strResource);\n    }\n}\nclass WorkspaceStackElement {\n    constructor(actual, resourceLabels, strResources, groupId, groupOrder, sourceId, sourceOrder) {\n        this.id = (++stackElementCounter);\n        this.type = 1 /* UndoRedoElementType.Workspace */;\n        this.actual = actual;\n        this.label = actual.label;\n        this.confirmBeforeUndo = actual.confirmBeforeUndo || false;\n        this.resourceLabels = resourceLabels;\n        this.strResources = strResources;\n        this.groupId = groupId;\n        this.groupOrder = groupOrder;\n        this.sourceId = sourceId;\n        this.sourceOrder = sourceOrder;\n        this.removedResources = null;\n        this.invalidatedResources = null;\n    }\n    canSplit() {\n        return (typeof this.actual.split === 'function');\n    }\n    removeResource(resourceLabel, strResource, reason) {\n        if (!this.removedResources) {\n            this.removedResources = new RemovedResources();\n        }\n        if (!this.removedResources.has(strResource)) {\n            this.removedResources.set(strResource, new ResourceReasonPair(resourceLabel, reason));\n        }\n    }\n    setValid(resourceLabel, strResource, isValid) {\n        if (isValid) {\n            if (this.invalidatedResources) {\n                this.invalidatedResources.delete(strResource);\n                if (this.invalidatedResources.size === 0) {\n                    this.invalidatedResources = null;\n                }\n            }\n        }\n        else {\n            if (!this.invalidatedResources) {\n                this.invalidatedResources = new RemovedResources();\n            }\n            if (!this.invalidatedResources.has(strResource)) {\n                this.invalidatedResources.set(strResource, new ResourceReasonPair(resourceLabel, 0 /* RemovedResourceReason.ExternalRemoval */));\n            }\n        }\n    }\n    toString() {\n        return `[id:${this.id}] [group:${this.groupId}] [${this.invalidatedResources ? 'INVALID' : '  VALID'}] ${this.actual.constructor.name} - ${this.actual}`;\n    }\n}\nclass ResourceEditStack {\n    constructor(resourceLabel, strResource) {\n        this.resourceLabel = resourceLabel;\n        this.strResource = strResource;\n        this._past = [];\n        this._future = [];\n        this.locked = false;\n        this.versionId = 1;\n    }\n    dispose() {\n        for (const element of this._past) {\n            if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* RemovedResourceReason.ExternalRemoval */);\n            }\n        }\n        for (const element of this._future) {\n            if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* RemovedResourceReason.ExternalRemoval */);\n            }\n        }\n        this.versionId++;\n    }\n    toString() {\n        const result = [];\n        result.push(`* ${this.strResource}:`);\n        for (let i = 0; i < this._past.length; i++) {\n            result.push(`   * [UNDO] ${this._past[i]}`);\n        }\n        for (let i = this._future.length - 1; i >= 0; i--) {\n            result.push(`   * [REDO] ${this._future[i]}`);\n        }\n        return result.join('\\n');\n    }\n    flushAllElements() {\n        this._past = [];\n        this._future = [];\n        this.versionId++;\n    }\n    _setElementValidFlag(element, isValid) {\n        if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n            element.setValid(this.resourceLabel, this.strResource, isValid);\n        }\n        else {\n            element.setValid(isValid);\n        }\n    }\n    setElementsValidFlag(isValid, filter) {\n        for (const element of this._past) {\n            if (filter(element.actual)) {\n                this._setElementValidFlag(element, isValid);\n            }\n        }\n        for (const element of this._future) {\n            if (filter(element.actual)) {\n                this._setElementValidFlag(element, isValid);\n            }\n        }\n    }\n    pushElement(element) {\n        // remove the future\n        for (const futureElement of this._future) {\n            if (futureElement.type === 1 /* UndoRedoElementType.Workspace */) {\n                futureElement.removeResource(this.resourceLabel, this.strResource, 1 /* RemovedResourceReason.NoParallelUniverses */);\n            }\n        }\n        this._future = [];\n        this._past.push(element);\n        this.versionId++;\n    }\n    createSnapshot(resource) {\n        const elements = [];\n        for (let i = 0, len = this._past.length; i < len; i++) {\n            elements.push(this._past[i].id);\n        }\n        for (let i = this._future.length - 1; i >= 0; i--) {\n            elements.push(this._future[i].id);\n        }\n        return new ResourceEditStackSnapshot(resource, elements);\n    }\n    restoreSnapshot(snapshot) {\n        const snapshotLength = snapshot.elements.length;\n        let isOK = true;\n        let snapshotIndex = 0;\n        let removePastAfter = -1;\n        for (let i = 0, len = this._past.length; i < len; i++, snapshotIndex++) {\n            const element = this._past[i];\n            if (isOK && (snapshotIndex >= snapshotLength || element.id !== snapshot.elements[snapshotIndex])) {\n                isOK = false;\n                removePastAfter = 0;\n            }\n            if (!isOK && element.type === 1 /* UndoRedoElementType.Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* RemovedResourceReason.ExternalRemoval */);\n            }\n        }\n        let removeFutureBefore = -1;\n        for (let i = this._future.length - 1; i >= 0; i--, snapshotIndex++) {\n            const element = this._future[i];\n            if (isOK && (snapshotIndex >= snapshotLength || element.id !== snapshot.elements[snapshotIndex])) {\n                isOK = false;\n                removeFutureBefore = i;\n            }\n            if (!isOK && element.type === 1 /* UndoRedoElementType.Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* RemovedResourceReason.ExternalRemoval */);\n            }\n        }\n        if (removePastAfter !== -1) {\n            this._past = this._past.slice(0, removePastAfter);\n        }\n        if (removeFutureBefore !== -1) {\n            this._future = this._future.slice(removeFutureBefore + 1);\n        }\n        this.versionId++;\n    }\n    getElements() {\n        const past = [];\n        const future = [];\n        for (const element of this._past) {\n            past.push(element.actual);\n        }\n        for (const element of this._future) {\n            future.push(element.actual);\n        }\n        return { past, future };\n    }\n    getClosestPastElement() {\n        if (this._past.length === 0) {\n            return null;\n        }\n        return this._past[this._past.length - 1];\n    }\n    getSecondClosestPastElement() {\n        if (this._past.length < 2) {\n            return null;\n        }\n        return this._past[this._past.length - 2];\n    }\n    getClosestFutureElement() {\n        if (this._future.length === 0) {\n            return null;\n        }\n        return this._future[this._future.length - 1];\n    }\n    hasPastElements() {\n        return (this._past.length > 0);\n    }\n    hasFutureElements() {\n        return (this._future.length > 0);\n    }\n    splitPastWorkspaceElement(toRemove, individualMap) {\n        for (let j = this._past.length - 1; j >= 0; j--) {\n            if (this._past[j] === toRemove) {\n                if (individualMap.has(this.strResource)) {\n                    // gets replaced\n                    this._past[j] = individualMap.get(this.strResource);\n                }\n                else {\n                    // gets deleted\n                    this._past.splice(j, 1);\n                }\n                break;\n            }\n        }\n        this.versionId++;\n    }\n    splitFutureWorkspaceElement(toRemove, individualMap) {\n        for (let j = this._future.length - 1; j >= 0; j--) {\n            if (this._future[j] === toRemove) {\n                if (individualMap.has(this.strResource)) {\n                    // gets replaced\n                    this._future[j] = individualMap.get(this.strResource);\n                }\n                else {\n                    // gets deleted\n                    this._future.splice(j, 1);\n                }\n                break;\n            }\n        }\n        this.versionId++;\n    }\n    moveBackward(element) {\n        this._past.pop();\n        this._future.push(element);\n        this.versionId++;\n    }\n    moveForward(element) {\n        this._future.pop();\n        this._past.push(element);\n        this.versionId++;\n    }\n}\nclass EditStackSnapshot {\n    constructor(editStacks) {\n        this.editStacks = editStacks;\n        this._versionIds = [];\n        for (let i = 0, len = this.editStacks.length; i < len; i++) {\n            this._versionIds[i] = this.editStacks[i].versionId;\n        }\n    }\n    isValid() {\n        for (let i = 0, len = this.editStacks.length; i < len; i++) {\n            if (this._versionIds[i] !== this.editStacks[i].versionId) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nconst missingEditStack = new ResourceEditStack('', '');\nmissingEditStack.locked = true;\nlet UndoRedoService = class UndoRedoService {\n    constructor(_dialogService, _notificationService) {\n        this._dialogService = _dialogService;\n        this._notificationService = _notificationService;\n        this._editStacks = new Map();\n        this._uriComparisonKeyComputers = [];\n    }\n    getUriComparisonKey(resource) {\n        for (const uriComparisonKeyComputer of this._uriComparisonKeyComputers) {\n            if (uriComparisonKeyComputer[0] === resource.scheme) {\n                return uriComparisonKeyComputer[1].getComparisonKey(resource);\n            }\n        }\n        return resource.toString();\n    }\n    _print(label) {\n        console.log(`------------------------------------`);\n        console.log(`AFTER ${label}: `);\n        const str = [];\n        for (const element of this._editStacks) {\n            str.push(element[1].toString());\n        }\n        console.log(str.join('\\n'));\n    }\n    pushElement(element, group = UndoRedoGroup.None, source = UndoRedoSource.None) {\n        if (element.type === 0 /* UndoRedoElementType.Resource */) {\n            const resourceLabel = getResourceLabel(element.resource);\n            const strResource = this.getUriComparisonKey(element.resource);\n            this._pushElement(new ResourceStackElement(element, resourceLabel, strResource, group.id, group.nextOrder(), source.id, source.nextOrder()));\n        }\n        else {\n            const seen = new Set();\n            const resourceLabels = [];\n            const strResources = [];\n            for (const resource of element.resources) {\n                const resourceLabel = getResourceLabel(resource);\n                const strResource = this.getUriComparisonKey(resource);\n                if (seen.has(strResource)) {\n                    continue;\n                }\n                seen.add(strResource);\n                resourceLabels.push(resourceLabel);\n                strResources.push(strResource);\n            }\n            if (resourceLabels.length === 1) {\n                this._pushElement(new ResourceStackElement(element, resourceLabels[0], strResources[0], group.id, group.nextOrder(), source.id, source.nextOrder()));\n            }\n            else {\n                this._pushElement(new WorkspaceStackElement(element, resourceLabels, strResources, group.id, group.nextOrder(), source.id, source.nextOrder()));\n            }\n        }\n        if (DEBUG) {\n            this._print('pushElement');\n        }\n    }\n    _pushElement(element) {\n        for (let i = 0, len = element.strResources.length; i < len; i++) {\n            const resourceLabel = element.resourceLabels[i];\n            const strResource = element.strResources[i];\n            let editStack;\n            if (this._editStacks.has(strResource)) {\n                editStack = this._editStacks.get(strResource);\n            }\n            else {\n                editStack = new ResourceEditStack(resourceLabel, strResource);\n                this._editStacks.set(strResource, editStack);\n            }\n            editStack.pushElement(element);\n        }\n    }\n    getLastElement(resource) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            if (editStack.hasFutureElements()) {\n                return null;\n            }\n            const closestPastElement = editStack.getClosestPastElement();\n            return closestPastElement ? closestPastElement.actual : null;\n        }\n        return null;\n    }\n    _splitPastWorkspaceElement(toRemove, ignoreResources) {\n        const individualArr = toRemove.actual.split();\n        const individualMap = new Map();\n        for (const _element of individualArr) {\n            const resourceLabel = getResourceLabel(_element.resource);\n            const strResource = this.getUriComparisonKey(_element.resource);\n            const element = new ResourceStackElement(_element, resourceLabel, strResource, 0, 0, 0, 0);\n            individualMap.set(element.strResource, element);\n        }\n        for (const strResource of toRemove.strResources) {\n            if (ignoreResources && ignoreResources.has(strResource)) {\n                continue;\n            }\n            const editStack = this._editStacks.get(strResource);\n            editStack.splitPastWorkspaceElement(toRemove, individualMap);\n        }\n    }\n    _splitFutureWorkspaceElement(toRemove, ignoreResources) {\n        const individualArr = toRemove.actual.split();\n        const individualMap = new Map();\n        for (const _element of individualArr) {\n            const resourceLabel = getResourceLabel(_element.resource);\n            const strResource = this.getUriComparisonKey(_element.resource);\n            const element = new ResourceStackElement(_element, resourceLabel, strResource, 0, 0, 0, 0);\n            individualMap.set(element.strResource, element);\n        }\n        for (const strResource of toRemove.strResources) {\n            if (ignoreResources && ignoreResources.has(strResource)) {\n                continue;\n            }\n            const editStack = this._editStacks.get(strResource);\n            editStack.splitFutureWorkspaceElement(toRemove, individualMap);\n        }\n    }\n    removeElements(resource) {\n        const strResource = typeof resource === 'string' ? resource : this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            editStack.dispose();\n            this._editStacks.delete(strResource);\n        }\n        if (DEBUG) {\n            this._print('removeElements');\n        }\n    }\n    setElementsValidFlag(resource, isValid, filter) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            editStack.setElementsValidFlag(isValid, filter);\n        }\n        if (DEBUG) {\n            this._print('setElementsValidFlag');\n        }\n    }\n    createSnapshot(resource) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.createSnapshot(resource);\n        }\n        return new ResourceEditStackSnapshot(resource, []);\n    }\n    restoreSnapshot(snapshot) {\n        const strResource = this.getUriComparisonKey(snapshot.resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            editStack.restoreSnapshot(snapshot);\n            if (!editStack.hasPastElements() && !editStack.hasFutureElements()) {\n                // the edit stack is now empty, just remove it entirely\n                editStack.dispose();\n                this._editStacks.delete(strResource);\n            }\n        }\n        if (DEBUG) {\n            this._print('restoreSnapshot');\n        }\n    }\n    getElements(resource) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.getElements();\n        }\n        return { past: [], future: [] };\n    }\n    _findClosestUndoElementWithSource(sourceId) {\n        if (!sourceId) {\n            return [null, null];\n        }\n        // find an element with the sourceId and with the highest sourceOrder ready to be undone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestPastElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.sourceId === sourceId) {\n                if (!matchedElement || candidate.sourceOrder > matchedElement.sourceOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    canUndo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestUndoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? true : false;\n        }\n        const strResource = this.getUriComparisonKey(resourceOrSource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.hasPastElements();\n        }\n        return false;\n    }\n    _onError(err, element) {\n        onUnexpectedError(err);\n        // An error occurred while undoing or redoing => drop the undo/redo stack for all affected resources\n        for (const strResource of element.strResources) {\n            this.removeElements(strResource);\n        }\n        this._notificationService.error(err);\n    }\n    _acquireLocks(editStackSnapshot) {\n        // first, check if all locks can be acquired\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.locked) {\n                throw new Error('Cannot acquire edit stack lock');\n            }\n        }\n        // can acquire all locks\n        for (const editStack of editStackSnapshot.editStacks) {\n            editStack.locked = true;\n        }\n        return () => {\n            // release all locks\n            for (const editStack of editStackSnapshot.editStacks) {\n                editStack.locked = false;\n            }\n        };\n    }\n    _safeInvokeWithLocks(element, invoke, editStackSnapshot, cleanup, continuation) {\n        const releaseLocks = this._acquireLocks(editStackSnapshot);\n        let result;\n        try {\n            result = invoke();\n        }\n        catch (err) {\n            releaseLocks();\n            cleanup.dispose();\n            return this._onError(err, element);\n        }\n        if (result) {\n            // result is Promise<void>\n            return result.then(() => {\n                releaseLocks();\n                cleanup.dispose();\n                return continuation();\n            }, (err) => {\n                releaseLocks();\n                cleanup.dispose();\n                return this._onError(err, element);\n            });\n        }\n        else {\n            // result is void\n            releaseLocks();\n            cleanup.dispose();\n            return continuation();\n        }\n    }\n    _invokeWorkspacePrepare(element) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof element.actual.prepareUndoRedo === 'undefined') {\n                return Disposable.None;\n            }\n            const result = element.actual.prepareUndoRedo();\n            if (typeof result === 'undefined') {\n                return Disposable.None;\n            }\n            return result;\n        });\n    }\n    _invokeResourcePrepare(element, callback) {\n        if (element.actual.type !== 1 /* UndoRedoElementType.Workspace */ || typeof element.actual.prepareUndoRedo === 'undefined') {\n            // no preparation needed\n            return callback(Disposable.None);\n        }\n        const r = element.actual.prepareUndoRedo();\n        if (!r) {\n            // nothing to clean up\n            return callback(Disposable.None);\n        }\n        if (isDisposable(r)) {\n            return callback(r);\n        }\n        return r.then((disposable) => {\n            return callback(disposable);\n        });\n    }\n    _getAffectedEditStacks(element) {\n        const affectedEditStacks = [];\n        for (const strResource of element.strResources) {\n            affectedEditStacks.push(this._editStacks.get(strResource) || missingEditStack);\n        }\n        return new EditStackSnapshot(affectedEditStacks);\n    }\n    _tryToSplitAndUndo(strResource, element, ignoreResources, message) {\n        if (element.canSplit()) {\n            this._splitPastWorkspaceElement(element, ignoreResources);\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError(this._undo(strResource, 0, true));\n        }\n        else {\n            // Cannot safely split this workspace element => flush all undo/redo stacks\n            for (const strResource of element.strResources) {\n                this.removeElements(strResource);\n            }\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError();\n        }\n    }\n    _checkWorkspaceUndo(strResource, element, editStackSnapshot, checkInvalidatedResources) {\n        if (element.removedResources) {\n            return this._tryToSplitAndUndo(strResource, element, element.removedResources, nls.localize({ key: 'cannotWorkspaceUndo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not undo '{0}' across all files. {1}\", element.label, element.removedResources.createMessage()));\n        }\n        if (checkInvalidatedResources && element.invalidatedResources) {\n            return this._tryToSplitAndUndo(strResource, element, element.invalidatedResources, nls.localize({ key: 'cannotWorkspaceUndo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not undo '{0}' across all files. {1}\", element.label, element.invalidatedResources.createMessage()));\n        }\n        // this must be the last past element in all the impacted resources!\n        const cannotUndoDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.getClosestPastElement() !== element) {\n                cannotUndoDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotUndoDueToResources.length > 0) {\n            return this._tryToSplitAndUndo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceUndoDueToChanges', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not undo '{0}' across all files because changes were made to {1}\", element.label, cannotUndoDueToResources.join(', ')));\n        }\n        const cannotLockDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.locked) {\n                cannotLockDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotLockDueToResources.length > 0) {\n            return this._tryToSplitAndUndo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceUndoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not undo '{0}' across all files because there is already an undo or redo operation running on {1}\", element.label, cannotLockDueToResources.join(', ')));\n        }\n        // check if new stack elements were added in the meantime...\n        if (!editStackSnapshot.isValid()) {\n            return this._tryToSplitAndUndo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceUndoDueToInMeantimeUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not undo '{0}' across all files because an undo or redo operation occurred in the meantime\", element.label));\n        }\n        return null;\n    }\n    _workspaceUndo(strResource, element, undoConfirmed) {\n        const affectedEditStacks = this._getAffectedEditStacks(element);\n        const verificationError = this._checkWorkspaceUndo(strResource, element, affectedEditStacks, /*invalidated resources will be checked after the prepare call*/ false);\n        if (verificationError) {\n            return verificationError.returnValue;\n        }\n        return this._confirmAndExecuteWorkspaceUndo(strResource, element, affectedEditStacks, undoConfirmed);\n    }\n    _isPartOfUndoGroup(element) {\n        if (!element.groupId) {\n            return false;\n        }\n        // check that there is at least another element with the same groupId ready to be undone\n        for (const [, editStack] of this._editStacks) {\n            const pastElement = editStack.getClosestPastElement();\n            if (!pastElement) {\n                continue;\n            }\n            if (pastElement === element) {\n                const secondPastElement = editStack.getSecondClosestPastElement();\n                if (secondPastElement && secondPastElement.groupId === element.groupId) {\n                    // there is another element with the same group id in the same stack!\n                    return true;\n                }\n            }\n            if (pastElement.groupId === element.groupId) {\n                // there is another element with the same group id in another stack!\n                return true;\n            }\n        }\n        return false;\n    }\n    _confirmAndExecuteWorkspaceUndo(strResource, element, editStackSnapshot, undoConfirmed) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (element.canSplit() && !this._isPartOfUndoGroup(element)) {\n                // this element can be split\n                let UndoChoice;\n                (function (UndoChoice) {\n                    UndoChoice[UndoChoice[\"All\"] = 0] = \"All\";\n                    UndoChoice[UndoChoice[\"This\"] = 1] = \"This\";\n                    UndoChoice[UndoChoice[\"Cancel\"] = 2] = \"Cancel\";\n                })(UndoChoice || (UndoChoice = {}));\n                const { result } = yield this._dialogService.prompt({\n                    type: Severity.Info,\n                    message: nls.localize('confirmWorkspace', \"Would you like to undo '{0}' across all files?\", element.label),\n                    buttons: [\n                        {\n                            label: nls.localize({ key: 'ok', comment: ['{0} denotes a number that is > 1, && denotes a mnemonic'] }, \"&&Undo in {0} Files\", editStackSnapshot.editStacks.length),\n                            run: () => UndoChoice.All\n                        },\n                        {\n                            label: nls.localize({ key: 'nok', comment: ['&& denotes a mnemonic'] }, \"Undo this &&File\"),\n                            run: () => UndoChoice.This\n                        }\n                    ],\n                    cancelButton: {\n                        run: () => UndoChoice.Cancel\n                    }\n                });\n                if (result === UndoChoice.Cancel) {\n                    // choice: cancel\n                    return;\n                }\n                if (result === UndoChoice.This) {\n                    // choice: undo this file\n                    this._splitPastWorkspaceElement(element, null);\n                    return this._undo(strResource, 0, true);\n                }\n                // choice: undo in all files\n                // At this point, it is possible that the element has been made invalid in the meantime (due to the confirmation await)\n                const verificationError1 = this._checkWorkspaceUndo(strResource, element, editStackSnapshot, /*invalidated resources will be checked after the prepare call*/ false);\n                if (verificationError1) {\n                    return verificationError1.returnValue;\n                }\n                undoConfirmed = true;\n            }\n            // prepare\n            let cleanup;\n            try {\n                cleanup = yield this._invokeWorkspacePrepare(element);\n            }\n            catch (err) {\n                return this._onError(err, element);\n            }\n            // At this point, it is possible that the element has been made invalid in the meantime (due to the prepare await)\n            const verificationError2 = this._checkWorkspaceUndo(strResource, element, editStackSnapshot, /*now also check that there are no more invalidated resources*/ true);\n            if (verificationError2) {\n                cleanup.dispose();\n                return verificationError2.returnValue;\n            }\n            for (const editStack of editStackSnapshot.editStacks) {\n                editStack.moveBackward(element);\n            }\n            return this._safeInvokeWithLocks(element, () => element.actual.undo(), editStackSnapshot, cleanup, () => this._continueUndoInGroup(element.groupId, undoConfirmed));\n        });\n    }\n    _resourceUndo(editStack, element, undoConfirmed) {\n        if (!element.isValid) {\n            // invalid element => immediately flush edit stack!\n            editStack.flushAllElements();\n            return;\n        }\n        if (editStack.locked) {\n            const message = nls.localize({ key: 'cannotResourceUndoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation.'] }, \"Could not undo '{0}' because there is already an undo or redo operation running.\", element.label);\n            this._notificationService.warn(message);\n            return;\n        }\n        return this._invokeResourcePrepare(element, (cleanup) => {\n            editStack.moveBackward(element);\n            return this._safeInvokeWithLocks(element, () => element.actual.undo(), new EditStackSnapshot([editStack]), cleanup, () => this._continueUndoInGroup(element.groupId, undoConfirmed));\n        });\n    }\n    _findClosestUndoElementInGroup(groupId) {\n        if (!groupId) {\n            return [null, null];\n        }\n        // find another element with the same groupId and with the highest groupOrder ready to be undone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestPastElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.groupId === groupId) {\n                if (!matchedElement || candidate.groupOrder > matchedElement.groupOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    _continueUndoInGroup(groupId, undoConfirmed) {\n        if (!groupId) {\n            return;\n        }\n        const [, matchedStrResource] = this._findClosestUndoElementInGroup(groupId);\n        if (matchedStrResource) {\n            return this._undo(matchedStrResource, 0, undoConfirmed);\n        }\n    }\n    undo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestUndoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? this._undo(matchedStrResource, resourceOrSource.id, false) : undefined;\n        }\n        if (typeof resourceOrSource === 'string') {\n            return this._undo(resourceOrSource, 0, false);\n        }\n        return this._undo(this.getUriComparisonKey(resourceOrSource), 0, false);\n    }\n    _undo(strResource, sourceId = 0, undoConfirmed) {\n        if (!this._editStacks.has(strResource)) {\n            return;\n        }\n        const editStack = this._editStacks.get(strResource);\n        const element = editStack.getClosestPastElement();\n        if (!element) {\n            return;\n        }\n        if (element.groupId) {\n            // this element is a part of a group, we need to make sure undoing in a group is in order\n            const [matchedElement, matchedStrResource] = this._findClosestUndoElementInGroup(element.groupId);\n            if (element !== matchedElement && matchedStrResource) {\n                // there is an element in the same group that should be undone before this one\n                return this._undo(matchedStrResource, sourceId, undoConfirmed);\n            }\n        }\n        const shouldPromptForConfirmation = (element.sourceId !== sourceId || element.confirmBeforeUndo);\n        if (shouldPromptForConfirmation && !undoConfirmed) {\n            // Hit a different source or the element asks for prompt before undo, prompt for confirmation\n            return this._confirmAndContinueUndo(strResource, sourceId, element);\n        }\n        try {\n            if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n                return this._workspaceUndo(strResource, element, undoConfirmed);\n            }\n            else {\n                return this._resourceUndo(editStack, element, undoConfirmed);\n            }\n        }\n        finally {\n            if (DEBUG) {\n                this._print('undo');\n            }\n        }\n    }\n    _confirmAndContinueUndo(strResource, sourceId, element) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this._dialogService.confirm({\n                message: nls.localize('confirmDifferentSource', \"Would you like to undo '{0}'?\", element.label),\n                primaryButton: nls.localize({ key: 'confirmDifferentSource.yes', comment: ['&& denotes a mnemonic'] }, \"&&Yes\"),\n                cancelButton: nls.localize('confirmDifferentSource.no', \"No\")\n            });\n            if (!result.confirmed) {\n                return;\n            }\n            return this._undo(strResource, sourceId, true);\n        });\n    }\n    _findClosestRedoElementWithSource(sourceId) {\n        if (!sourceId) {\n            return [null, null];\n        }\n        // find an element with sourceId and with the lowest sourceOrder ready to be redone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestFutureElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.sourceId === sourceId) {\n                if (!matchedElement || candidate.sourceOrder < matchedElement.sourceOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    canRedo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestRedoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? true : false;\n        }\n        const strResource = this.getUriComparisonKey(resourceOrSource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.hasFutureElements();\n        }\n        return false;\n    }\n    _tryToSplitAndRedo(strResource, element, ignoreResources, message) {\n        if (element.canSplit()) {\n            this._splitFutureWorkspaceElement(element, ignoreResources);\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError(this._redo(strResource));\n        }\n        else {\n            // Cannot safely split this workspace element => flush all undo/redo stacks\n            for (const strResource of element.strResources) {\n                this.removeElements(strResource);\n            }\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError();\n        }\n    }\n    _checkWorkspaceRedo(strResource, element, editStackSnapshot, checkInvalidatedResources) {\n        if (element.removedResources) {\n            return this._tryToSplitAndRedo(strResource, element, element.removedResources, nls.localize({ key: 'cannotWorkspaceRedo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not redo '{0}' across all files. {1}\", element.label, element.removedResources.createMessage()));\n        }\n        if (checkInvalidatedResources && element.invalidatedResources) {\n            return this._tryToSplitAndRedo(strResource, element, element.invalidatedResources, nls.localize({ key: 'cannotWorkspaceRedo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not redo '{0}' across all files. {1}\", element.label, element.invalidatedResources.createMessage()));\n        }\n        // this must be the last future element in all the impacted resources!\n        const cannotRedoDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.getClosestFutureElement() !== element) {\n                cannotRedoDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotRedoDueToResources.length > 0) {\n            return this._tryToSplitAndRedo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceRedoDueToChanges', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not redo '{0}' across all files because changes were made to {1}\", element.label, cannotRedoDueToResources.join(', ')));\n        }\n        const cannotLockDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.locked) {\n                cannotLockDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotLockDueToResources.length > 0) {\n            return this._tryToSplitAndRedo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceRedoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not redo '{0}' across all files because there is already an undo or redo operation running on {1}\", element.label, cannotLockDueToResources.join(', ')));\n        }\n        // check if new stack elements were added in the meantime...\n        if (!editStackSnapshot.isValid()) {\n            return this._tryToSplitAndRedo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceRedoDueToInMeantimeUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not redo '{0}' across all files because an undo or redo operation occurred in the meantime\", element.label));\n        }\n        return null;\n    }\n    _workspaceRedo(strResource, element) {\n        const affectedEditStacks = this._getAffectedEditStacks(element);\n        const verificationError = this._checkWorkspaceRedo(strResource, element, affectedEditStacks, /*invalidated resources will be checked after the prepare call*/ false);\n        if (verificationError) {\n            return verificationError.returnValue;\n        }\n        return this._executeWorkspaceRedo(strResource, element, affectedEditStacks);\n    }\n    _executeWorkspaceRedo(strResource, element, editStackSnapshot) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // prepare\n            let cleanup;\n            try {\n                cleanup = yield this._invokeWorkspacePrepare(element);\n            }\n            catch (err) {\n                return this._onError(err, element);\n            }\n            // At this point, it is possible that the element has been made invalid in the meantime (due to the prepare await)\n            const verificationError = this._checkWorkspaceRedo(strResource, element, editStackSnapshot, /*now also check that there are no more invalidated resources*/ true);\n            if (verificationError) {\n                cleanup.dispose();\n                return verificationError.returnValue;\n            }\n            for (const editStack of editStackSnapshot.editStacks) {\n                editStack.moveForward(element);\n            }\n            return this._safeInvokeWithLocks(element, () => element.actual.redo(), editStackSnapshot, cleanup, () => this._continueRedoInGroup(element.groupId));\n        });\n    }\n    _resourceRedo(editStack, element) {\n        if (!element.isValid) {\n            // invalid element => immediately flush edit stack!\n            editStack.flushAllElements();\n            return;\n        }\n        if (editStack.locked) {\n            const message = nls.localize({ key: 'cannotResourceRedoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation.'] }, \"Could not redo '{0}' because there is already an undo or redo operation running.\", element.label);\n            this._notificationService.warn(message);\n            return;\n        }\n        return this._invokeResourcePrepare(element, (cleanup) => {\n            editStack.moveForward(element);\n            return this._safeInvokeWithLocks(element, () => element.actual.redo(), new EditStackSnapshot([editStack]), cleanup, () => this._continueRedoInGroup(element.groupId));\n        });\n    }\n    _findClosestRedoElementInGroup(groupId) {\n        if (!groupId) {\n            return [null, null];\n        }\n        // find another element with the same groupId and with the lowest groupOrder ready to be redone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestFutureElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.groupId === groupId) {\n                if (!matchedElement || candidate.groupOrder < matchedElement.groupOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    _continueRedoInGroup(groupId) {\n        if (!groupId) {\n            return;\n        }\n        const [, matchedStrResource] = this._findClosestRedoElementInGroup(groupId);\n        if (matchedStrResource) {\n            return this._redo(matchedStrResource);\n        }\n    }\n    redo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestRedoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? this._redo(matchedStrResource) : undefined;\n        }\n        if (typeof resourceOrSource === 'string') {\n            return this._redo(resourceOrSource);\n        }\n        return this._redo(this.getUriComparisonKey(resourceOrSource));\n    }\n    _redo(strResource) {\n        if (!this._editStacks.has(strResource)) {\n            return;\n        }\n        const editStack = this._editStacks.get(strResource);\n        const element = editStack.getClosestFutureElement();\n        if (!element) {\n            return;\n        }\n        if (element.groupId) {\n            // this element is a part of a group, we need to make sure redoing in a group is in order\n            const [matchedElement, matchedStrResource] = this._findClosestRedoElementInGroup(element.groupId);\n            if (element !== matchedElement && matchedStrResource) {\n                // there is an element in the same group that should be redone before this one\n                return this._redo(matchedStrResource);\n            }\n        }\n        try {\n            if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n                return this._workspaceRedo(strResource, element);\n            }\n            else {\n                return this._resourceRedo(editStack, element);\n            }\n        }\n        finally {\n            if (DEBUG) {\n                this._print('redo');\n            }\n        }\n    }\n};\nUndoRedoService = __decorate([\n    __param(0, IDialogService),\n    __param(1, INotificationService)\n], UndoRedoService);\nexport { UndoRedoService };\nclass WorkspaceVerificationError {\n    constructor(returnValue) {\n        this.returnValue = returnValue;\n    }\n}\nregisterSingleton(IUndoRedoService, UndoRedoService, 1 /* InstantiationType.Delayed */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { localize } from '../../../nls.js';\nimport { basename } from '../../../base/common/path.js';\nimport { TernarySearchTree } from '../../../base/common/ternarySearchTree.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IWorkspaceContextService = createDecorator('contextService');\nexport function isSingleFolderWorkspaceIdentifier(obj) {\n    const singleFolderIdentifier = obj;\n    return typeof (singleFolderIdentifier === null || singleFolderIdentifier === void 0 ? void 0 : singleFolderIdentifier.id) === 'string' && URI.isUri(singleFolderIdentifier.uri);\n}\nexport function isEmptyWorkspaceIdentifier(obj) {\n    const emptyWorkspaceIdentifier = obj;\n    return typeof (emptyWorkspaceIdentifier === null || emptyWorkspaceIdentifier === void 0 ? void 0 : emptyWorkspaceIdentifier.id) === 'string'\n        && !isSingleFolderWorkspaceIdentifier(obj)\n        && !isWorkspaceIdentifier(obj);\n}\nexport const EXTENSION_DEVELOPMENT_EMPTY_WINDOW_WORKSPACE = { id: 'ext-dev' };\nexport const UNKNOWN_EMPTY_WINDOW_WORKSPACE = { id: 'empty-window' };\nexport function toWorkspaceIdentifier(arg0, isExtensionDevelopment) {\n    // Empty workspace\n    if (typeof arg0 === 'string' || typeof arg0 === 'undefined') {\n        // With a backupPath, the basename is the empty workspace identifier\n        if (typeof arg0 === 'string') {\n            return {\n                id: basename(arg0)\n            };\n        }\n        // Extension development empty windows have backups disabled\n        // so we return a constant workspace identifier for extension\n        // authors to allow to restore their workspace state even then.\n        if (isExtensionDevelopment) {\n            return EXTENSION_DEVELOPMENT_EMPTY_WINDOW_WORKSPACE;\n        }\n        return UNKNOWN_EMPTY_WINDOW_WORKSPACE;\n    }\n    // Multi root\n    const workspace = arg0;\n    if (workspace.configuration) {\n        return {\n            id: workspace.id,\n            configPath: workspace.configuration\n        };\n    }\n    // Single folder\n    if (workspace.folders.length === 1) {\n        return {\n            id: workspace.id,\n            uri: workspace.folders[0].uri\n        };\n    }\n    // Empty window\n    return {\n        id: workspace.id\n    };\n}\nexport function isWorkspaceIdentifier(obj) {\n    const workspaceIdentifier = obj;\n    return typeof (workspaceIdentifier === null || workspaceIdentifier === void 0 ? void 0 : workspaceIdentifier.id) === 'string' && URI.isUri(workspaceIdentifier.configPath);\n}\nexport class Workspace {\n    constructor(_id, folders, _transient, _configuration, _ignorePathCasing) {\n        this._id = _id;\n        this._transient = _transient;\n        this._configuration = _configuration;\n        this._ignorePathCasing = _ignorePathCasing;\n        this._foldersMap = TernarySearchTree.forUris(this._ignorePathCasing, () => true);\n        this.folders = folders;\n    }\n    get folders() {\n        return this._folders;\n    }\n    set folders(folders) {\n        this._folders = folders;\n        this.updateFoldersMap();\n    }\n    get id() {\n        return this._id;\n    }\n    get transient() {\n        return this._transient;\n    }\n    get configuration() {\n        return this._configuration;\n    }\n    set configuration(configuration) {\n        this._configuration = configuration;\n    }\n    getFolder(resource) {\n        if (!resource) {\n            return null;\n        }\n        return this._foldersMap.findSubstr(resource) || null;\n    }\n    updateFoldersMap() {\n        this._foldersMap = TernarySearchTree.forUris(this._ignorePathCasing, () => true);\n        for (const folder of this.folders) {\n            this._foldersMap.set(folder.uri, folder);\n        }\n    }\n    toJSON() {\n        return { id: this.id, folders: this.folders, transient: this.transient, configuration: this.configuration };\n    }\n}\nexport class WorkspaceFolder {\n    constructor(data, \n    /**\n     * Provides access to the original metadata for this workspace\n     * folder. This can be different from the metadata provided in\n     * this class:\n     * - raw paths can be relative\n     * - raw paths are not normalized\n     */\n    raw) {\n        this.raw = raw;\n        this.uri = data.uri;\n        this.index = data.index;\n        this.name = data.name;\n    }\n    toJSON() {\n        return { uri: this.uri, name: this.name, index: this.index };\n    }\n}\nexport const WORKSPACE_EXTENSION = 'code-workspace';\nexport const WORKSPACE_FILTER = [{ name: localize('codeWorkspace', \"Code Workspace\"), extensions: [WORKSPACE_EXTENSION] }];\nexport const STANDALONE_EDITOR_WORKSPACE_ID = '4064f6ec-cb38-4ad0-af64-ee6467e63c82';\nexport function isStandaloneEditorWorkspace(workspace) {\n    return workspace.id === STANDALONE_EDITOR_WORKSPACE_ID;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IWorkspaceTrustManagementService = createDecorator('workspaceTrustManagementService');\n"],"names":["WillSaveStateReason","TARGET_KEY","IStorageService","createDecorator","AbstractStorageService","_Disposable","_inherits","_super","_createSuper","_this","options","arguments","length","undefined","flushInterval","DEFAULT_FLUSH_INTERVAL","_classCallCheck","call","_onDidChangeValue","_register","PauseableEmitter","_onDidChangeTarget","_onWillSaveState","Emitter","onWillSaveState","event","_workspaceKeyTargets","_profileKeyTargets","_applicationKeyTargets","_createClass","key","value","scope","disposable","Event","filter","this","e","external","fire","target","getKeyTargets","fallbackValue","_a","getStorage","get","getBoolean","getNumber","_this2","isUndefinedOrNull","remove","withPausedEmitters","updateKeyTarget","set","_this3","delete","fn","pause","resume","_b","keyTargets","JSON","stringify","loadKeyTargets","applicationKeyTargets","profileKeyTargets","workspaceKeyTargets","storage","keysRaw","parse","error","Object","create","Disposable","InMemoryStorageService","_AbstractStorageServi","_super2","_this4","applicationStorage","Storage","InMemoryStorageDatabase","hint","StorageHint","STORAGE_IN_MEMORY","profileStorage","workspaceStorage","onDidChangeStorage","emitDidChangeValue","ITelemetryService","defaultKeybindingLabelStyles","keybindingLabelBackground","asCssVariable","keybindingLabelForeground","keybindingLabelBorder","keybindingLabelBottomBorder","keybindingLabelShadow","widgetShadow","defaultButtonStyles","buttonForeground","buttonSeparator","buttonBackground","buttonHoverBackground","buttonSecondaryForeground","buttonSecondaryBackground","buttonSecondaryHoverBackground","buttonBorder","defaultProgressBarStyles","progressBarBackground","defaultToggleStyles","inputActiveOptionBorder","inputActiveOptionForeground","inputActiveOptionBackground","defaultInputBoxStyles","checkboxBackground","checkboxBorder","checkboxForeground","editorWidgetBackground","editorWidgetForeground","contrastBorder","problemsErrorIconForeground","problemsWarningIconForeground","problemsInfoIconForeground","textLinkForeground","inputBackground","inputForeground","inputBorder","inputValidationInfoBorder","inputValidationInfoBackground","inputValidationInfoForeground","inputValidationWarningBorder","inputValidationWarningBackground","inputValidationWarningForeground","inputValidationErrorBorder","inputValidationErrorBackground","inputValidationErrorForeground","defaultFindWidgetStyles","listFilterWidgetBackground","listFilterWidgetOutline","listFilterWidgetNoMatchesOutline","listFilterWidgetShadow","inputBoxStyles","toggleStyles","defaultCountBadgeStyles","badgeBackground","badgeForeground","badgeBorder","defaultListStyles","breadcrumbsBackground","breadcrumbsForeground","breadcrumbsFocusForeground","breadcrumbsActiveSelectionForeground","listBackground","listInactiveFocusForeground","listFocusBackground","listFocusForeground","listFocusOutline","listActiveSelectionBackground","listActiveSelectionForeground","listActiveSelectionIconForeground","listFocusAndSelectionOutline","listFocusAndSelectionBackground","listFocusAndSelectionForeground","listInactiveSelectionBackground","listInactiveSelectionIconForeground","listInactiveSelectionForeground","listInactiveFocusBackground","listInactiveFocusOutline","listHoverBackground","listHoverForeground","listDropBackground","listSelectionOutline","activeContrastBorder","listHoverOutline","treeIndentGuidesStroke","treeInactiveIndentGuidesStroke","tableColumnsBorder","tableOddRowsBackgroundColor","getListStyles","override","styles","result","assign","val","overrideStyles","defaultSelectBoxStyles","selectBackground","selectListBackground","selectForeground","decoratorRightForeground","pickerGroupForeground","selectBorder","focusBorder","quickInputListFocusBackground","quickInputListFocusIconForeground","quickInputListFocusForeground","asCssVariableWithDefault","Color","transparent","toString","selectListBorder","editorWidgetBorder","defaultMenuStyles","shadowColor","borderColor","menuBorder","foregroundColor","menuForeground","backgroundColor","menuBackground","selectionForegroundColor","menuSelectionForeground","selectionBackgroundColor","menuSelectionBackground","selectionBorderColor","menuSelectionBorder","separatorColor","menuSeparatorBackground","scrollbarShadow","scrollbarSliderBackground","scrollbarSliderHoverBackground","scrollbarSliderActiveBackground","getIconsStyleSheet","themeService","DisposableStore","onDidChangeEmmiter","add","iconRegistry","getIconRegistry","onDidChange","onDidProductIconThemeChange","dispose","getCSS","_step","productIconTheme","getProductIconTheme","UnthemedProductIconTheme","usedFontIds","formatIconRule","contribution","definition","getIcon","fontContribution","font","id","concat","fontCharacter","asCSSPropertyValue","rules","_iterator","_createForOfIteratorHelper","getIcons","s","n","done","rule","push","err","f","fontWeight","weight","fontStyle","style","src","map","l","asCSSUrl","location","format","join","defaults","ThemeIcon","isThemeIcon","c","asCssVariableName","colorIdent","replace","color","defaultCssValue","Extensions","ColorContribution","ColorRegistry","_onDidChangeSchema","onDidChangeSchema","colorSchema","type","properties","colorReferenceSchema","enum","enumDescriptions","colorsById","description","deprecationMessage","colorContribution","needsTransparency","propertySchema","defaultSnippets","body","keys","theme","colorDesc","resolveColorValue","sort","a","b","cat1","indexOf","cat2","localeCompare","k","colorRegistry","registerColor","platform","ifArg","thenArg","elseArg","foreground","dark","light","hcDark","hcLight","nls","errorForeground","iconForeground","black","white","widgetBorder","lighten","darken","fromHex","editorErrorForeground","editorErrorBorder","editorWarningForeground","editorWarningBorder","editorInfoForeground","editorInfoBorder","editorHintForeground","editorBackground","editorForeground","editorWidgetResizeBorder","quickInputBackground","quickInputForeground","quickInputTitleBackground","RGBA","pickerGroupBorder","editorSelectionBackground","editorSelectionForeground","editorInactiveSelection","editorSelectionHighlight","lessProminent","editorFindMatch","editorFindMatchHighlight","editorFindRangeHighlight","editorFindMatchBorder","editorFindMatchHighlightBorder","editorFindRangeHighlightBorder","editorHoverBackground","editorHoverBorder","editorActiveLinkForeground","blue","cyan","editorInlayHintForeground","editorInlayHintBackground","editorInlayHintTypeForeground","editorInlayHintTypeBackground","editorInlayHintParameterForeground","editorInlayHintParameterBackground","defaultInsertColor","defaultRemoveColor","diffInserted","diffRemoved","diffOverviewRulerInserted","diffOverviewRulerRemoved","listHighlightForeground","listFocusHighlightForeground","op","if","then","else","_deprecatedQuickInputListFocusBackground","oneOf","toolbarHoverBackground","currentBaseColor","incomingBaseColor","commonBaseColor","contentTransparency","mergeCurrentHeaderBackground","mergeIncomingHeaderBackground","mergeCommonHeaderBackground","mergeBorder","overviewRulerFindMatchForeground","overviewRulerSelectionHighlightForeground","minimapFindMatch","minimapSelectionOccurrenceHighlight","minimapSelection","minimapInfo","minimapWarning","minimapError","minimapBackground","minimapForegroundOpacity","colorValue","factor","_len","colorValues","Array","_key","values","backgroundColorValue","transparency","background","getColor","transform","_c","_d","makeOpaque","defines","from","isDarkerThan","getLighterColor","getDarkerColor","assertNever","executeTransform","workbenchColorsSchemaId","schemaRegistry","as","JSONExtensions","JSONContribution","registerSchema","getColorSchema","delayer","RunOnceScheduler","notifySchemaChanged","isScheduled","schedule","IconContribution","IconFontDefinition","getDefinition","registry","toJSONObject","iconFont","fromJSONObject","json","stringOrUndef","isString","isArray","every","URI","IconRegistry","_onDidChange","iconSchema","definitions","icons","fontId","localize","additionalProperties","iconReferenceSchema","pattern","iconNameExpression","iconsById","iconFontsById","existing","markdownDescription","enumIndex","iconContribution","$ref","sorter","i1","i2","classNames","i","reference","contributions","_step2","_iterator2","registerIcon","codiconFontCharacters","getCodiconFontCharacters","icon","initialize","iconsSchemaId","getIconSchema","widgetClose","Codicon","close","arrowUp","arrowDown","modify","sync","loading","ColorScheme","isHighContrast","scheme","HIGH_CONTRAST_DARK","HIGH_CONTRAST_LIGHT","isDark","DARK","IThemeService","themeColorFromId","getThemeTypeSelector","ThemingContribution","themingRegistry","ThemingRegistry","themingParticipants","onThemingParticipantAddedEmitter","participant","toDisposable","idx","splice","registerThemingParticipant","onColorThemeChange","Themable","getColorTheme","onDidColorThemeChange","onThemeChange","updateStyles","IUndoRedoService","ResourceEditStackSnapshot","resource","elements","UndoRedoGroup","_ID","order","None","UndoRedoSource","__decorate","decorators","desc","d","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","apply","DEBUG","getResourceLabel","Schemas","file","fsPath","path","stackElementCounter","ResourceStackElement","actual","resourceLabel","strResource","groupId","groupOrder","sourceId","sourceOrder","label","confirmBeforeUndo","resourceLabels","strResources","isValid","constructor","name","ResourceReasonPair","reason","RemovedResources","Map","externalRemoval","noParallelUniverses","element","_slicedToArray","messages","comment","size","has","WorkspaceStackElement","removedResources","invalidatedResources","split","ResourceEditStack","_past","_future","locked","versionId","removeResource","_step3","_iterator3","setValid","_step4","_iterator4","_setElementValidFlag","_step5","_iterator5","_step6","_iterator6","futureElement","len","snapshot","snapshotLength","isOK","snapshotIndex","removePastAfter","removeFutureBefore","slice","_step7","past","future","_iterator7","_step8","_iterator8","toRemove","individualMap","j","pop","EditStackSnapshot","editStacks","_versionIds","missingEditStack","UndoRedoService","_dialogService","_notificationService","_editStacks","_uriComparisonKeyComputers","_step9","_iterator9","uriComparisonKeyComputer","getComparisonKey","console","log","_step10","str","_iterator10","group","source","getUriComparisonKey","_pushElement","nextOrder","_step11","seen","Set","_iterator11","resources","editStack","pushElement","hasFutureElements","closestPastElement","getClosestPastElement","ignoreResources","_step12","individualArr","_iterator12","_element","_step13","_iterator13","splitPastWorkspaceElement","_step14","_iterator14","_step15","_iterator15","splitFutureWorkspaceElement","setElementsValidFlag","createSnapshot","restoreSnapshot","hasPastElements","getElements","_step16","matchedElement","matchedStrResource","_iterator16","_step16$value","candidate","resourceOrSource","_this$_findClosestUnd","_findClosestUndoElementWithSource","onUnexpectedError","_step17","_iterator17","removeElements","editStackSnapshot","_step18","_iterator18","Error","_step19","_iterator19","_step20","_iterator20","invoke","cleanup","continuation","releaseLocks","_acquireLocks","_onError","_regeneratorRuntime","mark","_callee","wrap","_context","prev","prepareUndoRedo","abrupt","stop","callback","isDisposable","_step21","affectedEditStacks","_iterator21","message","canSplit","_splitPastWorkspaceElement","warn","WorkspaceVerificationError","_undo","_step22","_iterator22","checkInvalidatedResources","_tryToSplitAndUndo","createMessage","_step23","cannotUndoDueToResources","_iterator23","_step24","cannotLockDueToResources","_iterator24","undoConfirmed","_getAffectedEditStacks","verificationError","_checkWorkspaceUndo","returnValue","_confirmAndExecuteWorkspaceUndo","_step25","_iterator25","pastElement","secondPastElement","getSecondClosestPastElement","_callee2","UndoChoice","_yield$this$_dialogSe","verificationError1","verificationError2","_iterator26","_step26","_context2","_isPartOfUndoGroup","prompt","Severity","Info","buttons","run","All","This","cancelButton","Cancel","sent","_invokeWorkspacePrepare","t0","moveBackward","_safeInvokeWithLocks","undo","_continueUndoInGroup","_invokeResourcePrepare","flushAllElements","_step27","_iterator27","_step27$value","_this$_findClosestUnd3","_findClosestUndoElementInGroup","_this$_findClosestUnd5","_this$_findClosestUnd7","_this$_findClosestUnd8","_confirmAndContinueUndo","_workspaceUndo","_resourceUndo","_callee3","_context3","confirm","primaryButton","confirmed","_step28","_iterator28","_step28$value","getClosestFutureElement","_this$_findClosestRed","_findClosestRedoElementWithSource","_splitFutureWorkspaceElement","_redo","_step29","_iterator29","_tryToSplitAndRedo","_step30","cannotRedoDueToResources","_iterator30","_step31","_iterator31","_checkWorkspaceRedo","_executeWorkspaceRedo","_callee4","_iterator32","_step32","_context4","moveForward","redo","_continueRedoInGroup","_this5","_step33","_iterator33","_step33$value","_this$_findClosestRed3","_findClosestRedoElementInGroup","_this$_findClosestRed5","_this$_findClosestRed7","_this$_findClosestRed8","_workspaceRedo","_resourceRedo","IDialogService","INotificationService","registerSingleton","IWorkspaceContextService","isSingleFolderWorkspaceIdentifier","obj","singleFolderIdentifier","isUri","uri","isEmptyWorkspaceIdentifier","workspaceIdentifier","configPath","isWorkspaceIdentifier","EXTENSION_DEVELOPMENT_EMPTY_WINDOW_WORKSPACE","UNKNOWN_EMPTY_WINDOW_WORKSPACE","toWorkspaceIdentifier","arg0","isExtensionDevelopment","basename","workspace","configuration","folders","WorkspaceFolder","data","raw","index","WORKSPACE_EXTENSION","STANDALONE_EDITOR_WORKSPACE_ID","isStandaloneEditorWorkspace","IWorkspaceTrustManagementService"],"sourceRoot":""}