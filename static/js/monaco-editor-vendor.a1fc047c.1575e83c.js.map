{"version":3,"file":"static/js/monaco-editor-vendor.a1fc047c.1575e83c.js","mappings":"8dAIIA,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAOaO,GAAeC,EAAAA,EAAAA,IACxB,SAAAD,EAAYE,EAAOC,IAAWC,EAAAA,EAAAA,GAAA,KAAAJ,GAC1BK,KAAKH,MAAQA,EACbG,KAAKF,UAAYA,CACrB,IAESG,EAAa,WACtB,SAAAA,EAAYC,EAAMC,EAAQC,IAAUL,EAAAA,EAAAA,GAAA,KAAAE,GAChCD,KAAKE,KAAOA,EACZF,KAAKG,OAASA,EACdH,KAAKI,SAAWA,EAChBJ,KAAKK,aAAc,CACvB,CA0CC,OA1CAT,EAAAA,EAAAA,GAAAK,EAAA,EAAAK,IAAA,OAAApB,MACD,SAAKqB,GACD,IAAMhB,EAAS,IAAIU,EAAcD,KAAKE,KAAMK,EAAMJ,OAAQH,KAAKI,UAG/D,OAFAb,EAAOc,YAAcL,KAAKK,YAC1Bd,EAAOiB,gBAAkBR,KAAKQ,gBACvBjB,CACX,GAAC,CAAAe,IAAA,UAAApB,MACD,SAAQuB,GACJ,OAAOhC,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAAC,EAAA,YAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3B,MAAA,UACW,oBAAnCY,KAAKI,SAASa,iBAA+B,CAAAF,EAAA3B,KAAA,eAAA2B,EAAAG,OAAA,qBAGpDlB,KAAKQ,gBAAiB,CAAFO,EAAA3B,KAAA,QAGpB,OAHoB2B,EAAA3B,KAAA,EAGdY,KAAKQ,gBAAe,WACtBC,EAAMU,wBAAyB,CAAFJ,EAAA3B,KAAA,eAAA2B,EAAAG,OAAA,wBAAAH,EAAAG,OAAA,SAG1BlB,KAAKjB,QAAQ0B,IAAM,OAM9B,OAJKT,KAAKK,cACNL,KAAKQ,gBAAkBR,KAAKoB,WAAWX,GAClCY,SAAQ,kBAAMR,EAAKL,qBAAkBc,CAAS,KACtDP,EAAA3B,KAAA,GACKY,KAAKQ,gBAAe,yBAAAO,EAAAQ,OAAA,GAAAX,EAAA,SAElC,GAAC,CAAAN,IAAA,aAAApB,MACD,SAAWuB,GACP,IAAIe,EAAIC,EACR,OAAOhD,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAe,IAAA,IAAAC,EAAA,OAAAjB,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAxC,MAAA,OAEf,OAFewC,EAAAZ,KAAA,EAAAY,EAAAxC,KAAA,EAETN,QAAQC,QAAQiB,KAAKI,SAASa,iBAAiBjB,KAAKE,KAAMO,IAAO,OAAjFkB,EAAOC,EAAAC,KACb7B,KAAKE,KAAK4B,QAAuF,QAA5EN,EAAiB,OAAZG,QAAgC,IAAZA,OAAqB,EAASA,EAAQG,eAA4B,IAAPN,EAAgBA,EAAKxB,KAAKE,KAAK4B,QACxI9B,KAAKE,KAAK6B,MAAmF,QAA1EN,EAAiB,OAAZE,QAAgC,IAAZA,OAAqB,EAASA,EAAQI,aAA0B,IAAPN,EAAgBA,EAAKzB,KAAKE,KAAK6B,MACpI/B,KAAKK,aAAc,EAAKuB,EAAAxC,KAAA,gBAAAwC,EAAAZ,KAAA,EAAAY,EAAAI,GAAAJ,EAAA,UAGxBK,EAAAA,EAAAA,IAAyBL,EAAAI,IACzBhC,KAAKK,aAAc,EAAM,yBAAAuB,EAAAL,OAAA,GAAAG,EAAA,iBAGrC,KAACzB,CAAA,CAhDqB,GAkDbiC,EAAmB,WAsB5B,SAAAA,EAAYC,EAAQC,EAAMC,IAAOtC,EAAAA,EAAAA,GAAA,KAAAmC,GAC7BlC,KAAKsC,aAAe,IAAIC,EAAAA,GACxBvC,KAAKmC,OAASA,EACdnC,KAAKI,SAAW,IAAIoC,IACpB,IACmCC,EAD7BC,EAAQ,GAAGC,GAAAC,EAAAA,EAAAA,GACcR,GAAI,IAAnC,IAAAO,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAtD,MAAqC,KAAAuD,GAAAC,EAAAA,EAAAA,GAAAP,EAAAvD,MAAA,GAAzB+D,EAAIF,EAAA,GAAE3C,EAAQ2C,EAAA,GACtB/C,KAAKsC,aAAaY,IAAID,GACtBjD,KAAKI,SAAS8C,IAAI9C,GAAU,IACC+C,EADDC,GAAAR,EAAAA,EAAAA,GACTK,EAAKI,OAAK,IAA7B,IAAAD,EAAAP,MAAAM,EAAAC,EAAAN,KAAAtD,MAA+B,KAApBU,EAAIiD,EAAAjE,MAELoE,EAAWjB,EAAMkB,iBAAiBrD,EAAKoD,UACzCxD,EAAY,SACV0D,EAAYtB,EAAoBuB,oBAAoBpB,EAAOiB,GAC7DzD,OAAK,EACL2D,EAAUE,mBAAmBC,SAASL,IACtCzD,EAAQ+D,EAAAA,EAAMC,cAAcL,EAAUE,mBAAoBJ,GAC1DxD,EAAY,UAGZD,EAAQ+D,EAAAA,EAAMC,cAAcP,EAAUE,EAAUM,kBAChDhE,EAAY,UAEhB4C,EAAMqB,KAAK,IAAI9D,EAAcC,EAAM,IAAIP,EAAgBE,EAAOC,GAAYM,GAC9E,CAAC,OAAA4D,GAAAZ,EAAA/D,EAAA2E,EAAA,SAAAZ,EAAAa,GAAA,CACL,CAAC,OAAAD,GAAArB,EAAAtD,EAAA2E,EAAA,SAAArB,EAAAsB,GAAA,CACDjE,KAAK0C,MAAQA,EAAMwB,MAAK,SAACC,EAAGC,GAAC,OAAKC,EAAAA,EAASC,QAAQH,EAAEjE,KAAKoD,SAAUc,EAAElE,KAAKoD,SAAS,GACxF,CA+BC,OA/BA1D,EAAAA,EAAAA,GAAAsC,EAAA,EAAA5B,IAAA,UAAApB,MACD,WACIc,KAAKsC,aAAaiC,SACtB,IAAC,EAAAjE,IAAA,SAAApB,MAlDD,SAAcsF,EAAUnC,EAAOF,EAAQ1B,GACnC,OAAOhC,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAA8D,IAAA,IAAArC,EAAAsC,EAAAC,EAAA,YAAAjE,EAAAA,EAAAA,KAAAI,MAAA,SAAA8D,GAAA,cAAAA,EAAA5D,KAAA4D,EAAAxF,MAAA,OAanC,OAZMgD,EAAO,GACPsC,EAAWF,EAASK,QAAQxC,GAAOyC,UAAUC,KAAI,SAAA3E,GAAQ,OAAI+B,EAAO4C,KAAI,SAAClF,GAAK,OAAKpB,EAAUkG,OAAM,OAAQ,GAAMjE,EAAAA,EAAAA,KAAAC,MAAE,SAAAqE,IAAA,IAAAzF,EAAA,OAAAmB,EAAAA,EAAAA,KAAAI,MAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAA7F,MAAA,OAElG,OAFkG6F,EAAAjE,KAAA,EAAAiE,EAAA7F,KAAA,EAE5FgB,EAAS8E,kBAAkB7C,EAAOxC,EAAOY,GAAM,QACrD,QADTlB,EAAM0F,EAAApD,YACsB,IAAXtC,OAAoB,EAASA,EAAO8D,MAAM8B,SAC7D/C,EAAK2B,KAAK,CAACxE,EAAQa,IACtB6E,EAAA7F,KAAA,gBAAA6F,EAAAjE,KAAA,EAAAiE,EAAAjD,GAAAiD,EAAA,UAGDhD,EAAAA,EAAAA,IAAyBgD,EAAAjD,IAAM,yBAAAiD,EAAA1D,OAAA,GAAAyD,EAAA,iBAErC,GAAC,IAACJ,EAAAxF,KAAA,EACEN,QAAQsG,IAAIV,EAASW,QAAO,WAC9B5E,EAAMU,0BAA2BkB,EAAMiD,aAAY,CAAAV,EAAAxF,KAAA,cAC7C,IAAImG,EAAAA,GAAmB,cAAAX,EAAA1D,OAAA,SAE1B,IAAIgB,EAAoBC,EAAQC,EAAMC,IAAM,wBAAAuC,EAAArD,OAAA,GAAAkD,EAAA,IAE3D,GAAC,CAAAnE,IAAA,sBAAApB,MA+BD,SAA2BmD,EAAOiB,GAC9B,IAAMkC,EAAOlC,EAASmC,WAChBC,EAAOrD,EAAMsD,kBAAkBrC,GACrC,GAAIoC,EAEA,OAAO,IAAI9B,EAAAA,EAAM4B,EAAME,EAAKE,YAAaJ,EAAME,EAAKG,WAExDxD,EAAMyD,aAAaC,gBAAgBP,GACnC,IAAMQ,EAAS3D,EAAMyD,aAAaG,cAAcT,GAC1CU,EAAS5C,EAAS6C,OAAS,EAC3BC,EAAMJ,EAAOK,uBAAuBH,GACtCI,EAAQN,EAAOO,eAAeH,GAC9BI,EAAMR,EAAOS,aAAaL,GAc9B,OAbII,EAAMF,IAAU,IAEZA,IAAUJ,GAAUE,EAAM,GAE1BE,EAAQN,EAAOO,eAAeH,EAAM,GACpCI,EAAMR,EAAOS,aAAaL,EAAM,IAE3BI,IAAQN,GAAUE,EAAMJ,EAAOU,WAAa,IAEjDJ,EAAQN,EAAOO,eAAeH,EAAM,GACpCI,EAAMR,EAAOS,aAAaL,EAAM,KAGjC,IAAIxC,EAAAA,EAAM4B,EAAMc,EAAQ,EAAGd,EAAMgB,EAAM,EAClD,KAACtE,CAAA,CA/E2B,G,gFCvE5ByE,EAA0C,SAAUC,EAAYC,EAAQvG,EAAKwG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU9B,OAAQ+B,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQvG,GAAOwG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQvG,EAAKwG,QACpH,IAAK,IAAIS,EAAIX,EAAWzB,OAAS,EAAGoC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQvG,EAAK4G,GAAKH,EAAEF,EAAQvG,KAAS4G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQvG,EAAK4G,GAAIA,CAChE,EACIO,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQvG,GAAOqH,EAAUd,EAAQvG,EAAKoH,EAAa,CACxE,EACIjJ,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EA+BMwI,EAAe,WACjB,SAAAA,KAAc7H,EAAAA,EAAAA,GAAA,KAAA6H,GACV5H,KAAK6H,SAAW,IAAIC,EAAAA,GAAS,GACjC,CAWC,OAXAlI,EAAAA,EAAAA,GAAAgI,EAAA,EAAAtH,IAAA,MAAApB,MACD,SAAImD,GACA,IAAM/B,EAAMsH,EAAgBG,KAAK1F,GACjC,OAAOrC,KAAK6H,SAASG,IAAI1H,EAC7B,GAAC,CAAAA,IAAA,MAAApB,MACD,SAAImD,EAAOnD,GACP,IAAMoB,EAAMsH,EAAgBG,KAAK1F,GACjCrC,KAAK6H,SAASI,IAAI3H,EAAKpB,EAC3B,IAAC,EAAAoB,IAAA,OAAApB,MACD,SAAYmD,GACR,MAAO,GAAP6F,OAAU7F,EAAM8F,IAAIC,WAAU,KAAAF,OAAI7F,EAAMgG,eAC5C,KAACT,CAAA,CAdgB,GAgBfU,GAAmBC,EAAAA,EAAAA,IAAgB,qBACzCC,EAAAA,EAAAA,GAAkBF,EAAkBV,EAAiB,GAE9C,IAAMa,EAA0B,WACnC,SAAAA,EAAYC,EAAMC,IAAO5I,EAAAA,EAAAA,GAAA,KAAA0I,GACrBzI,KAAK0I,KAAOA,EACZ1I,KAAK2I,MAAQA,CACjB,CASC,OATA/I,EAAAA,EAAAA,GAAA6I,EAAA,EAAAnI,IAAA,OAAA0H,IACD,WACI,IAAMjG,EAAQ/B,KAAK0I,KAAKxI,KAAK6B,MAC7B,MAAqB,kBAAVA,EACA,CAAEA,MAAAA,GAGFA,EAAM/B,KAAK2I,MAE1B,KAACF,CAAA,CAbkC,GAejCG,GAAmBhJ,EAAAA,EAAAA,IACrB,SAAAgJ,EAAYC,EAAMC,IAAoB/I,EAAAA,EAAAA,GAAA,KAAA6I,GAClC5I,KAAK6I,KAAOA,EACZ7I,KAAK8I,mBAAqBA,CAC9B,IAGAC,EAAoB,WAKpB,SAAAA,EAAYC,EAASC,EAA0BC,EAAkBC,EAAkBC,EAAiBC,EAAsBC,GAAe,IAAAzI,EAAA,MAAAd,EAAAA,EAAAA,GAAA,KAAAgJ,GACrI/I,KAAKgJ,QAAUA,EACfhJ,KAAKiJ,yBAA2BA,EAChCjJ,KAAKmJ,iBAAmBA,EACxBnJ,KAAKoJ,gBAAkBA,EACvBpJ,KAAKqJ,qBAAuBA,EAC5BrJ,KAAKsJ,cAAgBA,EACrBtJ,KAAKsC,aAAe,IAAIC,EAAAA,GACxBvC,KAAKuJ,oBAAsB,IAAIhH,EAAAA,GAC/BvC,KAAKwJ,qBAAuB,IAAIC,IAChCzJ,KAAK0J,aAAe,IAAIC,EAAAA,GAAgB3J,KAAKgJ,SAC7ChJ,KAAK4J,kBAAoB,EACzB5J,KAAK6J,cAAgBX,EAAiBY,IAAIb,EAAyBc,mBAAoB,YAAa,CAAEC,IAAK,KAC3GhK,KAAKsC,aAAaY,IAAI+F,EAAyBc,mBAAmBE,aAAY,kBAAMpJ,EAAKqJ,SAAS,KAClGlK,KAAKsC,aAAaY,IAAI8F,EAAQmB,kBAAiB,kBAAMtJ,EAAKqJ,SAAS,KACnElK,KAAKsC,aAAaY,IAAI8F,EAAQoB,0BAAyB,kBAAMvJ,EAAKqJ,SAAS,KAC3ElK,KAAKsC,aAAaY,IAAI8F,EAAQqB,0BAAyB,SAAAhL,GAC/CA,EAAEiL,WAAW,MACbzJ,EAAKqJ,SAEb,KACAlK,KAAKkK,SACT,CAvBC,OAuBAtK,EAAAA,EAAAA,GAAAmJ,EAAA,EAAAzI,IAAA,UAAApB,MACD,WACIc,KAAKuJ,oBAAoBhF,UACzBvE,KAAKuK,wBACLvK,KAAKsC,aAAaiC,SACtB,GAAC,CAAAjE,IAAA,UAAApB,MACD,WAAU,IAAAyF,EAAA,KACN3E,KAAKuJ,oBAAoBiB,QACzBxK,KAAKuK,wBACL,IAAME,EAAUzK,KAAKgJ,QAAQ0B,UAAU,KACvC,GAAwB,QAApBD,EAAQE,QAAZ,CAGA,IAAMtI,EAAQrC,KAAKgJ,QAAQ4B,WAC3B,GAAKvI,GAAUrC,KAAKiJ,yBAAyBc,mBAAmBc,IAAIxI,GAApE,CAIA,IAUIyI,EAVEC,EAAS/K,KAAKmJ,iBAAiBnB,IAAI3F,GACrC0I,GACA/K,KAAKgL,uBAAuB,CAAC3I,EAAM4I,qBAAsBF,GAE7D/K,KAAKuJ,oBAAoBrG,KAAIgI,EAAAA,EAAAA,KAAa,WAEjC7I,EAAMiD,cACPX,EAAKwG,0BAA0B9I,EAEvC,KAEA,IA2DQ+I,EACAC,EA5DFC,EAAmB,IAAI9I,IACvB+I,EAAY,IAAIC,EAAAA,IAAiB,kBAAM/M,EAAUkG,OAAM,OAAQ,GAAMjE,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAA6K,EAAAC,EAAAC,EAAAC,EAAAjJ,EAAAF,EAAArC,EAAA,OAAAM,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3B,MAAA,OAOlD,OANjBqM,EAAKI,KAAKC,MACR,OAARhB,QAAwB,IAARA,GAA0BA,EAAIvG,SAAQ,GACtDuG,EAAM,IAAIiB,EAAAA,EACJL,EAAWrJ,EAAM2J,eAAc,kBAAc,OAARlB,QAAwB,IAARA,OAAiB,EAASA,EAAImB,QAAQ,IAAClL,EAAAC,KAAA,EAExF2K,EAAUb,EAAIrK,MAAKM,EAAA3B,KAAA,EACA8C,EAAoBgK,OAAOlM,KAAKiJ,yBAAyBc,mBAAoB1H,EAAOrC,KAAKmM,kBAAmBR,GAAQ,OACzE,GAD9DC,EAAU7K,EAAAc,KAChB0J,EAAUa,MAAQpM,KAAK6J,cAAcwC,OAAOhK,EAAOwJ,KAAKC,MAAQL,IAC5DE,EAAQxK,wBAAyB,CAAFJ,EAAA3B,KAAA,SACV,OAArBwM,EAAWrH,UAAUxD,EAAAG,OAAA,kBAGzByB,GAAAC,EAAAA,EAAAA,GACuBgJ,EAAWxL,UAAQ,IAA1C,IAAAuC,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAtD,MACkD,oBADvCY,EAAQqC,EAAAvD,OACKoN,uBAAyChB,EAAiBT,IAAIzK,KAC9EkL,EAAiBpI,IAAI9C,GACrBJ,KAAKuJ,oBAAoBrG,IAAI9C,EAASkM,uBAAsB,WACnDf,EAAUgB,eACXhB,EAAUiB,UAElB,KAEP,OAAAxI,GAAArB,EAAAtD,EAAA2E,EAAA,SAAArB,EAAAsB,GAAA,CACDjE,KAAKuJ,oBAAoBrG,IAAI0I,GAC7B5L,KAAKgL,uBAAuBY,EAAWzJ,OAAQyJ,EAAWlJ,OAC1D1C,KAAKmL,0BAA0B9I,GAAOtB,EAAA3B,KAAA,iBAAA2B,EAAAC,KAAA,GAAAD,EAAAiB,GAAAjB,EAAA,UAGtC0L,EAAAA,EAAAA,IAAiB1L,EAAAiB,IAAM,QAIJ,OAJIjB,EAAAC,KAAA,GAGvB8J,EAAIvG,UACJmH,EAASnH,UAAUxD,EAAA2L,OAAA,6BAAA3L,EAAAQ,OAAA,GAAAX,EAAA,wBAEzB,GAAEZ,KAAK6J,cAAc7B,IAAI3F,IAiB3B,GAhBArC,KAAKuJ,oBAAoBrG,IAAIqI,GAC7BvL,KAAKuJ,oBAAoBrG,KAAIgI,EAAAA,EAAAA,KAAa,kBAAc,OAARJ,QAAwB,IAARA,OAAiB,EAASA,EAAIvG,SAAQ,EAAK,KAC3GgH,EAAUiB,SAAS,GACnBxM,KAAKuJ,oBAAoBrG,IAAIlD,KAAKgJ,QAAQ2D,mBAAkB,SAACtN,IAIrDA,EAAEuN,kBAAqBrB,EAAUgB,eACjChB,EAAUiB,UAElB,KACAxM,KAAKuJ,oBAAoBrG,IAAIlD,KAAKgJ,QAAQ6D,yBAAwB,SAACxN,GAE/D,IAAM+M,EAAQU,KAAKC,IAAIxB,EAAUa,MAAO,MACxCb,EAAUiB,SAASJ,EACvB,KACwB,OAApB3B,EAAQE,QAER3K,KAAK4J,kBAAoB,MAMD,oBAApBa,EAAQE,SACRS,EAAc,EACdC,EAAU,IAGVD,EAAc,EACdC,EAAU,GAEdrL,KAAK4J,kBAAoBwB,EACzBpL,KAAKuJ,oBAAoBrG,IAAI8J,EAAAA,mBAAmBC,cAAcC,OAAM,SAAA7N,GAChE,GAAKsF,EAAKqE,QAAQmE,WAAlB,CAGA,IAAMC,EAAgB/N,EAAEgO,QAAUhO,EAAEiO,UAAajO,EAAEkO,WAAYlO,EAAEmO,QAAWnC,EAAUD,EACtF,GAAIgC,IAAkBzI,EAAKiF,kBAAmB,CAC1CjF,EAAKiF,kBAAoBwD,EACzB,IAAM/K,EAAQsC,EAAKqE,QAAQ4B,WACrB6C,EAAS9I,EAAK+I,iCAAiCrL,GACrDsC,EAAKqG,uBAAuB,CAAC3I,EAAM4I,qBAAsBwC,GACzDlC,EAAUiB,SAAS,EACvB,CARA,CASJ,KAGJxM,KAAKuJ,oBAAoBrG,IAAIlD,KAAK2N,yBAAwB,kBAAMpC,EAAUiB,SAAS,EAAE,KACrFxM,KAAKuJ,oBAAoBrG,IAAIlD,KAAK4N,uBAClC5N,KAAKuJ,oBAAoBrG,IAAIlD,KAAK6N,sBApGlC,CAJA,CAyGJ,GAAC,CAAAvN,IAAA,sBAAApB,MACD,WAAsB,IAAA4O,EAAA,KACZC,EAAQ,IAAIxL,EAAAA,GACZyL,EAAUD,EAAM7K,IAAI,IAAI+K,EAAAA,GAAiBjO,KAAKgJ,UAE9CkF,EAAe,IAAI3L,EAAAA,GA0CzB,OAzCAwL,EAAM7K,IAAIgL,GACVH,EAAM7K,IAAI8K,EAAQG,8BAA6B,SAAA9O,GAC3C,IAAO+O,GAAPpL,EAAAA,EAAAA,GAAqB3D,EAAC,GAAL,GACXgP,EAAYP,EAAKQ,uBAAuBF,GACxC/L,EAAQyL,EAAK9E,QAAQ4B,WAC3B,GAAKyD,GAAchM,EAAnB,CAKA,IAAMyI,EAAM,IAAIiB,EAAAA,EAChBmC,EAAahL,KAAIgI,EAAAA,EAAAA,KAAa,kBAAMJ,EAAIvG,SAAQ,EAAK,KACrD8J,EAAU3F,KAAK3J,QAAQ+L,EAAIrK,OAE3BqN,EAAKS,qBAAuBF,EAAUxF,KAAK2F,SAAWH,EAAUxF,KAAK4F,SAC/D,IAAI7F,EAAoByF,EAAWD,EAAWtF,yBAC9CxH,EACN,IAAMmE,EAAapD,EAAMkB,iBAAiB8K,EAAU3F,KAAKxI,KAAKoD,UAAUmC,WAClE5F,EAAQ,IAAI+D,EAAAA,EAAM6B,EAAY,EAAGA,EAAYpD,EAAMqM,iBAAiBjJ,IACpEkJ,EAAYb,EAAKc,wBAAwB/O,GAC/CiO,EAAK9C,uBAAuB,CAACnL,GAAQ8O,GACrCT,EAAahL,KAAIgI,EAAAA,EAAAA,KAAa,WAC1B4C,EAAKS,0BAAuBjN,EAC5BwM,EAAK9C,uBAAuB,CAACnL,GAAQ8O,EACzC,IAhBA,MAFIT,EAAa1D,OAmBrB,KACAuD,EAAM7K,IAAI8K,EAAQa,UAAS,kBAAMX,EAAa1D,OAAO,KACrDuD,EAAM7K,IAAI8K,EAAQc,WAAU,SAACzP,GAAC,OAAKZ,EAAUqP,OAAM,OAAQ,GAAMpN,EAAAA,EAAAA,KAAAC,MAAE,SAAAe,IAAA,IAAAK,EAAA8G,EAAA,OAAAnI,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAxC,MAAA,OACnB,KAAtC2C,EAAQ/B,KAAKsO,uBAAuBjP,IAC/B,CAAFuC,EAAAxC,KAAA,SACkB,KAAjByJ,EAAO9G,EAAM8G,MACV4F,SAAU,CAAF7M,EAAAxC,KAAA,QAEbY,KAAKsJ,cAAcyF,eAAeC,EAAAA,EAA4B3P,EAAGW,KAAKgJ,QAASH,EAAK4F,UAAU7M,EAAAxC,KAAA,oBAEzF6P,EAAAA,GAAkBC,GAAGrG,EAAK2F,SAAU,CAAF5M,EAAAxC,KAAA,SAEvC,OAFuCwC,EAAAxC,KAAA,GAEjCY,KAAKmP,eAAetG,EAAK2F,QAASzM,EAAM2G,MAAK,yBAAA9G,EAAAL,OAAA,GAAAG,EAAA,SAG7D,KACKqM,CACX,GAAC,CAAAzN,IAAA,0BAAApB,MACD,SAAwBW,GACpB,IACqDsD,EAD/CwL,EAAY,IAAInM,IAAMY,GAAAR,EAAAA,EAAAA,GACT5C,KAAKwJ,qBAAqB4F,UAAQ,IAArD,IAAAhM,EAAAP,MAAAM,EAAAC,EAAAN,KAAAtD,MAAuD,KAA5C4C,EAAIe,EAAAjE,MACPW,EAAMwP,cAAcjN,EAAKsG,KAAKvI,OAAON,QACrC8O,EAAUzL,IAAId,EAAKsG,KAE3B,CAAC,OAAA1E,GAAAZ,EAAA/D,EAAA2E,EAAA,SAAAZ,EAAAa,GAAA,CACD,OAAOqL,MAAMC,KAAKZ,EACtB,GAAC,CAAArO,IAAA,0BAAApB,MACD,SAAwBsQ,GAAkB,IAAAC,EAAA,KACtC,OAAOzP,KAAKgJ,QAAQ0G,WAAU,SAACrQ,GAAC,OAAKZ,EAAUgR,OAAM,OAAQ,GAAM/O,EAAAA,EAAAA,KAAAC,MAAE,SAAAqE,IAAA,IAAA6D,EAAA8G,EAAA,OAAAjP,EAAAA,EAAAA,KAAAI,MAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAA7F,MAAA,UAC1C,IAAnBC,EAAE6N,MAAM0C,OAAY,CAAA3K,EAAA7F,KAAA,eAAA6F,EAAA/D,OAAA,iBAGmB,GAArC2H,EAAO7I,KAAKsO,uBAAuBjP,GAC9B,CAAF4F,EAAA7F,KAAA,eAAA6F,EAAA/D,OAAA,iBAIT,OADA7B,EAAE6N,MAAM2C,iBAAiB5K,EAAA7F,KAAA,EACnByJ,EAAKH,KAAK3J,QAAQ+Q,EAAAA,EAAkBC,MAAK,QAC3CC,EAAAA,EAAAA,IAAgBnH,EAAKH,KAAKxI,KAAK+P,aACzBN,EAAQ9G,EAAKH,KAAKxI,KAAK+P,UAAUlL,KAAI,SAAAmL,GAAI,OAAIC,EAAAA,EAAcC,QAAQxM,EAAAA,EAAMyM,KAAKH,EAAKrQ,OAAQqQ,EAAKI,KAAK,IAC3GtQ,KAAKgJ,QAAQuH,aAAa,oBAAqBZ,GAC/CH,KACH,wBAAAvK,EAAA1D,OAAA,GAAAyD,EAAA,SACH,GACN,GAAC,CAAA1E,IAAA,sBAAApB,MACD,WAAsB,IAAAsR,EAAA,KAClB,OAAOxQ,KAAKgJ,QAAQyH,eAAc,SAACpR,GAAC,OAAKZ,EAAU+R,OAAM,OAAQ,GAAM9P,EAAAA,EAAAA,KAAAC,MAAE,SAAA8D,IAAA,IAAAoE,EAAA,OAAAnI,EAAAA,EAAAA,KAAAI,MAAA,SAAA8D,GAAA,cAAAA,EAAA5D,KAAA4D,EAAAxF,MAAA,UAC/DC,EAAE6N,MAAMrG,kBAAkB6J,YAAW,CAAA9L,EAAAxF,KAAA,eAAAwF,EAAA1D,OAAA,iBAGA,KAArC2H,EAAO7I,KAAKsO,uBAAuBjP,IAC/B,CAAFuF,EAAAxF,KAAA,QACJ,OADIwF,EAAAxF,KAAA,EACEY,KAAKsJ,cAAcyF,eAAe4B,EAAAA,EAAqB3Q,KAAKgJ,QAAS3J,EAAE6N,MAAMrG,OAAQgC,GAAK,wBAAAjE,EAAArD,OAAA,GAAAkD,EAAA,SAEtG,GACN,GAAC,CAAAnE,IAAA,yBAAApB,MACD,SAAuBG,GACnB,IAAImC,EACJ,GAAsB,IAAlBnC,EAAEwH,OAAO+J,KAAb,CAGA,IAAMnG,EAAkD,QAAvCjJ,EAAKnC,EAAEwH,OAAO+I,OAAOiB,oBAAiC,IAAPrP,OAAgB,EAASA,EAAGiJ,QAC5F,OAAIA,aAAmBqG,EAAAA,KAAmD,OAAZrG,QAAgC,IAAZA,OAAqB,EAASA,EAAQsG,wBAAyBtI,EACtIgC,EAAQsG,kBADnB,CAFA,CAMJ,GAAC,CAAAzQ,IAAA,iBAAApB,MACD,SAAesP,EAAS9F,GACpB,IAAIlH,EACJ,OAAO/C,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAqQ,IAAA,IAAAC,EAAA,OAAAvQ,EAAAA,EAAAA,KAAAI,MAAA,SAAAoQ,GAAA,cAAAA,EAAAlQ,KAAAkQ,EAAA9R,MAAA,OAE/B,OAF+B8R,EAAAlQ,KAAA,EAAAkQ,EAAA9R,KAAA,GAEzB6R,EAAAjR,KAAKoJ,iBAAgB+H,eAAczR,MAAAuR,EAAA,CAACzC,EAAQ4C,IAAElJ,QAAAmJ,EAAAA,EAAAA,GAAmC,QAA5B7P,EAAKgN,EAAQvH,iBAA8B,IAAPzF,EAAgBA,EAAK,MAAI,OAAA0P,EAAA9R,KAAA,eAAA8R,EAAAlQ,KAAA,EAAAkQ,EAAAlP,GAAAkP,EAAA,SAGxHlR,KAAKqJ,qBAAqBiI,OAAO,CAC7BC,SAAUC,EAAAA,GAASC,MACnBC,OAAQhJ,EAAKtI,SAASuR,YACtBC,QAAOV,EAAAlP,KACR,wBAAAkP,EAAA3P,OAAA,GAAAyP,EAAA,iBAGf,GAAC,CAAA1Q,IAAA,4BAAApB,MACD,SAA0BmD,GACtB,IAAMgB,EAAQrD,KAAK0N,iCAAiCrL,GACpDrC,KAAKmJ,iBAAiBlB,IAAI5F,EAAOgB,EACrC,GAEA,CAAA/C,IAAA,mCAAApB,MACA,SAAiCmD,GAC7B,IACiDwP,EAD3CnP,EAAQ,IAAI+G,IAAMqI,GAAAlP,EAAAA,EAAAA,GACA5C,KAAKwJ,sBAAoB,IAAjD,IAAAsI,EAAAjP,MAAAgP,EAAAC,EAAAhP,KAAAtD,MAAmD,KAAAuS,GAAA/O,EAAAA,EAAAA,GAAA6O,EAAA3S,MAAA,GAAvCkS,EAAEW,EAAA,GAAEC,EAAGD,EAAA,GACf,IAAIrP,EAAMmI,IAAImH,EAAItJ,MAAlB,CAKA,IAAM7I,EAAQwC,EAAM4P,mBAAmBb,GACvC,GAAIvR,EAAO,CAEP,IAAMM,EAAS,IAAIR,EAAgBE,EAAOmS,EAAItJ,KAAKvI,OAAOL,WACpDoS,EAAOF,EAAItJ,KAAKyJ,KAAK,CAAEhS,OAAAA,IAC7BuC,EAAMuF,IAAI+J,EAAItJ,KAAMwJ,EACxB,CAPA,CAQJ,CAAC,OAAAlO,GAAA8N,EAAAzS,EAAA2E,EAAA,SAAA8N,EAAA7N,GAAA,CACD,OAAOqL,MAAMC,KAAK7M,EAAM0M,SAC5B,GAAC,CAAA9O,IAAA,kBAAApB,MACD,WACI,IAIsEkT,EAHhE/P,EAAQrC,KAAKgJ,QAAQ4B,WACrByH,EAAgBrS,KAAKgJ,QAAQsJ,yCAC7B/S,EAAS,GAAGgT,GAAA3P,EAAAA,EAAAA,GACEyP,EAAcnO,KAAKN,EAAAA,EAAM4O,2BAAyB,IAAtE,IAAAD,EAAA1P,MAAAuP,EAAAG,EAAAzP,KAAAtD,MAAwE,KAA7DK,EAAKuS,EAAAlT,MACNuT,EAAgBpQ,EAAMqQ,cAAc,IAAI9O,EAAAA,EAAM/D,EAAM8S,gBALhD,GAKyE9S,EAAM+F,YAAa/F,EAAM+S,cALlG,GAKyH/S,EAAMgG,YACnH,IAAlBtG,EAAO4F,QAAiBvB,EAAAA,EAAMiP,0BAA0BtT,EAAOA,EAAO4F,OAAS,GAAIsN,GAInFlT,EAAOA,EAAO4F,OAAS,GAAKvB,EAAAA,EAAMkP,UAAUvT,EAAOA,EAAO4F,OAAS,GAAIsN,GAHvElT,EAAOwE,KAAK0O,EAKpB,CAAC,OAAAzO,GAAAuO,EAAAlT,EAAA2E,EAAA,SAAAuO,EAAAtO,GAAA,CACD,OAAO1E,CACX,GAAC,CAAAe,IAAA,yBAAApB,MACD,SAAuBiD,EAAQO,GAAO,IAC9BlB,EAAIC,EAD0BsR,EAAA,KAG5BC,EAAqB,GACrBC,EAAkB,SAACvK,EAAMwK,EAAKC,EAASC,EAAarC,GACtD,IAAMsC,EAAO,CACTF,QAAAA,EACAG,qCAAqC,EACrCC,gBAAiBL,EAAIM,UACrBJ,YAAAA,EACArC,aAAAA,GAEJiC,EAAmBjP,KAAK,CACpB2E,KAAAA,EACA+K,aAAcP,EACdQ,WAAY,CACR7T,MAAO6I,EAAKvI,OAAON,MACnB4K,SAAOkJ,EAAAA,EAAAA,GAAA,CAEHC,YAAa,YACbC,gBAAiBnL,EAAKvI,OAAON,MAAMiU,UACnCC,uBAAwBrL,EAAKvI,OAAON,MAAMiU,UAC1CE,WAAY,GACXtL,EAAKvI,OAAOL,UAAuC,IAA3BiT,EAAKnJ,kBAAkDyJ,OAAO/R,KAIvG,EACM2S,EAAwB,SAACvL,EAAMwL,GACjC,IAAMC,EAAapB,EAAKrJ,aAAa0K,mBAAmB,CACpDC,MAAO,GAAFnM,OAAMoM,EAAW,EAAK,EAAC,MAC5BC,QAAS,iBAEbtB,EAAgBvK,EAAMyL,EAAY,SAAUD,EAASM,EAAAA,GAAwBC,MAAQD,EAAAA,GAAwBzE,KACjH,EAEA2E,EAAqD1U,KAAK2U,iBAAlDL,EAAQI,EAARJ,SAAUM,EAAUF,EAAVE,WAAYC,EAAOH,EAAPG,QAASC,EAASJ,EAATI,UACjCC,EAAgB,oCACtB/U,KAAKgJ,QAAQgM,sBAAsBC,MAAMC,YAAYH,EAAeH,GAAY,IACxDO,EADwDC,GAAAxS,EAAAA,EAAAA,GAC7DF,GAAK,IAAxB,IAAA0S,EAAAvS,MAAAsS,EAAAC,EAAAtS,KAAAtD,MAA0B,KAAfkJ,EAAIyM,EAAAjW,MAEPwJ,EAAKxI,KAAKmV,aACVpB,EAAsBvL,GAAM,GAMhC,IAHA,IAAM4M,EAAmC,kBAApB5M,EAAKxI,KAAK6B,MACzB,CAAC,CAAEA,MAAO2G,EAAKxI,KAAK6B,QACpB2G,EAAKxI,KAAK6B,MACPwF,EAAI,EAAGA,EAAI+N,EAAMnQ,OAAQoC,IAAK,CACnC,IAAMsB,EAAOyM,EAAM/N,GACbgO,EAAgB,IAANhO,EACV2M,EAAS3M,IAAM+N,EAAMnQ,OAAS,EAC9BqQ,EAAgB,CAClBlB,SAAU,GAAFpM,OAAKoM,EAAQ,MACrBM,WAAY,OAAF1M,OAAS6M,EAAa,OAAA7M,OAAMuN,EAAAA,GAAqBb,YAC3Dc,cAAeZ,EAAY,WAAa,WAExC9E,EAAAA,EAAAA,IAAgBtH,EAAKxI,KAAK+P,aAC1BuF,EAAcG,OAAS,WAE3B3V,KAAK4V,cAAcJ,EAAe9M,EAAKxI,OAClC2I,EAAK2F,SAAW3F,EAAK4F,YAAmD,QAApCjN,EAAKxB,KAAKuO,4BAAyC,IAAP/M,OAAgB,EAASA,EAAGqH,KAAKH,QAAUA,GAAQ1I,KAAKuO,qBAAqB1F,KAAKF,QAAUpB,IAE7KiO,EAAcK,eAAiB,YAC3B7V,KAAKuO,qBAAqBzF,qBAC1B0M,EAAcM,OAAQC,EAAAA,EAAAA,IAAiBC,EAAAA,KACvCR,EAAcG,OAAS,YAG3Bd,IACIU,GAAWrB,GAEXsB,EAAcX,QAAU,OAAH3M,OAAsC,EAA5B4E,KAAKC,IAAI,EAAGuH,EAAW,GAAM,MAC5DkB,EAAcS,aAAe,GAAH/N,OAAOoM,EAAW,EAAK,EAAC,OAE7CiB,GAELC,EAAcX,QAAU,aAAH3M,OAA4C,EAA5B4E,KAAKC,IAAI,EAAGuH,EAAW,GAAM,MAClEkB,EAAcS,aAAe,GAAH/N,OAAOoM,EAAW,EAAK,EAAC,WAAApM,OAAWoM,EAAW,EAAK,EAAC,OAEzEJ,GAELsB,EAAcX,QAAU,OAAH3M,OAAsC,EAA5B4E,KAAKC,IAAI,EAAGuH,EAAW,GAAM,YAC5DkB,EAAcS,aAAe,KAAH/N,OAASoM,EAAW,EAAK,EAAC,OAAApM,OAAOoM,EAAW,EAAK,EAAC,SAG5EkB,EAAcX,QAAU,eAGhC5B,EAAgBvK,EAAM1I,KAAK0J,aAAa0K,mBAAmBoB,GAAgBU,GAASrN,EAAK9G,OAAQmS,IAAWxL,EAAKxI,KAAKiW,aAAe3B,EAAAA,GAAwBC,MAAQD,EAAAA,GAAwBzE,KAAM,IAAItH,EAA2BC,EAAMnB,GAC5O,CAKA,GAHImB,EAAKxI,KAAKiW,cACVlC,EAAsBvL,GAAM,GAE5BsK,EAAmB7N,OAAS4D,EAAqBqN,gBACjD,KAER,CAEA,OAAApS,GAAAoR,EAAA/V,EAAA2E,EAAA,SAAAoR,EAAAnR,GAAA,CACA,IAC0BoS,EADpBC,EAAyB,GAAGC,GAAA3T,EAAAA,EAAAA,GACdT,GAAM,IAA1B,IAAAoU,EAAA1T,MAAAwT,EAAAE,EAAAzT,KAAAtD,MAA4B,KACiFgX,EADlG3W,EAAKwW,EAAAnX,MAAAuX,GAAA7T,EAAAA,EAAAA,GAC8D,QAApDnB,EAAKzB,KAAKgJ,QAAQ0N,sBAAsB7W,UAA2B,IAAP4B,EAAgBA,EAAK,IAAE,IAAzG,IAAAgV,EAAA5T,MAAA2T,EAAAC,EAAA3T,KAAAtD,MAA2G,KAA9F4R,EAAEoF,EAAAtX,MAAFkS,GACHuF,EAAW3W,KAAKwJ,qBAAqBxB,IAAIoJ,GAC3CuF,IACAL,EAAuBvS,KAAKqN,GAC5BuF,EAASlD,aAAalP,UACtBvE,KAAKwJ,qBAAqBoN,OAAOxF,GAEzC,CAAC,OAAApN,GAAAyS,EAAApX,EAAA2E,EAAA,SAAAyS,EAAAxS,GAAA,CACL,CAAC,OAAAD,GAAAuS,EAAAlX,EAAA2E,EAAA,SAAAuS,EAAAtS,GAAA,CACD,IAAM4S,EAAcC,EAAAA,EAAwBC,QAAQ/W,KAAKgJ,SACzDhJ,KAAKgJ,QAAQgO,mBAAkB,SAAAC,GAE3B,IADA,IAAMC,EAAmBD,EAASE,iBAAiBb,EAAwBtD,EAAmBjO,KAAI,SAAAgC,GAAC,OAAIA,EAAE2M,UAAU,KAC1GnM,EAAI,EAAGA,EAAI2P,EAAiB/R,OAAQoC,IAAK,CAC9C,IAAMnF,EAAO4Q,EAAmBzL,GAChCwL,EAAKvJ,qBAAqBvB,IAAIiP,EAAiB3P,GAAInF,EACvD,CACJ,IACAyU,EAAYO,QAAQpX,KAAKgJ,QAC7B,GAAC,CAAA1I,IAAA,gBAAApB,MACD,SAAcmY,EAAOnX,GACbA,EAAKoX,OAASrI,EAAAA,GAAwBsI,WACtCF,EAAMG,iBAAkBzB,EAAAA,EAAAA,IAAiBC,EAAAA,KACzCqB,EAAMvB,OAAQC,EAAAA,EAAAA,IAAiBC,EAAAA,MAE1B9V,EAAKoX,OAASrI,EAAAA,GAAwBwI,MAC3CJ,EAAMG,iBAAkBzB,EAAAA,EAAAA,IAAiBC,EAAAA,KACzCqB,EAAMvB,OAAQC,EAAAA,EAAAA,IAAiBC,EAAAA,OAG/BqB,EAAMG,iBAAkBzB,EAAAA,EAAAA,IAAiBC,EAAAA,KACzCqB,EAAMvB,OAAQC,EAAAA,EAAAA,IAAiBC,EAAAA,KAEvC,GAAC,CAAA1V,IAAA,iBAAApB,MACD,WACI,IAAMuL,EAAUzK,KAAKgJ,QAAQ0B,UAAU,KACjCmK,EAAUpK,EAAQoK,QAClB6C,EAAiB1X,KAAKgJ,QAAQ0B,UAAU,IACxCiN,EAAmB3X,KAAKgJ,QAAQ0B,UAAU,IAC5C4J,EAAW7J,EAAQ6J,WAClBA,GAAYA,EAAW,GAAKA,EAAWoD,KACxCpD,EAAWoD,GAEf,IAAM9C,EAAanK,EAAQmK,YAAc+C,EAIzC,MAAO,CAAErD,SAAAA,EAAUM,WAAAA,EAAYC,QAAAA,EAASC,WAHrBD,GACZD,IAAe+C,GACfrD,IAAaoD,EAExB,GAAC,CAAApX,IAAA,wBAAApB,MACD,WACIc,KAAKgJ,QAAQ4O,kBAAkBtI,MAAMC,KAAKvP,KAAKwJ,qBAAqBqO,SAAS,IACzBC,EADyBC,GAAAnV,EAAAA,EAAAA,GAC3D5C,KAAKwJ,qBAAqB4F,UAAQ,IAApD,IAAA2I,EAAAlV,MAAAiV,EAAAC,EAAAjV,KAAAtD,MAAsD,CAAxCsY,EAAA5Y,MACNuU,aAAalP,SACrB,CAAC,OAAAP,GAAA+T,EAAA1Y,EAAA2E,EAAA,SAAA+T,EAAA9T,GAAA,CACDjE,KAAKwJ,qBAAqBgB,OAC9B,IAAC,EAAAlK,IAAA,MAAApB,MArcD,SAAW8Y,GACP,IAAIxW,EACJ,OAAkE,QAA1DA,EAAKwW,EAAOC,gBAAgBlP,EAAqBmP,WAAwB,IAAP1W,EAAgBA,OAAKF,CACnG,KAACyH,CAAA,CAJmB,GAodxB,SAASmN,GAASiC,GAEd,OAAOA,EAAI/H,QAAQ,SADO,OAE9B,CAfArH,EAAqBmP,GAAK,4BAC1BnP,EAAqBqN,gBAAkB,KACvCrN,EAAuBpC,EAAW,CAC9Bc,EAAQ,EAAG2Q,EAAAA,GACX3Q,EAAQ,EAAG4Q,EAAAA,GACX5Q,EAAQ,EAAGa,GACXb,EAAQ,EAAG6Q,EAAAA,GACX7Q,EAAQ,EAAG8Q,EAAAA,IACX9Q,EAAQ,EAAG+Q,EAAAA,KACZzP,GAOH0P,EAAAA,EAAiBC,gBAAgB,6BAA6B,SAACzB,GAAQ,QAAA0B,EAAA1R,UAAA9B,OAAKyT,EAAI,IAAAtJ,MAAAqJ,EAAA,EAAAA,EAAA,KAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAAJD,EAAIC,EAAA,GAAA5R,UAAA4R,GAAA,OAAKpa,OAAU,OAAQ,OAAQ,GAAMiC,EAAAA,EAAAA,KAAAC,MAAE,SAAAmY,IAAA,IAAA3Q,EAAAtI,EAAAkZ,EAAAhP,EAAAmJ,EAAA7Q,EAAA9C,EAAA,OAAAmB,EAAAA,EAAAA,KAAAI,MAAA,SAAAkY,GAAA,cAAAA,EAAAhY,KAAAgY,EAAA5Z,MAAA,OAKvG,OAJL+I,EAAcyQ,EAAI,GAAb/Y,EAAS+Y,EAAI,IACzBK,EAAAA,EAAAA,IAAWC,EAAAA,EAAIC,MAAMhR,KACrB8Q,EAAAA,EAAAA,IAAWrV,EAAAA,EAAMwV,SAASvZ,IAAQkZ,EACH9B,EAASjP,IAAIoQ,EAAAA,GAApCrO,EAAkBgP,EAAlBhP,mBAAkBiP,EAAA5Z,KAAA,EACR6X,EAASjP,IAAIqR,EAAAA,GAAmBC,qBAAqBnR,GAAI,OAEzD,OAFZ+K,EAAG8F,EAAAnX,KAAAmX,EAAAhY,KAAG,EAAHgY,EAAA5Z,KAAG,GAEY8C,EAAoBgK,OAAOnC,EAAoBmJ,EAAIqG,OAAOC,gBAAiB,CAAC5V,EAAAA,EAAMyM,KAAKxQ,IAASiQ,EAAAA,EAAkBC,MAAK,QAErG,OAFhC1N,EAAK2W,EAAAnX,KACLtC,EAAS8C,EAAMK,MAAMqC,KAAI,SAAAwC,GAAC,OAAIA,EAAErH,IAAI,IAC1CuZ,YAAW,kBAAMpX,EAAMkC,SAAS,GAAE,GAAIyU,EAAA9X,OAAA,SAC/B3B,GAAM,QAGC,OAHDyZ,EAAAhY,KAAA,GAGbkS,EAAI3O,UAAUyU,EAAAtM,OAAA,6BAAAsM,EAAAzX,OAAA,GAAAuX,EAAA,sBAEpB,I,2HChkBEnS,GAA0C,SAAUC,EAAYC,EAAQvG,EAAKwG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU9B,OAAQ+B,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQvG,GAAOwG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQvG,EAAKwG,QACpH,IAAK,IAAIS,EAAIX,EAAWzB,OAAS,EAAGoC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQvG,EAAK4G,GAAKH,EAAEF,EAAQvG,KAAS4G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQvG,EAAK4G,GAAIA,CAChE,EACIO,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQvG,GAAOqH,EAAUd,EAAQvG,EAAKoH,EAAa,CACxE,EACIjJ,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EACIsa,GAAgD,SAAUC,GAC1D,IAAKC,OAAOC,cAAe,MAAM,IAAIC,UAAU,wCAC/C,IAAiCvS,EAA7BwS,EAAIJ,EAAEC,OAAOC,eACjB,OAAOE,EAAIA,EAAEC,KAAKL,IAAMA,EAAwB,oBAAbM,SAA0BA,SAASN,GAAKA,EAAEC,OAAOM,YAAa3S,EAAI,CAAC,EAAG4S,EAAK,QAASA,EAAK,SAAUA,EAAK,UAAW5S,EAAEqS,OAAOC,eAAiB,WAAc,OAAO7Z,IAAM,EAAGuH,GAC9M,SAAS4S,EAAKrX,GAAKyE,EAAEzE,GAAK6W,EAAE7W,IAAM,SAAUsX,GAAK,OAAO,IAAItb,SAAQ,SAAUC,EAASC,IACvF,SAAgBD,EAASC,EAAQ+H,EAAGqT,GAAKtb,QAAQC,QAAQqb,GAAG3a,MAAK,SAAS2a,GAAKrb,EAAQ,CAAEG,MAAOkb,EAAG5a,KAAMuH,GAAM,GAAG/H,EAAS,EADbqb,CAAOtb,EAASC,GAA7Bob,EAAIT,EAAE7W,GAAGsX,IAA8B5a,KAAM4a,EAAElb,MAAQ,GAAI,CAAG,CAEnK,EAkBMob,GAAqB,SAAAC,IAAAC,EAAAA,GAAAA,GAAAF,EAAAC,GAAA,IAAAE,GAAAC,EAAAA,GAAAA,GAAAJ,GACvB,SAAAA,EAAYzR,EAAM8R,EAAOC,EAAkBC,GAAkB,IAAAha,EAExC,OAFwCd,EAAAA,EAAAA,GAAA,KAAAua,IACzDzZ,EAAA4Z,EAAAT,KAAA,KAAM,GAAIW,EAAO9R,EAAKH,KAAKvI,OAAON,MAAO+a,EAAkBC,GAAkB,IACxEhS,KAAOA,EAAKhI,CACrB,CAAC,OAAAjB,EAAAA,EAAAA,GAAA0a,EAAA,CAJsB,CAASQ,EAAAA,IAMhCC,GAAe,SAAAC,IAAAR,EAAAA,GAAAA,GAAAO,EAAAC,GAAA,IAAAC,GAAAP,EAAAA,GAAAA,GAAAK,GACf,SAAAA,EAAY/C,EAAQkD,EAAiBC,EAAeC,EAAsBC,EAAkBC,GAAyB,IAAA3W,EAG3F,OAH2F5E,EAAAA,EAAAA,GAAA,KAAAgb,IACjHpW,EAAAsW,EAAAjB,KAAA,KAAMhC,EAAQkD,EAAiBC,EAAeC,EAAsBE,IAC/DD,iBAAmBA,EACxB1W,EAAK4W,aAAe,EAAE5W,CAC1B,CA4HC,OA5HA/E,EAAAA,EAAAA,GAAAmb,EAAA,EAAAza,IAAA,qBAAApB,MACD,SAAmBkP,GACf,IAAI5M,EAEJ,IADmBuH,EAAqBf,IAAIhI,KAAKgJ,SAE7C,OAAO,KAEX,GAA+B,IAA3BoF,EAAWvH,OAAO+J,KAClB,OAAO,KAEX,IAAMnG,EAA2D,QAAhDjJ,EAAK4M,EAAWvH,OAAO+I,OAAOiB,oBAAiC,IAAPrP,OAAgB,EAASA,EAAGiJ,QACrG,OAAMA,aAAmBqG,EAAAA,IAAsCrG,EAAQsG,wBAAwBtI,EAGxF,IAAI6R,GAAsB7P,EAAQsG,aAAc/Q,KAAMoO,EAAWlB,MAAMsO,KAAMpN,EAAWlB,MAAMuO,MAF1F,IAGf,GAAC,CAAAnb,IAAA,cAAApB,MACD,WACI,MAAO,EACX,GAAC,CAAAoB,IAAA,eAAApB,MACD,SAAaiB,EAAQub,EAAkBjb,GAAO,IAAAqN,EAAA,KAC1C,OAAM3N,aAAkBma,GAGjB,IAAIqB,EAAAA,IAAoB,SAACC,GAAQ,OAAKnd,GAAUqP,OAAM,OAAQ,GAAMpN,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAAY,EAAAqa,EAAApa,EAAAqa,EAAAjT,EAAAkT,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA7T,EAAA,OAAAhI,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3B,MAAA,OAGzE,OADQyJ,EAAS1I,EAAT0I,KAAI9H,EAAA3B,KAAA,EACNyJ,EAAKH,KAAK3J,QAAQ0B,GAAM,WAC1BA,EAAMU,wBAAyB,CAAFJ,EAAA3B,KAAA,eAAA2B,EAAAG,OAAA,iBAsDhB,MAjDqB,kBAA3B2H,EAAKH,KAAKxI,KAAK4B,QACtBia,GAAc,IAAIS,GAAAA,IAAiBC,WAAW5T,EAAKH,KAAKxI,KAAK4B,SAExD+G,EAAKH,KAAKxI,KAAK4B,UACpBia,EAAclT,EAAKH,KAAKxI,KAAK4B,SAE7Bia,GACAH,EAASc,QAAQ,IAAIC,GAAAA,GAAc3c,KAAMG,EAAON,MAAO,CAACkc,IAAc,EAAO,KAG7E/L,EAAAA,EAAAA,IAAgBnH,EAAKH,KAAKxI,KAAK+P,YAC/B2L,EAASc,QAAQ,IAAIC,GAAAA,GAAc3c,KAAMG,EAAON,MAAO,EAAC,IAAI2c,GAAAA,IAAiBC,YAAWG,EAAAA,GAAAA,IAAS,WAAY,6BAA6B,EAAO,QAIpH,kBAAtB/T,EAAKA,KAAK/G,QACjBka,GAAc,IAAIQ,GAAAA,IAAiBC,WAAW5T,EAAKA,KAAK/G,SAEnD+G,EAAKA,KAAK/G,UACfka,EAAcnT,EAAKA,KAAK/G,SAExBka,GACAJ,EAASc,QAAQ,IAAIC,GAAAA,GAAc3c,KAAMG,EAAON,MAAO,CAACmc,IAAc,EAAO,KAG7EnT,EAAKA,KAAK4F,UAAY5F,EAAKA,KAAK2F,WAE1B0N,EAAmF,WAAtElc,KAAKgJ,QAAQ0B,UAAU,IACpCyR,EAAKD,EACLW,GAAAA,IACID,EAAAA,GAAAA,IAAS,6BAA8B,gBACvCA,EAAAA,GAAAA,IAAS,yBAA0B,gBACvCC,GAAAA,IACID,EAAAA,GAAAA,IAAS,4BAA6B,mBACtCA,EAAAA,GAAAA,IAAS,wBAAyB,eACxC/T,EAAKA,KAAK4F,UAAY5F,EAAKA,KAAK2F,QAChCyN,GAAW,IAAIO,GAAAA,IAAiBC,YAAWG,EAAAA,GAAAA,IAAS,qBAAsB,+CAAgDT,IAErHtT,EAAKA,KAAK4F,SACfwN,GAAW,IAAIO,GAAAA,IAAiBC,YAAWG,EAAAA,GAAAA,IAAS,WAAY,yBAA0BT,IAErFtT,EAAKA,KAAK2F,UACfyN,EAAW,IAAIO,GAAAA,GAAe,IAADtU,QAAK0U,EAAAA,GAAAA,IAAS,WAAY,mBAAkB,MAAA1U,QFyB/DsG,EEzBkF3F,EAAKA,KAAK2F,QF0B/G0K,EAAAA,EAAI3J,KAAK,CACZuN,OAAQC,EAAAA,GAAQvO,QAChBwO,KAAMxO,EAAQ4C,GACd6L,MAAOzO,EAAQvH,WAAaiW,mBAAmBC,KAAKC,UAAU5O,EAAQvH,cACvEmB,YE9B2H,MAAAF,OAAKW,EAAKA,KAAK2F,QAAQ6O,MAAK,QAAAnV,OAAOiU,EAAE,KAAK,CAAEmB,WAAW,KAErKrB,GACAL,EAASc,QAAQ,IAAIC,GAAAA,GAAc3c,KAAMG,EAAON,MAAO,CAACoc,IAAW,EAAO,OAGlFlb,EAAA3B,KAAA,GACuBY,KAAKud,gCAAgC1U,EAAMpI,GAAM,QAAlE2b,EAAQrb,EAAAc,KAAAd,EAAAC,KAAG,GAEJqb,GAAK,EAAMC,EAAa5C,GAAc0C,GAAS,QAA+B,OAA/Brb,EAAA3B,KAAA,GAAqCkd,EAAWld,OAAM,QAAwB,GAA9Dmd,EAAYxb,EAAAc,KAA4BL,EAAK+a,EAAa/c,KAAS,CAAAuB,EAAA3B,KAAA,SACvI0c,EAAKS,EAAard,MAClBmd,GAAK,EACL,IACU3T,EAAOoT,EACbF,EAASc,QAAQhU,EACrB,CAAC,QAEG2T,GAAK,CACT,CAAC,QAAAtb,EAAA3B,KAAA,iBAAA2B,EAAA3B,KAAA,iBAAA2B,EAAAC,KAAA,GAAAD,EAAAiB,GAAAjB,EAAA,UAGO8a,EAAM,CAAE2B,MAAKzc,EAAAiB,IAAU,WAAAjB,EAAAC,KAAA,GAAAD,EAAAC,KAAA,GAG1Bqb,GAAO7a,KAAOC,EAAK6a,EAAWmB,QAAO,CAAA1c,EAAA3B,KAAA,SAAE,OAAF2B,EAAA3B,KAAA,GAAQqC,EAAGuY,KAAKsC,GAAW,WAAAvb,EAAAC,KAAA,IAE3D6a,EAAK,CAAF9a,EAAA3B,KAAA,eAAQyc,EAAI2B,MAAK,eAAAzc,EAAA2L,OAAA,mBAAA3L,EAAA2L,OAAA,6BAAA3L,EAAAQ,OFD3C,IAAuBiN,CECoB,GAAA5N,EAAA,qCAExC,IAjFS+a,EAAAA,GAAoB+B,KAkFnC,GAAC,CAAApd,IAAA,kCAAApB,MACD,SAAgC2J,EAAMpI,GAClC,OAAOhC,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAe,IAAA,IAAAic,EAAAxV,EAAAtI,EAAAqT,EAAA7Q,EAAAoN,EAAA,YAAA/O,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAxC,MAAA,UAC9ByJ,EAAKA,KAAK4F,SAAU,CAAF7M,EAAAxC,KAAA,eAAAwC,EAAAV,OAAA,SACZya,EAAAA,GAAoB+B,OAAK,OAGxB,OAHwBC,EAEb9U,EAAKA,KAAK4F,SAAzBtG,EAAGwV,EAAHxV,IAAKtI,EAAK8d,EAAL9d,MAAK+B,EAAAxC,KAAA,EACAY,KAAKqb,iBAAiB/B,qBAAqBnR,GAAI,OAErB,GAFtC+K,EAAGtR,EAAAC,KAAAD,EAAAZ,KAAG,EAEFqB,EAAQ6Q,EAAIqG,OAAOC,gBACpBxZ,KAAKiJ,yBAAyB2U,cAAc/S,IAAIxI,GAAQ,CAAFT,EAAAxC,KAAA,gBAAAwC,EAAAV,OAAA,SAChDya,EAAAA,GAAoB+B,OAAK,eAAA9b,EAAAV,OAAA,UAE7B2c,EAAAA,GAAAA,IAAS7d,KAAKiJ,yBAAyB2U,cAAevb,EAAO,IAAIgC,EAAAA,EAASxE,EAAM8S,gBAAiB9S,EAAM+F,aAAcnF,GACvHqd,QAAO,SAAApV,GAAI,QAAKqV,EAAAA,GAAAA,IAAsBrV,EAAKsV,MAAMC,SAAS,IAC1DlZ,KAAI,SAAA2D,GAAI,OAAI,IAAIiU,GAAAA,GAAclN,EAAM5G,EAAKH,KAAKvI,OAAON,MAAO6I,EAAKsV,MAAMC,UAAU,EAAO,EAAIvV,EAAKwV,QAAQ,KAAC,QAGjG,OAHiGtc,EAAAZ,KAAA,GAG/GkS,EAAI3O,UAAU3C,EAAA8K,OAAA,6BAAA9K,EAAAL,OAAA,GAAAG,EAAA,sBAG1B,KAACqZ,CAAA,CAjIc,CAAiCoD,GAAAA,IAmIpDpD,GAAkBpU,GAAW,CACzBc,GAAQ,EAAG2W,GAAAA,GACX3W,GAAQ,EAAG4W,GAAAA,IACX5W,GAAQ,EAAG6W,GAAAA,IACX7W,GAAQ,EAAG4R,EAAAA,GACX5R,GAAQ,EAAG2Q,EAAAA,IACZ2C,KCrLHwD,EAAAA,EAAAA,IAA2BxV,EAAqBmP,GAAInP,EAAsB,GAC1EyV,EAAAA,GAAyBC,SAAS1D,G,+PCL9Btc,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAcO,SAASuR,EAAoBsG,EAAUe,EAAQ7X,EAAQ0I,GAC1D,IAAIrH,EACJ,OAAO/C,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAqE,IAAA,IAAA0Z,EAAAC,EAAAC,EAAAC,EAAAC,EAAArQ,EAAAsQ,EAAAjB,EAAAnb,EAAAF,EAAAuc,EAAAxQ,EAAAyQ,EAAApe,EAAA,YAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAA8D,GAAA,cAAAA,EAAA5D,KAAA4D,EAAAxF,MAAA,OAMnC,OALMsf,EAAkBzH,EAASjP,IAAIqR,EAAAA,GAC/BsF,EAAqB1H,EAASjP,IAAIkX,EAAAA,GAClCN,EAAiB3H,EAASjP,IAAIsQ,EAAAA,GAC9BuG,EAAe5H,EAASjP,IAAIwQ,EAAAA,IAC5BsG,EAAsB7H,EAASjP,IAAIuQ,EAAAA,IAAqB3T,EAAAxF,KAAA,EACxDyJ,EAAKH,KAAK3J,QAAQ+Q,EAAAA,EAAkBC,MAAK,UAC1ClH,EAAKA,KAAK4F,SAAU,CAAF7J,EAAAxF,KAAA,eAAAwF,EAAA1D,OAAA,iBAGjBuN,EAAW5F,EAAKA,KAAK4F,SACrBsQ,EAAc,GAGdjB,EAAS,IAAItb,IAAI2c,EAAAA,GAAaC,aAAaC,EAAAA,GAAOC,eACnDva,KAAI,SAAA2D,GAAI,OAAI6W,EAAAA,EAAAA,IAAY7W,GAAQA,EAAK8F,QAAQ4C,GAAK,EAAE,KAAEzO,GAAAC,EAAAA,EAAAA,GACpC4c,EAAAA,GAAuBpa,OAAKR,EAAA5D,KAAA,GAAAge,GAAAte,EAAAA,EAAAA,KAAAC,MAAA,SAAAqe,IAAA,IAAAS,EAAA,OAAA/e,EAAAA,EAAAA,KAAAI,MAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAA7F,MAAA,OAAxCqgB,EAAQhd,EAAAvD,MACX4e,EAAOjT,IAAI4U,EAAS3Y,KAAKsK,KACzB2N,EAAYhb,KAAK,IAAI2b,EAAAA,GAAOD,EAAS3Y,KAAKsK,GAAIuO,EAAAA,GAAe5d,MAAM0d,EAAS3Y,KAAM,CAAE8Y,kBAAkB,SAASte,GAAW,GAAM,kBAAM7C,EAAUoC,OAAM,OAAQ,GAAMH,EAAAA,EAAAA,KAAAC,MAAE,SAAAe,IAAA,IAAAwR,EAAA,OAAAxS,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAxC,MAAA,OACtJ,OADsJwC,EAAAxC,KAAA,EAChJsf,EAAgBpF,qBAAqB7K,EAAStG,KAAI,OAEhE,OAFE+K,EAAGtR,EAAAC,KAAAD,EAAAZ,KAAG,EAAHY,EAAAxC,KAAG,EAEFyf,EAAa9P,eAAe0Q,EAASI,IAAIC,KAAKL,GAAWzH,EAAQ,IAAI+H,EAAAA,GAAuB7M,EAAIqG,OAAOC,gBAAiB5V,EAAAA,EAAMF,iBAAiB+K,EAAS5O,SAAQ,OAGxJ,OAHwJ+B,EAAAZ,KAAA,EAGtKkS,EAAI3O,UAAU3C,EAAA8K,OAAA,2BAAA9K,EAAAL,OAAA,GAAAG,EAAA,oBAEpB,KACL,wBAAAuD,EAAA1D,OAAA,GAAAyd,EAAA,IAAArc,EAAAE,IAAA,YAAAJ,EAAAE,EAAAG,KAAAtD,KAAA,CAAAoF,EAAAxF,KAAA,gBAAAwF,EAAAob,cAAAhB,IAAA,iBAAApa,EAAAxF,KAAA,iBAAAwF,EAAAxF,KAAA,iBAAAwF,EAAA5D,KAAA,GAAA4D,EAAA6G,GAAA7G,EAAA,UAAAjC,EAAAtD,EAAAuF,EAAA6G,IAAA,eAAA7G,EAAA5D,KAAA,GAAA2B,EAAAsB,IAAAW,EAAA8H,OAAA,YAED7D,EAAKA,KAAK2F,UACFA,EAAY3F,EAAKA,KAAjB2F,QACRuQ,EAAYhb,KAAK,IAAIkc,EAAAA,IACrBlB,EAAYhb,KAAK,IAAI2b,EAAAA,GAAOlR,EAAQ4C,GAAI5C,EAAQ6O,WAAO/b,GAAW,GAAM,kBAAM7C,EAAUoC,OAAM,OAAQ,GAAMH,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAAa,EAAA,OAAAf,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3B,MAAA,OAGtG,OAHsG2B,EAAAC,KAAA,EAAAD,EAAA3B,KAAA,EAGhGwf,EAAezN,eAAczR,MAA7Bkf,EAAc,CAAgBpQ,EAAQ4C,IAAElJ,QAAAmJ,EAAAA,EAAAA,GAAmC,QAA5B5P,EAAK+M,EAAQvH,iBAA8B,IAAPxF,EAAgBA,EAAK,MAAI,OAAAV,EAAA3B,KAAA,eAAA2B,EAAAC,KAAA,EAAAD,EAAAiB,GAAAjB,EAAA,SAGlH+d,EAAoBxN,OAAO,CACvBC,SAAUC,EAAAA,GAASC,MACnBC,OAAQ7I,EAAKH,KAAKtI,SAASuR,YAC3BC,QAAO7Q,EAAAiB,KACR,wBAAAjB,EAAAQ,OAAA,GAAAX,EAAA,iBAET,MAGAqe,EAAejH,EAAOtN,UAAU,KACtCiU,EAAmBuB,gBAAgB,CAC/BC,iBAAkBlB,GAA8C,QAA9Bzd,EAAKwW,EAAOoI,oBAAiC,IAAP5e,EAAgBA,OAAiBF,EACzG+e,UAAW,WACP,IAAMC,EAAMC,EAAAA,uBAA2BpgB,GACvC,MAAO,CAAEqgB,EAAGF,EAAIG,KAAMC,EAAGJ,EAAIK,IAAML,EAAIM,OAAS,EACpD,EACAC,WAAY,kBAAM9B,CAAW,EAC7B+B,OAAQ,WACJ9I,EAAO+I,OACX,EACAC,qBAAqB,IACtB,yBAAApc,EAAArD,OAAA,GAAAyD,EAAA,yBAEX,CACO,SAASgK,EAA2BiI,EAAU/J,EAAO8K,EAAQvJ,GAChE,OAAOhQ,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAqQ,IAAA,IAAA0N,EAAAxL,EAAAvO,EAAA,YAAAjE,EAAAA,EAAAA,KAAAI,MAAA,SAAAkY,GAAA,cAAAA,EAAAhY,KAAAgY,EAAA5Z,MAAA,OAEvB,OADNsf,EAAkBzH,EAASjP,IAAIqR,EAAAA,GAAkBL,EAAA5Z,KAAA,EACrCsf,EAAgBpF,qBAAqB7K,EAAStG,KAAI,OACpE,OADM+K,EAAG8F,EAAAnX,KAAAmX,EAAA5Z,KAAG,EACN4Y,EAAOiJ,qBAAoB,SAAChK,GAAQ,OAAKxY,EAAUkG,OAAM,OAAQ,GAAMjE,EAAAA,EAAAA,KAAAC,MAAE,SAAA8D,IAAA,IAAAyc,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAA5gB,EAAAA,EAAAA,KAAAI,MAAA,SAAAoQ,GAAA,cAAAA,EAAAlQ,KAAAkQ,EAAA9R,MAAA,OAKyF,OAJ9J8hB,EAAahU,EAAMqU,sBACnBJ,EAAoBlK,EAASjP,IAAIwZ,EAAAA,IACjCJ,EAAWK,EAAAA,GAAYC,aAAaC,SAASR,GAC7CE,GAAWH,GAAclJ,EAAOtN,UAAU,MAAqD0W,EAC/FE,EAAS,IAAIM,EAAAA,GAAiB,CAAEV,WAAAA,EAAYW,WAAYR,EAASS,aAAa,GAAQ,CAAEzE,MAAO,CAAEne,MAAO,GAAI6iB,SAAU,IAAM3Q,GAAI,GAAI4Q,kBAAc1gB,IAAY4P,EAAAhQ,OAAA,SAC7JogB,EAAOzB,IAAI5I,EAAU,IAAI8I,EAAAA,GAAuB7M,EAAIqG,OAAOC,gBAAiB5V,EAAAA,EAAMF,iBAAiB+K,EAAS5O,QAAS+D,EAAAA,EAAMyM,KAAK5B,EAAS5O,SAAO,wBAAAqR,EAAA3P,OAAA,GAAAkD,EAAA,IACzJ,IAAC,OACHyO,EAAI3O,UAAU,wBAAAyU,EAAAzX,OAAA,GAAAyP,EAAA,IAEtB,C,yGCpGO,IAAMiR,EAAwB,qCACxBC,EAAuC,2CACvCC,EAAmC,sC,sVCoB/C,IACKC,EAAyB,WAC3B,SAAAA,EAAY9R,IAAMvQ,EAAAA,EAAAA,GAAA,KAAAqiB,GACdpiB,KAAKqiB,yBAA2B,GAChCriB,KAAKqiB,yBAAyBte,KAAK,GACnC,IAAK,IAAIwD,EAAI,EAAGA,EAAI+I,EAAKnL,OAAQoC,IACN,OAAnB+I,EAAKgS,OAAO/a,IACZvH,KAAKqiB,yBAAyBte,KAAKwD,EAAI,EAGnD,CAGC,OAHA3H,EAAAA,EAAAA,GAAAwiB,EAAA,EAAA9hB,IAAA,YAAApB,MACD,SAAUoE,GACN,OAAOtD,KAAKqiB,yBAAyB/e,EAASmC,WAAa,GAAKnC,EAAS6C,OAAS,CACtF,KAACic,CAAA,CAZ0B,GAczBG,EAAQ,GClCP,IAAMC,EAAS,WAClB,SAAAA,EAAY/c,EAAY6P,GAAwC,IAAjCmN,EAA2Bxb,UAAA9B,OAAA,QAAA7D,IAAA2F,UAAA,GAAAA,UAAA,GAAG,GAAClH,EAAAA,EAAAA,GAAA,KAAAyiB,GAC1DxiB,KAAKyF,WAAaA,EAClBzF,KAAKsV,MAAQA,EACbtV,KAAKyiB,4BAA8BA,CACvC,CAeC,OAfA7iB,EAAAA,EAAAA,GAAA4iB,EAAA,EAAAliB,IAAA,wBAAApB,MACD,SAAsBwjB,GAClB,GAA0B,IAAtB1iB,KAAKsV,MAAMnQ,OACX,MAAO,GAEX,IAAMwd,EAAW3iB,KAAKsV,MAAMtV,KAAKsV,MAAMnQ,OAAS,GAMhD,ODZD,SAAoBmL,EAAMX,GAC7B,IAAMiT,EAAc,IAAIR,EAA0B9R,GAC5CuS,EAAclT,EAAM5K,KAAI,SAAA1F,GAC1B,IAAMQ,EAAQ+D,EAAAA,EAAMyM,KAAKhR,EAAEQ,OAC3B,MAAQ,CACJijB,YAAaF,EAAYG,UAAUljB,EAAM6D,oBACzCsf,UAAWJ,EAAYG,UAAUljB,EAAMiE,kBACvCwM,KAAMjR,EAAEiR,KAEhB,IACAuS,EAAY3e,MAAK,SAACC,EAAGC,GAAC,OAAKA,EAAE0e,YAAc3e,EAAE2e,WAAW,IAAE,IAC5BrgB,EAD4BE,GAAAC,EAAAA,EAAAA,GACvCigB,GAAW,IAA9B,IAAAlgB,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAtD,MAAgC,KAArB0Q,EAAIzN,EAAAvD,MACXoR,EAAOA,EAAK2S,UAAU,EAAG/S,EAAK4S,aAAe5S,EAAKI,KAAOA,EAAK2S,UAAU/S,EAAK8S,UACjF,CAAC,OAAAhf,GAAArB,EAAAtD,EAAA2E,EAAA,SAAArB,EAAAsB,GAAA,CACD,OAAOqM,CACX,CCPqB4S,CADUR,EAASS,OAAO,EAAGR,EAASxc,OAAS,GACpBnG,KAAKsV,MAAMvQ,KAAI,SAAAqe,GAAC,MAAK,CACzDvjB,MAAO,CAAE8S,gBAAiB,EAAGC,cAAe,EAAGhN,YAAawd,EAAEjd,OAAQN,UAAWud,EAAEjd,QACnFmK,KAAM8S,EAAEC,MAAMC,KAAK,MACtB,KACWL,UAAUjjB,KAAKsV,MAAM,GAAGnP,OAAS,EACjD,GAAC,CAAA7F,IAAA,UAAApB,MACD,WACI,OAAOc,KAAKsV,MAAMiO,OAAM,SAAAH,GAAC,OAAuB,IAAnBA,EAAEC,MAAMle,MAAY,GACrD,KAACqd,CAAA,CApBiB,GAsBTgB,GAAa5jB,EAAAA,EAAAA,IACtB,SAAA4jB,EAAYrd,EAAQkd,EAIpBI,IAAS1jB,EAAAA,EAAAA,GAAA,KAAAyjB,GACLxjB,KAAKmG,OAASA,EACdnG,KAAKqjB,MAAQA,EACbrjB,KAAKyjB,QAAUA,CACnB,IAESC,EAAoB,WAC7B,SAAAA,EAAYje,EAAYke,EAAaxe,EAAQye,GAA2C,IAAjCnB,EAA2Bxb,UAAA9B,OAAA,QAAA7D,IAAA2F,UAAA,GAAAA,UAAA,GAAG,GAAClH,EAAAA,EAAAA,GAAA,KAAA2jB,GAClF1jB,KAAKyF,WAAaA,EAClBzF,KAAK2jB,YAAcA,EACnB3jB,KAAKmF,OAASA,EACdnF,KAAK4jB,SAAWA,EAChB5jB,KAAKyiB,4BAA8BA,EACnCziB,KAAKsV,MAAQ,CACT,IAAIkO,EAAcxjB,KAAK2jB,YAAc3jB,KAAKmF,OAAQnF,KAAK4jB,UAAU,GAEzE,CAGC,OAHAhkB,EAAAA,EAAAA,GAAA8jB,EAAA,EAAApjB,IAAA,wBAAApB,MACD,SAAsB2kB,GAClB,OAAO7jB,KAAK4jB,SAASN,KAAK,KAC9B,KAACI,CAAA,CAb4B,GAepBI,EAAwB,SAAAC,IAAAvJ,EAAAA,EAAAA,GAAAsJ,EAAAC,GAAA,IAAAtJ,GAAAC,EAAAA,EAAAA,GAAAoJ,GACjC,SAAAA,EAAY9L,GAAQ,IAAAnX,EAUZ,OAVYd,EAAAA,EAAAA,GAAA,KAAA+jB,IAChBjjB,EAAA4Z,EAAAT,KAAA,OACKhC,OAASA,EACdnX,EAAKmjB,eAAY1iB,EACjBT,EAAKojB,mBAAqB,IAAIC,EAAAA,GAC9BrjB,EAAKoJ,YAAcpJ,EAAKojB,mBAAmB/W,MAC3CrM,EAAKsjB,UAAUnM,EAAO3N,0BAAyB,SAAChL,GACxCA,EAAEiL,WAAW,WAAsDhJ,IAAnBT,EAAKmjB,WACrDnjB,EAAKojB,mBAAmBG,MAEhC,KAAIvjB,CACR,CAIC,OAJAjB,EAAAA,EAAAA,GAAAkkB,EAAA,EAAAxjB,IAAA,cAAApB,MACD,SAAYmlB,GACRrkB,KAAKgkB,WAAY,EACjBhkB,KAAKikB,mBAAmBG,MAC5B,KAACN,CAAA,CAhBgC,CAASQ,EAAAA,I,WC/CvC,SAASC,EAAyBliB,EAAOmiB,GAC5C,IAAKA,EACD,OAAOA,EAEX,IAAMC,EAAiBpiB,EAAMqiB,gBAAgBF,EAAiB3kB,OACxD8kB,EAAkBC,EAAAA,GAA2BH,EAAgBD,EAAiBK,YAC9E/B,EAAczgB,EAAMyiB,YAAYN,EAAiB3kB,MAAM6D,oBAAsBihB,EAC7Ere,EAAQjE,EAAM0iB,cAAcjC,GAC5BkC,EAA0BP,EAAetB,OAAOwB,GAChDM,EAAkBL,EAAAA,GAA2BI,EAAyBR,EAAiBK,YACvFre,EAAMnE,EAAM0iB,cAAcjY,KAAKC,IAAI+V,EAAazgB,EAAMyiB,YAAYN,EAAiB3kB,MAAMiE,kBAAoBmhB,IACnH,MAAO,CACHplB,MAAO+D,EAAAA,EAAMC,cAAcyC,EAAOE,GAClCqe,WAAYL,EAAiBK,WAAW1B,OAAOwB,EAAiBH,EAAiBK,WAAW1f,OAASwf,EAAkBM,GACvHC,YAAaV,EAAiBU,YAC9BC,WAAYX,EAAiBW,WAC7BC,oBAAqBZ,EAAiBY,oBAE9C,CAcO,SAASC,EAA4Bb,EAAkBc,EAAWC,EAAMC,GAAyC,IAAzBC,EAAmBxe,UAAA9B,OAAA,QAAA7D,IAAA2F,UAAA,GAAAA,UAAA,GAAG,EACjH,GAAIud,EAAiB3kB,MAAM8S,kBAAoB6R,EAAiB3kB,MAAM+S,cAAtE,CAIA,IAAM8S,EAAaJ,EAAUK,eAAenB,EAAiB3kB,MAAM8S,iBAC7DiT,EAA0BhB,EAAAA,GAA6Bc,GAAYvgB,OAEzE,GADqCqf,EAAiB3kB,MAAM+F,YAAc,GAAKggB,EAC7C,CAQ9B,IAAMC,EAAmCjB,EAAAA,GAA6BJ,EAAiBK,YAAY1f,OAC7F2gB,EAAsBJ,EAAWzC,UAAUuB,EAAiB3kB,MAAM+F,YAAc,EAAGggB,GACnFG,EAAqCniB,EAAAA,EAAMC,cAAc2gB,EAAiB3kB,MAAM6D,mBAAmBnD,MAAM,EAAGulB,EAAoB3gB,QAASqf,EAAiB3kB,MAAMiE,kBAChKkiB,EAAqCxB,EAAiBK,WAAWoB,WAAWH,GAE5EtB,EAAiBK,WAAW5B,UAAU6C,EAAoB3gB,QAE1Dqf,EAAiBK,WAAW5B,UAAU4C,GAC5CrB,EAAmB,CACf3kB,MAAOkmB,EACPlB,WAAYmB,EACZxX,QAASgW,EAAiBhW,QAC1B0W,iBAAa5jB,EACb6jB,WAAYX,EAAiBW,WAC7BC,oBAAqBZ,EAAiBY,oBAE9C,CAEA,IAAMc,EAAoBZ,EAAUZ,gBAAgBF,EAAiB3kB,OAC/DsmB,EA2CV,SAAqBC,EAAeC,GAChC,IAAqB,OAAhBC,QAAwC,IAAhBA,OAAyB,EAASA,EAAYF,iBAAmBA,IAAkC,OAAhBE,QAAwC,IAAhBA,OAAyB,EAASA,EAAYD,YAAcA,EAChM,OAAuB,OAAhBC,QAAwC,IAAhBA,OAAyB,EAASA,EAAYH,QAG7E,IAAIA,EAAUI,EAAUH,EAAeC,GAAU,GACjD,GAAIF,EAAS,CACT,IAAMK,EAAeC,EAAkBN,GACvC,GAAIK,EAAe,EAAG,CAElB,IAAME,EAAaH,EAAUH,EAAeC,GAAU,GAClDK,GAAcD,EAAkBC,GAAcF,IAE9CL,EAAUO,EAElB,CACJ,CAMA,OALAJ,EAAc,CACVF,cAAAA,EACAC,SAAAA,EACAF,QAAAA,GAEGA,CAEf,CAnEoBQ,CAAYT,EAAmB1B,EAAiBK,YAChE,GAAKsB,EAAL,CAIA,IAAM1gB,EAAa+e,EAAiB3kB,MAAM8S,gBACpC2C,EAAQ,IAAIhG,MAClB,GAAa,WAATiW,EAAmB,CACnB,IAAMqB,EAAkBT,EAAQrI,QAAO,SAAA9W,GAAC,OAAyB,IAArBA,EAAE6f,cAAoB,IAClE,GAAID,EAAgBzhB,OAAS,GAAgC,IAA3ByhB,EAAgBzhB,QAAgByhB,EAAgB,GAAGE,gBAAkBZ,EAAkB/gB,OAErH,MAER,CACA,IACuB1C,EADjBskB,EAA+BvC,EAAiBK,WAAW1f,OAASsgB,EAAoB9iB,GAAAC,EAAAA,EAAAA,GAC9EujB,GAAO,IAAvB,IAAAxjB,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAtD,MAAyB,KAAdwH,EAACvE,EAAAvD,MACF8nB,EAAexC,EAAiB3kB,MAAM+F,YAAcoB,EAAE8f,cAAgB9f,EAAE6f,eAC9E,GAAa,iBAATtB,GAA2BC,GAAkBA,EAAe/f,aAAe+e,EAAiB3kB,MAAM8S,iBAAmBqU,EAAexB,EAAerf,OAEnJ,OAEJ,GAAIa,EAAE6f,eAAiB,EACnB,OAEJ,GAAyB,IAArB7f,EAAEigB,eAAN,CAGA,IAAMC,EAAclgB,EAAEmgB,cAAgBngB,EAAEigB,eAClCG,EAAoBta,KAAKC,IAAI/F,EAAEmgB,cAAera,KAAK9C,IAAIkd,EAAaH,IACpEM,EAAiB7C,EAAiBK,WAAW5B,UAAUjc,EAAEmgB,cAAeC,GACxEE,EAAa9C,EAAiBK,WAAW5B,UAAUmE,EAAmBta,KAAKC,IAAI/F,EAAEmgB,cAAeD,IACtG,GAAIG,EAAeliB,OAAS,EAAG,CAC3B,IAAMke,EAAQuB,EAAAA,GAAmByC,GACjC/R,EAAMvR,KAAK,IAAIyf,EAAcwD,EAAc3D,GAAO,GACtD,CACA,GAAIiE,EAAWniB,OAAS,EAAG,CACvB,IAAMke,EAAQuB,EAAAA,GAAmB0C,GACjChS,EAAMvR,KAAK,IAAIyf,EAAcwD,EAAc3D,GAAO,GACtD,CAZA,CAaJ,CAAC,OAAArf,GAAArB,EAAAtD,EAAA2E,EAAA,SAAArB,EAAAsB,GAAA,CACD,OAAO,IAAIue,EAAU/c,EAAY6P,EAAO,EApCxC,CAnCA,CAwEJ,CACA,IAAIgR,OAAchlB,EA0BlB,SAASmlB,EAAkBN,GACvB,IACuBhjB,EADnBokB,EAAM,EAAEnkB,GAAAR,EAAAA,EAAAA,GACIujB,GAAO,IAAvB,IAAA/iB,EAAAP,MAAAM,EAAAC,EAAAN,KAAAtD,MAAyB,CACrB+nB,GADQpkB,EAAAjE,MACC2nB,cACb,CAAC,OAAA7iB,GAAAZ,EAAA/D,EAAA2E,EAAA,SAAAZ,EAAAa,GAAA,CACD,OAAOsjB,CACX,CASA,SAAShB,EAAUH,EAAeC,EAAUmB,GACxC,KAAIpB,EAAcjhB,OAAS,KAAQkhB,EAASlhB,OAAS,KAArD,CAcA,IAAMsiB,EAAc3a,KAAKC,IAAI2a,EAAetB,GAAgBsB,EAAerB,IAgCrEsB,EAAYC,EAAYxB,GACxByB,EAAYD,EAAYvB,GAC9B,OAAO,IAAIyB,EAAAA,GAAQ,CAAEF,YAAa,kBAAMD,CAAS,GAAI,CAAEC,YAAa,kBAAMC,CAAS,IAAIE,aAAY,GAAO5B,OA7C1G,CACA,SAASuB,EAAeM,GAEpB,IADA,IAAIP,EAAc,EACTlgB,EAAI,EAAG0gB,EAAMD,EAAI7iB,OAAQoC,EAAI0gB,EAAK1gB,IAAK,CAC5C,IAAM2gB,EAAWF,EAAIG,WAAW5gB,GAC5B2gB,EAAWT,IACXA,EAAcS,EAEtB,CACA,OAAOT,CACX,CAEA,SAASW,EAAkBhX,GACvB,GAAIA,EAAK,EACL,MAAM,IAAIK,MAAM,cAEpB,OAAOgW,EAAcrW,EAAK,CAC9B,CACA,SAASwW,EAAYlW,GAIjB,IAHA,IAAI2W,EAAQ,EACRC,EAAQ,EACNC,EAAa,IAAIC,WAAW9W,EAAOvM,QAChCoC,EAAI,EAAG0gB,EAAMvW,EAAOvM,OAAQoC,EAAI0gB,EAAK1gB,IAE1C,GAAIigB,GAAsC,MAAd9V,EAAOnK,GAAY,CAC3C,IAAM6J,EAAa,IAARkX,EAAcD,EACzBE,EAAWhhB,GAAK6gB,EAAkB,EAAIhX,GACtCiX,GACJ,MACK,GAAIb,GAAsC,MAAd9V,EAAOnK,GAAY,CAEhD,IAAM6J,EAAa,IAARkX,GADXD,EAAQvb,KAAKC,IAAIsb,EAAQ,EAAG,IAE5BE,EAAWhhB,GAAK6gB,EAAkB,EAAIhX,EAAK,GAC7B,IAAViX,GACAC,GAER,MAEIC,EAAWhhB,GAAKmK,EAAOyW,WAAW5gB,GAG1C,OAAOghB,CACX,CAIJ,C,yDC5MI5hB,EAA0C,SAAUC,EAAYC,EAAQvG,EAAKwG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU9B,OAAQ+B,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQvG,GAAOwG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQvG,EAAKwG,QACpH,IAAK,IAAIS,EAAIX,EAAWzB,OAAS,EAAGoC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQvG,EAAK4G,GAAKH,EAAEF,EAAQvG,KAAS4G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQvG,EAAK4G,GAAIA,CAChE,EACIO,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQvG,GAAOqH,EAAUd,EAAQvG,EAAKoH,EAAa,CACxE,EACIjJ,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EA0BIqpB,EAAsB,SAAA1E,IAAAvJ,EAAAA,EAAAA,GAAAiO,EAAA1E,GAAA,IAAAtJ,GAAAC,EAAAA,EAAAA,GAAA+N,GACtB,SAAAA,EAAYzQ,EAAQ0Q,EAAO9J,EAAgB+J,EAA8BrN,EAAyBsN,EAAiBxN,GAAsB,IAAAva,EAgDjI,OAhDiId,EAAAA,EAAAA,GAAA,KAAA0oB,IACrI5nB,EAAA4Z,EAAAT,KAAA,OACKhC,OAASA,EACdnX,EAAK6nB,MAAQA,EACb7nB,EAAK+d,eAAiBA,EACtB/d,EAAK8nB,6BAA+BA,EACpC9nB,EAAKya,wBAA0BA,EAC/Bza,EAAK+nB,gBAAkBA,EACvB/nB,EAAKojB,mBAAqB,IAAIC,EAAAA,GAC9BrjB,EAAKoJ,YAAcpJ,EAAKojB,mBAAmB/W,MAC3CrM,EAAKgoB,kBAAoBhoB,EAAKsjB,UAAU,IAAI2E,EAAAA,IAC5CjoB,EAAKkoB,QAAS,EACdloB,EAAKmoB,UAAW,EAChBnoB,EAAKooB,cAAgBpoB,EAAK+nB,gBAAgB9e,IAAIjJ,EAAKya,wBAAwB4N,0BAA2B,4BAA6B,CAAElf,IAAK,GAAI+C,IAAK,KACnJlM,EAAKsjB,UAAUvF,EAAeuK,qBAAoB,SAAC9pB,GAE9B,IAAImD,IAAI,CACrB4mB,EAAAA,GAAoBC,IAAIjY,GACxBgY,EAAAA,GAAoBE,WAAWlY,GAC/BgY,EAAAA,GAAoBG,YAAYnY,GAChC6Q,EAAAA,GACA,6BAESpX,IAAIxL,EAAEmqB,YAAcxR,EAAOyR,gBACpC5oB,EAAK6oB,iBAEb,KACA7oB,EAAKsjB,UAAUtjB,EAAKmX,OAAO2R,WAAU,SAACtqB,GAClCwB,EAAK6oB,iBACT,KACA7oB,EAAKsjB,UAAUtjB,EAAKmX,OAAO4R,2BAA0B,SAACvqB,IACjC,IAAbA,EAAEwqB,QACFhpB,EAAKipB,UAAYjpB,EAAKipB,QAAQC,UAC9BlpB,EAAKmpB,MAEb,KACAnpB,EAAKsjB,WAAUjZ,EAAAA,EAAAA,KAAa,WACxBrK,EAAKmoB,UAAW,CACpB,KACAnoB,EAAKsjB,UAAUtjB,EAAKmX,OAAOiS,uBAAsB,WAEzC7O,EAAqBuG,SAAS,oCAG9BuI,EAAAA,EAAmCC,iBAGvCtpB,EAAKmpB,MACT,KAAInpB,CACR,CA4EC,OA5EAjB,EAAAA,EAAAA,GAAA6oB,EAAA,EAAAnoB,IAAA,kBAAApB,MACD,WAAkB,IAAAyF,EAAA,KACV3E,KAAK8pB,UAAY9pB,KAAK8pB,QAAQC,SAC9B/pB,KAAKgqB,OAETvQ,YAAW,WACH9U,EAAKqkB,UAITrkB,EAAKylB,yBACT,GAAG,EACP,GAAC,CAAA9pB,IAAA,UAAA0H,IACD,WACI,OAAOhI,KAAK6oB,kBAAkB3pB,KAClC,GAAC,CAAAoB,IAAA,YAAA0H,IACD,WACI,IAAIxG,EACJ,OAA+B,QAAvBA,EAAKxB,KAAK8pB,eAA4B,IAAPtoB,OAAgB,EAASA,EAAG6oB,SACvE,GAAC,CAAA/pB,IAAA,uBAAA0H,IACD,WACI,OAAOhI,KAAK8pB,QAAU9pB,KAAK8pB,QAAQQ,qBAAuB,CAC9D,GAAC,CAAAhqB,IAAA,cAAApB,MACD,SAAYmlB,GACR,IAAI7iB,EACoB,QAAvBA,EAAKxB,KAAK8pB,eAA4B,IAAPtoB,GAAyBA,EAAG+oB,YAAYlG,EAC5E,GAAC,CAAA/jB,IAAA,YAAApB,MACD,SAAU6pB,GACN,IAAIvnB,EACJxB,KAAK+oB,OAASA,EACVA,IACwB,QAAvBvnB,EAAKxB,KAAK8pB,eAA4B,IAAPtoB,GAAyBA,EAAGgpB,0BAEpE,GAAC,CAAAlqB,IAAA,0BAAApB,MACD,WAC2Bc,KAAKgY,OAAOtN,UAAU,IACzBC,UAGhB3K,KAAK8pB,SAAW9pB,KAAK8pB,QAAQC,SAGjC/pB,KAAKyqB,QAAQC,EAAAA,GAA4BC,WAC7C,GAAC,CAAArqB,IAAA,UAAApB,MACD,SAAQ0rB,GAAa,IAAA9c,EAAA,KACb9N,KAAK6oB,kBAAkB3pB,MACnB0rB,IAAgBF,EAAAA,GAA4BG,UACvC7qB,KAAK6oB,kBAAkB3pB,MAAM4rB,mCAI1C9qB,KAAK6oB,kBAAkB3pB,MAAQ,IAAI6rB,EAAyB/qB,KAAKgY,OAAQhY,KAAKgY,OAAOgT,eAAe,kBAAMld,EAAKib,MAAM,GAAE/oB,KAAK4e,eAAgB5e,KAAK0oB,MAAOkC,EAAa5qB,KAAK2oB,6BAA8B3oB,KAAKsb,wBAAwB4N,0BAA2BlpB,KAAKipB,eACrQjpB,KAAK6oB,kBAAkB3pB,MAAM+rB,cAAcjrB,KAAK6oB,kBAAkB3pB,MAAM+K,aAAY,WAChF6D,EAAKmW,mBAAmBG,MAC5B,KACJ,GAAC,CAAA9jB,IAAA,OAAApB,MACD,WACIc,KAAK6oB,kBAAkBre,QACvBxK,KAAKikB,mBAAmBG,MAC5B,GAAC,CAAA9jB,IAAA,0BAAApB,MACD,WACI,IAAIsC,EAEoB,QAAvBA,EAAKxB,KAAK8pB,eAA4B,IAAPtoB,GAAyBA,EAAG0pB,yBAChE,GAAC,CAAA5qB,IAAA,mCAAApB,MACD,WACI,IAAIsC,EACoB,QAAvBA,EAAKxB,KAAK8pB,eAA4B,IAAPtoB,GAAyBA,EAAG2pB,iCAChE,GAAC,CAAA7qB,IAAA,WAAApB,MACD,WACI,IAAIsC,EACoB,QAAvBA,EAAKxB,KAAK8pB,eAA4B,IAAPtoB,GAAyBA,EAAG4pB,0BAChE,GAAC,CAAA9qB,IAAA,eAAApB,MACD,WACI,IAAIsC,EACoB,QAAvBA,EAAKxB,KAAK8pB,eAA4B,IAAPtoB,GAAyBA,EAAG6pB,8BAChE,KAAC5C,CAAA,CA9HqB,CAAwCnE,EAAAA,IAgIlEmE,EAAyB9hB,EAAW,CAChCc,EAAQ,EAAG6Q,EAAAA,GACX7Q,EAAQ,EAAG6jB,EAAAA,IACX7jB,EAAQ,EAAG2Q,EAAAA,GACX3Q,EAAQ,EAAG4Q,EAAAA,GACX5Q,EAAQ,EAAG6W,EAAAA,KACZmK,GAEI,IAAMsC,EAAwB,SAAAQ,IAAA/Q,EAAAA,EAAAA,GAAAuQ,EAAAQ,GAAA,IAAAtQ,GAAAP,EAAAA,EAAAA,GAAAqQ,GACjC,SAAAA,EAAY/S,EAAQwT,EAAiBC,EAAc7M,EAAgB8J,EAAOgD,EAAoB/C,EAA8BnkB,EAAUmnB,GAAU,IAAAlc,GAAA1P,EAAAA,EAAAA,GAAA,KAAAgrB,IAC5Itb,EAAAwL,EAAAjB,KAAA,KAAMhC,IACDwT,gBAAkBA,EACvB/b,EAAKgc,aAAeA,EACpBhc,EAAKmP,eAAiBA,EACtBnP,EAAKiZ,MAAQA,EACbjZ,EAAKic,mBAAqBA,EAC1Bjc,EAAKkZ,6BAA+BA,EACpClZ,EAAKjL,SAAWA,EAChBiL,EAAKkc,SAAWA,EAChBlc,EAAK6a,qBAAuB,EAC5B7a,EAAKmc,gBAAkBnc,EAAK0U,UAAU,IAAI2E,EAAAA,IAC1CrZ,EAAKoc,WAAapc,EAAK0U,UAAU,IAAI3Y,EAAAA,IAAiB,WAClD,IAAMof,EAAcnb,EAAKic,mBAGzB,OADAjc,EAAKic,mBAAqBhB,EAAAA,GAA4BC,UAC/Clb,EAAKpD,OAAOue,EACvB,GAAG,KACHnb,EAAKqc,oBAAsB,GAG3Brc,EAAKsc,mCAAgCzqB,EACrC,IAAI0qB,OAAqB1qB,EAmCM,OAlC/BmO,EAAK0U,UAAU1U,EAAKxF,aAAY,WAC5B,IAAIzI,EACEyqB,EAAoBxc,EAAKwc,kBAC/B,GAAIA,GAAqBA,EAAkBC,yBAA2BF,EAAoB,CACtFA,EAAqBC,EAAkBC,uBACvC,IAAM9rB,EAAW6rB,EAAkBE,eACG,QAArC3qB,EAAKpB,EAASgsB,yBAAsC,IAAP5qB,GAAyBA,EAAGwY,KAAK5Z,EAAU6rB,EAAkBI,wBAAyBL,EACxI,CACJ,KACAvc,EAAK0U,WAAUjZ,EAAAA,EAAAA,KAAa,WACxBuE,EAAKiZ,MAAMle,OACf,KACAiF,EAAK0U,UAAU1U,EAAKuI,OAAO4R,2BAA0B,SAACvqB,GAClD,IAAImC,EACa,IAAbnC,EAAEwqB,SAIsB,QAA3BroB,EAAKiO,EAAKiZ,MAAMxpB,aAA0B,IAAPsC,GAAyBA,EAAG8qB,eAC5D7c,EAAKiZ,MAAMxpB,QACXuQ,EAAK8c,kCACL9c,EAAKwU,mBAAmBG,QAEhC,KACA3U,EAAK0U,UAAU1U,EAAKuI,OAAOnL,yBAAwB,SAACxN,GAChD,IAAImC,EAEwB,QAA3BA,EAAKiO,EAAKiZ,MAAMxpB,aAA0B,IAAPsC,GAAyBA,EAAG8qB,eAChE7c,EAAK8c,kCACL9c,EAAK+a,yBACT,KACA/a,EAAK0U,UAAU1U,EAAKjL,SAASyF,aAAY,WACrCwF,EAAKoc,WAAWrf,SAASiD,EAAKkc,SAAS3jB,IAAIyH,EAAKuI,OAAOpN,YAC3D,KACA6E,EAAK+a,0BAA0B/a,CACnC,CAoSC,OApSA7P,EAAAA,EAAAA,GAAAmrB,EAAA,EAAAzqB,IAAA,kCAAApB,MACD,WACI,GAAKc,KAAK0oB,MAAMxpB,MAAhB,CAIA,IAAMmD,EAAQrC,KAAKgY,OAAOpN,WACpB4a,EAAiBnjB,EAAMkB,iBAAiBvD,KAAKgY,OAAOgT,eAC1DhrB,KAAK8rB,oBAAsB9rB,KAAK0oB,MAAMxpB,MAAMstB,YAAY1O,QAAO,SAAA9W,GAC3D,IAAMof,EAAgB/jB,EAAMqiB,gBAAgB1d,EAAEylB,mBAAmBC,cAC3DvH,EAAane,EAAEwd,iBAAiBW,WAAWuH,cAC3CC,EAAStqB,EAAMuqB,oBAAoB5lB,EAAEylB,kBAAkB9Z,iBACvDka,EAAiB/f,KAAKC,IAAI,EAAGyY,EAAerf,OAASa,EAAEylB,kBAAkB7mB,aAC3EknB,EAAmB3H,EAAWlC,UAAU,EAAG4J,GAC3CE,EAAkB5H,EAAWlC,UAAU4J,GACvCG,EAAsB5G,EAAcnD,UAAU,EAAG4J,GACjDI,EAAqB7G,EAAcnD,UAAU4J,GAYjD,OAXI7lB,EAAEylB,kBAAkB7mB,aAAe+mB,IAGA,KADnCK,EAAsBA,EAAoBE,aAClB/nB,SACpB8nB,EAAqBA,EAAmBC,aAGZ,KADhCJ,EAAmBA,EAAiBI,aACf/nB,SACjB4nB,EAAkBA,EAAgBG,cAGnCJ,EAAiB7G,WAAW+G,KAC5BG,EAAAA,EAAAA,IAAiBF,EAAoBF,EAChD,GAzBA,MAFI/sB,KAAK8rB,oBAAsB,EA4BnC,GAAC,CAAAxrB,IAAA,yBAAA0H,IACD,WACI,OAAOhI,KAAKotB,kCAChB,GAAC,CAAA9sB,IAAA,mCAAApB,MACD,WAAmC,IAAAsR,EAAA,KAC/B,IAAKxQ,KAAK+rB,gCAAkC/rB,KAAK0oB,MAAMxpB,MACnD,OAAO,EAEX,GAA4C,IAAxCc,KAAK0oB,MAAMxpB,MAAMstB,YAAYrnB,OAE7B,OAAO,EAEX,IAAMiB,EAAMpG,KAAK8rB,oBAAoBuB,WAAU,SAAAjT,GAAC,OAAIA,EAAEkT,aAAe9c,EAAKub,6BAA6B,IACvG,OAAa,IAAT3lB,GAEApG,KAAK+rB,mCAAgCzqB,EAC9B,GAEJ8E,CACX,GAAC,CAAA9F,IAAA,0BAAA0H,IACD,WACI,GAAKhI,KAAK0oB,MAAMxpB,MAGhB,OAAOc,KAAK8rB,oBAAoB9rB,KAAKotB,mCACzC,GAAC,CAAA9sB,IAAA,2BAAApB,MACD,WACI,OAAOT,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAA4rB,EAAAe,EAAA,OAAA7sB,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3B,MAAA,OACnC,OADmC2B,EAAA3B,KAAA,EAC7BY,KAAK8qB,kCAAiC,QACtC0B,EAAcxsB,KAAK8rB,qBAAuB,IAChC3mB,OAAS,GACfooB,GAAUvtB,KAAKotB,mCAAqC,GAAKZ,EAAYrnB,OAC3EnF,KAAK+rB,8BAAgCS,EAAYe,GAAQD,YAGzDttB,KAAK+rB,mCAAgCzqB,EAEzCtB,KAAKikB,mBAAmBG,OAAO,wBAAArjB,EAAAQ,OAAA,GAAAX,EAAA,SAEvC,GAAC,CAAAN,IAAA,+BAAApB,MACD,WACI,OAAOT,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAe,IAAA,IAAA8qB,EAAAe,EAAA,OAAA7sB,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAxC,MAAA,OACnC,OADmCwC,EAAAxC,KAAA,EAC7BY,KAAK8qB,kCAAiC,QACtC0B,EAAcxsB,KAAK8rB,qBAAuB,IAChC3mB,OAAS,GACfooB,GAAUvtB,KAAKotB,mCAAqCZ,EAAYrnB,OAAS,GAAKqnB,EAAYrnB,OAChGnF,KAAK+rB,8BAAgCS,EAAYe,GAAQD,YAGzDttB,KAAK+rB,mCAAgCzqB,EAEzCtB,KAAKikB,mBAAmBG,OAAO,wBAAAxiB,EAAAL,OAAA,GAAAG,EAAA,SAEvC,GAAC,CAAApB,IAAA,6BAAA0H,IACD,WACI,IAAIxG,EACJ,OAAoC,QAA3BA,EAAKxB,KAAK0oB,MAAMxpB,aAA0B,IAAPsC,OAAgB,EAASA,EAAGopB,eAAiBF,EAAAA,GAA4BG,QACzH,GAAC,CAAAvqB,IAAA,kCAAApB,MACD,WACI,IAAIsC,EACJ,OAAO/C,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAqE,IAAA,OAAAtE,EAAAA,EAAAA,KAAAI,MAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAA7F,MAAA,WAC/BY,KAAK4rB,gBAAgB1sB,MAAO,CAAF+F,EAAA7F,KAAA,YAEtBY,KAAK4rB,gBAAgB1sB,MAAM0rB,cAAgBF,EAAAA,GAA4BG,SAAQ,CAAA5lB,EAAA7F,KAAA,QAC/E,OAD+E6F,EAAA7F,KAAA,EACzEY,KAAK4rB,gBAAgB1sB,MAAMsuB,QAAO,OAAAvoB,EAAA7F,KAAA,eAGxC,OAHwC6F,EAAA7F,KAAA,EAGlCY,KAAKqM,OAAOqe,EAAAA,GAA4BG,UAAS,OAAA5lB,EAAA7F,KAAA,qBAGzB,QAA3BoC,EAAKxB,KAAK0oB,MAAMxpB,aAA0B,IAAPsC,OAAgB,EAASA,EAAGopB,eAAiBF,EAAAA,GAA4BG,SAAQ,CAAA5lB,EAAA7F,KAAA,SAE3H,OAF2H6F,EAAA7F,KAAA,GAErHY,KAAKqM,OAAOqe,EAAAA,GAA4BG,UAAS,yBAAA5lB,EAAA1D,OAAA,GAAAyD,EAAA,SAGnE,GAAC,CAAA1E,IAAA,gCAAApB,MACD,WACI,OAAOc,KAAK8rB,oBAAoB3mB,QAAU,CAC9C,GACA,CAAA7E,IAAA,YAAA0H,IACA,WACI,IAAMikB,EAAoBjsB,KAAKisB,kBAC/B,GAAKA,EAAL,CAGA,IAAMzG,EAAiBxlB,KAAKgY,OAAOgT,cACnC,IAAIiB,EAAkBpsB,MAAMiE,iBAAiBH,SAAS6hB,GAAtD,CAGA,IAAMD,EAAOvlB,KAAKgY,OAAOyV,aAAazlB,IAAI,IAAqCud,KACzE8E,EAAYhF,EAA4B4G,EAAmBjsB,KAAKgY,OAAOpN,WAAY2a,EAAMC,GAC/F,GAAI6E,EAAW,CACX,GAAIA,EAAUvW,UACV,OAEJ,OAAOuW,CACX,CACA,OAAO,IAAI3G,EAAqBuI,EAAkBpsB,MAAM8S,gBAAiBsZ,EAAkBpsB,MAAM+F,YAAaqmB,EAAkBpsB,MAAMgG,UAAYomB,EAAkBpsB,MAAM+F,YAAaqmB,EAAkBpH,WAAW6I,MAAM,MAAO,EATjO,CAJA,CAcJ,GAAC,CAAAptB,IAAA,oBAAA0H,IACD,WACI,IAAM2lB,EAAa3tB,KAAK4tB,wBACxB,GAAKD,EAGL,OAAOA,EAAWE,wBACtB,GAAC,CAAAvtB,IAAA,UAAA0H,IACD,WACI,OAAOhI,KAAKgY,OAAOgT,cAAcvlB,aAAezF,KAAKwrB,gBAAgB/lB,UACzE,GAAC,CAAAnF,IAAA,0BAAApB,MACD,WAGIc,KAAK4rB,gBAAgBphB,QACrBxK,KAAK6rB,WAAWrf,SAASxM,KAAK2rB,SAAS3jB,IAAIhI,KAAKgY,OAAOpN,YAC3D,GAAC,CAAAtK,IAAA,SAAApB,MACD,SAAO0rB,GACH,OAAOnsB,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAqQ,IAAA,IAAA1N,EAAAwqB,EAAAN,EAAAO,EAAAhb,EAAA,YAAArS,EAAAA,EAAAA,KAAAI,MAAA,SAAAoQ,GAAA,cAAAA,EAAAlQ,KAAAkQ,EAAA9R,MAAA,UAC9BY,KAAKyrB,eAAgB,CAAFva,EAAA9R,KAAA,eAAA8R,EAAAhQ,OAAA,iBAyBxB,OAtBMoC,EAAWtD,KAAKgY,OAAOgT,cACvB8C,EAAY,IAAIjiB,KAChB2hB,GAAUQ,EAAAA,EAAAA,KAAwB,SAACvtB,GAAK,OAAKhC,EAAUsU,OAAM,OAAQ,GAAMrS,EAAAA,EAAAA,KAAAC,MAAE,SAAA8D,IAAA,IAAAlF,EAAA0uB,EAAA,OAAAvtB,EAAAA,EAAAA,KAAAI,MAAA,SAAA8D,GAAA,cAAAA,EAAA5D,KAAA4D,EAAAxF,MAAA,OAGlE,OAHkEwF,EAAA5D,KAAA,EAAA4D,EAAAxF,KAAA,EAG5D8uB,GAAyBluB,KAAKwE,SAAUlB,EAAUtD,KAAKgY,OAAOpN,WAAY,CAAEggB,YAAAA,EAAauD,4BAAwB7sB,GAAab,EAAOT,KAAK2oB,8BAA6B,OAAtLppB,EAAMqF,EAAA/C,KACAosB,EAAU,IAAIpiB,KACpB7L,KAAK2rB,SAAStf,OAAOrM,KAAKgY,OAAOpN,WAAYqjB,EAAQG,UAAYN,EAAUM,WAAWxpB,EAAAxF,KAAA,gBAGjE,OAHiEwF,EAAA5D,KAAA,EAAA4D,EAAA5C,GAAA4C,EAAA,UAGtF6H,EAAAA,EAAAA,IAAiB7H,EAAA5C,IAAI4C,EAAA1D,OAAA,sBAGrBT,EAAMU,wBAAyB,CAAFyD,EAAAxF,KAAA,gBAAAwF,EAAA1D,OAAA,kBAGjClB,KAAK0oB,MAAM2F,SAASruB,KAAKgY,OAAQzY,EAAQqrB,GACzC5qB,KAAKusB,kCACLvsB,KAAKikB,mBAAmBG,OAAO,yBAAAxf,EAAArD,OAAA,GAAAkD,EAAA,iBACjC,IACIspB,EAAY,IAAIO,GAAgBd,EAAS5C,GAC/C5qB,KAAK4rB,gBAAgB1sB,MAAQ6uB,EAAU7c,EAAA9R,KAAA,EACjCouB,EAAO,OACTxtB,KAAK4rB,gBAAgB1sB,QAAU6uB,GAC/B/tB,KAAK4rB,gBAAgBphB,QACxB,yBAAA0G,EAAA3P,OAAA,GAAAyP,EAAA,SAET,GAAC,CAAA1Q,IAAA,gBAAApB,MACD,SAAcqvB,GACVvuB,KAAKmkB,UAAUoK,EACnB,GAAC,CAAAjuB,IAAA,kCAAApB,MACD,WACI,IAAMmrB,EAAYrqB,KAAKqqB,UACvB,GAAKA,EAAL,CAGA,IAAMsD,EAAa3tB,KAAKisB,kBACxB,GAAK0B,EAGL,GAAIA,EAAWzI,aAAeyI,EAAWxI,aAAewI,EAAW9I,WAE/D7kB,KAAKwuB,OAAOb,QAGhB,GAA+B,IAA3BtD,EAAU/U,MAAMnQ,OAApB,CAGA,IAAMspB,EAAYpE,EAAU/U,MAAM,GAC5BhS,EAAW,IAAIe,EAAAA,EAASgmB,EAAU5kB,WAAYgpB,EAAUtoB,QACxDX,EAAOipB,EAAUpL,MAAM,GACvBqL,EAAS1uB,KAAKgY,OAAOpN,WAAW+jB,wBAAwBtE,EAAU5kB,WAAY,GAC9EmpB,EAAS5uB,KAAK2oB,6BAA6BkG,yBAAyBH,GACpEI,EAAa,IAAIC,OAAOH,EAAOI,eAAetd,OAAQkd,EAAOI,eAAeC,MAAM7e,QAAQ,IAAK,KAC/F8e,EAAK1pB,EAAK2pB,MAAML,GAClBM,EAA4B,EAGxBA,EAFJF,QAAmB5tB,IAAb4tB,EAAGvmB,MACQ,IAAbumB,EAAGvmB,MACyBumB,EAAG,GAAG/pB,OAGN+pB,EAAGvmB,MAIPnD,EAAKL,OAErC,IAAMkqB,EAAW,MACbC,EAAKD,EAASE,KAAK/pB,GACnB8pB,GAAmB,IAAbA,EAAG3mB,QACT2mB,EAAKD,EAASE,KAAK/pB,IAEnB8pB,QAAmBhuB,IAAbguB,EAAG3mB,OACL2mB,EAAG3mB,MAAQymB,IACXA,EAA4BE,EAAG3mB,OAGvC,IAAM6mB,EAAchqB,EAAKyd,UAAU,EAAGmM,GAMtC,GALApvB,KAAKgY,OAAOyX,eACZzvB,KAAKgY,OAAOzH,aAAa,0BAA2B,CAChDJ,EAAAA,EAAcC,QAAQxM,EAAAA,EAAMC,cAAcP,GAAWksB,KAEzDxvB,KAAKgY,OAAO0X,YAAYpsB,EAAS/C,MAAM,EAAGivB,EAAYrqB,SAClDwoB,EAAWxB,eAAewD,oBAAqB,CAC/C,IAAMC,EAAgBhsB,EAAAA,EAAMC,cAAc8pB,EAAW9tB,MAAM6D,mBAAoBJ,EAAS/C,MAAM,EAAG6uB,IAI3F9e,EAAOtQ,KAAKgY,OAAOpN,WAAW8Z,gBAAgBkL,GACpDjC,EAAWxB,eAAewD,oBAAoBhC,EAAWtB,wBAAyBsB,EAAWzB,uBAAwB5b,EAAKnL,OAC9H,CA3CA,CAZA,CAwDJ,GAAC,CAAA7E,IAAA,0BAAApB,MACD,WAEI,GADkBc,KAAKqqB,UACvB,CAKA,IAAMsD,EAAa3tB,KAAKisB,kBACpB0B,GACA3tB,KAAKwuB,OAAOb,EAHhB,CAKJ,GAAC,CAAArtB,IAAA,SAAApB,MACD,SAAOyuB,GACH,IAAInsB,EAmBoBquB,EAhBlBnH,EAAQ1oB,KAAK0oB,MAAMoH,gBACzB9vB,KAAKgY,OAAOyX,eACR9B,EAAWzI,aACXllB,KAAKgY,OAAOzH,aAAa,0BAA2B,CAChDJ,EAAAA,EAAc4f,YAAYpC,EAAW9tB,MAAO,KAAGqI,QAAAmJ,EAAAA,EAAAA,GAC5Csc,EAAWvI,uBAElBplB,KAAKgY,OAAO0X,YAAY/B,EAAWzI,YAAYrlB,MAAM6D,oBACN,QAA9ClC,EAAKwuB,EAAAA,EAAmBhoB,IAAIhI,KAAKgY,eAA4B,IAAPxW,GAAyBA,EAAGyuB,OAAOtC,EAAWzI,YAAYgL,QAAS,CAAEC,gBAAgB,KAG5InwB,KAAKgY,OAAOzH,aAAa,0BAA2B,CAChDJ,EAAAA,EAAc4f,YAAYpC,EAAW9tB,MAAO8tB,EAAW9I,aAAW3c,QAAAmJ,EAAAA,EAAAA,GAC/Dsc,EAAWvI,uBAGlBuI,EAAWnf,UACXqhB,EAAA7vB,KAAK4e,gBACAzN,eAAczR,MAAAmwB,EAAA,CAAClC,EAAWnf,QAAQ4C,IAAElJ,QAAAmJ,EAAAA,EAAAA,GAAMsc,EAAWnf,QAAQvH,WAAa,MAC1E5F,SAAQ,WACC,OAAVqnB,QAA4B,IAAVA,GAA4BA,EAAMnkB,SACxD,IACK9E,UAAK6B,EAAWW,EAAAA,IAGX,OAAVymB,QAA4B,IAAVA,GAA4BA,EAAMnkB,UAExDvE,KAAKikB,mBAAmBG,MAC5B,GAAC,CAAA9jB,IAAA,WAAA0H,IACD,WACI,IAAIxG,EACE4uB,EAAQ,IAAI5tB,KAAiC,QAA3BhB,EAAKxB,KAAK0oB,MAAMxpB,aAA0B,IAAPsC,OAAgB,EAASA,EAAGgrB,YAAYznB,KAAI,SAAAiC,GAAC,OAAIA,EAAEwd,iBAAiB6H,uBAAuB,MAAM,IAC5J,OAAOhb,EAAAA,EAAAA,GAAI+e,GAAOC,SAAQ,SAAAC,GAAC,OAAIA,EAAEC,UAAY,EAAE,GACnD,KAACxF,CAAA,CA/VgC,CAASjH,GAiWjCwK,GAAe,WACxB,SAAAA,EAAYd,EAAS5C,IAAa7qB,EAAAA,EAAAA,GAAA,KAAAuuB,GAC9BtuB,KAAKwtB,QAAUA,EACfxtB,KAAK4qB,YAAcA,CACvB,CAGC,OAHAhrB,EAAAA,EAAAA,GAAA0uB,EAAA,EAAAhuB,IAAA,UAAApB,MACD,WACIc,KAAKwtB,QAAQvhB,QACjB,KAACqiB,CAAA,CAPuB,GAafkC,GAAkC,SAAAC,IAAAjW,EAAAA,EAAAA,GAAAgW,EAAAC,GAAA,IAAAC,GAAAhW,EAAAA,EAAAA,GAAA8V,GAC3C,SAAAA,EAAYG,EAAmB3Y,EAAQ4Y,EAAUhG,GAAa,IAAAiG,GAAA9wB,EAAAA,EAAAA,GAAA,KAAAywB,IAC1DK,EAAAH,EAAA1W,KAAA,OACKhC,OAASA,EACd6Y,EAAKD,SAAWA,EAChBC,EAAKjG,YAAcA,EACnBiG,EAAKC,aAAc,EACnB,IAAMC,EAAgB/Y,EAAOhB,mBAAkB,SAACga,GAC5C,OAAOA,EAAe7Z,iBAAiB,GAAIwZ,EAAkBjuB,MAAMqC,KAAI,SAAAwC,GAAC,MAAK,CACzE1H,MAAO0H,EAAE1H,MACT4K,QAAS,CACLmJ,YAAa,oCAEpB,IACL,IASkC,OARlCid,EAAK1M,WAAUjZ,EAAAA,EAAAA,KAAa,WACxB2lB,EAAKC,aAAc,EACnB9Y,EAAOJ,kBAAkBmZ,EAC7B,KACAF,EAAKrE,YAAcmE,EAAkBjuB,MAAMqC,KAAI,SAACiC,EAAGZ,GAAG,OAAK,IAAI6qB,GAAuBjqB,EAAG+pB,EAAc3qB,GAAK,IAC5GyqB,EAAK1M,UAAUnM,EAAOnL,yBAAwB,WAC1CgkB,EAAKvE,cACT,KACAuE,EAAK1M,UAAUwM,GAAmBE,CACtC,CAqBC,OArBAjxB,EAAAA,EAAAA,GAAA4wB,EAAA,EAAAlwB,IAAA,eAAApB,MACD,WACI,IAAIc,KAAK8wB,YAAT,CAGA,IAEgCruB,EAF5B6H,GAAa,EACXjI,EAAQrC,KAAKgY,OAAOpN,WAAWjI,GAAAC,EAAAA,EAAAA,GACrB5C,KAAKwsB,aAAW,IAAhC,IAAA7pB,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAtD,MAAkC,KAAvBwH,EAACvE,EAAAvD,MACFgyB,EAAW7uB,EAAM4P,mBAAmBjL,EAAEmqB,cACvCD,EAIAlqB,EAAEylB,kBAAkB2E,YAAYF,KACjC5mB,GAAa,EACbtD,EAAEylB,kBAAoByE,IALtBzkB,EAAAA,EAAAA,IAAkB,IAAIgF,MAAM,2BAOpC,CAAC,OAAAzN,GAAArB,EAAAtD,EAAA2E,EAAA,SAAArB,EAAAsB,GAAA,CACGqG,GACAtK,KAAK4wB,UAfT,CAiBJ,KAACJ,CAAA,CA7C0C,CAASlM,EAAAA,IA+ClD2M,GAAsB,WACxB,SAAAA,EAAYzM,EAAkB2M,IAAcpxB,EAAAA,EAAAA,GAAA,KAAAkxB,GACxCjxB,KAAKwkB,iBAAmBA,EACxBxkB,KAAKmxB,aAAeA,EACpBnxB,KAAKstB,WAAanQ,KAAKC,UAAU,CAC7B9M,KAAMtQ,KAAKwkB,iBAAiBK,WAC5BwM,aAAcrxB,KAAKwkB,iBAAiBW,WACpCmM,UAAWtxB,KAAKwkB,iBAAiB3kB,MAAM8S,gBACvC/M,YAAa5F,KAAKwkB,iBAAiB3kB,MAAM+F,YACzC4I,QAASxO,KAAKwkB,iBAAiBhW,UAEnCxO,KAAKysB,kBAAoBjI,EAAiB3kB,KAC9C,CAaC,OAbAD,EAAAA,EAAAA,GAAAqxB,EAAA,EAAA3wB,IAAA,yBAAApB,MACD,WACI,MAAO,CACH2lB,WAAY7kB,KAAKwkB,iBAAiBK,WAClChlB,MAAOG,KAAKysB,kBACZje,QAASxO,KAAKwkB,iBAAiBhW,QAC/B2d,eAAgBnsB,KAAKwkB,iBAAiB2H,eACtCE,wBAAyBrsB,KAAKwkB,iBAAiB6H,wBAC/CH,uBAAwBlsB,KAAKwkB,iBAAiB0H,uBAC9ChH,YAAallB,KAAKwkB,iBAAiBU,YACnCC,WAAYnlB,KAAKwkB,iBAAiBW,WAClCC,oBAAqBplB,KAAKwkB,iBAAiBY,oBAEnD,KAAC6L,CAAA,CAzBuB,GA2BrB,SAAS/C,GAAyB1pB,EAAUlB,EAAUjB,EAAOkvB,GAAuE,IAA9D9wB,EAAKwG,UAAA9B,OAAA,QAAA7D,IAAA2F,UAAA,GAAAA,UAAA,GAAG6I,EAAAA,EAAkBC,KAAM4Y,EAA4B1hB,UAAA9B,OAAA,EAAA8B,UAAA,QAAA3F,EACrI,OAAO7C,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAA6wB,IAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAxuB,EAAAD,EAAA5D,EAAAitB,EAAAja,EAAAH,EAAA1J,EAAA7I,EAAAglB,EAAAK,EAAA2M,EAAAC,EAAAC,EAAA7B,EAAA8B,EAAAC,EAAA,YAAAvxB,EAAAA,EAAAA,KAAAI,MAAA,SAAAoxB,GAAA,cAAAA,EAAAlxB,KAAAkxB,EAAA9yB,MAAA,OAGnB,OAFVqyB,EAAsBU,GAAgB7uB,EAAUjB,GAChDqvB,EAAYltB,EAASY,IAAI/C,GAAM6vB,EAAA9yB,KAAA,EACfN,QAAQsG,IAAIssB,EAAU3sB,KAAI,SAAC3E,GAAQ,OAAK3B,EAAUwzB,OAAM,OAAQ,GAAMvxB,EAAAA,EAAAA,KAAAC,MAAE,SAAAmY,IAAA,IAAA0T,EAAA,OAAA9rB,EAAAA,EAAAA,KAAAI,MAAA,SAAAkY,GAAA,cAAAA,EAAAhY,KAAAgY,EAAA5Z,MAAA,OACtE,OADsE4Z,EAAA5Z,KAAA,EAChEN,QAAQC,QAAQqB,EAAS8tB,yBAAyB7rB,EAAOiB,EAAUiuB,EAAS9wB,IAAQ2xB,MAAMnwB,EAAAA,IAA0B,OAA7H,OAAXuqB,EAAWxT,EAAAnX,KAAAmX,EAAA9X,OAAA,SACT,CACJsrB,YAAAA,EACApsB,SAAAA,EACAmE,QAAS,WACDioB,GACApsB,EAASiyB,sBAAsB7F,EAEvC,IACH,wBAAAxT,EAAAzX,OAAA,GAAAuX,EAAA,IACH,KAAE,OAXE6Y,EAAOO,EAAArwB,KAYP+vB,EAAc,IAAInoB,IAAKrG,GAAAR,EAAAA,EAAAA,GACR+uB,GAAOO,EAAAlxB,KAAA,EAAAoC,EAAAP,IAAA,WAAAM,EAAAC,EAAAN,KAAAtD,KAAE,CAAF0yB,EAAA9yB,KAAA,SACc,GAD/BG,EAAM4D,EAAAjE,MACPstB,EAAcjtB,EAAOitB,YACT,CAAF0F,EAAA9yB,KAAA,gBAAA8yB,EAAAhxB,OAAA,uBAAAqR,GAAA3P,EAAAA,EAAAA,GAGG4pB,EAAY9pB,OAAKwvB,EAAAlxB,KAAA,GAAAuR,EAAA1P,IAAA,YAAAuP,EAAAG,EAAAzP,KAAAtD,KAAE,CAAF0yB,EAAA9yB,KAAA,SACqC,GAD9DsJ,EAAI0J,EAAAlT,OACPW,EAAQ6I,EAAK7I,MAAQ+D,EAAAA,EAAMyM,KAAK3H,EAAK7I,OAAS4xB,GACxC9e,kBAAoB9S,EAAM+S,cAAa,CAAAsf,EAAA9yB,KAAA,gBAAA8yB,EAAAhxB,OAAA,uBAI7C2jB,OAAU,EACVK,OAAW,EACgB,kBAApBxc,EAAKmc,YACZA,EAAanc,EAAKmc,WACd8D,GAAgCjgB,EAAK4pB,uBACrCzN,EAAa0N,GAAc1N,EAAYhlB,EAAM6D,mBAAoBrB,EAAOsmB,GAG3D,KADPkJ,EAAOhN,EAAW1f,OAASuD,EAAKmc,WAAW1f,UAE7CtF,EAAQ,IAAI+D,EAAAA,EAAM/D,EAAM8S,gBAAiB9S,EAAM+F,YAAa/F,EAAM+S,cAAe/S,EAAMgG,UAAYgsB,KAG3G3M,OAAc5jB,GAET,YAAaoH,EAAKmc,YACjBiN,EAA6BppB,EAAKmc,WAAWqL,QAAQ/qB,OACvDwjB,GAAgCjgB,EAAK4pB,uBACrC5pB,EAAKmc,WAAWqL,QAAUqC,GAAc7pB,EAAKmc,WAAWqL,QAASrwB,EAAM6D,mBAAoBrB,EAAOsmB,GAGrF,KADPkJ,EAAOnpB,EAAKmc,WAAWqL,QAAQ/qB,OAAS2sB,KAE1CjyB,EAAQ,IAAI+D,EAAAA,EAAM/D,EAAM8S,gBAAiB9S,EAAM+F,YAAa/F,EAAM+S,cAAe/S,EAAMgG,UAAYgsB,KAI3E,KAD1B3B,GAAU,IAAIsC,EAAAA,IAAgBC,MAAM/pB,EAAKmc,WAAWqL,UAC9CwC,SAASvtB,QAAgB+qB,EAAQwC,SAAS,aAAcC,EAAAA,IAChE9N,EAAaqL,EAAQwC,SAAS,GAAGxzB,MACjCgmB,OAAc5jB,IAGdujB,EAAaqL,EAAQ9nB,WACrB8c,EAAc,CACVgL,QAASxnB,EAAKmc,WAAWqL,QACzBrwB,MAAOA,MAKf+yB,EAAAA,EAAAA,IAAYlqB,EAAKmc,YAEfmN,EAAe,CACjBnN,WAAAA,EACAK,YAAAA,EACArlB,MAAAA,EACA2O,QAAS9F,EAAK8F,QACd2d,eAAgB5sB,EAAOa,SACvBisB,wBAAyBG,EACzBN,uBAAwBxjB,EACxByc,WAAYzc,EAAKyc,YAAcN,EAC/BO,oBAAqB1c,EAAK0c,qBHjpBnC7C,GGmpBKqP,EAAY3pB,IAAIkV,KAAKC,UAAU,CAAEyH,WAAAA,EAAYhlB,MAAO6I,EAAK7I,QAAUmyB,GAAa,QAAAE,EAAA9yB,KAAA,iBAAA8yB,EAAA9yB,KAAA,iBAAA8yB,EAAAlxB,KAAA,GAAAkxB,EAAAlwB,GAAAkwB,EAAA,UAAA3f,EAAAlT,EAAA6yB,EAAAlwB,IAAA,eAAAkwB,EAAAlxB,KAAA,GAAAuR,EAAAtO,IAAAiuB,EAAAxlB,OAAA,YAAAwlB,EAAA9yB,KAAA,gBAAA8yB,EAAA9yB,KAAA,iBAAA8yB,EAAAlxB,KAAA,GAAAkxB,EAAAzmB,GAAAymB,EAAA,SAAA9uB,EAAA/D,EAAA6yB,EAAAzmB,IAAA,eAAAymB,EAAAlxB,KAAA,GAAAoC,EAAAa,IAAAiuB,EAAAxlB,OAAA,mBAAAwlB,EAAAhxB,OAAA,SAGjF,CACHwB,OAAK2O,EAAAA,EAAAA,GAAMugB,EAAYxiB,UACvB7K,QAAS,WAAM,IACiBsN,EADjBC,GAAAlP,EAAAA,EAAAA,GACU+uB,GAAO,IAA5B,IAAA7f,EAAAjP,MAAAgP,EAAAC,EAAAhP,KAAAtD,MAA8B,CAAbqS,EAAA3S,MACNqF,SACX,CAAC,OAAAP,GAAA8N,EAAAzS,EAAA2E,EAAA,SAAA8N,EAAA7N,GAAA,CACL,IACH,yBAAAiuB,EAAA3wB,OAAA,GAAAiwB,EAAA,sCAET,CACA,SAASW,GAAgB7uB,EAAUjB,GAC/B,IAAMqD,EAAOrD,EAAMsD,kBAAkBrC,GAC/BuvB,EAAYxwB,EAAMqM,iBAAiBpL,EAASmC,YAGlD,OAAOC,EACD,IAAI9B,EAAAA,EAAMN,EAASmC,WAAYC,EAAKE,YAAatC,EAASmC,WAAYotB,GACtEjvB,EAAAA,EAAMC,cAAcP,EAAUA,EAAS6O,UAAK7Q,EAAWuxB,GACjE,CACA,SAASN,GAAcjiB,EAAMhN,EAAUjB,EAAOsmB,GAC1C,IACMmK,EADYzwB,EAAMsjB,eAAeriB,EAASmC,YAAYwd,UAAU,EAAG3f,EAAS6C,OAAS,GAC/DmK,EACtByiB,EAAY1wB,EAAMyD,aAAaktB,qBAAqB1vB,EAAUwvB,EAAQ3tB,QAAU7B,EAAS6C,OAAS,GAAImK,GACtG2iB,EAA6B,OAAdF,QAAoC,IAAdA,OAAuB,EAASA,EAAUG,gBAAgB5vB,EAAS6C,OAAS,EAAG2sB,EAAQ3tB,OAAQ,GAC1I,OAAK8tB,GAGWE,EAAAA,EAAAA,GAAkBF,EAActK,GAFrCrY,CAIf,C,wCCjtBa8iB,GAAqC,SAAArP,IAAAvJ,EAAAA,EAAAA,GAAA4Y,EAAArP,GAAA,IAAAtJ,GAAAC,EAAAA,EAAAA,GAAA0Y,GAU9C,SAAAA,EAAYpb,EAAQqb,GAA8B,IAAAxyB,GAAAd,EAAAA,EAAAA,GAAA,KAAAqzB,IAC9CvyB,EAAA4Z,EAAAT,KAAA,OACKhC,OAASA,EACdnX,EAAKwyB,6BAA+BA,EACpCxyB,EAAKyyB,wBAAyB,EAC9BzyB,EAAK0yB,mBAAoB,EACzB1yB,EAAK2yB,WAAY,EACjB3yB,EAAK4yB,6BAA0BnyB,EAC/BT,EAAKojB,mBAAqB,IAAIC,EAAAA,GAC9BrjB,EAAKoJ,YAAcpJ,EAAKojB,mBAAmB/W,MAE3CrM,EAAKsjB,UAAUnM,EAAO0b,WAAU,SAAAr0B,GACxBA,EAAEkO,WAAa1M,EAAK0yB,oBACpB1yB,EAAK0yB,mBAAoB,EACzB1yB,EAAKwL,OAAOxL,EAAK2yB,WAEzB,KACA3yB,EAAKsjB,UAAUnM,EAAO2b,SAAQ,SAAAt0B,GACtBA,EAAEkO,UAAY1M,EAAK0yB,oBACnB1yB,EAAK0yB,mBAAoB,EACzB1yB,EAAKwL,OAAOxL,EAAK2yB,WAEzB,KACA,IAAMI,EAAoBC,GAAAA,EAAkB7rB,IAAInH,EAAKmX,QACrD,GAAI4b,EAAmB,CACnB/yB,EAAKsjB,UAAUyP,EAAkBE,iBAAiB,CAC9CC,SAAU,IACVC,OAAQ,SAAC3xB,EAAO4xB,EAAKC,GACjB,IAAM5O,EAAYzkB,EAAKmX,OAAOpN,WACxBupB,EAA4B5P,EAAyBe,EAAWzkB,EAAKwyB,gCAC3E,IAAKc,EACD,OAAQ,EAEZ,IAAM7wB,EAAWe,EAAAA,EAASgM,KAAK4jB,GACzBG,EAAaF,EACdnvB,KAAI,SAACsvB,EAAa1rB,GACnB,IA8EQ2rB,EAAaC,EA9EfC,EAAoBC,GAA4Bb,EAAmBtwB,EAAU+wB,EAAaxzB,EAAK0yB,mBAC/FmB,EAAwBnQ,EAAyBe,EAAiC,OAAtBkP,QAAoD,IAAtBA,OAA+B,EAASA,EAAkBG,4BAC1J,GAAKD,EAKL,MAAO,CAAE/rB,MAAAA,EAAOisB,OAuERN,EAzEsBH,EAA0Bt0B,OAyEnC00B,EAzE0CG,EAAsB70B,OA0E1F8S,kBAAoB2hB,EAAY3hB,iBAC3C4hB,EAAO3uB,cAAgB0uB,EAAY1uB,cAClC2uB,EAAO3hB,cAAgB0hB,EAAY1hB,eAC/B2hB,EAAO3hB,gBAAkB0hB,EAAY1hB,eAClC2hB,EAAO1uB,WAAayuB,EAAYzuB,YA7EpBsuB,EAA0BtP,WAAWoB,WAAWyO,EAAsB7P,aACnDgQ,aAAcH,EAAsB7P,WAAW1f,OAAQkvB,YAAAA,EAClF,IACKvW,QAAO,SAAApV,GAAI,OAAIA,GAAQA,EAAKksB,KAAK,IAChCr1B,GAASu1B,EAAAA,GAAAA,IAAUV,GAAYW,EAAAA,GAAAA,KAAU,SAAAlyB,GAAC,OAAIA,EAAEgyB,YAAY,GAAEG,GAAAA,KACpE,OAAOz1B,EAASA,EAAOoJ,OAAS,CACpC,KAEJ,IAAIssB,GAAyB,EAmB7Bp0B,EAAKsjB,UAAU+Q,EAAAA,GAAMC,KAAKvB,EAAkBvxB,MAAM+yB,aAAnCF,EAAiD,SAAA71B,GAjBxD41B,IAGJA,GAAyB,EACzBp0B,EAAKsjB,UAAUyP,EAAkByB,OAAOn2B,MAAMo2B,WAAU,WACpDz0B,EAAKyyB,wBAAyB,EAC9BzyB,EAAKwL,QAAO,EAChB,KACAxL,EAAKsjB,UAAUyP,EAAkByB,OAAOn2B,MAAMq2B,WAAU,WACpD10B,EAAKyyB,wBAAyB,EAC9BzyB,EAAKwL,QAAO,EAChB,KACAxL,EAAKsjB,UAAUyP,EAAkByB,OAAOn2B,MAAMs2B,YAAW,WACrD30B,EAAKyyB,wBAAyB,EAC9BzyB,EAAKwL,QAAO,EAChB,KAIJ,IACJ,CAC4B,OAA5BxL,EAAKwL,OAAOxL,EAAK2yB,WAAW3yB,CAChC,CAsCC,OAtCAjB,EAAAA,EAAAA,GAAAwzB,EAAA,EAAA9yB,IAAA,QAAA0H,IAhFD,WACI,GAAKhI,KAAKwzB,UAGV,MAAO,CAAEiC,aAAcz1B,KAAKyzB,wBAChC,GAAC,CAAAnzB,IAAA,SAAApB,MA4ED,SAAOw2B,GACH,IAAMC,EAAsB31B,KAAK41B,qBAC7BC,GAAa,GA4CzB,SAA+B1xB,EAAGC,GAC9B,GAAID,IAAMC,EACN,OAAO,EAEX,IAAKD,IAAMC,EACP,OAAO,EAEX,OAAOD,EAAE2xB,qBAAuB1xB,EAAE0xB,oBAC9B3xB,EAAE4xB,gBAAkB3xB,EAAE2xB,eF7HvB,SAA2C5xB,EAAGC,GACjD,OAAID,IAAMC,MAGLD,IAAMC,IAGJD,EAAEtE,MAAMuxB,YAAYhtB,EAAEvE,QAAUsE,EAAE0gB,aAAezgB,EAAEygB,YAAc1gB,EAAEqK,UAAYpK,EAAEoK,OAC5F,CEsHQwnB,CAAkC7xB,EAAEwwB,2BAA4BvwB,EAAEuwB,2BAC1E,EArDasB,CAAsBj2B,KAAKyzB,wBAAyBkC,KACrD31B,KAAKyzB,wBAA0BkC,EAC/BE,GAAa,GAEb71B,KAAKwzB,YAAckC,IACnB11B,KAAKwzB,UAAYkC,EACjBG,GAAa,GAEbA,GACA71B,KAAKikB,mBAAmBG,MAEhC,GAAC,CAAA9jB,IAAA,qBAAApB,MACD,WACI,IAAM00B,EAAoBC,GAAAA,EAAkB7rB,IAAIhI,KAAKgY,QACrD,GAAK4b,GAGA5zB,KAAKszB,uBAAV,CAGA,IAAM4C,EAActC,EAAkByB,OAAOn2B,MAAMi3B,iBACnD,GAAKD,EAIL,OAAOzB,GAA4Bb,EAAmB5zB,KAAKgY,OAAOgT,cAAekL,EAAYxtB,KAAM1I,KAAKuzB,kBANxG,CAOJ,GAAC,CAAAjzB,IAAA,0BAAApB,MACD,WACI,IAAM00B,EAAoBC,GAAAA,EAAkB7rB,IAAIhI,KAAKgY,QAC/B,OAAtB4b,QAAoD,IAAtBA,GAAwCA,EAAkBwC,yBAC5F,GAAC,CAAA91B,IAAA,sBAAApB,MACD,WACI,IAAM00B,EAAoBC,GAAAA,EAAkB7rB,IAAIhI,KAAKgY,QAC/B,OAAtB4b,QAAoD,IAAtBA,GAAwCA,EAAkByC,qBAC5F,KAACjD,CAAA,CA1H6C,CAAS9O,EAAAA,IA8I3D,SAASmQ,GAA4Bb,EAAmBtwB,EAAUoF,EAAM4tB,GAEpE,GAAIhnB,MAAMinB,QAAQ7tB,EAAKilB,WAAWvI,sBAAwB1c,EAAKilB,WAAWvI,oBAAoBjgB,OAAS,EAEnG,MAAO,CACH2wB,mBAAoBptB,EAAKilB,WAAWrW,KACpCye,eAAe,EACfpB,2BAA4B,CAExB90B,MAAO+D,EAAAA,EAAMC,cAAcP,EAAUA,GACrCuhB,WAAY,GACZM,WAAY,GACZD,iBAAa5jB,EACb8jB,oBAAqB,KAIjC,IAAMP,EAAenc,EAAKilB,WAApB9I,WACFkR,GAAgB,EACpB,GAAsC,EAAlCrtB,EAAKilB,WAAW6I,gBAAwE,CACxF,IAAMtG,GAAU,IAAIsC,EAAAA,IAAgBC,MAAM5N,GACpCxiB,EAAQuxB,EAAkB5b,OAAOpN,WAGvC,GAAIslB,EAAQwC,SAASvtB,OAAS,IAC1B,OAEJsxB,GAAAA,EAAeC,iBAAiBr0B,EAAOiB,GAAU,EAAM4sB,GACvDrL,EAAaqL,EAAQ9nB,WACrB2tB,GAAgB,CACpB,CACA,IAAMY,EAAO/C,EAAkBgD,iBAAiBluB,EAAM4tB,GACtD,MAAO,CACHP,cAAAA,EACAD,mBAAoBptB,EAAKilB,WAAWrW,KACpCqd,2BAA4B,CACxB9P,WAAYA,EACZM,WAAYN,EACZhlB,MAAO+D,EAAAA,EAAMC,cAAcP,EAAS/C,MAAM,GAAIo2B,EAAKE,iBAAkBvzB,EAAS/C,MAAM,EAAGuM,KAAKC,IAAI4pB,EAAKG,eAAgB,KACrH5R,iBAAa5jB,EACb8jB,oBAAqB,IAGjC,CClMA,IAAIze,GAA0C,SAAUC,EAAYC,EAAQvG,EAAKwG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU9B,OAAQ+B,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQvG,GAAOwG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQvG,EAAKwG,QACpH,IAAK,IAAIS,EAAIX,EAAWzB,OAAS,EAAGoC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQvG,EAAK4G,GAAKH,EAAEF,EAAQvG,KAAS4G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQvG,EAAK4G,GAAIA,CAChE,EACIO,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQvG,GAAOqH,EAAUd,EAAQvG,EAAKoH,EAAa,CACxE,EACIjJ,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAUI23B,GAAyB,SAAAxL,IAAA/Q,EAAAA,EAAAA,GAAAuc,EAAAxL,GAAA,IAAA9Q,GAAAC,EAAAA,EAAAA,GAAAqc,GAIzB,SAAAA,EAAY/e,EAAQ0Q,EAAOpN,GAAyB,IAAAza,EA6CoD,OA7CpDd,EAAAA,EAAAA,GAAA,KAAAg3B,IAChDl2B,EAAA4Z,EAAAT,KAAA,KAAMhC,IACD0Q,MAAQA,EACb7nB,EAAKya,wBAA0BA,EAC/Bza,EAAKm2B,iCAAmCn2B,EAAKsjB,UAAU,IAAIiP,GAAsCvyB,EAAKmX,QAEtG,WACI,IAAIxW,EAAIC,EAAIqa,EAGZ,OAD4B,QAA3Bta,EAAKX,EAAK6nB,MAAMxpB,aAA0B,IAAPsC,GAAyBA,EAAG8qB,eACiC,QAAzFxQ,EAAiC,QAA3Bra,EAAKZ,EAAK6nB,MAAMxpB,aAA0B,IAAPuC,OAAgB,EAASA,EAAG+qB,YAAY,UAAuB,IAAP1Q,OAAgB,EAASA,EAAG+R,wBACzI,KACAhtB,EAAK+qB,gBAAkB/qB,EAAKsjB,UAAU,IAAI2E,EAAAA,IAC1CjoB,EAAKo2B,gBAAkBp2B,EAAKsjB,UAAU,IAAI3Y,EAAAA,IAAiB,kBAAM3K,EAAKq2B,aAAa,GAAE,KACrFr2B,EAAKypB,qBAAuB,EAC5BzpB,EAAKsjB,UAAUtjB,EAAKm2B,iCAAiC/sB,aAAY,WAC7D,GAAKpJ,EAAKmX,OAAO7K,WAAjB,CAIAtM,EAAKo2B,gBAAgBzqB,WACM3L,EAAKm2B,iCAAiCG,QAE7Dt2B,EAAKypB,qBAAuB,GAEhC,IAAM8M,EAAev2B,EAAKwpB,UACtB+M,IACAv2B,EAAKypB,qBAAuBxd,KAAKC,IAAIlM,EAAKypB,qBAA0B8M,EAAa9hB,MAAMvQ,KAAI,SAAAqe,GAAC,OAAIA,EAAEC,MAAMle,OAAS,CAAC,IAyGnHkyB,QAAO,SAAClzB,EAAGC,GAAC,OAAKD,EAAIC,CAAC,GAAE,KAvGvBvD,EAAKypB,sBAAwB,EAC7BzpB,EAAKm2B,iCAAiCX,sBAGtCx1B,EAAKm2B,iCAAiCZ,0BAE1Cv1B,EAAKojB,mBAAmBG,MAhBxB,CAiBJ,KACAvjB,EAAKsjB,UAAUtjB,EAAK6nB,MAAMze,aAAY,WAClCpJ,EAAKojB,mBAAmBG,MAC5B,KACAvjB,EAAKsjB,UAAUtjB,EAAKmX,OAAO4R,2BAA0B,SAACvqB,GAClDwB,EAAKypB,qBAAuB,EAC5BzpB,EAAKo2B,gBAAgBzqB,WACrB3L,EAAKojB,mBAAmBG,MAC5B,KACAvjB,EAAKsjB,WAAUjZ,EAAAA,EAAAA,KAAa,kBAAMrK,EAAKm2B,iCAAiCZ,yBAAyB,KAAGv1B,CACxG,CA+EC,OA/EAjB,EAAAA,EAAAA,GAAAm3B,EAAA,EAAAz2B,IAAA,WAAA0H,IAjDD,WACI,YAAuD1G,IAAhDtB,KAAKg3B,iCAAiCG,KACjD,GAAC,CAAA72B,IAAA,6BAAApB,MAgDD,WAEI,OADuBc,KAAKgY,OAAOtN,UAAU,KACvB+Y,OAC1B,GAAC,CAAAnjB,IAAA,cAAApB,MACD,WACI,OAAOT,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAe,IAAA,IAAAy1B,EAAAR,EAAArzB,EAAAkqB,EAAAO,EAAAppB,EAAA,YAAAjE,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAxC,MAAA,OACsB,IAAnD+3B,EAAQn3B,KAAKg3B,iCAAiCG,QACrCA,EAAM1B,aAAY,CAAA7zB,EAAAxC,KAAA,eAAAwC,EAAAV,OAAA,iBASS,GANpCy1B,EAAO,CACTrmB,KAAM6mB,EAAM1B,aAAad,2BAA2B9P,WACpDhlB,MAAOs3B,EAAM1B,aAAad,2BAA2B90B,MACrDk2B,cAAeoB,EAAM1B,aAAaM,cAClCuB,eAAgBH,EAAM1B,aAAaK,oBAEjCxyB,EAAWtD,KAAKgY,OAAOgT,eACzBmM,EAAM1B,aAAaM,eACuB,KAA1CoB,EAAM1B,aAAaK,oBACuB,KAA1CqB,EAAM1B,aAAaK,oBACuB,KAA1CqB,EAAM1B,aAAaK,mBAA0B,CAAAl0B,EAAAxC,KAAA,QAE1B,OAAnBY,KAAK0oB,MAAMle,QAAQ5I,EAAAV,OAAA,iBAqBvB,OAlBMssB,GAAUQ,EAAAA,EAAAA,KAAwB,SAACvtB,GAAK,OAAKhC,GAAUkG,OAAM,OAAQ,GAAMjE,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAArB,EAAA,OAAAmB,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3B,MAAA,OAGlE,OAHkE2B,EAAAC,KAAA,EAAAD,EAAA3B,KAAA,EAG5D8uB,GAAyBluB,KAAKsb,wBAAwB4N,0BAA2B5lB,EAAUtD,KAAKgY,OAAOpN,WAAY,CAAEggB,YAAaF,EAAAA,GAA4BC,UAAWwD,uBAAwBwI,GAAQl2B,GAAM,OAA9NlB,EAAMwB,EAAAc,KAAAd,EAAA3B,KAAG,GAAH,aAGe,OAHf2B,EAAAC,KAAG,EAAHD,EAAAiB,GAAAjB,EAAA,UAGN0L,EAAAA,EAAAA,IAAiB1L,EAAAiB,IAAIjB,EAAAG,OAAA,sBAGrBT,EAAMU,wBAAyB,CAAFJ,EAAA3B,KAAA,SACZ,OAAjBG,EAAOgF,UAAUxD,EAAAG,OAAA,kBAGrBlB,KAAK0oB,MAAM2F,SAASruB,KAAKgY,OAAQzY,EAAQmrB,EAAAA,GAA4BC,WACrE3qB,KAAKikB,mBAAmBG,OAAO,yBAAArjB,EAAAQ,OAAA,GAAAX,EAAA,iBACjC,IACImtB,EAAY,IAAIO,GAAgBd,EAAS9C,EAAAA,GAA4BC,WAC3E3qB,KAAK4rB,gBAAgB1sB,MAAQ6uB,EAAUnsB,EAAAxC,KAAA,GACjCouB,EAAO,QACTxtB,KAAK4rB,gBAAgB1sB,QAAU6uB,GAC/B/tB,KAAK4rB,gBAAgBphB,QACxB,yBAAA5I,EAAAL,OAAA,GAAAG,EAAA,SAET,GAAC,CAAApB,IAAA,YAAA0H,IACD,WACI,IAAIxG,EAAIC,EAAIqa,EAqCEyb,EAAgBC,EApCxBC,EAA6Bz3B,KAAKy3B,6BAClCp1B,EAAQrC,KAAKgY,OAAOpN,WACpB8sB,EAAsBnT,EAAyBliB,EAAiG,QAAzFZ,EAAiC,QAA3BD,EAAKxB,KAAK0oB,MAAMxpB,aAA0B,IAAPsC,OAAgB,EAASA,EAAGgrB,YAAY,UAAuB,IAAP/qB,OAAgB,EAASA,EAAGosB,0BACpL8J,EAAqB33B,KAAKg3B,iCAAiCG,MAC3DS,EAA0BrT,EAAyBliB,EAA0H,QAAlHyZ,EAA4B,OAAvB6b,QAAsD,IAAvBA,OAAgC,EAASA,EAAmBlC,oBAAiC,IAAP3Z,OAAgB,EAASA,EAAG6Y,4BACjNkD,EAA6BH,GAC5BE,GAEAF,EAAoB7S,WAAWoB,WAAW2R,EAAwB/S,cA4B3D0S,EA1BMG,EAAoB73B,MA0BV23B,EA1BiBI,EAAwB/3B,MA2BpE03B,EAAe5kB,kBAAoB6kB,EAAc7kB,iBACpD4kB,EAAe3xB,cAAgB4xB,EAAc5xB,cAC3C2xB,EAAe3kB,gBAAkB4kB,EAAc5kB,eAAiB2kB,EAAe1xB,WAAa2xB,EAAc3xB,WACrG0xB,EAAe3kB,cAAgB4kB,EAAc5kB,gBA7BpD,GAAK6kB,GAA+BI,EAApC,CAIA,IAAMC,EAAkBD,EAA6BH,EAAuBE,GAA2BF,EACjGK,EAAgCF,EAA6BC,EAAgBjT,WAAW1f,OAASyyB,EAAwB/S,WAAW1f,OAAS,EAEnJ,OADqBnF,KAAKg4B,YAAYF,EAAiBC,EAJvD,CAMJ,GAAC,CAAAz3B,IAAA,cAAApB,MACD,SAAYyuB,EAAYoK,GACpB,IAAMxS,EAAOvlB,KAAKgY,OAAOyV,aAAazlB,IAAI,KAAgCiwB,YAC1E,OAAOtK,EACAtI,EAA4BsI,EAAY3tB,KAAKgY,OAAOpN,WAAY2a,EAAMvlB,KAAKgY,OAAOgT,cAAe+M,IAEhG,IAAIvV,EAAUmL,EAAW9tB,MAAM+S,cAAe,GAAI5S,KAAKsqB,2BACzDhpB,CACV,KAACy1B,CAAA,CAjIwB,CAA2CjT,GAmIxEiT,GAA4BpwB,GAAW,CACnCc,GAAQ,EAAG2Q,EAAAA,IACZ2e,I,gBChKCpwB,GAA0C,SAAUC,EAAYC,EAAQvG,EAAKwG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU9B,OAAQ+B,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQvG,GAAOwG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQvG,EAAKwG,QACpH,IAAK,IAAIS,EAAIX,EAAWzB,OAAS,EAAGoC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQvG,EAAK4G,GAAKH,EAAEF,EAAQvG,KAAS4G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQvG,EAAK4G,GAAIA,CAChE,EACIO,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQvG,GAAOqH,EAAUd,EAAQvG,EAAKoH,EAAa,CACxE,EASawwB,GAAe,SAAAnU,IAAAvJ,EAAAA,EAAAA,GAAA0d,EAAAnU,GAAA,IAAAtJ,GAAAC,EAAAA,EAAAA,GAAAwd,GACxB,SAAAA,IAAc,IAAAr3B,EAKqD,OALrDd,EAAAA,EAAAA,GAAA,KAAAm4B,IACVr3B,EAAA4Z,EAAA/a,MAAA,KAASuH,YACJgd,mBAAqB,IAAIC,EAAAA,GAC9BrjB,EAAKoJ,YAAcpJ,EAAKojB,mBAAmB/W,MAC3CrM,EAAKs3B,oBAAqB,EAC1Bt3B,EAAKu3B,gBAAkBv3B,EAAKsjB,UAAU,IAAI2E,EAAAA,IAAqBjoB,CACnE,CAgCC,OAhCAjB,EAAAA,EAAAA,GAAAs4B,EAAA,EAAA53B,IAAA,cAAA0H,IACD,WACI,IAAIxG,EACJ,OAA6C,QAArCA,EAAKxB,KAAKo4B,gBAAgBl5B,aAA0B,IAAPsC,OAAgB,EAASA,EAAG+X,MACrF,GAAC,CAAAjZ,IAAA,iBAAApB,MACD,SAAemD,GAAO,IACdb,EN7BwB+X,EAAQgV,EM4BlB5pB,EAAA,MAEyB,QAArCnD,EAAKxB,KAAKo4B,gBAAgBl5B,aAA0B,IAAPsC,OAAgB,EAASA,EAAG+X,UAAYlX,IAG3FrC,KAAKo4B,gBAAgB5tB,QACrBxK,KAAKo4B,gBAAgBl5B,MAAQmD,GNlCDkX,EMkC6BlX,ENlCrBksB,EMkC4BlsB,EAAM4H,aAAY,WAC9EtF,EAAKwzB,oBAAqB,EAC1BxzB,EAAKsf,mBAAmBG,MAC5B,INpCG,CACH7K,OAAAA,EACAhV,QAAS,kBAAqB,OAAfgqB,QAAsC,IAAfA,OAAwB,EAASA,EAAWhqB,SAAS,SMkCrFjD,EACNtB,KAAKm4B,oBAAqB,EAC1Bn4B,KAAKikB,mBAAmBG,OAC5B,GAAC,CAAA9jB,IAAA,YAAA0H,IACD,WACI,IAAIxG,EAAIC,EAKR,OAJKzB,KAAKm4B,qBACNn4B,KAAKq4B,gBAA8G,QAA3F52B,EAA2C,QAArCD,EAAKxB,KAAKo4B,gBAAgBl5B,aAA0B,IAAPsC,OAAgB,EAASA,EAAG+X,cAA2B,IAAP9X,OAAgB,EAASA,EAAG4oB,UACvJrqB,KAAKm4B,oBAAqB,GAEvBn4B,KAAKq4B,eAChB,GAAC,CAAA/3B,IAAA,cAAApB,MACD,SAAYmlB,GACR,IAAI7iB,EACwB,QAA3BA,EAAKxB,KAAKs4B,mBAAgC,IAAP92B,GAAyBA,EAAG+oB,YAAYlG,EAChF,GAAC,CAAA/jB,IAAA,uBAAA0H,IACD,WACI,OAAOhI,KAAKs4B,YAAct4B,KAAKs4B,YAAYhO,qBAAuB,CACtE,KAAC4N,CAAA,CAvCuB,CAAS5T,EAAAA,IA4CjCiU,GAAc,SAAAC,IAAAhe,EAAAA,EAAAA,GAAA+d,EAAAC,GAAA,IAAAvd,GAAAP,EAAAA,EAAAA,GAAA6d,GAOd,SAAAA,EAAYvgB,EAAQygB,GAAsB,IAAA3qB,EAUnB,OAVmB/N,EAAAA,EAAAA,GAAA,KAAAw4B,IACtCzqB,EAAAmN,EAAAjB,KAAA,OACKhC,OAASA,EACdlK,EAAK2qB,qBAAuBA,EAC5B3qB,EAAK4qB,YAAc5qB,EAAKqW,UAAU,IAAIwU,IACtC7qB,EAAK8qB,0BAA4B9qB,EAAKqW,UAAUrW,EAAK2qB,qBAAqBI,eAAe9B,GAA2BjpB,EAAKkK,OAAQlK,EAAK4qB,cACtI5qB,EAAKgrB,uBAAyBhrB,EAAKqW,UAAUrW,EAAK2qB,qBAAqBI,eAAepQ,EAAwB3a,EAAKkK,OAAQlK,EAAK4qB,cAChI5qB,EAAKqW,UAAUrW,EAAK8qB,0BAA0B3uB,aAAY,WACtD6D,EAAKirB,aACT,KACAjrB,EAAKirB,cAAcjrB,CACvB,CAsCC,OAtCAlO,EAAAA,EAAAA,GAAA24B,EAAA,EAAAj4B,IAAA,+BAAA0H,IAjBD,WACI,GAAIhI,KAAKs4B,cAAgBt4B,KAAK84B,uBAC1B,OAAO94B,KAAK84B,sBAGpB,GAAC,CAAAx4B,IAAA,cAAApB,MAaD,WACIc,KAAKg5B,eAAeh5B,KAAK44B,0BAA0BK,SAC7Cj5B,KAAK44B,0BACL54B,KAAK84B,wBACX94B,KAAK84B,uBAAuBI,UAAUl5B,KAAKs4B,cAAgBt4B,KAAK84B,uBACpE,GAAC,CAAAx4B,IAAA,oBAAApB,MACD,SAAkBi6B,GACd,IAAI33B,EACE6oB,EAAyD,QAA5C7oB,EAAKxB,KAAKo5B,oCAAiD,IAAP53B,OAAgB,EAASA,EAAG6oB,UACnG,QAAIA,GACOA,EAAU/U,MAAM+jB,MAAK,SAAAjW,GAAC,OAAI+V,EAAWG,iBAAiB,IAAIj1B,EAAAA,EAASgmB,EAAU5kB,WAAY2d,EAAEjd,QAAQ,GAGlH,GAAC,CAAA7F,IAAA,0BAAApB,MACD,WACI,IAAIsC,EACyC,QAA5CA,EAAKxB,KAAKo5B,oCAAiD,IAAP53B,GAAyBA,EAAGipB,QAAQC,EAAAA,GAA4BG,SACzH,GAAC,CAAAvqB,IAAA,yBAAApB,MACD,WACI,IAAIsC,EACyC,QAA5CA,EAAKxB,KAAKo5B,oCAAiD,IAAP53B,GAAyBA,EAAG+3B,yBACrF,GAAC,CAAAj5B,IAAA,kCAAApB,MACD,WACI,IAAIsC,EACyC,QAA5CA,EAAKxB,KAAKo5B,oCAAiD,IAAP53B,GAAyBA,EAAGg4B,kCACrF,GAAC,CAAAl5B,IAAA,uBAAApB,MACD,WACI,IAAIsC,EACyC,QAA5CA,EAAKxB,KAAKo5B,oCAAiD,IAAP53B,GAAyBA,EAAGwoB,MACrF,GAAC,CAAA1pB,IAAA,2BAAApB,MACD,WACI,IAAIsC,EACyC,QAA5CA,EAAKxB,KAAKo5B,oCAAiD,IAAP53B,GAAyBA,EAAGi4B,UACrF,GAAC,CAAAn5B,IAAA,+BAAApB,MACD,WACI,IAAIsC,EACyC,QAA5CA,EAAKxB,KAAKo5B,oCAAiD,IAAP53B,GAAyBA,EAAGk4B,cACrF,KAACnB,CAAA,CAxDa,CAAgCL,IA0DlDK,GAAiB5xB,GAAW,CACxBc,GAAQ,EAAG+Q,GAAAA,KACZ+f,IAEI,IClHH/2B,GDkHSm3B,GAA2B,SAAAlI,IAAAjW,EAAAA,EAAAA,GAAAme,EAAAlI,GAAA,IAAAC,GAAAhW,EAAAA,EAAAA,GAAAie,GACpC,SAAAA,IAAc,IAAAlpB,EAI2C,OAJ3C1P,EAAAA,EAAAA,GAAA,KAAA44B,IACVlpB,EAAAihB,EAAAhxB,MAAA,KAASuH,YACJgd,mBAAqB,IAAIC,EAAAA,GAC9BzU,EAAKxF,YAAcwF,EAAKwU,mBAAmB/W,MAC3CuC,EAAKiZ,MAAQjZ,EAAK0U,UAAU,IAAI2E,EAAAA,IAAqBrZ,CACzD,CAYC,OAZA7P,EAAAA,EAAAA,GAAA+4B,EAAA,EAAAr4B,IAAA,QAAA0H,IACD,WACI,OAAOhI,KAAK0oB,MAAMxpB,KACtB,GAAC,CAAAoB,IAAA,WAAApB,MACD,SAAS8Y,EAAQ2Y,EAAmB/F,GAAa,IAAApa,EAAA,KAC7CxQ,KAAK0oB,MAAMxpB,MAAQ,IAAIsxB,GAAmCG,EAAmB3Y,GAAQ,kBAAMxH,EAAKyT,mBAAmBG,MAAM,GAAEwG,EAC/H,GAAC,CAAAtqB,IAAA,eAAApB,MACD,WACI,OAAOc,KAAK0oB,MAAMoH,cACtB,GAAC,CAAAxvB,IAAA,QAAApB,MACD,WACIc,KAAK0oB,MAAMle,OACf,KAACmuB,CAAA,CAlBmC,CAASrU,EAAAA,I,sHC3H7C3d,GAA0C,SAAUC,EAAYC,EAAQvG,EAAKwG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU9B,OAAQ+B,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQvG,GAAOwG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQvG,EAAKwG,QACpH,IAAK,IAAIS,EAAIX,EAAWzB,OAAS,EAAGoC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQvG,EAAK4G,GAAKH,EAAEF,EAAQvG,KAAS4G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQvG,EAAK4G,GAAIA,CAChE,EACIO,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQvG,GAAOqH,EAAUd,EAAQvG,EAAKoH,EAAa,CACxE,EAkBMiyB,GAA0C,QAA9Bn4B,GAAKo4B,OAAOC,oBAAiC,IAAPr4B,QAAgB,EAASA,GAAGs4B,aAAa,kBAAmB,CAAEC,WAAY,SAAA76B,GAAK,OAAIA,CAAK,IAC5I86B,GAAe,SAAAjW,IAAAvJ,EAAAA,EAAAA,GAAAwf,EAAAjW,GAAA,IAAAtJ,GAAAC,EAAAA,EAAAA,GAAAsf,GACf,SAAAA,EAAYhiB,EAAQ3V,EAAOo2B,EAAsBvd,GAAiB,IAAAra,EAgChD,OAhCgDd,EAAAA,EAAAA,GAAA,KAAAi6B,IAC9Dn5B,EAAA4Z,EAAAT,KAAA,OACKhC,OAASA,EACdnX,EAAKwB,MAAQA,EACbxB,EAAK43B,qBAAuBA,EAC5B53B,EAAKqa,gBAAkBA,EACvBra,EAAKmoB,UAAW,EAChBnoB,EAAKo5B,YAAcp5B,EAAKsjB,UAAUtjB,EAAK43B,qBAAqBI,eAAeqB,GAAmBr5B,EAAKmX,SACnGnX,EAAKs5B,sBAAwBt5B,EAAKsjB,UAAU,IAAIiW,GAAsBv5B,EAAKmX,OAAQnX,EAAKqa,gBAAgBmf,kBACxGx5B,EAAKy5B,2BAAwBh5B,EAC7BT,EAAK05B,sBAAwB15B,EAAKsjB,UAAU,IAAIqW,GAAsB35B,EAAKmX,SAC3EnX,EAAKsjB,UAAUtjB,EAAKmX,OAAO3N,0BAAyB,SAAChL,IAC7CA,EAAEiL,WAAW,KACVjL,EAAEiL,WAAW,MACbjL,EAAEiL,WAAW,KACbjL,EAAEiL,WAAW,KACbjL,EAAEiL,WAAW,KACbjL,EAAEiL,WAAW,KACbjL,EAAEiL,WAAW,MAChBzJ,EAAKwL,QAEb,KACAxL,EAAKsjB,WAAUjZ,EAAAA,EAAAA,KAAa,WACxB,IAAI1J,EACJX,EAAKmoB,UAAW,EAChBnoB,EAAKwL,SACiC,QAArC7K,EAAKX,EAAKy5B,6BAA0C,IAAP94B,GAAyBA,EAAG+C,UAC1E1D,EAAKy5B,2BAAwBh5B,CACjC,KACAT,EAAKsjB,UAAU9hB,EAAM4H,aAAY,WAC7BpJ,EAAKwL,QACT,KACAxL,EAAKwL,SAASxL,CAClB,CA4GC,OA5GAjB,EAAAA,EAAAA,GAAAo6B,EAAA,EAAA15B,IAAA,4BAAApB,MACD,SAA0Bu7B,GACtB,OAAQz6B,KAAKm6B,sBAAsBM,aAAeA,CACtD,GAAC,CAAAn6B,IAAA,SAAApB,MACD,WACI,IAAIsC,EACE6oB,EAAYrqB,KAAKqC,MAAMgoB,UAC7B,IAAKrqB,KAAKgY,OAAO7K,aAAekd,GAAarqB,KAAKgpB,SAI9C,OAHAhpB,KAAKi6B,YAAYzvB,QACjBxK,KAAKm6B,sBAAsB3vB,aAC3BxK,KAAKu6B,sBAAsB/vB,QAG/B,IAAMkwB,EAAc,IAAIprB,MAClBqrB,EAAkB,IAAIrrB,MAC5B,SAASsrB,EAAqBvX,EAAO7P,GACjC,GAAImnB,EAAgBx1B,OAAS,EAAG,CAC5B,IAAM01B,EAAWF,EAAgBA,EAAgBx1B,OAAS,GACtDqO,GACAqnB,EAASC,YAAY/2B,KAAK,IAAIg3B,GAAAA,GAAeF,EAAS1nB,QAAQhO,OAAS,EAAG01B,EAAS1nB,QAAQhO,OAAS,EAAIke,EAAM,GAAGle,OAAQqO,EAAW,IAExIqnB,EAAS1nB,SAAWkQ,EAAM,GAC1BA,EAAQA,EAAM2X,MAAM,EACxB,CAAC,IACuBv4B,EADvBE,GAAAC,EAAAA,EAAAA,GACkBygB,GAAK,IAAxB,IAAA1gB,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAtD,MAA0B,KAAfgG,EAAI/C,EAAAvD,MACXy7B,EAAgB52B,KAAK,CACjBoP,QAAS3N,EACTs1B,YAAatnB,EAAY,CAAC,IAAIunB,GAAAA,GAAe,EAAGv1B,EAAKL,OAAS,EAAGqO,EAAW,IAAyC,IAE7H,CAAC,OAAAxP,GAAArB,EAAAtD,EAAA2E,EAAA,SAAArB,EAAAsB,GAAA,CACL,CACIomB,aAAqB3G,EACrB1jB,KAAKu6B,sBAAsBU,eAAe,CACtC,CACIp7B,MAAO,IAAI+D,EAAAA,EAAMymB,EAAU5kB,WAAY4kB,EAAU1G,YAAa0G,EAAU5kB,WAAY4kB,EAAU1G,YAAc0G,EAAUllB,QACtHsF,QAAS,CACL8I,gBAAiB,oCACjBK,YAAa,2BAMzB5T,KAAKu6B,sBAAsBU,eAAe,IAE9C,IAGkC93B,EAH5B+3B,EAAiBl7B,KAAKgY,OAAOpN,WAAW+a,eAAe0E,EAAU5kB,YACnE01B,OAAwB75B,EACxB85B,EAAU,EAAEh4B,GAAAR,EAAAA,EAAAA,GACGynB,EAAU/U,OAAK,IAAlC,IAAAlS,EAAAP,MAAAM,EAAAC,EAAAN,KAAAtD,MAAoC,KAAzBqJ,EAAI1F,EAAAjE,MACPmkB,EAAQxa,EAAKwa,WACa/hB,IAA1B65B,GACAT,EAAY32B,KAAK,CACboC,OAAQ0C,EAAK1C,OACbmK,KAAM+S,EAAM,GACZI,QAAS5a,EAAK4a,UAElBJ,EAAQA,EAAM2X,MAAM,IAGpBJ,EAAqB,CAACM,EAAejY,UAAUmY,EAASvyB,EAAK1C,OAAS,SAAK7E,GAE3E+hB,EAAMle,OAAS,IACfy1B,EAAqBvX,EAAO,mBACE/hB,IAA1B65B,GAAuCtyB,EAAK1C,QAAU+0B,EAAe/1B,SACrEg2B,EAAwBtyB,EAAK1C,SAGrCi1B,EAAUvyB,EAAK1C,OAAS,CAC5B,CAAC,OAAAnC,GAAAZ,EAAA/D,EAAA2E,EAAA,SAAAZ,EAAAa,GAAA,MAC6B3C,IAA1B65B,GACAP,EAAqB,CAACM,EAAejY,UAAUmY,SAAW95B,GAE9DtB,KAAKi6B,YAAYoB,SAAShR,EAAU5kB,WAAYi1B,OAAuCp5B,IAA1B65B,EAAsC,CAAEh1B,OAAQg1B,EAAuBh2B,OAAQ+1B,EAAe/1B,OAAS,EAAIg2B,QAA0B75B,GAClMtB,KAAKm6B,sBAAsBmB,YAAYjR,EAAU5kB,WAAYk1B,EAAiBtQ,EAAU5H,6BAM9C,QAArCjhB,EAAKxB,KAAKs6B,6BAA0C,IAAP94B,GAAyBA,EAAG+C,UAC1EvE,KAAKs6B,2BAAwBh5B,CAErC,GAAC,CAAAhB,IAAA,sBAAApB,MACD,SAAoBoE,EAAUi4B,EAAeC,GAAsB,IAAA72B,EAAA,KACzD82B,EAAWz7B,KAAKgY,OAAOtN,UAAU,IACjCgxB,EAAUC,SAASC,cAAc,OACvCF,EAAQloB,UAAY,qCACpBqoB,EAAAA,GAAAA,GAAcH,EAASD,GACvB,IAAMK,EAASH,SAASC,cAAc,QACtCE,EAAOtoB,UAAY,iBACnBsoB,EAAOC,OAAOR,GACdG,EAAQK,OAAOD,GACf,IAAME,EAAUL,SAASC,cAAc,QACvCI,EAAQxoB,UAAY,uCACpBwoB,EAAQD,OAAO,YACfL,EAAQK,OAAOC,GACf,IAAMC,EAAkB,IAAI15B,EAAAA,GACtB25B,EAASP,SAASC,cAAc,OAUtC,OATAM,EAAO1oB,UAAY,8BACnB0oB,EAAOH,OAAO,IAAD7zB,OAAKszB,EAAoB,iBACtCS,EAAgB/4B,IAAIqd,GAAI4b,8BAA8BD,EAAQ,aAAa,SAAC78B,GACxE,IAAImC,EACkB,QAArBA,EAAKmD,EAAKtC,aAA0B,IAAPb,GAAyBA,EAAG+oB,aAAY,GACtElrB,EAAEwQ,iBACFlL,EAAKqT,OAAO+I,OAChB,KACA2a,EAAQK,OAAOG,GACR,IAAIE,GAA2Bp8B,KAAKgY,OAAQ1U,EAAUo4B,EAASO,EAC1E,KAACjC,CAAA,CA9Ic,CAAiC1V,EAAAA,IAgJpD0V,GAAkBrzB,GAAW,CACzBc,GAAQ,EAAG+Q,GAAAA,IACX/Q,GAAQ,EAAG2W,GAAAA,IACZ4b,IACwB,IACrBQ,GAAqB,WACvB,SAAAA,EAAYxiB,IAAQjY,EAAAA,EAAAA,GAAA,KAAAy6B,GAChBx6B,KAAKgY,OAASA,EACdhY,KAAK+wB,cAAgB,EACzB,CAYC,OAZAnxB,EAAAA,EAAAA,GAAA46B,EAAA,EAAAl6B,IAAA,iBAAApB,MACD,SAAe47B,GAAa,IAAAhtB,EAAA,KAExB9N,KAAKgY,OAAOhB,mBAAkB,SAAAC,GAC1BnJ,EAAKijB,cAAgB9Z,EAASE,iBAAiBrJ,EAAKijB,cAAe+J,EACvE,GACJ,GAAC,CAAAx6B,IAAA,QAAApB,MACD,WACIc,KAAKi7B,eAAe,GACxB,GAAC,CAAA36B,IAAA,UAAApB,MACD,WACIc,KAAKwK,OACT,KAACgwB,CAAA,CAhBsB,GAkBrBN,GAAiB,WACnB,SAAAA,EAAYliB,IAAQjY,EAAAA,EAAAA,GAAA,KAAAm6B,GAChBl6B,KAAKgY,OAASA,EACdhY,KAAK+wB,cAAgB,EACzB,CAsCC,OAtCAnxB,EAAAA,EAAAA,GAAAs6B,EAAA,EAAA55B,IAAA,UAAApB,MACD,WACIc,KAAKwK,OACT,GAAC,CAAAlK,IAAA,QAAApB,MACD,WAAQ,IAAAuQ,EAAA,KAEJzP,KAAKgY,OAAOhB,mBAAkB,SAAAC,GAC1BxH,EAAKshB,cAAgB9Z,EAASE,iBAAiB1H,EAAKshB,cAAe,GACvE,GACJ,GAAC,CAAAzwB,IAAA,WAAApB,MACD,SAASuG,EAAY6P,EAAO+mB,GAAY,IAAA7rB,EAAA,KAEpC,GADkBxQ,KAAKgY,OAAOpN,WAC9B,CAGA,IAAM0xB,EAAwB,IAAIhtB,MAC9B+sB,GACAC,EAAsBv4B,KAAK,CACvBlE,MAAO+D,EAAAA,EAAMC,cAAc,IAAIQ,EAAAA,EAASoB,EAAY42B,EAAWl2B,QAAS,IAAI9B,EAAAA,EAASoB,EAAY42B,EAAWl2B,OAASk2B,EAAWl3B,SAChIsF,QAAS,CACL8I,gBAAiB,oBACjBK,YAAa,uBAKzB5T,KAAKgY,OAAOhB,mBAAkB,SAAAC,GAC1BzG,EAAKugB,cAAgB9Z,EAASE,iBAAiB3G,EAAKugB,cAAezb,EAAMvQ,KAAI,SAAAqe,GACzE,MAAQ,CACJvjB,MAAO+D,EAAAA,EAAMC,cAAc,IAAIQ,EAAAA,EAASoB,EAAY2d,EAAEjd,SACtDsE,QAAS,CACLmJ,YAAa,aACb2oB,MAAO,CAAEppB,QAASiQ,EAAE9S,KAAMiD,gBAAiB6P,EAAEK,QAAU,gCAAkC,wBAAyBrQ,YAAaoB,GAAAA,GAAwBgoB,MACvJ3oB,iBAAiB,GAG7B,IAAG3L,OAAOo0B,GACd,GAvBA,CAwBJ,KAACpC,CAAA,CA1CkB,GA4CjBE,GAAqB,WAEvB,SAAAA,EAAYpiB,EAAQqiB,IAAiBt6B,EAAAA,EAAAA,GAAA,KAAAq6B,GACjCp6B,KAAKgY,OAASA,EACdhY,KAAKq6B,gBAAkBA,EACvBr6B,KAAKy8B,iBAAcn7B,CACvB,CAmCC,OAnCA1B,EAAAA,EAAAA,GAAAw6B,EAAA,EAAA95B,IAAA,aAAA0H,IALD,WAAmB,OAAOhI,KAAKy8B,WAAa,GAAC,CAAAn8B,IAAA,UAAApB,MAM7C,WACIc,KAAKwK,OACT,GAAC,CAAAlK,IAAA,QAAApB,MACD,WAAQ,IAAA6T,EAAA,KACJ/S,KAAKgY,OAAO0kB,iBAAgB,SAAC1L,GACrBje,EAAK0pB,cACLzL,EAAe2L,WAAW5pB,EAAK0pB,aAC/B1pB,EAAK0pB,iBAAcn7B,EAE3B,GACJ,GAAC,CAAAhB,IAAA,cAAApB,MACD,SAAYuG,EAAYk1B,EAAiBrQ,GAAsB,IAAAuG,EAAA,KACrDvL,EAAYtlB,KAAKgY,OAAOpN,WAC9B,GAAK0a,EAAL,CAGA,IAAQsX,EAAYtX,EAAUmI,aAAtBmP,QACR58B,KAAKgY,OAAO0kB,iBAAgB,SAAC1L,GACrBH,EAAK4L,cACLzL,EAAe2L,WAAW9L,EAAK4L,aAC/B5L,EAAK4L,iBAAcn7B,GAEvB,IAAMu7B,EAAgB/vB,KAAKC,IAAI4tB,EAAgBx1B,OAAQmlB,GACvD,GAAIuS,EAAgB,EAAG,CACnB,IAAMnB,EAAUC,SAASC,cAAc,QAYvD,SAAqBF,EAASkB,EAASvZ,EAAOhQ,EAAMgnB,GAChD,IAAMyC,EAAgCzpB,EAAKrL,IAAI,IACzC+0B,EAAyB1pB,EAAKrL,IAAI,KAElCg1B,EAAmB,OACnBC,EAA0B5pB,EAAKrL,IAAI,IACnCk1B,EAAgB7pB,EAAKrL,IAAI,IACzByzB,EAAWpoB,EAAKrL,IAAI,IACpBm1B,EAAa9pB,EAAKrL,IAAI,IACtBo1B,EAAK,IAAIC,GAAAA,GAAc,KAC7BD,EAAGE,aAAa,sCAChB,IAAK,IAAI/1B,EAAI,EAAG0gB,EAAM5E,EAAMle,OAAQoC,EAAI0gB,EAAK1gB,IAAK,CAC9C,IAAMg2B,EAAWla,EAAM9b,GACjB/B,EAAO+3B,EAASpqB,QACtBiqB,EAAGE,aAAa,yBAChBF,EAAGE,aAAa,iBAChBF,EAAGE,aAAaE,OAAOj2B,EAAI41B,IAC3BC,EAAGE,aAAa,yBAChB,IAAMG,EAAe7Y,EAAAA,GAAqBpf,GACpCk4B,EAAc9Y,EAAAA,GAAoBpf,GAClCm4B,EAAaC,GAAAA,EAAWC,YAAYr4B,EAAM60B,IAChDyD,EAAAA,GAAAA,IAAe,IAAIC,GAAAA,GAAiBtC,EAASuC,cAAgBlB,EAAgCrB,EAASwC,+BAAgCz4B,GAAM,EAAOi4B,EAAcC,EAAa,EAAGC,EAAYJ,EAASzC,YAAa8B,EAAS,EAAGnB,EAASyC,WAAYzC,EAAS0C,YAAa1C,EAAS2C,cAAerB,EAAwBC,EAAkBC,EAAyBC,IAAkBmB,GAAAA,GAAoBC,IAAK,MAAOlB,GACvZA,EAAGE,aAAa,SACpB,CACAF,EAAGE,aAAa,WAChBzB,EAAAA,GAAAA,GAAcH,EAASD,GACvB,IAAM8C,EAAOnB,EAAGoB,QACVC,EAAc9E,GAAWA,GAASI,WAAWwE,GAAQA,EAC3D7C,EAAQgD,UAAYD,CACxB,CAxCgBE,CAAYjD,EAASkB,EAASjC,EAAiB9J,EAAK7Y,OAAOyV,aAAcoD,EAAKwJ,iBAC9ExJ,EAAK4L,YAAczL,EAAe4N,QAAQ,CACtCC,gBAAiBp5B,EACjBo3B,cAAeA,EACfnB,QAAAA,EACAoD,oBAAqB,GAE7B,CACJ,GAlBA,CAmBJ,KAAC1E,CAAA,CAzCsB,GAwE1B,IACKgC,GAA0B,SAAA3L,IAAAjW,EAAAA,EAAAA,GAAA4hB,EAAA3L,GAAA,IAAAxV,GAAAP,EAAAA,EAAAA,GAAA0hB,GAC5B,SAAAA,EAAYpkB,EAAQ1U,EAAUo4B,EAASO,GAAiB,IAAAhK,EAWjB,OAXiBlyB,EAAAA,EAAAA,GAAA,KAAAq8B,IACpDnK,EAAAhX,EAAAjB,KAAA,OACKhC,OAASA,EACdia,EAAK3uB,SAAWA,EAChB2uB,EAAKyJ,QAAUA,EACfzJ,EAAK8M,qBAAsB,EAC3B9M,EAAK+M,mBAAoB,EACzB/M,EAAK9N,UAAU8X,GACfhK,EAAK9N,WAAUjZ,EAAAA,EAAAA,KAAa,WACxB+mB,EAAKja,OAAOinB,qBAAmBC,EAAAA,GAAAA,GAAAjN,GACnC,KACAA,EAAKja,OAAOmnB,kBAAgBD,EAAAA,GAAAA,GAAAjN,IAAOA,CACvC,CAYC,OAZAryB,EAAAA,EAAAA,GAAAw8B,EAAA,EAAA97B,IAAA,QAAApB,MACD,WACI,MAAO,mCACX,GAAC,CAAAoB,IAAA,aAAApB,MACD,WACI,OAAOc,KAAK07B,OAChB,GAAC,CAAAp7B,IAAA,cAAApB,MACD,WACI,MAAO,CACHoE,SAAUtD,KAAKsD,SACf87B,WAAY,CAAC,GAErB,KAAChD,CAAA,CAzB2B,CAAS9X,EAAAA,I,oCCvTrC3d,GAA0C,SAAUC,EAAYC,EAAQvG,EAAKwG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU9B,OAAQ+B,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQvG,GAAOwG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQvG,EAAKwG,QACpH,IAAK,IAAIS,EAAIX,EAAWzB,OAAS,EAAGoC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQvG,EAAK4G,GAAKH,EAAEF,EAAQvG,KAAS4G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQvG,EAAK4G,GAAIA,CAChE,EACIO,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQvG,GAAOqH,EAAUd,EAAQvG,EAAKoH,EAAa,CACxE,EACIjJ,GAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAeIigC,GAAmB,SAAAtb,IAAAvJ,EAAAA,EAAAA,GAAA6kB,EAAAtb,GAAA,IAAAtJ,GAAAC,EAAAA,EAAAA,GAAA2kB,GAQnB,SAAAA,EAAYrnB,EAAQygB,EAAsBtX,GAAmB,IAAAtgB,EAqC3C,OArC2Cd,EAAAA,EAAAA,GAAA,KAAAs/B,IACzDx+B,EAAA4Z,EAAAT,KAAA,OACKhC,OAASA,EACdnX,EAAK43B,qBAAuBA,EAC5B53B,EAAKsgB,kBAAoBA,EACzBtgB,EAAKy+B,qBAAsB,EAC3Bz+B,EAAK0+B,iBAAmB1+B,EAAKsjB,UAAU,IAAI2E,EAAAA,IAC3CjoB,EAAK2+B,4BAA8B3+B,EAAKsjB,UAAU,IAAID,EAAAA,IAMtDrjB,EAAK4+B,4BAAyBn+B,EAC9BT,EAAK6+B,kCAAoCL,EAAoBK,kCAAkCC,OAAO9+B,EAAKsgB,mBAC3GtgB,EAAKsjB,UAAUtjB,EAAKmX,OAAOnL,yBAAwB,SAACxN,GAChD,IAAImC,IACCnC,EAAEugC,WAAa/+B,EAAK4+B,wBAA0B5+B,EAAKmX,OAAOpN,WAAWi1B,0BAA4Bh/B,EAAK4+B,0BAChE,QAAtCj+B,EAAKX,EAAK0+B,iBAAiBrgC,aAA0B,IAAPsC,GAAyBA,EAAGs+B,YAAYC,wBAAwBC,QAC/Gn/B,EAAK4+B,4BAAyBn+B,EAEtC,KACAT,EAAKsjB,UAAUtjB,EAAKmX,OAAO4R,2BAA0B,SAACvqB,GAClD,IAAImC,EACa,IAAbnC,EAAEwqB,SACqC,QAAtCroB,EAAKX,EAAK0+B,iBAAiBrgC,aAA0B,IAAPsC,GAAyBA,EAAGs+B,YAAYC,wBAAwBC,QAC/Gn/B,EAAK4+B,4BAAyBn+B,EAEtC,KACAT,EAAKsjB,UAAUtjB,EAAKmX,OAAO7N,kBAAiB,WACxCtJ,EAAKwL,QACT,KACAxL,EAAKsjB,UAAUtjB,EAAKmX,OAAO3N,0BAAyB,SAAChL,IAC7CA,EAAEiL,WAAW,MAAmCjL,EAAEiL,WAAW,MAC7DzJ,EAAKwL,QAEb,KACAxL,EAAKwL,SAASxL,CAClB,CA3CC,OA4CDjB,EAAAA,EAAAA,GAAAy/B,EAAA,EAAA/+B,IAAA,cAAA0H,IA3CA,WACI,IAAIxG,EACJ,OAA8C,QAAtCA,EAAKxB,KAAKu/B,iBAAiBrgC,aAA0B,IAAPsC,OAAgB,EAASA,EAAGa,KACtF,GAAC,CAAA/B,IAAA,SAAApB,MAyCD,WACI,IAAM+gC,EAAiBjgC,KAAKgY,OAAOtN,UAAU,KACvCw1B,EAAuBlgC,KAAKgY,OAAOtN,UAAU,IACnD1K,KAAK0/B,kCAAkCz3B,IAAyC,WAArCi4B,EAAqBC,aAChE,IAAMC,EAAepgC,KAAKgY,OAAO7K,aAAe8yB,EAAexc,SAAWyc,EAAqBv1B,SAAW3K,KAAKs/B,qBAC3Gc,MAAmBpgC,KAAKu/B,iBAAiBrgC,QACzCc,KAAKu/B,iBAAiBrgC,WAAQoC,EAE9BtB,KAAKu/B,iBAAiBrgC,MAClBkhC,EAAepgC,KAAKy4B,qBAAqBI,eAAewH,GAA2BrgC,KAAKgY,aAClF1W,EACVtB,KAAKw/B,4BAA4Bpb,OAEzC,GAAC,CAAA9jB,IAAA,oBAAApB,MACD,SAAkBi6B,GACd,IAAI33B,EACJ,OAAoC,QAA3BA,EAAKxB,KAAKsgC,mBAAgC,IAAP9+B,OAAgB,EAASA,EAAG++B,kBAAkBpH,MAAgB,CAC9G,GAAC,CAAA74B,IAAA,4BAAApB,MACD,SAA0Bu7B,GACtB,IAAIj5B,EAAIC,EACR,OAAqG,QAA5FA,EAA4C,QAAtCD,EAAKxB,KAAKu/B,iBAAiBrgC,aAA0B,IAAPsC,OAAgB,EAASA,EAAG6zB,cAA2B,IAAP5zB,OAAgB,EAASA,EAAG++B,0BAA0B/F,MAAgB,CACvL,GAAC,CAAAn6B,IAAA,UAAApB,MACD,WACI,IAAIsC,EACJxB,KAAKs/B,qBAAsB,EACtBt/B,KAAKu/B,iBAAiBrgC,OACvBc,KAAKqM,SAEmB,QAA3B7K,EAAKxB,KAAKsgC,mBAAgC,IAAP9+B,GAAyBA,EAAGi/B,yBACpE,GAAC,CAAAngC,IAAA,kBAAApB,MACD,WACI,IAAIsC,EAAIC,EAAIqa,EACN4kB,EAAc1gC,KAAKy/B,uBACG,QAA3Bj+B,EAAKxB,KAAKsgC,mBAAgC,IAAP9+B,GAAyBA,EAAGm/B,kCACsB,QAArF7kB,EAAsC,QAAhCra,EAAKzB,KAAKu/B,wBAAqC,IAAP99B,OAAgB,EAASA,EAAGvC,aAA0B,IAAP4c,GAAyBA,EAAGgkB,YAAYC,wBAAwB93B,KAAI,GAElKjI,KAAKy/B,uBAAyC,OAAhBiB,QAAwC,IAAhBA,EAAyBA,EAAc1gC,KAAKgY,OAAOpN,WAAWi1B,yBACxH,GAAC,CAAAv/B,IAAA,SAAApB,MACD,WACI,IAAIsC,EACwB,QAA3BA,EAAKxB,KAAKsgC,mBAAgC,IAAP9+B,GAAyBA,EAAGo/B,wBACpE,GAAC,CAAAtgC,IAAA,OAAApB,MACD,WACI,IAAIsC,EACwB,QAA3BA,EAAKxB,KAAKsgC,mBAAgC,IAAP9+B,GAAyBA,EAAGq/B,sBACpE,GAAC,CAAAvgC,IAAA,2BAAApB,MACD,WACI,IAAIsC,EACwB,QAA3BA,EAAKxB,KAAKsgC,mBAAgC,IAAP9+B,GAAyBA,EAAG4pB,0BACpE,GAAC,CAAA9qB,IAAA,+BAAApB,MACD,WACI,IAAIsC,EACwB,QAA3BA,EAAKxB,KAAKsgC,mBAAgC,IAAP9+B,GAAyBA,EAAG6pB,8BACpE,IAAC,EAAA/qB,IAAA,MAAApB,MApGD,SAAW8Y,GACP,OAAOA,EAAOC,gBAAgBonB,EAAoBnnB,GACtD,KAACmnB,CAAA,CAHkB,CAAqC/a,EAAAA,IAuG5D+a,GAAoByB,wBAA0B,IAAIC,GAAAA,GAAc,2BAA2B,EAAOC,GAAAA,GAAa,0BAA2B,4CAC1I3B,GAAoB4B,+BAAiC,IAAIF,GAAAA,GAAc,kCAAkC,EAAOC,GAAAA,GAAa,iCAAkC,yDAC/J3B,GAAoB6B,8CAAgD,IAAIH,GAAAA,GAAc,iDAAiD,EAAMC,GAAAA,GAAa,gDAAiD,yGAI3M3B,GAAoBU,wBAA0B,IAAIgB,GAAAA,GAAc,2BAA2B,EAAOC,GAAAA,GAAa,0BAA2B,iDAC1I3B,GAAoBK,kCAAoC,IAAIqB,GAAAA,GAAc,qCAAqC,EAAOC,GAAAA,GAAa,oCAAqC,mEACxK3B,GAAoBnnB,GAAK,qCACzBmnB,GAAsB14B,GAAW,CAC7Bc,GAAQ,EAAG+Q,GAAAA,IACX/Q,GAAQ,EAAG+Z,GAAAA,KACZ6d,IAC4B,IACzB8B,IAAoBvhC,EAAAA,EAAAA,IACtB,SAAAuhC,EAAYhgB,IAAmBphB,EAAAA,EAAAA,GAAA,KAAAohC,GAC3BnhC,KAAKmhB,kBAAoBA,EACzBnhB,KAAKohC,wBAA0B/B,GAAoByB,wBAAwBnB,OAAO3/B,KAAKmhB,mBACvFnhB,KAAKqhC,oCAAsChC,GAAoB4B,+BAA+BtB,OAAO3/B,KAAKmhB,mBAC1GnhB,KAAKshC,mDAAqDjC,GAAoB6B,8CAA8CvB,OAAO3/B,KAAKmhB,mBACxInhB,KAAK+/B,wBAA0BV,GAAoBU,wBAAwBJ,OAAO3/B,KAAKmhB,kBAC3F,IAMAkf,GAAyB,SAAA5P,IAAAjW,EAAAA,EAAAA,GAAA6lB,EAAA5P,GAAA,IAAAxV,GAAAP,EAAAA,EAAAA,GAAA2lB,GACzB,SAAAA,EAAYroB,EAAQygB,EAAsBtX,GAAmB,IAAAxc,EAgBhC,OAhBgC5E,EAAAA,EAAAA,GAAA,KAAAsgC,IACzD17B,EAAAsW,EAAAjB,KAAA,OACKhC,OAASA,EACdrT,EAAK8zB,qBAAuBA,EAC5B9zB,EAAKwc,kBAAoBA,EACzBxc,EAAKm7B,YAAc,IAAIqB,GAAqBx8B,EAAKwc,mBACjDxc,EAAKtC,MAAQsC,EAAKwf,UAAUxf,EAAK8zB,qBAAqBI,eAAeN,GAAgB5zB,EAAKqT,SAC1FrT,EAAK0wB,OAAS1wB,EAAKwf,UAAUxf,EAAK8zB,qBAAqBI,eAAemB,GAAiBr1B,EAAKqT,OAAQrT,EAAKtC,QACzGsC,EAAKwf,WAAUjZ,EAAAA,EAAAA,KAAa,WACxBvG,EAAKm7B,YAAYsB,wBAAwBn5B,KAAI,GAC7CtD,EAAKm7B,YAAYuB,oCAAoCp5B,KAAI,GACzDtD,EAAKm7B,YAAYwB,mDAAmDr5B,KAAI,EAC5E,KACAtD,EAAKwf,UAAUxf,EAAKtC,MAAM4H,aAAY,WAClCtF,EAAK48B,mBACT,KACA58B,EAAK48B,oBAAoB58B,CAC7B,CAyBC,OAzBA/E,EAAAA,EAAAA,GAAAygC,EAAA,EAAA//B,IAAA,oBAAApB,MACD,WACI,IAAIsC,EACJxB,KAAK8/B,YAAYsB,wBAAwBn5B,SAA2G3G,KAAnD,QAAlDE,EAAKxB,KAAKqC,MAAM+2B,oCAAiD,IAAP53B,OAAgB,EAASA,EAAG6oB,YACrI,IAAImX,GAAwB,EACxBC,GAAuC,EACrCpX,EAAYrqB,KAAKqC,MAAMy2B,uBAAuBzO,UACpD,GAAMrqB,KAAKqC,MAAM+2B,8BAAgC/O,GAAaA,EAAU/U,MAAMnQ,OAAS,EAAG,CACtF,IAAAu8B,EAA0BrX,EAAU/U,MAAM,GAAlCnP,EAAMu7B,EAANv7B,OACFw7B,EADeD,EAALre,MACQ,GAGxB,GADsBld,GADOnG,KAAKgY,OAAOpN,WAAWgiB,oBAAoBvC,EAAU5kB,YAE/D,CACf,IAAIm8B,GAAgBC,EAAAA,EAAAA,IAAwBF,IACrB,IAAnBC,IACAA,EAAgBD,EAAUx8B,OAAS,GAEvCq8B,EAAwBI,EAAgB,EACxC,IAAMhF,EAAU58B,KAAKgY,OAAOpN,WAAW6iB,aAAamP,QAEpD6E,EADiCK,EAAAA,EAAcC,wBAAwBJ,EAAWC,EAAgB,EAAGhF,GACnCA,CACtE,CACJ,CACA58B,KAAK8/B,YAAYuB,oCAAoCp5B,IAAIu5B,GACzDxhC,KAAK8/B,YAAYwB,mDAAmDr5B,IAAIw5B,EAC5E,KAACpB,CAAA,CA3CwB,CAA2C/b,EAAAA,IA6CxE+b,GAA4B15B,GAAW,CACnCc,GAAQ,EAAG+Q,GAAAA,IACX/Q,GAAQ,EAAG+Z,GAAAA,KACZ6e,IACkC,IAC/B2B,GAA8B,SAAAC,IAAAznB,EAAAA,EAAAA,GAAAwnB,EAAAC,GAAA,IAAAvR,GAAAhW,EAAAA,EAAAA,GAAAsnB,GAChC,SAAAA,IAAc,OAAAjiC,EAAAA,EAAAA,GAAA,KAAAiiC,GAAAtR,EAAA1W,KAAA,KACJ,CACF5I,GAAI4wB,EAA+B9pB,GACnCnW,MAAOi/B,GAAAA,GAAa,gCAAiC,+BACrDkB,MAAO,8BACPlgB,aAAcmgB,GAAAA,GAAeC,IAAIC,EAAAA,EAAkBC,SAAUjD,GAAoByB,yBACjFyB,OAAQ,CACJC,OAAQ,IACRC,QAAS,MAGrB,CASC,OATA7iC,EAAAA,EAAAA,GAAAoiC,EAAA,EAAA1hC,IAAA,MAAApB,MACD,SAAI+X,EAAUe,GACV,OAAOvZ,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAA8hC,EAAA,OAAAhiC,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3B,MAAA,QAC7BsjC,EAAarD,GAAoBr3B,IAAIgQ,MAEvC0qB,EAAWtX,2BACXpT,EAAO+I,SACV,wBAAAhgB,EAAAQ,OAAA,GAAAX,EAAA,IAET,KAACohC,CAAA,CArB+B,CAASW,EAAAA,IAuB7CX,GAA+B9pB,GAAKiK,EAAAA,GACM,IACpCygB,GAAkC,SAAAC,IAAAroB,EAAAA,EAAAA,GAAAooB,EAAAC,GAAA,IAAAC,GAAApoB,EAAAA,EAAAA,GAAAkoB,GACpC,SAAAA,IAAc,OAAA7iC,EAAAA,EAAAA,GAAA,KAAA6iC,GAAAE,EAAA9oB,KAAA,KACJ,CACF5I,GAAIwxB,EAAmC1qB,GACvCnW,MAAOi/B,GAAAA,GAAa,oCAAqC,mCACzDkB,MAAO,kCACPlgB,aAAcmgB,GAAAA,GAAeC,IAAIC,EAAAA,EAAkBC,SAAUjD,GAAoByB,yBACjFyB,OAAQ,CACJC,OAAQ,IACRC,QAAS,MAGrB,CASC,OATA7iC,EAAAA,EAAAA,GAAAgjC,EAAA,EAAAtiC,IAAA,MAAApB,MACD,SAAI+X,EAAUe,GACV,OAAOvZ,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAe,IAAA,IAAAghC,EAAA,OAAAhiC,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAxC,MAAA,QAC7BsjC,EAAarD,GAAoBr3B,IAAIgQ,MAEvC0qB,EAAWrX,+BACXrT,EAAO+I,SACV,wBAAAnf,EAAAL,OAAA,GAAAG,EAAA,IAET,KAACkhC,CAAA,CArBmC,CAASD,EAAAA,IAuBjDC,GAAmC1qB,GAAKgK,EAAAA,GAEjC,IAAM6gB,GAA6B,SAAAC,IAAAxoB,EAAAA,EAAAA,GAAAuoB,EAAAC,GAAA,IAAAC,GAAAvoB,EAAAA,EAAAA,GAAAqoB,GACtC,SAAAA,IAAc,OAAAhjC,EAAAA,EAAAA,GAAA,KAAAgjC,GAAAE,EAAAjpB,KAAA,KACJ,CACF5I,GAAI,sCACJrP,MAAOi/B,GAAAA,GAAa,+BAAgC,6BACpDkB,MAAO,4BACPlgB,aAAcqgB,EAAAA,EAAkBC,UAExC,CAMC,OANA1iC,EAAAA,EAAAA,GAAAmjC,EAAA,EAAAziC,IAAA,MAAApB,MACD,SAAI+X,EAAUe,GACV,OAAOvZ,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAqE,IAAA,IAAA09B,EAAA,OAAAhiC,EAAAA,EAAAA,KAAAI,MAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAA7F,MAAA,OAEpB,QADTsjC,EAAarD,GAAoBr3B,IAAIgQ,UACL,IAAf0qB,GAAiCA,EAAWjY,UAAU,wBAAAxlB,EAAA1D,OAAA,GAAAyD,EAAA,IAErF,KAAC+9B,CAAA,CAdqC,CAASJ,EAAAA,IAgBtCO,GAAgC,SAAAC,IAAA3oB,EAAAA,EAAAA,GAAA0oB,EAAAC,GAAA,IAAAC,GAAA1oB,EAAAA,EAAAA,GAAAwoB,GACzC,SAAAA,IAAc,OAAAnjC,EAAAA,EAAAA,GAAA,KAAAmjC,GAAAE,EAAAppB,KAAA,KACJ,CACF5I,GAAI,6CACJrP,MAAOi/B,GAAAA,GAAa,sCAAuC,yCAC3DkB,MAAO,wCACPlgB,aAAcmgB,GAAAA,GAAeC,IAAIC,EAAAA,EAAkBC,SAAUjD,GAAoByB,yBACjFyB,OAAQ,CACJC,OAAQ,IACRC,QAAS,MAEbY,SAAU,CAAC,CACHC,OAAQjkB,GAAAA,GAAOkkB,wBACflmB,MAAO2jB,GAAAA,GAAa,aAAc,eAClC1Y,MAAO,UACPkb,MAAO,KAGvB,CAQC,OARA5jC,EAAAA,EAAAA,GAAAsjC,EAAA,EAAA5iC,IAAA,MAAApB,MACD,SAAI+X,EAAUe,GACV,OAAOvZ,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAA8D,IAAA,IAAAi+B,EAAA,OAAAhiC,EAAAA,EAAAA,KAAAI,MAAA,SAAA8D,GAAA,cAAAA,EAAA5D,KAAA4D,EAAAxF,MAAA,QAC7BsjC,EAAarD,GAAoBr3B,IAAIgQ,KAEvC0qB,EAAWe,kBACd,wBAAA7+B,EAAArD,OAAA,GAAAkD,EAAA,IAET,KAACy+B,CAAA,CA1BwC,CAASP,EAAAA,IA4BzCe,GAAsB,SAAAC,IAAAnpB,EAAAA,EAAAA,GAAAkpB,EAAAC,GAAA,IAAAC,GAAAlpB,EAAAA,EAAAA,GAAAgpB,GAC/B,SAAAA,IAAc,OAAA3jC,EAAAA,EAAAA,GAAA,KAAA2jC,GAAAE,EAAA5pB,KAAA,KACJ,CACF5I,GAAI6Q,EAAAA,GACJlgB,MAAOi/B,GAAAA,GAAa,8BAA+B,4BACnDkB,MAAO,2BACPlgB,aAAcqd,GAAoByB,wBAClCuC,SAAU,CAAC,CACHC,OAAQjkB,GAAAA,GAAOkkB,wBACflmB,MAAO2jB,GAAAA,GAAa,SAAU,UAC9B1Y,MAAO,UACPkb,MAAO,IAEfjB,OAAQ,CACJE,QAAS,EACTD,OAAQ,IACRqB,OAAQ1B,GAAAA,GAAeC,IAAI/C,GAAoByB,wBAAyBuB,EAAAA,EAAkByB,cAAcC,YAAa1E,GAAoB6B,iDAGrJ,CASC,OATAthC,EAAAA,EAAAA,GAAA8jC,EAAA,EAAApjC,IAAA,MAAApB,MACD,SAAI+X,EAAUe,GACV,OAAOvZ,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAqQ,IAAA,IAAA0xB,EAAA,OAAAhiC,EAAAA,EAAAA,KAAAI,MAAA,SAAAoQ,GAAA,cAAAA,EAAAlQ,KAAAkQ,EAAA9R,MAAA,QAC7BsjC,EAAarD,GAAoBr3B,IAAIgQ,MAEvC0qB,EAAWlU,SACXkU,EAAW1qB,OAAO+I,SACrB,wBAAA7P,EAAA3P,OAAA,GAAAyP,EAAA,IAET,KAAC0yB,CAAA,CA5B8B,CAASf,EAAAA,IA8BtCqB,GAAoB,SAAAC,IAAAzpB,EAAAA,EAAAA,GAAAwpB,EAAAC,GAAA,IAAAC,GAAAxpB,EAAAA,EAAAA,GAAAspB,GACtB,SAAAA,IAAc,OAAAjkC,EAAAA,EAAAA,GAAA,KAAAikC,GAAAE,EAAAlqB,KAAA,KACJ,CACF5I,GAAI4yB,EAAqB9rB,GACzBnW,MAAOi/B,GAAAA,GAAa,4BAA6B,0BACjDkB,MAAO,yBACPlgB,aAAcqd,GAAoByB,wBAClCyB,OAAQ,CACJC,OAAQ,IACRC,QAAS,IAGrB,CAQC,OARA7iC,EAAAA,EAAAA,GAAAokC,EAAA,EAAA1jC,IAAA,MAAApB,MACD,SAAI+X,EAAUe,GACV,OAAOvZ,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAmY,IAAA,IAAA4pB,EAAA,OAAAhiC,EAAAA,EAAAA,KAAAI,MAAA,SAAAkY,GAAA,cAAAA,EAAAhY,KAAAgY,EAAA5Z,MAAA,QAC7BsjC,EAAarD,GAAoBr3B,IAAIgQ,KAEvC0qB,EAAW1Y,OACd,wBAAAhR,EAAAzX,OAAA,GAAAuX,EAAA,IAET,KAACkrB,CAAA,CApBqB,CAASrB,EAAAA,IAsBnCqB,GAAqB9rB,GAAK,mCACM,IAC1BisB,GAAuC,SAAAC,IAAA5pB,EAAAA,EAAAA,GAAA2pB,EAAAC,GAAA,IAAAC,GAAA3pB,EAAAA,EAAAA,GAAAypB,GACzC,SAAAA,IAAc,OAAApkC,EAAAA,EAAAA,GAAA,KAAAokC,GAAAE,EAAArqB,KAAA,KACJ,CACF5I,GAAI+yB,EAAwCjsB,GAC5CmF,MAAO2jB,GAAAA,GAAa,yCAA0C,uBAC9DsD,IAAI,EACJtiB,kBAAc1gB,EACdijC,KAAM,CAAC,CACCnzB,GAAIiO,GAAAA,GAAOkkB,wBACXjb,MAAO,YACPkb,MAAO,KAEfgB,QAASnF,GAAoBK,mCAErC,CAQC,OARA9/B,EAAAA,EAAAA,GAAAukC,EAAA,EAAA7jC,IAAA,MAAApB,MACD,SAAI+X,EAAUe,GACV,OAAOvZ,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAA6wB,IAAA,IAAAiT,EAAAC,EAAAre,EAAA,OAAA3lB,EAAAA,EAAAA,KAAAI,MAAA,SAAAoxB,GAAA,cAAAA,EAAAlxB,KAAAkxB,EAAA9yB,MAAA,OAC7BqlC,EAAgBxtB,EAASjP,IAAIsW,EAAAA,IAC7BomB,EAAeD,EAAc9iB,SAAS,oCACtC0E,EAA4B,WAAjBqe,EAA4B,UAAY,SACzDD,EAAcE,YAAY,mCAAoCte,GAAU,wBAAA6L,EAAA3wB,OAAA,GAAAiwB,EAAA,IAEhF,KAAC2S,CAAA,CAtBwC,CAASS,GAAAA,IAwBtDT,GAAwCjsB,GAAK,sDAEtC,IAAM2sB,GAAc,SAAAC,IAAAtqB,EAAAA,EAAAA,GAAAqqB,EAAAC,GAAA,IAAAC,GAAArqB,EAAAA,EAAAA,GAAAmqB,GACvB,SAAAA,IAAc,OAAA9kC,EAAAA,EAAAA,GAAA,KAAA8kC,GAAAE,EAAA/qB,KAAA,KACJ,CACF5I,GAAI,mCACJrP,MAAOi/B,GAAAA,GAAa,4BAA6B,oBACjDkB,MAAO,mBACPlgB,aAAcmgB,GAAAA,GAAeC,IAAIC,EAAAA,EAAkBC,SAAUjD,GAAoBU,yBACjFwC,OAAQ,CACJC,OAAQ,IACRC,QAAS,KACToB,OAAQ1B,GAAAA,GAAeC,IAAIC,EAAAA,EAAkBC,SAAUjD,GAAoBU,0BAE/EsD,SAAU,CAAC,CACHC,OAAQjkB,GAAAA,GAAOkkB,wBACflmB,MAAO2jB,GAAAA,GAAa,iBAAkB,oBACtC1Y,MAAO,YACPkb,MAAO,KAGvB,CAMC,OANA5jC,EAAAA,EAAAA,GAAAilC,EAAA,EAAAvkC,IAAA,MAAApB,MACD,SAAI+X,EAAUe,GACV,IAAIxW,EACJ,OAAO/C,GAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAqkC,IAAA,OAAAtkC,EAAAA,EAAAA,KAAAI,MAAA,SAAAmkC,GAAA,cAAAA,EAAAjkC,KAAAikC,EAAA7lC,MAAA,OACN,QAA5BoC,EAAKwW,EAAOpN,kBAA+B,IAAPpJ,GAAyBA,EAAG0jC,OAAO,wBAAAD,EAAA1jC,OAAA,GAAAyjC,EAAA,IAEhF,KAACH,CAAA,CAzBsB,CAASlC,EAAAA,I,4DClYhCh8B,GAA0C,SAAUC,EAAYC,EAAQvG,EAAKwG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU9B,OAAQ+B,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQvG,GAAOwG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQvG,EAAKwG,QACpH,IAAK,IAAIS,EAAIX,EAAWzB,OAAS,EAAGoC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQvG,EAAK4G,GAAKH,EAAEF,EAAQvG,KAAS4G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQvG,EAAK4G,GAAIA,CAChE,EACIO,GAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQvG,GAAOqH,EAAUd,EAAQvG,EAAKoH,EAAa,CACxE,EAeay9B,GAAsB,WAC/B,SAAAA,EAAYxqB,EAAO9a,EAAO6iC,IAAY3iC,EAAAA,EAAAA,GAAA,KAAAolC,GAClCnlC,KAAK2a,MAAQA,EACb3a,KAAKH,MAAQA,EACbG,KAAK0iC,WAAaA,CACtB,CA8BC,OA9BA9iC,EAAAA,EAAAA,GAAAulC,EAAA,EAAA7kC,IAAA,wBAAApB,MACD,SAAsBiB,GAClB,OAAwB,IAAhBA,EAAOyQ,MACR5Q,KAAKH,MAAM+F,aAAezF,EAAON,MAAM+F,aACvC5F,KAAKH,MAAMgG,WAAa1F,EAAON,MAAMgG,SAChD,GAAC,CAAAvF,IAAA,yBAAApB,MACD,WACI,IAAIsC,EAAIC,EAAIqa,EAC8K,QAAzLA,EAAwH,QAAlHra,EAA4C,QAAtCD,EAAKxB,KAAK0iC,WAAWpC,mBAAgC,IAAP9+B,OAAgB,EAASA,EAAG43B,oCAAiD,IAAP33B,OAAgB,EAASA,EAAGonB,kBAAkB3pB,aAA0B,IAAP4c,GAAyBA,EAAGgP,iCAClO,GAAC,CAAAxqB,IAAA,4BAAApB,MACD,WACI,IAAIsC,EAAIC,EACFqoB,EAA6H,QAAlHroB,EAA4C,QAAtCD,EAAKxB,KAAK0iC,WAAWpC,mBAAgC,IAAP9+B,OAAgB,EAASA,EAAG43B,oCAAiD,IAAP33B,OAAgB,EAASA,EAAGonB,kBAAkB3pB,MACzL,GAAkB,OAAZ4qB,QAAgC,IAAZA,OAAqB,EAASA,EAAQsb,2BAGhE,OAAmB,OAAZtb,QAAgC,IAAZA,OAAqB,EAASA,EAAQub,+BACrE,GAAC,CAAA/kC,IAAA,2BAAApB,MACD,WACI,IAAIsC,EAAIC,EAAIqa,EACZ,OAAiM,QAAzLA,EAAwH,QAAlHra,EAA4C,QAAtCD,EAAKxB,KAAK0iC,WAAWpC,mBAAgC,IAAP9+B,OAAgB,EAASA,EAAG43B,oCAAiD,IAAP33B,OAAgB,EAASA,EAAGonB,kBAAkB3pB,aAA0B,IAAP4c,OAAgB,EAASA,EAAGwpB,sBACzO,GAAC,CAAAhlC,IAAA,cAAApB,MACD,SAAYqmC,GACR,IAAI/jC,EAAIC,EAER,OAD6H,QAAlHA,EAA4C,QAAtCD,EAAKxB,KAAK0iC,WAAWpC,mBAAgC,IAAP9+B,OAAgB,EAASA,EAAG43B,oCAAiD,IAAP33B,OAAgB,EAASA,EAAGwI,YAAYs7B,KACjKjhB,EAAAA,GAAWvU,IAC3B,GAAC,CAAAzP,IAAA,WAAA0H,IACD,WACI,IAAIxG,EAAIC,EAAIqa,EACZ,OAAkM,QAAzLA,EAAwH,QAAlHra,EAA4C,QAAtCD,EAAKxB,KAAK0iC,WAAWpC,mBAAgC,IAAP9+B,OAAgB,EAASA,EAAG43B,oCAAiD,IAAP33B,OAAgB,EAASA,EAAGonB,kBAAkB3pB,aAA0B,IAAP4c,OAAgB,EAASA,EAAGyU,WAAa,EACvP,KAAC4U,CAAA,CAnC8B,GAqC/BK,GAAiC,WACjC,SAAAA,EAAYx8B,EAASy8B,EAAkBC,EAAgBC,EAAsBC,EAAuBC,IAAmB9lC,EAAAA,EAAAA,GAAA,KAAAylC,GACnHxlC,KAAKgJ,QAAUA,EACfhJ,KAAKylC,iBAAmBA,EACxBzlC,KAAK0lC,eAAiBA,EACtB1lC,KAAK2lC,qBAAuBA,EAC5B3lC,KAAK4lC,sBAAwBA,EAC7B5lC,KAAK6lC,kBAAoBA,EACzB7lC,KAAKub,aAAe,CACxB,CA4EC,OA5EA3b,EAAAA,EAAAA,GAAA4lC,EAAA,EAAAllC,IAAA,qBAAApB,MACD,SAAmBkP,GACf,IAAMs0B,EAAarD,GAAoBr3B,IAAIhI,KAAKgJ,SAChD,IAAK05B,EACD,OAAO,KAEX,IAAM77B,EAASuH,EAAWvH,OAC1B,GAAoB,IAAhBA,EAAO+J,KAAoD,CAE3D,IAAMk1B,EAAej/B,EAAO+I,OAC5B,GAAI8yB,EAAWlC,0BAA0BsF,EAAarL,YAClD,OAAO,IAAI3f,EAAAA,GAA0B,IAAM9a,KAAM4D,EAAAA,EAAMC,cAAc7D,KAAKgJ,QAAQ4B,WAAWrH,iBAAiBuiC,EAAaC,gBAAkBD,EAAaxiC,WAAY8K,EAAWlB,MAAMsO,KAAMpN,EAAWlB,MAAMuO,MAAM,EAE5N,CACA,GAAoB,IAAhB5U,EAAO+J,MAEH8xB,EAAWnC,kBAAkB15B,EAAOhH,OACpC,OAAO,IAAIib,EAAAA,GAA0B,IAAM9a,KAAM6G,EAAOhH,MAAOuO,EAAWlB,MAAMsO,KAAMpN,EAAWlB,MAAMuO,MAAM,GAGrH,GAAoB,IAAhB5U,EAAO+J,OAEuB/J,EAAO+I,OAAOo2B,uBACftD,EAAWnC,kBAAkB15B,EAAOhH,QAC7D,OAAO,IAAIib,EAAAA,GAA0B,IAAM9a,KAAM6G,EAAOhH,MAAOuO,EAAWlB,MAAMsO,KAAMpN,EAAWlB,MAAMuO,MAAM,GAGrH,OAAO,IACX,GAAC,CAAAnb,IAAA,cAAApB,MACD,SAAYiB,EAAQ8lC,GAChB,GAAgF,WAA5EjmC,KAAKgJ,QAAQ0B,UAAU,IAAqCy1B,YAC5D,MAAO,GAEX,IAAMuC,EAAarD,GAAoBr3B,IAAIhI,KAAKgJ,SAChD,OAAI05B,GAAcA,EAAWnC,kBAAkBpgC,EAAON,OAC3C,CAAC,IAAIslC,GAAuBnlC,KAAMG,EAAON,MAAO6iC,IAEpD,EACX,GAAC,CAAApiC,IAAA,mBAAApB,MACD,SAAiBqyB,EAAS2U,GACtB,IAAMjK,EAAkB,IAAI15B,EAAAA,GACtBsG,EAAOq9B,EAAW,GACxBlmC,KAAK6lC,kBAAkBM,WAAW,+BAC9BnmC,KAAK2lC,qBAAqBS,2BAC1BpmC,KAAKqmC,uBAAuB9U,EAAS1oB,EAAMozB,GAE/C,IAAMqK,EAAItmC,KAAK4lC,sBAAsB/M,eAAe3O,EAAAA,EAAoClqB,KAAKgJ,SAAS,GAOtG,OANAuoB,EAAQgV,SAASC,YAAYF,EAAElmB,cAC/BkmB,EAAEj6B,OAAO,KAAMxD,EAAK49B,4BAA8B,EAAG59B,EAAK69B,4BAA6B79B,EAAK0nB,UAC5F1nB,EAAK89B,yBACL1K,EAAgB/4B,IAAI2F,EAAKoB,aAAY,WACjCq8B,EAAEj6B,OAAO,KAAMxD,EAAK49B,4BAA8B,EAAG59B,EAAK69B,4BAA6B79B,EAAK0nB,SAChG,KACO0L,CACX,GAAC,CAAA37B,IAAA,yBAAApB,MACD,SAAuBqyB,EAAS1oB,EAAMozB,GAClC,IAAIz6B,EAAIC,EACFmlC,EAAIrmB,GAAIqmB,EACRC,EAAuBD,EAAE,gCACzBE,EAAuBvmB,GAAIwb,OAAO8K,EAAsBD,EAAE,uBAC1DG,EAAW9K,EAAgB/4B,IAAI,IAAI8jC,GAAAA,EAAiB,CAAEhvB,OAAQhY,KAAKgJ,SAAWhJ,KAAKylC,iBAAkBzlC,KAAK0lC,iBAU1Grb,EAAyH,QAA5G5oB,EAA4C,QAAtCD,EAAKqH,EAAK65B,WAAWpC,mBAAgC,IAAP9+B,OAAgB,EAASA,EAAGs3B,8BAA2C,IAAPr3B,OAAgB,EAASA,EAAG4oB,UACnK,GAAIA,EAAW,CACX,IAAM3H,EAAW1iB,KAAKgJ,QAAQ4B,WAAW+a,eAAe0E,EAAU5kB,aAXvD,SAACwhC,GACZhL,EAAgB/4B,IAAI6jC,EAASG,kBAAiB,WAC1CJ,EAAqBtzB,UAAY,qCACjC+d,EAAQ4V,mBACZ,KACA,IAAMC,EAA4BpG,GAAAA,GAAa,0BAA2B,eACpEqG,EAAmBpL,EAAgB/4B,IAAI6jC,EAASO,QAAO,IAAI9qB,GAAAA,IAAiBC,WAAW2qB,GAA2BG,gBAAgB,OAAQN,KAChJH,EAAqBU,gBAAgBH,EAAiBI,QAC1D,CAIIH,CAAOjd,EAAUqd,sBAAsBhlB,GAC3C,CACA6O,EAAQgV,SAASC,YAAYK,EACjC,KAACrB,CAAA,CArFgC,GAuFrCA,GAAoC7+B,GAAW,CAC3Cc,GAAQ,EAAG2W,GAAAA,GACX3W,GAAQ,EAAG4W,GAAAA,IACX5W,GAAQ,EAAGkgC,GAAAA,GACXlgC,GAAQ,EAAG+Q,GAAAA,IACX/Q,GAAQ,EAAGmgC,GAAAA,IACZpC,KCpJHjnB,EAAAA,EAAAA,IAA2B8gB,GAAoBnnB,GAAImnB,GAAqB,IACxEwI,EAAAA,EAAAA,IAAqB9E,KACrB8E,EAAAA,EAAAA,IAAqB7F,KACrB6F,EAAAA,EAAAA,IAAqBjF,KACrBiF,EAAAA,EAAAA,IAAqB3E,KACrB2E,EAAAA,EAAAA,IAAqBnE,KACrBmE,EAAAA,EAAAA,IAAqB7D,KACrB6D,EAAAA,EAAAA,IAAqBhD,KACrBiD,EAAAA,GAAAA,IAAgB3D,IAChB3lB,EAAAA,GAAyBC,SAAS+mB,G,qYCd9B7+B,EAA0C,SAAUC,EAAYC,EAAQvG,EAAKwG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU9B,OAAQ+B,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQvG,GAAOwG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQvG,EAAKwG,QACpH,IAAK,IAAIS,EAAIX,EAAWzB,OAAS,EAAGoC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQvG,EAAK4G,GAAKH,EAAEF,EAAQvG,KAAS4G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQvG,EAAK4G,GAAIA,CAChE,EACIO,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQvG,GAAOqH,EAAUd,EAAQvG,EAAKoH,EAAa,CACxE,EAuBMqgC,GAAgCC,EAAAA,EAAAA,IAAa,+BAAgCC,EAAAA,EAAQC,cAActrB,EAAAA,EAAAA,IAAS,yBAA0B,uCACtIurB,GAAoCH,EAAAA,EAAAA,IAAa,mCAAoCC,EAAAA,EAAQG,aAAaxrB,EAAAA,EAAAA,IAAS,6BAA8B,2CACnJsN,EAAkC,SAAAnG,IAAAvJ,EAAAA,EAAAA,GAAA0P,EAAAnG,GAAA,IAAAtJ,GAAAC,EAAAA,EAAAA,GAAAwP,GAYlC,SAAAA,EAAYlS,EAAQqwB,EAAYj/B,EAAiBqvB,EAAsB6P,EAAmBC,EAAoBC,GAAc,IAAA3nC,GAAAd,EAAAA,EAAAA,GAAA,KAAAmqB,IACxHrpB,EAAA4Z,EAAAT,KAAA,OACKhC,OAASA,EACdnX,EAAKwnC,WAAaA,EAClBxnC,EAAKuI,gBAAkBA,EACvBvI,EAAKynC,kBAAoBA,EACzBznC,EAAK0nC,mBAAqBA,EAC1B1nC,EAAK2nC,aAAeA,EACpB3nC,EAAKuQ,GAAK,qCAAHlJ,OAAwCgiB,EAAmC9Y,MAClFvQ,EAAKk+B,qBAAsB,EAC3Bl+B,EAAKm+B,mBAAoB,EACzBn+B,EAAK4nC,OAAQC,EAAAA,EAAAA,GAAE,6BAA8B,CAAEl1B,UAAW3S,EAAKwnC,WAAa,cAAgB,IAAM,EAC9FK,EAAAA,EAAAA,GAAE,MAAO,CAAEzzB,MAAO,CAAEV,QAAS,SAAY,EACrCm0B,EAAAA,EAAAA,GAAE,gBAAiB,CAAEl1B,UAAW,oBAChCk1B,EAAAA,EAAAA,GAAE,mBAGV7nC,EAAKyC,SAAW,KAChBzC,EAAK8nC,eAAiB9nC,EAAK+nC,oBAAoB1mB,EAAAA,IAAsCtF,EAAAA,EAAAA,IAAS,WAAY,YAAaisB,EAAAA,EAAUC,YAAYX,IAC7ItnC,EAAKkoC,+BAAiC,IAAIrpB,EAAAA,GAAO,iDAAkD,QAAIpe,GAAW,GAClHT,EAAKmoC,WAAanoC,EAAK+nC,oBAAoBzmB,EAAAA,IAAkCvF,EAAAA,EAAAA,IAAS,OAAQ,QAASisB,EAAAA,EAAUC,YAAYf,IAE7HlnC,EAAKooC,8BAAgCpoC,EAAKsjB,UAAUtjB,EAAK2nC,aAAaU,WAAW7pB,EAAAA,GAAO8pB,yBAA0BtoC,EAAK0nC,qBACvH1nC,EAAKuoC,4CAA8CvoC,EAAKsjB,UAAU,IAAI3Y,EAAAA,IAAiB,WACnF3K,EAAKkoC,+BAA+BhnC,MAAQ,EAChD,GAAG,MACHlB,EAAKwoC,wBAA0BxoC,EAAKsjB,UAAU,IAAI3Y,EAAAA,IAAiB,WAC/D3K,EAAK8nC,eAAeh+B,QAAU9J,EAAKmoC,WAAWr+B,SAAU,CAC5D,GAAG,MACH,IAAM2+B,EAAYzoC,EAAKsjB,UAAU,IAAIolB,EAAAA,EAAU1oC,EAAK4nC,MAAMa,YActD,OAbJA,EAAUvlC,KAAKlD,EAAK8nC,eAAgB,CAAEa,MAAM,EAAMznC,OAAO,IACzDunC,EAAUvlC,KAAKlD,EAAKkoC,gCACpBO,EAAUvlC,KAAKlD,EAAKmoC,WAAY,CAAEQ,MAAM,EAAMznC,OAAO,IACrDlB,EAAK4oC,QAAU5oC,EAAKsjB,UAAUsU,EAAqBI,eAAe6Q,EAAgC7oC,EAAK4nC,MAAMgB,QAASpqB,EAAAA,GAAOkkB,wBAAyB,CAClJoG,YAAa,CAAE/pB,kBAAkB,GACjCgqB,eAAgB,CAAEC,aAAc,SAAAC,GAAC,OAAIA,EAAE7jB,WAAW,UAAU,GAC5D8jB,uBAAwB,SAACzoB,EAAQ7W,GAC7B,OAAO6W,aAAkB3B,EAAAA,GAAiB8Y,EAAqBI,eAAemR,EAAmB1oB,OAAQhgB,QAAaA,CAC1H,EACA2oC,gBAAiB,6BAErBppC,EAAKsjB,UAAUtjB,EAAK4oC,QAAQS,+BAA8B,SAAA7qC,GACtD6qB,EAAmCigB,iBAAmB9qC,CAC1D,KAAIwB,CACR,CAvD8D,OAuD7DjB,EAAAA,EAAAA,GAAAsqB,EAAA,EAAA5pB,IAAA,sBAAApB,MAtDD,SAAoBsqB,EAAWznB,EAAOqoC,GAAe,IAAAzlC,EAAA,KAC3C2c,EAAS,IAAI5B,EAAAA,GAAO8J,EAAWznB,EAAOqoC,GAAe,GAAM,kBAAMzlC,EAAKyE,gBAAgB+H,eAAeqY,EAAU,IAC/GrN,EAAKnc,KAAKsoC,kBAAkB+B,iBAAiB7gB,EAAWxpB,KAAKuoC,oBAC/DzmC,EAAUC,EAKd,OAJIoa,IACAra,GAAU8a,EAAAA,EAAAA,IAAS,CAAEtc,IAAK,UAAWgqC,QAAS,CAAC,UAAW,iBAAmB,YAAavoC,EAAOoa,EAAGouB,aAExGjpB,EAAOxf,QAAUA,EACVwf,CACX,GAAC,CAAAhhB,IAAA,SAAApB,MA8CD,SAAOoE,EAAUknC,EAAsBC,EAAiBC,GAAe,IAAA58B,EAAA,KACnE9N,KAAKsD,SAAWA,OACQhC,IAApBmpC,GAAiCA,EAAkB,GACnDzqC,KAAKqpC,wBAAwBp9B,SAC7BjM,KAAK2oC,eAAeh+B,QAAU3K,KAAKgpC,WAAWr+B,SAAU,GAGxD3K,KAAKqpC,wBAAwB78B,gBAETlL,IAApBmpC,GACAzqC,KAAKopC,4CAA4Cn9B,SACjDjM,KAAK+oC,+BAA+BhnC,MAAQ,GAAHmG,OAAMsiC,EAAuB,EAAC,KAAAtiC,OAAIuiC,IAG3EzqC,KAAKopC,4CAA4C58B,WAErDxM,KAAKgY,OAAO2yB,oBAAoB3qC,MAChC,IAUwEyC,EAVlEmoC,EAAeF,EAAc3lC,KAAI,SAAAiC,GAAC,MAAK,CACzC6jC,WAAOvpC,EACP8P,GAAIpK,EAAEoK,GACNzG,SAAS,EACT7I,QAASkF,EAAElF,SAAW,GACtBC,MAAOiF,EAAEqW,MACTwC,IAAK,SAAC3S,GACF,OAAOY,EAAK1E,gBAAgB+H,eAAenK,EAAEoK,GACjD,EACH,IAAGzO,GAAAC,EAAAA,EAAAA,GACqB5C,KAAKipC,8BAA8BpoB,cAAY,IAAxE,IAAAle,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAtD,MAA0E,KAC5C2D,EAD4CJ,GAAAC,EAAAA,EAAAA,GAAAP,EAAAvD,MAAA,GAA3DopB,GAAFvlB,EAAA,GAAOA,EAAA,IAAAK,GAAAR,EAAAA,EAAAA,GACK0lB,GAAK,IAA1B,IAAAllB,EAAAP,MAAAM,EAAAC,EAAAN,KAAAtD,MAA4B,KAAjB8hB,EAAMne,EAAAjE,MACToiB,aAAkB3B,EAAAA,IAClBirB,EAAa7mC,KAAKud,EAE1B,CAAC,OAAAtd,GAAAZ,EAAA/D,EAAA2E,EAAA,SAAAZ,EAAAa,GAAA,CACL,CAAC,OAAAD,GAAArB,EAAAtD,EAAA2E,EAAA,SAAArB,EAAAsB,GAAA,CACG2mC,EAAazlC,OAAS,GACtBylC,EAAaE,QAAQ,IAAI7qB,EAAAA,IAE7BjgB,KAAKypC,QAAQsB,8BAA8BH,EAC/C,GAAC,CAAAtqC,IAAA,QAAApB,MACD,WAAU,OAAOc,KAAKoR,EAAI,GAAC,CAAA9Q,IAAA,aAAApB,MAC3B,WACI,OAAOc,KAAKyoC,MAAMuC,IACtB,GAAC,CAAA1qC,IAAA,cAAApB,MACD,WACI,MAAO,CACHoE,SAAUtD,KAAKsD,SACf87B,WAAY,CAAC,EAA+C,GAC5D6L,iBAAkB,EAE1B,IAAC,EAAA3qC,IAAA,kBAAA0H,IAzGD,WAA+B,OAAOhI,KAAKmqC,gBAAkB,KAACjgB,CAAA,CAD5B,CAAoD5F,EAAAA,IA4G1F4F,EAAmCigB,kBAAmB,EACtDjgB,EAAmC9Y,GAAK,EACxC8Y,EAAqCvjB,EAAW,CAC5Cc,EAAQ,EAAG6Q,EAAAA,GACX7Q,EAAQ,EAAG+Q,EAAAA,IACX/Q,EAAQ,EAAGyjC,EAAAA,GACXzjC,EAAQ,EAAG+Z,EAAAA,IACX/Z,EAAQ,EAAG0jC,EAAAA,KACZjhB,GAC2C,IACxC8f,EAAiB,SAAAoB,IAAA5wB,EAAAA,EAAAA,GAAAwvB,EAAAoB,GAAA,IAAAnwB,GAAAP,EAAAA,EAAAA,GAAAsvB,GAAA,SAAAA,IAAA,OAAAjqC,EAAAA,EAAAA,GAAA,KAAAiqC,GAAA/uB,EAAAvb,MAAA,KAAAuH,UAAA,CAclB,OAdkBrH,EAAAA,EAAAA,GAAAoqC,EAAA,EAAA1pC,IAAA,cAAApB,MACnB,WACI,IAAMid,EAAKnc,KAAKqrC,mBAAmBhB,iBAAiBrqC,KAAKsrC,QAAQl6B,GAAIpR,KAAKuoC,oBAC1E,IAAKpsB,EACD,OAAAovB,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAxB,EAAAyB,WAAA,oBAAAzxB,KAAA,MAEJ,GAAIha,KAAK+B,MAAO,CACZ,IAAM2pC,GAAMhD,EAAAA,EAAAA,GAAE,kBAAkBsC,KACtB,IAAIW,EAAAA,EAAgBD,EAAKE,EAAAA,GAAIzkC,OAAO0kC,OAAO,CAAEC,cAAc,GAAQC,EAAAA,IAC3E9jC,IAAIkU,GACNnc,KAAK+B,MAAMiqC,YAAchsC,KAAKsrC,QAAQvpC,MACtC/B,KAAK+B,MAAMykC,YAAYkF,GACvB1rC,KAAK+B,MAAMkqC,UAAU/oC,IAAI,qCAC7B,CACJ,KAAC8mC,CAAA,CAdkB,CAASkC,EAAAA,IAgB5BxC,EAA8B,SAAAyC,IAAA3xB,EAAAA,EAAAA,GAAAkvB,EAAAyC,GAAA,IAAAzb,GAAAhW,EAAAA,EAAAA,GAAAgvB,GAC9B,SAAAA,EAAY0C,EAAW9I,EAAQ+I,EAAUC,EAAanrB,EAAmBxC,EAAoB2pB,EAAmBiE,GAAkB,IAAA98B,EASzG,OATyG1P,EAAAA,EAAAA,GAAA,KAAA2pC,IAC9Hj6B,EAAAihB,EAAA1W,KAAA,KAAMoyB,EAAWjlC,OAAO0kC,OAAO,CAAEW,UAAWlJ,GAAU+I,GAAWC,EAAanrB,EAAmBxC,EAAoB2pB,EAAmBiE,IACnIjJ,OAASA,EACd7zB,EAAK48B,SAAWA,EAChB58B,EAAK68B,YAAcA,EACnB78B,EAAK0R,kBAAoBA,EACzB1R,EAAK80B,KAAO90B,EAAKg9B,OAAOvpC,IAAIuM,EAAK68B,YAAYpD,WAAWz5B,EAAK6zB,OAAQ7zB,EAAK0R,kBAAmB,CAAEurB,6BAA6B,KAC5Hj9B,EAAKk9B,kBAAoB,GACzBl9B,EAAKg9B,OAAOvpC,IAAIuM,EAAK80B,KAAKt6B,aAAY,kBAAMwF,EAAKm9B,eAAe,KAChEn9B,EAAKm9B,gBAAgBn9B,CACzB,CAYC,OAZA7P,EAAAA,EAAAA,GAAA8pC,EAAA,EAAAppC,IAAA,gBAAApB,MACD,WACI,IAAIsC,EAAIC,EAAIqa,EAAIO,EAAIwwB,EAAIC,EAAIC,EACtBtK,EAAU,GACVuK,EAAY,IAClBC,EAAAA,EAAAA,IAAgCjtC,KAAKukC,KAA+B,QAAxB/iC,EAAKxB,KAAKqsC,gBAA6B,IAAP7qC,OAAgB,EAASA,EAAGmoC,YAAa,CAAElH,QAAAA,EAASuK,UAAAA,GAAoG,QAAtFlxB,EAA8B,QAAxBra,EAAKzB,KAAKqsC,gBAA6B,IAAP5qC,OAAgB,EAASA,EAAGmoC,sBAAmC,IAAP9tB,OAAgB,EAASA,EAAG+tB,aAAqG,QAAtFgD,EAA8B,QAAxBxwB,EAAKrc,KAAKqsC,gBAA6B,IAAPhwB,OAAgB,EAASA,EAAGutB,sBAAmC,IAAPiD,OAAgB,EAASA,EAAGK,oBAA4G,QAAtFH,EAA8B,QAAxBD,EAAK9sC,KAAKqsC,gBAA6B,IAAPS,OAAgB,EAASA,EAAGlD,sBAAmC,IAAPmD,OAAgB,EAASA,EAAGI,+BACjiBH,EAAUjpC,KAAIrE,MAAdstC,GAAS37B,EAAAA,EAAAA,GAASrR,KAAK2sC,oBACvB3sC,KAAKotC,WAAW3K,EAASuK,EAC7B,GAAC,CAAA1sC,IAAA,gCAAApB,MACD,SAA8BmuC,GAC1BrtC,KAAK2sC,kBAAoBU,EACzBrtC,KAAK4sC,eACT,KAAClD,CAAA,CAvB6B,CAAgD4D,EAAAA,GAyBlF5D,EAAiC/iC,EAAW,CACxCc,EAAQ,EAAG0jC,EAAAA,IACX1jC,EAAQ,EAAG+Z,EAAAA,IACX/Z,EAAQ,EAAGyX,EAAAA,GACXzX,EAAQ,EAAGyjC,EAAAA,GACXzjC,EAAQ,EAAGmgC,EAAAA,IACZ8B,E,oHClMU6D,EAAyB,SAAAtL,IAAAznB,EAAAA,EAAAA,GAAA+yB,EAAAtL,GAAA,IAAAxnB,GAAAC,EAAAA,EAAAA,GAAA6yB,GAClC,SAAAA,IAAc,OAAAxtC,EAAAA,EAAAA,GAAA,KAAAwtC,GAAA9yB,EAAAT,KAAA,KACJ,CACF5I,GAAI,sBACJrP,MAAOi/B,EAAAA,GAAa,sBAAuB,yBAC3CkB,MAAO,wBACPlgB,kBAAc1gB,EACdihC,OAAQ,CACJC,OAAQ,EACRqB,OAAQxB,EAAAA,EAAkBmL,eAC1B/K,QAAS,OAGrB,CAUC,OAVA7iC,EAAAA,EAAAA,GAAA2tC,EAAA,EAAAjtC,IAAA,MAAApB,MACD,SAAIuuC,EAAWz1B,EAAQY,GAEnB,GADAA,EAAOA,GAAQ,CAAC,EACXZ,EAAO7K,WAAZ,CAGA,IAAMugC,EAAY11B,EAAO21B,gBACzBD,EAAUrrC,MAAMurC,mBAChBF,EAAUG,gBAAgBj1B,EAAKlH,OAAQ,EAAqCo8B,EAAAA,EAAmBC,oBAAoBL,EAAWA,EAAUM,oBACxIN,EAAUO,oBAAoBr1B,EAAKlH,QAAQ,EAJ3C,CAKJ,KAAC67B,CAAA,CAvBiC,CAAS5K,EAAAA,KAyB/CkF,EAAAA,EAAAA,IAAqB0F,E,0MC3BRW,EAAgB,WACzB,SAAAA,EAAYC,EAAWC,EAAeC,IAAMtuC,EAAAA,EAAAA,GAAA,KAAAmuC,GACxCluC,KAAKsuC,WAAaH,EAClBnuC,KAAKuuC,eAAiBH,EACtBpuC,KAAKwuC,MAAQH,IAAQ,EACrBruC,KAAKyuC,oBAAsB,EAC3BzuC,KAAK0uC,aAAe,KACpB1uC,KAAK2uC,sBAAwB,EAC7B3uC,KAAK4uC,oBAAsB,CAC/B,CAqDC,OArDAhvC,EAAAA,EAAAA,GAAAsuC,EAAA,EAAA5tC,IAAA,oBAAApB,MACD,SAAkBmD,EAAOwsC,GACrB,IAAIhsC,EAAI7C,KAAKsuC,WACbtuC,KAAK2uC,sBAAwB,EAC7B3uC,KAAK4uC,oBAAsB,EACvB/rC,EAAE8P,gBAAkB9P,EAAE+P,eAAiC,IAAhB/P,EAAEgD,YACzC7F,KAAK4uC,oBAAsB,EAC3B/rC,EAAIA,EAAEisC,eAAejsC,EAAE+P,cAAgB,EAAGvQ,EAAMqM,iBAAiB7L,EAAE+P,cAAgB,KAGvF,IADA,IAAMm8B,EAAc,GACXxnC,EAAI1E,EAAE8P,gBAAiBpL,GAAK1E,EAAE+P,cAAerL,IAClDwnC,EAAYhrC,KAAK1B,EAAMsjB,eAAepe,IAE1C,IAAMynC,EAAaD,EAAYzrB,KAAK,MACjB,KAAf0rB,GAEIhvC,KAAKuuC,iBACLvuC,KAAK2uC,wBACL3uC,KAAK4uC,uBAGT5uC,KAAKwuC,MACLK,EAAQI,iBAAiB,IAAIrrC,EAAAA,EAAMf,EAAE+P,cAAevQ,EAAMqM,iBAAiB7L,EAAE+P,eAAgB/P,EAAE+P,cAAgB,EAAG,GAAI/P,EAAE+P,gBAAkBvQ,EAAM6sC,eAAiB,GAAK,MAGjKlvC,KAAKuuC,eAINM,EAAQI,iBAAiB,IAAIrrC,EAAAA,EAAMf,EAAE8P,gBAAiB,EAAG9P,EAAE8P,gBAAiB,GAAIq8B,EAAa,MAH7FH,EAAQI,iBAAiB,IAAIrrC,EAAAA,EAAMf,EAAE+P,cAAevQ,EAAMqM,iBAAiB7L,EAAE+P,eAAgB/P,EAAE+P,cAAevQ,EAAMqM,iBAAiB7L,EAAE+P,gBAAiB,KAAOo8B,GAMvKhvC,KAAK0uC,aAAeG,EAAQM,eAAetsC,GAC3C7C,KAAKyuC,oBAAsBzuC,KAAKsuC,WAAWc,cAC/C,GAAC,CAAA9uC,IAAA,qBAAApB,MACD,SAAmBmD,EAAOgtC,GACtB,IAAI9vC,EAAS8vC,EAAOC,oBAAoBtvC,KAAK0uC,cAC7C,GAAmC,IAA/B1uC,KAAK2uC,uBAA4D,IAA7B3uC,KAAK4uC,oBAA2B,CACpE,IAAIj8B,EAAkBpT,EAAOoT,gBACzB/M,EAAcrG,EAAOqG,YACrBgN,EAAgBrT,EAAOqT,cACvB/M,EAAYtG,EAAOsG,UACY,IAA/B7F,KAAK2uC,wBACLh8B,GAAoC3S,KAAK2uC,sBACzC/oC,EAAc,GAEe,IAA7B5F,KAAK4uC,sBACLh8B,GAAgC5S,KAAK4uC,oBACrC/oC,EAAY,GAEhBtG,EAASgwC,EAAAA,EAAUC,oBAAoB78B,EAAiB/M,EAAagN,EAAe/M,EAAW7F,KAAKyuC,oBACxG,CACA,OAAOlvC,CACX,KAAC2uC,CAAA,CA9DwB,G,6ECFzBvnC,EAA0C,SAAUC,EAAYC,EAAQvG,EAAKwG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU9B,OAAQ+B,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQvG,GAAOwG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQvG,EAAKwG,QACpH,IAAK,IAAIS,EAAIX,EAAWzB,OAAS,EAAGoC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQvG,EAAK4G,GAAKH,EAAEF,EAAQvG,KAAS4G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQvG,EAAK4G,GAAIA,CAChE,EACIO,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQvG,GAAOqH,EAAUd,EAAQvG,EAAKoH,EAAa,CACxE,EAUI+nC,EAAgB,WAChB,SAAAA,EAAYtB,EAAWuB,EAAcC,EAAYC,IAA+B7vC,EAAAA,EAAAA,GAAA,KAAA0vC,GAC5EzvC,KAAK4vC,8BAAgCA,EACrC5vC,KAAKsuC,WAAaH,EAClBnuC,KAAK6vC,cAAgBH,EACrB1vC,KAAK8vC,YAAcH,EACnB3vC,KAAK0uC,aAAe,KACpB1uC,KAAK+vC,6BAA8B,CACvC,CA8TC,OA9TAnwC,EAAAA,EAAAA,GAAA6vC,EAAA,EAAAnvC,IAAA,oBAAApB,MACD,SAAkBmD,EAAOwsC,GACrB,IAAMmB,EAAiB3tC,EAAM6sC,eAC7B,GAAIlvC,KAAK6vC,eAAiB7vC,KAAKsuC,WAAW17B,gBAAkBo9B,EACxDhwC,KAAK0uC,aAAeG,EAAQM,eAAenvC,KAAKsuC,iBAGpD,GAAKtuC,KAAK6vC,eAAqD,IAApC7vC,KAAKsuC,WAAW37B,gBAA3C,CAIA3S,KAAKiwC,sBAAuB,EAC5B,IAAIptC,EAAI7C,KAAKsuC,WACTzrC,EAAE8P,gBAAkB9P,EAAE+P,eAAiC,IAAhB/P,EAAEgD,YACzC7F,KAAKiwC,sBAAuB,EAC5BptC,EAAIA,EAAEisC,eAAejsC,EAAE+P,cAAgB,EAAGvQ,EAAMqM,iBAAiB7L,EAAE+P,cAAgB,KAEvF,IAAAs9B,EAA8C7tC,EAAMorB,aAA5CmP,EAAOsT,EAAPtT,QAASuT,EAAUD,EAAVC,WAAYC,EAAYF,EAAZE,aACvBC,EAAkBrwC,KAAKswC,qBAAqB1T,EAASuT,EAAYC,GACjEG,EAAe,CACjBzqC,aAAc,CACVG,cAAe,SAACR,GACZ,OAAOpD,EAAMyD,aAAaG,cAAcR,EAC5C,EACA+qC,cAAe,WACX,OAAOnuC,EAAMmuC,eACjB,EACA7hB,wBAAyB,SAAClpB,EAAYU,GAClC,OAAO9D,EAAMssB,wBAAwBlpB,EAAYU,EACrD,GAEJwf,eAAgB,MAEpB,GAAI9iB,EAAE8P,kBAAoB9P,EAAE+P,eAA+D,IAA9CvQ,EAAMqM,iBAAiB7L,EAAE8P,iBAAwB,CAE1F,IAAMlN,EAAa5C,EAAE8P,gBACf89B,EAAmBzwC,KAAK6vC,cAAgBpqC,EAAa,EAAIA,EAAa,EAC5B,IAA5CpD,EAAMqM,iBAAiB+hC,GAGvB5B,EAAQI,iBAAiB,IAAIrrC,EAAAA,EAAM,EAAG,EAAG,EAAG,GAAI,OAIhDirC,EAAQI,iBAAiB,IAAIrrC,EAAAA,EAAM6B,EAAY,EAAGA,EAAY,GAAIpD,EAAMsjB,eAAe8qB,IAEvF5B,EAAQI,iBAAiB,IAAIrrC,EAAAA,EAAM6sC,EAAiB,EAAGA,EAAiBpuC,EAAMqM,iBAAiB+hC,IAAmB,OAGtH5tC,EAAI,IAAI0sC,EAAAA,EAAUkB,EAAiB,EAAGA,EAAiB,EAC3D,KACK,CACD,IAAIC,EACAC,EACJ,GAAI3wC,KAAK6vC,cAAe,CACpBa,EAAmB7tC,EAAE+P,cAAgB,EACrC+9B,EAAiBtuC,EAAMsjB,eAAe+qB,GAEtC7B,EAAQI,iBAAiB,IAAIrrC,EAAAA,EAAM8sC,EAAmB,EAAGruC,EAAMqM,iBAAiBgiC,EAAmB,GAAIA,EAAkBruC,EAAMqM,iBAAiBgiC,IAAoB,MACpK,IAAIE,EAAgBD,EACpB,GAAI3wC,KAAK6wC,iBAAiBxuC,EAAOQ,GAAI,CACjC,IAAMiuC,EAAwB9wC,KAAK+wC,eAAe1uC,EAAOguC,EAAiBzT,EAAS8T,EAAkB7tC,EAAE8P,gBAAkB,GAEzH,GAA8B,OAA1Bm+B,EAAgC,CAChC,IAAME,EAAiBpsB,EAAAA,GAA6BviB,EAAMsjB,eAAe+qB,IACnEO,EAAcH,EAAwBI,EAAAA,EAAwBF,EAAgBpU,GAC9EuU,EAAiBD,EAAAA,EAA2BD,EAAarU,EAASwT,GACxEQ,EAAgBO,EAAiBnxC,KAAKoxC,SAAST,EACnD,KACK,CAEDJ,EAAa5qB,eAAiB,SAAClgB,GAC3B,OAAIA,IAAe5C,EAAE8P,gBACVtQ,EAAMsjB,eAAe+qB,GAGrBruC,EAAMsjB,eAAelgB,EAEpC,EACA,IAAM4rC,GAAqBC,EAAAA,EAAAA,IAAqBtxC,KAAK8vC,YAAaS,EAAcluC,EAAMssB,wBAAwB+hB,EAAkB,GAAI7tC,EAAE8P,gBAAiB09B,EAAiBrwC,KAAK4vC,+BAC7K,GAA2B,OAAvByB,EAA6B,CAC7B,IAAML,EAAiBpsB,EAAAA,GAA6BviB,EAAMsjB,eAAe+qB,IACnEO,EAAcC,EAAAA,EAAwBG,EAAoBzU,GAEhE,GAAIqU,IADgBC,EAAAA,EAAwBF,EAAgBpU,GAC3B,CAC7B,IAAMuU,EAAiBD,EAAAA,EAA2BD,EAAarU,EAASwT,GACxEQ,EAAgBO,EAAiBnxC,KAAKoxC,SAAST,EACnD,CACJ,CACJ,CAGA9B,EAAQI,iBAAiB,IAAIrrC,EAAAA,EAAMf,EAAE8P,gBAAiB,EAAG9P,EAAE8P,gBAAiB,GAAIi+B,EAAgB,MAChG,IAAMW,EAAMvxC,KAAKwxC,yBAAyBnvC,EAAOguC,EAAiBzT,EAAS/5B,EAAE8P,gBAAiB+9B,EAAkBE,GAEhH,GAAY,OAARW,EACY,IAARA,GACAvxC,KAAKyxC,4BAA4BpvC,EAAOwsC,EAAShsC,EAAG+5B,EAASwT,EAAcmB,OAG9E,CAEDhB,EAAa5qB,eAAiB,SAAClgB,GAC3B,OAAIA,IAAe5C,EAAE8P,gBACVi+B,EAEFnrC,GAAc5C,EAAE8P,gBAAkB,GAAKlN,GAAc5C,EAAE+P,cAAgB,EACrEvQ,EAAMsjB,eAAelgB,EAAa,GAGlCpD,EAAMsjB,eAAelgB,EAEpC,EACA,IAAMisC,GAA2BJ,EAAAA,EAAAA,IAAqBtxC,KAAK8vC,YAAaS,EAAcluC,EAAMssB,wBAAwB+hB,EAAkB,GAAI7tC,EAAE8P,gBAAkB,EAAG09B,EAAiBrwC,KAAK4vC,+BACvL,GAAiC,OAA7B8B,EAAmC,CACnC,IAAMV,EAAiBpsB,EAAAA,GAA6BviB,EAAMsjB,eAAe9iB,EAAE8P,kBACrEs+B,EAAcC,EAAAA,EAAwBQ,EAA0B9U,GAChE+U,EAAcT,EAAAA,EAAwBF,EAAgBpU,GAC5D,GAAIqU,IAAgBU,EAAa,CAC7B,IAAMC,EAAiBX,EAAcU,EACrC3xC,KAAKyxC,4BAA4BpvC,EAAOwsC,EAAShsC,EAAG+5B,EAASwT,EAAcwB,EAC/E,CACJ,CACJ,CACJ,MAGI/C,EAAQI,iBAAiB,IAAIrrC,EAAAA,EAAMf,EAAE8P,gBAAiB,EAAG9P,EAAE8P,gBAAiB,GAAIi+B,EAAgB,KAExG,MAQI,GANAF,EAAmB7tC,EAAE8P,gBAAkB,EACvCg+B,EAAiBtuC,EAAMsjB,eAAe+qB,GAEtC7B,EAAQI,iBAAiB,IAAIrrC,EAAAA,EAAM8sC,EAAkB,EAAGA,EAAmB,EAAG,GAAI,MAElF7B,EAAQI,iBAAiB,IAAIrrC,EAAAA,EAAMf,EAAE+P,cAAevQ,EAAMqM,iBAAiB7L,EAAE+P,eAAgB/P,EAAE+P,cAAevQ,EAAMqM,iBAAiB7L,EAAE+P,gBAAiB,KAAO+9B,GAC3J3wC,KAAK6wC,iBAAiBxuC,EAAOQ,GAAI,CACjC0tC,EAAa5qB,eAAiB,SAAClgB,GAC3B,OAAIA,IAAeirC,EACRruC,EAAMsjB,eAAe9iB,EAAE8P,iBAGvBtQ,EAAMsjB,eAAelgB,EAEpC,EACA,IAAM8rC,EAAMvxC,KAAK+wC,eAAe1uC,EAAOguC,EAAiBzT,EAAS/5B,EAAE8P,gBAAiB9P,EAAE8P,gBAAkB,GAExG,GAAY,OAAR4+B,EACY,IAARA,GACAvxC,KAAKyxC,4BAA4BpvC,EAAOwsC,EAAShsC,EAAG+5B,EAASwT,EAAcmB,OAG9E,CAED,IAAMM,GAAoBP,EAAAA,EAAAA,IAAqBtxC,KAAK8vC,YAAaS,EAAcluC,EAAMssB,wBAAwB9rB,EAAE8P,gBAAiB,GAAI+9B,EAAkBL,EAAiBrwC,KAAK4vC,+BAC5K,GAA0B,OAAtBiC,EAA4B,CAE5B,IAAMC,EAAYltB,EAAAA,GAA6BviB,EAAMsjB,eAAe9iB,EAAE8P,kBAChEs+B,EAAcC,EAAAA,EAAwBW,EAAmBjV,GACzD+U,EAAcT,EAAAA,EAAwBY,EAAWlV,GACvD,GAAIqU,IAAgBU,EAAa,CAC7B,IAAMC,EAAiBX,EAAcU,EACrC3xC,KAAKyxC,4BAA4BpvC,EAAOwsC,EAAShsC,EAAG+5B,EAASwT,EAAcwB,EAC/E,CACJ,CACJ,CACJ,CAER,CACA5xC,KAAK0uC,aAAeG,EAAQM,eAAetsC,EAhK3C,MAFI7C,KAAK0uC,aAAeG,EAAQM,eAAenvC,KAAKsuC,WAmKxD,GAAC,CAAAhuC,IAAA,uBAAApB,MACD,SAAqB09B,EAASuT,EAAYC,GACtC,MAAO,CACH2B,YAAa,SAACC,GACV,OAAOC,EAAAA,EAAaF,YAAYC,EAAaA,EAAY7sC,OAAS,EAAGy3B,EAASuT,EAAYC,EAC9F,EACA8B,cAAe,SAACF,GACZ,OAAOC,EAAAA,EAAaC,cAAcF,EAAaA,EAAY7sC,OAAS,EAAGy3B,EAASuT,EAAYC,EAChG,EAER,GAAC,CAAA9vC,IAAA,mBAAApB,MACD,SAAiBmD,EAAOguC,EAAiBzT,EAASp3B,EAAM2sC,GACpD,GAAIA,EAAO,CACP,IAAIC,EAAcD,EAAMH,YACpBG,EAAME,eAAiBC,EAAAA,GAAaviC,MAG/BoiC,EAAME,eAAiBC,EAAAA,GAAaC,OAFzCH,EAAcD,EAAMH,YAAcG,EAAM11B,WAKnC01B,EAAME,eAAiBC,EAAAA,GAAaE,cACzCJ,EAAcD,EAAMH,YAEfG,EAAME,eAAiBC,EAAAA,GAAaG,UACzCL,EAAc/B,EAAgB6B,cAAcC,EAAMH,aAAeG,EAAM11B,YAE3E,IAAMk0B,EAAiBtuC,EAAMsjB,eAAengB,GAC5C,GAAIxF,KAAKoxC,SAAST,GAAgB+B,QAAQ1yC,KAAKoxC,SAASgB,KAAiB,EAAG,CACxE,IAAMpB,EAAiBpsB,EAAAA,GAA6BviB,EAAMsjB,eAAengB,IACrE2rC,EAAiBvsB,EAAAA,GAA6BwtB,GAC5CO,GAA+BC,EAAAA,EAAAA,IAAkBvwC,EAAOmD,EAAMxF,KAAK4vC,+BAMzE,OALqC,OAAjC+C,GAAwE,EAA/BA,IACzCxB,EAAiBd,EAAgB6B,cAAcf,IAE/BD,EAAAA,EAAwBC,EAAgBvU,GACxCsU,EAAAA,EAAwBF,EAAgBpU,EAEhE,CACJ,CACA,OAAO,IACX,GACA,CAAAt8B,IAAA,2BAAApB,MASA,SAAyBmD,EAAOguC,EAAiBzT,EAASp3B,EAAMqtC,EAAuBC,GACnF,GAAIluB,EAAAA,GAA+BkuB,IAAwB,EAAG,CAE1D,IAAMjgB,EAAYxwB,EAAMqM,iBAAiBmkC,GACnCV,GAAQY,EAAAA,EAAAA,GAAe/yC,KAAK8vC,YAAaztC,EAAO,IAAIuB,EAAAA,EAAMivC,EAAuBhgB,EAAWggB,EAAuBhgB,GAAY7yB,KAAK4vC,+BAC1I,OAAO5vC,KAAKgzC,iBAAiB3wC,EAAOguC,EAAiBzT,EAASp3B,EAAM2sC,EACxE,CAII,IADA,IAAIc,EAAqBztC,EAAO,EACzBytC,GAAsB,GAAG,CAC5B,IAAMC,EAAc7wC,EAAMsjB,eAAestB,GAEzC,GADyBruB,EAAAA,GAA+BsuB,IAChC,EACpB,MAEJD,GACJ,CACA,GAAIA,EAAqB,GAAKztC,EAAOnD,EAAM6sC,eACvC,OAAO,KAEX,IAAMrc,EAAYxwB,EAAMqM,iBAAiBukC,GACnCd,GAAQY,EAAAA,EAAAA,GAAe/yC,KAAK8vC,YAAaztC,EAAO,IAAIuB,EAAAA,EAAMqvC,EAAoBpgB,EAAWogB,EAAoBpgB,GAAY7yB,KAAK4vC,+BACpI,OAAO5vC,KAAKgzC,iBAAiB3wC,EAAOguC,EAAiBzT,EAASp3B,EAAM2sC,EAE5E,GAAC,CAAA7xC,IAAA,iBAAApB,MACD,SAAemD,EAAOguC,EAAiBzT,EAASp3B,EAAM2tC,EAAcC,GAEhE,IADA,IAAIH,EAAqBE,EAClBF,GAAsB,GAAG,CAE5B,IAAIC,OAAW,EAQf,GANIA,EADAD,IAAuBE,QAAqC7xC,IAArB8xC,EACzBA,EAGA/wC,EAAMsjB,eAAestB,GAEdruB,EAAAA,GAA+BsuB,IAChC,EACpB,MAEJD,GACJ,CACA,GAAIA,EAAqB,GAAKztC,EAAOnD,EAAM6sC,eACvC,OAAO,KAEX,IAAMrc,EAAYxwB,EAAMqM,iBAAiBukC,GACnCd,GAAQY,EAAAA,EAAAA,GAAe/yC,KAAK8vC,YAAaztC,EAAO,IAAIuB,EAAAA,EAAMqvC,EAAoBpgB,EAAWogB,EAAoBpgB,GAAY7yB,KAAK4vC,+BACpI,OAAO5vC,KAAKgzC,iBAAiB3wC,EAAOguC,EAAiBzT,EAASp3B,EAAM2sC,EACxE,GAAC,CAAA7xC,IAAA,WAAApB,MACD,SAASiZ,GACL,OAAOA,EAAI/H,QAAQ,OAAQ,GAC/B,GAAC,CAAA9P,IAAA,mBAAApB,MACD,SAAiBmD,EAAO8rC,GACpB,GAAInuC,KAAK8vC,YAAc,EACnB,OAAO,EAGX,IAAKztC,EAAMyD,aAAautC,kBAAkBlF,EAAUx7B,iBAChD,OAAO,EAEX,IAAM2gC,EAA2BjxC,EAAMssB,wBAAwBwf,EAAUx7B,gBAAiB,GAE1F,OAAI2gC,IAD2BjxC,EAAMssB,wBAAwBwf,EAAUv7B,cAAe,IAI2B,OAA7G5S,KAAK4vC,8BAA8B/gB,yBAAyBykB,GAA0BC,kBAI9F,GAAC,CAAAjzC,IAAA,8BAAApB,MACD,SAA4BmD,EAAOwsC,EAAShsC,EAAG+5B,EAASwT,EAAclqC,GAClE,IAAK,IAAIqB,EAAI1E,EAAE8P,gBAAiBpL,GAAK1E,EAAE+P,cAAerL,IAAK,CACvD,IAAM2rC,EAAc7wC,EAAMsjB,eAAepe,GACnCisC,EAAiB5uB,EAAAA,GAA6BsuB,GAE9CO,EADoBvC,EAAAA,EAAwBsC,EAAgB5W,GACzB12B,EACnCwtC,EAAYxC,EAAAA,EAA2BuC,EAAc7W,EAASwT,GAChEsD,IAAcF,IACd3E,EAAQI,iBAAiB,IAAIrrC,EAAAA,EAAM2D,EAAG,EAAGA,EAAGisC,EAAeruC,OAAS,GAAIuuC,GACpEnsC,IAAM1E,EAAE+P,eAAiB/P,EAAEgD,WAAa2tC,EAAeruC,OAAS,GAAmB,KAAduuC,IAGrE1zC,KAAK+vC,6BAA8B,GAG/C,CACJ,GAAC,CAAAzvC,IAAA,qBAAApB,MACD,SAAmBmD,EAAOgtC,GACtB,IAAI9vC,EAAS8vC,EAAOC,oBAAoBtvC,KAAK0uC,cAO7C,OANI1uC,KAAKiwC,uBACL1wC,EAASA,EAAOuvC,eAAevvC,EAAOqT,cAAgB,EAAG,IAEzD5S,KAAK+vC,6BAA+BxwC,EAAOoT,gBAAkBpT,EAAOqT,gBACpErT,EAASA,EAAOuvC,eAAevvC,EAAOqT,cAAe,IAElDrT,CACX,KAACkwC,CAAA,CAtUe,GAwUpBA,EAAmB9oC,EAAW,CAC1Bc,EAAQ,EAAG6jB,EAAAA,KACZmkB,GC3VmD,IAChDkE,EAAgB,WAOlB,SAAAA,EAAYxF,EAAWyF,IAAY7zC,EAAAA,EAAAA,GAAA,KAAA4zC,GAC/B3zC,KAAKmuC,UAAYA,EACjBnuC,KAAK4zC,WAAaA,EAClB5zC,KAAK6zC,YAAc,IACvB,CAyBC,OAzBAj0C,EAAAA,EAAAA,GAAA+zC,EAAA,EAAArzC,IAAA,oBAAApB,MACD,SAAkBmD,EAAOwsC,GACrB,IAAMiF,EA0Dd,SAAmBzxC,EAAO8rC,EAAWyF,GACjC,IAAMxxC,EAAO2xC,EAAY1xC,EAAO8rC,EAAWyF,GAC3C,IAAKxxC,EACD,OAAO,KAEX,OAAO+N,EAAAA,EAAcC,QAAQ,IAAIxM,EAAAA,EAAMxB,EAAKuQ,gBAAiB,EAAGvQ,EAAKwQ,cAAevQ,EAAMqM,iBAAiBtM,EAAKwQ,gBAAiBxQ,EAAKm6B,MAAMjZ,KAAK,MACrJ,CAhEmB0wB,CAAU3xC,EAAOrC,KAAKmuC,UAAWnuC,KAAK4zC,YAC7CE,GACAjF,EAAQI,iBAAiB6E,EAAGj0C,MAAOi0C,EAAGxjC,MAE1CtQ,KAAK6zC,YAAchF,EAAQM,eAAenvC,KAAKmuC,UACnD,GAAC,CAAA7tC,IAAA,qBAAApB,MACD,SAAmBmD,EAAOgtC,GACtB,OAAOA,EAAOC,oBAAoBtvC,KAAK6zC,YAC3C,IAAC,EAAAvzC,IAAA,cAAApB,MApBD,WAII,OAHKy0C,EAAiBM,YAClBN,EAAiBM,UAAY,IAAIC,KAAKC,UAEnCR,EAAiBM,SAC5B,GAAC,CAAA3zC,IAAA,SAAApB,MAgBD,SAAcmD,EAAO8rC,EAAWyF,GAC5B,GAAc,OAAVvxC,EACA,OAAO,EAEX,IAAMD,EAAO2xC,EAAY1xC,EAAO8rC,EAAWyF,GAC3C,IAAKxxC,EACD,OAAO,EAEX,IAAK,IAAImF,EAAI,EAAG0gB,EAAM7lB,EAAKgyC,OAAOjvC,OAAQoC,EAAI0gB,EAAK1gB,IAC/C,GAAInF,EAAKgyC,OAAO7sC,KAAOnF,EAAKm6B,MAAMh1B,GAC9B,OAAO,EAGf,OAAO,CACX,KAACosC,CAAA,CApCiB,GAwCtB,SAASI,EAAY1xC,EAAO8rC,EAAWyF,GACnC,IAAMjhC,EAAkBw7B,EAAUx7B,gBAC9BC,EAAgBu7B,EAAUv7B,cAK9B,GAJ4B,IAAxBu7B,EAAUtoC,WACV+M,IAGAD,GAAmBC,EACnB,OAAO,KAIX,IAFA,IAAMyhC,EAAc,GAEX5uC,EAAakN,EAAiBlN,GAAcmN,EAAenN,IAChE4uC,EAAYtwC,KAAK1B,EAAMsjB,eAAelgB,IAE1C,IAAI6uC,EAASD,EAAYrZ,MAAM,GAM/B,OALAsZ,EAAOpwC,KAAKyvC,EAAiBY,cAAcjwC,UAExB,IAAfsvC,IACAU,EAASA,EAAOxvC,WAEb,CACH6N,gBAAiBA,EACjBC,cAAeA,EACfwhC,OAAQC,EACR9X,MAAO+X,EAEf,CA7BAX,EAAiBM,UAAY,K,0BCtBvBO,EAAuB,SAAAvS,IAAAznB,EAAAA,EAAAA,GAAAg6B,EAAAvS,GAAA,IAAAxnB,GAAAC,EAAAA,EAAAA,GAAA85B,GACzB,SAAAA,EAAYC,EAAMphC,GAAM,IAAAxS,EAEH,OAFGd,EAAAA,EAAAA,GAAA,KAAAy0C,IACpB3zC,EAAA4Z,EAAAT,KAAA,KAAM3G,IACDohC,KAAOA,EAAK5zC,CACrB,CA+BC,OA/BAjB,EAAAA,EAAAA,GAAA40C,EAAA,EAAAl0C,IAAA,MAAApB,MACD,SAAIuuC,EAAWz1B,GACX,GAAKA,EAAO7K,WAAZ,CAGA,IAAMunC,EAAa18B,EAAO28B,gBAAgB5vC,KAAI,SAACopC,EAAWxlC,GAAK,MAAM,CAAEwlC,UAAAA,EAAWxlC,MAAAA,EAAOisC,QAAQ,EAAO,IACxGF,EAAWxwC,MAAK,SAACC,EAAGC,GAAC,OAAKR,EAAAA,EAAM4O,yBAAyBrO,EAAEgqC,UAAW/pC,EAAE+pC,UAAU,IAGlF,IADA,IAAIntC,EAAO0zC,EAAW,GACbntC,EAAI,EAAGA,EAAImtC,EAAWvvC,OAAQoC,IAAK,CACxC,IAAMstC,EAAOH,EAAWntC,GACpBvG,EAAKmtC,UAAUv7B,gBAAkBiiC,EAAK1G,UAAUx7B,kBAE5C3R,EAAK2H,MAAQksC,EAAKlsC,MAElBksC,EAAKD,QAAS,GAId5zC,EAAK4zC,QAAS,EACd5zC,EAAO6zC,GAGnB,CACA,IACkCpyC,EAD5B8tB,EAAW,GAAG5tB,GAAAC,EAAAA,EAAAA,GACI8xC,GAAU,IAAlC,IAAA/xC,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAtD,MAAoC,KAAzB2uC,EAAS1rC,EAAAvD,MAChBqxB,EAASxsB,KAAK,IAAImqC,EAAiBC,EAAUA,UAAWnuC,KAAKy0C,KAAMtG,EAAUyG,QACjF,CAAC,OAAA5wC,GAAArB,EAAAtD,EAAA2E,EAAA,SAAArB,EAAAsB,GAAA,CACD+T,EAAOyX,eACPzX,EAAO88B,gBAAgB90C,KAAKoR,GAAImf,GAChCvY,EAAOyX,cA1BP,CA2BJ,KAAC+kB,CAAA,CAnCwB,CAAS7R,EAAAA,IAqChCoS,EAAiB,SAAAC,IAAAx6B,EAAAA,EAAAA,GAAAu6B,EAAAC,GAAA,IAAA/5B,GAAAP,EAAAA,EAAAA,GAAAq6B,GACnB,SAAAA,IAAc,OAAAh1C,EAAAA,EAAAA,GAAA,KAAAg1C,GAAA95B,EAAAjB,KAAA,MACJ,EAAO,CACT5I,GAAI,kCACJrP,MAAOi/B,EAAAA,GAAa,eAAgB,gBACpCkB,MAAO,eACPlgB,aAAcqgB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJsB,OAAQxB,EAAAA,EAAkB4S,gBAC1BxS,QAAS,KACTyS,MAAO,CAAEzS,QAAS,MAClBD,OAAQ,KAEZa,SAAU,CACNC,OAAQjkB,EAAAA,GAAO81B,qBACf7sB,MAAO,SACPjL,MAAO2jB,EAAAA,GAAa,CAAE1gC,IAAK,gBAAiBgqC,QAAS,CAAC,0BAA4B,kBAClF9G,MAAO,IAGnB,CAAC,OAAA5jC,EAAAA,EAAAA,GAAAm1C,EAAA,CApBkB,CAASP,GAsB1BY,EAAmB,SAAAC,IAAA76B,EAAAA,EAAAA,GAAA46B,EAAAC,GAAA,IAAA3kB,GAAAhW,EAAAA,EAAAA,GAAA06B,GACrB,SAAAA,IAAc,OAAAr1C,EAAAA,EAAAA,GAAA,KAAAq1C,GAAA1kB,EAAA1W,KAAA,MACJ,EAAM,CACR5I,GAAI,oCACJrP,MAAOi/B,EAAAA,GAAa,iBAAkB,kBACtCkB,MAAO,iBACPlgB,aAAcqgB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJsB,OAAQxB,EAAAA,EAAkB4S,gBAC1BxS,QAAS,KACTyS,MAAO,CAAEzS,QAAS,MAClBD,OAAQ,KAEZa,SAAU,CACNC,OAAQjkB,EAAAA,GAAO81B,qBACf7sB,MAAO,SACPjL,MAAO2jB,EAAAA,GAAa,CAAE1gC,IAAK,kBAAmBgqC,QAAS,CAAC,0BAA4B,oBACpF9G,MAAO,IAGnB,CAAC,OAAA5jC,EAAAA,EAAAA,GAAAw1C,EAAA,CApBoB,CAASZ,GAsBrBc,EAAwB,SAAAzS,IAAAroB,EAAAA,EAAAA,GAAA86B,EAAAzS,GAAA,IAAAC,GAAApoB,EAAAA,EAAAA,GAAA46B,GACjC,SAAAA,IAAc,OAAAv1C,EAAAA,EAAAA,GAAA,KAAAu1C,GAAAxS,EAAA9oB,KAAA,KACJ,CACF5I,GAAI,mCACJrP,MAAOi/B,EAAAA,GAAa,qBAAsB,uBAC1CkB,MAAO,sBACPlgB,aAAcqgB,EAAAA,EAAkBC,SAChCe,SAAU,CACNC,OAAQjkB,EAAAA,GAAO81B,qBACf7sB,MAAO,SACPjL,MAAO2jB,EAAAA,GAAa,CAAE1gC,IAAK,uBAAwBgqC,QAAS,CAAC,0BAA4B,yBACzF9G,MAAO,IAGnB,CAoBC,OApBA5jC,EAAAA,EAAAA,GAAA01C,EAAA,EAAAh1C,IAAA,MAAApB,MACD,SAAI+X,EAAUe,EAAQY,GAClB,GAAKZ,EAAO7K,WAAZ,CAGA,IAGkChK,EAH5BotB,EAAW,GACXmkB,EAAa18B,EAAO28B,gBACpBtyC,EAAQ2V,EAAOpN,WAAWxH,GAAAR,EAAAA,EAAAA,GACR8xC,GAAU,IAAlC,IAAAtxC,EAAAP,MAAAM,EAAAC,EAAAN,KAAAtD,MAAoC,KAAzB2uC,EAAShrC,EAAAjE,MAChB,GAAIivC,EAAUr6B,UACVyc,EAASxsB,KAAK,IAAImqC,EAAiBC,GAAW,QAE7C,CACD,IAAMoH,EAAkB,IAAIhG,EAAAA,EAAUpB,EAAUv7B,cAAeu7B,EAAUtoC,UAAWsoC,EAAUv7B,cAAeu7B,EAAUtoC,WACvH0qB,EAASxsB,KAAK,IAAIyxC,EAAAA,GAA8BD,EAAiBlzC,EAAMqiB,gBAAgBypB,IAC3F,CACJ,CAAC,OAAAnqC,GAAAZ,EAAA/D,EAAA2E,EAAA,SAAAZ,EAAAa,GAAA,CACD+T,EAAOyX,eACPzX,EAAO88B,gBAAgB90C,KAAKoR,GAAImf,GAChCvY,EAAOyX,cAfP,CAgBJ,KAAC6lB,CAAA,CAlCgC,CAAS3S,EAAAA,IAqCxC8S,EAAuB,SAAAzS,IAAAxoB,EAAAA,EAAAA,GAAAi7B,EAAAzS,GAAA,IAAAC,GAAAvoB,EAAAA,EAAAA,GAAA+6B,GACzB,SAAAA,EAAYhB,EAAMphC,GAAM,IAAA1O,EAEH,OAFG5E,EAAAA,EAAAA,GAAA,KAAA01C,IACpB9wC,EAAAs+B,EAAAjpB,KAAA,KAAM3G,IACDohC,KAAOA,EAAK9vC,CACrB,CAYC,OAZA/E,EAAAA,EAAAA,GAAA61C,EAAA,EAAAn1C,IAAA,MAAApB,MACD,SAAI+X,EAAUe,GACV,IAIkCnG,EAJ5B8W,EAA+B1R,EAASjP,IAAIsjB,EAAAA,IAC5CiF,EAAW,GACXmkB,EAAa18B,EAAO28B,iBAAmB,GACvChF,EAAa33B,EAAOtN,UAAU,GAAiCoH,GAAAlP,EAAAA,EAAAA,GAC7C8xC,GAAU,IAAlC,IAAA5iC,EAAAjP,MAAAgP,EAAAC,EAAAhP,KAAAtD,MAAoC,KAAzB2uC,EAASt8B,EAAA3S,MAChBqxB,EAASxsB,KAAK,IAAI0rC,EAAiBtB,EAAWnuC,KAAKy0C,KAAM9E,EAAYhnB,GACzE,CAAC,OAAA3kB,GAAA8N,EAAAzS,EAAA2E,EAAA,SAAA8N,EAAA7N,GAAA,CACD+T,EAAOyX,eACPzX,EAAO88B,gBAAgB90C,KAAKoR,GAAImf,GAChCvY,EAAOyX,cACX,KAACgmB,CAAA,CAhBwB,CAAS9S,EAAAA,IAkBhC+S,EAAiB,SAAAC,IAAAn7B,EAAAA,EAAAA,GAAAk7B,EAAAC,GAAA,IAAAvS,GAAA1oB,EAAAA,EAAAA,GAAAg7B,GACnB,SAAAA,IAAc,OAAA31C,EAAAA,EAAAA,GAAA,KAAA21C,GAAAtS,EAAAppB,KAAA,MACJ,EAAO,CACT5I,GAAI,kCACJrP,MAAOi/B,EAAAA,GAAa,eAAgB,gBACpCkB,MAAO,eACPlgB,aAAcqgB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJsB,OAAQxB,EAAAA,EAAkB4S,gBAC1BxS,QAAS,IACTyS,MAAO,CAAEzS,QAAS,KAClBD,OAAQ,KAEZa,SAAU,CACNC,OAAQjkB,EAAAA,GAAO81B,qBACf7sB,MAAO,SACPjL,MAAO2jB,EAAAA,GAAa,CAAE1gC,IAAK,gBAAiBgqC,QAAS,CAAC,0BAA4B,kBAClF9G,MAAO,IAGnB,CAAC,OAAA5jC,EAAAA,EAAAA,GAAA81C,EAAA,CApBkB,CAASD,GAsB1BG,EAAmB,SAAAC,IAAAr7B,EAAAA,EAAAA,GAAAo7B,EAAAC,GAAA,IAAAjS,GAAAlpB,EAAAA,EAAAA,GAAAk7B,GACrB,SAAAA,IAAc,OAAA71C,EAAAA,EAAAA,GAAA,KAAA61C,GAAAhS,EAAA5pB,KAAA,MACJ,EAAM,CACR5I,GAAI,oCACJrP,MAAOi/B,EAAAA,GAAa,iBAAkB,kBACtCkB,MAAO,iBACPlgB,aAAcqgB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJsB,OAAQxB,EAAAA,EAAkB4S,gBAC1BxS,QAAS,IACTyS,MAAO,CAAEzS,QAAS,KAClBD,OAAQ,KAEZa,SAAU,CACNC,OAAQjkB,EAAAA,GAAO81B,qBACf7sB,MAAO,SACPjL,MAAO2jB,EAAAA,GAAa,CAAE1gC,IAAK,kBAAmBgqC,QAAS,CAAC,0BAA4B,oBACpF9G,MAAO,IAGnB,CAAC,OAAA5jC,EAAAA,EAAAA,GAAAg2C,EAAA,CApBoB,CAASH,GAsBrBK,EAAuB,SAAA3S,IAAA3oB,EAAAA,EAAAA,GAAAs7B,EAAA3S,GAAA,IAAAe,GAAAxpB,EAAAA,EAAAA,GAAAo7B,GAChC,SAAAA,EAAYlC,EAAYvgC,GAAM,IAAAvF,EAEG,OAFH/N,EAAAA,EAAAA,GAAA,KAAA+1C,IAC1BhoC,EAAAo2B,EAAAlqB,KAAA,KAAM3G,IACDugC,WAAaA,EAAW9lC,CACjC,CAeC,OAfAlO,EAAAA,EAAAA,GAAAk2C,EAAA,EAAAx1C,IAAA,MAAApB,MACD,SAAIuuC,EAAWz1B,GACX,IACkC5F,EAD5BsiC,EAAa18B,EAAO28B,iBAAmB,GAAGpiC,GAAA3P,EAAAA,EAAAA,GACxB8xC,GAAU,IAAlC,IAAAniC,EAAA1P,MAAAuP,EAAAG,EAAAzP,KAAAtD,MAAoC,KAAzB2uC,EAAS/7B,EAAAlT,MAChB,IAAKy0C,EAAiBoC,OAAO/9B,EAAOpN,WAAYujC,EAAWnuC,KAAK4zC,YAC5D,MAER,CAAC,OAAA5vC,GAAAuO,EAAAlT,EAAA2E,EAAA,SAAAuO,EAAAtO,GAAA,CAED,IADA,IAAMssB,EAAW,GACRhpB,EAAI,EAAG0gB,EAAMysB,EAAWvvC,OAAQoC,EAAI0gB,EAAK1gB,IAC9CgpB,EAAShpB,GAAK,IAAIosC,EAAiBe,EAAWntC,GAAIvH,KAAK4zC,YAE3D57B,EAAOyX,eACPzX,EAAO88B,gBAAgB90C,KAAKoR,GAAImf,GAChCvY,EAAOyX,cACX,KAACqmB,CAAA,CAnB+B,CAASnT,EAAAA,IAqBhCqT,EAAwB,SAAAC,IAAAz7B,EAAAA,EAAAA,GAAAw7B,EAAAC,GAAA,IAAA5R,GAAA3pB,EAAAA,EAAAA,GAAAs7B,GACjC,SAAAA,IAAc,OAAAj2C,EAAAA,EAAAA,GAAA,KAAAi2C,GAAA3R,EAAArqB,KAAA,MACJ,EAAO,CACT5I,GAAI,mCACJrP,MAAOi/B,EAAAA,GAAa,sBAAuB,wBAC3CkB,MAAO,uBACPlgB,aAAcqgB,EAAAA,EAAkBC,UAExC,CAAC,OAAA1iC,EAAAA,EAAAA,GAAAo2C,EAAA,CARgC,CAASF,GAUjCI,EAAyB,SAAAC,IAAA37B,EAAAA,EAAAA,GAAA07B,EAAAC,GAAA,IAAApR,GAAArqB,EAAAA,EAAAA,GAAAw7B,GAClC,SAAAA,IAAc,OAAAn2C,EAAAA,EAAAA,GAAA,KAAAm2C,GAAAnR,EAAA/qB,KAAA,MACJ,EAAM,CACR5I,GAAI,oCACJrP,MAAOi/B,EAAAA,GAAa,uBAAwB,yBAC5CkB,MAAO,wBACPlgB,aAAcqgB,EAAAA,EAAkBC,UAExC,CAAC,OAAA1iC,EAAAA,EAAAA,GAAAs2C,EAAA,CARiC,CAASJ,GAUlCM,EAA0B,SAAAzS,IAAAnpB,EAAAA,EAAAA,GAAA47B,EAAAzS,GAAA,IAAA0S,GAAA37B,EAAAA,EAAAA,GAAA07B,GACnC,SAAAA,IAAc,OAAAr2C,EAAAA,EAAAA,GAAA,KAAAq2C,GAAAC,EAAAr8B,KAAA,KACJ,CACF5I,GAAI,qCACJrP,MAAOi/B,EAAAA,GAAa,yBAA0B,0BAC9CkB,MAAO,yBACPlgB,aAAcqgB,EAAAA,EAAkBC,UAExC,CAiCC,OAjCA1iC,EAAAA,EAAAA,GAAAw2C,EAAA,EAAA91C,IAAA,MAAApB,MACD,SAAIuuC,EAAWz1B,GACX,GAAKA,EAAO7K,WAAZ,CAGA,IAAM9K,EAAQ2V,EAAOpN,WACrB,GAA6B,IAAzBvI,EAAM6sC,gBAAsD,IAA9B7sC,EAAMqM,iBAAiB,GAAzD,CAGA,IAG8CyG,EAHxCxF,EAAQ,GACR2mC,EAAiB,GACnBC,EAAe,EAAEnhC,GAAAxS,EAAAA,EAAAA,GACGoV,EAAO28B,iBAAe,IAA9C,IAAAv/B,EAAAvS,MAAAsS,EAAAC,EAAAtS,KAAAtD,MAAgD,CAG5C,IAH4C,IAArC2uC,EAASh5B,EAAAjW,MACVs3C,EAAc,IAAIh0C,IAClB6gB,EAAQ,GACL9b,EAAI4mC,EAAUx7B,gBAAiBpL,GAAK4mC,EAAUv7B,cAAerL,IAAK,CACvE,IAAM/B,EAAOnD,EAAMsjB,eAAepe,GAC9BivC,EAAY3rC,IAAIrF,KAGpB6d,EAAMtf,KAAKyB,GACXgxC,EAAYtzC,IAAIsC,GACpB,CACA,IAAMixC,EAAqB,IAAIlH,EAAAA,EAAUpB,EAAUx7B,gBAAiB,EAAGw7B,EAAUv7B,cAAevQ,EAAMqM,iBAAiBy/B,EAAUv7B,gBAC3H8jC,EAAyBvI,EAAUx7B,gBAAkB4jC,EACrDI,EAAiB,IAAIpH,EAAAA,EAAUmH,EAAwB,EAAGA,EAAyBrzB,EAAMle,OAAS,EAAGke,EAAMA,EAAMle,OAAS,GAAGA,QACnIwK,EAAM5L,KAAKoM,EAAAA,EAAcC,QAAQqmC,EAAoBpzB,EAAMC,KAAK,QAChEgzB,EAAevyC,KAAK4yC,GACpBJ,GAAiBpI,EAAUv7B,cAAgBu7B,EAAUx7B,gBAAkB,EAAK0Q,EAAMle,MACtF,CAAC,OAAAnB,GAAAoR,EAAA/V,EAAA2E,EAAA,SAAAoR,EAAAnR,GAAA,CACD+T,EAAOyX,eACPzX,EAAOzH,aAAavQ,KAAKoR,GAAIzB,EAAO2mC,GACpCt+B,EAAOyX,cAxBP,CAJA,CA6BJ,KAAC2mB,CAAA,CAzCkC,CAASzT,EAAAA,IA2C1CiU,EAA4B,SAAA3S,IAAAzpB,EAAAA,EAAAA,GAAAo8B,EAAA3S,GAAA,IAAA4S,GAAAn8B,EAAAA,EAAAA,GAAAk8B,GAC9B,SAAAA,IAAc,OAAA72C,EAAAA,EAAAA,GAAA,KAAA62C,GAAAC,EAAA78B,KAAA,KACJ,CACF5I,GAAIwlC,EAA6B1+B,GACjCnW,MAAOi/B,EAAAA,GAAa,+BAAgC,4BACpDkB,MAAO,2BACPlgB,aAAcqgB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJsB,OAAQxB,EAAAA,EAAkB4S,gBAC1BxS,SAASqU,EAAAA,EAAAA,IAAS,KAAmD,MACrEtU,OAAQ,MAGpB,CAiBC,OAjBA5iC,EAAAA,EAAAA,GAAAg3C,EAAA,EAAAt2C,IAAA,MAAApB,MACD,SAAIuuC,EAAWz1B,EAAQY,GACnB,IAAIm+B,EAAU,GACM,cAAhBn+B,EAAKiR,SAILktB,GAAW/+B,EAAO28B,iBAAmB,IAAI5vC,KAAI,SAAAlC,GAAC,OAAI,IAAIwB,EAAAA,EAASxB,EAAEm0C,mBAAoBn0C,EAAEo0C,eAAe,KAE1G,IAAM9I,EAAYn2B,EAAOk/B,eACzB,GAAkB,OAAd/I,EAAJ,CAGA,IAAM3/B,EAAU,IAAI2oC,EAAAA,EAA8BhJ,EAAW4I,GAC7D/+B,EAAOyX,eACPzX,EAAO88B,gBAAgB90C,KAAKoR,GAAI,CAAC5C,IACjCwJ,EAAOyX,cAJP,CAKJ,KAACmnB,CAAA,CA9B6B,CAASjU,EAAAA,IAgC3CiU,EAA6B1+B,GAAK,uCAE3B,IAAMk/B,EAAiB,SAAAtS,IAAAtqB,EAAAA,EAAAA,GAAA48B,EAAAtS,GAAA,IAAAuS,GAAA38B,EAAAA,EAAAA,GAAA08B,GAC1B,SAAAA,IAAc,OAAAr3C,EAAAA,EAAAA,GAAA,KAAAq3C,GAAAC,EAAAr9B,KAAA,KACJ,CACF5I,GAAI,4BACJrP,MAAOi/B,EAAAA,GAAa,eAAgB,eACpCkB,MAAO,cACPlgB,aAAcqgB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJsB,OAAQxB,EAAAA,EAAkBmL,eAC1B/K,QAAS,KACTD,OAAQ,MAGpB,CA0EC,OA1EA5iC,EAAAA,EAAAA,GAAAw3C,EAAA,EAAA92C,IAAA,MAAApB,MACD,SAAIuuC,EAAWz1B,GACX,GAAKA,EAAO7K,WAAZ,CAGA,IAAMmqC,EAAMt3C,KAAKu3C,kBAAkBv/B,GAC7B3V,EAAQ2V,EAAOpN,WACrB,GAA6B,IAAzBvI,EAAM6sC,gBAAsD,IAA9B7sC,EAAMqM,iBAAiB,GAAzD,CAOA,IAHA,IAAI6nC,EAAe,EACb5mC,EAAQ,GACR6nC,EAAc,GACXjwC,EAAI,EAAG0gB,EAAMqvB,EAAInyC,OAAQoC,EAAI0gB,EAAK1gB,IAAK,CAC5C,IAAMusC,EAAKwD,EAAI/vC,GACXoL,EAAkBmhC,EAAGnhC,gBACrBC,EAAgBkhC,EAAGlhC,cACnBhN,EAAc,EACdC,EAAYxD,EAAMqM,iBAAiBkE,GACnCA,EAAgBvQ,EAAM6sC,gBACtBt8B,GAAiB,EACjB/M,EAAY,GAEP8M,EAAkB,IACvBA,GAAmB,EACnB/M,EAAcvD,EAAMqM,iBAAiBiE,IAEzChD,EAAM5L,KAAKoM,EAAAA,EAAcC,QAAQ,IAAIm/B,EAAAA,EAAU58B,EAAiB/M,EAAagN,EAAe/M,GAAY,KACxG2xC,EAAYzzC,KAAK,IAAIwrC,EAAAA,EAAU58B,EAAkB4jC,EAAczC,EAAGmD,eAAgBtkC,EAAkB4jC,EAAczC,EAAGmD,iBACrHV,GAAiBzC,EAAGlhC,cAAgBkhC,EAAGnhC,gBAAkB,CAC7D,CACAqF,EAAOyX,eACPzX,EAAOzH,aAAavQ,KAAKoR,GAAIzB,EAAO6nC,GACpCx/B,EAAOyX,cAxBP,CANA,CA+BJ,GAAC,CAAAnvB,IAAA,oBAAApB,MACD,SAAkB8Y,GAEd,IAAMy/B,EAAaz/B,EAAO28B,gBAAgB5vC,KAAI,SAAClC,GAC3C,IAAI+P,EAAgB/P,EAAE+P,cAItB,OAHI/P,EAAE8P,gBAAkB9P,EAAE+P,eAAiC,IAAhB/P,EAAEgD,YACzC+M,GAAiB,GAEd,CACHD,gBAAiB9P,EAAE8P,gBACnB+kC,qBAAsB70C,EAAE60C,qBACxB9kC,cAAeA,EACfqkC,eAAgBp0C,EAAEo0C,eAE1B,IAEAQ,EAAWvzC,MAAK,SAACC,EAAGC,GAChB,OAAID,EAAEwO,kBAAoBvO,EAAEuO,gBACjBxO,EAAEyO,cAAgBxO,EAAEwO,cAExBzO,EAAEwO,gBAAkBvO,EAAEuO,eACjC,IAIA,IAFA,IAAMglC,EAAmB,GACrBC,EAAoBH,EAAW,GAC1BlwC,EAAI,EAAGA,EAAIkwC,EAAWtyC,OAAQoC,IAC/BqwC,EAAkBhlC,cAAgB,GAAK6kC,EAAWlwC,GAAGoL,gBAErDilC,EAAkBhlC,cAAgB6kC,EAAWlwC,GAAGqL,eAIhD+kC,EAAiB5zC,KAAK6zC,GACtBA,EAAoBH,EAAWlwC,IAKvC,OADAowC,EAAiB5zC,KAAK6zC,GACfD,CACX,KAACP,CAAA,CAvFyB,CAASzU,EAAAA,IAyF1BkV,EAAiB,SAAAC,IAAAt9B,EAAAA,EAAAA,GAAAq9B,EAAAC,GAAA,IAAAC,GAAAr9B,EAAAA,EAAAA,GAAAm9B,GAC1B,SAAAA,IAAc,OAAA93C,EAAAA,EAAAA,GAAA,KAAA83C,GAAAE,EAAA/9B,KAAA,KACJ,CACF5I,GAAI,4BACJrP,MAAOi/B,EAAAA,GAAa,eAAgB,eACpCkB,MAAO,cACPlgB,aAAcqgB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJsB,OAAQxB,EAAAA,EAAkB4S,gBAC1BxS,QAAS,KACTD,OAAQ,MAGpB,CASC,OATA5iC,EAAAA,EAAAA,GAAAi4C,EAAA,EAAAv3C,IAAA,MAAApB,MACD,SAAIuuC,EAAWz1B,GACX,IAAM01B,EAAY11B,EAAO21B,gBACpBD,IAGL11B,EAAOyX,eACPzX,EAAO88B,gBAAgB90C,KAAKoR,GAAI4mC,EAAAA,GAAerrB,OAAO+gB,EAAUuK,aAAcjgC,EAAOpN,WAAYoN,EAAO28B,kBACxG38B,EAAOyX,eACX,KAACooB,CAAA,CAtByB,CAASlV,EAAAA,IAwBjCuV,EAAkB,SAAAC,IAAA39B,EAAAA,EAAAA,GAAA09B,EAAAC,GAAA,IAAAC,GAAA19B,EAAAA,EAAAA,GAAAw9B,GACpB,SAAAA,IAAc,OAAAn4C,EAAAA,EAAAA,GAAA,KAAAm4C,GAAAE,EAAAp+B,KAAA,KACJ,CACF5I,GAAI,6BACJrP,MAAOi/B,EAAAA,GAAa,gBAAiB,gBACrCkB,MAAO,eACPlgB,aAAcqgB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJsB,OAAQxB,EAAAA,EAAkB4S,gBAC1BxS,QAAS,KACTD,OAAQ,MAGpB,CAGC,OAHA5iC,EAAAA,EAAAA,GAAAs4C,EAAA,EAAA53C,IAAA,MAAApB,MACD,SAAIuuC,EAAWz1B,GACXoR,EAAAA,GAAoBqpB,QAAQ4F,iBAAiB5K,EAAWz1B,EAAQ,KACpE,KAACkgC,CAAA,CAhBmB,CAASvV,EAAAA,IAkBpB2V,EAAsB,SAAAC,IAAA/9B,EAAAA,EAAAA,GAAA89B,EAAAC,GAAA,IAAAC,GAAA99B,EAAAA,EAAAA,GAAA49B,GAC/B,SAAAA,IAAc,OAAAv4C,EAAAA,EAAAA,GAAA,KAAAu4C,GAAAE,EAAAx+B,KAAA,KACJ,CACF5I,GAAI,iCACJrP,MAAOi/B,EAAAA,GAAa,qBAAsB,qBAC1CkB,MAAO,oBACPlgB,aAAcqgB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJsB,OAAQxB,EAAAA,EAAkB4S,gBAC1BxS,QAAS,KACTD,OAAQ,MAGpB,CAQC,OARA5iC,EAAAA,EAAAA,GAAA04C,EAAA,EAAAh4C,IAAA,MAAApB,MACD,SAAIuuC,EAAWz1B,GACX,IAAM01B,EAAY11B,EAAO21B,gBACpBD,IAGL11B,EAAOyX,eACPzX,EAAO88B,gBAAgB90C,KAAKoR,GAAI4mC,EAAAA,GAAeS,iBAAiB/K,EAAUuK,aAAcjgC,EAAOpN,WAAYoN,EAAO28B,kBACtH,KAAC2D,CAAA,CArB8B,CAAS3V,EAAAA,IAuB/B+V,EAAqB,SAAAC,IAAAn+B,EAAAA,EAAAA,GAAAk+B,EAAAC,GAAA,IAAAC,GAAAl+B,EAAAA,EAAAA,GAAAg+B,GAC9B,SAAAA,IAAc,OAAA34C,EAAAA,EAAAA,GAAA,KAAA24C,GAAAE,EAAA5+B,KAAA,KACJ,CACF5I,GAAI,gCACJrP,MAAOi/B,EAAAA,GAAa,oBAAqB,qBACzCkB,MAAO,oBACPlgB,aAAcqgB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJsB,OAAQxB,EAAAA,EAAkB4S,gBAC1BxS,QAAS,KACTD,OAAQ,MAGpB,CAQC,OARA5iC,EAAAA,EAAAA,GAAA84C,EAAA,EAAAp4C,IAAA,MAAApB,MACD,SAAIuuC,EAAWz1B,GACX,IAAM01B,EAAY11B,EAAO21B,gBACpBD,IAGL11B,EAAOyX,eACPzX,EAAO88B,gBAAgB90C,KAAKoR,GAAI4mC,EAAAA,GAAea,gBAAgBnL,EAAUuK,aAAcjgC,EAAOpN,WAAYoN,EAAO28B,kBACrH,KAAC+D,CAAA,CArB6B,CAAS/V,EAAAA,IAuB9BmW,EAAiC,SAAAC,IAAAv+B,EAAAA,EAAAA,GAAAs+B,EAAAC,GAAA,IAAAC,GAAAt+B,EAAAA,EAAAA,GAAAo+B,GAAA,SAAAA,IAAA,OAAA/4C,EAAAA,EAAAA,GAAA,KAAA+4C,GAAAE,EAAAt5C,MAAA,KAAAuH,UAAA,CA2BzC,OA3ByCrH,EAAAA,EAAAA,GAAAk5C,EAAA,EAAAx4C,IAAA,MAAApB,MAC1C,SAAIuuC,EAAWz1B,GACX,GAAKA,EAAO7K,WAAZ,CAOA,IAJA,IAAM8rC,EAAgBjhC,EAAOk/B,eACvBgC,EAAiBl5C,KAAKm5C,mBAAmBnhC,GAEzCohC,EAAkB,GACf7xC,EAAI,EAAG8xC,EAAQH,EAAe/zC,OAAS,EAAGoC,EAAI8xC,EAAO9xC,IAAK,CAC/D,IAAM1H,EAAQq5C,EAAe3xC,GACvB+xC,EAAYJ,EAAe3xC,EAAI,GACW,OAA5C3D,EAAAA,EAAM21C,gBAAgB15C,EAAOy5C,GAC7BF,EAAgBr1C,KAAKlE,GAGrBq5C,EAAe3xC,EAAI,GAAK3D,EAAAA,EAAMkP,UAAUjT,EAAOy5C,EAEvD,CACAF,EAAgBr1C,KAAKm1C,EAAeA,EAAe/zC,OAAS,IAC5D,IAAMmxC,EAAiBt2C,KAAKw5C,mBAAmBP,EAAeG,GACxDzpC,EAAQypC,EAAgBr0C,KAAI,SAAAlF,GAC9B,OAAOsQ,EAAAA,EAAcC,QAAQvQ,EAAO,GACxC,IACAmY,EAAOyX,eACPzX,EAAOzH,aAAavQ,KAAKoR,GAAIzB,EAAO2mC,GACpCt+B,EAAOyX,cAtBP,CAuBJ,KAACqpB,CAAA,CA3ByC,CAASnW,EAAAA,IA6B1C8W,EAAmB,SAAAC,IAAAl/B,EAAAA,EAAAA,GAAAi/B,EAAAC,GAAA,IAAAC,GAAAj/B,EAAAA,EAAAA,GAAA++B,GAC5B,SAAAA,IAAc,OAAA15C,EAAAA,EAAAA,GAAA,KAAA05C,GAAAE,EAAA3/B,KAAA,KACJ,CACF5I,GAAI,gBACJrP,MAAOi/B,EAAAA,GAAa,sBAAuB,mBAC3CkB,MAAO,kBACPlgB,aAAcqgB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJsB,OAAQxB,EAAAA,EAAkBmL,eAC1B/K,QAAS,EACTmX,IAAK,CAAEnX,QAAS,MAChBD,OAAQ,MAGpB,CAsDC,OAtDA5iC,EAAAA,EAAAA,GAAA65C,EAAA,EAAAn5C,IAAA,qBAAApB,MACD,SAAmB+5C,EAAeC,GAC9B,IAAIW,EAAmB,KACjBvD,EAAiB,GACnBwD,EAAe,EAqBnB,OApBAZ,EAAea,SAAQ,SAAAl6C,GACnB,IAAIm6C,EACJ,GAAwB,IAApBn6C,EAAMgG,WAAmBi0C,EAAe,EAAG,CAC3C,IAAMG,EAAep6C,EAAM8S,gBAAkBmnC,EAC7CE,EAAY,IAAIzK,EAAAA,EAAU0K,EAAcp6C,EAAM+F,YAAaq0C,EAAcp6C,EAAM+F,YACnF,MAEIo0C,EAAY,IAAIzK,EAAAA,EAAU1vC,EAAM8S,gBAAiB9S,EAAM+F,YAAa/F,EAAM8S,gBAAiB9S,EAAM+F,aAErGk0C,GAAgBj6C,EAAM+S,cAAgB/S,EAAM8S,gBACxC9S,EAAM05C,gBAAgBN,GACtBY,EAAmBG,EAGnB1D,EAAevyC,KAAKi2C,EAE5B,IACIH,GACAvD,EAAexL,QAAQ+O,GAEpBvD,CACX,GAAC,CAAAh2C,IAAA,qBAAApB,MACD,SAAmB8Y,GACf,IAAM08B,EAAa18B,EAAO28B,gBAC1B,GAAmB,OAAfD,EACA,MAAO,GAEX,IAAIwE,EAAiBxE,EACfryC,EAAQ2V,EAAOpN,WACrB,OAAc,OAAVvI,EACO,IAEX62C,EAAeh1C,KAAKN,EAAAA,EAAM4O,0BAC1B0mC,EAAiBA,EAAen0C,KAAI,SAAAopC,GAChC,GAAIA,EAAUr6B,UAAW,CACrB,GAA8B,IAA1Bq6B,EAAUvoC,YAAmB,CAC7B,IAAMs0C,EAAiBptC,KAAKC,IAAI,EAAGohC,EAAUx7B,gBAAkB,GACzDwnC,EAAiD,IAA9BhM,EAAUx7B,gBAAwB,EAAItQ,EAAMsjB,eAAeu0B,GAAgB/0C,OAAS,EAC7G,OAAO,IAAIvB,EAAAA,EAAMs2C,EAAgBC,EAAkBhM,EAAUx7B,gBAAiB,EAClF,CAEI,OAAO,IAAI/O,EAAAA,EAAMuqC,EAAUx7B,gBAAiB,EAAGw7B,EAAUx7B,gBAAiBw7B,EAAUvoC,YAE5F,CAEI,OAAO,IAAIhC,EAAAA,EAAMuqC,EAAUx7B,gBAAiB,EAAGw7B,EAAUv7B,cAAeu7B,EAAUtoC,UAE1F,IAEJ,KAAC4zC,CAAA,CApE2B,CAASX,GAsE5BsB,EAAoB,SAAAC,IAAA7/B,EAAAA,EAAAA,GAAA4/B,EAAAC,GAAA,IAAAC,GAAA5/B,EAAAA,EAAAA,GAAA0/B,GAC7B,SAAAA,IAAc,OAAAr6C,EAAAA,EAAAA,GAAA,KAAAq6C,GAAAE,EAAAtgC,KAAA,KACJ,CACF5I,GAAI,iBACJrP,MAAOi/B,EAAAA,GAAa,uBAAwB,oBAC5CkB,MAAO,mBACPlgB,aAAcqgB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJsB,OAAQxB,EAAAA,EAAkBmL,eAC1B/K,QAAS,EACTmX,IAAK,CAAEnX,QAAS,IAAkDuK,UAAW,CAAC,OAC9ExK,OAAQ,MAGpB,CA0CC,OA1CA5iC,EAAAA,EAAAA,GAAAw6C,EAAA,EAAA95C,IAAA,qBAAApB,MACD,SAAmB+5C,EAAeC,GAG9B,IAFA,IAAIW,EAAmB,KACjBvD,EAAiB,GACd/uC,EAAI,EAAG0gB,EAAMixB,EAAe/zC,OAAoBoC,EAAI0gB,EAAK1gB,IAAK,CACnE,IAAM1H,EAAQq5C,EAAe3xC,GACvByyC,EAAY,IAAIzK,EAAAA,EAAU1vC,EAAM8S,gBAFY,EAEc9S,EAAM+F,YAAa/F,EAAM8S,gBAFvC,EAEiE9S,EAAM+F,aACrH/F,EAAM05C,gBAAgBN,GACtBY,EAAmBG,EAGnB1D,EAAevyC,KAAKi2C,EAE5B,CAIA,OAHIH,GACAvD,EAAexL,QAAQ+O,GAEpBvD,CACX,GAAC,CAAAh2C,IAAA,qBAAApB,MACD,SAAmB8Y,GACf,IAAM3V,EAAQ2V,EAAOpN,WACrB,GAAc,OAAVvI,EACA,MAAO,GAEX,IAAMqyC,EAAa18B,EAAO28B,gBAC1B,GAAmB,OAAfD,EACA,MAAO,GAEX,IAAMwE,EAAiBxE,EAAW3vC,KAAI,SAACw1C,GACnC,GAAIA,EAAIzmC,UAAW,CACf,IAAM+e,EAAYxwB,EAAMqM,iBAAiB6rC,EAAI5nC,iBAC7C,OAAI4nC,EAAI30C,cAAgBitB,EACb,IAAIjvB,EAAAA,EAAM22C,EAAI5nC,gBAAiB4nC,EAAI30C,YAAa20C,EAAI5nC,gBAAkB,EAAG,GAGzE,IAAI/O,EAAAA,EAAM22C,EAAI5nC,gBAAiB4nC,EAAI30C,YAAa20C,EAAI5nC,gBAAiBkgB,EAEpF,CACA,OAAO0nB,CACX,IAEA,OADArB,EAAeh1C,KAAKN,EAAAA,EAAM4O,0BACnB0mC,CACX,KAACkB,CAAA,CAxD4B,CAAStB,GA0D7B0B,GAAe,SAAAC,IAAAjgC,EAAAA,EAAAA,GAAAggC,EAAAC,GAAA,IAAAC,GAAAhgC,EAAAA,EAAAA,GAAA8/B,GACxB,SAAAA,IAAc,OAAAz6C,EAAAA,EAAAA,GAAA,KAAAy6C,GAAAE,EAAA1gC,KAAA,KACJ,CACF5I,GAAI,0BACJrP,MAAOi/B,EAAAA,GAAa,kBAAmB,cACvCkB,MAAO,aACPlgB,aAAcqgB,EAAAA,EAAkBC,SAChCC,OAAQ,CACJsB,OAAQxB,EAAAA,EAAkB4S,gBAC1BxS,QAAS,EACTmX,IAAK,CAAEnX,QAAS,KAChBD,OAAQ,MAGpB,CA8HC,OA9HA5iC,EAAAA,EAAAA,GAAA46C,EAAA,EAAAl6C,IAAA,MAAApB,MACD,SAAIuuC,EAAWz1B,GACX,IAAM08B,EAAa18B,EAAO28B,gBAC1B,GAAmB,OAAfD,EAAJ,CAGA,IAAIuE,EAAgBjhC,EAAOk/B,eAC3B,GAAsB,OAAlB+B,EAAJ,CAGAvE,EAAWxwC,KAAKN,EAAAA,EAAM4O,0BACtB,IAAMmoC,EAAoB,GACpBC,EAAgBlG,EAAWrd,QAAO,SAACwjB,EAAenW,GACpD,OAAImW,EAAc/mC,UACV+mC,EAAcjoC,gBAAkB8xB,EAAa/xB,iBACzCsmC,EAAc6B,gBAAgBD,KAC9B5B,EAAgBvU,GAEbA,GAEPA,EAAa/xB,gBAAkBkoC,EAAcjoC,cAAgB,GAC7D+nC,EAAkB52C,KAAK82C,GAChBnW,GAGA,IAAI6K,EAAAA,EAAUsL,EAAcloC,gBAAiBkoC,EAAcj1C,YAAa8+B,EAAa9xB,cAAe8xB,EAAa7+B,WAIxH6+B,EAAa/xB,gBAAkBkoC,EAAcjoC,eAC7C+nC,EAAkB52C,KAAK82C,GAChBnW,GAGA,IAAI6K,EAAAA,EAAUsL,EAAcloC,gBAAiBkoC,EAAcj1C,YAAa8+B,EAAa9xB,cAAe8xB,EAAa7+B,UAGpI,IACA80C,EAAkB52C,KAAK62C,GACvB,IAAMv4C,EAAQ2V,EAAOpN,WACrB,GAAc,OAAVvI,EAAJ,CAOA,IAJA,IAAMsN,EAAQ,GACR2mC,EAAiB,GACnBuD,EAAmBZ,EACnB8B,EAAa,EACRxzC,EAAI,EAAG0gB,EAAM0yB,EAAkBx1C,OAAQoC,EAAI0gB,EAAK1gB,IAAK,CAC1D,IAAM4mC,EAAYwM,EAAkBpzC,GAC9BoL,EAAkBw7B,EAAUx7B,gBAE9BqoC,EAAoB,EACpBpoC,OAAa,EAAE/M,OAAS,EACtBo1C,EAA6B54C,EAAMsjB,eAAewoB,EAAUv7B,eAAezN,OAASgpC,EAAUtoC,UACpG,GAAIsoC,EAAUr6B,WAAaq6B,EAAUx7B,kBAAoBw7B,EAAUv7B,cAAe,CAC9E,IAAMtP,EAAW6qC,EAAUzqC,mBACvBJ,EAASmC,WAAapD,EAAM6sC,gBAC5Bt8B,EAAgBD,EAAkB,EAClC9M,EAAYxD,EAAMqM,iBAAiBkE,KAGnCA,EAAgBtP,EAASmC,WACzBI,EAAYxD,EAAMqM,iBAAiBpL,EAASmC,YAEpD,MAEImN,EAAgBu7B,EAAUv7B,cAC1B/M,EAAYxD,EAAMqM,iBAAiBkE,GAGvC,IADA,IAAIsoC,EAAsB74C,EAAMsjB,eAAehT,GACtCpL,EAAIoL,EAAkB,EAAGpL,GAAKqL,EAAerL,IAAK,CACvD,IAAMmb,EAAWrgB,EAAMsjB,eAAepe,GAChC4zC,EAAwB94C,EAAM+4C,gCAAgC7zC,GACpE,GAAI4zC,GAAyB,EAAG,CAC5B,IAAIE,GAAc,EACU,KAAxBH,IACAG,GAAc,IAEdA,GAA+E,MAA/DH,EAAoB54B,OAAO44B,EAAoB/1C,OAAS,IACT,OAA/D+1C,EAAoB54B,OAAO44B,EAAoB/1C,OAAS,KACxDk2C,GAAc,EACdH,EAAsBA,EAAoB9qC,QAAQ,oBAAqB,MAE3E,IAAMkrC,EAAwB54B,EAASS,OAAOg4B,EAAwB,GACtED,IAAwBG,EAAc,IAAM,IAAMC,EAE9CN,EADAK,EACoBC,EAAsBn2C,OAAS,EAG/Bm2C,EAAsBn2C,MAElD,MAEI61C,EAAoB,CAE5B,CACA,IAAMO,EAAkB,IAAI33C,EAAAA,EAAM+O,EA9Cd,EA8C4CC,EAAe/M,GAC/E,IAAK01C,EAAgBznC,UAAW,CAC5B,IAAI0nC,OAAe,EACfrN,EAAUr6B,WACVnE,EAAM5L,KAAKoM,EAAAA,EAAcC,QAAQmrC,EAAiBL,IAClDM,EAAkB,IAAIjM,EAAAA,EAAUgM,EAAgB5oC,gBAAkBooC,EAAYG,EAAoB/1C,OAAS61C,EAAoB,EAAGroC,EAAkBooC,EAAYG,EAAoB/1C,OAAS61C,EAAoB,IAG7M7M,EAAUx7B,kBAAoBw7B,EAAUv7B,eACxCjD,EAAM5L,KAAKoM,EAAAA,EAAcC,QAAQmrC,EAAiBL,IAClDM,EAAkB,IAAIjM,EAAAA,EAAUpB,EAAUx7B,gBAAkBooC,EAAY5M,EAAUvoC,YAAauoC,EAAUv7B,cAAgBmoC,EAAY5M,EAAUtoC,aAG/I8J,EAAM5L,KAAKoM,EAAAA,EAAcC,QAAQmrC,EAAiBL,IAClDM,EAAkB,IAAIjM,EAAAA,EAAUpB,EAAUx7B,gBAAkBooC,EAAY5M,EAAUvoC,YAAauoC,EAAUx7B,gBAAkBooC,EAAYG,EAAoB/1C,OAAS81C,IAG9G,OAA1Dr3C,EAAAA,EAAM21C,gBAAgBgC,EAAiBtC,GACvCY,EAAmB2B,EAGnBlF,EAAevyC,KAAKy3C,EAE5B,CACAT,GAAcQ,EAAgB3oC,cAAgB2oC,EAAgB5oC,eAClE,CACA2jC,EAAexL,QAAQ+O,GACvB7hC,EAAOyX,eACPzX,EAAOzH,aAAavQ,KAAKoR,GAAIzB,EAAO2mC,GACpCt+B,EAAOyX,cAnFP,CAjCA,CAJA,CAyHJ,KAAC+qB,CAAA,CA5IuB,CAAS7X,EAAAA,IA8IxB8Y,GAAe,SAAAC,IAAAlhC,EAAAA,EAAAA,GAAAihC,EAAAC,GAAA,IAAAC,GAAAjhC,EAAAA,EAAAA,GAAA+gC,GACxB,SAAAA,IAAc,OAAA17C,EAAAA,EAAAA,GAAA,KAAA07C,GAAAE,EAAA3hC,KAAA,KACJ,CACF5I,GAAI,0BACJrP,MAAOi/B,EAAAA,GAAa,mBAAoB,0CACxCkB,MAAO,yCACPlgB,aAAcqgB,EAAAA,EAAkBC,UAExC,CAqCC,OArCA1iC,EAAAA,EAAAA,GAAA67C,EAAA,EAAAn7C,IAAA,MAAApB,MACD,SAAIuuC,EAAWz1B,GACX,IAAM08B,EAAa18B,EAAO28B,gBAC1B,GAAmB,OAAfD,EAAJ,CAGA,IAAMryC,EAAQ2V,EAAOpN,WACrB,GAAc,OAAVvI,EAAJ,CAIA,IADA,IAAMkuB,EAAW,GACRhpB,EAAI,EAAG0gB,EAAMysB,EAAWvvC,OAAQoC,EAAI0gB,EAAK1gB,IAAK,CACnD,IAAM4mC,EAAYuG,EAAWntC,GAC7B,GAAK4mC,EAAUr6B,UAAf,CAGA,IAAM6B,EAASw4B,EAAUzqC,mBACnBmvB,EAAYxwB,EAAMqM,iBAAiBiH,EAAOlQ,YAChD,GAAIkQ,EAAOxP,QAAU0sB,EAAW,CAC5B,GAAIld,EAAOlQ,aAAepD,EAAM6sC,eAC5B,SAIJ,IAAMqM,EAAkB,IAAI33C,EAAAA,EAAM+R,EAAOlQ,WAAYqH,KAAKC,IAAI,EAAG4I,EAAOxP,OAAS,GAAIwP,EAAOlQ,WAAa,EAAG,GACtGm2C,EAAQv5C,EAAMqiB,gBAAgB62B,GAAiB7tB,MAAM,IAAI5oB,UAAUwe,KAAK,IAC9EiN,EAASxsB,KAAK,IAAI83C,EAAAA,GAAe,IAAItM,EAAAA,EAAU55B,EAAOlQ,WAAYqH,KAAKC,IAAI,EAAG4I,EAAOxP,OAAS,GAAIwP,EAAOlQ,WAAa,EAAG,GAAIm2C,GACjI,KACK,CACD,IAAML,EAAkB,IAAI33C,EAAAA,EAAM+R,EAAOlQ,WAAYqH,KAAKC,IAAI,EAAG4I,EAAOxP,OAAS,GAAIwP,EAAOlQ,WAAYkQ,EAAOxP,OAAS,GAClHy1C,EAAQv5C,EAAMqiB,gBAAgB62B,GAAiB7tB,MAAM,IAAI5oB,UAAUwe,KAAK,IAC9EiN,EAASxsB,KAAK,IAAI+3C,EAAAA,GAAqCP,EAAiBK,EAAO,IAAIrM,EAAAA,EAAU55B,EAAOlQ,WAAYkQ,EAAOxP,OAAS,EAAGwP,EAAOlQ,WAAYkQ,EAAOxP,OAAS,IAC1K,CAjBA,CAkBJ,CACA6R,EAAOyX,eACPzX,EAAO88B,gBAAgB90C,KAAKoR,GAAImf,GAChCvY,EAAOyX,cA3BP,CAJA,CAgCJ,KAACgsB,CAAA,CA7CuB,CAAS9Y,EAAAA,IA+CxBoZ,GAAkB,SAAAC,IAAAxhC,EAAAA,EAAAA,GAAAuhC,EAAAC,GAAA,IAAAC,GAAAvhC,EAAAA,EAAAA,GAAAqhC,GAAA,SAAAA,IAAA,OAAAh8C,EAAAA,EAAAA,GAAA,KAAAg8C,GAAAE,EAAAv8C,MAAA,KAAAuH,UAAA,CA+B1B,OA/B0BrH,EAAAA,EAAAA,GAAAm8C,EAAA,EAAAz7C,IAAA,MAAApB,MAC3B,SAAIuuC,EAAWz1B,GACX,IAAM08B,EAAa18B,EAAO28B,gBAC1B,GAAmB,OAAfD,EAAJ,CAGA,IAAMryC,EAAQ2V,EAAOpN,WACrB,GAAc,OAAVvI,EAAJ,CAGA,IAEkCgU,EAF5B6lC,EAAiBlkC,EAAOtN,UAAU,KAClCuF,EAAY,GAAGsG,GAAA3T,EAAAA,EAAAA,GACG8xC,GAAU,IAAlC,IAAAn+B,EAAA1T,MAAAwT,EAAAE,EAAAzT,KAAAtD,MAAoC,KAAzB2uC,EAAS93B,EAAAnX,MAChB,GAAIivC,EAAUr6B,UAAW,CACrB,IAAM6B,EAASw4B,EAAUzqC,mBACnBgC,EAAOsS,EAAOmkC,4BAA4BxmC,GAChD,IAAKjQ,EACD,SAEJ,IAAMlC,EAAY,IAAII,EAAAA,EAAM+R,EAAOlQ,WAAYC,EAAKE,YAAa+P,EAAOlQ,WAAYC,EAAKG,WACnFyK,EAAOjO,EAAMqiB,gBAAgBlhB,GACnCyM,EAAUlM,KAAKoM,EAAAA,EAAcC,QAAQ5M,EAAWxD,KAAKo8C,YAAY9rC,EAAM4rC,IAC3E,KACK,CACD,IAAM5rC,EAAOjO,EAAMqiB,gBAAgBypB,GACnCl+B,EAAUlM,KAAKoM,EAAAA,EAAcC,QAAQ+9B,EAAWnuC,KAAKo8C,YAAY9rC,EAAM4rC,IAC3E,CACJ,CAAC,OAAAl4C,GAAAuS,EAAAlX,EAAA2E,EAAA,SAAAuS,EAAAtS,GAAA,CACD+T,EAAOyX,eACPzX,EAAOzH,aAAavQ,KAAKoR,GAAInB,GAC7B+H,EAAOyX,cArBP,CAJA,CA0BJ,KAACssB,CAAA,CA/B0B,CAASpZ,EAAAA,IAiC3B0Z,GAAe,SAAAC,IAAA9hC,EAAAA,EAAAA,GAAA6hC,EAAAC,GAAA,IAAAC,GAAA7hC,EAAAA,EAAAA,GAAA2hC,GACxB,SAAAA,IAAc,OAAAt8C,EAAAA,EAAAA,GAAA,KAAAs8C,GAAAE,EAAAviC,KAAA,KACJ,CACF5I,GAAI,qCACJrP,MAAOi/B,EAAAA,GAAa,8BAA+B,0BACnDkB,MAAO,yBACPlgB,aAAcqgB,EAAAA,EAAkBC,UAExC,CAGC,OAHA1iC,EAAAA,EAAAA,GAAAy8C,EAAA,EAAA/7C,IAAA,cAAApB,MACD,SAAYoR,EAAM4rC,GACd,OAAO5rC,EAAKksC,mBAChB,KAACH,CAAA,CAXuB,CAASN,IAaxBU,GAAe,SAAAC,IAAAliC,EAAAA,EAAAA,GAAAiiC,EAAAC,GAAA,IAAAC,GAAAjiC,EAAAA,EAAAA,GAAA+hC,GACxB,SAAAA,IAAc,OAAA18C,EAAAA,EAAAA,GAAA,KAAA08C,GAAAE,EAAA3iC,KAAA,KACJ,CACF5I,GAAI,qCACJrP,MAAOi/B,EAAAA,GAAa,8BAA+B,0BACnDkB,MAAO,yBACPlgB,aAAcqgB,EAAAA,EAAkBC,UAExC,CAGC,OAHA1iC,EAAAA,EAAAA,GAAA68C,EAAA,EAAAn8C,IAAA,cAAApB,MACD,SAAYoR,EAAM4rC,GACd,OAAO5rC,EAAKssC,mBAChB,KAACH,CAAA,CAXuB,CAASV,IAa/Bc,GAAyB,WAC3B,SAAAA,EAAYC,EAAUC,IAAQh9C,EAAAA,EAAAA,GAAA,KAAA88C,GAC1B78C,KAAK88C,SAAWA,EAChB98C,KAAK+8C,OAASA,EACd/8C,KAAKg9C,QAAU,KACfh9C,KAAKi9C,YAAa,CACtB,CAeC,OAfAr9C,EAAAA,EAAAA,GAAAi9C,EAAA,EAAAv8C,IAAA,MAAApB,MACD,WACI,IAAKc,KAAKi9C,WAAY,CAClBj9C,KAAKi9C,YAAa,EAClB,IACIj9C,KAAKg9C,QAAU,IAAIjuB,OAAO/uB,KAAK88C,SAAU98C,KAAK+8C,OAClD,CACA,MAAO/4C,GACH,CAER,CACA,OAAOhE,KAAKg9C,OAChB,GAAC,CAAA18C,IAAA,cAAApB,MACD,WACI,OAAuB,OAAfc,KAAKgI,KACjB,KAAC60C,CAAA,CArB0B,GAuBzBK,GAAe,SAAAC,IAAA3iC,EAAAA,EAAAA,GAAA0iC,EAAAC,GAAA,IAAAC,GAAA1iC,EAAAA,EAAAA,GAAAwiC,GACjB,SAAAA,IAAc,OAAAn9C,EAAAA,EAAAA,GAAA,KAAAm9C,GAAAE,EAAApjC,KAAA,KACJ,CACF5I,GAAI,qCACJrP,MAAOi/B,EAAAA,GAAa,8BAA+B,2BACnDkB,MAAO,0BACPlgB,aAAcqgB,EAAAA,EAAkBC,UAExC,CAUC,OAVA1iC,EAAAA,EAAAA,GAAAs9C,EAAA,EAAA58C,IAAA,cAAApB,MACD,SAAYoR,EAAM4rC,GACd,IAAMmB,EAAgBH,EAAgBG,cAAcr1C,MACpD,OAAKq1C,EAIE/sC,EACFssC,oBACAxsC,QAAQitC,GAAe,SAACj5C,GAAC,OAAKA,EAAEo4C,mBAAmB,IAJ7ClsC,CAKf,KAAC4sC,CAAA,CAlBgB,CAASnB,IAoB9BmB,GAAgBG,cAAgB,IAAIR,GAA0B,2CAA8C,OACjF,IACrBS,GAAe,SAAAC,IAAA/iC,EAAAA,EAAAA,GAAA8iC,EAAAC,GAAA,IAAAC,GAAA9iC,EAAAA,EAAAA,GAAA4iC,GACjB,SAAAA,IAAc,OAAAv9C,EAAAA,EAAAA,GAAA,KAAAu9C,GAAAE,EAAAxjC,KAAA,KACJ,CACF5I,GAAI,qCACJrP,MAAOi/B,EAAAA,GAAa,8BAA+B,2BACnDkB,MAAO,0BACPlgB,aAAcqgB,EAAAA,EAAkBC,UAExC,CAYC,OAZA1iC,EAAAA,EAAAA,GAAA09C,EAAA,EAAAh9C,IAAA,cAAApB,MACD,SAAYoR,EAAM4rC,GACd,IAAMuB,EAAeH,EAAgBG,aAAaz1C,MAC5C01C,EAAgBJ,EAAgBI,cAAc11C,MACpD,OAAKy1C,GAAiBC,EAIdptC,EACHF,QAAQqtC,EAAc,SACtBrtC,QAAQstC,EAAe,WACvBd,oBALMtsC,CAMf,KAACgtC,CAAA,CApBgB,CAASvB,IAsB9BuB,GAAgBG,aAAe,IAAIZ,GAA0B,qBAAsB,OACnFS,GAAgBI,cAAgB,IAAIb,GAA0B,qCAAsC,OACzE,IACrBc,GAAe,SAAAC,IAAApjC,EAAAA,EAAAA,GAAAmjC,EAAAC,GAAA,IAAAC,GAAAnjC,EAAAA,EAAAA,GAAAijC,GACjB,SAAAA,IAAc,OAAA59C,EAAAA,EAAAA,GAAA,KAAA49C,GAAAE,EAAA7jC,KAAA,KACJ,CACF5I,GAAI,qCACJrP,MAAOi/B,EAAAA,GAAa,8BAA+B,2BACnDkB,MAAO,0BACPlgB,aAAcqgB,EAAAA,EAAkBC,UAExC,CAWC,OAXA1iC,EAAAA,EAAAA,GAAA+9C,EAAA,EAAAr9C,IAAA,cAAApB,MACD,SAAYoR,EAAM4rC,GACd,IAAM4B,EAAeH,EAAgBG,aAAa91C,MAClD,IAAK81C,EAED,OAAOxtC,EAEX,IAAMytC,EAAQztC,EAAKod,MAAMowB,GAEzB,OADkBC,EAAMC,QACLD,EAAMh5C,KAAI,SAACW,GAAI,OAAKA,EAAKud,UAAU,EAAG,GAAGu5B,oBAAsB92C,EAAKud,UAAU,EAAE,IAC9FK,KAAK,GACd,KAACq6B,CAAA,CAnBgB,CAAS5B,IAqB9B4B,GAAgBG,aAAe,IAAIjB,GAA0B,UAAW,MAC7C,IACrBoB,GAAe,SAAAC,IAAA1jC,EAAAA,EAAAA,GAAAyjC,EAAAC,GAAA,IAAAC,GAAAzjC,EAAAA,EAAAA,GAAAujC,GASjB,SAAAA,IAAc,OAAAl+C,EAAAA,EAAAA,GAAA,KAAAk+C,GAAAE,EAAAnkC,KAAA,KACJ,CACF5I,GAAI,qCACJrP,MAAOi/B,EAAAA,GAAa,8BAA+B,2BACnDkB,MAAO,0BACPlgB,aAAcqgB,EAAAA,EAAkBC,UAExC,CARC,OAQA1iC,EAAAA,EAAAA,GAAAq+C,EAAA,EAAA39C,IAAA,cAAApB,MACD,SAAYoR,EAAM8tC,GACd,IAAMX,EAAeQ,EAAgBR,aAAaz1C,MAC5C01C,EAAgBO,EAAgBP,cAAc11C,MAC9Cq2C,EAAqBJ,EAAgBI,mBAAmBr2C,MAC9D,OAAKy1C,GAAiBC,GAAkBW,EAIjC/tC,EACFF,QAAQiuC,EAAoB,SAC5BjuC,QAAQqtC,EAAc,SACtBrtC,QAAQstC,EAAe,SACvBd,oBANMtsC,CAOf,IAAC,EAAAhQ,IAAA,cAAApB,MA7BD,WAMI,MAL+B,CAC3Bc,KAAKy9C,aACLz9C,KAAK09C,cACL19C,KAAKq+C,oBACP96B,OAAM,SAAC+6B,GAAM,OAAKA,EAAOC,aAAa,GAE5C,KAACN,CAAA,CARgB,CAASlC,IAgC9BkC,GAAgBR,aAAe,IAAIZ,GAA0B,qBAAsB,OACnFoB,GAAgBP,cAAgB,IAAIb,GAA0B,mCAAoC,OAClGoB,GAAgBI,mBAAqB,IAAIxB,GAA0B,gBAAiB,OAEpFhV,EAAAA,EAAAA,IAAqBkN,IACrBlN,EAAAA,EAAAA,IAAqBuN,IACrBvN,EAAAA,EAAAA,IAAqByN,IACrBzN,EAAAA,EAAAA,IAAqB6N,IACrB7N,EAAAA,EAAAA,IAAqB+N,IACrB/N,EAAAA,EAAAA,IAAqBmO,IACrBnO,EAAAA,EAAAA,IAAqBqO,IACrBrO,EAAAA,EAAAA,IAAqBuO,IACrBvO,EAAAA,EAAAA,IAAqB+O,IACrB/O,EAAAA,EAAAA,IAAqBuP,IACrBvP,EAAAA,EAAAA,IAAqBgQ,IACrBhQ,EAAAA,EAAAA,IAAqBqQ,IACrBrQ,EAAAA,EAAAA,IAAqByQ,IACrBzQ,EAAAA,EAAAA,IAAqB6Q,IACrB7Q,EAAAA,EAAAA,IAAqB4R,IACrB5R,EAAAA,EAAAA,IAAqBuS,IACrBvS,EAAAA,EAAAA,IAAqB2S,KACrB3S,EAAAA,EAAAA,IAAqB4T,KACrB5T,EAAAA,EAAAA,IAAqBwU,KACrBxU,EAAAA,EAAAA,IAAqB4U,IACjBa,GAAgBG,aAAac,eAAiBjB,GAAgBI,cAAca,gBAC5E1W,EAAAA,EAAAA,IAAqByV,IAErBK,GAAgBG,aAAaS,gBAC7B1W,EAAAA,EAAAA,IAAqB8V,IAErBT,GAAgBG,cAAckB,gBAC9B1W,EAAAA,EAAAA,IAAqBqV,IAErBe,GAAgBM,gBAChB1W,EAAAA,EAAAA,IAAqBoW,G,kWCjiCrBt3C,EAA0C,SAAUC,EAAYC,EAAQvG,EAAKwG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU9B,OAAQ+B,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQvG,GAAOwG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQvG,EAAKwG,QACpH,IAAK,IAAIS,EAAIX,EAAWzB,OAAS,EAAGoC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQvG,EAAK4G,GAAKH,EAAEF,EAAQvG,KAAS4G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQvG,EAAK4G,GAAIA,CAChE,EACIO,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQvG,GAAOqH,EAAUd,EAAQvG,EAAKoH,EAAa,CACxE,EACIjJ,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAwBao/C,EAAsC,IAAIzd,EAAAA,GAAc,6BAA6B,GAE9F0d,EAAyB,SAAA16B,IAAAvJ,EAAAA,EAAAA,GAAAikC,EAAA16B,GAAA,IAAAtJ,GAAAC,EAAAA,EAAAA,GAAA+jC,GAIzB,SAAAA,EAAYzmC,EAAQmJ,EAAmB7F,EAAyBqN,EAA8B+1B,GAAgC,IAAA79C,EA4BlG,OA5BkGd,EAAAA,EAAAA,GAAA,KAAA0+C,IAC1H59C,EAAA4Z,EAAAT,KAAA,OACK2O,6BAA+BA,EACpC9nB,EAAK89C,iBAAmB,EACxB99C,EAAK+9C,gBAAkB/9C,EAAKsjB,UAAU,IAAI5hB,EAAAA,IAC1C1B,EAAKmI,QAAUgP,EACfnX,EAAKg+C,WAAavjC,EAAwBwjC,2BAC1Cj+C,EAAKk+C,UAAW,EAChBl+C,EAAKm+C,mBAAqBR,EAAoC7e,OAAOxe,GACrEtgB,EAAKo+C,qBAAuBP,EAA+B50C,IAAIjJ,EAAKg+C,WAAY,iBAAkB,CAAE70C,IAAK,MACzGnJ,EAAKq+C,oBAAsBr+C,EAAKmI,QAAQm2C,8BACxCt+C,EAAKu+C,qBAAuB,KAC5Bv+C,EAAKw+C,oBAAsB,KAC3Bx+C,EAAKy+C,oBAAqB,EAC1Bz+C,EAAK+9C,gBAAkB/9C,EAAKsjB,UAAU,IAAI5hB,EAAAA,IAC1C1B,EAAK0+C,2BAA6B,KAClC1+C,EAAK2+C,yBAA2B,KAChC3+C,EAAK4+C,gBAAkB,KACvB5+C,EAAK6+C,wBAA0B,KAC/B7+C,EAAK8+C,4BAA8B,KACnC9+C,EAAKsjB,UAAUtjB,EAAKmI,QAAQmB,kBAAiB,kBAAMtJ,EAAK++C,cAAa,EAAK,KAC1E/+C,EAAKsjB,UAAUtjB,EAAKmI,QAAQqB,0BAAyB,SAAAhL,IAC7CA,EAAEiL,WAAW,KAAwCjL,EAAEiL,WAAW,MAClEzJ,EAAK++C,cAAa,EAE1B,KACA/+C,EAAKsjB,UAAUtjB,EAAKg+C,WAAW50C,aAAY,kBAAMpJ,EAAK++C,cAAa,EAAM,KACzE/+C,EAAKsjB,UAAUtjB,EAAKmI,QAAQoB,0BAAyB,kBAAMvJ,EAAK++C,cAAa,EAAK,KAClF/+C,EAAK++C,cAAa,GAAM/+C,CAC5B,CA9BC,OA8BAjB,EAAAA,EAAAA,GAAA6+C,EAAA,EAAAn+C,IAAA,eAAApB,MACD,SAAa2gD,GAAc,IAAAl7C,EAAA,KACjBtC,EAAQrC,KAAKgJ,QAAQ4B,WACrBk1C,EAAsB,OAAVz9C,IAAmBrC,KAAKgJ,QAAQ0B,UAAU,KAAwC1K,KAAKgJ,QAAQ0B,UAAU,MAAwC1K,KAAK6+C,WAAWh0C,IAAIxI,GACvL,IAAIy9C,IAAc9/C,KAAK++C,UAAac,KAGpC7/C,KAAK++C,SAAWe,EAChB9/C,KAAK+/C,cACL//C,KAAK4+C,gBAAgBp0C,QAChBs1C,GAAuB,OAAVz9C,GAAlB,CAGArC,KAAK4+C,gBAAgB17C,IAAIgyB,EAAAA,GAAM8qB,gBAAgB39C,EAAM49C,kCAAkC,WACnFt7C,EAAKy6C,qBAAuBz6C,EAAKgkB,6BAA6BkG,yBAAyBxsB,EAAMmuC,iBAAiB0P,mBAClH,KACA,IAAMC,EAAuB,IAAIC,EAAAA,GAAQpgD,KAAKi/C,qBAAqBj3C,IAAI3F,IACjEg+C,EAAqB,WACvB,IAAI7+C,EACJmD,EAAK46C,2BAA6BY,EAAqB11B,SAAQ,kBAAM9lB,EAAK2nB,cAAc,GAAoC,QAAjC9qB,EAAKmD,EAAK27C,yBAAsC,IAAP9+C,EAAgBA,EAAKmD,EAAKs6C,qBAAqBj3C,IAAI3F,GAC3L,EACMk+C,EAAqB,IAAIH,EAAAA,GAAQ,GAIvCpgD,KAAK4+C,gBAAgB17C,IAAIlD,KAAKgJ,QAAQ4gB,2BAA0B,WAC5Dy2B,GACJ,KACArgD,KAAK4+C,gBAAgB17C,IAAIlD,KAAKgJ,QAAQ6D,yBAAwB,SAACxN,GAC3D,IAAKsF,EAAK26C,oBACF36C,EAAKu6C,oBAAoB/5C,OAAS,EAAG,CACrC,IAAMq7C,EAAiB77C,EAAKu6C,oBAAoBuB,SAAS,GACzD,GAAID,GAAkBnhD,EAAE8mB,QAAQ5C,OAAM,SAAAvc,GAAC,OAAIw5C,EAAejH,gBAAgBvyC,EAAEnH,MAAM,IAE9E,OAZUY,EAWOkE,EAAKg6C,sBAVlCh6C,EAAK66C,yBAA2Be,EAAmB91B,SAAQ,kBAAM9lB,EAAK+7C,YAAYjgD,EAAM,IAapF,CAdiB,IAACA,EAgBtB4/C,GACJ,KACArgD,KAAK4+C,gBAAgB17C,IAAI,CACrBqB,QAAS,WACL47C,EAAqB57C,UACrBg8C,EAAmBh8C,SACvB,IAEJvE,KAAKssB,cAlCL,CAmCJ,GAAC,CAAAhsB,IAAA,cAAApB,MACD,SAAYuB,GAER,GAAKT,KAAKgJ,QAAQmE,YAAc1M,IAAUT,KAAK2+C,kBAAwD,IAApC3+C,KAAKk/C,oBAAoB/5C,OAA5F,CAIA,IAAM9C,EAAQrC,KAAKgJ,QAAQ4B,WACrB41C,EAAiBxgD,KAAKk/C,oBAAoBuB,SAAS,GACzD,IAAKD,GAAkBA,EAAe7tC,kBAAoB6tC,EAAe5tC,cACrE,OAAO5S,KAAK+/C,cAEhB,IAAMY,EAAiBt+C,EAAMqiB,gBAAgB87B,GAC7C,GAAIxgD,KAAKq/C,oBAAqB,CAC1B,IAAMlwB,EAAQwxB,EAAexxB,MAAMnvB,KAAKq/C,qBAExC,IADoBlwB,EAAQA,EAAM,GAAGhqB,OAAS,KAC1Bw7C,EAAex7C,OAC/B,OAAOnF,KAAK+/C,aAEpB,CAEA,IADA,IAAMpwC,EAAQ,GACLpI,EAAI,EAAG0gB,EAAMjoB,KAAKk/C,oBAAoB/5C,OAAQoC,EAAI0gB,EAAK1gB,IAAK,CACjE,IAAMq5C,EAAc5gD,KAAKk/C,oBAAoBuB,SAASl5C,GACtD,GAAKq5C,EAGL,GAAIA,EAAYjuC,kBAAoBiuC,EAAYhuC,cAC5CjD,EAAM5L,KAAK,CACPlE,MAAO+gD,EACPtwC,KAAMqwC,QAGT,CACD,IAAIE,EAAWx+C,EAAMqiB,gBAAgBk8B,GACjCv6B,EAAWs6B,EACXG,EAAmBF,EAAYh7C,YAC/Bm7C,EAAiBH,EAAY/6C,UAC3Bm7C,EAAqBp8B,EAAAA,GAA2Bi8B,EAAUx6B,GAChEy6B,GAAoBE,EACpBH,EAAWA,EAAS19B,OAAO69B,GAC3B36B,EAAWA,EAASlD,OAAO69B,GAC3B,IAAMC,EAAqBr8B,EAAAA,GAA2Bi8B,EAAUx6B,GAChE06B,GAAkBE,EAClBJ,EAAWA,EAAS19B,OAAO,EAAG09B,EAAS17C,OAAS87C,GAChD56B,EAAWA,EAASlD,OAAO,EAAGkD,EAASlhB,OAAS87C,GAC5CH,IAAqBC,GAAsC,IAApB16B,EAASlhB,QAChDwK,EAAM5L,KAAK,CACPlE,MAAO,IAAI+D,EAAAA,EAAMg9C,EAAYjuC,gBAAiBmuC,EAAkBF,EAAYhuC,cAAemuC,GAC3FzwC,KAAM+V,GAGlB,CACJ,CACA,GAAqB,IAAjB1W,EAAMxK,OAGV,IACInF,KAAKgJ,QAAQk4C,cACblhD,KAAKs/C,oBAAqB,EAC1B,IAAM6B,EAAwBnhD,KAAKgJ,QAAQ2kC,gBAAgByT,2BAC3DphD,KAAKgJ,QAAQuH,aAAa,gBAAiBZ,GAC3C3P,KAAKgJ,QAAQ2kC,gBAAgB0T,yBAAyBF,EAC1D,CAAC,QAEGnhD,KAAKs/C,oBAAqB,CAC9B,CA3DA,CA4DJ,GAAC,CAAAh/C,IAAA,UAAApB,MACD,WACIc,KAAK+/C,eACLxU,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAiT,EAAAhT,WAAA,gBAAAzxB,KAAA,KACJ,GAAC,CAAA1Z,IAAA,cAAApB,MACD,WACIc,KAAKg/C,mBAAmB/2C,KAAI,GAC5BjI,KAAKk/C,oBAAoB10C,QACrBxK,KAAKy/C,kBACLz/C,KAAKy/C,gBAAgBxzC,SACrBjM,KAAKy/C,gBAAkB,KACvBz/C,KAAK0/C,wBAA0B,KAEvC,GAAC,CAAAp/C,IAAA,eAAApB,MACD,WAA4B,IAAfoiD,EAAKr6C,UAAA9B,OAAA,QAAA7D,IAAA2F,UAAA,IAAAA,UAAA,GACd,OAAOxI,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAe,IAAA,IAAA4B,EAAAjB,EAAAk/C,EAAA1hD,EAAA2hD,EAAA1zC,EAAA,YAAApN,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAxC,MAAA,UAC9BY,KAAKgJ,QAAQmE,WAAY,CAAFvL,EAAAxC,KAAA,QACL,OAAnBY,KAAK+/C,cAAcn+C,EAAAV,OAAA,iBAGoB,GAArCoC,EAAWtD,KAAKgJ,QAAQgiB,iBACzBhrB,KAAK++C,WAAauC,GAASthD,KAAKgJ,QAAQ2rC,gBAAgBxvC,OAAS,GAAC,CAAAvD,EAAAxC,KAAA,QAEhD,OAAnBY,KAAK+/C,cAAcn+C,EAAAV,OAAA,iBAIoB,GADrCmB,EAAQrC,KAAKgJ,QAAQ4B,WACrB22C,EAAiBl/C,EAAMgG,gBACzBrI,KAAK0/C,yBAA2B1/C,KAAK2/C,8BAAgC4B,EAAc,CAAA3/C,EAAAxC,KAAA,aAC/EkE,EAASm+C,OAAOzhD,KAAK0/C,yBAA0B,CAAF99C,EAAAxC,KAAA,gBAAAwC,EAAAV,OAAA,uBAG7ClB,KAAKk/C,oBAAoB/5C,OAAS,GAAC,CAAAvD,EAAAxC,KAAA,SACe,KAA5CS,EAAQG,KAAKk/C,oBAAoBuB,SAAS,MACnC5gD,EAAMy5B,iBAAiBh2B,GAAS,CAAA1B,EAAAxC,KAAA,gBAAAwC,EAAAV,OAAA,kBAwDtB,OAnD/BlB,KAAK0/C,wBAA0Bp8C,EAC/BtD,KAAK2/C,4BAA8B4B,EAC7BC,GAAUxzB,EAAAA,EAAAA,KAAwB,SAACvtB,GAAK,OAAKhC,EAAUqP,OAAM,OAAQ,GAAMpN,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAA8gD,EAAAC,EAAAx/C,EAAAy/C,EAAAr6C,EAAA0gB,EAAAu4B,EAAA1lB,EAAA,OAAAp6B,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3B,MAAA,OAG1D,OAH0D2B,EAAAC,KAAA,EAErE0gD,EAAK,IAAIG,EAAAA,GAAU,GAAM9gD,EAAA3B,KAAA,EACR0iD,EAAuB9hD,KAAK6+C,WAAYx8C,EAAOiB,EAAU7C,GAAM,OAChC,GADhDkhD,EAAQ5gD,EAAAc,KACd7B,KAAKi/C,qBAAqB5yC,OAAOhK,EAAOq/C,EAAGK,WACvCP,IAAYxhD,KAAKy/C,gBAAe,CAAA1+C,EAAA3B,KAAA,eAAA2B,EAAAG,OAAA,iBAGR,GAA5BlB,KAAKy/C,gBAAkB,KACnB8B,IAAmBl/C,EAAMgG,eAAc,CAAAtH,EAAA3B,KAAA,gBAAA2B,EAAAG,OAAA,kBAGvCiB,EAAS,IACI,OAAbw/C,QAAkC,IAAbA,OAAsB,EAASA,EAASx/C,UAC7DA,EAASw/C,EAASx/C,QAEtBnC,KAAKq/C,qBAAoC,OAAbsC,QAAkC,IAAbA,OAAsB,EAASA,EAASK,cAAgBhiD,KAAKo/C,qBAC1GwC,GAAsB,EACjBr6C,EAAI,EAAG0gB,EAAM9lB,EAAOgD,OAAM,aAAEoC,EAAI0gB,GAAG,CAAAlnB,EAAA3B,KAAA,aACpCwE,EAAAA,EAAM01B,iBAAiBn3B,EAAOoF,GAAIjE,GAAW,CAAFvC,EAAA3B,KAAA,SAM1C,OALDwiD,GAAsB,EACZ,IAANr6C,IACMi5C,EAAiBr+C,EAAOoF,GAC9BpF,EAAO8/C,OAAO16C,EAAG,GACjBpF,EAAO2oC,QAAQ0V,IAClBz/C,EAAAG,OAAA,oBAPqCqG,IAAGxG,EAAA3B,KAAA,oBAW5CwiD,EAAqB,CAAF7gD,EAAA3B,KAAA,SAED,OAAnBY,KAAK+/C,cAAch/C,EAAAG,OAAA,kBAGjB45B,EAAc34B,EAAO4C,KAAI,SAAAlF,GAAK,MAAK,CAAEA,MAAOA,EAAO4K,QAASg0C,EAA0ByD,WAAY,IACxGliD,KAAKg/C,mBAAmB/2C,KAAI,GAC5BjI,KAAKk/C,oBAAoBj3C,IAAI6yB,GAC7B96B,KAAK2+C,mBAAoB59C,EAAA3B,KAAA,iBAAA2B,EAAAC,KAAA,GAAAD,EAAAiB,GAAAjB,EAAA,UAGpBohD,EAAAA,EAAAA,IAAmBphD,EAAAiB,MACpByK,EAAAA,EAAAA,IAAiB1L,EAAAiB,IAEjBhC,KAAKy/C,kBAAoB+B,GAAYxhD,KAAKy/C,iBAE1Cz/C,KAAK+/C,cACR,yBAAAh/C,EAAAQ,OAAA,GAAAX,EAAA,kBAEP,IACFZ,KAAKy/C,gBAAkB+B,EAAQ5/C,EAAAV,OAAA,SACxBsgD,GAAO,yBAAA5/C,EAAAL,OAAA,GAAAG,EAAA,SAEtB,IAAC,EAAApB,IAAA,MAAApB,MA9OD,SAAW8Y,GACP,OAAOA,EAAOC,gBAAgBwmC,EAA0BvmC,GAC5D,KAACumC,CAAA,CAHwB,CAA2Cn6B,EAAAA,IAiPxEm6B,EAA0BvmC,GAAK,+BAC/BumC,EAA0ByD,WAAaE,EAAAA,GAAuB3jC,SAAS,CACnE7K,YAAa,iBACbI,WAAY,EACZR,UAtP0B,8BAwP9BirC,EAA4B93C,EAAW,CACnCc,EAAQ,EAAG+Z,EAAAA,IACX/Z,EAAQ,EAAG2Q,EAAAA,GACX3Q,EAAQ,EAAG6jB,EAAAA,IACX7jB,EAAQ,EAAG4Q,EAAAA,IACZomC,GAEI,IAAM4D,EAAmB,SAAApgB,IAAAznB,EAAAA,EAAAA,GAAA6nC,EAAApgB,GAAA,IAAAhnB,GAAAP,EAAAA,EAAAA,GAAA2nC,GAC5B,SAAAA,IAAc,OAAAtiD,EAAAA,EAAAA,GAAA,KAAAsiD,GAAApnC,EAAAjB,KAAA,KACJ,CACF5I,GAAI,8BACJrP,MAAOi/B,EAAAA,GAAa,sBAAuB,wBAC3CkB,MAAO,uBACPlgB,aAAcmgB,EAAAA,GAAeC,IAAIC,EAAAA,EAAkBC,SAAUD,EAAAA,EAAkBigB,mBAC/E/f,OAAQ,CACJsB,OAAQxB,EAAAA,EAAkB4S,gBAC1BxS,QAAS,KACTD,OAAQ,MAGpB,CAwBC,OAxBA5iC,EAAAA,EAAAA,GAAAyiD,EAAA,EAAA/hD,IAAA,aAAApB,MACD,SAAW+X,EAAU2B,GAAM,IAAAnJ,EAAA,KACjB8yC,EAAgBtrC,EAASjP,IAAIw6C,EAAAA,GACnCC,EAAmBnzC,MAAMinB,QAAQ3d,IAASA,GAAQ,MAACtX,OAAWA,GAAUohD,GAAA1/C,EAAAA,EAAAA,GAAAy/C,EAAA,GAAjEt6C,EAAGu6C,EAAA,GAAEzuB,EAAGyuB,EAAA,GACf,OAAIxpC,EAAAA,EAAIC,MAAMhR,IAAQ9D,EAAAA,EAASs+C,YAAY1uB,GAChCsuB,EAAcK,eAAe,CAAEC,SAAU16C,GAAOo6C,EAAcO,uBAAuBrjD,MAAK,SAAAuY,GACxFA,IAGLA,EAAO0X,YAAYuE,GACnBjc,EAAOiJ,qBAAoB,SAAAhK,GAEvB,OADAxH,EAAKszC,gBAAgB9rC,EAAUe,GACxBvI,EAAKoQ,IAAI5I,EAAUe,EAC9B,IACJ,GAAGvL,EAAAA,KAEP8+B,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAA6W,EAAA5W,WAAA,mBAAAzxB,KAAA,KAAwB/C,EAAU2B,EACtC,GAAC,CAAAtY,IAAA,MAAApB,MACD,SAAIuuC,EAAWz1B,GACX,IAAM0qB,EAAa+b,EAA0Bz2C,IAAIgQ,GACjD,OAAI0qB,EACO5jC,QAAQC,QAAQ2jC,EAAWpW,cAAa,IAE5CxtB,QAAQC,SACnB,KAACsjD,CAAA,CArC2B,CAAS1f,EAAAA,IAuCnCqgB,EAAuBC,EAAAA,GAAcC,mBAAmBzE,EAA0Bz2C,KAYxF,SAAS85C,EAAuBpwB,EAAWrvB,EAAOiB,EAAU7C,GAAO,IAAA+P,EAAA,KACzD2yC,EAAiBzxB,EAAU7sB,QAAQxC,GAIzC,OAAO+gD,EAAAA,EAAAA,IAAMD,EAAep+C,KAAI,SAAA3E,GAAQ,OAAI,kBAAM3B,EAAU+R,OAAM,OAAQ,GAAM9P,EAAAA,EAAAA,KAAAC,MAAE,SAAAqE,IAAA,OAAAtE,EAAAA,EAAAA,KAAAI,MAAA,SAAAmE,GAAA,cAAAA,EAAAjE,KAAAiE,EAAA7F,MAAA,OAEnE,OAFmE6F,EAAAjE,KAAA,EAAAiE,EAAA7F,KAAA,EAE7DgB,EAASijD,2BAA2BhhD,EAAOiB,EAAU7C,GAAM,cAAAwE,EAAA/D,OAAA,SAAA+D,EAAApD,MAAA,OAG3C,OAH2CoD,EAAAjE,KAAA,EAAAiE,EAAAjD,GAAAiD,EAAA,UAGxEhD,EAAAA,EAAAA,IAAyBgD,EAAAjD,IAAIiD,EAAA/D,OAAA,cACtBI,GAAS,yBAAA2D,EAAA1D,OAAA,GAAAyD,EAAA,iBAEtB,MAAG,SAAAzF,GAAM,QAAMA,GAAU+jD,EAAAA,GAAkC,OAAX/jD,QAA8B,IAAXA,OAAoB,EAASA,EAAO4C,OAAO,GACpH,EAzBAohD,EAAAA,EAAAA,IAAsB,IAAIP,EAAqB,CAC3C5xC,GAAI,2BACJ4Q,aAAcw8B,EACdjZ,QAAS,SAAA/kB,GAAC,OAAIA,EAAEu/B,aAAa,EAC7Bxd,OAAQ,CACJsB,OAAQxB,EAAAA,EAAkB4S,gBAC1BzS,OAAQ,IACRC,QAAS,EACTuK,UAAW,CAAC,WAkByBwW,EAAAA,EAAAA,KAAc,iCAAkC,CAAEC,KAAMC,EAAAA,GAAMC,QAAQ,QAAQC,YAAY,IAAMC,MAAOH,EAAAA,GAAMC,QAAQ,QAAQC,YAAY,IAAME,OAAQJ,EAAAA,GAAMC,QAAQ,QAAQC,YAAY,IAAMG,QAASL,EAAAA,GAAMM,OAAShjB,EAAAA,GAAa,gCAAiC,4DAClTijB,EAAAA,EAAAA,IAAgC,iCAAiC,SAACxW,EAAWprC,EAAOiB,GAEhF,OAAOw+C,EADgCrU,EAAUzlC,IAAIoQ,EAAAA,GAA7C0mC,2BACkDz8C,EAAOiB,EAAUwM,EAAAA,EAAkBC,KACjG,KACAwO,EAAAA,EAAAA,IAA2BkgC,EAA0BvmC,GAAIumC,EAA2B,IACpF5W,EAAAA,EAAAA,IAAqBwa,E,wVCjXjB5jD,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAWa8kD,EAAI,WACb,SAAAA,EAAYC,EAAM/jD,IAAUL,EAAAA,EAAAA,GAAA,KAAAmkD,GACxBlkD,KAAKokD,MAAQD,EACbnkD,KAAKqkD,UAAYjkD,CACrB,CAkCC,OAlCAR,EAAAA,EAAAA,GAAAskD,EAAA,EAAA5jD,IAAA,SAAApB,MACD,WACI,MAAO,CACHW,MAAOG,KAAKH,MACZykD,IAAKtkD,KAAKskD,IACVxiD,QAAS9B,KAAK8B,QAEtB,GAAC,CAAAxB,IAAA,QAAA0H,IACD,WACI,OAAOhI,KAAKokD,MAAMvkD,KACtB,GAAC,CAAAS,IAAA,MAAA0H,IACD,WACI,OAAOhI,KAAKokD,MAAME,GACtB,GAAC,CAAAhkD,IAAA,UAAA0H,IACD,WACI,OAAOhI,KAAKokD,MAAMtiD,OACtB,GAAC,CAAAxB,IAAA,UAAApB,MACD,SAAQuB,GACJ,OAAOhC,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAAC,EAAA,YAAAH,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3B,MAAA,WAC/BY,KAAKokD,MAAME,IAAK,CAAFvjD,EAAA3B,KAAA,eAAA2B,EAAAG,OAAA,SACPlB,KAAKokD,MAAME,KAAG,UAEiB,oBAA/BtkD,KAAKqkD,UAAUE,YAA0B,CAAAxjD,EAAA3B,KAAA,eAAA2B,EAAAG,OAAA,SACzCpC,QAAQC,QAAQiB,KAAKqkD,UAAUE,YAAYvkD,KAAKokD,MAAO3jD,IAAQhB,MAAK,SAAAP,GAEvE,OADA2B,EAAKujD,MAAQllD,GAAS2B,EAAKujD,MACvBvjD,EAAKujD,MAAME,IAEJzjD,EAAK9B,QAAQ0B,GAEjB3B,QAAQE,OAAO,IAAIyS,MAAM,WACpC,KAAE,cAAA1Q,EAAAG,OAAA,SAECpC,QAAQE,OAAO,IAAIyS,MAAM,aAAW,wBAAA1Q,EAAAQ,OAAA,GAAAX,EAAA,SAEnD,KAACsjD,CAAA,CAtCY,GAwCJM,EAAS,WAClB,SAAAA,EAAYC,GAAQ,IAAA9/C,EAAA,MAAA5E,EAAAA,EAAAA,GAAA,KAAAykD,GAChBxkD,KAAKsC,aAAe,IAAIC,EAAAA,GACxB,IACqCE,EADjCiiD,EAAQ,GAAG/hD,GAAAC,EAAAA,EAAAA,GACgB6hD,GAAM,QAAAzlC,EAAA,WAAE,IAAAjc,GAAAC,EAAAA,EAAAA,GAAAP,EAAAvD,MAAA,GAA3B+D,EAAIF,EAAA,GAAE3C,EAAQ2C,EAAA,GAEhB4hD,EAAW1hD,EAAKyhD,MAAM3/C,KAAI,SAAAo/C,GAAI,OAAI,IAAID,EAAKC,EAAM/jD,EAAS,IAChEskD,EAAQF,EAAUI,OAAOF,EAAOC,IAE5BE,EAAAA,EAAAA,IAAa5hD,IACb0B,EAAKrC,aAAaY,IAAID,EAE9B,EARA,IAAAN,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAtD,MAAAwf,GAQC,OAAAhb,GAAArB,EAAAtD,EAAA2E,EAAA,SAAArB,EAAAsB,GAAA,CACDjE,KAAK0kD,MAAQA,CACjB,CAuCC,OAvCA9kD,EAAAA,EAAAA,GAAA4kD,EAAA,EAAAlkD,IAAA,UAAApB,MACD,WACIc,KAAKsC,aAAaiC,UAClBvE,KAAK0kD,MAAMv/C,OAAS,CACxB,IAAC,EAAA7E,IAAA,SAAApB,MACD,SAAc4lD,EAAUH,GAEpB,IACII,EACAC,EACAC,EACAC,EAJE3lD,EAAS,GAKf,IAAKwlD,EAAW,EAAGE,EAAW,EAAGD,EAASF,EAAS3/C,OAAQ+/C,EAASP,EAASx/C,OAAQ4/C,EAAWC,GAAUC,EAAWC,GAAS,CAC1H,IAAMC,EAAUL,EAASC,GACnBK,EAAUT,EAASM,GACzB,GAAIrhD,EAAAA,EAAMiP,0BAA0BsyC,EAAQtlD,MAAOulD,EAAQvlD,OAEvDklD,SAGqBnhD,EAAAA,EAAM4O,yBAAyB2yC,EAAQtlD,MAAOulD,EAAQvlD,OACxD,GAEnBN,EAAOwE,KAAKohD,GACZJ,MAIAxlD,EAAOwE,KAAKqhD,GACZH,IAER,CACA,KAAOF,EAAWC,EAAQD,IACtBxlD,EAAOwE,KAAK+gD,EAASC,IAEzB,KAAOE,EAAWC,EAAQD,IACtB1lD,EAAOwE,KAAK4gD,EAASM,IAEzB,OAAO1lD,CACX,KAACilD,CAAA,CArDiB,GAuDf,SAASa,EAAS3zB,EAAWrvB,EAAO5B,GACvC,IAAM2vB,EAAQ,GAER1rB,EAAWgtB,EAAU7sB,QAAQxC,GAAOyC,UAAUC,KAAI,SAAC3E,EAAUmH,GAC/D,OAAOzI,QAAQC,QAAQqB,EAASklD,aAAajjD,EAAO5B,IAAQhB,MAAK,SAAAF,GACzDA,IACA6wB,EAAM7oB,GAAK,CAAChI,EAAQa,GAE5B,GAAG6B,EAAAA,GACP,IACA,OAAOnD,QAAQsG,IAAIV,GAAUjF,MAAK,WAC9B,IAAMF,EAAS,IAAIilD,GAAUe,EAAAA,EAAAA,IAASn1B,IACtC,OAAK3vB,EAAMU,yBAGX5B,EAAOgF,UACA,IAAIigD,EAAU,KAHVjlD,CAIf,GACJ,CACAkZ,EAAAA,EAAiBC,gBAAgB,wBAAwB,SAACzB,GAAQ,QAAA0B,EAAA1R,UAAA9B,OAAKyT,EAAI,IAAAtJ,MAAAqJ,EAAA,EAAAA,EAAA,KAAA5Q,EAAA,EAAAA,EAAA4Q,EAAA5Q,IAAJ6Q,EAAI7Q,EAAA,GAAAd,UAAAc,GAAA,OAAKtJ,OAAU,OAAQ,OAAQ,GAAMiC,EAAAA,EAAAA,KAAAC,MAAE,SAAAe,IAAA,IAAAyG,EAAAq9C,EAAAzsC,EAAA0sC,EAAApjD,EAAAY,EAAAsE,EAAAhI,EAAA,OAAAmB,EAAAA,EAAAA,KAAAI,MAAA,SAAAc,GAAA,cAAAA,EAAAZ,KAAAY,EAAAxC,MAAA,OAOvD,GANlD+I,EAAqByQ,EAAI,GAApB4sC,EAAgB5sC,EAAI,IAC9BK,EAAAA,EAAAA,IAAW9Q,aAAe+Q,EAAAA,GACE,kBAAjBssC,IACPA,EAAe,GAClBzsC,EACwB9B,EAASjP,IAAIoQ,EAAAA,GAA9BqtC,EAAY1sC,EAAZ0sC,aACFpjD,EAAQ4U,EAASjP,IAAI09C,EAAAA,GAAe96C,SAASzC,GACvC,CAAFvG,EAAAxC,KAAA,eAAAwC,EAAAV,OAAA,SACC,IAAE,OAEA,OAFAU,EAAAxC,KAAA,EAEMimD,EAASI,EAAcpjD,EAAOyN,EAAAA,EAAkBC,MAAK,OAA9D,GAAJ9M,EAAIrB,EAAAC,KACC,CAAFD,EAAAxC,KAAA,gBAAAwC,EAAAV,OAAA,SACE,IAAE,QAGJqG,EAAI,EAAC,aAAEA,EAAIuF,KAAK9C,IAAIw7C,EAAcviD,EAAKyhD,MAAMv/C,SAAO,CAAAvD,EAAAxC,KAAA,SACzD,OADyDwC,EAAAxC,KAAA,GACnD6D,EAAKyhD,MAAMn9C,GAAGxI,QAAQ+Q,EAAAA,EAAkBC,MAAK,QADQxI,IAAG3F,EAAAxC,KAAA,iBAInD,OADTG,EAAS0D,EAAKyhD,MAAM1pB,MAAM,GAChC/3B,EAAKsB,UAAU3C,EAAAV,OAAA,SACR3B,GAAM,yBAAAqC,EAAAL,OAAA,GAAAG,EAAA,IACf,I,oCC3JEiF,EAA0C,SAAUC,EAAYC,EAAQvG,EAAKwG,GAC7E,IAA2HC,EAAvHC,EAAIC,UAAU9B,OAAQ+B,EAAIF,EAAI,EAAIH,EAAkB,OAATC,EAAgBA,EAAOK,OAAOC,yBAAyBP,EAAQvG,GAAOwG,EACrH,GAAuB,kBAAZO,SAAoD,oBAArBA,QAAQC,SAAyBJ,EAAIG,QAAQC,SAASV,EAAYC,EAAQvG,EAAKwG,QACpH,IAAK,IAAIS,EAAIX,EAAWzB,OAAS,EAAGoC,GAAK,EAAGA,KAASR,EAAIH,EAAWW,MAAIL,GAAKF,EAAI,EAAID,EAAEG,GAAKF,EAAI,EAAID,EAAEF,EAAQvG,EAAK4G,GAAKH,EAAEF,EAAQvG,KAAS4G,GAChJ,OAAOF,EAAI,GAAKE,GAAKC,OAAOK,eAAeX,EAAQvG,EAAK4G,GAAIA,CAChE,EACIO,EAAoC,SAAUC,EAAYC,GAC1D,OAAO,SAAUd,EAAQvG,GAAOqH,EAAUd,EAAQvG,EAAKoH,EAAa,CACxE,EACIjJ,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIE,WAAU,SAAUC,EAASC,GAC/C,SAASC,EAAUC,GAAS,IAAMC,EAAKN,EAAUO,KAAKF,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC1F,SAASC,EAASJ,GAAS,IAAMC,EAAKN,EAAiB,MAAEK,GAAS,CAAE,MAAOG,GAAKL,EAAOK,EAAI,CAAE,CAC7F,SAASF,EAAKI,GAJlB,IAAeL,EAIaK,EAAOC,KAAOT,EAAQQ,EAAOL,QAJ1CA,EAIyDK,EAAOL,MAJhDA,aAAiBN,EAAIM,EAAQ,IAAIN,GAAE,SAAUG,GAAWA,EAAQG,EAAQ,KAIjBO,KAAKR,EAAWK,EAAW,CAC7GH,GAAMN,EAAYA,EAAUa,MAAMhB,EAASC,GAAc,KAAKS,OAClE,GACJ,EAqBIumD,EAAY,SAAA5hC,IAAAvJ,EAAAA,EAAAA,GAAAmrC,EAAA5hC,GAAA,IAAAtJ,GAAAC,EAAAA,EAAAA,GAAAirC,GAIZ,SAAAA,EAAY3tC,EAAQmD,EAAe2D,EAAqBxD,EAAyBojC,GAAgC,IAAA79C,GAAAd,EAAAA,EAAAA,GAAA,KAAA4lD,IAC7G9kD,EAAA4Z,EAAAT,KAAA,OACKhC,OAASA,EACdnX,EAAKsa,cAAgBA,EACrBta,EAAKie,oBAAsBA,EAC3Bje,EAAKya,wBAA0BA,EAC/Bza,EAAK6wB,UAAY7wB,EAAKya,wBAAwBmqC,aAC9C5kD,EAAK+kD,oBAAsBlH,EAA+B50C,IAAIjJ,EAAK6wB,UAAW,QAAS,CAAE1nB,IAAK,IAAM+C,IAAK,MACzGlM,EAAKglD,aAAehlD,EAAKsjB,UAAU,IAAI3Y,EAAAA,IAAiB,kBAAM3K,EAAKilD,iBAAiB,GAAE,MACtFjlD,EAAKklD,eAAiB,KACtBllD,EAAKmlD,gBAAkB,KACvBnlD,EAAKolD,mBAAqB,CAAC,EAC3BplD,EAAKqlD,uBAAyB,KAC9B,IAAMC,EAAmBtlD,EAAKsjB,UAAU,IAAIlW,EAAAA,GAAiB+J,IAyC/B,OAxC9BnX,EAAKsjB,UAAUgiC,EAAiBh4C,8BAA6B,SAAAs0C,GAAiC,IAAAC,GAAA1/C,EAAAA,EAAAA,GAAAy/C,EAAA,GAA/Br0C,EAAUs0C,EAAA,GAAE0D,EAAa1D,EAAA,GACpF7hD,EAAKwlD,mBAAmBj4C,EAAYg4C,EACxC,KACAvlD,EAAKsjB,UAAUgiC,EAAiBr3C,WAAU,SAACzP,GACvCwB,EAAKylD,gBAAgBjnD,EACzB,KACAwB,EAAKsjB,UAAUgiC,EAAiBt3C,UAAS,SAACxP,GACtCwB,EAAK0lD,6BACT,KACA1lD,EAAKsjB,UAAUnM,EAAO3N,0BAAyB,SAAChL,GACvCA,EAAEiL,WAAW,MAIlBzJ,EAAK2lD,kBAAkB,IAEvB3lD,EAAKU,OAELV,EAAKglD,aAAar5C,SAAS,GAC/B,KACA3L,EAAKsjB,UAAUnM,EAAOnL,yBAAwB,SAACxN,GACtCwB,EAAKmX,OAAO7K,YAGjBtM,EAAKglD,aAAar5C,SAAS3L,EAAK+kD,oBAAoB59C,IAAInH,EAAKmX,OAAOpN,YACxE,KACA/J,EAAKsjB,UAAUnM,EAAO7N,kBAAiB,SAAC9K,GACpCwB,EAAKolD,mBAAqB,CAAC,EAC3BplD,EAAKqlD,uBAAyB,KAC9BrlD,EAAKU,OACLV,EAAKglD,aAAar5C,SAAS,EAC/B,KACA3L,EAAKsjB,UAAUnM,EAAO5N,0BAAyB,SAAC/K,GAC5CwB,EAAKU,OACLV,EAAKglD,aAAar5C,SAAS,EAC/B,KACA3L,EAAKsjB,UAAUtjB,EAAK6wB,UAAUznB,aAAY,SAAC5K,GACvCwB,EAAKU,OACLV,EAAKglD,aAAar5C,SAAS,EAC/B,KACA3L,EAAKglD,aAAar5C,SAAS,GAAG3L,CAClC,CAxDC,OAwDAjB,EAAAA,EAAAA,GAAA+lD,EAAA,EAAArlD,IAAA,kBAAApB,MACD,WACI,OAAOT,EAAUuB,UAAM,OAAQ,GAAMU,EAAAA,EAAAA,KAAAC,MAAE,SAAAC,IAAA,IAAAyB,EAAAq/C,EAAA/8C,EAAA,YAAAjE,EAAAA,EAAAA,KAAAI,MAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAA3B,MAAA,UAC9BY,KAAKgY,OAAO7K,YAAenN,KAAKgY,OAAOtN,UAAU,IAA4B,CAAA3J,EAAA3B,KAAA,eAAA2B,EAAAG,OAAA,iBAG9C,GAA9BmB,EAAQrC,KAAKgY,OAAOpN,WACrB5K,KAAK0xB,UAAU7mB,IAAIxI,GAAQ,CAAFtB,EAAA3B,KAAA,eAAA2B,EAAAG,OAAA,iBAUH,OAPvBlB,KAAKgmD,kBACLhmD,KAAKgmD,gBAAgBzhD,UACrBvE,KAAKgmD,gBAAkB,MAE3BhmD,KAAK+lD,gBAAiB/3B,EAAAA,EAAAA,KAAwB,SAAAvtB,GAAK,OAAI4kD,EAAS1gD,EAAK+sB,UAAWrvB,EAAO5B,EAAM,IAAEM,EAAAC,KAAA,EAErF0gD,EAAK,IAAIG,EAAAA,GAAU,GAAM9gD,EAAA3B,KAAA,GACFY,KAAK+lD,eAAc,QACK,GADrD/lD,KAAKgmD,gBAAejlD,EAAAc,KACpB7B,KAAK4lD,oBAAoBv5C,OAAOhK,EAAOq/C,EAAGK,YACtC1/C,EAAMiD,aAAc,CAAFvE,EAAA3B,KAAA,gBAAA2B,EAAAG,OAAA,kBAGtBlB,KAAKwmD,kBAAkBxmD,KAAKgmD,gBAAgBtB,OAAO3jD,EAAA3B,KAAA,iBAAA2B,EAAAC,KAAA,GAAAD,EAAAiB,GAAAjB,EAAA,UAGnD0L,EAAAA,EAAAA,IAAiB1L,EAAAiB,IAAM,QAGI,OAHJjB,EAAAC,KAAA,GAGvBhB,KAAK+lD,eAAiB,KAAKhlD,EAAA2L,OAAA,6BAAA3L,EAAAQ,OAAA,GAAAX,EAAA,wBAGvC,GAAC,CAAAN,IAAA,oBAAApB,MACD,SAAkBwlD,GAId,IAJqB,IAAA52C,EAAA,KACfoO,EAAmF,WAArElc,KAAKgY,OAAOtN,UAAU,IACpC+7C,EAAiB,GAEvBC,EAAA,EAAAC,EADax/C,OAAO0Q,KAAK7X,KAAKimD,oBACCS,EAAAC,EAAAxhD,OAAAuhD,IAAE,CAA5B,IAAMv1B,EAAYw1B,EAAAD,GACbE,EAAY5mD,KAAKimD,mBAAmB90B,GAC1Cs1B,EAAe1iD,KAAK6iD,EAAUz1B,aAClC,CACA,IAAM01B,EAAiB,GACvB,GAAInC,EAAO,CACP,IACwBjiD,EADxBE,GAAAC,EAAAA,EAAAA,GACmB8hD,GAAK,IAAxB,IAAA/hD,EAAAE,MAAAJ,EAAAE,EAAAG,KAAAtD,MAA0B,KAAf2kD,EAAI1hD,EAAAvD,MACX2nD,EAAe9iD,KAAK+iD,EAAepzC,WAAWywC,EAAMjoC,GACxD,CAAC,OAAAlY,GAAArB,EAAAtD,EAAA2E,EAAA,SAAArB,EAAAsB,GAAA,CACL,CACAjE,KAAKgY,OAAOhB,mBAAkB,SAACga,GAC3B,IAAM8J,EAAc9J,EAAe7Z,iBAAiBsvC,EAAgBI,GACpE/4C,EAAKm4C,mBAAqB,CAAC,EAC3Bn4C,EAAKo4C,uBAAyB,KAC9B,IAAK,IAAI3+C,EAAI,EAAG0gB,EAAM6S,EAAY31B,OAAQoC,EAAI0gB,EAAK1gB,IAAK,CACpD,IAAMq/C,EAAY,IAAIE,EAAepC,EAAMn9C,GAAIuzB,EAAYvzB,IAC3DuG,EAAKm4C,mBAAmBW,EAAUz1B,cAAgBy1B,CACtD,CACJ,GACJ,GAAC,CAAAtmD,IAAA,qBAAApB,MACD,SAAmBkP,EAAY24C,GAAS,IAAAt3C,EAAA,KAC9ByM,EAAmF,WAArElc,KAAKgY,OAAOtN,UAAU,IAC1C,GAAI1K,KAAK8/C,UAAU1xC,EAAY24C,GAAU,CACrC/mD,KAAKumD,8BACL,IAAMS,EAAahnD,KAAKinD,kBAAkB74C,EAAWvH,OAAOvD,UACxD0jD,GACAhnD,KAAKgY,OAAOhB,mBAAkB,SAACga,GAC3Bg2B,EAAWE,SAASl2B,EAAgB9U,GACpCzM,EAAKy2C,uBAAyBc,EAAW71B,YAC7C,GAER,MAEInxB,KAAKumD,6BAEb,GAAC,CAAAjmD,IAAA,8BAAApB,MACD,WACI,IAAMgd,EAAmF,WAArElc,KAAKgY,OAAOtN,UAAU,IAC1C,GAAI1K,KAAKkmD,uBAAwB,CAC7B,IAAMc,EAAahnD,KAAKimD,mBAAmBjmD,KAAKkmD,wBAC5Cc,GACAhnD,KAAKgY,OAAOhB,mBAAkB,SAACga,GAC3Bg2B,EAAWG,WAAWn2B,EAAgB9U,EAC1C,IAEJlc,KAAKkmD,uBAAyB,IAClC,CACJ,GAAC,CAAA5lD,IAAA,kBAAApB,MACD,SAAgBkP,GACZ,GAAKpO,KAAK8/C,UAAU1xC,GAApB,CAGA,IAAM44C,EAAahnD,KAAKinD,kBAAkB74C,EAAWvH,OAAOvD,UACvD0jD,GAGLhnD,KAAKonD,mBAAmBJ,EAAY54C,EAAWmT,uBAAuB,EALtE,CAMJ,GAAC,CAAAjhB,IAAA,qBAAApB,MACD,SAAmB8nD,EAAY9lC,GAAqC,IAAA1Q,EAAA,KAAzB62C,EAAepgD,UAAA9B,OAAA,QAAA7D,IAAA2F,UAAA,IAAAA,UAAA,GACtD,GAAKjH,KAAKmb,cAAV,CAGA,IAAQgpC,EAAS6C,EAAT7C,KACRA,EAAKplD,QAAQ+Q,EAAAA,EAAkBC,MAAMtQ,MAAK,SAAA0I,GAEtC,GAAmB,kBAARA,GAAoBqI,EAAKwH,OAAO7K,WAAY,CACnD,IAAMm6C,EAAW92C,EAAKwH,OAAOpN,WAAWzC,IACxC,GAAIm/C,EAASxqC,SAAWC,EAAAA,GAAQwqC,MAAQp/C,EAAI8d,WAAW,GAAD/d,OAAI6U,EAAAA,GAAQwqC,KAAI,MAAM,CACxE,IAAMC,EAAYtuC,EAAAA,EAAIuZ,MAAMtqB,GAC5B,GAAIq/C,EAAU1qC,SAAWC,EAAAA,GAAQwqC,KAAM,CACnC,IAAME,EAASC,EAAAA,GAAyBF,GACpCG,EAAe,KACfF,EAAOxhC,WAAW,OAClB0hC,EAAe,IAAHz/C,OAAOu/C,EAAOtkC,OAAO,IAE5BskC,EAAOxhC,WAAW,UACvB0hC,EAAe,IAAHz/C,OAAOu/C,EAAOtkC,OAAO,KAEjCwkC,IACAx/C,EAAMu/C,EAAAA,GAAmBJ,EAAUK,GAE3C,CACJ,CACJ,CACA,OAAOn3C,EAAK2K,cAAcysC,KAAKz/C,EAAK,CAAE+Y,WAAAA,EAAYmmC,gBAAAA,EAAiBQ,yBAAyB,EAAMC,eAAe,EAAMC,eAAe,GAC1I,IAAG,SAAA/jD,GACC,IAAMgkD,EAAiBhkD,aAAeyN,MAAQzN,EAAI4N,QAAU5N,EAErC,YAAnBgkD,EACAx3C,EAAKsO,oBAAoBmpC,KAAKjnB,EAAAA,GAAa,cAAe,8DAA+DmjB,EAAKG,IAAIl8C,aAE1G,YAAnB4/C,EACLx3C,EAAKsO,oBAAoBmpC,KAAKjnB,EAAAA,GAAa,cAAe,6DAG1Dv0B,EAAAA,EAAAA,IAAkBzI,EAE1B,GApCA,CAqCJ,GAAC,CAAA1D,IAAA,oBAAApB,MACD,SAAkBoE,GACd,IAAKtD,KAAKgY,OAAO7K,aAAe7J,EAC5B,OAAO,KAEX,IAMoCH,EAN9B23B,EAAc96B,KAAKgY,OAAOpN,WAAW8L,sBAAsB,CAC7D/D,gBAAiBrP,EAASmC,WAC1BG,YAAatC,EAAS6C,OACtByM,cAAetP,EAASmC,WACxBI,UAAWvC,EAAS6C,QACrB,GAAG,GAAM/C,GAAAR,EAAAA,EAAAA,GACak4B,GAAW,IAApC,IAAA13B,EAAAP,MAAAM,EAAAC,EAAAN,KAAAtD,MAAsC,KAA3BkU,EAAUvQ,EAAAjE,MACXgpD,EAAoBloD,KAAKimD,mBAAmBvyC,EAAWtC,IAC7D,GAAI82C,EACA,OAAOA,CAEf,CAAC,OAAAlkD,GAAAZ,EAAA/D,EAAA2E,EAAA,SAAAZ,EAAAa,GAAA,CACD,OAAO,IACX,GAAC,CAAA3D,IAAA,YAAApB,MACD,SAAUkP,EAAY24C,GAClB,OAAOoB,QAAoC,IAA3B/5C,EAAWvH,OAAO+J,OAC1BxC,EAAWtF,oBAAuBi+C,GAAWA,EAAQqB,qBACjE,GAAC,CAAA9nD,IAAA,OAAApB,MACD,WACI,IAAIsC,EACJxB,KAAK6lD,aAAa55C,SACdjM,KAAKgmD,kBAC2B,QAA/BxkD,EAAKxB,KAAKgmD,uBAAoC,IAAPxkD,GAAyBA,EAAG+C,UACpEvE,KAAKgmD,gBAAkB,MAEvBhmD,KAAK+lD,iBACL/lD,KAAK+lD,eAAe95C,SACpBjM,KAAK+lD,eAAiB,KAE9B,GAAC,CAAAzlD,IAAA,UAAApB,MACD,YACIqsC,EAAAA,EAAAA,IAAAC,EAAAA,EAAAA,GAAAma,EAAAla,WAAA,gBAAAzxB,KAAA,MACAha,KAAKuB,MACT,IAAC,EAAAjB,IAAA,MAAApB,MAvOD,SAAW8Y,GACP,OAAOA,EAAOC,gBAAgB0tC,EAAaztC,GAC/C,KAACytC,CAAA,CAHW,CAA8BrhC,EAAAA,IA0O9CqhC,EAAaztC,GAAK,sBAClBytC,EAAeh/C,EAAW,CACtBc,EAAQ,EAAG4W,EAAAA,IACX5W,EAAQ,EAAG8Q,EAAAA,IACX9Q,EAAQ,EAAG2Q,EAAAA,GACX3Q,EAAQ,EAAG4Q,EAAAA,IACZstC,GAEH,IAAMjyC,EAAa,CACf20C,QAASjG,EAAAA,GAAuB3jC,SAAS,CACrC7K,YAAa,gBACbI,WAAY,EACZD,uBAAuB,EACvBR,gBAAiB,kBAErBwV,OAAQq5B,EAAAA,GAAuB3jC,SAAS,CACpC7K,YAAa,uBACbI,WAAY,EACZD,uBAAuB,EACvBR,gBAAiB,0BAGnBuzC,EAAc,WAYhB,SAAAA,EAAY3C,EAAMhzB,IAAcpxB,EAAAA,EAAAA,GAAA,KAAA+mD,GAC5B9mD,KAAKmkD,KAAOA,EACZnkD,KAAKmxB,aAAeA,CACxB,CAJC,OAIAvxB,EAAAA,EAAAA,GAAAknD,EAAA,EAAAxmD,IAAA,WAAApB,MACD,SAAS8xB,EAAgB9U,GACrB8U,EAAes3B,wBAAwBtoD,KAAKmxB,aAAc21B,EAAeyB,YAAYvoD,KAAKmkD,KAAMjoC,GAAY,GAChH,GAAC,CAAA5b,IAAA,aAAApB,MACD,SAAW8xB,EAAgB9U,GACvB8U,EAAes3B,wBAAwBtoD,KAAKmxB,aAAc21B,EAAeyB,YAAYvoD,KAAKmkD,KAAMjoC,GAAY,GAChH,IAAC,EAAA5b,IAAA,aAAApB,MApBD,SAAkBilD,EAAMjoC,GACpB,MAAO,CACHrc,MAAOskD,EAAKtkD,MACZ4K,QAASq8C,EAAeyB,YAAYpE,EAAMjoC,GAAY,GAE9D,GAAC,CAAA5b,IAAA,cAAApB,MACD,SAAmBilD,EAAMjoC,EAAY+c,GACjC,IAAMxuB,EAAUtD,OAAO0kC,OAAO,CAAC,EAAI5S,EAAWvlB,EAAWqV,OAASrV,EAAW20C,SAE7E,OADA59C,EAAQ+9C,aAchB,SAAyBrE,EAAMjoC,GAC3B,IAAMusC,EAAatE,EAAKG,KAAO,aAAaoE,KAAKvE,EAAKG,IAAIl8C,YACpDrG,EAAQoiD,EAAKriD,QACbqiD,EAAKriD,QACL2mD,EACIznB,EAAAA,GAAa,4BAA6B,mBAC1CA,EAAAA,GAAa,wBAAyB,eAC1C7kB,EAAKD,EACLW,EAAAA,GACImkB,EAAAA,GAAa,6BAA8B,eAC3CA,EAAAA,GAAa,yBAA0B,gBAC3CnkB,EAAAA,GACImkB,EAAAA,GAAa,4BAA6B,kBAC1CA,EAAAA,GAAa,wBAAyB,eAChD,GAAImjB,EAAKG,IAAK,CACV,IAAIqE,EAAc,GAClB,GAAI,aAAaD,KAAKvE,EAAKG,IAAIl8C,YAAa,CAExC,IAAM+mB,EAAQg1B,EAAKG,IAAIl8C,WAAW+mB,MAAM,qBACxC,GAAIA,EAAO,CACP,IAAM3F,EAAY2F,EAAM,GACxBw5B,EAAc3nB,EAAAA,GAAa,sBAAuB,sBAAuBxX,EAC7E,CACJ,CAIA,OAHqB,IAAIhN,EAAAA,GAAe,IAAI,GACvCosC,WAAWzE,EAAKG,IAAIl8C,UAAS,GAAMgI,QAAQ,KAAM,OAAQrO,EAAO4mD,GAChEE,eAAe,KAAD3gD,OAAMiU,EAAE,KAE/B,CAEI,OAAO,IAAIK,EAAAA,IAAiBC,WAAW,GAADvU,OAAInG,EAAK,MAAAmG,OAAKiU,EAAE,KAE9D,CA9C+B2sC,CAAgB3E,EAAMjoC,GACtCzR,CACX,KAACq8C,CAAA,CAXe,GAuDnB,IACKiC,EAAc,SAAA9mB,IAAAznB,EAAAA,EAAAA,GAAAuuC,EAAA9mB,GAAA,IAAAhnB,GAAAP,EAAAA,EAAAA,GAAAquC,GAChB,SAAAA,IAAc,OAAAhpD,EAAAA,EAAAA,GAAA,KAAAgpD,GAAA9tC,EAAAjB,KAAA,KACJ,CACF5I,GAAI,yBACJrP,MAAOi/B,EAAAA,GAAa,QAAS,aAC7BkB,MAAO,YACPlgB,kBAAc1gB,GAEtB,CAgBC,OAhBA1B,EAAAA,EAAAA,GAAAmpD,EAAA,EAAAzoD,IAAA,MAAApB,MACD,SAAI+X,EAAUe,GACV,IAAMgxC,EAAerD,EAAa39C,IAAIgQ,GACtC,GAAKgxC,GAGAhxC,EAAO7K,WAAZ,CAGA,IAC4B0E,EADtB6iC,EAAa18B,EAAO28B,gBAAgB7iC,GAAAlP,EAAAA,EAAAA,GACxB8xC,GAAU,IAA5B,IAAA5iC,EAAAjP,MAAAgP,EAAAC,EAAAhP,KAAAtD,MAA8B,KAAnB+6C,EAAG1oC,EAAA3S,MACJilD,EAAO6E,EAAa/B,kBAAkB1M,EAAIz2C,kBAC5CqgD,GACA6E,EAAa5B,mBAAmBjD,GAAM,EAE9C,CAAC,OAAAngD,GAAA8N,EAAAzS,EAAA2E,EAAA,SAAA8N,EAAA7N,GAAA,CAPD,CAQJ,KAAC8kD,CAAA,CAxBe,CAASpmB,EAAAA,KA0B7BpkB,EAAAA,EAAAA,IAA2BonC,EAAaztC,GAAIytC,EAAc,IAC1D9d,EAAAA,EAAAA,IAAqBkhB,E","sources":["../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHints.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsController.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsHover.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsContribution.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsLocations.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/consts.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/utils.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostText.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionToGhostText.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsModel.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/suggestWidgetInlineCompletionProvider.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/suggestWidgetPreviewModel.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextModel.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextWidget.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextController.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextHoverParticipant.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostText.contribution.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineSuggestionHintsWidget.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/lineSelection/browser/lineSelection.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/copyLinesCommand.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/moveLinesCommand.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/sortLinesCommand.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/linesOperations.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/linkedEditing/browser/linkedEditing.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/links/browser/getLinks.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/editor/contrib/links/browser/links.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { URI } from '../../../../base/common/uri.js';\nexport class InlayHintAnchor {\n    constructor(range, direction) {\n        this.range = range;\n        this.direction = direction;\n    }\n}\nexport class InlayHintItem {\n    constructor(hint, anchor, provider) {\n        this.hint = hint;\n        this.anchor = anchor;\n        this.provider = provider;\n        this._isResolved = false;\n    }\n    with(delta) {\n        const result = new InlayHintItem(this.hint, delta.anchor, this.provider);\n        result._isResolved = this._isResolved;\n        result._currentResolve = this._currentResolve;\n        return result;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.provider.resolveInlayHint !== 'function') {\n                return;\n            }\n            if (this._currentResolve) {\n                // wait for an active resolve operation and try again\n                // when that's done.\n                yield this._currentResolve;\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                return this.resolve(token);\n            }\n            if (!this._isResolved) {\n                this._currentResolve = this._doResolve(token)\n                    .finally(() => this._currentResolve = undefined);\n            }\n            yield this._currentResolve;\n        });\n    }\n    _doResolve(token) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const newHint = yield Promise.resolve(this.provider.resolveInlayHint(this.hint, token));\n                this.hint.tooltip = (_a = newHint === null || newHint === void 0 ? void 0 : newHint.tooltip) !== null && _a !== void 0 ? _a : this.hint.tooltip;\n                this.hint.label = (_b = newHint === null || newHint === void 0 ? void 0 : newHint.label) !== null && _b !== void 0 ? _b : this.hint.label;\n                this._isResolved = true;\n            }\n            catch (err) {\n                onUnexpectedExternalError(err);\n                this._isResolved = false;\n            }\n        });\n    }\n}\nexport class InlayHintsFragments {\n    static create(registry, model, ranges, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = [];\n            const promises = registry.ordered(model).reverse().map(provider => ranges.map((range) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const result = yield provider.provideInlayHints(model, range, token);\n                    if (result === null || result === void 0 ? void 0 : result.hints.length) {\n                        data.push([result, provider]);\n                    }\n                }\n                catch (err) {\n                    onUnexpectedExternalError(err);\n                }\n            })));\n            yield Promise.all(promises.flat());\n            if (token.isCancellationRequested || model.isDisposed()) {\n                throw new CancellationError();\n            }\n            return new InlayHintsFragments(ranges, data, model);\n        });\n    }\n    constructor(ranges, data, model) {\n        this._disposables = new DisposableStore();\n        this.ranges = ranges;\n        this.provider = new Set();\n        const items = [];\n        for (const [list, provider] of data) {\n            this._disposables.add(list);\n            this.provider.add(provider);\n            for (const hint of list.hints) {\n                // compute the range to which the item should be attached to\n                const position = model.validatePosition(hint.position);\n                let direction = 'before';\n                const wordRange = InlayHintsFragments._getRangeAtPosition(model, position);\n                let range;\n                if (wordRange.getStartPosition().isBefore(position)) {\n                    range = Range.fromPositions(wordRange.getStartPosition(), position);\n                    direction = 'after';\n                }\n                else {\n                    range = Range.fromPositions(position, wordRange.getEndPosition());\n                    direction = 'before';\n                }\n                items.push(new InlayHintItem(hint, new InlayHintAnchor(range, direction), provider));\n            }\n        }\n        this.items = items.sort((a, b) => Position.compare(a.hint.position, b.hint.position));\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    static _getRangeAtPosition(model, position) {\n        const line = position.lineNumber;\n        const word = model.getWordAtPosition(position);\n        if (word) {\n            // always prefer the word range\n            return new Range(line, word.startColumn, line, word.endColumn);\n        }\n        model.tokenization.tokenizeIfCheap(line);\n        const tokens = model.tokenization.getLineTokens(line);\n        const offset = position.column - 1;\n        const idx = tokens.findTokenIndexAtOffset(offset);\n        let start = tokens.getStartOffset(idx);\n        let end = tokens.getEndOffset(idx);\n        if (end - start === 1) {\n            // single character token, when at its end try leading/trailing token instead\n            if (start === offset && idx > 1) {\n                // leading token\n                start = tokens.getStartOffset(idx - 1);\n                end = tokens.getEndOffset(idx - 1);\n            }\n            else if (end === offset && idx < tokens.getCount() - 1) {\n                // trailing token\n                start = tokens.getStartOffset(idx + 1);\n                end = tokens.getEndOffset(idx + 1);\n            }\n        }\n        return new Range(line, start + 1, line, end + 1);\n    }\n}\nexport function asCommandLink(command) {\n    return URI.from({\n        scheme: Schemas.command,\n        path: command.id,\n        query: command.arguments && encodeURIComponent(JSON.stringify(command.arguments))\n    }).toString();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ModifierKeyEmitter } from '../../../../base/browser/dom.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DynamicCssRules } from '../../../browser/editorDom.js';\nimport { StableEditorScrollState } from '../../../browser/stableEditorScroll.js';\nimport { EDITOR_FONT_DEFAULTS } from '../../../common/config/editorOptions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport * as languages from '../../../common/languages.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { InlayHintAnchor, InlayHintsFragments } from './inlayHints.js';\nimport { goToDefinitionWithLocation, showGoToContextMenu } from './inlayHintsLocations.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport * as colors from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\n// --- hint caching service (per session)\nclass InlayHintsCache {\n    constructor() {\n        this._entries = new LRUCache(50);\n    }\n    get(model) {\n        const key = InlayHintsCache._key(model);\n        return this._entries.get(key);\n    }\n    set(model, value) {\n        const key = InlayHintsCache._key(model);\n        this._entries.set(key, value);\n    }\n    static _key(model) {\n        return `${model.uri.toString()}/${model.getVersionId()}`;\n    }\n}\nconst IInlayHintsCache = createDecorator('IInlayHintsCache');\nregisterSingleton(IInlayHintsCache, InlayHintsCache, 1 /* InstantiationType.Delayed */);\n// --- rendered label\nexport class RenderedInlayHintLabelPart {\n    constructor(item, index) {\n        this.item = item;\n        this.index = index;\n    }\n    get part() {\n        const label = this.item.hint.label;\n        if (typeof label === 'string') {\n            return { label };\n        }\n        else {\n            return label[this.index];\n        }\n    }\n}\nclass ActiveInlayHintInfo {\n    constructor(part, hasTriggerModifier) {\n        this.part = part;\n        this.hasTriggerModifier = hasTriggerModifier;\n    }\n}\n// --- controller\nlet InlayHintsController = class InlayHintsController {\n    static get(editor) {\n        var _a;\n        return (_a = editor.getContribution(InlayHintsController.ID)) !== null && _a !== void 0 ? _a : undefined;\n    }\n    constructor(_editor, _languageFeaturesService, _featureDebounce, _inlayHintsCache, _commandService, _notificationService, _instaService) {\n        this._editor = _editor;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._inlayHintsCache = _inlayHintsCache;\n        this._commandService = _commandService;\n        this._notificationService = _notificationService;\n        this._instaService = _instaService;\n        this._disposables = new DisposableStore();\n        this._sessionDisposables = new DisposableStore();\n        this._decorationsMetadata = new Map();\n        this._ruleFactory = new DynamicCssRules(this._editor);\n        this._activeRenderMode = 0 /* RenderMode.Normal */;\n        this._debounceInfo = _featureDebounce.for(_languageFeaturesService.inlayHintsProvider, 'InlayHint', { min: 25 });\n        this._disposables.add(_languageFeaturesService.inlayHintsProvider.onDidChange(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModel(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModelLanguage(() => this._update()));\n        this._disposables.add(_editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(134 /* EditorOption.inlayHints */)) {\n                this._update();\n            }\n        }));\n        this._update();\n    }\n    dispose() {\n        this._sessionDisposables.dispose();\n        this._removeAllDecorations();\n        this._disposables.dispose();\n    }\n    _update() {\n        this._sessionDisposables.clear();\n        this._removeAllDecorations();\n        const options = this._editor.getOption(134 /* EditorOption.inlayHints */);\n        if (options.enabled === 'off') {\n            return;\n        }\n        const model = this._editor.getModel();\n        if (!model || !this._languageFeaturesService.inlayHintsProvider.has(model)) {\n            return;\n        }\n        // iff possible, quickly update from cache\n        const cached = this._inlayHintsCache.get(model);\n        if (cached) {\n            this._updateHintsDecorators([model.getFullModelRange()], cached);\n        }\n        this._sessionDisposables.add(toDisposable(() => {\n            // cache items when switching files etc\n            if (!model.isDisposed()) {\n                this._cacheHintsForFastRestore(model);\n            }\n        }));\n        let cts;\n        const watchedProviders = new Set();\n        const scheduler = new RunOnceScheduler(() => __awaiter(this, void 0, void 0, function* () {\n            const t1 = Date.now();\n            cts === null || cts === void 0 ? void 0 : cts.dispose(true);\n            cts = new CancellationTokenSource();\n            const listener = model.onWillDispose(() => cts === null || cts === void 0 ? void 0 : cts.cancel());\n            try {\n                const myToken = cts.token;\n                const inlayHints = yield InlayHintsFragments.create(this._languageFeaturesService.inlayHintsProvider, model, this._getHintsRanges(), myToken);\n                scheduler.delay = this._debounceInfo.update(model, Date.now() - t1);\n                if (myToken.isCancellationRequested) {\n                    inlayHints.dispose();\n                    return;\n                }\n                // listen to provider changes\n                for (const provider of inlayHints.provider) {\n                    if (typeof provider.onDidChangeInlayHints === 'function' && !watchedProviders.has(provider)) {\n                        watchedProviders.add(provider);\n                        this._sessionDisposables.add(provider.onDidChangeInlayHints(() => {\n                            if (!scheduler.isScheduled()) { // ignore event when request is already scheduled\n                                scheduler.schedule();\n                            }\n                        }));\n                    }\n                }\n                this._sessionDisposables.add(inlayHints);\n                this._updateHintsDecorators(inlayHints.ranges, inlayHints.items);\n                this._cacheHintsForFastRestore(model);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                cts.dispose();\n                listener.dispose();\n            }\n        }), this._debounceInfo.get(model));\n        this._sessionDisposables.add(scheduler);\n        this._sessionDisposables.add(toDisposable(() => cts === null || cts === void 0 ? void 0 : cts.dispose(true)));\n        scheduler.schedule(0);\n        this._sessionDisposables.add(this._editor.onDidScrollChange((e) => {\n            // update when scroll position changes\n            // uses scrollTopChanged has weak heuristic to differenatiate between scrolling due to\n            // typing or due to \"actual\" scrolling\n            if (e.scrollTopChanged || !scheduler.isScheduled()) {\n                scheduler.schedule();\n            }\n        }));\n        this._sessionDisposables.add(this._editor.onDidChangeModelContent((e) => {\n            // update less aggressive when typing\n            const delay = Math.max(scheduler.delay, 1250);\n            scheduler.schedule(delay);\n        }));\n        if (options.enabled === 'on') {\n            // different \"on\" modes: always\n            this._activeRenderMode = 0 /* RenderMode.Normal */;\n        }\n        else {\n            // different \"on\" modes: offUnlessPressed, or onUnlessPressed\n            let defaultMode;\n            let altMode;\n            if (options.enabled === 'onUnlessPressed') {\n                defaultMode = 0 /* RenderMode.Normal */;\n                altMode = 1 /* RenderMode.Invisible */;\n            }\n            else {\n                defaultMode = 1 /* RenderMode.Invisible */;\n                altMode = 0 /* RenderMode.Normal */;\n            }\n            this._activeRenderMode = defaultMode;\n            this._sessionDisposables.add(ModifierKeyEmitter.getInstance().event(e => {\n                if (!this._editor.hasModel()) {\n                    return;\n                }\n                const newRenderMode = e.altKey && e.ctrlKey && !(e.shiftKey || e.metaKey) ? altMode : defaultMode;\n                if (newRenderMode !== this._activeRenderMode) {\n                    this._activeRenderMode = newRenderMode;\n                    const model = this._editor.getModel();\n                    const copies = this._copyInlayHintsWithCurrentAnchor(model);\n                    this._updateHintsDecorators([model.getFullModelRange()], copies);\n                    scheduler.schedule(0);\n                }\n            }));\n        }\n        // mouse gestures\n        this._sessionDisposables.add(this._installDblClickGesture(() => scheduler.schedule(0)));\n        this._sessionDisposables.add(this._installLinkGesture());\n        this._sessionDisposables.add(this._installContextMenu());\n    }\n    _installLinkGesture() {\n        const store = new DisposableStore();\n        const gesture = store.add(new ClickLinkGesture(this._editor));\n        // let removeHighlight = () => { };\n        const sessionStore = new DisposableStore();\n        store.add(sessionStore);\n        store.add(gesture.onMouseMoveOrRelevantKeyDown(e => {\n            const [mouseEvent] = e;\n            const labelPart = this._getInlayHintLabelPart(mouseEvent);\n            const model = this._editor.getModel();\n            if (!labelPart || !model) {\n                sessionStore.clear();\n                return;\n            }\n            // resolve the item\n            const cts = new CancellationTokenSource();\n            sessionStore.add(toDisposable(() => cts.dispose(true)));\n            labelPart.item.resolve(cts.token);\n            // render link => when the modifier is pressed and when there is a command or location\n            this._activeInlayHintPart = labelPart.part.command || labelPart.part.location\n                ? new ActiveInlayHintInfo(labelPart, mouseEvent.hasTriggerModifier)\n                : undefined;\n            const lineNumber = model.validatePosition(labelPart.item.hint.position).lineNumber;\n            const range = new Range(lineNumber, 1, lineNumber, model.getLineMaxColumn(lineNumber));\n            const lineHints = this._getInlineHintsForRange(range);\n            this._updateHintsDecorators([range], lineHints);\n            sessionStore.add(toDisposable(() => {\n                this._activeInlayHintPart = undefined;\n                this._updateHintsDecorators([range], lineHints);\n            }));\n        }));\n        store.add(gesture.onCancel(() => sessionStore.clear()));\n        store.add(gesture.onExecute((e) => __awaiter(this, void 0, void 0, function* () {\n            const label = this._getInlayHintLabelPart(e);\n            if (label) {\n                const part = label.part;\n                if (part.location) {\n                    // location -> execute go to def\n                    this._instaService.invokeFunction(goToDefinitionWithLocation, e, this._editor, part.location);\n                }\n                else if (languages.Command.is(part.command)) {\n                    // command -> execute it\n                    yield this._invokeCommand(part.command, label.item);\n                }\n            }\n        })));\n        return store;\n    }\n    _getInlineHintsForRange(range) {\n        const lineHints = new Set();\n        for (const data of this._decorationsMetadata.values()) {\n            if (range.containsRange(data.item.anchor.range)) {\n                lineHints.add(data.item);\n            }\n        }\n        return Array.from(lineHints);\n    }\n    _installDblClickGesture(updateInlayHints) {\n        return this._editor.onMouseUp((e) => __awaiter(this, void 0, void 0, function* () {\n            if (e.event.detail !== 2) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (!part) {\n                return;\n            }\n            e.event.preventDefault();\n            yield part.item.resolve(CancellationToken.None);\n            if (isNonEmptyArray(part.item.hint.textEdits)) {\n                const edits = part.item.hint.textEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text));\n                this._editor.executeEdits('inlayHint.default', edits);\n                updateInlayHints();\n            }\n        }));\n    }\n    _installContextMenu() {\n        return this._editor.onContextMenu((e) => __awaiter(this, void 0, void 0, function* () {\n            if (!(e.event.target instanceof HTMLElement)) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (part) {\n                yield this._instaService.invokeFunction(showGoToContextMenu, this._editor, e.event.target, part);\n            }\n        }));\n    }\n    _getInlayHintLabelPart(e) {\n        var _a;\n        if (e.target.type !== 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return undefined;\n        }\n        const options = (_a = e.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n        if (options instanceof ModelDecorationInjectedTextOptions && (options === null || options === void 0 ? void 0 : options.attachedData) instanceof RenderedInlayHintLabelPart) {\n            return options.attachedData;\n        }\n        return undefined;\n    }\n    _invokeCommand(command, item) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._commandService.executeCommand(command.id, ...((_a = command.arguments) !== null && _a !== void 0 ? _a : []));\n            }\n            catch (err) {\n                this._notificationService.notify({\n                    severity: Severity.Error,\n                    source: item.provider.displayName,\n                    message: err\n                });\n            }\n        });\n    }\n    _cacheHintsForFastRestore(model) {\n        const hints = this._copyInlayHintsWithCurrentAnchor(model);\n        this._inlayHintsCache.set(model, hints);\n    }\n    // return inlay hints but with an anchor that reflects \"updates\"\n    // that happened after receiving them, e.g adding new lines before a hint\n    _copyInlayHintsWithCurrentAnchor(model) {\n        const items = new Map();\n        for (const [id, obj] of this._decorationsMetadata) {\n            if (items.has(obj.item)) {\n                // an inlay item can be rendered as multiple decorations\n                // but they will all uses the same range\n                continue;\n            }\n            const range = model.getDecorationRange(id);\n            if (range) {\n                // update range with whatever the editor has tweaked it to\n                const anchor = new InlayHintAnchor(range, obj.item.anchor.direction);\n                const copy = obj.item.with({ anchor });\n                items.set(obj.item, copy);\n            }\n        }\n        return Array.from(items.values());\n    }\n    _getHintsRanges() {\n        const extra = 30;\n        const model = this._editor.getModel();\n        const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\n        const result = [];\n        for (const range of visibleRanges.sort(Range.compareRangesUsingStarts)) {\n            const extendedRange = model.validateRange(new Range(range.startLineNumber - extra, range.startColumn, range.endLineNumber + extra, range.endColumn));\n            if (result.length === 0 || !Range.areIntersectingOrTouching(result[result.length - 1], extendedRange)) {\n                result.push(extendedRange);\n            }\n            else {\n                result[result.length - 1] = Range.plusRange(result[result.length - 1], extendedRange);\n            }\n        }\n        return result;\n    }\n    _updateHintsDecorators(ranges, items) {\n        var _a, _b;\n        // utils to collect/create injected text decorations\n        const newDecorationsData = [];\n        const addInjectedText = (item, ref, content, cursorStops, attachedData) => {\n            const opts = {\n                content,\n                inlineClassNameAffectsLetterSpacing: true,\n                inlineClassName: ref.className,\n                cursorStops,\n                attachedData\n            };\n            newDecorationsData.push({\n                item,\n                classNameRef: ref,\n                decoration: {\n                    range: item.anchor.range,\n                    options: {\n                        // className: \"rangeHighlight\", // DEBUG highlight to see to what range a hint is attached\n                        description: 'InlayHint',\n                        showIfCollapsed: item.anchor.range.isEmpty(),\n                        collapseOnReplaceEdit: !item.anchor.range.isEmpty(),\n                        stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n                        [item.anchor.direction]: this._activeRenderMode === 0 /* RenderMode.Normal */ ? opts : undefined\n                    }\n                }\n            });\n        };\n        const addInjectedWhitespace = (item, isLast) => {\n            const marginRule = this._ruleFactory.createClassNameRef({\n                width: `${(fontSize / 3) | 0}px`,\n                display: 'inline-block'\n            });\n            addInjectedText(item, marginRule, '\\u200a', isLast ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None);\n        };\n        //\n        const { fontSize, fontFamily, padding, isUniform } = this._getLayoutInfo();\n        const fontFamilyVar = '--code-editorInlayHintsFontFamily';\n        this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily);\n        for (const item of items) {\n            // whitespace leading the actual label\n            if (item.hint.paddingLeft) {\n                addInjectedWhitespace(item, false);\n            }\n            // the label with its parts\n            const parts = typeof item.hint.label === 'string'\n                ? [{ label: item.hint.label }]\n                : item.hint.label;\n            for (let i = 0; i < parts.length; i++) {\n                const part = parts[i];\n                const isFirst = i === 0;\n                const isLast = i === parts.length - 1;\n                const cssProperties = {\n                    fontSize: `${fontSize}px`,\n                    fontFamily: `var(${fontFamilyVar}), ${EDITOR_FONT_DEFAULTS.fontFamily}`,\n                    verticalAlign: isUniform ? 'baseline' : 'middle',\n                };\n                if (isNonEmptyArray(item.hint.textEdits)) {\n                    cssProperties.cursor = 'default';\n                }\n                this._fillInColors(cssProperties, item.hint);\n                if ((part.command || part.location) && ((_a = this._activeInlayHintPart) === null || _a === void 0 ? void 0 : _a.part.item) === item && this._activeInlayHintPart.part.index === i) {\n                    // active link!\n                    cssProperties.textDecoration = 'underline';\n                    if (this._activeInlayHintPart.hasTriggerModifier) {\n                        cssProperties.color = themeColorFromId(colors.editorActiveLinkForeground);\n                        cssProperties.cursor = 'pointer';\n                    }\n                }\n                if (padding) {\n                    if (isFirst && isLast) {\n                        // only element\n                        cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px`;\n                        cssProperties.borderRadius = `${(fontSize / 4) | 0}px`;\n                    }\n                    else if (isFirst) {\n                        // first element\n                        cssProperties.padding = `1px 0 1px ${Math.max(1, fontSize / 4) | 0}px`;\n                        cssProperties.borderRadius = `${(fontSize / 4) | 0}px 0 0 ${(fontSize / 4) | 0}px`;\n                    }\n                    else if (isLast) {\n                        // last element\n                        cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px 1px 0`;\n                        cssProperties.borderRadius = `0 ${(fontSize / 4) | 0}px ${(fontSize / 4) | 0}px 0`;\n                    }\n                    else {\n                        cssProperties.padding = `1px 0 1px 0`;\n                    }\n                }\n                addInjectedText(item, this._ruleFactory.createClassNameRef(cssProperties), fixSpace(part.label), isLast && !item.hint.paddingRight ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None, new RenderedInlayHintLabelPart(item, i));\n            }\n            // whitespace trailing the actual label\n            if (item.hint.paddingRight) {\n                addInjectedWhitespace(item, true);\n            }\n            if (newDecorationsData.length > InlayHintsController._MAX_DECORATORS) {\n                break;\n            }\n        }\n        // collect all decoration ids that are affected by the ranges\n        // and only update those decorations\n        const decorationIdsToReplace = [];\n        for (const range of ranges) {\n            for (const { id } of (_b = this._editor.getDecorationsInRange(range)) !== null && _b !== void 0 ? _b : []) {\n                const metadata = this._decorationsMetadata.get(id);\n                if (metadata) {\n                    decorationIdsToReplace.push(id);\n                    metadata.classNameRef.dispose();\n                    this._decorationsMetadata.delete(id);\n                }\n            }\n        }\n        const scrollState = StableEditorScrollState.capture(this._editor);\n        this._editor.changeDecorations(accessor => {\n            const newDecorationIds = accessor.deltaDecorations(decorationIdsToReplace, newDecorationsData.map(d => d.decoration));\n            for (let i = 0; i < newDecorationIds.length; i++) {\n                const data = newDecorationsData[i];\n                this._decorationsMetadata.set(newDecorationIds[i], data);\n            }\n        });\n        scrollState.restore(this._editor);\n    }\n    _fillInColors(props, hint) {\n        if (hint.kind === languages.InlayHintKind.Parameter) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintParameterBackground);\n            props.color = themeColorFromId(colors.editorInlayHintParameterForeground);\n        }\n        else if (hint.kind === languages.InlayHintKind.Type) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintTypeBackground);\n            props.color = themeColorFromId(colors.editorInlayHintTypeForeground);\n        }\n        else {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintBackground);\n            props.color = themeColorFromId(colors.editorInlayHintForeground);\n        }\n    }\n    _getLayoutInfo() {\n        const options = this._editor.getOption(134 /* EditorOption.inlayHints */);\n        const padding = options.padding;\n        const editorFontSize = this._editor.getOption(49 /* EditorOption.fontSize */);\n        const editorFontFamily = this._editor.getOption(46 /* EditorOption.fontFamily */);\n        let fontSize = options.fontSize;\n        if (!fontSize || fontSize < 5 || fontSize > editorFontSize) {\n            fontSize = editorFontSize;\n        }\n        const fontFamily = options.fontFamily || editorFontFamily;\n        const isUniform = !padding\n            && fontFamily === editorFontFamily\n            && fontSize === editorFontSize;\n        return { fontSize, fontFamily, padding, isUniform };\n    }\n    _removeAllDecorations() {\n        this._editor.removeDecorations(Array.from(this._decorationsMetadata.keys()));\n        for (const obj of this._decorationsMetadata.values()) {\n            obj.classNameRef.dispose();\n        }\n        this._decorationsMetadata.clear();\n    }\n};\nInlayHintsController.ID = 'editor.contrib.InlayHints';\nInlayHintsController._MAX_DECORATORS = 1500;\nInlayHintsController = __decorate([\n    __param(1, ILanguageFeaturesService),\n    __param(2, ILanguageFeatureDebounceService),\n    __param(3, IInlayHintsCache),\n    __param(4, ICommandService),\n    __param(5, INotificationService),\n    __param(6, IInstantiationService)\n], InlayHintsController);\nexport { InlayHintsController };\n// Prevents the view from potentially visible whitespace\nfunction fixSpace(str) {\n    const noBreakWhitespace = '\\xa0';\n    return str.replace(/[ \\t]/g, noBreakWhitespace);\n}\nCommandsRegistry.registerCommand('_executeInlayHintProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    const [uri, range] = args;\n    assertType(URI.isUri(uri));\n    assertType(Range.isIRange(range));\n    const { inlayHintsProvider } = accessor.get(ILanguageFeaturesService);\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\n    try {\n        const model = yield InlayHintsFragments.create(inlayHintsProvider, ref.object.textEditorModel, [Range.lift(range)], CancellationToken.None);\n        const result = model.items.map(i => i.hint);\n        setTimeout(() => model.dispose(), 0); // dispose after sending to ext host\n        return result;\n    }\n    finally {\n        ref.dispose();\n    }\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { getHover } from '../../hover/browser/getHover.js';\nimport { MarkdownHover, MarkdownHoverParticipant } from '../../hover/browser/markdownHoverParticipant.js';\nimport { RenderedInlayHintLabelPart, InlayHintsController } from './inlayHintsController.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { localize } from '../../../../nls.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { asCommandLink } from './inlayHints.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nclass InlayHintsHoverAnchor extends HoverForeignElementAnchor {\n    constructor(part, owner, initialMousePosX, initialMousePosY) {\n        super(10, owner, part.item.anchor.range, initialMousePosX, initialMousePosY, true);\n        this.part = part;\n    }\n}\nlet InlayHintsHover = class InlayHintsHover extends MarkdownHoverParticipant {\n    constructor(editor, languageService, openerService, configurationService, _resolverService, languageFeaturesService) {\n        super(editor, languageService, openerService, configurationService, languageFeaturesService);\n        this._resolverService = _resolverService;\n        this.hoverOrdinal = 6;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        var _a;\n        const controller = InlayHintsController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        if (mouseEvent.target.type !== 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return null;\n        }\n        const options = (_a = mouseEvent.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n        if (!(options instanceof ModelDecorationInjectedTextOptions && options.attachedData instanceof RenderedInlayHintLabelPart)) {\n            return null;\n        }\n        return new InlayHintsHoverAnchor(options.attachedData, this, mouseEvent.event.posx, mouseEvent.event.posy);\n    }\n    computeSync() {\n        return [];\n    }\n    computeAsync(anchor, _lineDecorations, token) {\n        if (!(anchor instanceof InlayHintsHoverAnchor)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        return new AsyncIterableObject((executor) => __awaiter(this, void 0, void 0, function* () {\n            var _a, e_1, _b, _c;\n            const { part } = anchor;\n            yield part.item.resolve(token);\n            if (token.isCancellationRequested) {\n                return;\n            }\n            // (1) Inlay Tooltip\n            let itemTooltip;\n            if (typeof part.item.hint.tooltip === 'string') {\n                itemTooltip = new MarkdownString().appendText(part.item.hint.tooltip);\n            }\n            else if (part.item.hint.tooltip) {\n                itemTooltip = part.item.hint.tooltip;\n            }\n            if (itemTooltip) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [itemTooltip], false, 0));\n            }\n            // (1.2) Inlay dbl-click gesture\n            if (isNonEmptyArray(part.item.hint.textEdits)) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(localize('hint.dbl', \"Double-click to insert\"))], false, 10001));\n            }\n            // (2) Inlay Label Part Tooltip\n            let partTooltip;\n            if (typeof part.part.tooltip === 'string') {\n                partTooltip = new MarkdownString().appendText(part.part.tooltip);\n            }\n            else if (part.part.tooltip) {\n                partTooltip = part.part.tooltip;\n            }\n            if (partTooltip) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [partTooltip], false, 1));\n            }\n            // (2.2) Inlay Label Part Help Hover\n            if (part.part.location || part.part.command) {\n                let linkHint;\n                const useMetaKey = this._editor.getOption(74 /* EditorOption.multiCursorModifier */) === 'altKey';\n                const kb = useMetaKey\n                    ? platform.isMacintosh\n                        ? localize('links.navigate.kb.meta.mac', \"cmd + click\")\n                        : localize('links.navigate.kb.meta', \"ctrl + click\")\n                    : platform.isMacintosh\n                        ? localize('links.navigate.kb.alt.mac', \"option + click\")\n                        : localize('links.navigate.kb.alt', \"alt + click\");\n                if (part.part.location && part.part.command) {\n                    linkHint = new MarkdownString().appendText(localize('hint.defAndCommand', 'Go to Definition ({0}), right click for more', kb));\n                }\n                else if (part.part.location) {\n                    linkHint = new MarkdownString().appendText(localize('hint.def', 'Go to Definition ({0})', kb));\n                }\n                else if (part.part.command) {\n                    linkHint = new MarkdownString(`[${localize('hint.cmd', \"Execute Command\")}](${asCommandLink(part.part.command)} \"${part.part.command.title}\") (${kb})`, { isTrusted: true });\n                }\n                if (linkHint) {\n                    executor.emitOne(new MarkdownHover(this, anchor.range, [linkHint], false, 10000));\n                }\n            }\n            // (3) Inlay Label Part Location tooltip\n            const iterable = yield this._resolveInlayHintLabelPartHover(part, token);\n            try {\n                for (var _d = true, iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = yield iterable_1.next(), _a = iterable_1_1.done, !_a;) {\n                    _c = iterable_1_1.value;\n                    _d = false;\n                    try {\n                        const item = _c;\n                        executor.emitOne(item);\n                    }\n                    finally {\n                        _d = true;\n                    }\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (!_d && !_a && (_b = iterable_1.return)) yield _b.call(iterable_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }));\n    }\n    _resolveInlayHintLabelPartHover(part, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!part.part.location) {\n                return AsyncIterableObject.EMPTY;\n            }\n            const { uri, range } = part.part.location;\n            const ref = yield this._resolverService.createModelReference(uri);\n            try {\n                const model = ref.object.textEditorModel;\n                if (!this._languageFeaturesService.hoverProvider.has(model)) {\n                    return AsyncIterableObject.EMPTY;\n                }\n                return getHover(this._languageFeaturesService.hoverProvider, model, new Position(range.startLineNumber, range.startColumn), token)\n                    .filter(item => !isEmptyMarkdownString(item.hover.contents))\n                    .map(item => new MarkdownHover(this, part.item.anchor.range, item.hover.contents, false, 2 + item.ordinal));\n            }\n            finally {\n                ref.dispose();\n            }\n        });\n    }\n};\nInlayHintsHover = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService),\n    __param(4, ITextModelService),\n    __param(5, ILanguageFeaturesService)\n], InlayHintsHover);\nexport { InlayHintsHover };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { InlayHintsController } from './inlayHintsController.js';\nimport { InlayHintsHover } from './inlayHintsHover.js';\nregisterEditorContribution(InlayHintsController.ID, InlayHintsController, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nHoverParticipantRegistry.register(InlayHintsHover);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Action, Separator } from '../../../../base/common/actions.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { DefinitionAction, SymbolNavigationAction, SymbolNavigationAnchor } from '../../gotoSymbol/browser/goToCommands.js';\nimport { PeekContext } from '../../peekView/browser/peekView.js';\nimport { isIMenuItem, MenuId, MenuItemAction, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nexport function showGoToContextMenu(accessor, editor, anchor, part) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const resolverService = accessor.get(ITextModelService);\n        const contextMenuService = accessor.get(IContextMenuService);\n        const commandService = accessor.get(ICommandService);\n        const instaService = accessor.get(IInstantiationService);\n        const notificationService = accessor.get(INotificationService);\n        yield part.item.resolve(CancellationToken.None);\n        if (!part.part.location) {\n            return;\n        }\n        const location = part.part.location;\n        const menuActions = [];\n        // from all registered (not active) context menu actions select those\n        // that are a symbol navigation actions\n        const filter = new Set(MenuRegistry.getMenuItems(MenuId.EditorContext)\n            .map(item => isIMenuItem(item) ? item.command.id : ''));\n        for (const delegate of SymbolNavigationAction.all()) {\n            if (filter.has(delegate.desc.id)) {\n                menuActions.push(new Action(delegate.desc.id, MenuItemAction.label(delegate.desc, { renderShortTitle: true }), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                    const ref = yield resolverService.createModelReference(location.uri);\n                    try {\n                        yield instaService.invokeFunction(delegate.run.bind(delegate), editor, new SymbolNavigationAnchor(ref.object.textEditorModel, Range.getStartPosition(location.range)));\n                    }\n                    finally {\n                        ref.dispose();\n                    }\n                })));\n            }\n        }\n        if (part.part.command) {\n            const { command } = part.part;\n            menuActions.push(new Separator());\n            menuActions.push(new Action(command.id, command.title, undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                var _b;\n                try {\n                    yield commandService.executeCommand(command.id, ...((_b = command.arguments) !== null && _b !== void 0 ? _b : []));\n                }\n                catch (err) {\n                    notificationService.notify({\n                        severity: Severity.Error,\n                        source: part.item.provider.displayName,\n                        message: err\n                    });\n                }\n            })));\n        }\n        // show context menu\n        const useShadowDOM = editor.getOption(121 /* EditorOption.useShadowDOM */);\n        contextMenuService.showContextMenu({\n            domForShadowRoot: useShadowDOM ? (_a = editor.getDomNode()) !== null && _a !== void 0 ? _a : undefined : undefined,\n            getAnchor: () => {\n                const box = dom.getDomNodePagePosition(anchor);\n                return { x: box.left, y: box.top + box.height + 8 };\n            },\n            getActions: () => menuActions,\n            onHide: () => {\n                editor.focus();\n            },\n            autoSelectFirstItem: true,\n        });\n    });\n}\nexport function goToDefinitionWithLocation(accessor, event, editor, location) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const resolverService = accessor.get(ITextModelService);\n        const ref = yield resolverService.createModelReference(location.uri);\n        yield editor.invokeWithinContext((accessor) => __awaiter(this, void 0, void 0, function* () {\n            const openToSide = event.hasSideBySideModifier;\n            const contextKeyService = accessor.get(IContextKeyService);\n            const isInPeek = PeekContext.inPeekEditor.getValue(contextKeyService);\n            const canPeek = !openToSide && editor.getOption(83 /* EditorOption.definitionLinkOpensInPeek */) && !isInPeek;\n            const action = new DefinitionAction({ openToSide, openInPeek: canPeek, muteMessage: true }, { title: { value: '', original: '' }, id: '', precondition: undefined });\n            return action.run(accessor, new SymbolNavigationAnchor(ref.object.textEditorModel, Range.getStartPosition(location.range)), Range.lift(location.range));\n        }));\n        ref.dispose();\n    });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const inlineSuggestCommitId = 'editor.action.inlineSuggest.commit';\nexport const showPreviousInlineSuggestionActionId = 'editor.action.inlineSuggest.showPrevious';\nexport const showNextInlineSuggestionActionId = 'editor.action.inlineSuggest.showNext';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nexport function createDisposableRef(object, disposable) {\n    return {\n        object,\n        dispose: () => disposable === null || disposable === void 0 ? void 0 : disposable.dispose(),\n    };\n}\nexport function applyEdits(text, edits) {\n    const transformer = new PositionOffsetTransformer(text);\n    const offsetEdits = edits.map(e => {\n        const range = Range.lift(e.range);\n        return ({\n            startOffset: transformer.getOffset(range.getStartPosition()),\n            endOffset: transformer.getOffset(range.getEndPosition()),\n            text: e.text\n        });\n    });\n    offsetEdits.sort((a, b) => b.startOffset - a.startOffset);\n    for (const edit of offsetEdits) {\n        text = text.substring(0, edit.startOffset) + edit.text + text.substring(edit.endOffset);\n    }\n    return text;\n}\nclass PositionOffsetTransformer {\n    constructor(text) {\n        this.lineStartOffsetByLineIdx = [];\n        this.lineStartOffsetByLineIdx.push(0);\n        for (let i = 0; i < text.length; i++) {\n            if (text.charAt(i) === '\\n') {\n                this.lineStartOffsetByLineIdx.push(i + 1);\n            }\n        }\n    }\n    getOffset(position) {\n        return this.lineStartOffsetByLineIdx[position.lineNumber - 1] + position.column - 1;\n    }\n}\nconst array = [];\nexport function getReadonlyEmptyArray() {\n    return array;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { applyEdits } from './utils.js';\nexport class GhostText {\n    constructor(lineNumber, parts, additionalReservedLineCount = 0) {\n        this.lineNumber = lineNumber;\n        this.parts = parts;\n        this.additionalReservedLineCount = additionalReservedLineCount;\n    }\n    renderForScreenReader(lineText) {\n        if (this.parts.length === 0) {\n            return '';\n        }\n        const lastPart = this.parts[this.parts.length - 1];\n        const cappedLineText = lineText.substr(0, lastPart.column - 1);\n        const text = applyEdits(cappedLineText, this.parts.map(p => ({\n            range: { startLineNumber: 1, endLineNumber: 1, startColumn: p.column, endColumn: p.column },\n            text: p.lines.join('\\n')\n        })));\n        return text.substring(this.parts[0].column - 1);\n    }\n    isEmpty() {\n        return this.parts.every(p => p.lines.length === 0);\n    }\n}\nexport class GhostTextPart {\n    constructor(column, lines, \n    /**\n     * Indicates if this part is a preview of an inline suggestion when a suggestion is previewed.\n    */\n    preview) {\n        this.column = column;\n        this.lines = lines;\n        this.preview = preview;\n    }\n}\nexport class GhostTextReplacement {\n    constructor(lineNumber, columnStart, length, newLines, additionalReservedLineCount = 0) {\n        this.lineNumber = lineNumber;\n        this.columnStart = columnStart;\n        this.length = length;\n        this.newLines = newLines;\n        this.additionalReservedLineCount = additionalReservedLineCount;\n        this.parts = [\n            new GhostTextPart(this.columnStart + this.length, this.newLines, false),\n        ];\n    }\n    renderForScreenReader(_lineText) {\n        return this.newLines.join('\\n');\n    }\n}\nexport class BaseGhostTextWidgetModel extends Disposable {\n    constructor(editor) {\n        super();\n        this.editor = editor;\n        this._expanded = undefined;\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(112 /* EditorOption.suggest */) && this._expanded === undefined) {\n                this.onDidChangeEmitter.fire();\n            }\n        }));\n    }\n    setExpanded(expanded) {\n        this._expanded = true;\n        this.onDidChangeEmitter.fire();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../../base/common/diff/diff.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { GhostText, GhostTextPart } from './ghostText.js';\nexport function minimizeInlineCompletion(model, inlineCompletion) {\n    if (!inlineCompletion) {\n        return inlineCompletion;\n    }\n    const valueToReplace = model.getValueInRange(inlineCompletion.range);\n    const commonPrefixLen = strings.commonPrefixLength(valueToReplace, inlineCompletion.insertText);\n    const startOffset = model.getOffsetAt(inlineCompletion.range.getStartPosition()) + commonPrefixLen;\n    const start = model.getPositionAt(startOffset);\n    const remainingValueToReplace = valueToReplace.substr(commonPrefixLen);\n    const commonSuffixLen = strings.commonSuffixLength(remainingValueToReplace, inlineCompletion.insertText);\n    const end = model.getPositionAt(Math.max(startOffset, model.getOffsetAt(inlineCompletion.range.getEndPosition()) - commonSuffixLen));\n    return {\n        range: Range.fromPositions(start, end),\n        insertText: inlineCompletion.insertText.substr(commonPrefixLen, inlineCompletion.insertText.length - commonPrefixLen - commonSuffixLen),\n        snippetInfo: inlineCompletion.snippetInfo,\n        filterText: inlineCompletion.filterText,\n        additionalTextEdits: inlineCompletion.additionalTextEdits,\n    };\n}\nexport function normalizedInlineCompletionsEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    return a.range.equalsRange(b.range) && a.insertText === b.insertText && a.command === b.command;\n}\n/**\n * @param previewSuffixLength Sets where to split `inlineCompletion.text`.\n * \tIf the text is `hello` and the suffix length is 2, the non-preview part is `hel` and the preview-part is `lo`.\n*/\nexport function inlineCompletionToGhostText(inlineCompletion, textModel, mode, cursorPosition, previewSuffixLength = 0) {\n    if (inlineCompletion.range.startLineNumber !== inlineCompletion.range.endLineNumber) {\n        // Only single line replacements are supported.\n        return undefined;\n    }\n    const sourceLine = textModel.getLineContent(inlineCompletion.range.startLineNumber);\n    const sourceIndentationLength = strings.getLeadingWhitespace(sourceLine).length;\n    const suggestionTouchesIndentation = inlineCompletion.range.startColumn - 1 <= sourceIndentationLength;\n    if (suggestionTouchesIndentation) {\n        // source:      ··········[······abc]\n        //                         ^^^^^^^^^ inlineCompletion.range\n        //              ^^^^^^^^^^ ^^^^^^ sourceIndentationLength\n        //                         ^^^^^^ replacedIndentation.length\n        //                               ^^^ rangeThatDoesNotReplaceIndentation\n        // inlineCompletion.text: '··foo'\n        //                         ^^ suggestionAddedIndentationLength\n        const suggestionAddedIndentationLength = strings.getLeadingWhitespace(inlineCompletion.insertText).length;\n        const replacedIndentation = sourceLine.substring(inlineCompletion.range.startColumn - 1, sourceIndentationLength);\n        const rangeThatDoesNotReplaceIndentation = Range.fromPositions(inlineCompletion.range.getStartPosition().delta(0, replacedIndentation.length), inlineCompletion.range.getEndPosition());\n        const suggestionWithoutIndentationChange = inlineCompletion.insertText.startsWith(replacedIndentation)\n            // Adds more indentation without changing existing indentation: We can add ghost text for this\n            ? inlineCompletion.insertText.substring(replacedIndentation.length)\n            // Changes or removes existing indentation. Only add ghost text for the non-indentation part.\n            : inlineCompletion.insertText.substring(suggestionAddedIndentationLength);\n        inlineCompletion = {\n            range: rangeThatDoesNotReplaceIndentation,\n            insertText: suggestionWithoutIndentationChange,\n            command: inlineCompletion.command,\n            snippetInfo: undefined,\n            filterText: inlineCompletion.filterText,\n            additionalTextEdits: inlineCompletion.additionalTextEdits,\n        };\n    }\n    // This is a single line string\n    const valueToBeReplaced = textModel.getValueInRange(inlineCompletion.range);\n    const changes = cachingDiff(valueToBeReplaced, inlineCompletion.insertText);\n    if (!changes) {\n        // No ghost text in case the diff would be too slow to compute\n        return undefined;\n    }\n    const lineNumber = inlineCompletion.range.startLineNumber;\n    const parts = new Array();\n    if (mode === 'prefix') {\n        const filteredChanges = changes.filter(c => c.originalLength === 0);\n        if (filteredChanges.length > 1 || filteredChanges.length === 1 && filteredChanges[0].originalStart !== valueToBeReplaced.length) {\n            // Prefixes only have a single change.\n            return undefined;\n        }\n    }\n    const previewStartInCompletionText = inlineCompletion.insertText.length - previewSuffixLength;\n    for (const c of changes) {\n        const insertColumn = inlineCompletion.range.startColumn + c.originalStart + c.originalLength;\n        if (mode === 'subwordSmart' && cursorPosition && cursorPosition.lineNumber === inlineCompletion.range.startLineNumber && insertColumn < cursorPosition.column) {\n            // No ghost text before cursor\n            return undefined;\n        }\n        if (c.originalLength > 0) {\n            return undefined;\n        }\n        if (c.modifiedLength === 0) {\n            continue;\n        }\n        const modifiedEnd = c.modifiedStart + c.modifiedLength;\n        const nonPreviewTextEnd = Math.max(c.modifiedStart, Math.min(modifiedEnd, previewStartInCompletionText));\n        const nonPreviewText = inlineCompletion.insertText.substring(c.modifiedStart, nonPreviewTextEnd);\n        const italicText = inlineCompletion.insertText.substring(nonPreviewTextEnd, Math.max(c.modifiedStart, modifiedEnd));\n        if (nonPreviewText.length > 0) {\n            const lines = strings.splitLines(nonPreviewText);\n            parts.push(new GhostTextPart(insertColumn, lines, false));\n        }\n        if (italicText.length > 0) {\n            const lines = strings.splitLines(italicText);\n            parts.push(new GhostTextPart(insertColumn, lines, true));\n        }\n    }\n    return new GhostText(lineNumber, parts, 0);\n}\nlet lastRequest = undefined;\nfunction cachingDiff(originalValue, newValue) {\n    if ((lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.originalValue) === originalValue && (lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.newValue) === newValue) {\n        return lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.changes;\n    }\n    else {\n        let changes = smartDiff(originalValue, newValue, true);\n        if (changes) {\n            const deletedChars = deletedCharacters(changes);\n            if (deletedChars > 0) {\n                // For performance reasons, don't compute diff if there is nothing to improve\n                const newChanges = smartDiff(originalValue, newValue, false);\n                if (newChanges && deletedCharacters(newChanges) < deletedChars) {\n                    // Disabling smartness seems to be better here\n                    changes = newChanges;\n                }\n            }\n        }\n        lastRequest = {\n            originalValue,\n            newValue,\n            changes\n        };\n        return changes;\n    }\n}\nfunction deletedCharacters(changes) {\n    let sum = 0;\n    for (const c of changes) {\n        sum += c.originalLength;\n    }\n    return sum;\n}\n/**\n * When matching `if ()` with `if (f() = 1) { g(); }`,\n * align it like this:        `if (       )`\n * Not like this:\t\t\t  `if (  )`\n * Also not like this:\t\t  `if (             )`.\n *\n * The parenthesis are preprocessed to ensure that they match correctly.\n */\nfunction smartDiff(originalValue, newValue, smartBracketMatching) {\n    if (originalValue.length > 5000 || newValue.length > 5000) {\n        // We don't want to work on strings that are too big\n        return undefined;\n    }\n    function getMaxCharCode(val) {\n        let maxCharCode = 0;\n        for (let i = 0, len = val.length; i < len; i++) {\n            const charCode = val.charCodeAt(i);\n            if (charCode > maxCharCode) {\n                maxCharCode = charCode;\n            }\n        }\n        return maxCharCode;\n    }\n    const maxCharCode = Math.max(getMaxCharCode(originalValue), getMaxCharCode(newValue));\n    function getUniqueCharCode(id) {\n        if (id < 0) {\n            throw new Error('unexpected');\n        }\n        return maxCharCode + id + 1;\n    }\n    function getElements(source) {\n        let level = 0;\n        let group = 0;\n        const characters = new Int32Array(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            // TODO support more brackets\n            if (smartBracketMatching && source[i] === '(') {\n                const id = group * 100 + level;\n                characters[i] = getUniqueCharCode(2 * id);\n                level++;\n            }\n            else if (smartBracketMatching && source[i] === ')') {\n                level = Math.max(level - 1, 0);\n                const id = group * 100 + level;\n                characters[i] = getUniqueCharCode(2 * id + 1);\n                if (level === 0) {\n                    group++;\n                }\n            }\n            else {\n                characters[i] = source.charCodeAt(i);\n            }\n        }\n        return characters;\n    }\n    const elements1 = getElements(originalValue);\n    const elements2 = getElements(newValue);\n    return new LcsDiff({ getElements: () => elements1 }, { getElements: () => elements2 }).ComputeDiff(false).changes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { assertNever } from '../../../../base/common/assert.js';\nimport { createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { matchesSubString } from '../../../../base/common/filters.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { fixBracketsInLine } from '../../../common/model/bracketPairsTextModelPart/fixBrackets.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { inlineSuggestCommitId } from './consts.js';\nimport { BaseGhostTextWidgetModel, GhostTextReplacement } from './ghostText.js';\nimport { inlineCompletionToGhostText } from './inlineCompletionToGhostText.js';\nimport { InlineSuggestionHintsContentWidget } from './inlineSuggestionHintsWidget.js';\nimport { getReadonlyEmptyArray } from './utils.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { SnippetParser, Text } from '../../snippet/browser/snippetParser.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nlet InlineCompletionsModel = class InlineCompletionsModel extends Disposable {\n    constructor(editor, cache, commandService, languageConfigurationService, languageFeaturesService, debounceService, configurationService) {\n        super();\n        this.editor = editor;\n        this.cache = cache;\n        this.commandService = commandService;\n        this.languageConfigurationService = languageConfigurationService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.debounceService = debounceService;\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.completionSession = this._register(new MutableDisposable());\n        this.active = false;\n        this.disposed = false;\n        this.debounceValue = this.debounceService.for(this.languageFeaturesService.inlineCompletionsProvider, 'InlineCompletionsDebounce', { min: 50, max: 50 });\n        this._register(commandService.onDidExecuteCommand((e) => {\n            // These commands don't trigger onDidType.\n            const commands = new Set([\n                CoreEditingCommands.Tab.id,\n                CoreEditingCommands.DeleteLeft.id,\n                CoreEditingCommands.DeleteRight.id,\n                inlineSuggestCommitId,\n                'acceptSelectedSuggestion',\n            ]);\n            if (commands.has(e.commandId) && editor.hasTextFocus()) {\n                this.handleUserInput();\n            }\n        }));\n        this._register(this.editor.onDidType((e) => {\n            this.handleUserInput();\n        }));\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\n            if (e.reason === 3 /* CursorChangeReason.Explicit */ ||\n                this.session && !this.session.isValid) {\n                this.hide();\n            }\n        }));\n        this._register(toDisposable(() => {\n            this.disposed = true;\n        }));\n        this._register(this.editor.onDidBlurEditorWidget(() => {\n            // This is a hidden setting very useful for debugging\n            if (configurationService.getValue('editor.inlineSuggest.hideOnBlur')) {\n                return;\n            }\n            if (InlineSuggestionHintsContentWidget.dropDownVisible) {\n                return;\n            }\n            this.hide();\n        }));\n    }\n    handleUserInput() {\n        if (this.session && !this.session.isValid) {\n            this.hide();\n        }\n        setTimeout(() => {\n            if (this.disposed) {\n                return;\n            }\n            // Wait for the cursor update that happens in the same iteration loop iteration\n            this.startSessionIfTriggered();\n        }, 0);\n    }\n    get session() {\n        return this.completionSession.value;\n    }\n    get ghostText() {\n        var _a;\n        return (_a = this.session) === null || _a === void 0 ? void 0 : _a.ghostText;\n    }\n    get minReservedLineCount() {\n        return this.session ? this.session.minReservedLineCount : 0;\n    }\n    setExpanded(expanded) {\n        var _a;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.setExpanded(expanded);\n    }\n    setActive(active) {\n        var _a;\n        this.active = active;\n        if (active) {\n            (_a = this.session) === null || _a === void 0 ? void 0 : _a.scheduleAutomaticUpdate();\n        }\n    }\n    startSessionIfTriggered() {\n        const suggestOptions = this.editor.getOption(59 /* EditorOption.inlineSuggest */);\n        if (!suggestOptions.enabled) {\n            return;\n        }\n        if (this.session && this.session.isValid) {\n            return;\n        }\n        this.trigger(InlineCompletionTriggerKind.Automatic);\n    }\n    trigger(triggerKind) {\n        if (this.completionSession.value) {\n            if (triggerKind === InlineCompletionTriggerKind.Explicit) {\n                void this.completionSession.value.ensureUpdateWithExplicitContext();\n            }\n            return;\n        }\n        this.completionSession.value = new InlineCompletionsSession(this.editor, this.editor.getPosition(), () => this.active, this.commandService, this.cache, triggerKind, this.languageConfigurationService, this.languageFeaturesService.inlineCompletionsProvider, this.debounceValue);\n        this.completionSession.value.takeOwnership(this.completionSession.value.onDidChange(() => {\n            this.onDidChangeEmitter.fire();\n        }));\n    }\n    hide() {\n        this.completionSession.clear();\n        this.onDidChangeEmitter.fire();\n    }\n    commitCurrentSuggestion() {\n        var _a;\n        // Don't dispose the session, so that after committing, more suggestions are shown.\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.commitCurrentCompletion();\n    }\n    commitCurrentSuggestionPartially() {\n        var _a;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.commitCurrentCompletionNextWord();\n    }\n    showNext() {\n        var _a;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.showNextInlineCompletion();\n    }\n    showPrevious() {\n        var _a;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.showPreviousInlineCompletion();\n    }\n};\nInlineCompletionsModel = __decorate([\n    __param(2, ICommandService),\n    __param(3, ILanguageConfigurationService),\n    __param(4, ILanguageFeaturesService),\n    __param(5, ILanguageFeatureDebounceService),\n    __param(6, IConfigurationService)\n], InlineCompletionsModel);\nexport { InlineCompletionsModel };\nexport class InlineCompletionsSession extends BaseGhostTextWidgetModel {\n    constructor(editor, triggerPosition, shouldUpdate, commandService, cache, initialTriggerKind, languageConfigurationService, registry, debounce) {\n        super(editor);\n        this.triggerPosition = triggerPosition;\n        this.shouldUpdate = shouldUpdate;\n        this.commandService = commandService;\n        this.cache = cache;\n        this.initialTriggerKind = initialTriggerKind;\n        this.languageConfigurationService = languageConfigurationService;\n        this.registry = registry;\n        this.debounce = debounce;\n        this.minReservedLineCount = 0;\n        this.updateOperation = this._register(new MutableDisposable());\n        this.updateSoon = this._register(new RunOnceScheduler(() => {\n            const triggerKind = this.initialTriggerKind;\n            // All subsequent triggers are automatic.\n            this.initialTriggerKind = InlineCompletionTriggerKind.Automatic;\n            return this.update(triggerKind);\n        }, 50));\n        this.filteredCompletions = [];\n        //#region Selection\n        // We use a semantic id to track the selection even if the cache changes.\n        this.currentlySelectedCompletionId = undefined;\n        let lastCompletionItem = undefined;\n        this._register(this.onDidChange(() => {\n            var _a;\n            const currentCompletion = this.currentCompletion;\n            if (currentCompletion && currentCompletion.sourceInlineCompletion !== lastCompletionItem) {\n                lastCompletionItem = currentCompletion.sourceInlineCompletion;\n                const provider = currentCompletion.sourceProvider;\n                (_a = provider.handleItemDidShow) === null || _a === void 0 ? void 0 : _a.call(provider, currentCompletion.sourceInlineCompletions, lastCompletionItem);\n            }\n        }));\n        this._register(toDisposable(() => {\n            this.cache.clear();\n        }));\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\n            var _a;\n            if (e.reason === 3 /* CursorChangeReason.Explicit */) {\n                return;\n            }\n            // Ghost text depends on the cursor position\n            (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.updateRanges();\n            if (this.cache.value) {\n                this.updateFilteredInlineCompletions();\n                this.onDidChangeEmitter.fire();\n            }\n        }));\n        this._register(this.editor.onDidChangeModelContent((e) => {\n            var _a;\n            // Call this in case `onDidChangeModelContent` calls us first.\n            (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.updateRanges();\n            this.updateFilteredInlineCompletions();\n            this.scheduleAutomaticUpdate();\n        }));\n        this._register(this.registry.onDidChange(() => {\n            this.updateSoon.schedule(this.debounce.get(this.editor.getModel()));\n        }));\n        this.scheduleAutomaticUpdate();\n    }\n    updateFilteredInlineCompletions() {\n        if (!this.cache.value) {\n            this.filteredCompletions = [];\n            return;\n        }\n        const model = this.editor.getModel();\n        const cursorPosition = model.validatePosition(this.editor.getPosition());\n        this.filteredCompletions = this.cache.value.completions.filter(c => {\n            const originalValue = model.getValueInRange(c.synchronizedRange).toLowerCase();\n            const filterText = c.inlineCompletion.filterText.toLowerCase();\n            const indent = model.getLineIndentColumn(c.synchronizedRange.startLineNumber);\n            const cursorPosIndex = Math.max(0, cursorPosition.column - c.synchronizedRange.startColumn);\n            let filterTextBefore = filterText.substring(0, cursorPosIndex);\n            let filterTextAfter = filterText.substring(cursorPosIndex);\n            let originalValueBefore = originalValue.substring(0, cursorPosIndex);\n            let originalValueAfter = originalValue.substring(cursorPosIndex);\n            if (c.synchronizedRange.startColumn <= indent) {\n                // Remove indentation\n                originalValueBefore = originalValueBefore.trimStart();\n                if (originalValueBefore.length === 0) {\n                    originalValueAfter = originalValueAfter.trimStart();\n                }\n                filterTextBefore = filterTextBefore.trimStart();\n                if (filterTextBefore.length === 0) {\n                    filterTextAfter = filterTextAfter.trimStart();\n                }\n            }\n            return filterTextBefore.startsWith(originalValueBefore)\n                && matchesSubString(originalValueAfter, filterTextAfter);\n        });\n    }\n    get currentlySelectedIndex() {\n        return this.fixAndGetIndexOfCurrentSelection();\n    }\n    fixAndGetIndexOfCurrentSelection() {\n        if (!this.currentlySelectedCompletionId || !this.cache.value) {\n            return 0;\n        }\n        if (this.cache.value.completions.length === 0) {\n            // don't reset the selection in this case\n            return 0;\n        }\n        const idx = this.filteredCompletions.findIndex(v => v.semanticId === this.currentlySelectedCompletionId);\n        if (idx === -1) {\n            // Reset the selection so that the selection does not jump back when it appears again\n            this.currentlySelectedCompletionId = undefined;\n            return 0;\n        }\n        return idx;\n    }\n    get currentCachedCompletion() {\n        if (!this.cache.value) {\n            return undefined;\n        }\n        return this.filteredCompletions[this.fixAndGetIndexOfCurrentSelection()];\n    }\n    showNextInlineCompletion() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ensureUpdateWithExplicitContext();\n            const completions = this.filteredCompletions || [];\n            if (completions.length > 0) {\n                const newIdx = (this.fixAndGetIndexOfCurrentSelection() + 1) % completions.length;\n                this.currentlySelectedCompletionId = completions[newIdx].semanticId;\n            }\n            else {\n                this.currentlySelectedCompletionId = undefined;\n            }\n            this.onDidChangeEmitter.fire();\n        });\n    }\n    showPreviousInlineCompletion() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ensureUpdateWithExplicitContext();\n            const completions = this.filteredCompletions || [];\n            if (completions.length > 0) {\n                const newIdx = (this.fixAndGetIndexOfCurrentSelection() + completions.length - 1) % completions.length;\n                this.currentlySelectedCompletionId = completions[newIdx].semanticId;\n            }\n            else {\n                this.currentlySelectedCompletionId = undefined;\n            }\n            this.onDidChangeEmitter.fire();\n        });\n    }\n    get hasBeenTriggeredExplicitly() {\n        var _a;\n        return ((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.triggerKind) === InlineCompletionTriggerKind.Explicit;\n    }\n    ensureUpdateWithExplicitContext() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.updateOperation.value) {\n                // Restart or wait for current update operation\n                if (this.updateOperation.value.triggerKind === InlineCompletionTriggerKind.Explicit) {\n                    yield this.updateOperation.value.promise;\n                }\n                else {\n                    yield this.update(InlineCompletionTriggerKind.Explicit);\n                }\n            }\n            else if (((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.triggerKind) !== InlineCompletionTriggerKind.Explicit) {\n                // Refresh cache\n                yield this.update(InlineCompletionTriggerKind.Explicit);\n            }\n        });\n    }\n    getInlineCompletionsCountSync() {\n        return this.filteredCompletions.length || 0;\n    }\n    //#endregion\n    get ghostText() {\n        const currentCompletion = this.currentCompletion;\n        if (!currentCompletion) {\n            return undefined;\n        }\n        const cursorPosition = this.editor.getPosition();\n        if (currentCompletion.range.getEndPosition().isBefore(cursorPosition)) {\n            return undefined;\n        }\n        const mode = this.editor.getOptions().get(59 /* EditorOption.inlineSuggest */).mode;\n        const ghostText = inlineCompletionToGhostText(currentCompletion, this.editor.getModel(), mode, cursorPosition);\n        if (ghostText) {\n            if (ghostText.isEmpty()) {\n                return undefined;\n            }\n            return ghostText;\n        }\n        return new GhostTextReplacement(currentCompletion.range.startLineNumber, currentCompletion.range.startColumn, currentCompletion.range.endColumn - currentCompletion.range.startColumn, currentCompletion.insertText.split('\\n'), 0);\n    }\n    get currentCompletion() {\n        const completion = this.currentCachedCompletion;\n        if (!completion) {\n            return undefined;\n        }\n        return completion.toLiveInlineCompletion();\n    }\n    get isValid() {\n        return this.editor.getPosition().lineNumber === this.triggerPosition.lineNumber;\n    }\n    scheduleAutomaticUpdate() {\n        // Since updateSoon debounces, starvation can happen.\n        // To prevent stale cache, we clear the current update operation.\n        this.updateOperation.clear();\n        this.updateSoon.schedule(this.debounce.get(this.editor.getModel()));\n    }\n    update(triggerKind) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.shouldUpdate()) {\n                return;\n            }\n            const position = this.editor.getPosition();\n            const startTime = new Date();\n            const promise = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                let result;\n                try {\n                    result = yield provideInlineCompletions(this.registry, position, this.editor.getModel(), { triggerKind, selectedSuggestionInfo: undefined }, token, this.languageConfigurationService);\n                    const endTime = new Date();\n                    this.debounce.update(this.editor.getModel(), endTime.getTime() - startTime.getTime());\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                    return;\n                }\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                this.cache.setValue(this.editor, result, triggerKind);\n                this.updateFilteredInlineCompletions();\n                this.onDidChangeEmitter.fire();\n            }));\n            const operation = new UpdateOperation(promise, triggerKind);\n            this.updateOperation.value = operation;\n            yield promise;\n            if (this.updateOperation.value === operation) {\n                this.updateOperation.clear();\n            }\n        });\n    }\n    takeOwnership(disposable) {\n        this._register(disposable);\n    }\n    commitCurrentCompletionNextWord() {\n        const ghostText = this.ghostText;\n        if (!ghostText) {\n            return;\n        }\n        const completion = this.currentCompletion;\n        if (!completion) {\n            return;\n        }\n        if (completion.snippetInfo || completion.filterText !== completion.insertText) {\n            // not in WYSIWYG mode, partial commit might change completion, thus it is not supported\n            this.commit(completion);\n            return;\n        }\n        if (ghostText.parts.length === 0) {\n            return;\n        }\n        const firstPart = ghostText.parts[0];\n        const position = new Position(ghostText.lineNumber, firstPart.column);\n        const line = firstPart.lines[0];\n        const langId = this.editor.getModel().getLanguageIdAtPosition(ghostText.lineNumber, 1);\n        const config = this.languageConfigurationService.getLanguageConfiguration(langId);\n        const wordRegExp = new RegExp(config.wordDefinition.source, config.wordDefinition.flags.replace('g', ''));\n        const m1 = line.match(wordRegExp);\n        let acceptUntilIndexExclusive = 0;\n        if (m1 && m1.index !== undefined) {\n            if (m1.index === 0) {\n                acceptUntilIndexExclusive = m1[0].length;\n            }\n            else {\n                acceptUntilIndexExclusive = m1.index;\n            }\n        }\n        else {\n            acceptUntilIndexExclusive = line.length;\n        }\n        const wsRegExp = /\\s/g;\n        let m2 = wsRegExp.exec(line);\n        if (m2 && m2.index === 0) {\n            m2 = wsRegExp.exec(line);\n        }\n        if (m2 && m2.index !== undefined) {\n            if (m2.index < acceptUntilIndexExclusive) {\n                acceptUntilIndexExclusive = m2.index;\n            }\n        }\n        const partialText = line.substring(0, acceptUntilIndexExclusive);\n        this.editor.pushUndoStop();\n        this.editor.executeEdits('inlineSuggestion.accept', [\n            EditOperation.replace(Range.fromPositions(position), partialText),\n        ]);\n        this.editor.setPosition(position.delta(0, partialText.length));\n        if (completion.sourceProvider.handlePartialAccept) {\n            const acceptedRange = Range.fromPositions(completion.range.getStartPosition(), position.delta(0, acceptUntilIndexExclusive));\n            // This assumes that the inline completion and the model use the same EOL style.\n            // This is not a problem at the moment, because partial acceptance only works for the first line of an\n            // inline completion.\n            const text = this.editor.getModel().getValueInRange(acceptedRange);\n            completion.sourceProvider.handlePartialAccept(completion.sourceInlineCompletions, completion.sourceInlineCompletion, text.length);\n        }\n    }\n    commitCurrentCompletion() {\n        const ghostText = this.ghostText;\n        if (!ghostText) {\n            // No ghost text was shown for this completion.\n            // Thus, we don't want to commit anything.\n            return;\n        }\n        const completion = this.currentCompletion;\n        if (completion) {\n            this.commit(completion);\n        }\n    }\n    commit(completion) {\n        var _a;\n        // Mark the cache as stale, but don't dispose it yet,\n        // otherwise command args might get disposed.\n        const cache = this.cache.clearAndLeak();\n        this.editor.pushUndoStop();\n        if (completion.snippetInfo) {\n            this.editor.executeEdits('inlineSuggestion.accept', [\n                EditOperation.replaceMove(completion.range, ''),\n                ...completion.additionalTextEdits\n            ]);\n            this.editor.setPosition(completion.snippetInfo.range.getStartPosition());\n            (_a = SnippetController2.get(this.editor)) === null || _a === void 0 ? void 0 : _a.insert(completion.snippetInfo.snippet, { undoStopBefore: false });\n        }\n        else {\n            this.editor.executeEdits('inlineSuggestion.accept', [\n                EditOperation.replaceMove(completion.range, completion.insertText),\n                ...completion.additionalTextEdits\n            ]);\n        }\n        if (completion.command) {\n            this.commandService\n                .executeCommand(completion.command.id, ...(completion.command.arguments || []))\n                .finally(() => {\n                cache === null || cache === void 0 ? void 0 : cache.dispose();\n            })\n                .then(undefined, onUnexpectedExternalError);\n        }\n        else {\n            cache === null || cache === void 0 ? void 0 : cache.dispose();\n        }\n        this.onDidChangeEmitter.fire();\n    }\n    get commands() {\n        var _a;\n        const lists = new Set(((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions.map(c => c.inlineCompletion.sourceInlineCompletions)) || []);\n        return [...lists].flatMap(l => l.commands || []);\n    }\n}\nexport class UpdateOperation {\n    constructor(promise, triggerKind) {\n        this.promise = promise;\n        this.triggerKind = triggerKind;\n    }\n    dispose() {\n        this.promise.cancel();\n    }\n}\n/**\n * The cache keeps itself in sync with the editor.\n * It also owns the completions result and disposes it when the cache is diposed.\n*/\nexport class SynchronizedInlineCompletionsCache extends Disposable {\n    constructor(completionsSource, editor, onChange, triggerKind) {\n        super();\n        this.editor = editor;\n        this.onChange = onChange;\n        this.triggerKind = triggerKind;\n        this.isDisposing = false;\n        const decorationIds = editor.changeDecorations((changeAccessor) => {\n            return changeAccessor.deltaDecorations([], completionsSource.items.map(i => ({\n                range: i.range,\n                options: {\n                    description: 'inline-completion-tracking-range'\n                },\n            })));\n        });\n        this._register(toDisposable(() => {\n            this.isDisposing = true;\n            editor.removeDecorations(decorationIds);\n        }));\n        this.completions = completionsSource.items.map((c, idx) => new CachedInlineCompletion(c, decorationIds[idx]));\n        this._register(editor.onDidChangeModelContent(() => {\n            this.updateRanges();\n        }));\n        this._register(completionsSource);\n    }\n    updateRanges() {\n        if (this.isDisposing) {\n            return;\n        }\n        let hasChanged = false;\n        const model = this.editor.getModel();\n        for (const c of this.completions) {\n            const newRange = model.getDecorationRange(c.decorationId);\n            if (!newRange) {\n                onUnexpectedError(new Error('Decoration has no range'));\n                continue;\n            }\n            if (!c.synchronizedRange.equalsRange(newRange)) {\n                hasChanged = true;\n                c.synchronizedRange = newRange;\n            }\n        }\n        if (hasChanged) {\n            this.onChange();\n        }\n    }\n}\nclass CachedInlineCompletion {\n    constructor(inlineCompletion, decorationId) {\n        this.inlineCompletion = inlineCompletion;\n        this.decorationId = decorationId;\n        this.semanticId = JSON.stringify({\n            text: this.inlineCompletion.insertText,\n            abbreviation: this.inlineCompletion.filterText,\n            startLine: this.inlineCompletion.range.startLineNumber,\n            startColumn: this.inlineCompletion.range.startColumn,\n            command: this.inlineCompletion.command\n        });\n        this.synchronizedRange = inlineCompletion.range;\n    }\n    toLiveInlineCompletion() {\n        return {\n            insertText: this.inlineCompletion.insertText,\n            range: this.synchronizedRange,\n            command: this.inlineCompletion.command,\n            sourceProvider: this.inlineCompletion.sourceProvider,\n            sourceInlineCompletions: this.inlineCompletion.sourceInlineCompletions,\n            sourceInlineCompletion: this.inlineCompletion.sourceInlineCompletion,\n            snippetInfo: this.inlineCompletion.snippetInfo,\n            filterText: this.inlineCompletion.filterText,\n            additionalTextEdits: this.inlineCompletion.additionalTextEdits,\n        };\n    }\n}\nexport function provideInlineCompletions(registry, position, model, context, token = CancellationToken.None, languageConfigurationService) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const defaultReplaceRange = getDefaultRange(position, model);\n        const providers = registry.all(model);\n        const results = yield Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\n            const completions = yield Promise.resolve(provider.provideInlineCompletions(model, position, context, token)).catch(onUnexpectedExternalError);\n            return ({\n                completions,\n                provider,\n                dispose: () => {\n                    if (completions) {\n                        provider.freeInlineCompletions(completions);\n                    }\n                }\n            });\n        })));\n        const itemsByHash = new Map();\n        for (const result of results) {\n            const completions = result.completions;\n            if (!completions) {\n                continue;\n            }\n            for (const item of completions.items) {\n                let range = item.range ? Range.lift(item.range) : defaultReplaceRange;\n                if (range.startLineNumber !== range.endLineNumber) {\n                    // Ignore invalid ranges.\n                    continue;\n                }\n                let insertText;\n                let snippetInfo;\n                if (typeof item.insertText === 'string') {\n                    insertText = item.insertText;\n                    if (languageConfigurationService && item.completeBracketPairs) {\n                        insertText = closeBrackets(insertText, range.getStartPosition(), model, languageConfigurationService);\n                        // Modify range depending on if brackets are added or removed\n                        const diff = insertText.length - item.insertText.length;\n                        if (diff !== 0) {\n                            range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n                        }\n                    }\n                    snippetInfo = undefined;\n                }\n                else if ('snippet' in item.insertText) {\n                    const preBracketCompletionLength = item.insertText.snippet.length;\n                    if (languageConfigurationService && item.completeBracketPairs) {\n                        item.insertText.snippet = closeBrackets(item.insertText.snippet, range.getStartPosition(), model, languageConfigurationService);\n                        // Modify range depending on if brackets are added or removed\n                        const diff = item.insertText.snippet.length - preBracketCompletionLength;\n                        if (diff !== 0) {\n                            range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n                        }\n                    }\n                    const snippet = new SnippetParser().parse(item.insertText.snippet);\n                    if (snippet.children.length === 1 && snippet.children[0] instanceof Text) {\n                        insertText = snippet.children[0].value;\n                        snippetInfo = undefined;\n                    }\n                    else {\n                        insertText = snippet.toString();\n                        snippetInfo = {\n                            snippet: item.insertText.snippet,\n                            range: range\n                        };\n                    }\n                }\n                else {\n                    assertNever(item.insertText);\n                }\n                const trackedItem = ({\n                    insertText,\n                    snippetInfo,\n                    range,\n                    command: item.command,\n                    sourceProvider: result.provider,\n                    sourceInlineCompletions: completions,\n                    sourceInlineCompletion: item,\n                    filterText: item.filterText || insertText,\n                    additionalTextEdits: item.additionalTextEdits || getReadonlyEmptyArray()\n                });\n                itemsByHash.set(JSON.stringify({ insertText, range: item.range }), trackedItem);\n            }\n        }\n        return {\n            items: [...itemsByHash.values()],\n            dispose: () => {\n                for (const result of results) {\n                    result.dispose();\n                }\n            },\n        };\n    });\n}\nfunction getDefaultRange(position, model) {\n    const word = model.getWordAtPosition(position);\n    const maxColumn = model.getLineMaxColumn(position.lineNumber);\n    // By default, always replace up until the end of the current line.\n    // This default might be subject to change!\n    return word\n        ? new Range(position.lineNumber, word.startColumn, position.lineNumber, maxColumn)\n        : Range.fromPositions(position, position.with(undefined, maxColumn));\n}\nfunction closeBrackets(text, position, model, languageConfigurationService) {\n    const lineStart = model.getLineContent(position.lineNumber).substring(0, position.column - 1);\n    const newLine = lineStart + text;\n    const newTokens = model.tokenization.tokenizeLineWithEdit(position, newLine.length - (position.column - 1), text);\n    const slicedTokens = newTokens === null || newTokens === void 0 ? void 0 : newTokens.sliceAndInflate(position.column - 1, newLine.length, 0);\n    if (!slicedTokens) {\n        return text;\n    }\n    const newText = fixBracketsInLine(slicedTokens, languageConfigurationService);\n    return newText;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { compareBy, findMaxBy, numberComparator } from '../../../../base/common/arrays.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { SnippetSession } from '../../snippet/browser/snippetSession.js';\nimport { SuggestController } from '../../suggest/browser/suggestController.js';\nimport { minimizeInlineCompletion, normalizedInlineCompletionsEquals } from './inlineCompletionToGhostText.js';\nexport class SuggestWidgetInlineCompletionProvider extends Disposable {\n    /**\n     * Returns undefined if the suggest widget is not active.\n    */\n    get state() {\n        if (!this._isActive) {\n            return undefined;\n        }\n        return { selectedItem: this._currentSuggestItemInfo };\n    }\n    constructor(editor, suggestControllerPreselector) {\n        super();\n        this.editor = editor;\n        this.suggestControllerPreselector = suggestControllerPreselector;\n        this.isSuggestWidgetVisible = false;\n        this.isShiftKeyPressed = false;\n        this._isActive = false;\n        this._currentSuggestItemInfo = undefined;\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\n        this._register(editor.onKeyDown(e => {\n            if (e.shiftKey && !this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = true;\n                this.update(this._isActive);\n            }\n        }));\n        this._register(editor.onKeyUp(e => {\n            if (e.shiftKey && this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = false;\n                this.update(this._isActive);\n            }\n        }));\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            this._register(suggestController.registerSelector({\n                priority: 100,\n                select: (model, pos, suggestItems) => {\n                    const textModel = this.editor.getModel();\n                    const normalizedItemToPreselect = minimizeInlineCompletion(textModel, this.suggestControllerPreselector());\n                    if (!normalizedItemToPreselect) {\n                        return -1;\n                    }\n                    const position = Position.lift(pos);\n                    const candidates = suggestItems\n                        .map((suggestItem, index) => {\n                        const inlineSuggestItem = suggestionToSuggestItemInfo(suggestController, position, suggestItem, this.isShiftKeyPressed);\n                        const normalizedSuggestItem = minimizeInlineCompletion(textModel, inlineSuggestItem === null || inlineSuggestItem === void 0 ? void 0 : inlineSuggestItem.normalizedInlineCompletion);\n                        if (!normalizedSuggestItem) {\n                            return undefined;\n                        }\n                        const valid = rangeStartsWith(normalizedItemToPreselect.range, normalizedSuggestItem.range) &&\n                            normalizedItemToPreselect.insertText.startsWith(normalizedSuggestItem.insertText);\n                        return { index, valid, prefixLength: normalizedSuggestItem.insertText.length, suggestItem };\n                    })\n                        .filter(item => item && item.valid);\n                    const result = findMaxBy(candidates, compareBy(s => s.prefixLength, numberComparator));\n                    return result ? result.index : -1;\n                }\n            }));\n            let isBoundToSuggestWidget = false;\n            const bindToSuggestWidget = () => {\n                if (isBoundToSuggestWidget) {\n                    return;\n                }\n                isBoundToSuggestWidget = true;\n                this._register(suggestController.widget.value.onDidShow(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n                this._register(suggestController.widget.value.onDidHide(() => {\n                    this.isSuggestWidgetVisible = false;\n                    this.update(false);\n                }));\n                this._register(suggestController.widget.value.onDidFocus(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n            };\n            this._register(Event.once(suggestController.model.onDidTrigger)(e => {\n                bindToSuggestWidget();\n            }));\n        }\n        this.update(this._isActive);\n    }\n    update(newActive) {\n        const newInlineCompletion = this.getSuggestItemInfo();\n        let shouldFire = false;\n        if (!suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\n            this._currentSuggestItemInfo = newInlineCompletion;\n            shouldFire = true;\n        }\n        if (this._isActive !== newActive) {\n            this._isActive = newActive;\n            shouldFire = true;\n        }\n        if (shouldFire) {\n            this.onDidChangeEmitter.fire();\n        }\n    }\n    getSuggestItemInfo() {\n        const suggestController = SuggestController.get(this.editor);\n        if (!suggestController) {\n            return undefined;\n        }\n        if (!this.isSuggestWidgetVisible) {\n            return undefined;\n        }\n        const focusedItem = suggestController.widget.value.getFocusedItem();\n        if (!focusedItem) {\n            return undefined;\n        }\n        // TODO: item.isResolved\n        return suggestionToSuggestItemInfo(suggestController, this.editor.getPosition(), focusedItem.item, this.isShiftKeyPressed);\n    }\n    stopForceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        suggestController === null || suggestController === void 0 ? void 0 : suggestController.stopForceRenderingAbove();\n    }\n    forceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        suggestController === null || suggestController === void 0 ? void 0 : suggestController.forceRenderingAbove();\n    }\n}\nexport function rangeStartsWith(rangeToTest, prefix) {\n    return (prefix.startLineNumber === rangeToTest.startLineNumber &&\n        prefix.startColumn === rangeToTest.startColumn &&\n        (prefix.endLineNumber < rangeToTest.endLineNumber ||\n            (prefix.endLineNumber === rangeToTest.endLineNumber &&\n                prefix.endColumn <= rangeToTest.endColumn)));\n}\nfunction suggestItemInfoEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    return a.completionItemKind === b.completionItemKind &&\n        a.isSnippetText === b.isSnippetText &&\n        normalizedInlineCompletionsEquals(a.normalizedInlineCompletion, b.normalizedInlineCompletion);\n}\nfunction suggestionToSuggestItemInfo(suggestController, position, item, toggleMode) {\n    // additionalTextEdits might not be resolved here, this could be problematic.\n    if (Array.isArray(item.completion.additionalTextEdits) && item.completion.additionalTextEdits.length > 0) {\n        // cannot represent additional text edits. TODO: Now we can.\n        return {\n            completionItemKind: item.completion.kind,\n            isSnippetText: false,\n            normalizedInlineCompletion: {\n                // Dummy element, so that space is reserved, but no text is shown\n                range: Range.fromPositions(position, position),\n                insertText: '',\n                filterText: '',\n                snippetInfo: undefined,\n                additionalTextEdits: [],\n            },\n        };\n    }\n    let { insertText } = item.completion;\n    let isSnippetText = false;\n    if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */) {\n        const snippet = new SnippetParser().parse(insertText);\n        const model = suggestController.editor.getModel();\n        // Ignore snippets that are too large.\n        // Adjust whitespace is expensive for them.\n        if (snippet.children.length > 100) {\n            return undefined;\n        }\n        SnippetSession.adjustWhitespace(model, position, true, snippet);\n        insertText = snippet.toString();\n        isSnippetText = true;\n    }\n    const info = suggestController.getOverwriteInfo(item, toggleMode);\n    return {\n        isSnippetText,\n        completionItemKind: item.completion.kind,\n        normalizedInlineCompletion: {\n            insertText: insertText,\n            filterText: insertText,\n            range: Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0))),\n            snippetInfo: undefined,\n            additionalTextEdits: [],\n        }\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { BaseGhostTextWidgetModel, GhostText } from './ghostText.js';\nimport { provideInlineCompletions, UpdateOperation } from './inlineCompletionsModel.js';\nimport { inlineCompletionToGhostText, minimizeInlineCompletion } from './inlineCompletionToGhostText.js';\nimport { SuggestWidgetInlineCompletionProvider } from './suggestWidgetInlineCompletionProvider.js';\nlet SuggestWidgetPreviewModel = class SuggestWidgetPreviewModel extends BaseGhostTextWidgetModel {\n    get isActive() {\n        return this.suggestionInlineCompletionSource.state !== undefined;\n    }\n    constructor(editor, cache, languageFeaturesService) {\n        super(editor);\n        this.cache = cache;\n        this.languageFeaturesService = languageFeaturesService;\n        this.suggestionInlineCompletionSource = this._register(new SuggestWidgetInlineCompletionProvider(this.editor, \n        // Use the first cache item (if any) as preselection.\n        () => {\n            var _a, _b, _c;\n            // We might get asked in a content change event before the cache has received that event.\n            (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.updateRanges();\n            return (_c = (_b = this.cache.value) === null || _b === void 0 ? void 0 : _b.completions[0]) === null || _c === void 0 ? void 0 : _c.toLiveInlineCompletion();\n        }));\n        this.updateOperation = this._register(new MutableDisposable());\n        this.updateCacheSoon = this._register(new RunOnceScheduler(() => this.updateCache(), 50));\n        this.minReservedLineCount = 0;\n        this._register(this.suggestionInlineCompletionSource.onDidChange(() => {\n            if (!this.editor.hasModel()) {\n                // onDidChange might be called when calling setModel on the editor, before we are disposed.\n                return;\n            }\n            this.updateCacheSoon.schedule();\n            const suggestWidgetState = this.suggestionInlineCompletionSource.state;\n            if (!suggestWidgetState) {\n                this.minReservedLineCount = 0;\n            }\n            const newGhostText = this.ghostText;\n            if (newGhostText) {\n                this.minReservedLineCount = Math.max(this.minReservedLineCount, sum(newGhostText.parts.map(p => p.lines.length - 1)));\n            }\n            if (this.minReservedLineCount >= 1) {\n                this.suggestionInlineCompletionSource.forceRenderingAbove();\n            }\n            else {\n                this.suggestionInlineCompletionSource.stopForceRenderingAbove();\n            }\n            this.onDidChangeEmitter.fire();\n        }));\n        this._register(this.cache.onDidChange(() => {\n            this.onDidChangeEmitter.fire();\n        }));\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\n            this.minReservedLineCount = 0;\n            this.updateCacheSoon.schedule();\n            this.onDidChangeEmitter.fire();\n        }));\n        this._register(toDisposable(() => this.suggestionInlineCompletionSource.stopForceRenderingAbove()));\n    }\n    isSuggestionPreviewEnabled() {\n        const suggestOptions = this.editor.getOption(112 /* EditorOption.suggest */);\n        return suggestOptions.preview;\n    }\n    updateCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const state = this.suggestionInlineCompletionSource.state;\n            if (!state || !state.selectedItem) {\n                return;\n            }\n            const info = {\n                text: state.selectedItem.normalizedInlineCompletion.insertText,\n                range: state.selectedItem.normalizedInlineCompletion.range,\n                isSnippetText: state.selectedItem.isSnippetText,\n                completionKind: state.selectedItem.completionItemKind,\n            };\n            const position = this.editor.getPosition();\n            if (state.selectedItem.isSnippetText ||\n                state.selectedItem.completionItemKind === 27 /* CompletionItemKind.Snippet */ ||\n                state.selectedItem.completionItemKind === 20 /* CompletionItemKind.File */ ||\n                state.selectedItem.completionItemKind === 23 /* CompletionItemKind.Folder */) {\n                // Don't ask providers for these types of suggestions.\n                this.cache.clear();\n                return;\n            }\n            const promise = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                let result;\n                try {\n                    result = yield provideInlineCompletions(this.languageFeaturesService.inlineCompletionsProvider, position, this.editor.getModel(), { triggerKind: InlineCompletionTriggerKind.Automatic, selectedSuggestionInfo: info }, token);\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                    return;\n                }\n                if (token.isCancellationRequested) {\n                    result.dispose();\n                    return;\n                }\n                this.cache.setValue(this.editor, result, InlineCompletionTriggerKind.Automatic);\n                this.onDidChangeEmitter.fire();\n            }));\n            const operation = new UpdateOperation(promise, InlineCompletionTriggerKind.Automatic);\n            this.updateOperation.value = operation;\n            yield promise;\n            if (this.updateOperation.value === operation) {\n                this.updateOperation.clear();\n            }\n        });\n    }\n    get ghostText() {\n        var _a, _b, _c;\n        const isSuggestionPreviewEnabled = this.isSuggestionPreviewEnabled();\n        const model = this.editor.getModel();\n        const augmentedCompletion = minimizeInlineCompletion(model, (_b = (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions[0]) === null || _b === void 0 ? void 0 : _b.toLiveInlineCompletion());\n        const suggestWidgetState = this.suggestionInlineCompletionSource.state;\n        const suggestInlineCompletion = minimizeInlineCompletion(model, (_c = suggestWidgetState === null || suggestWidgetState === void 0 ? void 0 : suggestWidgetState.selectedItem) === null || _c === void 0 ? void 0 : _c.normalizedInlineCompletion);\n        const isAugmentedCompletionValid = augmentedCompletion\n            && suggestInlineCompletion\n            // The intellisense completion must be a prefix of the augmented completion\n            && augmentedCompletion.insertText.startsWith(suggestInlineCompletion.insertText)\n            // The augmented completion must replace the intellisense completion range, but can replace even more\n            && rangeExtends(augmentedCompletion.range, suggestInlineCompletion.range);\n        if (!isSuggestionPreviewEnabled && !isAugmentedCompletionValid) {\n            return undefined;\n        }\n        // If the augmented completion is not valid and there is no suggest inline completion, we still show the augmented completion.\n        const finalCompletion = isAugmentedCompletionValid ? augmentedCompletion : (suggestInlineCompletion || augmentedCompletion);\n        const inlineCompletionPreviewLength = isAugmentedCompletionValid ? finalCompletion.insertText.length - suggestInlineCompletion.insertText.length : 0;\n        const newGhostText = this.toGhostText(finalCompletion, inlineCompletionPreviewLength);\n        return newGhostText;\n    }\n    toGhostText(completion, inlineCompletionPreviewLength) {\n        const mode = this.editor.getOptions().get(112 /* EditorOption.suggest */).previewMode;\n        return completion\n            ? (inlineCompletionToGhostText(completion, this.editor.getModel(), mode, this.editor.getPosition(), inlineCompletionPreviewLength) ||\n                // Show an invisible ghost text to reserve space\n                new GhostText(completion.range.endLineNumber, [], this.minReservedLineCount))\n            : undefined;\n    }\n};\nSuggestWidgetPreviewModel = __decorate([\n    __param(2, ILanguageFeaturesService)\n], SuggestWidgetPreviewModel);\nexport { SuggestWidgetPreviewModel };\nfunction sum(arr) {\n    return arr.reduce((a, b) => a + b, 0);\n}\nfunction rangeExtends(extendingRange, rangeToExtend) {\n    return extendingRange.startLineNumber === rangeToExtend.startLineNumber &&\n        extendingRange.startColumn === rangeToExtend.startColumn &&\n        ((extendingRange.endLineNumber === rangeToExtend.endLineNumber && extendingRange.endColumn >= rangeToExtend.endColumn)\n            || extendingRange.endLineNumber > rangeToExtend.endLineNumber);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { InlineCompletionsModel, SynchronizedInlineCompletionsCache } from './inlineCompletionsModel.js';\nimport { SuggestWidgetPreviewModel } from './suggestWidgetPreviewModel.js';\nimport { createDisposableRef } from './utils.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nexport class DelegatingModel extends Disposable {\n    constructor() {\n        super(...arguments);\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.hasCachedGhostText = false;\n        this.currentModelRef = this._register(new MutableDisposable());\n    }\n    get targetModel() {\n        var _a;\n        return (_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object;\n    }\n    setTargetModel(model) {\n        var _a;\n        if (((_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object) === model) {\n            return;\n        }\n        this.currentModelRef.clear();\n        this.currentModelRef.value = model ? createDisposableRef(model, model.onDidChange(() => {\n            this.hasCachedGhostText = false;\n            this.onDidChangeEmitter.fire();\n        })) : undefined;\n        this.hasCachedGhostText = false;\n        this.onDidChangeEmitter.fire();\n    }\n    get ghostText() {\n        var _a, _b;\n        if (!this.hasCachedGhostText) {\n            this.cachedGhostText = (_b = (_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object) === null || _b === void 0 ? void 0 : _b.ghostText;\n            this.hasCachedGhostText = true;\n        }\n        return this.cachedGhostText;\n    }\n    setExpanded(expanded) {\n        var _a;\n        (_a = this.targetModel) === null || _a === void 0 ? void 0 : _a.setExpanded(expanded);\n    }\n    get minReservedLineCount() {\n        return this.targetModel ? this.targetModel.minReservedLineCount : 0;\n    }\n}\n/**\n * A ghost text model that is both driven by inline completions and the suggest widget.\n*/\nlet GhostTextModel = class GhostTextModel extends DelegatingModel {\n    get activeInlineCompletionsModel() {\n        if (this.targetModel === this.inlineCompletionsModel) {\n            return this.inlineCompletionsModel;\n        }\n        return undefined;\n    }\n    constructor(editor, instantiationService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.sharedCache = this._register(new SharedInlineCompletionCache());\n        this.suggestWidgetAdapterModel = this._register(this.instantiationService.createInstance(SuggestWidgetPreviewModel, this.editor, this.sharedCache));\n        this.inlineCompletionsModel = this._register(this.instantiationService.createInstance(InlineCompletionsModel, this.editor, this.sharedCache));\n        this._register(this.suggestWidgetAdapterModel.onDidChange(() => {\n            this.updateModel();\n        }));\n        this.updateModel();\n    }\n    updateModel() {\n        this.setTargetModel(this.suggestWidgetAdapterModel.isActive\n            ? this.suggestWidgetAdapterModel\n            : this.inlineCompletionsModel);\n        this.inlineCompletionsModel.setActive(this.targetModel === this.inlineCompletionsModel);\n    }\n    shouldShowHoverAt(hoverRange) {\n        var _a;\n        const ghostText = (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.ghostText;\n        if (ghostText) {\n            return ghostText.parts.some(p => hoverRange.containsPosition(new Position(ghostText.lineNumber, p.column)));\n        }\n        return false;\n    }\n    triggerInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.trigger(InlineCompletionTriggerKind.Explicit);\n    }\n    commitInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.commitCurrentSuggestion();\n    }\n    commitInlineCompletionPartially() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.commitCurrentSuggestionPartially();\n    }\n    hideInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.hide();\n    }\n    showNextInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.showNext();\n    }\n    showPreviousInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.showPrevious();\n    }\n};\nGhostTextModel = __decorate([\n    __param(1, IInstantiationService)\n], GhostTextModel);\nexport { GhostTextModel };\nexport class SharedInlineCompletionCache extends Disposable {\n    constructor() {\n        super(...arguments);\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.cache = this._register(new MutableDisposable());\n    }\n    get value() {\n        return this.cache.value;\n    }\n    setValue(editor, completionsSource, triggerKind) {\n        this.cache.value = new SynchronizedInlineCompletionsCache(completionsSource, editor, () => this.onDidChangeEmitter.fire(), triggerKind);\n    }\n    clearAndLeak() {\n        return this.cache.clearAndLeak();\n    }\n    clear() {\n        this.cache.clear();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar _a;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './ghostText.css';\nimport { applyFontInfo } from '../../../browser/config/domFontInfo.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nimport { LineTokens } from '../../../common/tokens/lineTokens.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { StringBuilder } from '../../../common/core/stringBuilder.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { GhostTextReplacement } from './ghostText.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('editorGhostText', { createHTML: value => value });\nlet GhostTextWidget = class GhostTextWidget extends Disposable {\n    constructor(editor, model, instantiationService, languageService) {\n        super();\n        this.editor = editor;\n        this.model = model;\n        this.instantiationService = instantiationService;\n        this.languageService = languageService;\n        this.disposed = false;\n        this.partsWidget = this._register(this.instantiationService.createInstance(DecorationsWidget, this.editor));\n        this.additionalLinesWidget = this._register(new AdditionalLinesWidget(this.editor, this.languageService.languageIdCodec));\n        this.viewMoreContentWidget = undefined;\n        this.replacementDecoration = this._register(new DisposableDecorations(this.editor));\n        this._register(this.editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(30 /* EditorOption.disableMonospaceOptimizations */)\n                || e.hasChanged(111 /* EditorOption.stopRenderingLineAfter */)\n                || e.hasChanged(93 /* EditorOption.renderWhitespace */)\n                || e.hasChanged(88 /* EditorOption.renderControlCharacters */)\n                || e.hasChanged(48 /* EditorOption.fontLigatures */)\n                || e.hasChanged(47 /* EditorOption.fontInfo */)\n                || e.hasChanged(63 /* EditorOption.lineHeight */)) {\n                this.update();\n            }\n        }));\n        this._register(toDisposable(() => {\n            var _a;\n            this.disposed = true;\n            this.update();\n            (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.viewMoreContentWidget = undefined;\n        }));\n        this._register(model.onDidChange(() => {\n            this.update();\n        }));\n        this.update();\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        return (this.additionalLinesWidget.viewZoneId === viewZoneId);\n    }\n    update() {\n        var _a;\n        const ghostText = this.model.ghostText;\n        if (!this.editor.hasModel() || !ghostText || this.disposed) {\n            this.partsWidget.clear();\n            this.additionalLinesWidget.clear();\n            this.replacementDecoration.clear();\n            return;\n        }\n        const inlineTexts = new Array();\n        const additionalLines = new Array();\n        function addToAdditionalLines(lines, className) {\n            if (additionalLines.length > 0) {\n                const lastLine = additionalLines[additionalLines.length - 1];\n                if (className) {\n                    lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* InlineDecorationType.Regular */));\n                }\n                lastLine.content += lines[0];\n                lines = lines.slice(1);\n            }\n            for (const line of lines) {\n                additionalLines.push({\n                    content: line,\n                    decorations: className ? [new LineDecoration(1, line.length + 1, className, 0 /* InlineDecorationType.Regular */)] : []\n                });\n            }\n        }\n        if (ghostText instanceof GhostTextReplacement) {\n            this.replacementDecoration.setDecorations([\n                {\n                    range: new Range(ghostText.lineNumber, ghostText.columnStart, ghostText.lineNumber, ghostText.columnStart + ghostText.length),\n                    options: {\n                        inlineClassName: 'inline-completion-text-to-replace',\n                        description: 'GhostTextReplacement'\n                    }\n                },\n            ]);\n        }\n        else {\n            this.replacementDecoration.setDecorations([]);\n        }\n        const textBufferLine = this.editor.getModel().getLineContent(ghostText.lineNumber);\n        let hiddenTextStartColumn = undefined;\n        let lastIdx = 0;\n        for (const part of ghostText.parts) {\n            let lines = part.lines;\n            if (hiddenTextStartColumn === undefined) {\n                inlineTexts.push({\n                    column: part.column,\n                    text: lines[0],\n                    preview: part.preview,\n                });\n                lines = lines.slice(1);\n            }\n            else {\n                addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\n            }\n            if (lines.length > 0) {\n                addToAdditionalLines(lines, 'ghost-text');\n                if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\n                    hiddenTextStartColumn = part.column;\n                }\n            }\n            lastIdx = part.column - 1;\n        }\n        if (hiddenTextStartColumn !== undefined) {\n            addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\n        }\n        this.partsWidget.setParts(ghostText.lineNumber, inlineTexts, hiddenTextStartColumn !== undefined ? { column: hiddenTextStartColumn, length: textBufferLine.length + 1 - hiddenTextStartColumn } : undefined);\n        this.additionalLinesWidget.updateLines(ghostText.lineNumber, additionalLines, ghostText.additionalReservedLineCount);\n        if (0 < 0) {\n            // Not supported at the moment, condition is always false.\n            this.viewMoreContentWidget = this.renderViewMoreLines(new Position(ghostText.lineNumber, this.editor.getModel().getLineMaxColumn(ghostText.lineNumber)), '', 0);\n        }\n        else {\n            (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.viewMoreContentWidget = undefined;\n        }\n    }\n    renderViewMoreLines(position, firstLineText, remainingLinesLength) {\n        const fontInfo = this.editor.getOption(47 /* EditorOption.fontInfo */);\n        const domNode = document.createElement('div');\n        domNode.className = 'suggest-preview-additional-widget';\n        applyFontInfo(domNode, fontInfo);\n        const spacer = document.createElement('span');\n        spacer.className = 'content-spacer';\n        spacer.append(firstLineText);\n        domNode.append(spacer);\n        const newline = document.createElement('span');\n        newline.className = 'content-newline suggest-preview-text';\n        newline.append('⏎  ');\n        domNode.append(newline);\n        const disposableStore = new DisposableStore();\n        const button = document.createElement('div');\n        button.className = 'button suggest-preview-text';\n        button.append(`+${remainingLinesLength} lines…`);\n        disposableStore.add(dom.addStandardDisposableListener(button, 'mousedown', (e) => {\n            var _a;\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.setExpanded(true);\n            e.preventDefault();\n            this.editor.focus();\n        }));\n        domNode.append(button);\n        return new ViewMoreLinesContentWidget(this.editor, position, domNode, disposableStore);\n    }\n};\nGhostTextWidget = __decorate([\n    __param(2, IInstantiationService),\n    __param(3, ILanguageService)\n], GhostTextWidget);\nexport { GhostTextWidget };\nclass DisposableDecorations {\n    constructor(editor) {\n        this.editor = editor;\n        this.decorationIds = [];\n    }\n    setDecorations(decorations) {\n        // Using change decorations ensures that we update the id's before some event handler is called.\n        this.editor.changeDecorations(accessor => {\n            this.decorationIds = accessor.deltaDecorations(this.decorationIds, decorations);\n        });\n    }\n    clear() {\n        this.setDecorations([]);\n    }\n    dispose() {\n        this.clear();\n    }\n}\nclass DecorationsWidget {\n    constructor(editor) {\n        this.editor = editor;\n        this.decorationIds = [];\n    }\n    dispose() {\n        this.clear();\n    }\n    clear() {\n        // Using change decorations ensures that we update the id's before some event handler is called.\n        this.editor.changeDecorations(accessor => {\n            this.decorationIds = accessor.deltaDecorations(this.decorationIds, []);\n        });\n    }\n    setParts(lineNumber, parts, hiddenText) {\n        const textModel = this.editor.getModel();\n        if (!textModel) {\n            return;\n        }\n        const hiddenTextDecorations = new Array();\n        if (hiddenText) {\n            hiddenTextDecorations.push({\n                range: Range.fromPositions(new Position(lineNumber, hiddenText.column), new Position(lineNumber, hiddenText.column + hiddenText.length)),\n                options: {\n                    inlineClassName: 'ghost-text-hidden',\n                    description: 'ghost-text-hidden',\n                }\n            });\n        }\n        // Using change decorations ensures that we update the id's before some event handler is called.\n        this.editor.changeDecorations(accessor => {\n            this.decorationIds = accessor.deltaDecorations(this.decorationIds, parts.map(p => {\n                return ({\n                    range: Range.fromPositions(new Position(lineNumber, p.column)),\n                    options: {\n                        description: 'ghost-text',\n                        after: { content: p.text, inlineClassName: p.preview ? 'ghost-text-decoration-preview' : 'ghost-text-decoration', cursorStops: InjectedTextCursorStops.Left },\n                        showIfCollapsed: true,\n                    }\n                });\n            }).concat(hiddenTextDecorations));\n        });\n    }\n}\nclass AdditionalLinesWidget {\n    get viewZoneId() { return this._viewZoneId; }\n    constructor(editor, languageIdCodec) {\n        this.editor = editor;\n        this.languageIdCodec = languageIdCodec;\n        this._viewZoneId = undefined;\n    }\n    dispose() {\n        this.clear();\n    }\n    clear() {\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n        });\n    }\n    updateLines(lineNumber, additionalLines, minReservedLineCount) {\n        const textModel = this.editor.getModel();\n        if (!textModel) {\n            return;\n        }\n        const { tabSize } = textModel.getOptions();\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n            const heightInLines = Math.max(additionalLines.length, minReservedLineCount);\n            if (heightInLines > 0) {\n                const domNode = document.createElement('div');\n                renderLines(domNode, tabSize, additionalLines, this.editor.getOptions(), this.languageIdCodec);\n                this._viewZoneId = changeAccessor.addZone({\n                    afterLineNumber: lineNumber,\n                    heightInLines: heightInLines,\n                    domNode,\n                    afterColumnAffinity: 1 /* PositionAffinity.Right */\n                });\n            }\n        });\n    }\n}\nfunction renderLines(domNode, tabSize, lines, opts, languageIdCodec) {\n    const disableMonospaceOptimizations = opts.get(30 /* EditorOption.disableMonospaceOptimizations */);\n    const stopRenderingLineAfter = opts.get(111 /* EditorOption.stopRenderingLineAfter */);\n    // To avoid visual confusion, we don't want to render visible whitespace\n    const renderWhitespace = 'none';\n    const renderControlCharacters = opts.get(88 /* EditorOption.renderControlCharacters */);\n    const fontLigatures = opts.get(48 /* EditorOption.fontLigatures */);\n    const fontInfo = opts.get(47 /* EditorOption.fontInfo */);\n    const lineHeight = opts.get(63 /* EditorOption.lineHeight */);\n    const sb = new StringBuilder(10000);\n    sb.appendString('<div class=\"suggest-preview-text\">');\n    for (let i = 0, len = lines.length; i < len; i++) {\n        const lineData = lines[i];\n        const line = lineData.content;\n        sb.appendString('<div class=\"view-line');\n        sb.appendString('\" style=\"top:');\n        sb.appendString(String(i * lineHeight));\n        sb.appendString('px;width:1000000px;\">');\n        const isBasicASCII = strings.isBasicASCII(line);\n        const containsRTL = strings.containsRTL(line);\n        const lineTokens = LineTokens.createEmpty(line, languageIdCodec);\n        renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, line, false, isBasicASCII, containsRTL, 0, lineTokens, lineData.decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null), sb);\n        sb.appendString('</div>');\n    }\n    sb.appendString('</div>');\n    applyFontInfo(domNode, fontInfo);\n    const html = sb.build();\n    const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n    domNode.innerHTML = trustedhtml;\n}\nclass ViewMoreLinesContentWidget extends Disposable {\n    constructor(editor, position, domNode, disposableStore) {\n        super();\n        this.editor = editor;\n        this.position = position;\n        this.domNode = domNode;\n        this.allowEditorOverflow = false;\n        this.suppressMouseDown = false;\n        this._register(disposableStore);\n        this._register(toDisposable(() => {\n            this.editor.removeContentWidget(this);\n        }));\n        this.editor.addContentWidget(this);\n    }\n    getId() {\n        return 'editor.widget.viewMoreLinesWidget';\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    getPosition() {\n        return {\n            position: this.position,\n            preference: [0 /* ContentWidgetPositionPreference.EXACT */]\n        };\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { firstNonWhitespaceIndex } from '../../../../base/common/strings.js';\nimport { EditorAction } from '../../../browser/editorExtensions.js';\nimport { CursorColumns } from '../../../common/core/cursorColumns.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { inlineSuggestCommitId, showNextInlineSuggestionActionId, showPreviousInlineSuggestionActionId } from './consts.js';\nimport { GhostTextModel } from './ghostTextModel.js';\nimport { GhostTextWidget } from './ghostTextWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { Action2, MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nlet GhostTextController = class GhostTextController extends Disposable {\n    static get(editor) {\n        return editor.getContribution(GhostTextController.ID);\n    }\n    get activeModel() {\n        var _a;\n        return (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.model;\n    }\n    constructor(editor, instantiationService, contextKeyService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.triggeredExplicitly = false;\n        this.activeController = this._register(new MutableDisposable());\n        this.activeModelDidChangeEmitter = this._register(new Emitter());\n        /**\n         * Tracks the first alternative version id until which only partial inline suggestions can be undone.\n         * Any other content change will invalidate this.\n         * This field is used to set the corresponding context key.\n         */\n        this.firstUndoableVersionId = undefined;\n        this.alwaysShowInlineSuggestionToolbar = GhostTextController.alwaysShowInlineSuggestionToolbar.bindTo(this.contextKeyService);\n        this._register(this.editor.onDidChangeModelContent((e) => {\n            var _a;\n            if (!e.isUndoing || this.firstUndoableVersionId && this.editor.getModel().getAlternativeVersionId() < this.firstUndoableVersionId) {\n                (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.contextKeys.canUndoInlineSuggestion.reset();\n                this.firstUndoableVersionId = undefined; // Will be set again if this change was caused by an inline suggestion.\n            }\n        }));\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\n            var _a;\n            if (e.reason === 3 /* CursorChangeReason.Explicit */) {\n                (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.contextKeys.canUndoInlineSuggestion.reset();\n                this.firstUndoableVersionId = undefined;\n            }\n        }));\n        this._register(this.editor.onDidChangeModel(() => {\n            this.update();\n        }));\n        this._register(this.editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(112 /* EditorOption.suggest */) || e.hasChanged(59 /* EditorOption.inlineSuggest */)) {\n                this.update();\n            }\n        }));\n        this.update();\n    }\n    // Don't call this method when not necessary. It will recreate the activeController.\n    update() {\n        const suggestOptions = this.editor.getOption(112 /* EditorOption.suggest */);\n        const inlineSuggestOptions = this.editor.getOption(59 /* EditorOption.inlineSuggest */);\n        this.alwaysShowInlineSuggestionToolbar.set(inlineSuggestOptions.showToolbar === 'always');\n        const shouldCreate = this.editor.hasModel() && (suggestOptions.preview || inlineSuggestOptions.enabled || this.triggeredExplicitly);\n        if (shouldCreate !== !!this.activeController.value) {\n            this.activeController.value = undefined;\n            // ActiveGhostTextController is only created if one of those settings is set or if the inline completions are triggered explicitly.\n            this.activeController.value =\n                shouldCreate ? this.instantiationService.createInstance(ActiveGhostTextController, this.editor)\n                    : undefined;\n            this.activeModelDidChangeEmitter.fire();\n        }\n    }\n    shouldShowHoverAt(hoverRange) {\n        var _a;\n        return ((_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.shouldShowHoverAt(hoverRange)) || false;\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        var _a, _b;\n        return ((_b = (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.widget) === null || _b === void 0 ? void 0 : _b.shouldShowHoverAtViewZone(viewZoneId)) || false;\n    }\n    trigger() {\n        var _a;\n        this.triggeredExplicitly = true;\n        if (!this.activeController.value) {\n            this.update();\n        }\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.triggerInlineCompletion();\n    }\n    commitPartially() {\n        var _a, _b, _c;\n        const nextVersion = this.firstUndoableVersionId; // Read this before committing, as it will be reset.\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.commitInlineCompletionPartially();\n        (_c = (_b = this.activeController) === null || _b === void 0 ? void 0 : _b.value) === null || _c === void 0 ? void 0 : _c.contextKeys.canUndoInlineSuggestion.set(true);\n        // Don't override this field if the previous command already accepted some inline suggestion.\n        this.firstUndoableVersionId = nextVersion !== null && nextVersion !== void 0 ? nextVersion : this.editor.getModel().getAlternativeVersionId();\n    }\n    commit() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.commitInlineCompletion();\n    }\n    hide() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.hideInlineCompletion();\n    }\n    showNextInlineCompletion() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.showNextInlineCompletion();\n    }\n    showPreviousInlineCompletion() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.showPreviousInlineCompletion();\n    }\n};\nGhostTextController.inlineSuggestionVisible = new RawContextKey('inlineSuggestionVisible', false, nls.localize('inlineSuggestionVisible', \"Whether an inline suggestion is visible\"));\nGhostTextController.inlineSuggestionHasIndentation = new RawContextKey('inlineSuggestionHasIndentation', false, nls.localize('inlineSuggestionHasIndentation', \"Whether the inline suggestion starts with whitespace\"));\nGhostTextController.inlineSuggestionHasIndentationLessThanTabSize = new RawContextKey('inlineSuggestionHasIndentationLessThanTabSize', true, nls.localize('inlineSuggestionHasIndentationLessThanTabSize', \"Whether the inline suggestion starts with whitespace that is less than what would be inserted by tab\"));\n/**\n * Enables to use Ctrl+Left to undo partially accepted inline completions.\n */\nGhostTextController.canUndoInlineSuggestion = new RawContextKey('canUndoInlineSuggestion', false, nls.localize('canUndoInlineSuggestion', \"Whether undo would undo an inline suggestion\"));\nGhostTextController.alwaysShowInlineSuggestionToolbar = new RawContextKey('alwaysShowInlineSuggestionToolbar', false, nls.localize('alwaysShowInlineSuggestionToolbar', \"Whether the inline suggestion toolbar should always be visible\"));\nGhostTextController.ID = 'editor.contrib.ghostTextController';\nGhostTextController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IContextKeyService)\n], GhostTextController);\nexport { GhostTextController };\nclass GhostTextContextKeys {\n    constructor(contextKeyService) {\n        this.contextKeyService = contextKeyService;\n        this.inlineCompletionVisible = GhostTextController.inlineSuggestionVisible.bindTo(this.contextKeyService);\n        this.inlineCompletionSuggestsIndentation = GhostTextController.inlineSuggestionHasIndentation.bindTo(this.contextKeyService);\n        this.inlineCompletionSuggestsIndentationLessThanTabSize = GhostTextController.inlineSuggestionHasIndentationLessThanTabSize.bindTo(this.contextKeyService);\n        this.canUndoInlineSuggestion = GhostTextController.canUndoInlineSuggestion.bindTo(this.contextKeyService);\n    }\n}\n/**\n * The controller for a text editor with an initialized text model.\n * Must be disposed as soon as the model detaches from the editor.\n*/\nlet ActiveGhostTextController = class ActiveGhostTextController extends Disposable {\n    constructor(editor, instantiationService, contextKeyService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.contextKeys = new GhostTextContextKeys(this.contextKeyService);\n        this.model = this._register(this.instantiationService.createInstance(GhostTextModel, this.editor));\n        this.widget = this._register(this.instantiationService.createInstance(GhostTextWidget, this.editor, this.model));\n        this._register(toDisposable(() => {\n            this.contextKeys.inlineCompletionVisible.set(false);\n            this.contextKeys.inlineCompletionSuggestsIndentation.set(false);\n            this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(true);\n        }));\n        this._register(this.model.onDidChange(() => {\n            this.updateContextKeys();\n        }));\n        this.updateContextKeys();\n    }\n    updateContextKeys() {\n        var _a;\n        this.contextKeys.inlineCompletionVisible.set(((_a = this.model.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.ghostText) !== undefined);\n        let startsWithIndentation = false;\n        let startsWithIndentationLessThanTabSize = true;\n        const ghostText = this.model.inlineCompletionsModel.ghostText;\n        if (!!this.model.activeInlineCompletionsModel && ghostText && ghostText.parts.length > 0) {\n            const { column, lines } = ghostText.parts[0];\n            const firstLine = lines[0];\n            const indentationEndColumn = this.editor.getModel().getLineIndentColumn(ghostText.lineNumber);\n            const inIndentation = column <= indentationEndColumn;\n            if (inIndentation) {\n                let firstNonWsIdx = firstNonWhitespaceIndex(firstLine);\n                if (firstNonWsIdx === -1) {\n                    firstNonWsIdx = firstLine.length - 1;\n                }\n                startsWithIndentation = firstNonWsIdx > 0;\n                const tabSize = this.editor.getModel().getOptions().tabSize;\n                const visibleColumnIndentation = CursorColumns.visibleColumnFromColumn(firstLine, firstNonWsIdx + 1, tabSize);\n                startsWithIndentationLessThanTabSize = visibleColumnIndentation < tabSize;\n            }\n        }\n        this.contextKeys.inlineCompletionSuggestsIndentation.set(startsWithIndentation);\n        this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(startsWithIndentationLessThanTabSize);\n    }\n};\nActiveGhostTextController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IContextKeyService)\n], ActiveGhostTextController);\nexport { ActiveGhostTextController };\nclass ShowNextInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: ShowNextInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showNext', \"Show Next Inline Suggestion\"),\n            alias: 'Show Next Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* KeyMod.Alt */ | 89 /* KeyCode.BracketRight */,\n            },\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            if (controller) {\n                controller.showNextInlineCompletion();\n                editor.focus();\n            }\n        });\n    }\n}\nShowNextInlineSuggestionAction.ID = showNextInlineSuggestionActionId;\nexport { ShowNextInlineSuggestionAction };\nclass ShowPreviousInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: ShowPreviousInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showPrevious', \"Show Previous Inline Suggestion\"),\n            alias: 'Show Previous Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* KeyMod.Alt */ | 87 /* KeyCode.BracketLeft */,\n            },\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            if (controller) {\n                controller.showPreviousInlineCompletion();\n                editor.focus();\n            }\n        });\n    }\n}\nShowPreviousInlineSuggestionAction.ID = showPreviousInlineSuggestionActionId;\nexport { ShowPreviousInlineSuggestionAction };\nexport class TriggerInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.trigger',\n            label: nls.localize('action.inlineSuggest.trigger', \"Trigger Inline Suggestion\"),\n            alias: 'Trigger Inline Suggestion',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            controller === null || controller === void 0 ? void 0 : controller.trigger();\n        });\n    }\n}\nexport class AcceptNextWordOfInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.acceptNextWord',\n            label: nls.localize('action.inlineSuggest.acceptNextWord', \"Accept Next Word Of Inline Suggestion\"),\n            alias: 'Accept Next Word Of Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */ + 1,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 17 /* KeyCode.RightArrow */,\n            },\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('acceptWord', 'Accept Word'),\n                    group: 'primary',\n                    order: 2,\n                }],\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            if (controller) {\n                controller.commitPartially();\n            }\n        });\n    }\n}\nexport class AcceptInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: inlineSuggestCommitId,\n            label: nls.localize('action.inlineSuggest.accept', \"Accept Inline Suggestion\"),\n            alias: 'Accept Inline Suggestion',\n            precondition: GhostTextController.inlineSuggestionVisible,\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('accept', \"Accept\"),\n                    group: 'primary',\n                    order: 1,\n                }],\n            kbOpts: {\n                primary: 2 /* KeyCode.Tab */,\n                weight: 200,\n                kbExpr: ContextKeyExpr.and(GhostTextController.inlineSuggestionVisible, EditorContextKeys.tabMovesFocus.toNegated(), GhostTextController.inlineSuggestionHasIndentationLessThanTabSize),\n            }\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            if (controller) {\n                controller.commit();\n                controller.editor.focus();\n            }\n        });\n    }\n}\nclass HideInlineCompletion extends EditorAction {\n    constructor() {\n        super({\n            id: HideInlineCompletion.ID,\n            label: nls.localize('action.inlineSuggest.hide', \"Hide Inline Suggestion\"),\n            alias: 'Hide Inline Suggestion',\n            precondition: GhostTextController.inlineSuggestionVisible,\n            kbOpts: {\n                weight: 100,\n                primary: 9 /* KeyCode.Escape */,\n            }\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            if (controller) {\n                controller.hide();\n            }\n        });\n    }\n}\nHideInlineCompletion.ID = 'editor.action.inlineSuggest.hide';\nexport { HideInlineCompletion };\nclass ToggleAlwaysShowInlineSuggestionToolbar extends Action2 {\n    constructor() {\n        super({\n            id: ToggleAlwaysShowInlineSuggestionToolbar.ID,\n            title: nls.localize('action.inlineSuggest.alwaysShowToolbar', \"Always Show Toolbar\"),\n            f1: false,\n            precondition: undefined,\n            menu: [{\n                    id: MenuId.InlineSuggestionToolbar,\n                    group: 'secondary',\n                    order: 10,\n                }],\n            toggled: GhostTextController.alwaysShowInlineSuggestionToolbar,\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const configService = accessor.get(IConfigurationService);\n            const currentValue = configService.getValue('editor.inlineSuggest.showToolbar');\n            const newValue = currentValue === 'always' ? 'onHover' : 'always';\n            configService.updateValue('editor.inlineSuggest.showToolbar', newValue);\n        });\n    }\n}\nToggleAlwaysShowInlineSuggestionToolbar.ID = 'editor.action.inlineSuggest.toggleAlwaysShowToolbar';\nexport { ToggleAlwaysShowInlineSuggestionToolbar };\nexport class UndoAcceptPart extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.undo',\n            label: nls.localize('action.inlineSuggest.undo', \"Undo Accept Word\"),\n            alias: 'Undo Accept Word',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.canUndoInlineSuggestion),\n            kbOpts: {\n                weight: 100 /* KeybindingWeight.EditorContrib */ + 1,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 15 /* KeyCode.LeftArrow */,\n                kbExpr: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.canUndoInlineSuggestion),\n            },\n            menuOpts: [{\n                    menuId: MenuId.InlineSuggestionToolbar,\n                    title: nls.localize('undoAcceptWord', 'Undo Accept Word'),\n                    group: 'secondary',\n                    order: 3,\n                }],\n        });\n    }\n    run(accessor, editor) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            (_a = editor.getModel()) === null || _a === void 0 ? void 0 : _a.undo();\n        });\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { GhostTextController } from './ghostTextController.js';\nimport { InlineSuggestionHintsContentWidget } from './inlineSuggestionHintsWidget.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport * as nls from '../../../../nls.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nexport class InlineCompletionsHover {\n    constructor(owner, range, controller) {\n        this.owner = owner;\n        this.range = range;\n        this.controller = controller;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n    requestExplicitContext() {\n        var _a, _b, _c;\n        (_c = (_b = (_a = this.controller.activeModel) === null || _a === void 0 ? void 0 : _a.activeInlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.completionSession.value) === null || _c === void 0 ? void 0 : _c.ensureUpdateWithExplicitContext();\n    }\n    getInlineCompletionsCount() {\n        var _a, _b;\n        const session = (_b = (_a = this.controller.activeModel) === null || _a === void 0 ? void 0 : _a.activeInlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.completionSession.value;\n        if (!(session === null || session === void 0 ? void 0 : session.hasBeenTriggeredExplicitly)) {\n            return undefined;\n        }\n        return session === null || session === void 0 ? void 0 : session.getInlineCompletionsCountSync();\n    }\n    getInlineCompletionIndex() {\n        var _a, _b, _c;\n        return (_c = (_b = (_a = this.controller.activeModel) === null || _a === void 0 ? void 0 : _a.activeInlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.completionSession.value) === null || _c === void 0 ? void 0 : _c.currentlySelectedIndex;\n    }\n    onDidChange(handler) {\n        var _a, _b;\n        const d = (_b = (_a = this.controller.activeModel) === null || _a === void 0 ? void 0 : _a.activeInlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.onDidChange(handler);\n        return d || Disposable.None;\n    }\n    get commands() {\n        var _a, _b, _c;\n        return ((_c = (_b = (_a = this.controller.activeModel) === null || _a === void 0 ? void 0 : _a.activeInlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.completionSession.value) === null || _c === void 0 ? void 0 : _c.commands) || [];\n    }\n}\nlet InlineCompletionsHoverParticipant = class InlineCompletionsHoverParticipant {\n    constructor(_editor, _languageService, _openerService, accessibilityService, _instantiationService, _telemetryService) {\n        this._editor = _editor;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this.accessibilityService = accessibilityService;\n        this._instantiationService = _instantiationService;\n        this._telemetryService = _telemetryService;\n        this.hoverOrdinal = 3;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        const controller = GhostTextController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        const target = mouseEvent.target;\n        if (target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */) {\n            // handle the case where the mouse is over the view zone\n            const viewZoneData = target.detail;\n            if (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) {\n                return new HoverForeignElementAnchor(1000, this, Range.fromPositions(this._editor.getModel().validatePosition(viewZoneData.positionBefore || viewZoneData.position)), mouseEvent.event.posx, mouseEvent.event.posy, false);\n            }\n        }\n        if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            // handle the case where the mouse is over the empty portion of a line following ghost text\n            if (controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n            }\n        }\n        if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            // handle the case where the mouse is directly over ghost text\n            const mightBeForeignElement = target.detail.mightBeForeignElement;\n            if (mightBeForeignElement && controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range, mouseEvent.event.posx, mouseEvent.event.posy, false);\n            }\n        }\n        return null;\n    }\n    computeSync(anchor, lineDecorations) {\n        if (this._editor.getOption(59 /* EditorOption.inlineSuggest */).showToolbar === 'always') {\n            return [];\n        }\n        const controller = GhostTextController.get(this._editor);\n        if (controller && controller.shouldShowHoverAt(anchor.range)) {\n            return [new InlineCompletionsHover(this, anchor.range, controller)];\n        }\n        return [];\n    }\n    renderHoverParts(context, hoverParts) {\n        const disposableStore = new DisposableStore();\n        const part = hoverParts[0];\n        this._telemetryService.publicLog2('inlineCompletionHover.shown');\n        if (this.accessibilityService.isScreenReaderOptimized()) {\n            this.renderScreenReaderText(context, part, disposableStore);\n        }\n        const w = this._instantiationService.createInstance(InlineSuggestionHintsContentWidget, this._editor, false);\n        context.fragment.appendChild(w.getDomNode());\n        w.update(null, part.getInlineCompletionIndex() || 0, part.getInlineCompletionsCount(), part.commands);\n        part.requestExplicitContext();\n        disposableStore.add(part.onDidChange(() => {\n            w.update(null, part.getInlineCompletionIndex() || 0, part.getInlineCompletionsCount(), part.commands);\n        }));\n        return disposableStore;\n    }\n    renderScreenReaderText(context, part, disposableStore) {\n        var _a, _b;\n        const $ = dom.$;\n        const markdownHoverElement = $('div.hover-row.markdown-hover');\n        const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n        const renderer = disposableStore.add(new MarkdownRenderer({ editor: this._editor }, this._languageService, this._openerService));\n        const render = (code) => {\n            disposableStore.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const inlineSuggestionAvailable = nls.localize('inlineSuggestionFollows', \"Suggestion:\");\n            const renderedContents = disposableStore.add(renderer.render(new MarkdownString().appendText(inlineSuggestionAvailable).appendCodeblock('text', code)));\n            hoverContentsElement.replaceChildren(renderedContents.element);\n        };\n        const ghostText = (_b = (_a = part.controller.activeModel) === null || _a === void 0 ? void 0 : _a.inlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.ghostText;\n        if (ghostText) {\n            const lineText = this._editor.getModel().getLineContent(ghostText.lineNumber);\n            render(ghostText.renderForScreenReader(lineText));\n        }\n        context.fragment.appendChild(markdownHoverElement);\n    }\n};\nInlineCompletionsHoverParticipant = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IAccessibilityService),\n    __param(4, IInstantiationService),\n    __param(5, ITelemetryService)\n], InlineCompletionsHoverParticipant);\nexport { InlineCompletionsHoverParticipant };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { AcceptInlineCompletion, AcceptNextWordOfInlineCompletion, ToggleAlwaysShowInlineSuggestionToolbar, GhostTextController, HideInlineCompletion, ShowNextInlineSuggestionAction, ShowPreviousInlineSuggestionAction, TriggerInlineSuggestionAction, UndoAcceptPart } from './ghostTextController.js';\nimport { InlineCompletionsHoverParticipant } from './ghostTextHoverParticipant.js';\nimport { registerAction2 } from '../../../../platform/actions/common/actions.js';\nregisterEditorContribution(GhostTextController.ID, GhostTextController, 3 /* EditorContributionInstantiation.Eventually */);\nregisterEditorAction(TriggerInlineSuggestionAction);\nregisterEditorAction(ShowNextInlineSuggestionAction);\nregisterEditorAction(ShowPreviousInlineSuggestionAction);\nregisterEditorAction(AcceptNextWordOfInlineCompletion);\nregisterEditorAction(AcceptInlineCompletion);\nregisterEditorAction(HideInlineCompletion);\nregisterEditorAction(UndoAcceptPart);\nregisterAction2(ToggleAlwaysShowInlineSuggestionToolbar);\nHoverParticipantRegistry.register(InlineCompletionsHoverParticipant);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { h } from '../../../../base/browser/dom.js';\nimport { ActionBar } from '../../../../base/browser/ui/actionbar/actionbar.js';\nimport { KeybindingLabel, unthemedKeybindingLabelOptions } from '../../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { Action, Separator } from '../../../../base/common/actions.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { OS } from '../../../../base/common/platform.js';\nimport { ThemeIcon } from '../../../../base/common/themables.js';\nimport './inlineSuggestionHintsWidget.css';\nimport { showNextInlineSuggestionActionId, showPreviousInlineSuggestionActionId } from './consts.js';\nimport { localize } from '../../../../nls.js';\nimport { createAndFillInActionBarActions, MenuEntryActionViewItem } from '../../../../platform/actions/browser/menuEntryActionViewItem.js';\nimport { WorkbenchToolBar } from '../../../../platform/actions/browser/toolbar.js';\nimport { IMenuService, MenuId, MenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { ITelemetryService } from '../../../../platform/telemetry/common/telemetry.js';\nimport { registerIcon } from '../../../../platform/theme/common/iconRegistry.js';\nconst inlineSuggestionHintsNextIcon = registerIcon('inline-suggestion-hints-next', Codicon.chevronRight, localize('parameterHintsNextIcon', 'Icon for show next parameter hint.'));\nconst inlineSuggestionHintsPreviousIcon = registerIcon('inline-suggestion-hints-previous', Codicon.chevronLeft, localize('parameterHintsPreviousIcon', 'Icon for show previous parameter hint.'));\nlet InlineSuggestionHintsContentWidget = class InlineSuggestionHintsContentWidget extends Disposable {\n    static get dropDownVisible() { return this._dropDownVisible; }\n    createCommandAction(commandId, label, iconClassName) {\n        const action = new Action(commandId, label, iconClassName, true, () => this._commandService.executeCommand(commandId));\n        const kb = this.keybindingService.lookupKeybinding(commandId, this._contextKeyService);\n        let tooltip = label;\n        if (kb) {\n            tooltip = localize({ key: 'content', comment: ['A label', 'A keybinding'] }, '{0} ({1})', label, kb.getLabel());\n        }\n        action.tooltip = tooltip;\n        return action;\n    }\n    constructor(editor, withBorder, _commandService, instantiationService, keybindingService, _contextKeyService, _menuService) {\n        super();\n        this.editor = editor;\n        this.withBorder = withBorder;\n        this._commandService = _commandService;\n        this.keybindingService = keybindingService;\n        this._contextKeyService = _contextKeyService;\n        this._menuService = _menuService;\n        this.id = `InlineSuggestionHintsContentWidget${InlineSuggestionHintsContentWidget.id++}`;\n        this.allowEditorOverflow = true;\n        this.suppressMouseDown = false;\n        this.nodes = h('div.inlineSuggestionsHints', { className: this.withBorder ? '.withBorder' : '' }, [\n            h('div', { style: { display: 'flex' } }, [\n                h('div@actionBar', { className: 'custom-actions' }),\n                h('div@toolBar'),\n            ])\n        ]);\n        this.position = null;\n        this.previousAction = this.createCommandAction(showPreviousInlineSuggestionActionId, localize('previous', 'Previous'), ThemeIcon.asClassName(inlineSuggestionHintsPreviousIcon));\n        this.availableSuggestionCountAction = new Action('inlineSuggestionHints.availableSuggestionCount', '', undefined, false);\n        this.nextAction = this.createCommandAction(showNextInlineSuggestionActionId, localize('next', 'Next'), ThemeIcon.asClassName(inlineSuggestionHintsNextIcon));\n        // TODO@hediet: deprecate MenuId.InlineCompletionsActions\n        this.inlineCompletionsActionsMenus = this._register(this._menuService.createMenu(MenuId.InlineCompletionsActions, this._contextKeyService));\n        this.clearAvailableSuggestionCountLabelDebounced = this._register(new RunOnceScheduler(() => {\n            this.availableSuggestionCountAction.label = '';\n        }, 100));\n        this.disableButtonsDebounced = this._register(new RunOnceScheduler(() => {\n            this.previousAction.enabled = this.nextAction.enabled = false;\n        }, 100));\n        const actionBar = this._register(new ActionBar(this.nodes.actionBar));\n        actionBar.push(this.previousAction, { icon: true, label: false });\n        actionBar.push(this.availableSuggestionCountAction);\n        actionBar.push(this.nextAction, { icon: true, label: false });\n        this.toolBar = this._register(instantiationService.createInstance(CustomizedMenuWorkbenchToolBar, this.nodes.toolBar, MenuId.InlineSuggestionToolbar, {\n            menuOptions: { renderShortTitle: true },\n            toolbarOptions: { primaryGroup: g => g.startsWith('primary') },\n            actionViewItemProvider: (action, options) => {\n                return action instanceof MenuItemAction ? instantiationService.createInstance(StatusBarViewItem, action, undefined) : undefined;\n            },\n            telemetrySource: 'InlineSuggestionToolbar',\n        }));\n        this._register(this.toolBar.onDidChangeDropdownVisibility(e => {\n            InlineSuggestionHintsContentWidget._dropDownVisible = e;\n        }));\n    }\n    update(position, currentSuggestionIdx, suggestionCount, extraCommands) {\n        this.position = position;\n        if (suggestionCount !== undefined && suggestionCount > 1) {\n            this.disableButtonsDebounced.cancel();\n            this.previousAction.enabled = this.nextAction.enabled = true;\n        }\n        else {\n            this.disableButtonsDebounced.schedule();\n        }\n        if (suggestionCount !== undefined) {\n            this.clearAvailableSuggestionCountLabelDebounced.cancel();\n            this.availableSuggestionCountAction.label = `${currentSuggestionIdx + 1}/${suggestionCount}`;\n        }\n        else {\n            this.clearAvailableSuggestionCountLabelDebounced.schedule();\n        }\n        this.editor.layoutContentWidget(this);\n        const extraActions = extraCommands.map(c => ({\n            class: undefined,\n            id: c.id,\n            enabled: true,\n            tooltip: c.tooltip || '',\n            label: c.title,\n            run: (event) => {\n                return this._commandService.executeCommand(c.id);\n            },\n        }));\n        for (const [_, group] of this.inlineCompletionsActionsMenus.getActions()) {\n            for (const action of group) {\n                if (action instanceof MenuItemAction) {\n                    extraActions.push(action);\n                }\n            }\n        }\n        if (extraActions.length > 0) {\n            extraActions.unshift(new Separator());\n        }\n        this.toolBar.setAdditionalSecondaryActions(extraActions);\n    }\n    getId() { return this.id; }\n    getDomNode() {\n        return this.nodes.root;\n    }\n    getPosition() {\n        return {\n            position: this.position,\n            preference: [1 /* ContentWidgetPositionPreference.ABOVE */, 2 /* ContentWidgetPositionPreference.BELOW */],\n            positionAffinity: 3 /* PositionAffinity.LeftOfInjectedText */,\n        };\n    }\n};\nInlineSuggestionHintsContentWidget._dropDownVisible = false;\nInlineSuggestionHintsContentWidget.id = 0;\nInlineSuggestionHintsContentWidget = __decorate([\n    __param(2, ICommandService),\n    __param(3, IInstantiationService),\n    __param(4, IKeybindingService),\n    __param(5, IContextKeyService),\n    __param(6, IMenuService)\n], InlineSuggestionHintsContentWidget);\nexport { InlineSuggestionHintsContentWidget };\nclass StatusBarViewItem extends MenuEntryActionViewItem {\n    updateLabel() {\n        const kb = this._keybindingService.lookupKeybinding(this._action.id, this._contextKeyService);\n        if (!kb) {\n            return super.updateLabel();\n        }\n        if (this.label) {\n            const div = h('div.keybinding').root;\n            const k = new KeybindingLabel(div, OS, Object.assign({ disableTitle: true }, unthemedKeybindingLabelOptions));\n            k.set(kb);\n            this.label.textContent = this._action.label;\n            this.label.appendChild(div);\n            this.label.classList.add('inlineSuggestionStatusBarItemLabel');\n        }\n    }\n}\nlet CustomizedMenuWorkbenchToolBar = class CustomizedMenuWorkbenchToolBar extends WorkbenchToolBar {\n    constructor(container, menuId, options2, menuService, contextKeyService, contextMenuService, keybindingService, telemetryService) {\n        super(container, Object.assign({ resetMenu: menuId }, options2), menuService, contextKeyService, contextMenuService, keybindingService, telemetryService);\n        this.menuId = menuId;\n        this.options2 = options2;\n        this.menuService = menuService;\n        this.contextKeyService = contextKeyService;\n        this.menu = this._store.add(this.menuService.createMenu(this.menuId, this.contextKeyService, { emitEventsForSubmenuChanges: true }));\n        this.additionalActions = [];\n        this._store.add(this.menu.onDidChange(() => this.updateToolbar()));\n        this.updateToolbar();\n    }\n    updateToolbar() {\n        var _a, _b, _c, _d, _e, _f, _g;\n        const primary = [];\n        const secondary = [];\n        createAndFillInActionBarActions(this.menu, (_a = this.options2) === null || _a === void 0 ? void 0 : _a.menuOptions, { primary, secondary }, (_c = (_b = this.options2) === null || _b === void 0 ? void 0 : _b.toolbarOptions) === null || _c === void 0 ? void 0 : _c.primaryGroup, (_e = (_d = this.options2) === null || _d === void 0 ? void 0 : _d.toolbarOptions) === null || _e === void 0 ? void 0 : _e.shouldInlineSubmenu, (_g = (_f = this.options2) === null || _f === void 0 ? void 0 : _f.toolbarOptions) === null || _g === void 0 ? void 0 : _g.useSeparatorsInPrimaryActions);\n        secondary.push(...this.additionalActions);\n        this.setActions(primary, secondary);\n    }\n    setAdditionalSecondaryActions(actions) {\n        this.additionalActions = actions;\n        this.updateToolbar();\n    }\n};\nCustomizedMenuWorkbenchToolBar = __decorate([\n    __param(3, IMenuService),\n    __param(4, IContextKeyService),\n    __param(5, IContextMenuService),\n    __param(6, IKeybindingService),\n    __param(7, ITelemetryService)\n], CustomizedMenuWorkbenchToolBar);\nexport { CustomizedMenuWorkbenchToolBar };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { CursorMoveCommands } from '../../../common/cursor/cursorMoveCommands.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nexport class ExpandLineSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'expandLineSelection',\n            label: nls.localize('expandLineSelection', \"Expand Line Selection\"),\n            alias: 'Expand Line Selection',\n            precondition: undefined,\n            kbOpts: {\n                weight: 0 /* KeybindingWeight.EditorCore */,\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 42 /* KeyCode.KeyL */\n            },\n        });\n    }\n    run(_accessor, editor, args) {\n        args = args || {};\n        if (!editor.hasModel()) {\n            return;\n        }\n        const viewModel = editor._getViewModel();\n        viewModel.model.pushStackElement();\n        viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.expandLineSelection(viewModel, viewModel.getCursorStates()));\n        viewModel.revealPrimaryCursor(args.source, true);\n    }\n}\nregisterEditorAction(ExpandLineSelectionAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class CopyLinesCommand {\n    constructor(selection, isCopyingDown, noop) {\n        this._selection = selection;\n        this._isCopyingDown = isCopyingDown;\n        this._noop = noop || false;\n        this._selectionDirection = 0 /* SelectionDirection.LTR */;\n        this._selectionId = null;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n    }\n    getEditOperations(model, builder) {\n        let s = this._selection;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._endLineNumberDelta = 1;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const sourceLines = [];\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            sourceLines.push(model.getLineContent(i));\n        }\n        const sourceText = sourceLines.join('\\n');\n        if (sourceText === '') {\n            // Duplicating empty line\n            if (this._isCopyingDown) {\n                this._startLineNumberDelta++;\n                this._endLineNumberDelta++;\n            }\n        }\n        if (this._noop) {\n            builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber + 1, 1), s.endLineNumber === model.getLineCount() ? '' : '\\n');\n        }\n        else {\n            if (!this._isCopyingDown) {\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + sourceText);\n            }\n            else {\n                builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), sourceText + '\\n');\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n        this._selectionDirection = this._selection.getDirection();\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._startLineNumberDelta !== 0 || this._endLineNumberDelta !== 0) {\n            let startLineNumber = result.startLineNumber;\n            let startColumn = result.startColumn;\n            let endLineNumber = result.endLineNumber;\n            let endColumn = result.endColumn;\n            if (this._startLineNumberDelta !== 0) {\n                startLineNumber = startLineNumber + this._startLineNumberDelta;\n                startColumn = 1;\n            }\n            if (this._endLineNumberDelta !== 0) {\n                endLineNumber = endLineNumber + this._endLineNumberDelta;\n                endColumn = 1;\n            }\n            result = Selection.createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, this._selectionDirection);\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as strings from '../../../../base/common/strings.js';\nimport { ShiftCommand } from '../../../common/commands/shiftCommand.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IndentAction } from '../../../common/languages/languageConfiguration.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport * as indentUtils from '../../indentation/browser/indentUtils.js';\nimport { getGoodIndentForLine, getIndentMetadata } from '../../../common/languages/autoIndent.js';\nimport { getEnterAction } from '../../../common/languages/enterAction.js';\nlet MoveLinesCommand = class MoveLinesCommand {\n    constructor(selection, isMovingDown, autoIndent, _languageConfigurationService) {\n        this._languageConfigurationService = _languageConfigurationService;\n        this._selection = selection;\n        this._isMovingDown = isMovingDown;\n        this._autoIndent = autoIndent;\n        this._selectionId = null;\n        this._moveEndLineSelectionShrink = false;\n    }\n    getEditOperations(model, builder) {\n        const modelLineCount = model.getLineCount();\n        if (this._isMovingDown && this._selection.endLineNumber === modelLineCount) {\n            this._selectionId = builder.trackSelection(this._selection);\n            return;\n        }\n        if (!this._isMovingDown && this._selection.startLineNumber === 1) {\n            this._selectionId = builder.trackSelection(this._selection);\n            return;\n        }\n        this._moveEndPositionDown = false;\n        let s = this._selection;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._moveEndPositionDown = true;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\n        const indentConverter = this.buildIndentConverter(tabSize, indentSize, insertSpaces);\n        const virtualModel = {\n            tokenization: {\n                getLineTokens: (lineNumber) => {\n                    return model.tokenization.getLineTokens(lineNumber);\n                },\n                getLanguageId: () => {\n                    return model.getLanguageId();\n                },\n                getLanguageIdAtPosition: (lineNumber, column) => {\n                    return model.getLanguageIdAtPosition(lineNumber, column);\n                },\n            },\n            getLineContent: null,\n        };\n        if (s.startLineNumber === s.endLineNumber && model.getLineMaxColumn(s.startLineNumber) === 1) {\n            // Current line is empty\n            const lineNumber = s.startLineNumber;\n            const otherLineNumber = (this._isMovingDown ? lineNumber + 1 : lineNumber - 1);\n            if (model.getLineMaxColumn(otherLineNumber) === 1) {\n                // Other line number is empty too, so no editing is needed\n                // Add a no-op to force running by the model\n                builder.addEditOperation(new Range(1, 1, 1, 1), null);\n            }\n            else {\n                // Type content from other line number on line number\n                builder.addEditOperation(new Range(lineNumber, 1, lineNumber, 1), model.getLineContent(otherLineNumber));\n                // Remove content from other line number\n                builder.addEditOperation(new Range(otherLineNumber, 1, otherLineNumber, model.getLineMaxColumn(otherLineNumber)), null);\n            }\n            // Track selection at the other line number\n            s = new Selection(otherLineNumber, 1, otherLineNumber, 1);\n        }\n        else {\n            let movingLineNumber;\n            let movingLineText;\n            if (this._isMovingDown) {\n                movingLineNumber = s.endLineNumber + 1;\n                movingLineText = model.getLineContent(movingLineNumber);\n                // Delete line that needs to be moved\n                builder.addEditOperation(new Range(movingLineNumber - 1, model.getLineMaxColumn(movingLineNumber - 1), movingLineNumber, model.getLineMaxColumn(movingLineNumber)), null);\n                let insertingText = movingLineText;\n                if (this.shouldAutoIndent(model, s)) {\n                    const movingLineMatchResult = this.matchEnterRule(model, indentConverter, tabSize, movingLineNumber, s.startLineNumber - 1);\n                    // if s.startLineNumber - 1 matches onEnter rule, we still honor that.\n                    if (movingLineMatchResult !== null) {\n                        const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\n                        const newSpaceCnt = movingLineMatchResult + indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                        const newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                        insertingText = newIndentation + this.trimLeft(movingLineText);\n                    }\n                    else {\n                        // no enter rule matches, let's check indentatin rules then.\n                        virtualModel.getLineContent = (lineNumber) => {\n                            if (lineNumber === s.startLineNumber) {\n                                return model.getLineContent(movingLineNumber);\n                            }\n                            else {\n                                return model.getLineContent(lineNumber);\n                            }\n                        };\n                        const indentOfMovingLine = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber, indentConverter, this._languageConfigurationService);\n                        if (indentOfMovingLine !== null) {\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(indentOfMovingLine, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                                insertingText = newIndentation + this.trimLeft(movingLineText);\n                            }\n                        }\n                    }\n                    // add edit operations for moving line first to make sure it's executed after we make indentation change\n                    // to s.startLineNumber\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\n                    const ret = this.matchEnterRuleMovingDown(model, indentConverter, tabSize, s.startLineNumber, movingLineNumber, insertingText);\n                    // check if the line being moved before matches onEnter rules, if so let's adjust the indentation by onEnter rules.\n                    if (ret !== null) {\n                        if (ret !== 0) {\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\n                        }\n                    }\n                    else {\n                        // it doesn't match onEnter rules, let's check indentation rules then.\n                        virtualModel.getLineContent = (lineNumber) => {\n                            if (lineNumber === s.startLineNumber) {\n                                return insertingText;\n                            }\n                            else if (lineNumber >= s.startLineNumber + 1 && lineNumber <= s.endLineNumber + 1) {\n                                return model.getLineContent(lineNumber - 1);\n                            }\n                            else {\n                                return model.getLineContent(lineNumber);\n                            }\n                        };\n                        const newIndentatOfMovingBlock = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber + 1, indentConverter, this._languageConfigurationService);\n                        if (newIndentatOfMovingBlock !== null) {\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(newIndentatOfMovingBlock, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\n                            }\n                        }\n                    }\n                }\n                else {\n                    // Insert line that needs to be moved before\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\n                }\n            }\n            else {\n                movingLineNumber = s.startLineNumber - 1;\n                movingLineText = model.getLineContent(movingLineNumber);\n                // Delete line that needs to be moved\n                builder.addEditOperation(new Range(movingLineNumber, 1, movingLineNumber + 1, 1), null);\n                // Insert line that needs to be moved after\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + movingLineText);\n                if (this.shouldAutoIndent(model, s)) {\n                    virtualModel.getLineContent = (lineNumber) => {\n                        if (lineNumber === movingLineNumber) {\n                            return model.getLineContent(s.startLineNumber);\n                        }\n                        else {\n                            return model.getLineContent(lineNumber);\n                        }\n                    };\n                    const ret = this.matchEnterRule(model, indentConverter, tabSize, s.startLineNumber, s.startLineNumber - 2);\n                    // check if s.startLineNumber - 2 matches onEnter rules, if so adjust the moving block by onEnter rules.\n                    if (ret !== null) {\n                        if (ret !== 0) {\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\n                        }\n                    }\n                    else {\n                        // it doesn't match any onEnter rule, let's check indentation rules then.\n                        const indentOfFirstLine = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(s.startLineNumber, 1), movingLineNumber, indentConverter, this._languageConfigurationService);\n                        if (indentOfFirstLine !== null) {\n                            // adjust the indentation of the moving block\n                            const oldIndent = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndent, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n    }\n    buildIndentConverter(tabSize, indentSize, insertSpaces) {\n        return {\n            shiftIndent: (indentation) => {\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            },\n            unshiftIndent: (indentation) => {\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            }\n        };\n    }\n    parseEnterResult(model, indentConverter, tabSize, line, enter) {\n        if (enter) {\n            let enterPrefix = enter.indentation;\n            if (enter.indentAction === IndentAction.None) {\n                enterPrefix = enter.indentation + enter.appendText;\n            }\n            else if (enter.indentAction === IndentAction.Indent) {\n                enterPrefix = enter.indentation + enter.appendText;\n            }\n            else if (enter.indentAction === IndentAction.IndentOutdent) {\n                enterPrefix = enter.indentation;\n            }\n            else if (enter.indentAction === IndentAction.Outdent) {\n                enterPrefix = indentConverter.unshiftIndent(enter.indentation) + enter.appendText;\n            }\n            const movingLineText = model.getLineContent(line);\n            if (this.trimLeft(movingLineText).indexOf(this.trimLeft(enterPrefix)) >= 0) {\n                const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(line));\n                let newIndentation = strings.getLeadingWhitespace(enterPrefix);\n                const indentMetadataOfMovelingLine = getIndentMetadata(model, line, this._languageConfigurationService);\n                if (indentMetadataOfMovelingLine !== null && indentMetadataOfMovelingLine & 2 /* IndentConsts.DECREASE_MASK */) {\n                    newIndentation = indentConverter.unshiftIndent(newIndentation);\n                }\n                const newSpaceCnt = indentUtils.getSpaceCnt(newIndentation, tabSize);\n                const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                return newSpaceCnt - oldSpaceCnt;\n            }\n        }\n        return null;\n    }\n    /**\n     *\n     * @param model\n     * @param indentConverter\n     * @param tabSize\n     * @param line the line moving down\n     * @param futureAboveLineNumber the line which will be at the `line` position\n     * @param futureAboveLineText\n     */\n    matchEnterRuleMovingDown(model, indentConverter, tabSize, line, futureAboveLineNumber, futureAboveLineText) {\n        if (strings.lastNonWhitespaceIndex(futureAboveLineText) >= 0) {\n            // break\n            const maxColumn = model.getLineMaxColumn(futureAboveLineNumber);\n            const enter = getEnterAction(this._autoIndent, model, new Range(futureAboveLineNumber, maxColumn, futureAboveLineNumber, maxColumn), this._languageConfigurationService);\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n        }\n        else {\n            // go upwards, starting from `line - 1`\n            let validPrecedingLine = line - 1;\n            while (validPrecedingLine >= 1) {\n                const lineContent = model.getLineContent(validPrecedingLine);\n                const nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\n                if (nonWhitespaceIdx >= 0) {\n                    break;\n                }\n                validPrecedingLine--;\n            }\n            if (validPrecedingLine < 1 || line > model.getLineCount()) {\n                return null;\n            }\n            const maxColumn = model.getLineMaxColumn(validPrecedingLine);\n            const enter = getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn), this._languageConfigurationService);\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n        }\n    }\n    matchEnterRule(model, indentConverter, tabSize, line, oneLineAbove, previousLineText) {\n        let validPrecedingLine = oneLineAbove;\n        while (validPrecedingLine >= 1) {\n            // ship empty lines as empty lines just inherit indentation\n            let lineContent;\n            if (validPrecedingLine === oneLineAbove && previousLineText !== undefined) {\n                lineContent = previousLineText;\n            }\n            else {\n                lineContent = model.getLineContent(validPrecedingLine);\n            }\n            const nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\n            if (nonWhitespaceIdx >= 0) {\n                break;\n            }\n            validPrecedingLine--;\n        }\n        if (validPrecedingLine < 1 || line > model.getLineCount()) {\n            return null;\n        }\n        const maxColumn = model.getLineMaxColumn(validPrecedingLine);\n        const enter = getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn), this._languageConfigurationService);\n        return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n    }\n    trimLeft(str) {\n        return str.replace(/^\\s+/, '');\n    }\n    shouldAutoIndent(model, selection) {\n        if (this._autoIndent < 4 /* EditorAutoIndentStrategy.Full */) {\n            return false;\n        }\n        // if it's not easy to tokenize, we stop auto indent.\n        if (!model.tokenization.isCheapToTokenize(selection.startLineNumber)) {\n            return false;\n        }\n        const languageAtSelectionStart = model.getLanguageIdAtPosition(selection.startLineNumber, 1);\n        const languageAtSelectionEnd = model.getLanguageIdAtPosition(selection.endLineNumber, 1);\n        if (languageAtSelectionStart !== languageAtSelectionEnd) {\n            return false;\n        }\n        if (this._languageConfigurationService.getLanguageConfiguration(languageAtSelectionStart).indentRulesSupport === null) {\n            return false;\n        }\n        return true;\n    }\n    getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, offset) {\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            const lineContent = model.getLineContent(i);\n            const originalIndent = strings.getLeadingWhitespace(lineContent);\n            const originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\n            const newSpacesCnt = originalSpacesCnt + offset;\n            const newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\n            if (newIndent !== originalIndent) {\n                builder.addEditOperation(new Range(i, 1, i, originalIndent.length + 1), newIndent);\n                if (i === s.endLineNumber && s.endColumn <= originalIndent.length + 1 && newIndent === '') {\n                    // as users select part of the original indent white spaces\n                    // when we adjust the indentation of endLine, we should adjust the cursor position as well.\n                    this._moveEndLineSelectionShrink = true;\n                }\n            }\n        }\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._moveEndPositionDown) {\n            result = result.setEndPosition(result.endLineNumber + 1, 1);\n        }\n        if (this._moveEndLineSelectionShrink && result.startLineNumber < result.endLineNumber) {\n            result = result.setEndPosition(result.endLineNumber, 2);\n        }\n        return result;\n    }\n};\nMoveLinesCommand = __decorate([\n    __param(3, ILanguageConfigurationService)\n], MoveLinesCommand);\nexport { MoveLinesCommand };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nclass SortLinesCommand {\n    static getCollator() {\n        if (!SortLinesCommand._COLLATOR) {\n            SortLinesCommand._COLLATOR = new Intl.Collator();\n        }\n        return SortLinesCommand._COLLATOR;\n    }\n    constructor(selection, descending) {\n        this.selection = selection;\n        this.descending = descending;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        const op = sortLines(model, this.selection, this.descending);\n        if (op) {\n            builder.addEditOperation(op.range, op.text);\n        }\n        this.selectionId = builder.trackSelection(this.selection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n    static canRun(model, selection, descending) {\n        if (model === null) {\n            return false;\n        }\n        const data = getSortData(model, selection, descending);\n        if (!data) {\n            return false;\n        }\n        for (let i = 0, len = data.before.length; i < len; i++) {\n            if (data.before[i] !== data.after[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nSortLinesCommand._COLLATOR = null;\nexport { SortLinesCommand };\nfunction getSortData(model, selection, descending) {\n    const startLineNumber = selection.startLineNumber;\n    let endLineNumber = selection.endLineNumber;\n    if (selection.endColumn === 1) {\n        endLineNumber--;\n    }\n    // Nothing to sort if user didn't select anything.\n    if (startLineNumber >= endLineNumber) {\n        return null;\n    }\n    const linesToSort = [];\n    // Get the contents of the selection to be sorted.\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        linesToSort.push(model.getLineContent(lineNumber));\n    }\n    let sorted = linesToSort.slice(0);\n    sorted.sort(SortLinesCommand.getCollator().compare);\n    // If descending, reverse the order.\n    if (descending === true) {\n        sorted = sorted.reverse();\n    }\n    return {\n        startLineNumber: startLineNumber,\n        endLineNumber: endLineNumber,\n        before: linesToSort,\n        after: sorted\n    };\n}\n/**\n * Generate commands for sorting lines on a model.\n */\nfunction sortLines(model, selection, descending) {\n    const data = getSortData(model, selection, descending);\n    if (!data) {\n        return null;\n    }\n    return EditOperation.replace(new Range(data.startLineNumber, 1, data.endLineNumber, model.getLineMaxColumn(data.endLineNumber)), data.after.join('\\n'));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection, ReplaceCommandThatSelectsText } from '../../../common/commands/replaceCommand.js';\nimport { TrimTrailingWhitespaceCommand } from '../../../common/commands/trimTrailingWhitespaceCommand.js';\nimport { TypeOperations } from '../../../common/cursor/cursorTypeOperations.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { CopyLinesCommand } from './copyLinesCommand.js';\nimport { MoveLinesCommand } from './moveLinesCommand.js';\nimport { SortLinesCommand } from './sortLinesCommand.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\n// copy lines\nclass AbstractCopyLinesAction extends EditorAction {\n    constructor(down, opts) {\n        super(opts);\n        this.down = down;\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections().map((selection, index) => ({ selection, index, ignore: false }));\n        selections.sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\n        // Remove selections that would result in copying the same line\n        let prev = selections[0];\n        for (let i = 1; i < selections.length; i++) {\n            const curr = selections[i];\n            if (prev.selection.endLineNumber === curr.selection.startLineNumber) {\n                // these two selections would copy the same line\n                if (prev.index < curr.index) {\n                    // prev wins\n                    curr.ignore = true;\n                }\n                else {\n                    // curr wins\n                    prev.ignore = true;\n                    prev = curr;\n                }\n            }\n        }\n        const commands = [];\n        for (const selection of selections) {\n            commands.push(new CopyLinesCommand(selection.selection, this.down, selection.ignore));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass CopyLinesUpAction extends AbstractCopyLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.copyLinesUpAction',\n            label: nls.localize('lines.copyUp', \"Copy Line Up\"),\n            alias: 'Copy Line Up',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miCopyLinesUp', comment: ['&& denotes a mnemonic'] }, \"&&Copy Line Up\"),\n                order: 1\n            }\n        });\n    }\n}\nclass CopyLinesDownAction extends AbstractCopyLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.copyLinesDownAction',\n            label: nls.localize('lines.copyDown', \"Copy Line Down\"),\n            alias: 'Copy Line Down',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miCopyLinesDown', comment: ['&& denotes a mnemonic'] }, \"Co&&py Line Down\"),\n                order: 2\n            }\n        });\n    }\n}\nexport class DuplicateSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.duplicateSelection',\n            label: nls.localize('duplicateSelection', \"Duplicate Selection\"),\n            alias: 'Duplicate Selection',\n            precondition: EditorContextKeys.writable,\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miDuplicateSelection', comment: ['&& denotes a mnemonic'] }, \"&&Duplicate Selection\"),\n                order: 5\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const commands = [];\n        const selections = editor.getSelections();\n        const model = editor.getModel();\n        for (const selection of selections) {\n            if (selection.isEmpty()) {\n                commands.push(new CopyLinesCommand(selection, true));\n            }\n            else {\n                const insertSelection = new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn);\n                commands.push(new ReplaceCommandThatSelectsText(insertSelection, model.getValueInRange(selection)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\n// move lines\nclass AbstractMoveLinesAction extends EditorAction {\n    constructor(down, opts) {\n        super(opts);\n        this.down = down;\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const commands = [];\n        const selections = editor.getSelections() || [];\n        const autoIndent = editor.getOption(9 /* EditorOption.autoIndent */);\n        for (const selection of selections) {\n            commands.push(new MoveLinesCommand(selection, this.down, autoIndent, languageConfigurationService));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass MoveLinesUpAction extends AbstractMoveLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.moveLinesUpAction',\n            label: nls.localize('lines.moveUp', \"Move Line Up\"),\n            alias: 'Move Line Up',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */,\n                linux: { primary: 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miMoveLinesUp', comment: ['&& denotes a mnemonic'] }, \"Mo&&ve Line Up\"),\n                order: 3\n            }\n        });\n    }\n}\nclass MoveLinesDownAction extends AbstractMoveLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.moveLinesDownAction',\n            label: nls.localize('lines.moveDown', \"Move Line Down\"),\n            alias: 'Move Line Down',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */,\n                linux: { primary: 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miMoveLinesDown', comment: ['&& denotes a mnemonic'] }, \"Move &&Line Down\"),\n                order: 4\n            }\n        });\n    }\n}\nexport class AbstractSortLinesAction extends EditorAction {\n    constructor(descending, opts) {\n        super(opts);\n        this.descending = descending;\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections() || [];\n        for (const selection of selections) {\n            if (!SortLinesCommand.canRun(editor.getModel(), selection, this.descending)) {\n                return;\n            }\n        }\n        const commands = [];\n        for (let i = 0, len = selections.length; i < len; i++) {\n            commands[i] = new SortLinesCommand(selections[i], this.descending);\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nexport class SortLinesAscendingAction extends AbstractSortLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.sortLinesAscending',\n            label: nls.localize('lines.sortAscending', \"Sort Lines Ascending\"),\n            alias: 'Sort Lines Ascending',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nexport class SortLinesDescendingAction extends AbstractSortLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.sortLinesDescending',\n            label: nls.localize('lines.sortDescending', \"Sort Lines Descending\"),\n            alias: 'Sort Lines Descending',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nexport class DeleteDuplicateLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.removeDuplicateLines',\n            label: nls.localize('lines.deleteDuplicates', \"Delete Duplicate Lines\"),\n            alias: 'Delete Duplicate Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n            return;\n        }\n        const edits = [];\n        const endCursorState = [];\n        let linesDeleted = 0;\n        for (const selection of editor.getSelections()) {\n            const uniqueLines = new Set();\n            const lines = [];\n            for (let i = selection.startLineNumber; i <= selection.endLineNumber; i++) {\n                const line = model.getLineContent(i);\n                if (uniqueLines.has(line)) {\n                    continue;\n                }\n                lines.push(line);\n                uniqueLines.add(line);\n            }\n            const selectionToReplace = new Selection(selection.startLineNumber, 1, selection.endLineNumber, model.getLineMaxColumn(selection.endLineNumber));\n            const adjustedSelectionStart = selection.startLineNumber - linesDeleted;\n            const finalSelection = new Selection(adjustedSelectionStart, 1, adjustedSelectionStart + lines.length - 1, lines[lines.length - 1].length);\n            edits.push(EditOperation.replace(selectionToReplace, lines.join('\\n')));\n            endCursorState.push(finalSelection);\n            linesDeleted += (selection.endLineNumber - selection.startLineNumber + 1) - lines.length;\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nclass TrimTrailingWhitespaceAction extends EditorAction {\n    constructor() {\n        super({\n            id: TrimTrailingWhitespaceAction.ID,\n            label: nls.localize('lines.trimTrailingWhitespace', \"Trim Trailing Whitespace\"),\n            alias: 'Trim Trailing Whitespace',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 54 /* KeyCode.KeyX */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor, args) {\n        let cursors = [];\n        if (args.reason === 'auto-save') {\n            // See https://github.com/editorconfig/editorconfig-vscode/issues/47\n            // It is very convenient for the editor config extension to invoke this action.\n            // So, if we get a reason:'auto-save' passed in, let's preserve cursor positions.\n            cursors = (editor.getSelections() || []).map(s => new Position(s.positionLineNumber, s.positionColumn));\n        }\n        const selection = editor.getSelection();\n        if (selection === null) {\n            return;\n        }\n        const command = new TrimTrailingWhitespaceCommand(selection, cursors);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n    }\n}\nTrimTrailingWhitespaceAction.ID = 'editor.action.trimTrailingWhitespace';\nexport { TrimTrailingWhitespaceAction };\nexport class DeleteLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.deleteLines',\n            label: nls.localize('lines.delete', \"Delete Line\"),\n            alias: 'Delete Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 41 /* KeyCode.KeyK */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const ops = this._getLinesToRemove(editor);\n        const model = editor.getModel();\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n            // Model is empty\n            return;\n        }\n        let linesDeleted = 0;\n        const edits = [];\n        const cursorState = [];\n        for (let i = 0, len = ops.length; i < len; i++) {\n            const op = ops[i];\n            let startLineNumber = op.startLineNumber;\n            let endLineNumber = op.endLineNumber;\n            let startColumn = 1;\n            let endColumn = model.getLineMaxColumn(endLineNumber);\n            if (endLineNumber < model.getLineCount()) {\n                endLineNumber += 1;\n                endColumn = 1;\n            }\n            else if (startLineNumber > 1) {\n                startLineNumber -= 1;\n                startColumn = model.getLineMaxColumn(startLineNumber);\n            }\n            edits.push(EditOperation.replace(new Selection(startLineNumber, startColumn, endLineNumber, endColumn), ''));\n            cursorState.push(new Selection(startLineNumber - linesDeleted, op.positionColumn, startLineNumber - linesDeleted, op.positionColumn));\n            linesDeleted += (op.endLineNumber - op.startLineNumber + 1);\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, cursorState);\n        editor.pushUndoStop();\n    }\n    _getLinesToRemove(editor) {\n        // Construct delete operations\n        const operations = editor.getSelections().map((s) => {\n            let endLineNumber = s.endLineNumber;\n            if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n                endLineNumber -= 1;\n            }\n            return {\n                startLineNumber: s.startLineNumber,\n                selectionStartColumn: s.selectionStartColumn,\n                endLineNumber: endLineNumber,\n                positionColumn: s.positionColumn\n            };\n        });\n        // Sort delete operations\n        operations.sort((a, b) => {\n            if (a.startLineNumber === b.startLineNumber) {\n                return a.endLineNumber - b.endLineNumber;\n            }\n            return a.startLineNumber - b.startLineNumber;\n        });\n        // Merge delete operations which are adjacent or overlapping\n        const mergedOperations = [];\n        let previousOperation = operations[0];\n        for (let i = 1; i < operations.length; i++) {\n            if (previousOperation.endLineNumber + 1 >= operations[i].startLineNumber) {\n                // Merge current operations into the previous one\n                previousOperation.endLineNumber = operations[i].endLineNumber;\n            }\n            else {\n                // Push previous operation\n                mergedOperations.push(previousOperation);\n                previousOperation = operations[i];\n            }\n        }\n        // Push the last operation\n        mergedOperations.push(previousOperation);\n        return mergedOperations;\n    }\n}\nexport class IndentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.indentLines',\n            label: nls.localize('lines.indent', \"Indent Line\"),\n            alias: 'Indent Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 89 /* KeyCode.BracketRight */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.indent(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n        editor.pushUndoStop();\n    }\n}\nclass OutdentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.outdentLines',\n            label: nls.localize('lines.outdent', \"Outdent Line\"),\n            alias: 'Outdent Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 87 /* KeyCode.BracketLeft */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        CoreEditingCommands.Outdent.runEditorCommand(_accessor, editor, null);\n    }\n}\nexport class InsertLineBeforeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertLineBefore',\n            label: nls.localize('lines.insertBefore', \"Insert Line Above\"),\n            alias: 'Insert Line Above',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.lineInsertBefore(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n    }\n}\nexport class InsertLineAfterAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertLineAfter',\n            label: nls.localize('lines.insertAfter', \"Insert Line Below\"),\n            alias: 'Insert Line Below',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.lineInsertAfter(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n    }\n}\nexport class AbstractDeleteAllToBoundaryAction extends EditorAction {\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const primaryCursor = editor.getSelection();\n        const rangesToDelete = this._getRangesToDelete(editor);\n        // merge overlapping selections\n        const effectiveRanges = [];\n        for (let i = 0, count = rangesToDelete.length - 1; i < count; i++) {\n            const range = rangesToDelete[i];\n            const nextRange = rangesToDelete[i + 1];\n            if (Range.intersectRanges(range, nextRange) === null) {\n                effectiveRanges.push(range);\n            }\n            else {\n                rangesToDelete[i + 1] = Range.plusRange(range, nextRange);\n            }\n        }\n        effectiveRanges.push(rangesToDelete[rangesToDelete.length - 1]);\n        const endCursorState = this._getEndCursorState(primaryCursor, effectiveRanges);\n        const edits = effectiveRanges.map(range => {\n            return EditOperation.replace(range, '');\n        });\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class DeleteAllLeftAction extends AbstractDeleteAllToBoundaryAction {\n    constructor() {\n        super({\n            id: 'deleteAllLeft',\n            label: nls.localize('lines.deleteAllLeft', \"Delete All Left\"),\n            alias: 'Delete All Left',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1 /* KeyCode.Backspace */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _getEndCursorState(primaryCursor, rangesToDelete) {\n        let endPrimaryCursor = null;\n        const endCursorState = [];\n        let deletedLines = 0;\n        rangesToDelete.forEach(range => {\n            let endCursor;\n            if (range.endColumn === 1 && deletedLines > 0) {\n                const newStartLine = range.startLineNumber - deletedLines;\n                endCursor = new Selection(newStartLine, range.startColumn, newStartLine, range.startColumn);\n            }\n            else {\n                endCursor = new Selection(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n            }\n            deletedLines += range.endLineNumber - range.startLineNumber;\n            if (range.intersectRanges(primaryCursor)) {\n                endPrimaryCursor = endCursor;\n            }\n            else {\n                endCursorState.push(endCursor);\n            }\n        });\n        if (endPrimaryCursor) {\n            endCursorState.unshift(endPrimaryCursor);\n        }\n        return endCursorState;\n    }\n    _getRangesToDelete(editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return [];\n        }\n        let rangesToDelete = selections;\n        const model = editor.getModel();\n        if (model === null) {\n            return [];\n        }\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\n        rangesToDelete = rangesToDelete.map(selection => {\n            if (selection.isEmpty()) {\n                if (selection.startColumn === 1) {\n                    const deleteFromLine = Math.max(1, selection.startLineNumber - 1);\n                    const deleteFromColumn = selection.startLineNumber === 1 ? 1 : model.getLineContent(deleteFromLine).length + 1;\n                    return new Range(deleteFromLine, deleteFromColumn, selection.startLineNumber, 1);\n                }\n                else {\n                    return new Range(selection.startLineNumber, 1, selection.startLineNumber, selection.startColumn);\n                }\n            }\n            else {\n                return new Range(selection.startLineNumber, 1, selection.endLineNumber, selection.endColumn);\n            }\n        });\n        return rangesToDelete;\n    }\n}\nexport class DeleteAllRightAction extends AbstractDeleteAllToBoundaryAction {\n    constructor() {\n        super({\n            id: 'deleteAllRight',\n            label: nls.localize('lines.deleteAllRight', \"Delete All Right\"),\n            alias: 'Delete All Right',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 41 /* KeyCode.KeyK */, secondary: [2048 /* KeyMod.CtrlCmd */ | 20 /* KeyCode.Delete */] },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _getEndCursorState(primaryCursor, rangesToDelete) {\n        let endPrimaryCursor = null;\n        const endCursorState = [];\n        for (let i = 0, len = rangesToDelete.length, offset = 0; i < len; i++) {\n            const range = rangesToDelete[i];\n            const endCursor = new Selection(range.startLineNumber - offset, range.startColumn, range.startLineNumber - offset, range.startColumn);\n            if (range.intersectRanges(primaryCursor)) {\n                endPrimaryCursor = endCursor;\n            }\n            else {\n                endCursorState.push(endCursor);\n            }\n        }\n        if (endPrimaryCursor) {\n            endCursorState.unshift(endPrimaryCursor);\n        }\n        return endCursorState;\n    }\n    _getRangesToDelete(editor) {\n        const model = editor.getModel();\n        if (model === null) {\n            return [];\n        }\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return [];\n        }\n        const rangesToDelete = selections.map((sel) => {\n            if (sel.isEmpty()) {\n                const maxColumn = model.getLineMaxColumn(sel.startLineNumber);\n                if (sel.startColumn === maxColumn) {\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber + 1, 1);\n                }\n                else {\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber, maxColumn);\n                }\n            }\n            return sel;\n        });\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\n        return rangesToDelete;\n    }\n}\nexport class JoinLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.joinLines',\n            label: nls.localize('lines.joinLines', \"Join Lines\"),\n            alias: 'Join Lines',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 40 /* KeyCode.KeyJ */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        let primaryCursor = editor.getSelection();\n        if (primaryCursor === null) {\n            return;\n        }\n        selections.sort(Range.compareRangesUsingStarts);\n        const reducedSelections = [];\n        const lastSelection = selections.reduce((previousValue, currentValue) => {\n            if (previousValue.isEmpty()) {\n                if (previousValue.endLineNumber === currentValue.startLineNumber) {\n                    if (primaryCursor.equalsSelection(previousValue)) {\n                        primaryCursor = currentValue;\n                    }\n                    return currentValue;\n                }\n                if (currentValue.startLineNumber > previousValue.endLineNumber + 1) {\n                    reducedSelections.push(previousValue);\n                    return currentValue;\n                }\n                else {\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n                }\n            }\n            else {\n                if (currentValue.startLineNumber > previousValue.endLineNumber) {\n                    reducedSelections.push(previousValue);\n                    return currentValue;\n                }\n                else {\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n                }\n            }\n        });\n        reducedSelections.push(lastSelection);\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const edits = [];\n        const endCursorState = [];\n        let endPrimaryCursor = primaryCursor;\n        let lineOffset = 0;\n        for (let i = 0, len = reducedSelections.length; i < len; i++) {\n            const selection = reducedSelections[i];\n            const startLineNumber = selection.startLineNumber;\n            const startColumn = 1;\n            let columnDeltaOffset = 0;\n            let endLineNumber, endColumn;\n            const selectionEndPositionOffset = model.getLineContent(selection.endLineNumber).length - selection.endColumn;\n            if (selection.isEmpty() || selection.startLineNumber === selection.endLineNumber) {\n                const position = selection.getStartPosition();\n                if (position.lineNumber < model.getLineCount()) {\n                    endLineNumber = startLineNumber + 1;\n                    endColumn = model.getLineMaxColumn(endLineNumber);\n                }\n                else {\n                    endLineNumber = position.lineNumber;\n                    endColumn = model.getLineMaxColumn(position.lineNumber);\n                }\n            }\n            else {\n                endLineNumber = selection.endLineNumber;\n                endColumn = model.getLineMaxColumn(endLineNumber);\n            }\n            let trimmedLinesContent = model.getLineContent(startLineNumber);\n            for (let i = startLineNumber + 1; i <= endLineNumber; i++) {\n                const lineText = model.getLineContent(i);\n                const firstNonWhitespaceIdx = model.getLineFirstNonWhitespaceColumn(i);\n                if (firstNonWhitespaceIdx >= 1) {\n                    let insertSpace = true;\n                    if (trimmedLinesContent === '') {\n                        insertSpace = false;\n                    }\n                    if (insertSpace && (trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === ' ' ||\n                        trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === '\\t')) {\n                        insertSpace = false;\n                        trimmedLinesContent = trimmedLinesContent.replace(/[\\s\\uFEFF\\xA0]+$/g, ' ');\n                    }\n                    const lineTextWithoutIndent = lineText.substr(firstNonWhitespaceIdx - 1);\n                    trimmedLinesContent += (insertSpace ? ' ' : '') + lineTextWithoutIndent;\n                    if (insertSpace) {\n                        columnDeltaOffset = lineTextWithoutIndent.length + 1;\n                    }\n                    else {\n                        columnDeltaOffset = lineTextWithoutIndent.length;\n                    }\n                }\n                else {\n                    columnDeltaOffset = 0;\n                }\n            }\n            const deleteSelection = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n            if (!deleteSelection.isEmpty()) {\n                let resultSelection;\n                if (selection.isEmpty()) {\n                    edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                    resultSelection = new Selection(deleteSelection.startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1, startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1);\n                }\n                else {\n                    if (selection.startLineNumber === selection.endLineNumber) {\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.endLineNumber - lineOffset, selection.endColumn);\n                    }\n                    else {\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.startLineNumber - lineOffset, trimmedLinesContent.length - selectionEndPositionOffset);\n                    }\n                }\n                if (Range.intersectRanges(deleteSelection, primaryCursor) !== null) {\n                    endPrimaryCursor = resultSelection;\n                }\n                else {\n                    endCursorState.push(resultSelection);\n                }\n            }\n            lineOffset += deleteSelection.endLineNumber - deleteSelection.startLineNumber;\n        }\n        endCursorState.unshift(endPrimaryCursor);\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class TransposeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.transpose',\n            label: nls.localize('editor.transpose', \"Transpose characters around the cursor\"),\n            alias: 'Transpose characters around the cursor',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const commands = [];\n        for (let i = 0, len = selections.length; i < len; i++) {\n            const selection = selections[i];\n            if (!selection.isEmpty()) {\n                continue;\n            }\n            const cursor = selection.getStartPosition();\n            const maxColumn = model.getLineMaxColumn(cursor.lineNumber);\n            if (cursor.column >= maxColumn) {\n                if (cursor.lineNumber === model.getLineCount()) {\n                    continue;\n                }\n                // The cursor is at the end of current line and current line is not empty\n                // then we transpose the character before the cursor and the line break if there is any following line.\n                const deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1);\n                const chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n                commands.push(new ReplaceCommand(new Selection(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1), chars));\n            }\n            else {\n                const deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber, cursor.column + 1);\n                const chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n                commands.push(new ReplaceCommandThatPreservesSelection(deleteSelection, chars, new Selection(cursor.lineNumber, cursor.column + 1, cursor.lineNumber, cursor.column + 1)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nexport class AbstractCaseAction extends EditorAction {\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const wordSeparators = editor.getOption(124 /* EditorOption.wordSeparators */);\n        const textEdits = [];\n        for (const selection of selections) {\n            if (selection.isEmpty()) {\n                const cursor = selection.getStartPosition();\n                const word = editor.getConfiguredWordAtPosition(cursor);\n                if (!word) {\n                    continue;\n                }\n                const wordRange = new Range(cursor.lineNumber, word.startColumn, cursor.lineNumber, word.endColumn);\n                const text = model.getValueInRange(wordRange);\n                textEdits.push(EditOperation.replace(wordRange, this._modifyText(text, wordSeparators)));\n            }\n            else {\n                const text = model.getValueInRange(selection);\n                textEdits.push(EditOperation.replace(selection, this._modifyText(text, wordSeparators)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, textEdits);\n        editor.pushUndoStop();\n    }\n}\nexport class UpperCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToUppercase',\n            label: nls.localize('editor.transformToUppercase', \"Transform to Uppercase\"),\n            alias: 'Transform to Uppercase',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        return text.toLocaleUpperCase();\n    }\n}\nexport class LowerCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToLowercase',\n            label: nls.localize('editor.transformToLowercase', \"Transform to Lowercase\"),\n            alias: 'Transform to Lowercase',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        return text.toLocaleLowerCase();\n    }\n}\nclass BackwardsCompatibleRegExp {\n    constructor(_pattern, _flags) {\n        this._pattern = _pattern;\n        this._flags = _flags;\n        this._actual = null;\n        this._evaluated = false;\n    }\n    get() {\n        if (!this._evaluated) {\n            this._evaluated = true;\n            try {\n                this._actual = new RegExp(this._pattern, this._flags);\n            }\n            catch (err) {\n                // this browser does not support this regular expression\n            }\n        }\n        return this._actual;\n    }\n    isSupported() {\n        return (this.get() !== null);\n    }\n}\nclass TitleCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToTitlecase',\n            label: nls.localize('editor.transformToTitlecase', \"Transform to Title Case\"),\n            alias: 'Transform to Title Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const titleBoundary = TitleCaseAction.titleBoundary.get();\n        if (!titleBoundary) {\n            // cannot support this\n            return text;\n        }\n        return text\n            .toLocaleLowerCase()\n            .replace(titleBoundary, (b) => b.toLocaleUpperCase());\n    }\n}\nTitleCaseAction.titleBoundary = new BackwardsCompatibleRegExp('(^|[^\\\\p{L}\\\\p{N}\\']|((^|\\\\P{L})\\'))\\\\p{L}', 'gmu');\nexport { TitleCaseAction };\nclass SnakeCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToSnakecase',\n            label: nls.localize('editor.transformToSnakecase', \"Transform to Snake Case\"),\n            alias: 'Transform to Snake Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const caseBoundary = SnakeCaseAction.caseBoundary.get();\n        const singleLetters = SnakeCaseAction.singleLetters.get();\n        if (!caseBoundary || !singleLetters) {\n            // cannot support this\n            return text;\n        }\n        return (text\n            .replace(caseBoundary, '$1_$2')\n            .replace(singleLetters, '$1_$2$3')\n            .toLocaleLowerCase());\n    }\n}\nSnakeCaseAction.caseBoundary = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\nSnakeCaseAction.singleLetters = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu})(\\\\p{Ll})', 'gmu');\nexport { SnakeCaseAction };\nclass CamelCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToCamelcase',\n            label: nls.localize('editor.transformToCamelcase', \"Transform to Camel Case\"),\n            alias: 'Transform to Camel Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const wordBoundary = CamelCaseAction.wordBoundary.get();\n        if (!wordBoundary) {\n            // cannot support this\n            return text;\n        }\n        const words = text.split(wordBoundary);\n        const firstWord = words.shift();\n        return firstWord + words.map((word) => word.substring(0, 1).toLocaleUpperCase() + word.substring(1))\n            .join('');\n    }\n}\nCamelCaseAction.wordBoundary = new BackwardsCompatibleRegExp('[_\\\\s-]', 'gm');\nexport { CamelCaseAction };\nclass KebabCaseAction extends AbstractCaseAction {\n    static isSupported() {\n        const areAllRegexpsSupported = [\n            this.caseBoundary,\n            this.singleLetters,\n            this.underscoreBoundary,\n        ].every((regexp) => regexp.isSupported());\n        return areAllRegexpsSupported;\n    }\n    constructor() {\n        super({\n            id: 'editor.action.transformToKebabcase',\n            label: nls.localize('editor.transformToKebabcase', 'Transform to Kebab Case'),\n            alias: 'Transform to Kebab Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, _) {\n        const caseBoundary = KebabCaseAction.caseBoundary.get();\n        const singleLetters = KebabCaseAction.singleLetters.get();\n        const underscoreBoundary = KebabCaseAction.underscoreBoundary.get();\n        if (!caseBoundary || !singleLetters || !underscoreBoundary) {\n            // one or more regexps aren't supported\n            return text;\n        }\n        return text\n            .replace(underscoreBoundary, '$1-$3')\n            .replace(caseBoundary, '$1-$2')\n            .replace(singleLetters, '$1-$2')\n            .toLocaleLowerCase();\n    }\n}\nKebabCaseAction.caseBoundary = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\nKebabCaseAction.singleLetters = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu}\\\\p{Ll})', 'gmu');\nKebabCaseAction.underscoreBoundary = new BackwardsCompatibleRegExp('(\\\\S)(_)(\\\\S)', 'gm');\nexport { KebabCaseAction };\nregisterEditorAction(CopyLinesUpAction);\nregisterEditorAction(CopyLinesDownAction);\nregisterEditorAction(DuplicateSelectionAction);\nregisterEditorAction(MoveLinesUpAction);\nregisterEditorAction(MoveLinesDownAction);\nregisterEditorAction(SortLinesAscendingAction);\nregisterEditorAction(SortLinesDescendingAction);\nregisterEditorAction(DeleteDuplicateLinesAction);\nregisterEditorAction(TrimTrailingWhitespaceAction);\nregisterEditorAction(DeleteLinesAction);\nregisterEditorAction(IndentLinesAction);\nregisterEditorAction(OutdentLinesAction);\nregisterEditorAction(InsertLineBeforeAction);\nregisterEditorAction(InsertLineAfterAction);\nregisterEditorAction(DeleteAllLeftAction);\nregisterEditorAction(DeleteAllRightAction);\nregisterEditorAction(JoinLinesAction);\nregisterEditorAction(TransposeAction);\nregisterEditorAction(UpperCaseAction);\nregisterEditorAction(LowerCaseAction);\nif (SnakeCaseAction.caseBoundary.isSupported() && SnakeCaseAction.singleLetters.isSupported()) {\n    registerEditorAction(SnakeCaseAction);\n}\nif (CamelCaseAction.wordBoundary.isSupported()) {\n    registerEditorAction(CamelCaseAction);\n}\nif (TitleCaseAction.titleBoundary.isSupported()) {\n    registerEditorAction(TitleCaseAction);\n}\nif (KebabCaseAction.isSupported()) {\n    registerEditorAction(KebabCaseAction);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, Delayer, first } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { isCancellationError, onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution, registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport './linkedEditing.css';\nexport const CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE = new RawContextKey('LinkedEditingInputVisible', false);\nconst DECORATION_CLASS_NAME = 'linked-editing-decoration';\nlet LinkedEditingContribution = class LinkedEditingContribution extends Disposable {\n    static get(editor) {\n        return editor.getContribution(LinkedEditingContribution.ID);\n    }\n    constructor(editor, contextKeyService, languageFeaturesService, languageConfigurationService, languageFeatureDebounceService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        this._syncRangesToken = 0;\n        this._localToDispose = this._register(new DisposableStore());\n        this._editor = editor;\n        this._providers = languageFeaturesService.linkedEditingRangeProvider;\n        this._enabled = false;\n        this._visibleContextKey = CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\n        this._debounceInformation = languageFeatureDebounceService.for(this._providers, 'Linked Editing', { min: 200 });\n        this._currentDecorations = this._editor.createDecorationsCollection();\n        this._languageWordPattern = null;\n        this._currentWordPattern = null;\n        this._ignoreChangeEvent = false;\n        this._localToDispose = this._register(new DisposableStore());\n        this._rangeUpdateTriggerPromise = null;\n        this._rangeSyncTriggerPromise = null;\n        this._currentRequest = null;\n        this._currentRequestPosition = null;\n        this._currentRequestModelVersion = null;\n        this._register(this._editor.onDidChangeModel(() => this.reinitialize(true)));\n        this._register(this._editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(66 /* EditorOption.linkedEditing */) || e.hasChanged(87 /* EditorOption.renameOnType */)) {\n                this.reinitialize(false);\n            }\n        }));\n        this._register(this._providers.onDidChange(() => this.reinitialize(false)));\n        this._register(this._editor.onDidChangeModelLanguage(() => this.reinitialize(true)));\n        this.reinitialize(true);\n    }\n    reinitialize(forceRefresh) {\n        const model = this._editor.getModel();\n        const isEnabled = model !== null && (this._editor.getOption(66 /* EditorOption.linkedEditing */) || this._editor.getOption(87 /* EditorOption.renameOnType */)) && this._providers.has(model);\n        if (isEnabled === this._enabled && !forceRefresh) {\n            return;\n        }\n        this._enabled = isEnabled;\n        this.clearRanges();\n        this._localToDispose.clear();\n        if (!isEnabled || model === null) {\n            return;\n        }\n        this._localToDispose.add(Event.runAndSubscribe(model.onDidChangeLanguageConfiguration, () => {\n            this._languageWordPattern = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n        }));\n        const rangeUpdateScheduler = new Delayer(this._debounceInformation.get(model));\n        const triggerRangeUpdate = () => {\n            var _a;\n            this._rangeUpdateTriggerPromise = rangeUpdateScheduler.trigger(() => this.updateRanges(), (_a = this._debounceDuration) !== null && _a !== void 0 ? _a : this._debounceInformation.get(model));\n        };\n        const rangeSyncScheduler = new Delayer(0);\n        const triggerRangeSync = (token) => {\n            this._rangeSyncTriggerPromise = rangeSyncScheduler.trigger(() => this._syncRanges(token));\n        };\n        this._localToDispose.add(this._editor.onDidChangeCursorPosition(() => {\n            triggerRangeUpdate();\n        }));\n        this._localToDispose.add(this._editor.onDidChangeModelContent((e) => {\n            if (!this._ignoreChangeEvent) {\n                if (this._currentDecorations.length > 0) {\n                    const referenceRange = this._currentDecorations.getRange(0);\n                    if (referenceRange && e.changes.every(c => referenceRange.intersectRanges(c.range))) {\n                        triggerRangeSync(this._syncRangesToken);\n                        return;\n                    }\n                }\n            }\n            triggerRangeUpdate();\n        }));\n        this._localToDispose.add({\n            dispose: () => {\n                rangeUpdateScheduler.dispose();\n                rangeSyncScheduler.dispose();\n            }\n        });\n        this.updateRanges();\n    }\n    _syncRanges(token) {\n        // dalayed invocation, make sure we're still on\n        if (!this._editor.hasModel() || token !== this._syncRangesToken || this._currentDecorations.length === 0) {\n            // nothing to do\n            return;\n        }\n        const model = this._editor.getModel();\n        const referenceRange = this._currentDecorations.getRange(0);\n        if (!referenceRange || referenceRange.startLineNumber !== referenceRange.endLineNumber) {\n            return this.clearRanges();\n        }\n        const referenceValue = model.getValueInRange(referenceRange);\n        if (this._currentWordPattern) {\n            const match = referenceValue.match(this._currentWordPattern);\n            const matchLength = match ? match[0].length : 0;\n            if (matchLength !== referenceValue.length) {\n                return this.clearRanges();\n            }\n        }\n        const edits = [];\n        for (let i = 1, len = this._currentDecorations.length; i < len; i++) {\n            const mirrorRange = this._currentDecorations.getRange(i);\n            if (!mirrorRange) {\n                continue;\n            }\n            if (mirrorRange.startLineNumber !== mirrorRange.endLineNumber) {\n                edits.push({\n                    range: mirrorRange,\n                    text: referenceValue\n                });\n            }\n            else {\n                let oldValue = model.getValueInRange(mirrorRange);\n                let newValue = referenceValue;\n                let rangeStartColumn = mirrorRange.startColumn;\n                let rangeEndColumn = mirrorRange.endColumn;\n                const commonPrefixLength = strings.commonPrefixLength(oldValue, newValue);\n                rangeStartColumn += commonPrefixLength;\n                oldValue = oldValue.substr(commonPrefixLength);\n                newValue = newValue.substr(commonPrefixLength);\n                const commonSuffixLength = strings.commonSuffixLength(oldValue, newValue);\n                rangeEndColumn -= commonSuffixLength;\n                oldValue = oldValue.substr(0, oldValue.length - commonSuffixLength);\n                newValue = newValue.substr(0, newValue.length - commonSuffixLength);\n                if (rangeStartColumn !== rangeEndColumn || newValue.length !== 0) {\n                    edits.push({\n                        range: new Range(mirrorRange.startLineNumber, rangeStartColumn, mirrorRange.endLineNumber, rangeEndColumn),\n                        text: newValue\n                    });\n                }\n            }\n        }\n        if (edits.length === 0) {\n            return;\n        }\n        try {\n            this._editor.popUndoStop();\n            this._ignoreChangeEvent = true;\n            const prevEditOperationType = this._editor._getViewModel().getPrevEditOperationType();\n            this._editor.executeEdits('linkedEditing', edits);\n            this._editor._getViewModel().setPrevEditOperationType(prevEditOperationType);\n        }\n        finally {\n            this._ignoreChangeEvent = false;\n        }\n    }\n    dispose() {\n        this.clearRanges();\n        super.dispose();\n    }\n    clearRanges() {\n        this._visibleContextKey.set(false);\n        this._currentDecorations.clear();\n        if (this._currentRequest) {\n            this._currentRequest.cancel();\n            this._currentRequest = null;\n            this._currentRequestPosition = null;\n        }\n    }\n    updateRanges(force = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._editor.hasModel()) {\n                this.clearRanges();\n                return;\n            }\n            const position = this._editor.getPosition();\n            if (!this._enabled && !force || this._editor.getSelections().length > 1) {\n                // disabled or multicursor\n                this.clearRanges();\n                return;\n            }\n            const model = this._editor.getModel();\n            const modelVersionId = model.getVersionId();\n            if (this._currentRequestPosition && this._currentRequestModelVersion === modelVersionId) {\n                if (position.equals(this._currentRequestPosition)) {\n                    return; // same position\n                }\n                if (this._currentDecorations.length > 0) {\n                    const range = this._currentDecorations.getRange(0);\n                    if (range && range.containsPosition(position)) {\n                        return; // just moving inside the existing primary range\n                    }\n                }\n            }\n            this._currentRequestPosition = position;\n            this._currentRequestModelVersion = modelVersionId;\n            const request = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const sw = new StopWatch(false);\n                    const response = yield getLinkedEditingRanges(this._providers, model, position, token);\n                    this._debounceInformation.update(model, sw.elapsed());\n                    if (request !== this._currentRequest) {\n                        return;\n                    }\n                    this._currentRequest = null;\n                    if (modelVersionId !== model.getVersionId()) {\n                        return;\n                    }\n                    let ranges = [];\n                    if (response === null || response === void 0 ? void 0 : response.ranges) {\n                        ranges = response.ranges;\n                    }\n                    this._currentWordPattern = (response === null || response === void 0 ? void 0 : response.wordPattern) || this._languageWordPattern;\n                    let foundReferenceRange = false;\n                    for (let i = 0, len = ranges.length; i < len; i++) {\n                        if (Range.containsPosition(ranges[i], position)) {\n                            foundReferenceRange = true;\n                            if (i !== 0) {\n                                const referenceRange = ranges[i];\n                                ranges.splice(i, 1);\n                                ranges.unshift(referenceRange);\n                            }\n                            break;\n                        }\n                    }\n                    if (!foundReferenceRange) {\n                        // Cannot do linked editing if the ranges are not where the cursor is...\n                        this.clearRanges();\n                        return;\n                    }\n                    const decorations = ranges.map(range => ({ range: range, options: LinkedEditingContribution.DECORATION }));\n                    this._visibleContextKey.set(true);\n                    this._currentDecorations.set(decorations);\n                    this._syncRangesToken++; // cancel any pending syncRanges call\n                }\n                catch (err) {\n                    if (!isCancellationError(err)) {\n                        onUnexpectedError(err);\n                    }\n                    if (this._currentRequest === request || !this._currentRequest) {\n                        // stop if we are still the latest request\n                        this.clearRanges();\n                    }\n                }\n            }));\n            this._currentRequest = request;\n            return request;\n        });\n    }\n};\nLinkedEditingContribution.ID = 'editor.contrib.linkedEditing';\nLinkedEditingContribution.DECORATION = ModelDecorationOptions.register({\n    description: 'linked-editing',\n    stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n    className: DECORATION_CLASS_NAME\n});\nLinkedEditingContribution = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, ILanguageFeaturesService),\n    __param(3, ILanguageConfigurationService),\n    __param(4, ILanguageFeatureDebounceService)\n], LinkedEditingContribution);\nexport { LinkedEditingContribution };\nexport class LinkedEditingAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.linkedEditing',\n            label: nls.localize('linkedEditing.label', \"Start Linked Editing\"),\n            alias: 'Start Linked Editing',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 60 /* KeyCode.F2 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    runCommand(accessor, args) {\n        const editorService = accessor.get(ICodeEditorService);\n        const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\n        if (URI.isUri(uri) && Position.isIPosition(pos)) {\n            return editorService.openCodeEditor({ resource: uri }, editorService.getActiveCodeEditor()).then(editor => {\n                if (!editor) {\n                    return;\n                }\n                editor.setPosition(pos);\n                editor.invokeWithinContext(accessor => {\n                    this.reportTelemetry(accessor, editor);\n                    return this.run(accessor, editor);\n                });\n            }, onUnexpectedError);\n        }\n        return super.runCommand(accessor, args);\n    }\n    run(_accessor, editor) {\n        const controller = LinkedEditingContribution.get(editor);\n        if (controller) {\n            return Promise.resolve(controller.updateRanges(true));\n        }\n        return Promise.resolve();\n    }\n}\nconst LinkedEditingCommand = EditorCommand.bindToContribution(LinkedEditingContribution.get);\nregisterEditorCommand(new LinkedEditingCommand({\n    id: 'cancelLinkedEditingInput',\n    precondition: CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE,\n    handler: x => x.clearRanges(),\n    kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nfunction getLinkedEditingRanges(providers, model, position, token) {\n    const orderedByScore = providers.ordered(model);\n    // in order of score ask the linked editing range provider\n    // until someone response with a good result\n    // (good = not null)\n    return first(orderedByScore.map(provider => () => __awaiter(this, void 0, void 0, function* () {\n        try {\n            return yield provider.provideLinkedEditingRanges(model, position, token);\n        }\n        catch (e) {\n            onUnexpectedExternalError(e);\n            return undefined;\n        }\n    })), result => !!result && arrays.isNonEmptyArray(result === null || result === void 0 ? void 0 : result.ranges));\n}\nexport const editorLinkedEditingBackground = registerColor('editor.linkedEditingBackground', { dark: Color.fromHex('#f00').transparent(0.3), light: Color.fromHex('#f00').transparent(0.3), hcDark: Color.fromHex('#f00').transparent(0.3), hcLight: Color.white }, nls.localize('editorLinkedEditingBackground', 'Background color when the editor auto renames on type.'));\nregisterModelAndPositionCommand('_executeLinkedEditingProvider', (_accessor, model, position) => {\n    const { linkedEditingRangeProvider } = _accessor.get(ILanguageFeaturesService);\n    return getLinkedEditingRanges(linkedEditingRangeProvider, model, position, CancellationToken.None);\n});\nregisterEditorContribution(LinkedEditingContribution.ID, LinkedEditingContribution, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nregisterEditorAction(LinkedEditingAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore, isDisposable } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class Link {\n    constructor(link, provider) {\n        this._link = link;\n        this._provider = provider;\n    }\n    toJSON() {\n        return {\n            range: this.range,\n            url: this.url,\n            tooltip: this.tooltip\n        };\n    }\n    get range() {\n        return this._link.range;\n    }\n    get url() {\n        return this._link.url;\n    }\n    get tooltip() {\n        return this._link.tooltip;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._link.url) {\n                return this._link.url;\n            }\n            if (typeof this._provider.resolveLink === 'function') {\n                return Promise.resolve(this._provider.resolveLink(this._link, token)).then(value => {\n                    this._link = value || this._link;\n                    if (this._link.url) {\n                        // recurse\n                        return this.resolve(token);\n                    }\n                    return Promise.reject(new Error('missing'));\n                });\n            }\n            return Promise.reject(new Error('missing'));\n        });\n    }\n}\nexport class LinksList {\n    constructor(tuples) {\n        this._disposables = new DisposableStore();\n        let links = [];\n        for (const [list, provider] of tuples) {\n            // merge all links\n            const newLinks = list.links.map(link => new Link(link, provider));\n            links = LinksList._union(links, newLinks);\n            // register disposables\n            if (isDisposable(list)) {\n                this._disposables.add(list);\n            }\n        }\n        this.links = links;\n    }\n    dispose() {\n        this._disposables.dispose();\n        this.links.length = 0;\n    }\n    static _union(oldLinks, newLinks) {\n        // reunite oldLinks with newLinks and remove duplicates\n        const result = [];\n        let oldIndex;\n        let oldLen;\n        let newIndex;\n        let newLen;\n        for (oldIndex = 0, newIndex = 0, oldLen = oldLinks.length, newLen = newLinks.length; oldIndex < oldLen && newIndex < newLen;) {\n            const oldLink = oldLinks[oldIndex];\n            const newLink = newLinks[newIndex];\n            if (Range.areIntersectingOrTouching(oldLink.range, newLink.range)) {\n                // Remove the oldLink\n                oldIndex++;\n                continue;\n            }\n            const comparisonResult = Range.compareRangesUsingStarts(oldLink.range, newLink.range);\n            if (comparisonResult < 0) {\n                // oldLink is before\n                result.push(oldLink);\n                oldIndex++;\n            }\n            else {\n                // newLink is before\n                result.push(newLink);\n                newIndex++;\n            }\n        }\n        for (; oldIndex < oldLen; oldIndex++) {\n            result.push(oldLinks[oldIndex]);\n        }\n        for (; newIndex < newLen; newIndex++) {\n            result.push(newLinks[newIndex]);\n        }\n        return result;\n    }\n}\nexport function getLinks(providers, model, token) {\n    const lists = [];\n    // ask all providers for links in parallel\n    const promises = providers.ordered(model).reverse().map((provider, i) => {\n        return Promise.resolve(provider.provideLinks(model, token)).then(result => {\n            if (result) {\n                lists[i] = [result, provider];\n            }\n        }, onUnexpectedExternalError);\n    });\n    return Promise.all(promises).then(() => {\n        const result = new LinksList(coalesce(lists));\n        if (!token.isCancellationRequested) {\n            return result;\n        }\n        result.dispose();\n        return new LinksList([]);\n    });\n}\nCommandsRegistry.registerCommand('_executeLinkProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    let [uri, resolveCount] = args;\n    assertType(uri instanceof URI);\n    if (typeof resolveCount !== 'number') {\n        resolveCount = 0;\n    }\n    const { linkProvider } = accessor.get(ILanguageFeaturesService);\n    const model = accessor.get(IModelService).getModel(uri);\n    if (!model) {\n        return [];\n    }\n    const list = yield getLinks(linkProvider, model, CancellationToken.None);\n    if (!list) {\n        return [];\n    }\n    // resolve links\n    for (let i = 0; i < Math.min(resolveCount, list.links.length); i++) {\n        yield list.links[i].resolve(CancellationToken.None);\n    }\n    const result = list.links.slice(0);\n    list.dispose();\n    return result;\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as resources from '../../../../base/common/resources.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport './links.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { getLinks } from './getLinks.js';\nimport * as nls from '../../../../nls.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nlet LinkDetector = class LinkDetector extends Disposable {\n    static get(editor) {\n        return editor.getContribution(LinkDetector.ID);\n    }\n    constructor(editor, openerService, notificationService, languageFeaturesService, languageFeatureDebounceService) {\n        super();\n        this.editor = editor;\n        this.openerService = openerService;\n        this.notificationService = notificationService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.providers = this.languageFeaturesService.linkProvider;\n        this.debounceInformation = languageFeatureDebounceService.for(this.providers, 'Links', { min: 1000, max: 4000 });\n        this.computeLinks = this._register(new RunOnceScheduler(() => this.computeLinksNow(), 1000));\n        this.computePromise = null;\n        this.activeLinksList = null;\n        this.currentOccurrences = {};\n        this.activeLinkDecorationId = null;\n        const clickLinkGesture = this._register(new ClickLinkGesture(editor));\n        this._register(clickLinkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent]) => {\n            this._onEditorMouseMove(mouseEvent, keyboardEvent);\n        }));\n        this._register(clickLinkGesture.onExecute((e) => {\n            this.onEditorMouseUp(e);\n        }));\n        this._register(clickLinkGesture.onCancel((e) => {\n            this.cleanUpActiveLinkDecoration();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!e.hasChanged(67 /* EditorOption.links */)) {\n                return;\n            }\n            // Remove any links (for the getting disabled case)\n            this.updateDecorations([]);\n            // Stop any computation (for the getting disabled case)\n            this.stop();\n            // Start computing (for the getting enabled case)\n            this.computeLinks.schedule(0);\n        }));\n        this._register(editor.onDidChangeModelContent((e) => {\n            if (!this.editor.hasModel()) {\n                return;\n            }\n            this.computeLinks.schedule(this.debounceInformation.get(this.editor.getModel()));\n        }));\n        this._register(editor.onDidChangeModel((e) => {\n            this.currentOccurrences = {};\n            this.activeLinkDecorationId = null;\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this._register(editor.onDidChangeModelLanguage((e) => {\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this._register(this.providers.onDidChange((e) => {\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this.computeLinks.schedule(0);\n    }\n    computeLinksNow() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.editor.hasModel() || !this.editor.getOption(67 /* EditorOption.links */)) {\n                return;\n            }\n            const model = this.editor.getModel();\n            if (!this.providers.has(model)) {\n                return;\n            }\n            if (this.activeLinksList) {\n                this.activeLinksList.dispose();\n                this.activeLinksList = null;\n            }\n            this.computePromise = createCancelablePromise(token => getLinks(this.providers, model, token));\n            try {\n                const sw = new StopWatch(false);\n                this.activeLinksList = yield this.computePromise;\n                this.debounceInformation.update(model, sw.elapsed());\n                if (model.isDisposed()) {\n                    return;\n                }\n                this.updateDecorations(this.activeLinksList.links);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                this.computePromise = null;\n            }\n        });\n    }\n    updateDecorations(links) {\n        const useMetaKey = (this.editor.getOption(74 /* EditorOption.multiCursorModifier */) === 'altKey');\n        const oldDecorations = [];\n        const keys = Object.keys(this.currentOccurrences);\n        for (const decorationId of keys) {\n            const occurence = this.currentOccurrences[decorationId];\n            oldDecorations.push(occurence.decorationId);\n        }\n        const newDecorations = [];\n        if (links) {\n            // Not sure why this is sometimes null\n            for (const link of links) {\n                newDecorations.push(LinkOccurrence.decoration(link, useMetaKey));\n            }\n        }\n        this.editor.changeDecorations((changeAccessor) => {\n            const decorations = changeAccessor.deltaDecorations(oldDecorations, newDecorations);\n            this.currentOccurrences = {};\n            this.activeLinkDecorationId = null;\n            for (let i = 0, len = decorations.length; i < len; i++) {\n                const occurence = new LinkOccurrence(links[i], decorations[i]);\n                this.currentOccurrences[occurence.decorationId] = occurence;\n            }\n        });\n    }\n    _onEditorMouseMove(mouseEvent, withKey) {\n        const useMetaKey = (this.editor.getOption(74 /* EditorOption.multiCursorModifier */) === 'altKey');\n        if (this.isEnabled(mouseEvent, withKey)) {\n            this.cleanUpActiveLinkDecoration(); // always remove previous link decoration as their can only be one\n            const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\n            if (occurrence) {\n                this.editor.changeDecorations((changeAccessor) => {\n                    occurrence.activate(changeAccessor, useMetaKey);\n                    this.activeLinkDecorationId = occurrence.decorationId;\n                });\n            }\n        }\n        else {\n            this.cleanUpActiveLinkDecoration();\n        }\n    }\n    cleanUpActiveLinkDecoration() {\n        const useMetaKey = (this.editor.getOption(74 /* EditorOption.multiCursorModifier */) === 'altKey');\n        if (this.activeLinkDecorationId) {\n            const occurrence = this.currentOccurrences[this.activeLinkDecorationId];\n            if (occurrence) {\n                this.editor.changeDecorations((changeAccessor) => {\n                    occurrence.deactivate(changeAccessor, useMetaKey);\n                });\n            }\n            this.activeLinkDecorationId = null;\n        }\n    }\n    onEditorMouseUp(mouseEvent) {\n        if (!this.isEnabled(mouseEvent)) {\n            return;\n        }\n        const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\n        if (!occurrence) {\n            return;\n        }\n        this.openLinkOccurrence(occurrence, mouseEvent.hasSideBySideModifier, true /* from user gesture */);\n    }\n    openLinkOccurrence(occurrence, openToSide, fromUserGesture = false) {\n        if (!this.openerService) {\n            return;\n        }\n        const { link } = occurrence;\n        link.resolve(CancellationToken.None).then(uri => {\n            // Support for relative file URIs of the shape file://./relativeFile.txt or file:///./relativeFile.txt\n            if (typeof uri === 'string' && this.editor.hasModel()) {\n                const modelUri = this.editor.getModel().uri;\n                if (modelUri.scheme === Schemas.file && uri.startsWith(`${Schemas.file}:`)) {\n                    const parsedUri = URI.parse(uri);\n                    if (parsedUri.scheme === Schemas.file) {\n                        const fsPath = resources.originalFSPath(parsedUri);\n                        let relativePath = null;\n                        if (fsPath.startsWith('/./')) {\n                            relativePath = `.${fsPath.substr(1)}`;\n                        }\n                        else if (fsPath.startsWith('//./')) {\n                            relativePath = `.${fsPath.substr(2)}`;\n                        }\n                        if (relativePath) {\n                            uri = resources.joinPath(modelUri, relativePath);\n                        }\n                    }\n                }\n            }\n            return this.openerService.open(uri, { openToSide, fromUserGesture, allowContributedOpeners: true, allowCommands: true, fromWorkspace: true });\n        }, err => {\n            const messageOrError = err instanceof Error ? err.message : err;\n            // different error cases\n            if (messageOrError === 'invalid') {\n                this.notificationService.warn(nls.localize('invalid.url', 'Failed to open this link because it is not well-formed: {0}', link.url.toString()));\n            }\n            else if (messageOrError === 'missing') {\n                this.notificationService.warn(nls.localize('missing.url', 'Failed to open this link because its target is missing.'));\n            }\n            else {\n                onUnexpectedError(err);\n            }\n        });\n    }\n    getLinkOccurrence(position) {\n        if (!this.editor.hasModel() || !position) {\n            return null;\n        }\n        const decorations = this.editor.getModel().getDecorationsInRange({\n            startLineNumber: position.lineNumber,\n            startColumn: position.column,\n            endLineNumber: position.lineNumber,\n            endColumn: position.column\n        }, 0, true);\n        for (const decoration of decorations) {\n            const currentOccurrence = this.currentOccurrences[decoration.id];\n            if (currentOccurrence) {\n                return currentOccurrence;\n            }\n        }\n        return null;\n    }\n    isEnabled(mouseEvent, withKey) {\n        return Boolean((mouseEvent.target.type === 6 /* MouseTargetType.CONTENT_TEXT */)\n            && (mouseEvent.hasTriggerModifier || (withKey && withKey.keyCodeIsTriggerKey)));\n    }\n    stop() {\n        var _a;\n        this.computeLinks.cancel();\n        if (this.activeLinksList) {\n            (_a = this.activeLinksList) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.activeLinksList = null;\n        }\n        if (this.computePromise) {\n            this.computePromise.cancel();\n            this.computePromise = null;\n        }\n    }\n    dispose() {\n        super.dispose();\n        this.stop();\n    }\n};\nLinkDetector.ID = 'editor.linkDetector';\nLinkDetector = __decorate([\n    __param(1, IOpenerService),\n    __param(2, INotificationService),\n    __param(3, ILanguageFeaturesService),\n    __param(4, ILanguageFeatureDebounceService)\n], LinkDetector);\nexport { LinkDetector };\nconst decoration = {\n    general: ModelDecorationOptions.register({\n        description: 'detected-link',\n        stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n        collapseOnReplaceEdit: true,\n        inlineClassName: 'detected-link'\n    }),\n    active: ModelDecorationOptions.register({\n        description: 'detected-link-active',\n        stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n        collapseOnReplaceEdit: true,\n        inlineClassName: 'detected-link-active'\n    })\n};\nclass LinkOccurrence {\n    static decoration(link, useMetaKey) {\n        return {\n            range: link.range,\n            options: LinkOccurrence._getOptions(link, useMetaKey, false)\n        };\n    }\n    static _getOptions(link, useMetaKey, isActive) {\n        const options = Object.assign({}, (isActive ? decoration.active : decoration.general));\n        options.hoverMessage = getHoverMessage(link, useMetaKey);\n        return options;\n    }\n    constructor(link, decorationId) {\n        this.link = link;\n        this.decorationId = decorationId;\n    }\n    activate(changeAccessor, useMetaKey) {\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, true));\n    }\n    deactivate(changeAccessor, useMetaKey) {\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, false));\n    }\n}\nfunction getHoverMessage(link, useMetaKey) {\n    const executeCmd = link.url && /^command:/i.test(link.url.toString());\n    const label = link.tooltip\n        ? link.tooltip\n        : executeCmd\n            ? nls.localize('links.navigate.executeCmd', 'Execute command')\n            : nls.localize('links.navigate.follow', 'Follow link');\n    const kb = useMetaKey\n        ? platform.isMacintosh\n            ? nls.localize('links.navigate.kb.meta.mac', \"cmd + click\")\n            : nls.localize('links.navigate.kb.meta', \"ctrl + click\")\n        : platform.isMacintosh\n            ? nls.localize('links.navigate.kb.alt.mac', \"option + click\")\n            : nls.localize('links.navigate.kb.alt', \"alt + click\");\n    if (link.url) {\n        let nativeLabel = '';\n        if (/^command:/i.test(link.url.toString())) {\n            // Don't show complete command arguments in the native tooltip\n            const match = link.url.toString().match(/^command:([^?#]+)/);\n            if (match) {\n                const commandId = match[1];\n                nativeLabel = nls.localize('tooltip.explanation', \"Execute command {0}\", commandId);\n            }\n        }\n        const hoverMessage = new MarkdownString('', true)\n            .appendLink(link.url.toString(true).replace(/ /g, '%20'), label, nativeLabel)\n            .appendMarkdown(` (${kb})`);\n        return hoverMessage;\n    }\n    else {\n        return new MarkdownString().appendText(`${label} (${kb})`);\n    }\n}\nclass OpenLinkAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.openLink',\n            label: nls.localize('label', \"Open Link\"),\n            alias: 'Open Link',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const linkDetector = LinkDetector.get(editor);\n        if (!linkDetector) {\n            return;\n        }\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections();\n        for (const sel of selections) {\n            const link = linkDetector.getLinkOccurrence(sel.getEndPosition());\n            if (link) {\n                linkDetector.openLinkOccurrence(link, false);\n            }\n        }\n    }\n}\nregisterEditorContribution(LinkDetector.ID, LinkDetector, 1 /* EditorContributionInstantiation.AfterFirstRender */);\nregisterEditorAction(OpenLinkAction);\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","InlayHintAnchor","_createClass","range","direction","_classCallCheck","this","InlayHintItem","hint","anchor","provider","_isResolved","key","delta","_currentResolve","token","_regeneratorRuntime","mark","_callee","_this","wrap","_context","prev","resolveInlayHint","abrupt","isCancellationRequested","_doResolve","finally","undefined","stop","_a","_b","_callee2","newHint","_context2","sent","tooltip","label","t0","onUnexpectedExternalError","InlayHintsFragments","ranges","data","model","_disposables","DisposableStore","Set","_step","items","_iterator","_createForOfIteratorHelper","s","n","_step$value","_slicedToArray","list","add","_step2","_iterator2","hints","position","validatePosition","wordRange","_getRangeAtPosition","getStartPosition","isBefore","Range","fromPositions","getEndPosition","push","err","f","sort","a","b","Position","compare","dispose","registry","_callee4","promises","_this2","_context4","ordered","reverse","map","_callee3","_context3","provideInlayHints","length","all","flat","isDisposed","CancellationError","line","lineNumber","word","getWordAtPosition","startColumn","endColumn","tokenization","tokenizeIfCheap","tokens","getLineTokens","offset","column","idx","findTokenIndexAtOffset","start","getStartOffset","end","getEndOffset","getCount","__decorate","decorators","target","desc","d","c","arguments","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","InlayHintsCache","_entries","LRUCache","_key","get","set","concat","uri","toString","getVersionId","IInlayHintsCache","createDecorator","registerSingleton","RenderedInlayHintLabelPart","item","index","ActiveInlayHintInfo","part","hasTriggerModifier","InlayHintsController","_editor","_languageFeaturesService","_featureDebounce","_inlayHintsCache","_commandService","_notificationService","_instaService","_sessionDisposables","_decorationsMetadata","Map","_ruleFactory","DynamicCssRules","_activeRenderMode","_debounceInfo","for","inlayHintsProvider","min","onDidChange","_update","onDidChangeModel","onDidChangeModelLanguage","onDidChangeConfiguration","hasChanged","_removeAllDecorations","clear","options","getOption","enabled","getModel","has","cts","cached","_updateHintsDecorators","getFullModelRange","toDisposable","_cacheHintsForFastRestore","defaultMode","altMode","watchedProviders","scheduler","RunOnceScheduler","t1","listener","myToken","inlayHints","Date","now","CancellationTokenSource","onWillDispose","cancel","create","_getHintsRanges","delay","update","onDidChangeInlayHints","isScheduled","schedule","onUnexpectedError","finish","onDidScrollChange","scrollTopChanged","onDidChangeModelContent","Math","max","ModifierKeyEmitter","getInstance","event","hasModel","newRenderMode","altKey","ctrlKey","shiftKey","metaKey","copies","_copyInlayHintsWithCurrentAnchor","_installDblClickGesture","_installLinkGesture","_installContextMenu","_this3","store","gesture","ClickLinkGesture","sessionStore","onMouseMoveOrRelevantKeyDown","mouseEvent","labelPart","_getInlayHintLabelPart","_activeInlayHintPart","command","location","getLineMaxColumn","lineHints","_getInlineHintsForRange","onCancel","onExecute","invokeFunction","goToDefinitionWithLocation","languages","is","_invokeCommand","values","containsRange","Array","from","updateInlayHints","_this4","onMouseUp","edits","detail","preventDefault","CancellationToken","None","isNonEmptyArray","textEdits","edit","EditOperation","replace","lift","text","executeEdits","_this5","onContextMenu","HTMLElement","showGoToContextMenu","type","injectedText","ModelDecorationInjectedTextOptions","attachedData","_callee5","_this$_commandService","_context5","executeCommand","id","_toConsumableArray","notify","severity","Severity","Error","source","displayName","message","_step3","_iterator3","_step3$value","obj","getDecorationRange","copy","with","_step4","visibleRanges","getVisibleRangesPlusViewportAboveBelow","_iterator4","compareRangesUsingStarts","extendedRange","validateRange","startLineNumber","endLineNumber","areIntersectingOrTouching","plusRange","_this6","newDecorationsData","addInjectedText","ref","content","cursorStops","opts","inlineClassNameAffectsLetterSpacing","inlineClassName","className","classNameRef","decoration","_defineProperty","description","showIfCollapsed","isEmpty","collapseOnReplaceEdit","stickiness","addInjectedWhitespace","isLast","marginRule","createClassNameRef","width","fontSize","display","InjectedTextCursorStops","Right","_this$_getLayoutInfo","_getLayoutInfo","fontFamily","padding","isUniform","fontFamilyVar","getContainerDomNode","style","setProperty","_step5","_iterator5","paddingLeft","parts","isFirst","cssProperties","EDITOR_FONT_DEFAULTS","verticalAlign","cursor","_fillInColors","textDecoration","color","themeColorFromId","colors","borderRadius","fixSpace","paddingRight","_MAX_DECORATORS","_step6","decorationIdsToReplace","_iterator6","_step7","_iterator7","getDecorationsInRange","metadata","delete","scrollState","StableEditorScrollState","capture","changeDecorations","accessor","newDecorationIds","deltaDecorations","restore","props","kind","Parameter","backgroundColor","Type","editorFontSize","editorFontFamily","removeDecorations","keys","_step8","_iterator8","editor","getContribution","ID","str","ILanguageFeaturesService","ILanguageFeatureDebounceService","ICommandService","INotificationService","IInstantiationService","CommandsRegistry","registerCommand","_len","args","_key2","_callee6","_accessor$get","_context6","assertType","URI","isUri","isIRange","ITextModelService","createModelReference","object","textEditorModel","setTimeout","__asyncValues","o","Symbol","asyncIterator","TypeError","m","call","__values","iterator","verb","v","settle","InlayHintsHoverAnchor","_HoverForeignElementA","_inherits","_super","_createSuper","owner","initialMousePosX","initialMousePosY","HoverForeignElementAnchor","InlayHintsHover","_MarkdownHoverPartici","_super2","languageService","openerService","configurationService","_resolverService","languageFeaturesService","hoverOrdinal","posx","posy","_lineDecorations","AsyncIterableObject","executor","e_1","_c","itemTooltip","partTooltip","linkHint","useMetaKey","kb","iterable","_d","iterable_1","iterable_1_1","MarkdownString","appendText","emitOne","MarkdownHover","localize","platform","scheme","Schemas","path","query","encodeURIComponent","JSON","stringify","title","isTrusted","_resolveInlayHintLabelPartHover","error","return","EMPTY","_part$part$location","hoverProvider","getHover","filter","isEmptyMarkdownString","hover","contents","ordinal","MarkdownHoverParticipant","ILanguageService","IOpenerService","IConfigurationService","registerEditorContribution","HoverParticipantRegistry","register","resolverService","contextMenuService","commandService","instaService","notificationService","menuActions","_loop","useShadowDOM","IContextMenuService","MenuRegistry","getMenuItems","MenuId","EditorContext","isIMenuItem","SymbolNavigationAction","delegate","Action","MenuItemAction","renderShortTitle","run","bind","SymbolNavigationAnchor","delegateYield","Separator","showContextMenu","domForShadowRoot","getDomNode","getAnchor","box","dom","x","left","y","top","height","getActions","onHide","focus","autoSelectFirstItem","invokeWithinContext","openToSide","contextKeyService","isInPeek","canPeek","action","hasSideBySideModifier","IContextKeyService","PeekContext","inPeekEditor","getValue","DefinitionAction","openInPeek","muteMessage","original","precondition","inlineSuggestCommitId","showPreviousInlineSuggestionActionId","showNextInlineSuggestionActionId","PositionOffsetTransformer","lineStartOffsetByLineIdx","charAt","array","GhostText","additionalReservedLineCount","lineText","lastPart","transformer","offsetEdits","startOffset","getOffset","endOffset","substring","applyEdits","substr","p","lines","join","every","GhostTextPart","preview","GhostTextReplacement","columnStart","newLines","_lineText","BaseGhostTextWidgetModel","_Disposable","_expanded","onDidChangeEmitter","Emitter","_register","fire","expanded","Disposable","minimizeInlineCompletion","inlineCompletion","valueToReplace","getValueInRange","commonPrefixLen","strings","insertText","getOffsetAt","getPositionAt","remainingValueToReplace","commonSuffixLen","snippetInfo","filterText","additionalTextEdits","inlineCompletionToGhostText","textModel","mode","cursorPosition","previewSuffixLength","sourceLine","getLineContent","sourceIndentationLength","suggestionAddedIndentationLength","replacedIndentation","rangeThatDoesNotReplaceIndentation","suggestionWithoutIndentationChange","startsWith","valueToBeReplaced","changes","originalValue","newValue","lastRequest","smartDiff","deletedChars","deletedCharacters","newChanges","cachingDiff","filteredChanges","originalLength","originalStart","previewStartInCompletionText","insertColumn","modifiedLength","modifiedEnd","modifiedStart","nonPreviewTextEnd","nonPreviewText","italicText","sum","smartBracketMatching","maxCharCode","getMaxCharCode","elements1","getElements","elements2","LcsDiff","ComputeDiff","val","len","charCode","charCodeAt","getUniqueCharCode","level","group","characters","Int32Array","InlineCompletionsModel","cache","languageConfigurationService","debounceService","completionSession","MutableDisposable","active","disposed","debounceValue","inlineCompletionsProvider","onDidExecuteCommand","CoreEditingCommands","Tab","DeleteLeft","DeleteRight","commandId","hasTextFocus","handleUserInput","onDidType","onDidChangeCursorPosition","reason","session","isValid","hide","onDidBlurEditorWidget","InlineSuggestionHintsContentWidget","dropDownVisible","startSessionIfTriggered","ghostText","minReservedLineCount","setExpanded","scheduleAutomaticUpdate","trigger","InlineCompletionTriggerKind","Automatic","triggerKind","Explicit","ensureUpdateWithExplicitContext","InlineCompletionsSession","getPosition","takeOwnership","commitCurrentCompletion","commitCurrentCompletionNextWord","showNextInlineCompletion","showPreviousInlineCompletion","ILanguageConfigurationService","_BaseGhostTextWidgetM","triggerPosition","shouldUpdate","initialTriggerKind","debounce","updateOperation","updateSoon","filteredCompletions","currentlySelectedCompletionId","lastCompletionItem","currentCompletion","sourceInlineCompletion","sourceProvider","handleItemDidShow","sourceInlineCompletions","updateRanges","updateFilteredInlineCompletions","completions","synchronizedRange","toLowerCase","indent","getLineIndentColumn","cursorPosIndex","filterTextBefore","filterTextAfter","originalValueBefore","originalValueAfter","trimStart","matchesSubString","fixAndGetIndexOfCurrentSelection","findIndex","semanticId","newIdx","promise","getOptions","split","completion","currentCachedCompletion","toLiveInlineCompletion","startTime","operation","createCancelablePromise","endTime","provideInlineCompletions","selectedSuggestionInfo","getTime","setValue","UpdateOperation","disposable","commit","firstPart","langId","getLanguageIdAtPosition","config","getLanguageConfiguration","wordRegExp","RegExp","wordDefinition","flags","m1","match","acceptUntilIndexExclusive","wsRegExp","m2","exec","partialText","pushUndoStop","setPosition","handlePartialAccept","acceptedRange","_this$commandService","clearAndLeak","replaceMove","SnippetController2","insert","snippet","undoStopBefore","lists","flatMap","l","commands","SynchronizedInlineCompletionsCache","_Disposable2","_super3","completionsSource","onChange","_this7","isDisposing","decorationIds","changeAccessor","CachedInlineCompletion","newRange","decorationId","equalsRange","abbreviation","startLine","context","_callee7","defaultReplaceRange","providers","results","itemsByHash","diff","preBracketCompletionLength","_diff","trackedItem","_this8","_context7","getDefaultRange","catch","freeInlineCompletions","completeBracketPairs","closeBrackets","SnippetParser","parse","children","Text","assertNever","maxColumn","newLine","newTokens","tokenizeLineWithEdit","slicedTokens","sliceAndInflate","fixBracketsInLine","SuggestWidgetInlineCompletionProvider","suggestControllerPreselector","isSuggestWidgetVisible","isShiftKeyPressed","_isActive","_currentSuggestItemInfo","onKeyDown","onKeyUp","suggestController","SuggestController","registerSelector","priority","select","pos","suggestItems","normalizedItemToPreselect","candidates","suggestItem","rangeToTest","prefix","inlineSuggestItem","suggestionToSuggestItemInfo","normalizedSuggestItem","normalizedInlineCompletion","valid","prefixLength","findMaxBy","compareBy","numberComparator","isBoundToSuggestWidget","Event","once","onDidTrigger","widget","onDidShow","onDidHide","onDidFocus","selectedItem","newActive","newInlineCompletion","getSuggestItemInfo","shouldFire","completionItemKind","isSnippetText","normalizedInlineCompletionsEquals","suggestItemInfoEquals","focusedItem","getFocusedItem","stopForceRenderingAbove","forceRenderingAbove","toggleMode","isArray","insertTextRules","SnippetSession","adjustWhitespace","info","getOverwriteInfo","overwriteBefore","overwriteAfter","SuggestWidgetPreviewModel","suggestionInlineCompletionSource","updateCacheSoon","updateCache","state","newGhostText","reduce","completionKind","extendingRange","rangeToExtend","isSuggestionPreviewEnabled","augmentedCompletion","suggestWidgetState","suggestInlineCompletion","isAugmentedCompletionValid","finalCompletion","inlineCompletionPreviewLength","toGhostText","previewMode","DelegatingModel","hasCachedGhostText","currentModelRef","cachedGhostText","targetModel","GhostTextModel","_DelegatingModel","instantiationService","sharedCache","SharedInlineCompletionCache","suggestWidgetAdapterModel","createInstance","inlineCompletionsModel","updateModel","setTargetModel","isActive","setActive","hoverRange","activeInlineCompletionsModel","some","containsPosition","commitCurrentSuggestion","commitCurrentSuggestionPartially","showNext","showPrevious","ttPolicy","window","trustedTypes","createPolicy","createHTML","GhostTextWidget","partsWidget","DecorationsWidget","additionalLinesWidget","AdditionalLinesWidget","languageIdCodec","viewMoreContentWidget","replacementDecoration","DisposableDecorations","viewZoneId","inlineTexts","additionalLines","addToAdditionalLines","lastLine","decorations","LineDecoration","slice","setDecorations","textBufferLine","hiddenTextStartColumn","lastIdx","setParts","updateLines","firstLineText","remainingLinesLength","fontInfo","domNode","document","createElement","applyFontInfo","spacer","append","newline","disposableStore","button","addStandardDisposableListener","ViewMoreLinesContentWidget","hiddenText","hiddenTextDecorations","after","Left","_viewZoneId","changeViewZones","removeZone","tabSize","heightInLines","disableMonospaceOptimizations","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","lineHeight","sb","StringBuilder","appendString","lineData","String","isBasicASCII","containsRTL","lineTokens","LineTokens","createEmpty","renderViewLine","RenderLineInput","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","EditorFontLigatures","OFF","html","build","trustedhtml","innerHTML","renderLines","addZone","afterLineNumber","afterColumnAffinity","allowEditorOverflow","suppressMouseDown","removeContentWidget","_assertThisInitialized","addContentWidget","preference","GhostTextController","triggeredExplicitly","activeController","activeModelDidChangeEmitter","firstUndoableVersionId","alwaysShowInlineSuggestionToolbar","bindTo","isUndoing","getAlternativeVersionId","contextKeys","canUndoInlineSuggestion","reset","suggestOptions","inlineSuggestOptions","showToolbar","shouldCreate","ActiveGhostTextController","activeModel","shouldShowHoverAt","shouldShowHoverAtViewZone","triggerInlineCompletion","nextVersion","commitInlineCompletionPartially","commitInlineCompletion","hideInlineCompletion","inlineSuggestionVisible","RawContextKey","nls","inlineSuggestionHasIndentation","inlineSuggestionHasIndentationLessThanTabSize","GhostTextContextKeys","inlineCompletionVisible","inlineCompletionSuggestsIndentation","inlineCompletionSuggestsIndentationLessThanTabSize","updateContextKeys","startsWithIndentation","startsWithIndentationLessThanTabSize","_ghostText$parts$","firstLine","firstNonWsIdx","firstNonWhitespaceIndex","CursorColumns","visibleColumnFromColumn","ShowNextInlineSuggestionAction","_EditorAction","alias","ContextKeyExpr","and","EditorContextKeys","writable","kbOpts","weight","primary","controller","EditorAction","ShowPreviousInlineSuggestionAction","_EditorAction2","_super4","TriggerInlineSuggestionAction","_EditorAction3","_super5","AcceptNextWordOfInlineCompletion","_EditorAction4","_super6","menuOpts","menuId","InlineSuggestionToolbar","order","commitPartially","AcceptInlineCompletion","_EditorAction5","_super7","kbExpr","tabMovesFocus","toNegated","HideInlineCompletion","_EditorAction6","_super8","ToggleAlwaysShowInlineSuggestionToolbar","_Action","_super9","f1","menu","toggled","configService","currentValue","updateValue","Action2","UndoAcceptPart","_EditorAction7","_super10","_callee8","_context8","undo","InlineCompletionsHover","hasBeenTriggeredExplicitly","getInlineCompletionsCountSync","currentlySelectedIndex","handler","InlineCompletionsHoverParticipant","_languageService","_openerService","accessibilityService","_instantiationService","_telemetryService","viewZoneData","positionBefore","mightBeForeignElement","lineDecorations","hoverParts","publicLog2","isScreenReaderOptimized","renderScreenReaderText","w","fragment","appendChild","getInlineCompletionIndex","getInlineCompletionsCount","requestExplicitContext","$","markdownHoverElement","hoverContentsElement","renderer","MarkdownRenderer","code","onDidRenderAsync","onContentsChanged","inlineSuggestionAvailable","renderedContents","render","appendCodeblock","replaceChildren","element","renderForScreenReader","IAccessibilityService","ITelemetryService","registerEditorAction","registerAction2","inlineSuggestionHintsNextIcon","registerIcon","Codicon","chevronRight","inlineSuggestionHintsPreviousIcon","chevronLeft","withBorder","keybindingService","_contextKeyService","_menuService","nodes","h","previousAction","createCommandAction","ThemeIcon","asClassName","availableSuggestionCountAction","nextAction","inlineCompletionsActionsMenus","createMenu","InlineCompletionsActions","clearAvailableSuggestionCountLabelDebounced","disableButtonsDebounced","actionBar","ActionBar","icon","toolBar","CustomizedMenuWorkbenchToolBar","menuOptions","toolbarOptions","primaryGroup","g","actionViewItemProvider","StatusBarViewItem","telemetrySource","onDidChangeDropdownVisibility","_dropDownVisible","iconClassName","lookupKeybinding","comment","getLabel","currentSuggestionIdx","suggestionCount","extraCommands","layoutContentWidget","extraActions","class","unshift","setAdditionalSecondaryActions","root","positionAffinity","IKeybindingService","IMenuService","_MenuEntryActionViewI","_keybindingService","_action","_get","_getPrototypeOf","prototype","div","KeybindingLabel","OS","assign","disableTitle","unthemedKeybindingLabelOptions","textContent","classList","MenuEntryActionViewItem","_WorkbenchToolBar","container","options2","menuService","telemetryService","resetMenu","_store","emitEventsForSubmenuChanges","additionalActions","updateToolbar","_e","_f","_g","secondary","createAndFillInActionBarActions","shouldInlineSubmenu","useSeparatorsInPrimaryActions","setActions","actions","WorkbenchToolBar","ExpandLineSelectionAction","textInputFocus","_accessor","viewModel","_getViewModel","pushStackElement","setCursorStates","CursorMoveCommands","expandLineSelection","getCursorStates","revealPrimaryCursor","CopyLinesCommand","selection","isCopyingDown","noop","_selection","_isCopyingDown","_noop","_selectionDirection","_selectionId","_startLineNumberDelta","_endLineNumberDelta","builder","setEndPosition","sourceLines","sourceText","addEditOperation","getLineCount","trackSelection","getDirection","helper","getTrackedSelection","Selection","createWithDirection","MoveLinesCommand","isMovingDown","autoIndent","_languageConfigurationService","_isMovingDown","_autoIndent","_moveEndLineSelectionShrink","modelLineCount","_moveEndPositionDown","_model$getOptions","indentSize","insertSpaces","indentConverter","buildIndentConverter","virtualModel","getLanguageId","otherLineNumber","movingLineNumber","movingLineText","insertingText","shouldAutoIndent","movingLineMatchResult","matchEnterRule","oldIndentation","newSpaceCnt","indentUtils","newIndentation","trimLeft","indentOfMovingLine","getGoodIndentForLine","ret","matchEnterRuleMovingDown","getIndentEditsOfMovingBlock","newIndentatOfMovingBlock","oldSpaceCnt","spaceCntOffset","indentOfFirstLine","oldIndent","shiftIndent","indentation","ShiftCommand","unshiftIndent","enter","enterPrefix","indentAction","IndentAction","Indent","IndentOutdent","Outdent","indexOf","indentMetadataOfMovelingLine","getIndentMetadata","futureAboveLineNumber","futureAboveLineText","getEnterAction","parseEnterResult","validPrecedingLine","lineContent","oneLineAbove","previousLineText","isCheapToTokenize","languageAtSelectionStart","indentRulesSupport","originalIndent","newSpacesCnt","newIndent","SortLinesCommand","descending","selectionId","op","getSortData","sortLines","_COLLATOR","Intl","Collator","before","linesToSort","sorted","getCollator","AbstractCopyLinesAction","down","selections","getSelections","ignore","curr","executeCommands","CopyLinesUpAction","_AbstractCopyLinesAct","editorTextFocus","linux","MenubarSelectionMenu","CopyLinesDownAction","_AbstractCopyLinesAct2","DuplicateSelectionAction","insertSelection","ReplaceCommandThatSelectsText","AbstractMoveLinesAction","MoveLinesUpAction","_AbstractMoveLinesAct","MoveLinesDownAction","_AbstractMoveLinesAct2","AbstractSortLinesAction","canRun","SortLinesAscendingAction","_AbstractSortLinesAct","SortLinesDescendingAction","_AbstractSortLinesAct2","DeleteDuplicateLinesAction","_super11","endCursorState","linesDeleted","uniqueLines","selectionToReplace","adjustedSelectionStart","finalSelection","TrimTrailingWhitespaceAction","_super12","KeyChord","cursors","positionLineNumber","positionColumn","getSelection","TrimTrailingWhitespaceCommand","DeleteLinesAction","_super13","ops","_getLinesToRemove","cursorState","operations","selectionStartColumn","mergedOperations","previousOperation","IndentLinesAction","_EditorAction8","_super14","TypeOperations","cursorConfig","OutdentLinesAction","_EditorAction9","_super15","runEditorCommand","InsertLineBeforeAction","_EditorAction10","_super16","lineInsertBefore","InsertLineAfterAction","_EditorAction11","_super17","lineInsertAfter","AbstractDeleteAllToBoundaryAction","_EditorAction12","_super18","primaryCursor","rangesToDelete","_getRangesToDelete","effectiveRanges","count","nextRange","intersectRanges","_getEndCursorState","DeleteAllLeftAction","_AbstractDeleteAllToB","_super19","mac","endPrimaryCursor","deletedLines","forEach","endCursor","newStartLine","deleteFromLine","deleteFromColumn","DeleteAllRightAction","_AbstractDeleteAllToB2","_super20","sel","JoinLinesAction","_EditorAction13","_super21","reducedSelections","lastSelection","previousValue","equalsSelection","lineOffset","columnDeltaOffset","selectionEndPositionOffset","trimmedLinesContent","firstNonWhitespaceIdx","getLineFirstNonWhitespaceColumn","insertSpace","lineTextWithoutIndent","deleteSelection","resultSelection","TransposeAction","_EditorAction14","_super22","chars","ReplaceCommand","ReplaceCommandThatPreservesSelection","AbstractCaseAction","_EditorAction15","_super23","wordSeparators","getConfiguredWordAtPosition","_modifyText","UpperCaseAction","_AbstractCaseAction","_super24","toLocaleUpperCase","LowerCaseAction","_AbstractCaseAction2","_super25","toLocaleLowerCase","BackwardsCompatibleRegExp","_pattern","_flags","_actual","_evaluated","TitleCaseAction","_AbstractCaseAction3","_super26","titleBoundary","SnakeCaseAction","_AbstractCaseAction4","_super27","caseBoundary","singleLetters","CamelCaseAction","_AbstractCaseAction5","_super28","wordBoundary","words","shift","KebabCaseAction","_AbstractCaseAction6","_super29","_","underscoreBoundary","regexp","isSupported","CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE","LinkedEditingContribution","languageFeatureDebounceService","_syncRangesToken","_localToDispose","_providers","linkedEditingRangeProvider","_enabled","_visibleContextKey","_debounceInformation","_currentDecorations","createDecorationsCollection","_languageWordPattern","_currentWordPattern","_ignoreChangeEvent","_rangeUpdateTriggerPromise","_rangeSyncTriggerPromise","_currentRequest","_currentRequestPosition","_currentRequestModelVersion","reinitialize","forceRefresh","isEnabled","clearRanges","runAndSubscribe","onDidChangeLanguageConfiguration","getWordDefinition","rangeUpdateScheduler","Delayer","triggerRangeUpdate","_debounceDuration","rangeSyncScheduler","referenceRange","getRange","_syncRanges","referenceValue","mirrorRange","oldValue","rangeStartColumn","rangeEndColumn","commonPrefixLength","commonSuffixLength","popUndoStop","prevEditOperationType","getPrevEditOperationType","setPrevEditOperationType","force","modelVersionId","request","equals","sw","response","foundReferenceRange","StopWatch","getLinkedEditingRanges","elapsed","wordPattern","splice","DECORATION","isCancellationError","ModelDecorationOptions","LinkedEditingAction","hasRenameProvider","editorService","ICodeEditorService","_ref","_ref2","isIPosition","openCodeEditor","resource","getActiveCodeEditor","reportTelemetry","LinkedEditingCommand","EditorCommand","bindToContribution","orderedByScore","first","provideLinkedEditingRanges","arrays","registerEditorCommand","registerColor","dark","Color","fromHex","transparent","light","hcDark","hcLight","white","registerModelAndPositionCommand","Link","link","_link","_provider","url","resolveLink","LinksList","tuples","links","newLinks","_union","isDisposable","oldLinks","oldIndex","oldLen","newIndex","newLen","oldLink","newLink","getLinks","provideLinks","coalesce","resolveCount","linkProvider","IModelService","LinkDetector","debounceInformation","computeLinks","computeLinksNow","computePromise","activeLinksList","currentOccurrences","activeLinkDecorationId","clickLinkGesture","keyboardEvent","_onEditorMouseMove","onEditorMouseUp","cleanUpActiveLinkDecoration","updateDecorations","oldDecorations","_i","_keys","occurence","newDecorations","LinkOccurrence","withKey","occurrence","getLinkOccurrence","activate","deactivate","openLinkOccurrence","fromUserGesture","modelUri","file","parsedUri","fsPath","resources","relativePath","open","allowContributedOpeners","allowCommands","fromWorkspace","messageOrError","warn","currentOccurrence","Boolean","keyCodeIsTriggerKey","general","changeDecorationOptions","_getOptions","hoverMessage","executeCmd","test","nativeLabel","appendLink","appendMarkdown","getHoverMessage","OpenLinkAction","linkDetector"],"sourceRoot":""}