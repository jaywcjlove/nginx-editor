{"version":3,"file":"static/js/monaco-editor-vendor.aed1b91e.039f5003.js","mappings":"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","sources":["../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/accessibility/browser/accessibilityService.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/accessibility/common/accessibility.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/action/common/actionCommonCategories.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/actionWidget/browser/actionList.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/actionWidget/browser/actionWidget.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/actions/browser/menuEntryActionViewItem.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/action/common/action.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/actions/browser/toolbar.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/actions/common/actions.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/actions/common/menuService.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/audioCues/browser/audioCueService.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/clipboard/browser/clipboardService.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/clipboard/common/clipboardService.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/commands/common/commands.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/configuration/common/configuration.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/configuration/common/configurationModels.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/configuration/common/configurations.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/contextkey/browser/contextKeyService.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/contextkey/common/scanner.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/contextkey/common/contextkey.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/contextkey/common/contextkeys.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextMenuHandler.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextMenuService.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextView.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextViewService.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/dialogs/common/dialogs.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/dnd/browser/dnd.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/editor/common/editor.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { addDisposableListener } from '../../../base/browser/dom.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { CONTEXT_ACCESSIBILITY_MODE_ENABLED } from '../common/accessibility.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nlet AccessibilityService = class AccessibilityService extends Disposable {\n    constructor(_contextKeyService, _layoutService, _configurationService) {\n        super();\n        this._contextKeyService = _contextKeyService;\n        this._layoutService = _layoutService;\n        this._configurationService = _configurationService;\n        this._accessibilitySupport = 0 /* AccessibilitySupport.Unknown */;\n        this._onDidChangeScreenReaderOptimized = new Emitter();\n        this._onDidChangeReducedMotion = new Emitter();\n        this._accessibilityModeEnabledContext = CONTEXT_ACCESSIBILITY_MODE_ENABLED.bindTo(this._contextKeyService);\n        const updateContextKey = () => this._accessibilityModeEnabledContext.set(this.isScreenReaderOptimized());\n        this._register(this._configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('editor.accessibilitySupport')) {\n                updateContextKey();\n                this._onDidChangeScreenReaderOptimized.fire();\n            }\n            if (e.affectsConfiguration('workbench.reduceMotion')) {\n                this._configMotionReduced = this._configurationService.getValue('workbench.reduceMotion');\n                this._onDidChangeReducedMotion.fire();\n            }\n        }));\n        updateContextKey();\n        this._register(this.onDidChangeScreenReaderOptimized(() => updateContextKey()));\n        const reduceMotionMatcher = window.matchMedia(`(prefers-reduced-motion: reduce)`);\n        this._systemMotionReduced = reduceMotionMatcher.matches;\n        this._configMotionReduced = this._configurationService.getValue('workbench.reduceMotion');\n        this.initReducedMotionListeners(reduceMotionMatcher);\n    }\n    initReducedMotionListeners(reduceMotionMatcher) {\n        if (!this._layoutService.hasContainer) {\n            // we can't use `ILayoutService.container` because the application\n            // doesn't have a single container\n            return;\n        }\n        this._register(addDisposableListener(reduceMotionMatcher, 'change', () => {\n            this._systemMotionReduced = reduceMotionMatcher.matches;\n            if (this._configMotionReduced === 'auto') {\n                this._onDidChangeReducedMotion.fire();\n            }\n        }));\n        const updateRootClasses = () => {\n            const reduce = this.isMotionReduced();\n            this._layoutService.container.classList.toggle('reduce-motion', reduce);\n            this._layoutService.container.classList.toggle('enable-motion', !reduce);\n        };\n        updateRootClasses();\n        this._register(this.onDidChangeReducedMotion(() => updateRootClasses()));\n    }\n    get onDidChangeScreenReaderOptimized() {\n        return this._onDidChangeScreenReaderOptimized.event;\n    }\n    isScreenReaderOptimized() {\n        const config = this._configurationService.getValue('editor.accessibilitySupport');\n        return config === 'on' || (config === 'auto' && this._accessibilitySupport === 2 /* AccessibilitySupport.Enabled */);\n    }\n    get onDidChangeReducedMotion() {\n        return this._onDidChangeReducedMotion.event;\n    }\n    isMotionReduced() {\n        const config = this._configMotionReduced;\n        return config === 'on' || (config === 'auto' && this._systemMotionReduced);\n    }\n    getAccessibilitySupport() {\n        return this._accessibilitySupport;\n    }\n};\nAccessibilityService = __decorate([\n    __param(0, IContextKeyService),\n    __param(1, ILayoutService),\n    __param(2, IConfigurationService)\n], AccessibilityService);\nexport { AccessibilityService };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IAccessibilityService = createDecorator('accessibilityService');\nexport const CONTEXT_ACCESSIBILITY_MODE_ENABLED = new RawContextKey('accessibilityModeEnabled', false);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { localize } from '../../../nls.js';\nexport const Categories = Object.freeze({\n    View: { value: localize('view', \"View\"), original: 'View' },\n    Help: { value: localize('help', \"Help\"), original: 'Help' },\n    Test: { value: localize('test', \"Test\"), original: 'Test' },\n    File: { value: localize('file', \"File\"), original: 'File' },\n    Preferences: { value: localize('preferences', \"Preferences\"), original: 'Preferences' },\n    Developer: { value: localize({ key: 'developer', comment: ['A developer on Code itself or someone diagnosing issues in Code'] }, \"Developer\"), original: 'Developer' }\n});\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { KeybindingLabel } from '../../../base/browser/ui/keybindingLabel/keybindingLabel.js';\nimport { List } from '../../../base/browser/ui/list/listWidget.js';\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { OS } from '../../../base/common/platform.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport './actionWidget.css';\nimport { localize } from '../../../nls.js';\nimport { IContextViewService } from '../../contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { defaultListStyles } from '../../theme/browser/defaultStyles.js';\nimport { asCssVariable } from '../../theme/common/colorRegistry.js';\nexport const acceptSelectedActionCommand = 'acceptSelectedCodeAction';\nexport const previewSelectedActionCommand = 'previewSelectedCodeAction';\nclass HeaderRenderer {\n    get templateId() { return \"header\" /* ActionListItemKind.Header */; }\n    renderTemplate(container) {\n        container.classList.add('group-header');\n        const text = document.createElement('span');\n        container.append(text);\n        return { container, text };\n    }\n    renderElement(element, _index, templateData) {\n        var _a, _b;\n        templateData.text.textContent = (_b = (_a = element.group) === null || _a === void 0 ? void 0 : _a.title) !== null && _b !== void 0 ? _b : '';\n    }\n    disposeTemplate(_templateData) {\n        // noop\n    }\n}\nlet ActionItemRenderer = class ActionItemRenderer {\n    get templateId() { return \"action\" /* ActionListItemKind.Action */; }\n    constructor(_supportsPreview, _keybindingService) {\n        this._supportsPreview = _supportsPreview;\n        this._keybindingService = _keybindingService;\n    }\n    renderTemplate(container) {\n        container.classList.add(this.templateId);\n        const icon = document.createElement('div');\n        icon.className = 'icon';\n        container.append(icon);\n        const text = document.createElement('span');\n        text.className = 'title';\n        container.append(text);\n        const keybinding = new KeybindingLabel(container, OS);\n        return { container, icon, text, keybinding };\n    }\n    renderElement(element, _index, data) {\n        var _a, _b, _c;\n        if ((_a = element.group) === null || _a === void 0 ? void 0 : _a.icon) {\n            data.icon.className = ThemeIcon.asClassName(element.group.icon);\n            if (element.group.icon.color) {\n                data.icon.style.color = asCssVariable(element.group.icon.color.id);\n            }\n        }\n        else {\n            data.icon.className = ThemeIcon.asClassName(Codicon.lightBulb);\n            data.icon.style.color = 'var(--vscode-editorLightBulb-foreground)';\n        }\n        if (!element.item || !element.label) {\n            return;\n        }\n        data.text.textContent = stripNewlines(element.label);\n        data.keybinding.set(element.keybinding);\n        dom.setVisibility(!!element.keybinding, data.keybinding.element);\n        const actionTitle = (_b = this._keybindingService.lookupKeybinding(acceptSelectedActionCommand)) === null || _b === void 0 ? void 0 : _b.getLabel();\n        const previewTitle = (_c = this._keybindingService.lookupKeybinding(previewSelectedActionCommand)) === null || _c === void 0 ? void 0 : _c.getLabel();\n        data.container.classList.toggle('option-disabled', element.disabled);\n        if (element.disabled) {\n            data.container.title = element.label;\n        }\n        else if (actionTitle && previewTitle) {\n            if (this._supportsPreview && element.canPreview) {\n                data.container.title = localize({ key: 'label-preview', comment: ['placeholders are keybindings, e.g \"F2 to apply, Shift+F2 to preview\"'] }, \"{0} to apply, {1} to preview\", actionTitle, previewTitle);\n            }\n            else {\n                data.container.title = localize({ key: 'label', comment: ['placeholder is a keybinding, e.g \"F2 to apply\"'] }, \"{0} to apply\", actionTitle);\n            }\n        }\n        else {\n            data.container.title = '';\n        }\n    }\n    disposeTemplate(_templateData) {\n        // noop\n    }\n};\nActionItemRenderer = __decorate([\n    __param(1, IKeybindingService)\n], ActionItemRenderer);\nclass AcceptSelectedEvent extends UIEvent {\n    constructor() { super('acceptSelectedAction'); }\n}\nclass PreviewSelectedEvent extends UIEvent {\n    constructor() { super('previewSelectedAction'); }\n}\nfunction getKeyboardNavigationLabel(item) {\n    // Filter out header vs. action\n    if (item.kind === 'action') {\n        return item.label;\n    }\n    return undefined;\n}\nlet ActionList = class ActionList extends Disposable {\n    constructor(user, preview, items, _delegate, _contextViewService, _keybindingService) {\n        super();\n        this._delegate = _delegate;\n        this._contextViewService = _contextViewService;\n        this._keybindingService = _keybindingService;\n        this._actionLineHeight = 24;\n        this._headerLineHeight = 26;\n        this.cts = this._register(new CancellationTokenSource());\n        this.domNode = document.createElement('div');\n        this.domNode.classList.add('actionList');\n        const virtualDelegate = {\n            getHeight: element => element.kind === \"header\" /* ActionListItemKind.Header */ ? this._headerLineHeight : this._actionLineHeight,\n            getTemplateId: element => element.kind\n        };\n        this._list = this._register(new List(user, this.domNode, virtualDelegate, [\n            new ActionItemRenderer(preview, this._keybindingService),\n            new HeaderRenderer(),\n        ], {\n            keyboardSupport: false,\n            typeNavigationEnabled: true,\n            keyboardNavigationLabelProvider: { getKeyboardNavigationLabel },\n            accessibilityProvider: {\n                getAriaLabel: element => {\n                    if (element.kind === \"action\" /* ActionListItemKind.Action */) {\n                        let label = element.label ? stripNewlines(element === null || element === void 0 ? void 0 : element.label) : '';\n                        if (element.disabled) {\n                            label = localize({ key: 'customQuickFixWidget.labels', comment: [`Action widget labels for accessibility.`] }, \"{0}, Disabled Reason: {1}\", label, element.disabled);\n                        }\n                        return label;\n                    }\n                    return null;\n                },\n                getWidgetAriaLabel: () => localize({ key: 'customQuickFixWidget', comment: [`An action widget option`] }, \"Action Widget\"),\n                getRole: (e) => e.kind === \"action\" /* ActionListItemKind.Action */ ? 'option' : 'separator',\n                getWidgetRole: () => 'listbox',\n            },\n        }));\n        this._list.style(defaultListStyles);\n        this._register(this._list.onMouseClick(e => this.onListClick(e)));\n        this._register(this._list.onMouseOver(e => this.onListHover(e)));\n        this._register(this._list.onDidChangeFocus(() => this.onFocus()));\n        this._register(this._list.onDidChangeSelection(e => this.onListSelection(e)));\n        this._allMenuItems = items;\n        this._list.splice(0, this._list.length, this._allMenuItems);\n        if (this._list.length) {\n            this.focusNext();\n        }\n    }\n    focusCondition(element) {\n        return !element.disabled && element.kind === \"action\" /* ActionListItemKind.Action */;\n    }\n    hide(didCancel) {\n        this._delegate.onHide(didCancel);\n        this.cts.cancel();\n        this._contextViewService.hideContextView();\n    }\n    layout(minWidth) {\n        // Updating list height, depending on how many separators and headers there are.\n        const numHeaders = this._allMenuItems.filter(item => item.kind === 'header').length;\n        const itemsHeight = this._allMenuItems.length * this._actionLineHeight;\n        const heightWithHeaders = itemsHeight + numHeaders * this._headerLineHeight - numHeaders * this._actionLineHeight;\n        this._list.layout(heightWithHeaders);\n        // For finding width dynamically (not using resize observer)\n        const itemWidths = this._allMenuItems.map((_, index) => {\n            const element = document.getElementById(this._list.getElementID(index));\n            if (element) {\n                element.style.width = 'auto';\n                const width = element.getBoundingClientRect().width;\n                element.style.width = '';\n                return width;\n            }\n            return 0;\n        });\n        // resize observer - can be used in the future since list widget supports dynamic height but not width\n        const width = Math.max(...itemWidths, minWidth);\n        const maxVhPrecentage = 0.7;\n        const height = Math.min(heightWithHeaders, document.body.clientHeight * maxVhPrecentage);\n        this._list.layout(height, width);\n        this.domNode.style.height = `${height}px`;\n        this._list.domFocus();\n        return width;\n    }\n    focusPrevious() {\n        this._list.focusPrevious(1, true, undefined, this.focusCondition);\n    }\n    focusNext() {\n        this._list.focusNext(1, true, undefined, this.focusCondition);\n    }\n    acceptSelected(preview) {\n        const focused = this._list.getFocus();\n        if (focused.length === 0) {\n            return;\n        }\n        const focusIndex = focused[0];\n        const element = this._list.element(focusIndex);\n        if (!this.focusCondition(element)) {\n            return;\n        }\n        const event = preview ? new PreviewSelectedEvent() : new AcceptSelectedEvent();\n        this._list.setSelection([focusIndex], event);\n    }\n    onListSelection(e) {\n        if (!e.elements.length) {\n            return;\n        }\n        const element = e.elements[0];\n        if (element.item && this.focusCondition(element)) {\n            this._delegate.onSelect(element.item, e.browserEvent instanceof PreviewSelectedEvent);\n        }\n        else {\n            this._list.setSelection([]);\n        }\n    }\n    onFocus() {\n        var _a, _b;\n        this._list.domFocus();\n        const focused = this._list.getFocus();\n        if (focused.length === 0) {\n            return;\n        }\n        const focusIndex = focused[0];\n        const element = this._list.element(focusIndex);\n        (_b = (_a = this._delegate).onFocus) === null || _b === void 0 ? void 0 : _b.call(_a, element.item);\n    }\n    onListHover(e) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const element = e.element;\n            if (element && element.item && this.focusCondition(element)) {\n                if (this._delegate.onHover && !element.disabled && element.kind === \"action\" /* ActionListItemKind.Action */) {\n                    const result = yield this._delegate.onHover(element.item, this.cts.token);\n                    element.canPreview = result ? result.canPreview : undefined;\n                }\n                if (e.index) {\n                    this._list.splice(e.index, 1, [element]);\n                }\n            }\n            this._list.setFocus(typeof e.index === 'number' ? [e.index] : []);\n        });\n    }\n    onListClick(e) {\n        if (e.element && this.focusCondition(e.element)) {\n            this._list.setFocus([]);\n        }\n    }\n};\nActionList = __decorate([\n    __param(4, IContextViewService),\n    __param(5, IKeybindingService)\n], ActionList);\nexport { ActionList };\nfunction stripNewlines(str) {\n    return str.replace(/\\r\\n|\\r|\\n/g, ' ');\n}\n","var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { Disposable, DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport './actionWidget.css';\nimport { localize } from '../../../nls.js';\nimport { acceptSelectedActionCommand, ActionList, previewSelectedActionCommand } from './actionList.js';\nimport { Action2, registerAction2 } from '../../actions/common/actions.js';\nimport { IContextKeyService, RawContextKey } from '../../contextkey/common/contextkey.js';\nimport { IContextViewService } from '../../contextview/browser/contextView.js';\nimport { registerSingleton } from '../../instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { inputActiveOptionBackground, registerColor } from '../../theme/common/colorRegistry.js';\nregisterColor('actionBar.toggledBackground', { dark: inputActiveOptionBackground, light: inputActiveOptionBackground, hcDark: inputActiveOptionBackground, hcLight: inputActiveOptionBackground, }, localize('actionBar.toggledBackground', 'Background color for toggled action items in action bar.'));\nconst ActionWidgetContextKeys = {\n    Visible: new RawContextKey('codeActionMenuVisible', false, localize('codeActionMenuVisible', \"Whether the action widget list is visible\"))\n};\nexport const IActionWidgetService = createDecorator('actionWidgetService');\nlet ActionWidgetService = class ActionWidgetService extends Disposable {\n    get isVisible() {\n        return ActionWidgetContextKeys.Visible.getValue(this._contextKeyService) || false;\n    }\n    constructor(_contextViewService, _contextKeyService, _instantiationService) {\n        super();\n        this._contextViewService = _contextViewService;\n        this._contextKeyService = _contextKeyService;\n        this._instantiationService = _instantiationService;\n        this._list = this._register(new MutableDisposable());\n    }\n    show(user, supportsPreview, items, delegate, anchor, container, actionBarActions) {\n        const visibleContext = ActionWidgetContextKeys.Visible.bindTo(this._contextKeyService);\n        const list = this._instantiationService.createInstance(ActionList, user, supportsPreview, items, delegate);\n        this._contextViewService.showContextView({\n            getAnchor: () => anchor,\n            render: (container) => {\n                visibleContext.set(true);\n                return this._renderWidget(container, list, actionBarActions !== null && actionBarActions !== void 0 ? actionBarActions : []);\n            },\n            onHide: (didCancel) => {\n                visibleContext.reset();\n                this._onWidgetClosed(didCancel);\n            },\n        }, container, false);\n    }\n    acceptSelected(preview) {\n        var _a;\n        (_a = this._list.value) === null || _a === void 0 ? void 0 : _a.acceptSelected(preview);\n    }\n    focusPrevious() {\n        var _a, _b;\n        (_b = (_a = this._list) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.focusPrevious();\n    }\n    focusNext() {\n        var _a, _b;\n        (_b = (_a = this._list) === null || _a === void 0 ? void 0 : _a.value) === null || _b === void 0 ? void 0 : _b.focusNext();\n    }\n    hide() {\n        var _a;\n        (_a = this._list.value) === null || _a === void 0 ? void 0 : _a.hide();\n        this._list.clear();\n    }\n    _renderWidget(element, list, actionBarActions) {\n        var _a;\n        const widget = document.createElement('div');\n        widget.classList.add('action-widget');\n        element.appendChild(widget);\n        this._list.value = list;\n        if (this._list.value) {\n            widget.appendChild(this._list.value.domNode);\n        }\n        else {\n            throw new Error('List has no value');\n        }\n        const renderDisposables = new DisposableStore();\n        // Invisible div to block mouse interaction in the rest of the UI\n        const menuBlock = document.createElement('div');\n        const block = element.appendChild(menuBlock);\n        block.classList.add('context-view-block');\n        renderDisposables.add(dom.addDisposableListener(block, dom.EventType.MOUSE_DOWN, e => e.stopPropagation()));\n        // Invisible div to block mouse interaction with the menu\n        const pointerBlockDiv = document.createElement('div');\n        const pointerBlock = element.appendChild(pointerBlockDiv);\n        pointerBlock.classList.add('context-view-pointerBlock');\n        // Removes block on click INSIDE widget or ANY mouse movement\n        renderDisposables.add(dom.addDisposableListener(pointerBlock, dom.EventType.POINTER_MOVE, () => pointerBlock.remove()));\n        renderDisposables.add(dom.addDisposableListener(pointerBlock, dom.EventType.MOUSE_DOWN, () => pointerBlock.remove()));\n        // Action bar\n        let actionBarWidth = 0;\n        if (actionBarActions.length) {\n            const actionBar = this._createActionBar('.action-widget-action-bar', actionBarActions);\n            if (actionBar) {\n                widget.appendChild(actionBar.getContainer().parentElement);\n                renderDisposables.add(actionBar);\n                actionBarWidth = actionBar.getContainer().offsetWidth;\n            }\n        }\n        const width = (_a = this._list.value) === null || _a === void 0 ? void 0 : _a.layout(actionBarWidth);\n        widget.style.width = `${width}px`;\n        const focusTracker = renderDisposables.add(dom.trackFocus(element));\n        renderDisposables.add(focusTracker.onDidBlur(() => this.hide()));\n        return renderDisposables;\n    }\n    _createActionBar(className, actions) {\n        if (!actions.length) {\n            return undefined;\n        }\n        const container = dom.$(className);\n        const actionBar = new ActionBar(container);\n        actionBar.push(actions, { icon: false, label: true });\n        return actionBar;\n    }\n    _onWidgetClosed(didCancel) {\n        var _a;\n        (_a = this._list.value) === null || _a === void 0 ? void 0 : _a.hide(didCancel);\n    }\n};\nActionWidgetService = __decorate([\n    __param(0, IContextViewService),\n    __param(1, IContextKeyService),\n    __param(2, IInstantiationService)\n], ActionWidgetService);\nregisterSingleton(IActionWidgetService, ActionWidgetService, 1 /* InstantiationType.Delayed */);\nconst weight = 100 /* KeybindingWeight.EditorContrib */ + 1000;\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'hideCodeActionWidget',\n            title: {\n                value: localize('hideCodeActionWidget.title', \"Hide action widget\"),\n                original: 'Hide action widget'\n            },\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 9 /* KeyCode.Escape */,\n                secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n            },\n        });\n    }\n    run(accessor) {\n        accessor.get(IActionWidgetService).hide();\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'selectPrevCodeAction',\n            title: {\n                value: localize('selectPrevCodeAction.title', \"Select previous action\"),\n                original: 'Select previous action'\n            },\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 16 /* KeyCode.UpArrow */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */],\n                mac: { primary: 16 /* KeyCode.UpArrow */, secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */, 256 /* KeyMod.WinCtrl */ | 46 /* KeyCode.KeyP */] },\n            }\n        });\n    }\n    run(accessor) {\n        const widgetService = accessor.get(IActionWidgetService);\n        if (widgetService instanceof ActionWidgetService) {\n            widgetService.focusPrevious();\n        }\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: 'selectNextCodeAction',\n            title: {\n                value: localize('selectNextCodeAction.title', \"Select next action\"),\n                original: 'Select next action'\n            },\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 18 /* KeyCode.DownArrow */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */],\n                mac: { primary: 18 /* KeyCode.DownArrow */, secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */, 256 /* KeyMod.WinCtrl */ | 44 /* KeyCode.KeyN */] }\n            }\n        });\n    }\n    run(accessor) {\n        const widgetService = accessor.get(IActionWidgetService);\n        if (widgetService instanceof ActionWidgetService) {\n            widgetService.focusNext();\n        }\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: acceptSelectedActionCommand,\n            title: {\n                value: localize('acceptSelected.title', \"Accept selected action\"),\n                original: 'Accept selected action'\n            },\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 3 /* KeyCode.Enter */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 89 /* KeyCode.Period */],\n            }\n        });\n    }\n    run(accessor) {\n        const widgetService = accessor.get(IActionWidgetService);\n        if (widgetService instanceof ActionWidgetService) {\n            widgetService.acceptSelected();\n        }\n    }\n});\nregisterAction2(class extends Action2 {\n    constructor() {\n        super({\n            id: previewSelectedActionCommand,\n            title: {\n                value: localize('previewSelected.title', \"Preview selected action\"),\n                original: 'Preview selected action'\n            },\n            precondition: ActionWidgetContextKeys.Visible,\n            keybinding: {\n                weight,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n            }\n        });\n    }\n    run(accessor) {\n        const widgetService = accessor.get(IActionWidgetService);\n        if (widgetService instanceof ActionWidgetService) {\n            widgetService.acceptSelected(true);\n        }\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { $, addDisposableListener, append, asCSSUrl, EventType, ModifierKeyEmitter, prepend, reset } from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { ActionViewItem, BaseActionViewItem, SelectActionViewItem } from '../../../base/browser/ui/actionbar/actionViewItems.js';\nimport { DropdownMenuActionViewItem } from '../../../base/browser/ui/dropdown/dropdownActionViewItem.js';\nimport { ActionRunner, Separator, SubmenuAction } from '../../../base/common/actions.js';\nimport { UILabelProvider } from '../../../base/common/keybindingLabels.js';\nimport { combinedDisposable, MutableDisposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { isLinux, isWindows, OS } from '../../../base/common/platform.js';\nimport './menuEntryActionViewItem.css';\nimport { localize } from '../../../nls.js';\nimport { IMenuService, MenuItemAction, SubmenuItemAction } from '../common/actions.js';\nimport { isICommandActionToggleInfo } from '../../action/common/action.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IContextMenuService, IContextViewService } from '../../contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { IThemeService } from '../../theme/common/themeService.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { isDark } from '../../theme/common/theme.js';\nimport { assertType } from '../../../base/common/types.js';\nimport { asCssVariable, selectBorder } from '../../theme/common/colorRegistry.js';\nimport { defaultSelectBoxStyles } from '../../theme/browser/defaultStyles.js';\nimport { IAccessibilityService } from '../../accessibility/common/accessibility.js';\nexport function createAndFillInContextMenuActions(menu, options, target, primaryGroup) {\n    const groups = menu.getActions(options);\n    const modifierKeyEmitter = ModifierKeyEmitter.getInstance();\n    const useAlternativeActions = modifierKeyEmitter.keyStatus.altKey || ((isWindows || isLinux) && modifierKeyEmitter.keyStatus.shiftKey);\n    fillInActions(groups, target, useAlternativeActions, primaryGroup ? actionGroup => actionGroup === primaryGroup : actionGroup => actionGroup === 'navigation');\n}\nexport function createAndFillInActionBarActions(menu, options, target, primaryGroup, shouldInlineSubmenu, useSeparatorsInPrimaryActions) {\n    const groups = menu.getActions(options);\n    const isPrimaryAction = typeof primaryGroup === 'string' ? (actionGroup) => actionGroup === primaryGroup : primaryGroup;\n    // Action bars handle alternative actions on their own so the alternative actions should be ignored\n    fillInActions(groups, target, false, isPrimaryAction, shouldInlineSubmenu, useSeparatorsInPrimaryActions);\n}\nfunction fillInActions(groups, target, useAlternativeActions, isPrimaryAction = actionGroup => actionGroup === 'navigation', shouldInlineSubmenu = () => false, useSeparatorsInPrimaryActions = false) {\n    let primaryBucket;\n    let secondaryBucket;\n    if (Array.isArray(target)) {\n        primaryBucket = target;\n        secondaryBucket = target;\n    }\n    else {\n        primaryBucket = target.primary;\n        secondaryBucket = target.secondary;\n    }\n    const submenuInfo = new Set();\n    for (const [group, actions] of groups) {\n        let target;\n        if (isPrimaryAction(group)) {\n            target = primaryBucket;\n            if (target.length > 0 && useSeparatorsInPrimaryActions) {\n                target.push(new Separator());\n            }\n        }\n        else {\n            target = secondaryBucket;\n            if (target.length > 0) {\n                target.push(new Separator());\n            }\n        }\n        for (let action of actions) {\n            if (useAlternativeActions) {\n                action = action instanceof MenuItemAction && action.alt ? action.alt : action;\n            }\n            const newLen = target.push(action);\n            // keep submenu info for later inlining\n            if (action instanceof SubmenuAction) {\n                submenuInfo.add({ group, action, index: newLen - 1 });\n            }\n        }\n    }\n    // ask the outside if submenu should be inlined or not. only ask when\n    // there would be enough space\n    for (const { group, action, index } of submenuInfo) {\n        const target = isPrimaryAction(group) ? primaryBucket : secondaryBucket;\n        // inlining submenus with length 0 or 1 is easy,\n        // larger submenus need to be checked with the overall limit\n        const submenuActions = action.actions;\n        if (shouldInlineSubmenu(action, group, target.length)) {\n            target.splice(index, 1, ...submenuActions);\n        }\n    }\n}\nlet MenuEntryActionViewItem = class MenuEntryActionViewItem extends ActionViewItem {\n    constructor(action, options, _keybindingService, _notificationService, _contextKeyService, _themeService, _contextMenuService, _accessibilityService) {\n        super(undefined, action, { icon: !!(action.class || action.item.icon), label: !action.class && !action.item.icon, draggable: options === null || options === void 0 ? void 0 : options.draggable, keybinding: options === null || options === void 0 ? void 0 : options.keybinding, hoverDelegate: options === null || options === void 0 ? void 0 : options.hoverDelegate });\n        this._keybindingService = _keybindingService;\n        this._notificationService = _notificationService;\n        this._contextKeyService = _contextKeyService;\n        this._themeService = _themeService;\n        this._contextMenuService = _contextMenuService;\n        this._accessibilityService = _accessibilityService;\n        this._wantsAltCommand = false;\n        this._itemClassDispose = this._register(new MutableDisposable());\n        this._altKey = ModifierKeyEmitter.getInstance();\n    }\n    get _menuItemAction() {\n        return this._action;\n    }\n    get _commandAction() {\n        return this._wantsAltCommand && this._menuItemAction.alt || this._menuItemAction;\n    }\n    onClick(event) {\n        return __awaiter(this, void 0, void 0, function* () {\n            event.preventDefault();\n            event.stopPropagation();\n            try {\n                yield this.actionRunner.run(this._commandAction, this._context);\n            }\n            catch (err) {\n                this._notificationService.error(err);\n            }\n        });\n    }\n    render(container) {\n        super.render(container);\n        container.classList.add('menu-entry');\n        if (this.options.icon) {\n            this._updateItemClass(this._menuItemAction.item);\n        }\n        if (this._menuItemAction.alt) {\n            let isMouseOver = false;\n            const updateAltState = () => {\n                var _a;\n                const wantsAltCommand = !!((_a = this._menuItemAction.alt) === null || _a === void 0 ? void 0 : _a.enabled) &&\n                    (!this._accessibilityService.isMotionReduced() || isMouseOver) && (this._altKey.keyStatus.altKey ||\n                    (this._altKey.keyStatus.shiftKey && isMouseOver));\n                if (wantsAltCommand !== this._wantsAltCommand) {\n                    this._wantsAltCommand = wantsAltCommand;\n                    this.updateLabel();\n                    this.updateTooltip();\n                    this.updateClass();\n                }\n            };\n            this._register(this._altKey.event(updateAltState));\n            this._register(addDisposableListener(container, 'mouseleave', _ => {\n                isMouseOver = false;\n                updateAltState();\n            }));\n            this._register(addDisposableListener(container, 'mouseenter', _ => {\n                isMouseOver = true;\n                updateAltState();\n            }));\n            updateAltState();\n        }\n    }\n    updateLabel() {\n        if (this.options.label && this.label) {\n            this.label.textContent = this._commandAction.label;\n        }\n    }\n    getTooltip() {\n        var _a;\n        const keybinding = this._keybindingService.lookupKeybinding(this._commandAction.id, this._contextKeyService);\n        const keybindingLabel = keybinding && keybinding.getLabel();\n        const tooltip = this._commandAction.tooltip || this._commandAction.label;\n        let title = keybindingLabel\n            ? localize('titleAndKb', \"{0} ({1})\", tooltip, keybindingLabel)\n            : tooltip;\n        if (!this._wantsAltCommand && ((_a = this._menuItemAction.alt) === null || _a === void 0 ? void 0 : _a.enabled)) {\n            const altTooltip = this._menuItemAction.alt.tooltip || this._menuItemAction.alt.label;\n            const altKeybinding = this._keybindingService.lookupKeybinding(this._menuItemAction.alt.id, this._contextKeyService);\n            const altKeybindingLabel = altKeybinding && altKeybinding.getLabel();\n            const altTitleSection = altKeybindingLabel\n                ? localize('titleAndKb', \"{0} ({1})\", altTooltip, altKeybindingLabel)\n                : altTooltip;\n            title = localize('titleAndKbAndAlt', \"{0}\\n[{1}] {2}\", title, UILabelProvider.modifierLabels[OS].altKey, altTitleSection);\n        }\n        return title;\n    }\n    updateClass() {\n        if (this.options.icon) {\n            if (this._commandAction !== this._menuItemAction) {\n                if (this._menuItemAction.alt) {\n                    this._updateItemClass(this._menuItemAction.alt.item);\n                }\n            }\n            else {\n                this._updateItemClass(this._menuItemAction.item);\n            }\n        }\n    }\n    _updateItemClass(item) {\n        this._itemClassDispose.value = undefined;\n        const { element, label } = this;\n        if (!element || !label) {\n            return;\n        }\n        const icon = this._commandAction.checked && isICommandActionToggleInfo(item.toggled) && item.toggled.icon ? item.toggled.icon : item.icon;\n        if (!icon) {\n            return;\n        }\n        if (ThemeIcon.isThemeIcon(icon)) {\n            // theme icons\n            const iconClasses = ThemeIcon.asClassNameArray(icon);\n            label.classList.add(...iconClasses);\n            this._itemClassDispose.value = toDisposable(() => {\n                label.classList.remove(...iconClasses);\n            });\n        }\n        else {\n            // icon path/url - add special element with SVG-mask and icon color background\n            const svgUrl = isDark(this._themeService.getColorTheme().type)\n                ? asCSSUrl(icon.dark)\n                : asCSSUrl(icon.light);\n            const svgIcon = $('span');\n            svgIcon.style.webkitMask = svgIcon.style.mask = `${svgUrl} no-repeat 50% 50%`;\n            svgIcon.style.background = 'var(--vscode-icon-foreground)';\n            svgIcon.style.display = 'inline-block';\n            svgIcon.style.width = '100%';\n            svgIcon.style.height = '100%';\n            label.appendChild(svgIcon);\n            label.classList.add('icon');\n            this._itemClassDispose.value = combinedDisposable(toDisposable(() => {\n                label.classList.remove('icon');\n                reset(label);\n            }), this._themeService.onDidColorThemeChange(() => {\n                // refresh when the theme changes in case we go between dark <-> light\n                this.updateClass();\n            }));\n        }\n    }\n};\nMenuEntryActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, INotificationService),\n    __param(4, IContextKeyService),\n    __param(5, IThemeService),\n    __param(6, IContextMenuService),\n    __param(7, IAccessibilityService)\n], MenuEntryActionViewItem);\nexport { MenuEntryActionViewItem };\nlet SubmenuEntryActionViewItem = class SubmenuEntryActionViewItem extends DropdownMenuActionViewItem {\n    constructor(action, options, _keybindingService, _contextMenuService, _themeService) {\n        var _a, _b, _c;\n        const dropdownOptions = Object.assign(Object.assign({}, options), { menuAsChild: (_a = options === null || options === void 0 ? void 0 : options.menuAsChild) !== null && _a !== void 0 ? _a : false, classNames: (_b = options === null || options === void 0 ? void 0 : options.classNames) !== null && _b !== void 0 ? _b : (ThemeIcon.isThemeIcon(action.item.icon) ? ThemeIcon.asClassName(action.item.icon) : undefined), keybindingProvider: (_c = options === null || options === void 0 ? void 0 : options.keybindingProvider) !== null && _c !== void 0 ? _c : (action => _keybindingService.lookupKeybinding(action.id)) });\n        super(action, { getActions: () => action.actions }, _contextMenuService, dropdownOptions);\n        this._keybindingService = _keybindingService;\n        this._contextMenuService = _contextMenuService;\n        this._themeService = _themeService;\n    }\n    render(container) {\n        super.render(container);\n        assertType(this.element);\n        container.classList.add('menu-entry');\n        const action = this._action;\n        const { icon } = action.item;\n        if (icon && !ThemeIcon.isThemeIcon(icon)) {\n            this.element.classList.add('icon');\n            const setBackgroundImage = () => {\n                if (this.element) {\n                    this.element.style.backgroundImage = (isDark(this._themeService.getColorTheme().type)\n                        ? asCSSUrl(icon.dark)\n                        : asCSSUrl(icon.light));\n                }\n            };\n            setBackgroundImage();\n            this._register(this._themeService.onDidColorThemeChange(() => {\n                // refresh when the theme changes in case we go between dark <-> light\n                setBackgroundImage();\n            }));\n        }\n    }\n};\nSubmenuEntryActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, IContextMenuService),\n    __param(4, IThemeService)\n], SubmenuEntryActionViewItem);\nexport { SubmenuEntryActionViewItem };\nlet DropdownWithDefaultActionViewItem = class DropdownWithDefaultActionViewItem extends BaseActionViewItem {\n    constructor(submenuAction, options, _keybindingService, _notificationService, _contextMenuService, _menuService, _instaService, _storageService) {\n        var _a, _b, _c;\n        super(null, submenuAction);\n        this._keybindingService = _keybindingService;\n        this._notificationService = _notificationService;\n        this._contextMenuService = _contextMenuService;\n        this._menuService = _menuService;\n        this._instaService = _instaService;\n        this._storageService = _storageService;\n        this._container = null;\n        this._options = options;\n        this._storageKey = `${submenuAction.item.submenu.id}_lastActionId`;\n        // determine default action\n        let defaultAction;\n        const defaultActionId = (options === null || options === void 0 ? void 0 : options.persistLastActionId) ? _storageService.get(this._storageKey, 1 /* StorageScope.WORKSPACE */) : undefined;\n        if (defaultActionId) {\n            defaultAction = submenuAction.actions.find(a => defaultActionId === a.id);\n        }\n        if (!defaultAction) {\n            defaultAction = submenuAction.actions[0];\n        }\n        this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, defaultAction, { keybinding: this._getDefaultActionKeybindingLabel(defaultAction) });\n        const dropdownOptions = Object.assign(Object.assign({ keybindingProvider: action => this._keybindingService.lookupKeybinding(action.id) }, options), { menuAsChild: (_a = options === null || options === void 0 ? void 0 : options.menuAsChild) !== null && _a !== void 0 ? _a : true, classNames: (_b = options === null || options === void 0 ? void 0 : options.classNames) !== null && _b !== void 0 ? _b : ['codicon', 'codicon-chevron-down'], actionRunner: (_c = options === null || options === void 0 ? void 0 : options.actionRunner) !== null && _c !== void 0 ? _c : new ActionRunner() });\n        this._dropdown = new DropdownMenuActionViewItem(submenuAction, submenuAction.actions, this._contextMenuService, dropdownOptions);\n        this._dropdown.actionRunner.onDidRun((e) => {\n            if (e.action instanceof MenuItemAction) {\n                this.update(e.action);\n            }\n        });\n    }\n    update(lastAction) {\n        var _a;\n        if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.persistLastActionId) {\n            this._storageService.store(this._storageKey, lastAction.id, 1 /* StorageScope.WORKSPACE */, 1 /* StorageTarget.MACHINE */);\n        }\n        this._defaultAction.dispose();\n        this._defaultAction = this._instaService.createInstance(MenuEntryActionViewItem, lastAction, { keybinding: this._getDefaultActionKeybindingLabel(lastAction) });\n        this._defaultAction.actionRunner = new class extends ActionRunner {\n            runAction(action, context) {\n                return __awaiter(this, void 0, void 0, function* () {\n                    yield action.run(undefined);\n                });\n            }\n        }();\n        if (this._container) {\n            this._defaultAction.render(prepend(this._container, $('.action-container')));\n        }\n    }\n    _getDefaultActionKeybindingLabel(defaultAction) {\n        var _a;\n        let defaultActionKeybinding;\n        if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.renderKeybindingWithDefaultActionLabel) {\n            const kb = this._keybindingService.lookupKeybinding(defaultAction.id);\n            if (kb) {\n                defaultActionKeybinding = `(${kb.getLabel()})`;\n            }\n        }\n        return defaultActionKeybinding;\n    }\n    setActionContext(newContext) {\n        super.setActionContext(newContext);\n        this._defaultAction.setActionContext(newContext);\n        this._dropdown.setActionContext(newContext);\n    }\n    render(container) {\n        this._container = container;\n        super.render(this._container);\n        this._container.classList.add('monaco-dropdown-with-default');\n        const primaryContainer = $('.action-container');\n        this._defaultAction.render(append(this._container, primaryContainer));\n        this._register(addDisposableListener(primaryContainer, EventType.KEY_DOWN, (e) => {\n            const event = new StandardKeyboardEvent(e);\n            if (event.equals(17 /* KeyCode.RightArrow */)) {\n                this._defaultAction.element.tabIndex = -1;\n                this._dropdown.focus();\n                event.stopPropagation();\n            }\n        }));\n        const dropdownContainer = $('.dropdown-action-container');\n        this._dropdown.render(append(this._container, dropdownContainer));\n        this._register(addDisposableListener(dropdownContainer, EventType.KEY_DOWN, (e) => {\n            var _a;\n            const event = new StandardKeyboardEvent(e);\n            if (event.equals(15 /* KeyCode.LeftArrow */)) {\n                this._defaultAction.element.tabIndex = 0;\n                this._dropdown.setFocusable(false);\n                (_a = this._defaultAction.element) === null || _a === void 0 ? void 0 : _a.focus();\n                event.stopPropagation();\n            }\n        }));\n    }\n    focus(fromRight) {\n        if (fromRight) {\n            this._dropdown.focus();\n        }\n        else {\n            this._defaultAction.element.tabIndex = 0;\n            this._defaultAction.element.focus();\n        }\n    }\n    blur() {\n        this._defaultAction.element.tabIndex = -1;\n        this._dropdown.blur();\n        this._container.blur();\n    }\n    setFocusable(focusable) {\n        if (focusable) {\n            this._defaultAction.element.tabIndex = 0;\n        }\n        else {\n            this._defaultAction.element.tabIndex = -1;\n            this._dropdown.setFocusable(false);\n        }\n    }\n    dispose() {\n        this._defaultAction.dispose();\n        this._dropdown.dispose();\n        super.dispose();\n    }\n};\nDropdownWithDefaultActionViewItem = __decorate([\n    __param(2, IKeybindingService),\n    __param(3, INotificationService),\n    __param(4, IContextMenuService),\n    __param(5, IMenuService),\n    __param(6, IInstantiationService),\n    __param(7, IStorageService)\n], DropdownWithDefaultActionViewItem);\nexport { DropdownWithDefaultActionViewItem };\nlet SubmenuEntrySelectActionViewItem = class SubmenuEntrySelectActionViewItem extends SelectActionViewItem {\n    constructor(action, contextViewService) {\n        super(null, action, action.actions.map(a => ({\n            text: a.id === Separator.ID ? '\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500\\u2500' : a.label,\n            isDisabled: !a.enabled,\n        })), 0, contextViewService, defaultSelectBoxStyles, { ariaLabel: action.tooltip, optionsAsChildren: true });\n        this.select(Math.max(0, action.actions.findIndex(a => a.checked)));\n    }\n    render(container) {\n        super.render(container);\n        container.style.borderColor = asCssVariable(selectBorder);\n    }\n    runAction(option, index) {\n        const action = this.action.actions[index];\n        if (action) {\n            this.actionRunner.run(action);\n        }\n    }\n};\nSubmenuEntrySelectActionViewItem = __decorate([\n    __param(1, IContextViewService)\n], SubmenuEntrySelectActionViewItem);\n/**\n * Creates action view items for menu actions or submenu actions.\n */\nexport function createActionViewItem(instaService, action, options) {\n    if (action instanceof MenuItemAction) {\n        return instaService.createInstance(MenuEntryActionViewItem, action, options);\n    }\n    else if (action instanceof SubmenuItemAction) {\n        if (action.item.isSelection) {\n            return instaService.createInstance(SubmenuEntrySelectActionViewItem, action);\n        }\n        else {\n            if (action.item.rememberDefaultAction) {\n                return instaService.createInstance(DropdownWithDefaultActionViewItem, action, Object.assign(Object.assign({}, options), { persistLastActionId: true }));\n            }\n            else {\n                return instaService.createInstance(SubmenuEntryActionViewItem, action, options);\n            }\n        }\n    }\n    else {\n        return undefined;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function isICommandActionToggleInfo(thing) {\n    return thing ? thing.condition !== undefined : false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { addDisposableListener } from '../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { ToolBar } from '../../../base/browser/ui/toolbar/toolbar.js';\nimport { Separator, toAction } from '../../../base/common/actions.js';\nimport { coalesceInPlace } from '../../../base/common/arrays.js';\nimport { intersection } from '../../../base/common/collections.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { localize } from '../../../nls.js';\nimport { IMenuService, MenuItemAction, SubmenuItemAction } from '../common/actions.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\n/**\n * The `WorkbenchToolBar` does\n * - support hiding of menu items\n * - lookup keybindings for each actions automatically\n * - send `workbenchActionExecuted`-events for each action\n *\n * See {@link MenuWorkbenchToolBar} for a toolbar that is backed by a menu.\n */\nlet WorkbenchToolBar = class WorkbenchToolBar extends ToolBar {\n    constructor(container, _options, _menuService, _contextKeyService, _contextMenuService, keybindingService, telemetryService) {\n        super(container, _contextMenuService, Object.assign(Object.assign({ \n            // defaults\n            getKeyBinding: (action) => { var _a; return (_a = keybindingService.lookupKeybinding(action.id)) !== null && _a !== void 0 ? _a : undefined; } }, _options), { \n            // mandatory (overide options)\n            allowContextMenu: true, skipTelemetry: typeof (_options === null || _options === void 0 ? void 0 : _options.telemetrySource) === 'string' }));\n        this._options = _options;\n        this._menuService = _menuService;\n        this._contextKeyService = _contextKeyService;\n        this._contextMenuService = _contextMenuService;\n        this._sessionDisposables = this._store.add(new DisposableStore());\n        // telemetry logic\n        const telemetrySource = _options === null || _options === void 0 ? void 0 : _options.telemetrySource;\n        if (telemetrySource) {\n            this._store.add(this.actionBar.onDidRun(e => telemetryService.publicLog2('workbenchActionExecuted', { id: e.action.id, from: telemetrySource })));\n        }\n    }\n    setActions(_primary, _secondary = [], menuIds) {\n        var _a, _b, _c;\n        this._sessionDisposables.clear();\n        const primary = _primary.slice(); // for hiding and overflow we set some items to undefined\n        const secondary = _secondary.slice();\n        const toggleActions = [];\n        let toggleActionsCheckedCount = 0;\n        const extraSecondary = [];\n        let someAreHidden = false;\n        // unless disabled, move all hidden items to secondary group or ignore them\n        if (((_a = this._options) === null || _a === void 0 ? void 0 : _a.hiddenItemStrategy) !== -1 /* HiddenItemStrategy.NoHide */) {\n            for (let i = 0; i < primary.length; i++) {\n                const action = primary[i];\n                if (!(action instanceof MenuItemAction) && !(action instanceof SubmenuItemAction)) {\n                    // console.warn(`Action ${action.id}/${action.label} is not a MenuItemAction`);\n                    continue;\n                }\n                if (!action.hideActions) {\n                    continue;\n                }\n                // collect all toggle actions\n                toggleActions.push(action.hideActions.toggle);\n                if (action.hideActions.toggle.checked) {\n                    toggleActionsCheckedCount++;\n                }\n                // hidden items move into overflow or ignore\n                if (action.hideActions.isHidden) {\n                    someAreHidden = true;\n                    primary[i] = undefined;\n                    if (((_b = this._options) === null || _b === void 0 ? void 0 : _b.hiddenItemStrategy) !== 0 /* HiddenItemStrategy.Ignore */) {\n                        extraSecondary[i] = action;\n                    }\n                }\n            }\n        }\n        // count for max\n        if (((_c = this._options) === null || _c === void 0 ? void 0 : _c.overflowBehavior) !== undefined) {\n            const exemptedIds = intersection(new Set(this._options.overflowBehavior.exempted), Iterable.map(primary, a => a === null || a === void 0 ? void 0 : a.id));\n            const maxItems = this._options.overflowBehavior.maxItems - exemptedIds.size;\n            let count = 0;\n            for (let i = 0; i < primary.length; i++) {\n                const action = primary[i];\n                if (!action) {\n                    continue;\n                }\n                count++;\n                if (exemptedIds.has(action.id)) {\n                    continue;\n                }\n                if (count >= maxItems) {\n                    primary[i] = undefined;\n                    extraSecondary[i] = action;\n                }\n            }\n        }\n        // coalesce turns Array<IAction|undefined> into IAction[]\n        coalesceInPlace(primary);\n        coalesceInPlace(extraSecondary);\n        super.setActions(primary, Separator.join(extraSecondary, secondary));\n        // add context menu for toggle actions\n        if (toggleActions.length > 0) {\n            this._sessionDisposables.add(addDisposableListener(this.getElement(), 'contextmenu', e => {\n                var _a, _b, _c, _d, _e;\n                const event = new StandardMouseEvent(e);\n                const action = this.getItemAction(event.target);\n                if (!(action)) {\n                    return;\n                }\n                event.preventDefault();\n                event.stopPropagation();\n                let noHide = false;\n                // last item cannot be hidden when using ignore strategy\n                if (toggleActionsCheckedCount === 1 && ((_a = this._options) === null || _a === void 0 ? void 0 : _a.hiddenItemStrategy) === 0 /* HiddenItemStrategy.Ignore */) {\n                    noHide = true;\n                    for (let i = 0; i < toggleActions.length; i++) {\n                        if (toggleActions[i].checked) {\n                            toggleActions[i] = toAction({\n                                id: action.id,\n                                label: action.label,\n                                checked: true,\n                                enabled: false,\n                                run() { }\n                            });\n                            break; // there is only one\n                        }\n                    }\n                }\n                // add \"hide foo\" actions\n                let hideAction;\n                if (!noHide && (action instanceof MenuItemAction || action instanceof SubmenuItemAction)) {\n                    if (!action.hideActions) {\n                        // no context menu for MenuItemAction instances that support no hiding\n                        // those are fake actions and need to be cleaned up\n                        return;\n                    }\n                    hideAction = action.hideActions.hide;\n                }\n                else {\n                    hideAction = toAction({\n                        id: 'label',\n                        label: localize('hide', \"Hide\"),\n                        enabled: false,\n                        run() { }\n                    });\n                }\n                const actions = Separator.join([hideAction], toggleActions);\n                // add \"Reset Menu\" action\n                if (((_b = this._options) === null || _b === void 0 ? void 0 : _b.resetMenu) && !menuIds) {\n                    menuIds = [this._options.resetMenu];\n                }\n                if (someAreHidden && menuIds) {\n                    actions.push(new Separator());\n                    actions.push(toAction({\n                        id: 'resetThisMenu',\n                        label: localize('resetThisMenu', \"Reset Menu\"),\n                        run: () => this._menuService.resetHiddenStates(menuIds)\n                    }));\n                }\n                this._contextMenuService.showContextMenu({\n                    getAnchor: () => event,\n                    getActions: () => actions,\n                    // add context menu actions (iff appicable)\n                    menuId: (_c = this._options) === null || _c === void 0 ? void 0 : _c.contextMenu,\n                    menuActionOptions: Object.assign({ renderShortTitle: true }, (_d = this._options) === null || _d === void 0 ? void 0 : _d.menuOptions),\n                    skipTelemetry: typeof ((_e = this._options) === null || _e === void 0 ? void 0 : _e.telemetrySource) === 'string',\n                    contextKeyService: this._contextKeyService,\n                });\n            }));\n        }\n    }\n};\nWorkbenchToolBar = __decorate([\n    __param(2, IMenuService),\n    __param(3, IContextKeyService),\n    __param(4, IContextMenuService),\n    __param(5, IKeybindingService),\n    __param(6, ITelemetryService)\n], WorkbenchToolBar);\nexport { WorkbenchToolBar };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nvar MenuItemAction_1;\nimport { SubmenuAction } from '../../../base/common/actions.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { MicrotaskEmitter } from '../../../base/common/event.js';\nimport { DisposableStore, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { CommandsRegistry, ICommandService } from '../../commands/common/commands.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../keybinding/common/keybindingsRegistry.js';\nexport function isIMenuItem(item) {\n    return item.command !== undefined;\n}\nexport function isISubmenuItem(item) {\n    return item.submenu !== undefined;\n}\nexport class MenuId {\n    /**\n     * Create a new `MenuId` with the unique identifier. Will throw if a menu\n     * with the identifier already exists, use `MenuId.for(ident)` or a unique\n     * identifier\n     */\n    constructor(identifier) {\n        if (MenuId._instances.has(identifier)) {\n            throw new TypeError(`MenuId with identifier '${identifier}' already exists. Use MenuId.for(ident) or a unique identifier`);\n        }\n        MenuId._instances.set(identifier, this);\n        this.id = identifier;\n    }\n}\nMenuId._instances = new Map();\nMenuId.CommandPalette = new MenuId('CommandPalette');\nMenuId.DebugBreakpointsContext = new MenuId('DebugBreakpointsContext');\nMenuId.DebugCallStackContext = new MenuId('DebugCallStackContext');\nMenuId.DebugConsoleContext = new MenuId('DebugConsoleContext');\nMenuId.DebugVariablesContext = new MenuId('DebugVariablesContext');\nMenuId.DebugWatchContext = new MenuId('DebugWatchContext');\nMenuId.DebugToolBar = new MenuId('DebugToolBar');\nMenuId.DebugToolBarStop = new MenuId('DebugToolBarStop');\nMenuId.EditorContext = new MenuId('EditorContext');\nMenuId.SimpleEditorContext = new MenuId('SimpleEditorContext');\nMenuId.EditorContent = new MenuId('EditorContent');\nMenuId.EditorLineNumberContext = new MenuId('EditorLineNumberContext');\nMenuId.EditorContextCopy = new MenuId('EditorContextCopy');\nMenuId.EditorContextPeek = new MenuId('EditorContextPeek');\nMenuId.EditorContextShare = new MenuId('EditorContextShare');\nMenuId.EditorTitle = new MenuId('EditorTitle');\nMenuId.EditorTitleRun = new MenuId('EditorTitleRun');\nMenuId.EditorTitleContext = new MenuId('EditorTitleContext');\nMenuId.EditorTitleContextShare = new MenuId('EditorTitleContextShare');\nMenuId.EmptyEditorGroup = new MenuId('EmptyEditorGroup');\nMenuId.EmptyEditorGroupContext = new MenuId('EmptyEditorGroupContext');\nMenuId.EditorTabsBarContext = new MenuId('EditorTabsBarContext');\nMenuId.ExplorerContext = new MenuId('ExplorerContext');\nMenuId.ExplorerContextShare = new MenuId('ExplorerContextShare');\nMenuId.ExtensionContext = new MenuId('ExtensionContext');\nMenuId.GlobalActivity = new MenuId('GlobalActivity');\nMenuId.CommandCenter = new MenuId('CommandCenter');\nMenuId.CommandCenterCenter = new MenuId('CommandCenterCenter');\nMenuId.LayoutControlMenuSubmenu = new MenuId('LayoutControlMenuSubmenu');\nMenuId.LayoutControlMenu = new MenuId('LayoutControlMenu');\nMenuId.MenubarMainMenu = new MenuId('MenubarMainMenu');\nMenuId.MenubarAppearanceMenu = new MenuId('MenubarAppearanceMenu');\nMenuId.MenubarDebugMenu = new MenuId('MenubarDebugMenu');\nMenuId.MenubarEditMenu = new MenuId('MenubarEditMenu');\nMenuId.MenubarCopy = new MenuId('MenubarCopy');\nMenuId.MenubarFileMenu = new MenuId('MenubarFileMenu');\nMenuId.MenubarGoMenu = new MenuId('MenubarGoMenu');\nMenuId.MenubarHelpMenu = new MenuId('MenubarHelpMenu');\nMenuId.MenubarLayoutMenu = new MenuId('MenubarLayoutMenu');\nMenuId.MenubarNewBreakpointMenu = new MenuId('MenubarNewBreakpointMenu');\nMenuId.PanelAlignmentMenu = new MenuId('PanelAlignmentMenu');\nMenuId.PanelPositionMenu = new MenuId('PanelPositionMenu');\nMenuId.MenubarPreferencesMenu = new MenuId('MenubarPreferencesMenu');\nMenuId.MenubarRecentMenu = new MenuId('MenubarRecentMenu');\nMenuId.MenubarSelectionMenu = new MenuId('MenubarSelectionMenu');\nMenuId.MenubarShare = new MenuId('MenubarShare');\nMenuId.MenubarSwitchEditorMenu = new MenuId('MenubarSwitchEditorMenu');\nMenuId.MenubarSwitchGroupMenu = new MenuId('MenubarSwitchGroupMenu');\nMenuId.MenubarTerminalMenu = new MenuId('MenubarTerminalMenu');\nMenuId.MenubarViewMenu = new MenuId('MenubarViewMenu');\nMenuId.MenubarHomeMenu = new MenuId('MenubarHomeMenu');\nMenuId.OpenEditorsContext = new MenuId('OpenEditorsContext');\nMenuId.OpenEditorsContextShare = new MenuId('OpenEditorsContextShare');\nMenuId.ProblemsPanelContext = new MenuId('ProblemsPanelContext');\nMenuId.SCMChangeContext = new MenuId('SCMChangeContext');\nMenuId.SCMResourceContext = new MenuId('SCMResourceContext');\nMenuId.SCMResourceContextShare = new MenuId('SCMResourceContextShare');\nMenuId.SCMResourceFolderContext = new MenuId('SCMResourceFolderContext');\nMenuId.SCMResourceGroupContext = new MenuId('SCMResourceGroupContext');\nMenuId.SCMSourceControl = new MenuId('SCMSourceControl');\nMenuId.SCMTitle = new MenuId('SCMTitle');\nMenuId.SearchContext = new MenuId('SearchContext');\nMenuId.SearchActionMenu = new MenuId('SearchActionContext');\nMenuId.StatusBarWindowIndicatorMenu = new MenuId('StatusBarWindowIndicatorMenu');\nMenuId.StatusBarRemoteIndicatorMenu = new MenuId('StatusBarRemoteIndicatorMenu');\nMenuId.StickyScrollContext = new MenuId('StickyScrollContext');\nMenuId.TestItem = new MenuId('TestItem');\nMenuId.TestItemGutter = new MenuId('TestItemGutter');\nMenuId.TestMessageContext = new MenuId('TestMessageContext');\nMenuId.TestMessageContent = new MenuId('TestMessageContent');\nMenuId.TestPeekElement = new MenuId('TestPeekElement');\nMenuId.TestPeekTitle = new MenuId('TestPeekTitle');\nMenuId.TouchBarContext = new MenuId('TouchBarContext');\nMenuId.TitleBarContext = new MenuId('TitleBarContext');\nMenuId.TitleBarTitleContext = new MenuId('TitleBarTitleContext');\nMenuId.TunnelContext = new MenuId('TunnelContext');\nMenuId.TunnelPrivacy = new MenuId('TunnelPrivacy');\nMenuId.TunnelProtocol = new MenuId('TunnelProtocol');\nMenuId.TunnelPortInline = new MenuId('TunnelInline');\nMenuId.TunnelTitle = new MenuId('TunnelTitle');\nMenuId.TunnelLocalAddressInline = new MenuId('TunnelLocalAddressInline');\nMenuId.TunnelOriginInline = new MenuId('TunnelOriginInline');\nMenuId.ViewItemContext = new MenuId('ViewItemContext');\nMenuId.ViewContainerTitle = new MenuId('ViewContainerTitle');\nMenuId.ViewContainerTitleContext = new MenuId('ViewContainerTitleContext');\nMenuId.ViewTitle = new MenuId('ViewTitle');\nMenuId.ViewTitleContext = new MenuId('ViewTitleContext');\nMenuId.CommentEditorActions = new MenuId('CommentEditorActions');\nMenuId.CommentThreadTitle = new MenuId('CommentThreadTitle');\nMenuId.CommentThreadActions = new MenuId('CommentThreadActions');\nMenuId.CommentThreadAdditionalActions = new MenuId('CommentThreadAdditionalActions');\nMenuId.CommentThreadTitleContext = new MenuId('CommentThreadTitleContext');\nMenuId.CommentThreadCommentContext = new MenuId('CommentThreadCommentContext');\nMenuId.CommentTitle = new MenuId('CommentTitle');\nMenuId.CommentActions = new MenuId('CommentActions');\nMenuId.InteractiveToolbar = new MenuId('InteractiveToolbar');\nMenuId.InteractiveCellTitle = new MenuId('InteractiveCellTitle');\nMenuId.InteractiveCellDelete = new MenuId('InteractiveCellDelete');\nMenuId.InteractiveCellExecute = new MenuId('InteractiveCellExecute');\nMenuId.InteractiveInputExecute = new MenuId('InteractiveInputExecute');\nMenuId.NotebookToolbar = new MenuId('NotebookToolbar');\nMenuId.NotebookStickyScrollContext = new MenuId('NotebookStickyScrollContext');\nMenuId.NotebookCellTitle = new MenuId('NotebookCellTitle');\nMenuId.NotebookCellDelete = new MenuId('NotebookCellDelete');\nMenuId.NotebookCellInsert = new MenuId('NotebookCellInsert');\nMenuId.NotebookCellBetween = new MenuId('NotebookCellBetween');\nMenuId.NotebookCellListTop = new MenuId('NotebookCellTop');\nMenuId.NotebookCellExecute = new MenuId('NotebookCellExecute');\nMenuId.NotebookCellExecutePrimary = new MenuId('NotebookCellExecutePrimary');\nMenuId.NotebookDiffCellInputTitle = new MenuId('NotebookDiffCellInputTitle');\nMenuId.NotebookDiffCellMetadataTitle = new MenuId('NotebookDiffCellMetadataTitle');\nMenuId.NotebookDiffCellOutputsTitle = new MenuId('NotebookDiffCellOutputsTitle');\nMenuId.NotebookOutputToolbar = new MenuId('NotebookOutputToolbar');\nMenuId.NotebookEditorLayoutConfigure = new MenuId('NotebookEditorLayoutConfigure');\nMenuId.NotebookKernelSource = new MenuId('NotebookKernelSource');\nMenuId.BulkEditTitle = new MenuId('BulkEditTitle');\nMenuId.BulkEditContext = new MenuId('BulkEditContext');\nMenuId.TimelineItemContext = new MenuId('TimelineItemContext');\nMenuId.TimelineTitle = new MenuId('TimelineTitle');\nMenuId.TimelineTitleContext = new MenuId('TimelineTitleContext');\nMenuId.TimelineFilterSubMenu = new MenuId('TimelineFilterSubMenu');\nMenuId.AccountsContext = new MenuId('AccountsContext');\nMenuId.PanelTitle = new MenuId('PanelTitle');\nMenuId.AuxiliaryBarTitle = new MenuId('AuxiliaryBarTitle');\nMenuId.TerminalInstanceContext = new MenuId('TerminalInstanceContext');\nMenuId.TerminalEditorInstanceContext = new MenuId('TerminalEditorInstanceContext');\nMenuId.TerminalNewDropdownContext = new MenuId('TerminalNewDropdownContext');\nMenuId.TerminalTabContext = new MenuId('TerminalTabContext');\nMenuId.TerminalTabEmptyAreaContext = new MenuId('TerminalTabEmptyAreaContext');\nMenuId.WebviewContext = new MenuId('WebviewContext');\nMenuId.InlineCompletionsActions = new MenuId('InlineCompletionsActions');\nMenuId.NewFile = new MenuId('NewFile');\nMenuId.MergeInput1Toolbar = new MenuId('MergeToolbar1Toolbar');\nMenuId.MergeInput2Toolbar = new MenuId('MergeToolbar2Toolbar');\nMenuId.MergeBaseToolbar = new MenuId('MergeBaseToolbar');\nMenuId.MergeInputResultToolbar = new MenuId('MergeToolbarResultToolbar');\nMenuId.InlineSuggestionToolbar = new MenuId('InlineSuggestionToolbar');\nMenuId.ChatContext = new MenuId('ChatContext');\nMenuId.ChatCodeBlock = new MenuId('ChatCodeblock');\nMenuId.ChatMessageTitle = new MenuId('ChatMessageTitle');\nMenuId.ChatExecute = new MenuId('ChatExecute');\nMenuId.ChatInputSide = new MenuId('ChatInputSide');\nMenuId.AccessibleView = new MenuId('AccessibleView');\nexport const IMenuService = createDecorator('menuService');\nclass MenuRegistryChangeEvent {\n    static for(id) {\n        let value = this._all.get(id);\n        if (!value) {\n            value = new MenuRegistryChangeEvent(id);\n            this._all.set(id, value);\n        }\n        return value;\n    }\n    static merge(events) {\n        const ids = new Set();\n        for (const item of events) {\n            if (item instanceof MenuRegistryChangeEvent) {\n                ids.add(item.id);\n            }\n        }\n        return ids;\n    }\n    constructor(id) {\n        this.id = id;\n        this.has = candidate => candidate === id;\n    }\n}\nMenuRegistryChangeEvent._all = new Map();\nexport const MenuRegistry = new class {\n    constructor() {\n        this._commands = new Map();\n        this._menuItems = new Map();\n        this._onDidChangeMenu = new MicrotaskEmitter({\n            merge: MenuRegistryChangeEvent.merge\n        });\n        this.onDidChangeMenu = this._onDidChangeMenu.event;\n    }\n    addCommand(command) {\n        this._commands.set(command.id, command);\n        this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n        return toDisposable(() => {\n            if (this._commands.delete(command.id)) {\n                this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(MenuId.CommandPalette));\n            }\n        });\n    }\n    getCommand(id) {\n        return this._commands.get(id);\n    }\n    getCommands() {\n        const map = new Map();\n        this._commands.forEach((value, key) => map.set(key, value));\n        return map;\n    }\n    appendMenuItem(id, item) {\n        let list = this._menuItems.get(id);\n        if (!list) {\n            list = new LinkedList();\n            this._menuItems.set(id, list);\n        }\n        const rm = list.push(item);\n        this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n        return toDisposable(() => {\n            rm();\n            this._onDidChangeMenu.fire(MenuRegistryChangeEvent.for(id));\n        });\n    }\n    appendMenuItems(items) {\n        const result = new DisposableStore();\n        for (const { id, item } of items) {\n            result.add(this.appendMenuItem(id, item));\n        }\n        return result;\n    }\n    getMenuItems(id) {\n        let result;\n        if (this._menuItems.has(id)) {\n            result = [...this._menuItems.get(id)];\n        }\n        else {\n            result = [];\n        }\n        if (id === MenuId.CommandPalette) {\n            // CommandPalette is special because it shows\n            // all commands by default\n            this._appendImplicitItems(result);\n        }\n        return result;\n    }\n    _appendImplicitItems(result) {\n        const set = new Set();\n        for (const item of result) {\n            if (isIMenuItem(item)) {\n                set.add(item.command.id);\n                if (item.alt) {\n                    set.add(item.alt.id);\n                }\n            }\n        }\n        this._commands.forEach((command, id) => {\n            if (!set.has(id)) {\n                result.push({ command });\n            }\n        });\n    }\n};\nexport class SubmenuItemAction extends SubmenuAction {\n    constructor(item, hideActions, actions) {\n        super(`submenuitem.${item.submenu.id}`, typeof item.title === 'string' ? item.title : item.title.value, actions, 'submenu');\n        this.item = item;\n        this.hideActions = hideActions;\n    }\n}\n// implements IAction, does NOT extend Action, so that no one\n// subscribes to events of Action or modified properties\nlet MenuItemAction = MenuItemAction_1 = class MenuItemAction {\n    static label(action, options) {\n        return (options === null || options === void 0 ? void 0 : options.renderShortTitle) && action.shortTitle\n            ? (typeof action.shortTitle === 'string' ? action.shortTitle : action.shortTitle.value)\n            : (typeof action.title === 'string' ? action.title : action.title.value);\n    }\n    constructor(item, alt, options, hideActions, contextKeyService, _commandService) {\n        var _a, _b;\n        this.hideActions = hideActions;\n        this._commandService = _commandService;\n        this.id = item.id;\n        this.label = MenuItemAction_1.label(item, options);\n        this.tooltip = (_b = (typeof item.tooltip === 'string' ? item.tooltip : (_a = item.tooltip) === null || _a === void 0 ? void 0 : _a.value)) !== null && _b !== void 0 ? _b : '';\n        this.enabled = !item.precondition || contextKeyService.contextMatchesRules(item.precondition);\n        this.checked = undefined;\n        let icon;\n        if (item.toggled) {\n            const toggled = (item.toggled.condition ? item.toggled : { condition: item.toggled });\n            this.checked = contextKeyService.contextMatchesRules(toggled.condition);\n            if (this.checked && toggled.tooltip) {\n                this.tooltip = typeof toggled.tooltip === 'string' ? toggled.tooltip : toggled.tooltip.value;\n            }\n            if (this.checked && ThemeIcon.isThemeIcon(toggled.icon)) {\n                icon = toggled.icon;\n            }\n            if (this.checked && toggled.title) {\n                this.label = typeof toggled.title === 'string' ? toggled.title : toggled.title.value;\n            }\n        }\n        if (!icon) {\n            icon = ThemeIcon.isThemeIcon(item.icon) ? item.icon : undefined;\n        }\n        this.item = item;\n        this.alt = alt ? new MenuItemAction_1(alt, undefined, options, hideActions, contextKeyService, _commandService) : undefined;\n        this._options = options;\n        this.class = icon && ThemeIcon.asClassName(icon);\n    }\n    run(...args) {\n        var _a, _b;\n        let runArgs = [];\n        if ((_a = this._options) === null || _a === void 0 ? void 0 : _a.arg) {\n            runArgs = [...runArgs, this._options.arg];\n        }\n        if ((_b = this._options) === null || _b === void 0 ? void 0 : _b.shouldForwardArgs) {\n            runArgs = [...runArgs, ...args];\n        }\n        return this._commandService.executeCommand(this.id, ...runArgs);\n    }\n};\nMenuItemAction = MenuItemAction_1 = __decorate([\n    __param(4, IContextKeyService),\n    __param(5, ICommandService)\n], MenuItemAction);\nexport { MenuItemAction };\nexport class Action2 {\n    constructor(desc) {\n        this.desc = desc;\n    }\n}\nexport function registerAction2(ctor) {\n    const disposables = new DisposableStore();\n    const action = new ctor();\n    const _a = action.desc, { f1, menu, keybinding, description } = _a, command = __rest(_a, [\"f1\", \"menu\", \"keybinding\", \"description\"]);\n    // command\n    disposables.add(CommandsRegistry.registerCommand({\n        id: command.id,\n        handler: (accessor, ...args) => action.run(accessor, ...args),\n        description: description,\n    }));\n    // menu\n    if (Array.isArray(menu)) {\n        for (const item of menu) {\n            disposables.add(MenuRegistry.appendMenuItem(item.id, Object.assign({ command: Object.assign(Object.assign({}, command), { precondition: item.precondition === null ? undefined : command.precondition }) }, item)));\n        }\n    }\n    else if (menu) {\n        disposables.add(MenuRegistry.appendMenuItem(menu.id, Object.assign({ command: Object.assign(Object.assign({}, command), { precondition: menu.precondition === null ? undefined : command.precondition }) }, menu)));\n    }\n    if (f1) {\n        disposables.add(MenuRegistry.appendMenuItem(MenuId.CommandPalette, { command, when: command.precondition }));\n        disposables.add(MenuRegistry.addCommand(command));\n    }\n    // keybinding\n    if (Array.isArray(keybinding)) {\n        for (const item of keybinding) {\n            disposables.add(KeybindingsRegistry.registerKeybindingRule(Object.assign(Object.assign({}, item), { id: command.id, when: command.precondition ? ContextKeyExpr.and(command.precondition, item.when) : item.when })));\n        }\n    }\n    else if (keybinding) {\n        disposables.add(KeybindingsRegistry.registerKeybindingRule(Object.assign(Object.assign({}, keybinding), { id: command.id, when: command.precondition ? ContextKeyExpr.and(command.precondition, keybinding.when) : keybinding.when })));\n    }\n    return disposables;\n}\n//#endregion\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar PersistedMenuHideState_1, MenuInfo_1;\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { DebounceEmitter, Emitter } from '../../../base/common/event.js';\nimport { DisposableStore } from '../../../base/common/lifecycle.js';\nimport { isIMenuItem, isISubmenuItem, MenuItemAction, MenuRegistry, SubmenuItemAction } from './actions.js';\nimport { ICommandService } from '../../commands/common/commands.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { Separator, toAction } from '../../../base/common/actions.js';\nimport { IStorageService } from '../../storage/common/storage.js';\nimport { removeFastWithoutKeepingOrder } from '../../../base/common/arrays.js';\nimport { localize } from '../../../nls.js';\nlet MenuService = class MenuService {\n    constructor(_commandService, storageService) {\n        this._commandService = _commandService;\n        this._hiddenStates = new PersistedMenuHideState(storageService);\n    }\n    createMenu(id, contextKeyService, options) {\n        return new MenuImpl(id, this._hiddenStates, Object.assign({ emitEventsForSubmenuChanges: false, eventDebounceDelay: 50 }, options), this._commandService, contextKeyService);\n    }\n    resetHiddenStates(ids) {\n        this._hiddenStates.reset(ids);\n    }\n};\nMenuService = __decorate([\n    __param(0, ICommandService),\n    __param(1, IStorageService)\n], MenuService);\nexport { MenuService };\nlet PersistedMenuHideState = PersistedMenuHideState_1 = class PersistedMenuHideState {\n    constructor(_storageService) {\n        this._storageService = _storageService;\n        this._disposables = new DisposableStore();\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._ignoreChangeEvent = false;\n        this._hiddenByDefaultCache = new Map();\n        try {\n            const raw = _storageService.get(PersistedMenuHideState_1._key, 0 /* StorageScope.PROFILE */, '{}');\n            this._data = JSON.parse(raw);\n        }\n        catch (err) {\n            this._data = Object.create(null);\n        }\n        this._disposables.add(_storageService.onDidChangeValue(0 /* StorageScope.PROFILE */, PersistedMenuHideState_1._key, this._disposables)(() => {\n            if (!this._ignoreChangeEvent) {\n                try {\n                    const raw = _storageService.get(PersistedMenuHideState_1._key, 0 /* StorageScope.PROFILE */, '{}');\n                    this._data = JSON.parse(raw);\n                }\n                catch (err) {\n                    console.log('FAILED to read storage after UPDATE', err);\n                }\n            }\n            this._onDidChange.fire();\n        }));\n    }\n    dispose() {\n        this._onDidChange.dispose();\n        this._disposables.dispose();\n    }\n    _isHiddenByDefault(menu, commandId) {\n        var _a;\n        return (_a = this._hiddenByDefaultCache.get(`${menu.id}/${commandId}`)) !== null && _a !== void 0 ? _a : false;\n    }\n    setDefaultState(menu, commandId, hidden) {\n        this._hiddenByDefaultCache.set(`${menu.id}/${commandId}`, hidden);\n    }\n    isHidden(menu, commandId) {\n        var _a, _b;\n        const hiddenByDefault = this._isHiddenByDefault(menu, commandId);\n        const state = (_b = (_a = this._data[menu.id]) === null || _a === void 0 ? void 0 : _a.includes(commandId)) !== null && _b !== void 0 ? _b : false;\n        return hiddenByDefault ? !state : state;\n    }\n    updateHidden(menu, commandId, hidden) {\n        const hiddenByDefault = this._isHiddenByDefault(menu, commandId);\n        if (hiddenByDefault) {\n            hidden = !hidden;\n        }\n        const entries = this._data[menu.id];\n        if (!hidden) {\n            // remove and cleanup\n            if (entries) {\n                const idx = entries.indexOf(commandId);\n                if (idx >= 0) {\n                    removeFastWithoutKeepingOrder(entries, idx);\n                }\n                if (entries.length === 0) {\n                    delete this._data[menu.id];\n                }\n            }\n        }\n        else {\n            // add unless already added\n            if (!entries) {\n                this._data[menu.id] = [commandId];\n            }\n            else {\n                const idx = entries.indexOf(commandId);\n                if (idx < 0) {\n                    entries.push(commandId);\n                }\n            }\n        }\n        this._persist();\n    }\n    reset(menus) {\n        if (menus === undefined) {\n            // reset all\n            this._data = Object.create(null);\n            this._persist();\n        }\n        else {\n            // reset only for a specific menu\n            for (const { id } of menus) {\n                if (this._data[id]) {\n                    delete this._data[id];\n                }\n            }\n            this._persist();\n        }\n    }\n    _persist() {\n        try {\n            this._ignoreChangeEvent = true;\n            const raw = JSON.stringify(this._data);\n            this._storageService.store(PersistedMenuHideState_1._key, raw, 0 /* StorageScope.PROFILE */, 0 /* StorageTarget.USER */);\n        }\n        finally {\n            this._ignoreChangeEvent = false;\n        }\n    }\n};\nPersistedMenuHideState._key = 'menu.hiddenCommands';\nPersistedMenuHideState = PersistedMenuHideState_1 = __decorate([\n    __param(0, IStorageService)\n], PersistedMenuHideState);\nlet MenuInfo = MenuInfo_1 = class MenuInfo {\n    constructor(_id, _hiddenStates, _collectContextKeysForSubmenus, _commandService, _contextKeyService) {\n        this._id = _id;\n        this._hiddenStates = _hiddenStates;\n        this._collectContextKeysForSubmenus = _collectContextKeysForSubmenus;\n        this._commandService = _commandService;\n        this._contextKeyService = _contextKeyService;\n        this._menuGroups = [];\n        this._structureContextKeys = new Set();\n        this._preconditionContextKeys = new Set();\n        this._toggledContextKeys = new Set();\n        this.refresh();\n    }\n    get structureContextKeys() {\n        return this._structureContextKeys;\n    }\n    get preconditionContextKeys() {\n        return this._preconditionContextKeys;\n    }\n    get toggledContextKeys() {\n        return this._toggledContextKeys;\n    }\n    refresh() {\n        // reset\n        this._menuGroups.length = 0;\n        this._structureContextKeys.clear();\n        this._preconditionContextKeys.clear();\n        this._toggledContextKeys.clear();\n        const menuItems = MenuRegistry.getMenuItems(this._id);\n        let group;\n        menuItems.sort(MenuInfo_1._compareMenuItems);\n        for (const item of menuItems) {\n            // group by groupId\n            const groupName = item.group || '';\n            if (!group || group[0] !== groupName) {\n                group = [groupName, []];\n                this._menuGroups.push(group);\n            }\n            group[1].push(item);\n            // keep keys for eventing\n            this._collectContextKeys(item);\n        }\n    }\n    _collectContextKeys(item) {\n        MenuInfo_1._fillInKbExprKeys(item.when, this._structureContextKeys);\n        if (isIMenuItem(item)) {\n            // keep precondition keys for event if applicable\n            if (item.command.precondition) {\n                MenuInfo_1._fillInKbExprKeys(item.command.precondition, this._preconditionContextKeys);\n            }\n            // keep toggled keys for event if applicable\n            if (item.command.toggled) {\n                const toggledExpression = item.command.toggled.condition || item.command.toggled;\n                MenuInfo_1._fillInKbExprKeys(toggledExpression, this._toggledContextKeys);\n            }\n        }\n        else if (this._collectContextKeysForSubmenus) {\n            // recursively collect context keys from submenus so that this\n            // menu fires events when context key changes affect submenus\n            MenuRegistry.getMenuItems(item.submenu).forEach(this._collectContextKeys, this);\n        }\n    }\n    createActionGroups(options) {\n        const result = [];\n        for (const group of this._menuGroups) {\n            const [id, items] = group;\n            const activeActions = [];\n            for (const item of items) {\n                if (this._contextKeyService.contextMatchesRules(item.when)) {\n                    const isMenuItem = isIMenuItem(item);\n                    if (isMenuItem) {\n                        this._hiddenStates.setDefaultState(this._id, item.command.id, !!item.isHiddenByDefault);\n                    }\n                    const menuHide = createMenuHide(this._id, isMenuItem ? item.command : item, this._hiddenStates);\n                    if (isMenuItem) {\n                        // MenuItemAction\n                        activeActions.push(new MenuItemAction(item.command, item.alt, options, menuHide, this._contextKeyService, this._commandService));\n                    }\n                    else {\n                        // SubmenuItemAction\n                        const groups = new MenuInfo_1(item.submenu, this._hiddenStates, this._collectContextKeysForSubmenus, this._commandService, this._contextKeyService).createActionGroups(options);\n                        const submenuActions = Separator.join(...groups.map(g => g[1]));\n                        if (submenuActions.length > 0) {\n                            activeActions.push(new SubmenuItemAction(item, menuHide, submenuActions));\n                        }\n                    }\n                }\n            }\n            if (activeActions.length > 0) {\n                result.push([id, activeActions]);\n            }\n        }\n        return result;\n    }\n    static _fillInKbExprKeys(exp, set) {\n        if (exp) {\n            for (const key of exp.keys()) {\n                set.add(key);\n            }\n        }\n    }\n    static _compareMenuItems(a, b) {\n        const aGroup = a.group;\n        const bGroup = b.group;\n        if (aGroup !== bGroup) {\n            // Falsy groups come last\n            if (!aGroup) {\n                return 1;\n            }\n            else if (!bGroup) {\n                return -1;\n            }\n            // 'navigation' group comes first\n            if (aGroup === 'navigation') {\n                return -1;\n            }\n            else if (bGroup === 'navigation') {\n                return 1;\n            }\n            // lexical sort for groups\n            const value = aGroup.localeCompare(bGroup);\n            if (value !== 0) {\n                return value;\n            }\n        }\n        // sort on priority - default is 0\n        const aPrio = a.order || 0;\n        const bPrio = b.order || 0;\n        if (aPrio < bPrio) {\n            return -1;\n        }\n        else if (aPrio > bPrio) {\n            return 1;\n        }\n        // sort on titles\n        return MenuInfo_1._compareTitles(isIMenuItem(a) ? a.command.title : a.title, isIMenuItem(b) ? b.command.title : b.title);\n    }\n    static _compareTitles(a, b) {\n        const aStr = typeof a === 'string' ? a : a.original;\n        const bStr = typeof b === 'string' ? b : b.original;\n        return aStr.localeCompare(bStr);\n    }\n};\nMenuInfo = MenuInfo_1 = __decorate([\n    __param(3, ICommandService),\n    __param(4, IContextKeyService)\n], MenuInfo);\nlet MenuImpl = class MenuImpl {\n    constructor(id, hiddenStates, options, commandService, contextKeyService) {\n        this._disposables = new DisposableStore();\n        this._menuInfo = new MenuInfo(id, hiddenStates, options.emitEventsForSubmenuChanges, commandService, contextKeyService);\n        // Rebuild this menu whenever the menu registry reports an event for this MenuId.\n        // This usually happen while code and extensions are loaded and affects the over\n        // structure of the menu\n        const rebuildMenuSoon = new RunOnceScheduler(() => {\n            this._menuInfo.refresh();\n            this._onDidChange.fire({ menu: this, isStructuralChange: true, isEnablementChange: true, isToggleChange: true });\n        }, options.eventDebounceDelay);\n        this._disposables.add(rebuildMenuSoon);\n        this._disposables.add(MenuRegistry.onDidChangeMenu(e => {\n            if (e.has(id)) {\n                rebuildMenuSoon.schedule();\n            }\n        }));\n        // When context keys or storage state changes we need to check if the menu also has changed. However,\n        // we only do that when someone listens on this menu because (1) these events are\n        // firing often and (2) menu are often leaked\n        const lazyListener = this._disposables.add(new DisposableStore());\n        const merge = (events) => {\n            let isStructuralChange = false;\n            let isEnablementChange = false;\n            let isToggleChange = false;\n            for (const item of events) {\n                isStructuralChange = isStructuralChange || item.isStructuralChange;\n                isEnablementChange = isEnablementChange || item.isEnablementChange;\n                isToggleChange = isToggleChange || item.isToggleChange;\n                if (isStructuralChange && isEnablementChange && isToggleChange) {\n                    // everything is TRUE, no need to continue iterating\n                    break;\n                }\n            }\n            return { menu: this, isStructuralChange, isEnablementChange, isToggleChange };\n        };\n        const startLazyListener = () => {\n            lazyListener.add(contextKeyService.onDidChangeContext(e => {\n                const isStructuralChange = e.affectsSome(this._menuInfo.structureContextKeys);\n                const isEnablementChange = e.affectsSome(this._menuInfo.preconditionContextKeys);\n                const isToggleChange = e.affectsSome(this._menuInfo.toggledContextKeys);\n                if (isStructuralChange || isEnablementChange || isToggleChange) {\n                    this._onDidChange.fire({ menu: this, isStructuralChange, isEnablementChange, isToggleChange });\n                }\n            }));\n            lazyListener.add(hiddenStates.onDidChange(e => {\n                this._onDidChange.fire({ menu: this, isStructuralChange: true, isEnablementChange: false, isToggleChange: false });\n            }));\n        };\n        this._onDidChange = new DebounceEmitter({\n            // start/stop context key listener\n            onWillAddFirstListener: startLazyListener,\n            onDidRemoveLastListener: lazyListener.clear.bind(lazyListener),\n            delay: options.eventDebounceDelay,\n            merge\n        });\n        this.onDidChange = this._onDidChange.event;\n    }\n    getActions(options) {\n        return this._menuInfo.createActionGroups(options);\n    }\n    dispose() {\n        this._disposables.dispose();\n        this._onDidChange.dispose();\n    }\n};\nMenuImpl = __decorate([\n    __param(3, ICommandService),\n    __param(4, IContextKeyService)\n], MenuImpl);\nfunction createMenuHide(menu, command, states) {\n    const id = isISubmenuItem(command) ? command.submenu.id : command.id;\n    const title = typeof command.title === 'string' ? command.title : command.title.value;\n    const hide = toAction({\n        id: `hide/${menu.id}/${id}`,\n        label: localize('hide.label', 'Hide \\'{0}\\'', title),\n        run() { states.updateHidden(menu, id, true); }\n    });\n    const toggle = toAction({\n        id: `toggle/${menu.id}/${id}`,\n        label: title,\n        get checked() { return !states.isHidden(menu, id); },\n        run() { states.updateHidden(menu, id, !!this.checked); }\n    });\n    return {\n        hide,\n        toggle,\n        get isHidden() { return !toggle.checked; },\n    };\n}\n","import { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { localize } from '../../../nls.js';\nexport const IAudioCueService = createDecorator('audioCue');\n/**\n * Corresponds to the audio files in ./media.\n*/\nexport class Sound {\n    static register(options) {\n        const sound = new Sound(options.fileName);\n        return sound;\n    }\n    constructor(fileName) {\n        this.fileName = fileName;\n    }\n}\nSound.error = Sound.register({ fileName: 'error.mp3' });\nSound.warning = Sound.register({ fileName: 'warning.mp3' });\nSound.foldedArea = Sound.register({ fileName: 'foldedAreas.mp3' });\nSound.break = Sound.register({ fileName: 'break.mp3' });\nSound.quickFixes = Sound.register({ fileName: 'quickFixes.mp3' });\nSound.taskCompleted = Sound.register({ fileName: 'taskCompleted.mp3' });\nSound.taskFailed = Sound.register({ fileName: 'taskFailed.mp3' });\nSound.terminalBell = Sound.register({ fileName: 'terminalBell.mp3' });\nSound.diffLineInserted = Sound.register({ fileName: 'diffLineInserted.mp3' });\nSound.diffLineDeleted = Sound.register({ fileName: 'diffLineDeleted.mp3' });\nSound.diffLineModified = Sound.register({ fileName: 'diffLineModified.mp3' });\nSound.chatRequestSent = Sound.register({ fileName: 'chatRequestSent.mp3' });\nSound.chatResponsePending = Sound.register({ fileName: 'chatResponsePending.mp3' });\nSound.chatResponseReceived1 = Sound.register({ fileName: 'chatResponseReceived1.mp3' });\nSound.chatResponseReceived2 = Sound.register({ fileName: 'chatResponseReceived2.mp3' });\nSound.chatResponseReceived3 = Sound.register({ fileName: 'chatResponseReceived3.mp3' });\nSound.chatResponseReceived4 = Sound.register({ fileName: 'chatResponseReceived4.mp3' });\nexport class SoundSource {\n    constructor(randomOneOf) {\n        this.randomOneOf = randomOneOf;\n    }\n}\nexport class AudioCue {\n    static register(options) {\n        const soundSource = new SoundSource('randomOneOf' in options.sound ? options.sound.randomOneOf : [options.sound]);\n        const audioCue = new AudioCue(soundSource, options.name, options.settingsKey);\n        AudioCue._audioCues.add(audioCue);\n        return audioCue;\n    }\n    constructor(sound, name, settingsKey) {\n        this.sound = sound;\n        this.name = name;\n        this.settingsKey = settingsKey;\n    }\n}\nAudioCue._audioCues = new Set();\nAudioCue.error = AudioCue.register({\n    name: localize('audioCues.lineHasError.name', 'Error on Line'),\n    sound: Sound.error,\n    settingsKey: 'audioCues.lineHasError',\n});\nAudioCue.warning = AudioCue.register({\n    name: localize('audioCues.lineHasWarning.name', 'Warning on Line'),\n    sound: Sound.warning,\n    settingsKey: 'audioCues.lineHasWarning',\n});\nAudioCue.foldedArea = AudioCue.register({\n    name: localize('audioCues.lineHasFoldedArea.name', 'Folded Area on Line'),\n    sound: Sound.foldedArea,\n    settingsKey: 'audioCues.lineHasFoldedArea',\n});\nAudioCue.break = AudioCue.register({\n    name: localize('audioCues.lineHasBreakpoint.name', 'Breakpoint on Line'),\n    sound: Sound.break,\n    settingsKey: 'audioCues.lineHasBreakpoint',\n});\nAudioCue.inlineSuggestion = AudioCue.register({\n    name: localize('audioCues.lineHasInlineSuggestion.name', 'Inline Suggestion on Line'),\n    sound: Sound.quickFixes,\n    settingsKey: 'audioCues.lineHasInlineSuggestion',\n});\nAudioCue.terminalQuickFix = AudioCue.register({\n    name: localize('audioCues.terminalQuickFix.name', 'Terminal Quick Fix'),\n    sound: Sound.quickFixes,\n    settingsKey: 'audioCues.terminalQuickFix',\n});\nAudioCue.onDebugBreak = AudioCue.register({\n    name: localize('audioCues.onDebugBreak.name', 'Debugger Stopped on Breakpoint'),\n    sound: Sound.break,\n    settingsKey: 'audioCues.onDebugBreak',\n});\nAudioCue.noInlayHints = AudioCue.register({\n    name: localize('audioCues.noInlayHints', 'No Inlay Hints on Line'),\n    sound: Sound.error,\n    settingsKey: 'audioCues.noInlayHints'\n});\nAudioCue.taskCompleted = AudioCue.register({\n    name: localize('audioCues.taskCompleted', 'Task Completed'),\n    sound: Sound.taskCompleted,\n    settingsKey: 'audioCues.taskCompleted'\n});\nAudioCue.taskFailed = AudioCue.register({\n    name: localize('audioCues.taskFailed', 'Task Failed'),\n    sound: Sound.taskFailed,\n    settingsKey: 'audioCues.taskFailed'\n});\nAudioCue.terminalCommandFailed = AudioCue.register({\n    name: localize('audioCues.terminalCommandFailed', 'Terminal Command Failed'),\n    sound: Sound.error,\n    settingsKey: 'audioCues.terminalCommandFailed'\n});\nAudioCue.terminalBell = AudioCue.register({\n    name: localize('audioCues.terminalBell', 'Terminal Bell'),\n    sound: Sound.terminalBell,\n    settingsKey: 'audioCues.terminalBell'\n});\nAudioCue.notebookCellCompleted = AudioCue.register({\n    name: localize('audioCues.notebookCellCompleted', 'Notebook Cell Completed'),\n    sound: Sound.taskCompleted,\n    settingsKey: 'audioCues.notebookCellCompleted'\n});\nAudioCue.notebookCellFailed = AudioCue.register({\n    name: localize('audioCues.notebookCellFailed', 'Notebook Cell Failed'),\n    sound: Sound.taskFailed,\n    settingsKey: 'audioCues.notebookCellFailed'\n});\nAudioCue.diffLineInserted = AudioCue.register({\n    name: localize('audioCues.diffLineInserted', 'Diff Line Inserted'),\n    sound: Sound.diffLineInserted,\n    settingsKey: 'audioCues.diffLineInserted'\n});\nAudioCue.diffLineDeleted = AudioCue.register({\n    name: localize('audioCues.diffLineDeleted', 'Diff Line Deleted'),\n    sound: Sound.diffLineDeleted,\n    settingsKey: 'audioCues.diffLineDeleted'\n});\nAudioCue.diffLineModified = AudioCue.register({\n    name: localize('audioCues.diffLineModified', 'Diff Line Modified'),\n    sound: Sound.diffLineModified,\n    settingsKey: 'audioCues.diffLineModified'\n});\nAudioCue.chatRequestSent = AudioCue.register({\n    name: localize('audioCues.chatRequestSent', 'Chat Request Sent'),\n    sound: Sound.chatRequestSent,\n    settingsKey: 'audioCues.chatRequestSent'\n});\nAudioCue.chatResponseReceived = AudioCue.register({\n    name: localize('audioCues.chatResponseReceived', 'Chat Response Received'),\n    settingsKey: 'audioCues.chatResponseReceived',\n    sound: {\n        randomOneOf: [\n            Sound.chatResponseReceived1,\n            Sound.chatResponseReceived2,\n            Sound.chatResponseReceived3,\n            Sound.chatResponseReceived4\n        ]\n    }\n});\nAudioCue.chatResponsePending = AudioCue.register({\n    name: localize('audioCues.chatResponsePending', 'Chat Response Pending'),\n    sound: Sound.chatResponsePending,\n    settingsKey: 'audioCues.chatResponsePending'\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isSafari, isWebkitWebView } from '../../../base/browser/browser.js';\nimport { $, addDisposableListener } from '../../../base/browser/dom.js';\nimport { DeferredPromise } from '../../../base/common/async.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { ILogService } from '../../log/common/log.js';\nlet BrowserClipboardService = class BrowserClipboardService extends Disposable {\n    constructor(layoutService, logService) {\n        super();\n        this.layoutService = layoutService;\n        this.logService = logService;\n        this.mapTextToType = new Map(); // unsupported in web (only in-memory)\n        this.findText = ''; // unsupported in web (only in-memory)\n        this.resources = []; // unsupported in web (only in-memory)\n        if (isSafari || isWebkitWebView) {\n            this.installWebKitWriteTextWorkaround();\n        }\n    }\n    // In Safari, it has the following note:\n    //\n    // \"The request to write to the clipboard must be triggered during a user gesture.\n    // A call to clipboard.write or clipboard.writeText outside the scope of a user\n    // gesture(such as \"click\" or \"touch\" event handlers) will result in the immediate\n    // rejection of the promise returned by the API call.\"\n    // From: https://webkit.org/blog/10855/async-clipboard-api/\n    //\n    // Since extensions run in a web worker, and handle gestures in an asynchronous way,\n    // they are not classified by Safari as \"in response to a user gesture\" and will reject.\n    //\n    // This function sets up some handlers to work around that behavior.\n    installWebKitWriteTextWorkaround() {\n        const handler = () => {\n            const currentWritePromise = new DeferredPromise();\n            // Cancel the previous promise since we just created a new one in response to this new event\n            if (this.webKitPendingClipboardWritePromise && !this.webKitPendingClipboardWritePromise.isSettled) {\n                this.webKitPendingClipboardWritePromise.cancel();\n            }\n            this.webKitPendingClipboardWritePromise = currentWritePromise;\n            // The ctor of ClipboardItem allows you to pass in a promise that will resolve to a string.\n            // This allows us to pass in a Promise that will either be cancelled by another event or\n            // resolved with the contents of the first call to this.writeText.\n            // see https://developer.mozilla.org/en-US/docs/Web/API/ClipboardItem/ClipboardItem#parameters\n            navigator.clipboard.write([new ClipboardItem({\n                    'text/plain': currentWritePromise.p,\n                })]).catch((err) => __awaiter(this, void 0, void 0, function* () {\n                if (!(err instanceof Error) || err.name !== 'NotAllowedError' || !currentWritePromise.isRejected) {\n                    this.logService.error(err);\n                }\n            }));\n        };\n        if (this.layoutService.hasContainer) {\n            this._register(addDisposableListener(this.layoutService.container, 'click', handler));\n            this._register(addDisposableListener(this.layoutService.container, 'keydown', handler));\n        }\n    }\n    writeText(text, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // With type: only in-memory is supported\n            if (type) {\n                this.mapTextToType.set(type, text);\n                return;\n            }\n            if (this.webKitPendingClipboardWritePromise) {\n                // For Safari, we complete this Promise which allows the call to `navigator.clipboard.write()`\n                // above to resolve and successfully copy to the clipboard. If we let this continue, Safari\n                // would throw an error because this call stack doesn't appear to originate from a user gesture.\n                return this.webKitPendingClipboardWritePromise.complete(text);\n            }\n            // Guard access to navigator.clipboard with try/catch\n            // as we have seen DOMExceptions in certain browsers\n            // due to security policies.\n            try {\n                return yield navigator.clipboard.writeText(text);\n            }\n            catch (error) {\n                console.error(error);\n            }\n            // Fallback to textarea and execCommand solution\n            const activeElement = document.activeElement;\n            const textArea = document.body.appendChild($('textarea', { 'aria-hidden': true }));\n            textArea.style.height = '1px';\n            textArea.style.width = '1px';\n            textArea.style.position = 'absolute';\n            textArea.value = text;\n            textArea.focus();\n            textArea.select();\n            document.execCommand('copy');\n            if (activeElement instanceof HTMLElement) {\n                activeElement.focus();\n            }\n            document.body.removeChild(textArea);\n            return;\n        });\n    }\n    readText(type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // With type: only in-memory is supported\n            if (type) {\n                return this.mapTextToType.get(type) || '';\n            }\n            // Guard access to navigator.clipboard with try/catch\n            // as we have seen DOMExceptions in certain browsers\n            // due to security policies.\n            try {\n                return yield navigator.clipboard.readText();\n            }\n            catch (error) {\n                console.error(error);\n                return '';\n            }\n        });\n    }\n    readFindText() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.findText;\n        });\n    }\n    writeFindText(text) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.findText = text;\n        });\n    }\n    writeResources(resources) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.resources = resources;\n        });\n    }\n    readResources() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.resources;\n        });\n    }\n};\nBrowserClipboardService = __decorate([\n    __param(0, ILayoutService),\n    __param(1, ILogService)\n], BrowserClipboardService);\nexport { BrowserClipboardService };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IClipboardService = createDecorator('clipboardService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { validateConstraints } from '../../../base/common/types.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ICommandService = createDecorator('commandService');\nexport const CommandsRegistry = new class {\n    constructor() {\n        this._commands = new Map();\n        this._onDidRegisterCommand = new Emitter();\n        this.onDidRegisterCommand = this._onDidRegisterCommand.event;\n    }\n    registerCommand(idOrCommand, handler) {\n        if (!idOrCommand) {\n            throw new Error(`invalid command`);\n        }\n        if (typeof idOrCommand === 'string') {\n            if (!handler) {\n                throw new Error(`invalid command`);\n            }\n            return this.registerCommand({ id: idOrCommand, handler });\n        }\n        // add argument validation if rich command metadata is provided\n        if (idOrCommand.description) {\n            const constraints = [];\n            for (const arg of idOrCommand.description.args) {\n                constraints.push(arg.constraint);\n            }\n            const actualHandler = idOrCommand.handler;\n            idOrCommand.handler = function (accessor, ...args) {\n                validateConstraints(args, constraints);\n                return actualHandler(accessor, ...args);\n            };\n        }\n        // find a place to store the command\n        const { id } = idOrCommand;\n        let commands = this._commands.get(id);\n        if (!commands) {\n            commands = new LinkedList();\n            this._commands.set(id, commands);\n        }\n        const removeFn = commands.unshift(idOrCommand);\n        const ret = toDisposable(() => {\n            removeFn();\n            const command = this._commands.get(id);\n            if (command === null || command === void 0 ? void 0 : command.isEmpty()) {\n                this._commands.delete(id);\n            }\n        });\n        // tell the world about this command\n        this._onDidRegisterCommand.fire(id);\n        return ret;\n    }\n    registerCommandAlias(oldId, newId) {\n        return CommandsRegistry.registerCommand(oldId, (accessor, ...args) => accessor.get(ICommandService).executeCommand(newId, ...args));\n    }\n    getCommand(id) {\n        const list = this._commands.get(id);\n        if (!list || list.isEmpty()) {\n            return undefined;\n        }\n        return Iterable.first(list);\n    }\n    getCommands() {\n        const result = new Map();\n        for (const key of this._commands.keys()) {\n            const command = this.getCommand(key);\n            if (command) {\n                result.set(key, command);\n            }\n        }\n        return result;\n    }\n};\nCommandsRegistry.registerCommand('noop', () => { });\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IConfigurationService = createDecorator('configurationService');\nexport function toValuesTree(properties, conflictReporter) {\n    const root = Object.create(null);\n    for (const key in properties) {\n        addToValueTree(root, key, properties[key], conflictReporter);\n    }\n    return root;\n}\nexport function addToValueTree(settingsTreeRoot, key, value, conflictReporter) {\n    const segments = key.split('.');\n    const last = segments.pop();\n    let curr = settingsTreeRoot;\n    for (let i = 0; i < segments.length; i++) {\n        const s = segments[i];\n        let obj = curr[s];\n        switch (typeof obj) {\n            case 'undefined':\n                obj = curr[s] = Object.create(null);\n                break;\n            case 'object':\n                break;\n            default:\n                conflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n                return;\n        }\n        curr = obj;\n    }\n    if (typeof curr === 'object' && curr !== null) {\n        try {\n            curr[last] = value; // workaround https://github.com/microsoft/vscode/issues/13606\n        }\n        catch (e) {\n            conflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n        }\n    }\n    else {\n        conflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n    }\n}\nexport function removeFromValueTree(valueTree, key) {\n    const segments = key.split('.');\n    doRemoveFromValueTree(valueTree, segments);\n}\nfunction doRemoveFromValueTree(valueTree, segments) {\n    const first = segments.shift();\n    if (segments.length === 0) {\n        // Reached last segment\n        delete valueTree[first];\n        return;\n    }\n    if (Object.keys(valueTree).indexOf(first) !== -1) {\n        const value = valueTree[first];\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            doRemoveFromValueTree(value, segments);\n            if (Object.keys(value).length === 0) {\n                delete valueTree[first];\n            }\n        }\n    }\n}\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue(config, settingPath, defaultValue) {\n    function accessSetting(config, path) {\n        let current = config;\n        for (const component of path) {\n            if (typeof current !== 'object' || current === null) {\n                return undefined;\n            }\n            current = current[component];\n        }\n        return current;\n    }\n    const path = settingPath.split('.');\n    const result = accessSetting(config, path);\n    return typeof result === 'undefined' ? defaultValue : result;\n}\nexport function getLanguageTagSettingPlainKey(settingKey) {\n    return settingKey.replace(/[\\[\\]]/g, '');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from '../../../base/common/arrays.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport * as objects from '../../../base/common/objects.js';\nimport * as types from '../../../base/common/types.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { addToValueTree, getConfigurationValue, removeFromValueTree, toValuesTree } from './configuration.js';\nimport { Extensions, overrideIdentifiersFromKey, OVERRIDE_PROPERTY_REGEX } from './configurationRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nfunction freeze(data) {\n    return Object.isFrozen(data) ? data : objects.deepFreeze(data);\n}\nexport class ConfigurationModel {\n    constructor(_contents = {}, _keys = [], _overrides = [], raw) {\n        this._contents = _contents;\n        this._keys = _keys;\n        this._overrides = _overrides;\n        this.raw = raw;\n        this.overrideConfigurations = new Map();\n    }\n    get rawConfiguration() {\n        var _a;\n        if (!this._rawConfiguration) {\n            if ((_a = this.raw) === null || _a === void 0 ? void 0 : _a.length) {\n                const rawConfigurationModels = this.raw.map(raw => {\n                    if (raw instanceof ConfigurationModel) {\n                        return raw;\n                    }\n                    const parser = new ConfigurationModelParser('');\n                    parser.parseRaw(raw);\n                    return parser.configurationModel;\n                });\n                this._rawConfiguration = rawConfigurationModels.reduce((previous, current) => current === previous ? current : previous.merge(current), rawConfigurationModels[0]);\n            }\n            else {\n                // raw is same as current\n                this._rawConfiguration = this;\n            }\n        }\n        return this._rawConfiguration;\n    }\n    get contents() {\n        return this._contents;\n    }\n    get overrides() {\n        return this._overrides;\n    }\n    get keys() {\n        return this._keys;\n    }\n    isEmpty() {\n        return this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n    }\n    getValue(section) {\n        return section ? getConfigurationValue(this.contents, section) : this.contents;\n    }\n    inspect(section, overrideIdentifier) {\n        const value = this.rawConfiguration.getValue(section);\n        const override = overrideIdentifier ? this.rawConfiguration.getOverrideValue(section, overrideIdentifier) : undefined;\n        const merged = overrideIdentifier ? this.rawConfiguration.override(overrideIdentifier).getValue(section) : value;\n        return { value, override, merged };\n    }\n    getOverrideValue(section, overrideIdentifier) {\n        const overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n        return overrideContents\n            ? section ? getConfigurationValue(overrideContents, section) : overrideContents\n            : undefined;\n    }\n    override(identifier) {\n        let overrideConfigurationModel = this.overrideConfigurations.get(identifier);\n        if (!overrideConfigurationModel) {\n            overrideConfigurationModel = this.createOverrideConfigurationModel(identifier);\n            this.overrideConfigurations.set(identifier, overrideConfigurationModel);\n        }\n        return overrideConfigurationModel;\n    }\n    merge(...others) {\n        var _a, _b;\n        const contents = objects.deepClone(this.contents);\n        const overrides = objects.deepClone(this.overrides);\n        const keys = [...this.keys];\n        const raws = ((_a = this.raw) === null || _a === void 0 ? void 0 : _a.length) ? [...this.raw] : [this];\n        for (const other of others) {\n            raws.push(...(((_b = other.raw) === null || _b === void 0 ? void 0 : _b.length) ? other.raw : [other]));\n            if (other.isEmpty()) {\n                continue;\n            }\n            this.mergeContents(contents, other.contents);\n            for (const otherOverride of other.overrides) {\n                const [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n                if (override) {\n                    this.mergeContents(override.contents, otherOverride.contents);\n                    override.keys.push(...otherOverride.keys);\n                    override.keys = arrays.distinct(override.keys);\n                }\n                else {\n                    overrides.push(objects.deepClone(otherOverride));\n                }\n            }\n            for (const key of other.keys) {\n                if (keys.indexOf(key) === -1) {\n                    keys.push(key);\n                }\n            }\n        }\n        return new ConfigurationModel(contents, keys, overrides, raws.every(raw => raw instanceof ConfigurationModel) ? undefined : raws);\n    }\n    createOverrideConfigurationModel(identifier) {\n        const overrideContents = this.getContentsForOverrideIdentifer(identifier);\n        if (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n            // If there are no valid overrides, return self\n            return this;\n        }\n        const contents = {};\n        for (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n            let contentsForKey = this.contents[key];\n            const overrideContentsForKey = overrideContents[key];\n            // If there are override contents for the key, clone and merge otherwise use base contents\n            if (overrideContentsForKey) {\n                // Clone and merge only if base contents and override contents are of type object otherwise just override\n                if (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n                    contentsForKey = objects.deepClone(contentsForKey);\n                    this.mergeContents(contentsForKey, overrideContentsForKey);\n                }\n                else {\n                    contentsForKey = overrideContentsForKey;\n                }\n            }\n            contents[key] = contentsForKey;\n        }\n        return new ConfigurationModel(contents, this.keys, this.overrides);\n    }\n    mergeContents(source, target) {\n        for (const key of Object.keys(target)) {\n            if (key in source) {\n                if (types.isObject(source[key]) && types.isObject(target[key])) {\n                    this.mergeContents(source[key], target[key]);\n                    continue;\n                }\n            }\n            source[key] = objects.deepClone(target[key]);\n        }\n    }\n    getContentsForOverrideIdentifer(identifier) {\n        let contentsForIdentifierOnly = null;\n        let contents = null;\n        const mergeContents = (contentsToMerge) => {\n            if (contentsToMerge) {\n                if (contents) {\n                    this.mergeContents(contents, contentsToMerge);\n                }\n                else {\n                    contents = objects.deepClone(contentsToMerge);\n                }\n            }\n        };\n        for (const override of this.overrides) {\n            if (override.identifiers.length === 1 && override.identifiers[0] === identifier) {\n                contentsForIdentifierOnly = override.contents;\n            }\n            else if (override.identifiers.includes(identifier)) {\n                mergeContents(override.contents);\n            }\n        }\n        // Merge contents of the identifier only at the end to take precedence.\n        mergeContents(contentsForIdentifierOnly);\n        return contents;\n    }\n    toJSON() {\n        return {\n            contents: this.contents,\n            overrides: this.overrides,\n            keys: this.keys\n        };\n    }\n    // Update methods\n    addValue(key, value) {\n        this.updateValue(key, value, true);\n    }\n    setValue(key, value) {\n        this.updateValue(key, value, false);\n    }\n    removeValue(key) {\n        const index = this.keys.indexOf(key);\n        if (index === -1) {\n            return;\n        }\n        this.keys.splice(index, 1);\n        removeFromValueTree(this.contents, key);\n        if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n            this.overrides.splice(this.overrides.findIndex(o => arrays.equals(o.identifiers, overrideIdentifiersFromKey(key))), 1);\n        }\n    }\n    updateValue(key, value, add) {\n        addToValueTree(this.contents, key, value, e => console.error(e));\n        add = add || this.keys.indexOf(key) === -1;\n        if (add) {\n            this.keys.push(key);\n        }\n        if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n            this.overrides.push({\n                identifiers: overrideIdentifiersFromKey(key),\n                keys: Object.keys(this.contents[key]),\n                contents: toValuesTree(this.contents[key], message => console.error(message)),\n            });\n        }\n    }\n}\nexport class ConfigurationModelParser {\n    constructor(_name) {\n        this._name = _name;\n        this._raw = null;\n        this._configurationModel = null;\n        this._restrictedConfigurations = [];\n    }\n    get configurationModel() {\n        return this._configurationModel || new ConfigurationModel();\n    }\n    parseRaw(raw, options) {\n        this._raw = raw;\n        const { contents, keys, overrides, restricted, hasExcludedProperties } = this.doParseRaw(raw, options);\n        this._configurationModel = new ConfigurationModel(contents, keys, overrides, hasExcludedProperties ? [raw] : undefined /* raw has not changed */);\n        this._restrictedConfigurations = restricted || [];\n    }\n    doParseRaw(raw, options) {\n        const configurationProperties = Registry.as(Extensions.Configuration).getConfigurationProperties();\n        const filtered = this.filter(raw, configurationProperties, true, options);\n        raw = filtered.raw;\n        const contents = toValuesTree(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n        const keys = Object.keys(raw);\n        const overrides = this.toOverrides(raw, message => console.error(`Conflict in settings file ${this._name}: ${message}`));\n        return { contents, keys, overrides, restricted: filtered.restricted, hasExcludedProperties: filtered.hasExcludedProperties };\n    }\n    filter(properties, configurationProperties, filterOverriddenProperties, options) {\n        var _a, _b, _c;\n        let hasExcludedProperties = false;\n        if (!(options === null || options === void 0 ? void 0 : options.scopes) && !(options === null || options === void 0 ? void 0 : options.skipRestricted) && !((_a = options === null || options === void 0 ? void 0 : options.exclude) === null || _a === void 0 ? void 0 : _a.length)) {\n            return { raw: properties, restricted: [], hasExcludedProperties };\n        }\n        const raw = {};\n        const restricted = [];\n        for (const key in properties) {\n            if (OVERRIDE_PROPERTY_REGEX.test(key) && filterOverriddenProperties) {\n                const result = this.filter(properties[key], configurationProperties, false, options);\n                raw[key] = result.raw;\n                hasExcludedProperties = hasExcludedProperties || result.hasExcludedProperties;\n                restricted.push(...result.restricted);\n            }\n            else {\n                const propertySchema = configurationProperties[key];\n                const scope = propertySchema ? typeof propertySchema.scope !== 'undefined' ? propertySchema.scope : 3 /* ConfigurationScope.WINDOW */ : undefined;\n                if (propertySchema === null || propertySchema === void 0 ? void 0 : propertySchema.restricted) {\n                    restricted.push(key);\n                }\n                if (!((_b = options.exclude) === null || _b === void 0 ? void 0 : _b.includes(key)) /* Check exclude */\n                    && (((_c = options.include) === null || _c === void 0 ? void 0 : _c.includes(key) /* Check include */)\n                        || ((scope === undefined || options.scopes === undefined || options.scopes.includes(scope)) /* Check scopes */\n                            && !(options.skipRestricted && (propertySchema === null || propertySchema === void 0 ? void 0 : propertySchema.restricted))))) /* Check restricted */ {\n                    raw[key] = properties[key];\n                }\n                else {\n                    hasExcludedProperties = true;\n                }\n            }\n        }\n        return { raw, restricted, hasExcludedProperties };\n    }\n    toOverrides(raw, conflictReporter) {\n        const overrides = [];\n        for (const key of Object.keys(raw)) {\n            if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                const overrideRaw = {};\n                for (const keyInOverrideRaw in raw[key]) {\n                    overrideRaw[keyInOverrideRaw] = raw[key][keyInOverrideRaw];\n                }\n                overrides.push({\n                    identifiers: overrideIdentifiersFromKey(key),\n                    keys: Object.keys(overrideRaw),\n                    contents: toValuesTree(overrideRaw, conflictReporter)\n                });\n            }\n        }\n        return overrides;\n    }\n}\nclass ConfigurationInspectValue {\n    constructor(key, overrides, _value, overrideIdentifiers, defaultConfiguration, policyConfiguration, applicationConfiguration, userConfiguration, localUserConfiguration, remoteUserConfiguration, workspaceConfiguration, folderConfigurationModel, memoryConfigurationModel) {\n        this.key = key;\n        this.overrides = overrides;\n        this._value = _value;\n        this.overrideIdentifiers = overrideIdentifiers;\n        this.defaultConfiguration = defaultConfiguration;\n        this.policyConfiguration = policyConfiguration;\n        this.applicationConfiguration = applicationConfiguration;\n        this.userConfiguration = userConfiguration;\n        this.localUserConfiguration = localUserConfiguration;\n        this.remoteUserConfiguration = remoteUserConfiguration;\n        this.workspaceConfiguration = workspaceConfiguration;\n        this.folderConfigurationModel = folderConfigurationModel;\n        this.memoryConfigurationModel = memoryConfigurationModel;\n    }\n    inspect(model, section, overrideIdentifier) {\n        const inspectValue = model.inspect(section, overrideIdentifier);\n        return {\n            get value() { return freeze(inspectValue.value); },\n            get override() { return freeze(inspectValue.override); },\n            get merged() { return freeze(inspectValue.merged); }\n        };\n    }\n    get userInspectValue() {\n        if (!this._userInspectValue) {\n            this._userInspectValue = this.inspect(this.userConfiguration, this.key, this.overrides.overrideIdentifier);\n        }\n        return this._userInspectValue;\n    }\n    get user() {\n        return this.userInspectValue.value !== undefined || this.userInspectValue.override !== undefined ? { value: this.userInspectValue.value, override: this.userInspectValue.override } : undefined;\n    }\n}\nexport class Configuration {\n    constructor(_defaultConfiguration, _policyConfiguration, _applicationConfiguration, _localUserConfiguration, _remoteUserConfiguration = new ConfigurationModel(), _workspaceConfiguration = new ConfigurationModel(), _folderConfigurations = new ResourceMap(), _memoryConfiguration = new ConfigurationModel(), _memoryConfigurationByResource = new ResourceMap()) {\n        this._defaultConfiguration = _defaultConfiguration;\n        this._policyConfiguration = _policyConfiguration;\n        this._applicationConfiguration = _applicationConfiguration;\n        this._localUserConfiguration = _localUserConfiguration;\n        this._remoteUserConfiguration = _remoteUserConfiguration;\n        this._workspaceConfiguration = _workspaceConfiguration;\n        this._folderConfigurations = _folderConfigurations;\n        this._memoryConfiguration = _memoryConfiguration;\n        this._memoryConfigurationByResource = _memoryConfigurationByResource;\n        this._workspaceConsolidatedConfiguration = null;\n        this._foldersConsolidatedConfigurations = new ResourceMap();\n        this._userConfiguration = null;\n    }\n    getValue(section, overrides, workspace) {\n        const consolidateConfigurationModel = this.getConsolidatedConfigurationModel(section, overrides, workspace);\n        return consolidateConfigurationModel.getValue(section);\n    }\n    updateValue(key, value, overrides = {}) {\n        let memoryConfiguration;\n        if (overrides.resource) {\n            memoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n            if (!memoryConfiguration) {\n                memoryConfiguration = new ConfigurationModel();\n                this._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n            }\n        }\n        else {\n            memoryConfiguration = this._memoryConfiguration;\n        }\n        if (value === undefined) {\n            memoryConfiguration.removeValue(key);\n        }\n        else {\n            memoryConfiguration.setValue(key, value);\n        }\n        if (!overrides.resource) {\n            this._workspaceConsolidatedConfiguration = null;\n        }\n    }\n    inspect(key, overrides, workspace) {\n        const consolidateConfigurationModel = this.getConsolidatedConfigurationModel(key, overrides, workspace);\n        const folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n        const memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n        const overrideIdentifiers = new Set();\n        for (const override of consolidateConfigurationModel.overrides) {\n            for (const overrideIdentifier of override.identifiers) {\n                if (consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined) {\n                    overrideIdentifiers.add(overrideIdentifier);\n                }\n            }\n        }\n        return new ConfigurationInspectValue(key, overrides, consolidateConfigurationModel.getValue(key), overrideIdentifiers.size ? [...overrideIdentifiers] : undefined, this._defaultConfiguration, this._policyConfiguration.isEmpty() ? undefined : this._policyConfiguration, this.applicationConfiguration.isEmpty() ? undefined : this.applicationConfiguration, this.userConfiguration, this.localUserConfiguration, this.remoteUserConfiguration, workspace ? this._workspaceConfiguration : undefined, folderConfigurationModel ? folderConfigurationModel : undefined, memoryConfigurationModel);\n    }\n    get applicationConfiguration() {\n        return this._applicationConfiguration;\n    }\n    get userConfiguration() {\n        if (!this._userConfiguration) {\n            this._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n        }\n        return this._userConfiguration;\n    }\n    get localUserConfiguration() {\n        return this._localUserConfiguration;\n    }\n    get remoteUserConfiguration() {\n        return this._remoteUserConfiguration;\n    }\n    getConsolidatedConfigurationModel(section, overrides, workspace) {\n        let configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n        if (overrides.overrideIdentifier) {\n            configurationModel = configurationModel.override(overrides.overrideIdentifier);\n        }\n        if (!this._policyConfiguration.isEmpty() && this._policyConfiguration.getValue(section) !== undefined) {\n            configurationModel = configurationModel.merge(this._policyConfiguration);\n        }\n        return configurationModel;\n    }\n    getConsolidatedConfigurationModelForResource({ resource }, workspace) {\n        let consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n        if (workspace && resource) {\n            const root = workspace.getFolder(resource);\n            if (root) {\n                consolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n            }\n            const memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n            if (memoryConfigurationForResource) {\n                consolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n            }\n        }\n        return consolidateConfiguration;\n    }\n    getWorkspaceConsolidatedConfiguration() {\n        if (!this._workspaceConsolidatedConfiguration) {\n            this._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.applicationConfiguration, this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n        }\n        return this._workspaceConsolidatedConfiguration;\n    }\n    getFolderConsolidatedConfiguration(folder) {\n        let folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n        if (!folderConsolidatedConfiguration) {\n            const workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n            const folderConfiguration = this._folderConfigurations.get(folder);\n            if (folderConfiguration) {\n                folderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n                this._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n            }\n            else {\n                folderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n            }\n        }\n        return folderConsolidatedConfiguration;\n    }\n    getFolderConfigurationModelForResource(resource, workspace) {\n        if (workspace && resource) {\n            const root = workspace.getFolder(resource);\n            if (root) {\n                return this._folderConfigurations.get(root.uri);\n            }\n        }\n        return undefined;\n    }\n    toData() {\n        return {\n            defaults: {\n                contents: this._defaultConfiguration.contents,\n                overrides: this._defaultConfiguration.overrides,\n                keys: this._defaultConfiguration.keys\n            },\n            policy: {\n                contents: this._policyConfiguration.contents,\n                overrides: this._policyConfiguration.overrides,\n                keys: this._policyConfiguration.keys\n            },\n            application: {\n                contents: this.applicationConfiguration.contents,\n                overrides: this.applicationConfiguration.overrides,\n                keys: this.applicationConfiguration.keys\n            },\n            user: {\n                contents: this.userConfiguration.contents,\n                overrides: this.userConfiguration.overrides,\n                keys: this.userConfiguration.keys\n            },\n            workspace: {\n                contents: this._workspaceConfiguration.contents,\n                overrides: this._workspaceConfiguration.overrides,\n                keys: this._workspaceConfiguration.keys\n            },\n            folders: [...this._folderConfigurations.keys()].reduce((result, folder) => {\n                const { contents, overrides, keys } = this._folderConfigurations.get(folder);\n                result.push([folder, { contents, overrides, keys }]);\n                return result;\n            }, [])\n        };\n    }\n    static parse(data) {\n        const defaultConfiguration = this.parseConfigurationModel(data.defaults);\n        const policyConfiguration = this.parseConfigurationModel(data.policy);\n        const applicationConfiguration = this.parseConfigurationModel(data.application);\n        const userConfiguration = this.parseConfigurationModel(data.user);\n        const workspaceConfiguration = this.parseConfigurationModel(data.workspace);\n        const folders = data.folders.reduce((result, value) => {\n            result.set(URI.revive(value[0]), this.parseConfigurationModel(value[1]));\n            return result;\n        }, new ResourceMap());\n        return new Configuration(defaultConfiguration, policyConfiguration, applicationConfiguration, userConfiguration, new ConfigurationModel(), workspaceConfiguration, folders, new ConfigurationModel(), new ResourceMap());\n    }\n    static parseConfigurationModel(model) {\n        return new ConfigurationModel(model.contents, model.keys, model.overrides);\n    }\n}\nexport class ConfigurationChangeEvent {\n    constructor(change, previous, currentConfiguraiton, currentWorkspace) {\n        this.change = change;\n        this.previous = previous;\n        this.currentConfiguraiton = currentConfiguraiton;\n        this.currentWorkspace = currentWorkspace;\n        this._marker = '\\n';\n        this._markerCode1 = this._marker.charCodeAt(0);\n        this._markerCode2 = '.'.charCodeAt(0);\n        this.affectedKeys = new Set();\n        this._previousConfiguration = undefined;\n        for (const key of change.keys) {\n            this.affectedKeys.add(key);\n        }\n        for (const [, keys] of change.overrides) {\n            for (const key of keys) {\n                this.affectedKeys.add(key);\n            }\n        }\n        // Example: '\\nfoo.bar\\nabc.def\\n'\n        this._affectsConfigStr = this._marker;\n        for (const key of this.affectedKeys) {\n            this._affectsConfigStr += key + this._marker;\n        }\n    }\n    get previousConfiguration() {\n        if (!this._previousConfiguration && this.previous) {\n            this._previousConfiguration = Configuration.parse(this.previous.data);\n        }\n        return this._previousConfiguration;\n    }\n    affectsConfiguration(section, overrides) {\n        var _a;\n        // we have one large string with all keys that have changed. we pad (marker) the section\n        // and check that either find it padded or before a segment character\n        const needle = this._marker + section;\n        const idx = this._affectsConfigStr.indexOf(needle);\n        if (idx < 0) {\n            // NOT: (marker + section)\n            return false;\n        }\n        const pos = idx + needle.length;\n        if (pos >= this._affectsConfigStr.length) {\n            return false;\n        }\n        const code = this._affectsConfigStr.charCodeAt(pos);\n        if (code !== this._markerCode1 && code !== this._markerCode2) {\n            // NOT: section + (marker | segment)\n            return false;\n        }\n        if (overrides) {\n            const value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, (_a = this.previous) === null || _a === void 0 ? void 0 : _a.workspace) : undefined;\n            const value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n            return !objects.equals(value1, value2);\n        }\n        return true;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { distinct } from '../../../base/common/arrays.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport * as types from '../../../base/common/types.js';\nimport * as nls from '../../../nls.js';\nimport { getLanguageTagSettingPlainKey } from './configuration.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport const Extensions = {\n    Configuration: 'base.contributions.configuration'\n};\nexport const allSettings = { properties: {}, patternProperties: {} };\nexport const applicationSettings = { properties: {}, patternProperties: {} };\nexport const machineSettings = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings = { properties: {}, patternProperties: {} };\nexport const windowSettings = { properties: {}, patternProperties: {} };\nexport const resourceSettings = { properties: {}, patternProperties: {} };\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\nconst contributionRegistry = Registry.as(JSONExtensions.JSONContribution);\nclass ConfigurationRegistry {\n    constructor() {\n        this.overrideIdentifiers = new Set();\n        this._onDidSchemaChange = new Emitter();\n        this._onDidUpdateConfiguration = new Emitter();\n        this.configurationDefaultsOverrides = new Map();\n        this.defaultLanguageConfigurationOverridesNode = {\n            id: 'defaultOverrides',\n            title: nls.localize('defaultLanguageConfigurationOverrides.title', \"Default Language Configuration Overrides\"),\n            properties: {}\n        };\n        this.configurationContributors = [this.defaultLanguageConfigurationOverridesNode];\n        this.resourceLanguageSettingsSchema = {\n            properties: {},\n            patternProperties: {},\n            additionalProperties: true,\n            allowTrailingCommas: true,\n            allowComments: true\n        };\n        this.configurationProperties = {};\n        this.policyConfigurations = new Map();\n        this.excludedConfigurationProperties = {};\n        contributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n        this.registerOverridePropertyPatternKey();\n    }\n    registerConfiguration(configuration, validate = true) {\n        this.registerConfigurations([configuration], validate);\n    }\n    registerConfigurations(configurations, validate = true) {\n        const properties = new Set();\n        this.doRegisterConfigurations(configurations, validate, properties);\n        contributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n        this._onDidSchemaChange.fire();\n        this._onDidUpdateConfiguration.fire({ properties });\n    }\n    registerDefaultConfigurations(configurationDefaults) {\n        const properties = new Set();\n        this.doRegisterDefaultConfigurations(configurationDefaults, properties);\n        this._onDidSchemaChange.fire();\n        this._onDidUpdateConfiguration.fire({ properties, defaultsOverrides: true });\n    }\n    doRegisterDefaultConfigurations(configurationDefaults, bucket) {\n        var _a;\n        const overrideIdentifiers = [];\n        for (const { overrides, source } of configurationDefaults) {\n            for (const key in overrides) {\n                bucket.add(key);\n                if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                    const configurationDefaultOverride = this.configurationDefaultsOverrides.get(key);\n                    const valuesSources = (_a = configurationDefaultOverride === null || configurationDefaultOverride === void 0 ? void 0 : configurationDefaultOverride.valuesSources) !== null && _a !== void 0 ? _a : new Map();\n                    if (source) {\n                        for (const configuration of Object.keys(overrides[key])) {\n                            valuesSources.set(configuration, source);\n                        }\n                    }\n                    const defaultValue = Object.assign(Object.assign({}, ((configurationDefaultOverride === null || configurationDefaultOverride === void 0 ? void 0 : configurationDefaultOverride.value) || {})), overrides[key]);\n                    this.configurationDefaultsOverrides.set(key, { source, value: defaultValue, valuesSources });\n                    const plainKey = getLanguageTagSettingPlainKey(key);\n                    const property = {\n                        type: 'object',\n                        default: defaultValue,\n                        description: nls.localize('defaultLanguageConfiguration.description', \"Configure settings to be overridden for the {0} language.\", plainKey),\n                        $ref: resourceLanguageSettingsSchemaId,\n                        defaultDefaultValue: defaultValue,\n                        source: types.isString(source) ? undefined : source,\n                        defaultValueSource: source\n                    };\n                    overrideIdentifiers.push(...overrideIdentifiersFromKey(key));\n                    this.configurationProperties[key] = property;\n                    this.defaultLanguageConfigurationOverridesNode.properties[key] = property;\n                }\n                else {\n                    this.configurationDefaultsOverrides.set(key, { value: overrides[key], source });\n                    const property = this.configurationProperties[key];\n                    if (property) {\n                        this.updatePropertyDefaultValue(key, property);\n                        this.updateSchema(key, property);\n                    }\n                }\n            }\n        }\n        this.doRegisterOverrideIdentifiers(overrideIdentifiers);\n    }\n    registerOverrideIdentifiers(overrideIdentifiers) {\n        this.doRegisterOverrideIdentifiers(overrideIdentifiers);\n        this._onDidSchemaChange.fire();\n    }\n    doRegisterOverrideIdentifiers(overrideIdentifiers) {\n        for (const overrideIdentifier of overrideIdentifiers) {\n            this.overrideIdentifiers.add(overrideIdentifier);\n        }\n        this.updateOverridePropertyPatternKey();\n    }\n    doRegisterConfigurations(configurations, validate, bucket) {\n        configurations.forEach(configuration => {\n            this.validateAndRegisterProperties(configuration, validate, configuration.extensionInfo, configuration.restrictedProperties, undefined, bucket);\n            this.configurationContributors.push(configuration);\n            this.registerJSONConfiguration(configuration);\n        });\n    }\n    validateAndRegisterProperties(configuration, validate = true, extensionInfo, restrictedProperties, scope = 3 /* ConfigurationScope.WINDOW */, bucket) {\n        var _a;\n        scope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n        const properties = configuration.properties;\n        if (properties) {\n            for (const key in properties) {\n                const property = properties[key];\n                if (validate && validateProperty(key, property)) {\n                    delete properties[key];\n                    continue;\n                }\n                property.source = extensionInfo;\n                // update default value\n                property.defaultDefaultValue = properties[key].default;\n                this.updatePropertyDefaultValue(key, property);\n                // update scope\n                if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                    property.scope = undefined; // No scope for overridable properties `[${identifier}]`\n                }\n                else {\n                    property.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n                    property.restricted = types.isUndefinedOrNull(property.restricted) ? !!(restrictedProperties === null || restrictedProperties === void 0 ? void 0 : restrictedProperties.includes(key)) : property.restricted;\n                }\n                // Add to properties maps\n                // Property is included by default if 'included' is unspecified\n                if (properties[key].hasOwnProperty('included') && !properties[key].included) {\n                    this.excludedConfigurationProperties[key] = properties[key];\n                    delete properties[key];\n                    continue;\n                }\n                else {\n                    this.configurationProperties[key] = properties[key];\n                    if ((_a = properties[key].policy) === null || _a === void 0 ? void 0 : _a.name) {\n                        this.policyConfigurations.set(properties[key].policy.name, key);\n                    }\n                }\n                if (!properties[key].deprecationMessage && properties[key].markdownDeprecationMessage) {\n                    // If not set, default deprecationMessage to the markdown source\n                    properties[key].deprecationMessage = properties[key].markdownDeprecationMessage;\n                }\n                bucket.add(key);\n            }\n        }\n        const subNodes = configuration.allOf;\n        if (subNodes) {\n            for (const node of subNodes) {\n                this.validateAndRegisterProperties(node, validate, extensionInfo, restrictedProperties, scope, bucket);\n            }\n        }\n    }\n    getConfigurationProperties() {\n        return this.configurationProperties;\n    }\n    getPolicyConfigurations() {\n        return this.policyConfigurations;\n    }\n    registerJSONConfiguration(configuration) {\n        const register = (configuration) => {\n            const properties = configuration.properties;\n            if (properties) {\n                for (const key in properties) {\n                    this.updateSchema(key, properties[key]);\n                }\n            }\n            const subNodes = configuration.allOf;\n            subNodes === null || subNodes === void 0 ? void 0 : subNodes.forEach(register);\n        };\n        register(configuration);\n    }\n    updateSchema(key, property) {\n        allSettings.properties[key] = property;\n        switch (property.scope) {\n            case 1 /* ConfigurationScope.APPLICATION */:\n                applicationSettings.properties[key] = property;\n                break;\n            case 2 /* ConfigurationScope.MACHINE */:\n                machineSettings.properties[key] = property;\n                break;\n            case 6 /* ConfigurationScope.MACHINE_OVERRIDABLE */:\n                machineOverridableSettings.properties[key] = property;\n                break;\n            case 3 /* ConfigurationScope.WINDOW */:\n                windowSettings.properties[key] = property;\n                break;\n            case 4 /* ConfigurationScope.RESOURCE */:\n                resourceSettings.properties[key] = property;\n                break;\n            case 5 /* ConfigurationScope.LANGUAGE_OVERRIDABLE */:\n                resourceSettings.properties[key] = property;\n                this.resourceLanguageSettingsSchema.properties[key] = property;\n                break;\n        }\n    }\n    updateOverridePropertyPatternKey() {\n        for (const overrideIdentifier of this.overrideIdentifiers.values()) {\n            const overrideIdentifierProperty = `[${overrideIdentifier}]`;\n            const resourceLanguagePropertiesSchema = {\n                type: 'object',\n                description: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n                errorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n                $ref: resourceLanguageSettingsSchemaId,\n            };\n            this.updatePropertyDefaultValue(overrideIdentifierProperty, resourceLanguagePropertiesSchema);\n            allSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            applicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            machineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            machineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            windowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            resourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n        }\n    }\n    registerOverridePropertyPatternKey() {\n        const resourceLanguagePropertiesSchema = {\n            type: 'object',\n            description: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n            errorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n            $ref: resourceLanguageSettingsSchemaId,\n        };\n        allSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        applicationSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        machineSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        machineOverridableSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        windowSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        resourceSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        this._onDidSchemaChange.fire();\n    }\n    updatePropertyDefaultValue(key, property) {\n        const configurationdefaultOverride = this.configurationDefaultsOverrides.get(key);\n        let defaultValue = configurationdefaultOverride === null || configurationdefaultOverride === void 0 ? void 0 : configurationdefaultOverride.value;\n        let defaultSource = configurationdefaultOverride === null || configurationdefaultOverride === void 0 ? void 0 : configurationdefaultOverride.source;\n        if (types.isUndefined(defaultValue)) {\n            defaultValue = property.defaultDefaultValue;\n            defaultSource = undefined;\n        }\n        if (types.isUndefined(defaultValue)) {\n            defaultValue = getDefaultValue(property.type);\n        }\n        property.default = defaultValue;\n        property.defaultValueSource = defaultSource;\n    }\n}\nconst OVERRIDE_IDENTIFIER_PATTERN = `\\\\[([^\\\\]]+)\\\\]`;\nconst OVERRIDE_IDENTIFIER_REGEX = new RegExp(OVERRIDE_IDENTIFIER_PATTERN, 'g');\nexport const OVERRIDE_PROPERTY_PATTERN = `^(${OVERRIDE_IDENTIFIER_PATTERN})+$`;\nexport const OVERRIDE_PROPERTY_REGEX = new RegExp(OVERRIDE_PROPERTY_PATTERN);\nexport function overrideIdentifiersFromKey(key) {\n    const identifiers = [];\n    if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n        let matches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n        while (matches === null || matches === void 0 ? void 0 : matches.length) {\n            const identifier = matches[1].trim();\n            if (identifier) {\n                identifiers.push(identifier);\n            }\n            matches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n        }\n    }\n    return distinct(identifiers);\n}\nexport function getDefaultValue(type) {\n    const t = Array.isArray(type) ? type[0] : type;\n    switch (t) {\n        case 'boolean':\n            return false;\n        case 'integer':\n        case 'number':\n            return 0;\n        case 'string':\n            return '';\n        case 'array':\n            return [];\n        case 'object':\n            return {};\n        default:\n            return null;\n    }\n}\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\nexport function validateProperty(property, schema) {\n    var _a, _b, _c, _d;\n    if (!property.trim()) {\n        return nls.localize('config.property.empty', \"Cannot register an empty property\");\n    }\n    if (OVERRIDE_PROPERTY_REGEX.test(property)) {\n        return nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n    }\n    if (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n        return nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n    }\n    if (((_a = schema.policy) === null || _a === void 0 ? void 0 : _a.name) && configurationRegistry.getPolicyConfigurations().get((_b = schema.policy) === null || _b === void 0 ? void 0 : _b.name) !== undefined) {\n        return nls.localize('config.policy.duplicate', \"Cannot register '{0}'. The associated policy {1} is already registered with {2}.\", property, (_c = schema.policy) === null || _c === void 0 ? void 0 : _c.name, configurationRegistry.getPolicyConfigurations().get((_d = schema.policy) === null || _d === void 0 ? void 0 : _d.name));\n    }\n    return null;\n}\n","import { Disposable } from '../../../base/common/lifecycle.js';\nimport { ConfigurationModel } from './configurationModels.js';\nimport { Extensions } from './configurationRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport class DefaultConfiguration extends Disposable {\n    constructor() {\n        super(...arguments);\n        this._configurationModel = new ConfigurationModel();\n    }\n    get configurationModel() {\n        return this._configurationModel;\n    }\n    reload() {\n        this.resetConfigurationModel();\n        return this.configurationModel;\n    }\n    getConfigurationDefaultOverrides() {\n        return {};\n    }\n    resetConfigurationModel() {\n        this._configurationModel = new ConfigurationModel();\n        const properties = Registry.as(Extensions.Configuration).getConfigurationProperties();\n        this.updateConfigurationModel(Object.keys(properties), properties);\n    }\n    updateConfigurationModel(properties, configurationProperties) {\n        const configurationDefaultsOverrides = this.getConfigurationDefaultOverrides();\n        for (const key of properties) {\n            const defaultOverrideValue = configurationDefaultsOverrides[key];\n            const propertySchema = configurationProperties[key];\n            if (defaultOverrideValue !== undefined) {\n                this._configurationModel.addValue(key, defaultOverrideValue);\n            }\n            else if (propertySchema) {\n                this._configurationModel.addValue(key, propertySchema.default);\n            }\n            else {\n                this._configurationModel.removeValue(key);\n            }\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { PauseableEmitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { Disposable, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport { cloneAndChange } from '../../../base/common/objects.js';\nimport { TernarySearchTree } from '../../../base/common/ternarySearchTree.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { CommandsRegistry } from '../../commands/common/commands.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IContextKeyService, RawContextKey } from '../common/contextkey.js';\nconst KEYBINDING_CONTEXT_ATTR = 'data-keybinding-context';\nexport class Context {\n    constructor(id, parent) {\n        this._id = id;\n        this._parent = parent;\n        this._value = Object.create(null);\n        this._value['_contextId'] = id;\n    }\n    get value() {\n        return Object.assign({}, this._value);\n    }\n    setValue(key, value) {\n        // console.log('SET ' + key + ' = ' + value + ' ON ' + this._id);\n        if (this._value[key] !== value) {\n            this._value[key] = value;\n            return true;\n        }\n        return false;\n    }\n    removeValue(key) {\n        // console.log('REMOVE ' + key + ' FROM ' + this._id);\n        if (key in this._value) {\n            delete this._value[key];\n            return true;\n        }\n        return false;\n    }\n    getValue(key) {\n        const ret = this._value[key];\n        if (typeof ret === 'undefined' && this._parent) {\n            return this._parent.getValue(key);\n        }\n        return ret;\n    }\n}\nclass NullContext extends Context {\n    constructor() {\n        super(-1, null);\n    }\n    setValue(key, value) {\n        return false;\n    }\n    removeValue(key) {\n        return false;\n    }\n    getValue(key) {\n        return undefined;\n    }\n}\nNullContext.INSTANCE = new NullContext();\nclass ConfigAwareContextValuesContainer extends Context {\n    constructor(id, _configurationService, emitter) {\n        super(id, null);\n        this._configurationService = _configurationService;\n        this._values = TernarySearchTree.forConfigKeys();\n        this._listener = this._configurationService.onDidChangeConfiguration(event => {\n            if (event.source === 7 /* ConfigurationTarget.DEFAULT */) {\n                // new setting, reset everything\n                const allKeys = Array.from(this._values, ([k]) => k);\n                this._values.clear();\n                emitter.fire(new ArrayContextKeyChangeEvent(allKeys));\n            }\n            else {\n                const changedKeys = [];\n                for (const configKey of event.affectedKeys) {\n                    const contextKey = `config.${configKey}`;\n                    const cachedItems = this._values.findSuperstr(contextKey);\n                    if (cachedItems !== undefined) {\n                        changedKeys.push(...Iterable.map(cachedItems, ([key]) => key));\n                        this._values.deleteSuperstr(contextKey);\n                    }\n                    if (this._values.has(contextKey)) {\n                        changedKeys.push(contextKey);\n                        this._values.delete(contextKey);\n                    }\n                }\n                emitter.fire(new ArrayContextKeyChangeEvent(changedKeys));\n            }\n        });\n    }\n    dispose() {\n        this._listener.dispose();\n    }\n    getValue(key) {\n        if (key.indexOf(ConfigAwareContextValuesContainer._keyPrefix) !== 0) {\n            return super.getValue(key);\n        }\n        if (this._values.has(key)) {\n            return this._values.get(key);\n        }\n        const configKey = key.substr(ConfigAwareContextValuesContainer._keyPrefix.length);\n        const configValue = this._configurationService.getValue(configKey);\n        let value = undefined;\n        switch (typeof configValue) {\n            case 'number':\n            case 'boolean':\n            case 'string':\n                value = configValue;\n                break;\n            default:\n                if (Array.isArray(configValue)) {\n                    value = JSON.stringify(configValue);\n                }\n                else {\n                    value = configValue;\n                }\n        }\n        this._values.set(key, value);\n        return value;\n    }\n    setValue(key, value) {\n        return super.setValue(key, value);\n    }\n    removeValue(key) {\n        return super.removeValue(key);\n    }\n}\nConfigAwareContextValuesContainer._keyPrefix = 'config.';\nclass ContextKey {\n    constructor(service, key, defaultValue) {\n        this._service = service;\n        this._key = key;\n        this._defaultValue = defaultValue;\n        this.reset();\n    }\n    set(value) {\n        this._service.setContext(this._key, value);\n    }\n    reset() {\n        if (typeof this._defaultValue === 'undefined') {\n            this._service.removeContext(this._key);\n        }\n        else {\n            this._service.setContext(this._key, this._defaultValue);\n        }\n    }\n    get() {\n        return this._service.getContextKeyValue(this._key);\n    }\n}\nclass SimpleContextKeyChangeEvent {\n    constructor(key) {\n        this.key = key;\n    }\n    affectsSome(keys) {\n        return keys.has(this.key);\n    }\n    allKeysContainedIn(keys) {\n        return this.affectsSome(keys);\n    }\n}\nclass ArrayContextKeyChangeEvent {\n    constructor(keys) {\n        this.keys = keys;\n    }\n    affectsSome(keys) {\n        for (const key of this.keys) {\n            if (keys.has(key)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    allKeysContainedIn(keys) {\n        return this.keys.every(key => keys.has(key));\n    }\n}\nclass CompositeContextKeyChangeEvent {\n    constructor(events) {\n        this.events = events;\n    }\n    affectsSome(keys) {\n        for (const e of this.events) {\n            if (e.affectsSome(keys)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    allKeysContainedIn(keys) {\n        return this.events.every(evt => evt.allKeysContainedIn(keys));\n    }\n}\nfunction allEventKeysInContext(event, context) {\n    return event.allKeysContainedIn(new Set(Object.keys(context)));\n}\nexport class AbstractContextKeyService extends Disposable {\n    constructor(myContextId) {\n        super();\n        this._onDidChangeContext = this._register(new PauseableEmitter({ merge: input => new CompositeContextKeyChangeEvent(input) }));\n        this.onDidChangeContext = this._onDidChangeContext.event;\n        this._isDisposed = false;\n        this._myContextId = myContextId;\n    }\n    createKey(key, defaultValue) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        return new ContextKey(this, key, defaultValue);\n    }\n    bufferChangeEvents(callback) {\n        this._onDidChangeContext.pause();\n        try {\n            callback();\n        }\n        finally {\n            this._onDidChangeContext.resume();\n        }\n    }\n    createScoped(domNode) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        return new ScopedContextKeyService(this, domNode);\n    }\n    contextMatchesRules(rules) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        const context = this.getContextValuesContainer(this._myContextId);\n        const result = (rules ? rules.evaluate(context) : true);\n        // console.group(rules.serialize() + ' -> ' + result);\n        // rules.keys().forEach(key => { console.log(key, ctx[key]); });\n        // console.groupEnd();\n        return result;\n    }\n    getContextKeyValue(key) {\n        if (this._isDisposed) {\n            return undefined;\n        }\n        return this.getContextValuesContainer(this._myContextId).getValue(key);\n    }\n    setContext(key, value) {\n        if (this._isDisposed) {\n            return;\n        }\n        const myContext = this.getContextValuesContainer(this._myContextId);\n        if (!myContext) {\n            return;\n        }\n        if (myContext.setValue(key, value)) {\n            this._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\n        }\n    }\n    removeContext(key) {\n        if (this._isDisposed) {\n            return;\n        }\n        if (this.getContextValuesContainer(this._myContextId).removeValue(key)) {\n            this._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\n        }\n    }\n    getContext(target) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this.getContextValuesContainer(findContextAttr(target));\n    }\n    dispose() {\n        super.dispose();\n        this._isDisposed = true;\n    }\n}\nlet ContextKeyService = class ContextKeyService extends AbstractContextKeyService {\n    constructor(configurationService) {\n        super(0);\n        this._contexts = new Map();\n        this._lastContextId = 0;\n        const myContext = this._register(new ConfigAwareContextValuesContainer(this._myContextId, configurationService, this._onDidChangeContext));\n        this._contexts.set(this._myContextId, myContext);\n        // Uncomment this to see the contexts continuously logged\n        // let lastLoggedValue: string | null = null;\n        // setInterval(() => {\n        // \tlet values = Object.keys(this._contexts).map((key) => this._contexts[key]);\n        // \tlet logValue = values.map(v => JSON.stringify(v._value, null, '\\t')).join('\\n');\n        // \tif (lastLoggedValue !== logValue) {\n        // \t\tlastLoggedValue = logValue;\n        // \t\tconsole.log(lastLoggedValue);\n        // \t}\n        // }, 2000);\n    }\n    getContextValuesContainer(contextId) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this._contexts.get(contextId) || NullContext.INSTANCE;\n    }\n    createChildContext(parentContextId = this._myContextId) {\n        if (this._isDisposed) {\n            throw new Error(`ContextKeyService has been disposed`);\n        }\n        const id = (++this._lastContextId);\n        this._contexts.set(id, new Context(id, this.getContextValuesContainer(parentContextId)));\n        return id;\n    }\n    disposeContext(contextId) {\n        if (!this._isDisposed) {\n            this._contexts.delete(contextId);\n        }\n    }\n};\nContextKeyService = __decorate([\n    __param(0, IConfigurationService)\n], ContextKeyService);\nexport { ContextKeyService };\nclass ScopedContextKeyService extends AbstractContextKeyService {\n    constructor(parent, domNode) {\n        super(parent.createChildContext());\n        this._parentChangeListener = this._register(new MutableDisposable());\n        this._parent = parent;\n        this._updateParentChangeListener();\n        this._domNode = domNode;\n        if (this._domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\n            let extraInfo = '';\n            if (this._domNode.classList) {\n                extraInfo = Array.from(this._domNode.classList.values()).join(', ');\n            }\n            console.error(`Element already has context attribute${extraInfo ? ': ' + extraInfo : ''}`);\n        }\n        this._domNode.setAttribute(KEYBINDING_CONTEXT_ATTR, String(this._myContextId));\n    }\n    _updateParentChangeListener() {\n        // Forward parent events to this listener. Parent will change.\n        this._parentChangeListener.value = this._parent.onDidChangeContext(e => {\n            const thisContainer = this._parent.getContextValuesContainer(this._myContextId);\n            const thisContextValues = thisContainer.value;\n            if (!allEventKeysInContext(e, thisContextValues)) {\n                this._onDidChangeContext.fire(e);\n            }\n        });\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._parent.disposeContext(this._myContextId);\n        this._domNode.removeAttribute(KEYBINDING_CONTEXT_ATTR);\n        super.dispose();\n    }\n    getContextValuesContainer(contextId) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this._parent.getContextValuesContainer(contextId);\n    }\n    createChildContext(parentContextId = this._myContextId) {\n        if (this._isDisposed) {\n            throw new Error(`ScopedContextKeyService has been disposed`);\n        }\n        return this._parent.createChildContext(parentContextId);\n    }\n    disposeContext(contextId) {\n        if (this._isDisposed) {\n            return;\n        }\n        this._parent.disposeContext(contextId);\n    }\n}\nfunction findContextAttr(domNode) {\n    while (domNode) {\n        if (domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\n            const attr = domNode.getAttribute(KEYBINDING_CONTEXT_ATTR);\n            if (attr) {\n                return parseInt(attr, 10);\n            }\n            return NaN;\n        }\n        domNode = domNode.parentElement;\n    }\n    return 0;\n}\nexport function setContext(accessor, contextKey, contextValue) {\n    const contextKeyService = accessor.get(IContextKeyService);\n    contextKeyService.createKey(String(contextKey), stringifyURIs(contextValue));\n}\nfunction stringifyURIs(contextValue) {\n    return cloneAndChange(contextValue, (obj) => {\n        if (typeof obj === 'object' && obj.$mid === 1 /* MarshalledId.Uri */) {\n            return URI.revive(obj).toString();\n        }\n        if (obj instanceof URI) {\n            return obj.toString();\n        }\n        return undefined;\n    });\n}\nCommandsRegistry.registerCommand('_setContext', setContext);\nCommandsRegistry.registerCommand({\n    id: 'getContextKeyInfo',\n    handler() {\n        return [...RawContextKey.all()].sort((a, b) => a.key.localeCompare(b.key));\n    },\n    description: {\n        description: localize('getContextKeyInfo', \"A command that returns information about context keys\"),\n        args: []\n    }\n});\nCommandsRegistry.registerCommand('_generateContextKeyInfo', function () {\n    const result = [];\n    const seen = new Set();\n    for (const info of RawContextKey.all()) {\n        if (!seen.has(info.key)) {\n            seen.add(info.key);\n            result.push(info);\n        }\n    }\n    result.sort((a, b) => a.key.localeCompare(b.key));\n    console.log(JSON.stringify(result, undefined, 2));\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalState } from '../../../base/common/errors.js';\nimport { localize } from '../../../nls.js';\nfunction hintDidYouMean(...meant) {\n    switch (meant.length) {\n        case 1:\n            return localize('contextkey.scanner.hint.didYouMean1', \"Did you mean {0}?\", meant[0]);\n        case 2:\n            return localize('contextkey.scanner.hint.didYouMean2', \"Did you mean {0} or {1}?\", meant[0], meant[1]);\n        case 3:\n            return localize('contextkey.scanner.hint.didYouMean3', \"Did you mean {0}, {1} or {2}?\", meant[0], meant[1], meant[2]);\n        default: // we just don't expect that many\n            return undefined;\n    }\n}\nconst hintDidYouForgetToOpenOrCloseQuote = localize('contextkey.scanner.hint.didYouForgetToOpenOrCloseQuote', \"Did you forget to open or close the quote?\");\nconst hintDidYouForgetToEscapeSlash = localize('contextkey.scanner.hint.didYouForgetToEscapeSlash', \"Did you forget to escape the '/' (slash) character? Put two backslashes before it to escape, e.g., '\\\\\\\\/\\'.\");\n/**\n * A simple scanner for context keys.\n *\n * Example:\n *\n * ```ts\n * const scanner = new Scanner().reset('resourceFileName =~ /docker/ && !config.docker.enabled');\n * const tokens = [...scanner];\n * if (scanner.errorTokens.length > 0) {\n *     scanner.errorTokens.forEach(err => console.error(`Unexpected token at ${err.offset}: ${err.lexeme}\\nHint: ${err.additional}`));\n * } else {\n *     // process tokens\n * }\n * ```\n */\nexport class Scanner {\n    constructor() {\n        this._input = '';\n        this._start = 0;\n        this._current = 0;\n        this._tokens = [];\n        this._errors = [];\n        // u - unicode, y - sticky // TODO@ulugbekna: we accept double quotes as part of the string rather than as a delimiter (to preserve old parser's behavior)\n        this.stringRe = /[a-zA-Z0-9_<>\\-\\./\\\\:\\*\\?\\+\\[\\]\\^,#@;\"%\\$\\p{L}-]+/uy;\n    }\n    static getLexeme(token) {\n        switch (token.type) {\n            case 0 /* TokenType.LParen */:\n                return '(';\n            case 1 /* TokenType.RParen */:\n                return ')';\n            case 2 /* TokenType.Neg */:\n                return '!';\n            case 3 /* TokenType.Eq */:\n                return token.isTripleEq ? '===' : '==';\n            case 4 /* TokenType.NotEq */:\n                return token.isTripleEq ? '!==' : '!=';\n            case 5 /* TokenType.Lt */:\n                return '<';\n            case 6 /* TokenType.LtEq */:\n                return '<=';\n            case 7 /* TokenType.Gt */:\n                return '>=';\n            case 8 /* TokenType.GtEq */:\n                return '>=';\n            case 9 /* TokenType.RegexOp */:\n                return '=~';\n            case 10 /* TokenType.RegexStr */:\n                return token.lexeme;\n            case 11 /* TokenType.True */:\n                return 'true';\n            case 12 /* TokenType.False */:\n                return 'false';\n            case 13 /* TokenType.In */:\n                return 'in';\n            case 14 /* TokenType.Not */:\n                return 'not';\n            case 15 /* TokenType.And */:\n                return '&&';\n            case 16 /* TokenType.Or */:\n                return '||';\n            case 17 /* TokenType.Str */:\n                return token.lexeme;\n            case 18 /* TokenType.QuotedStr */:\n                return token.lexeme;\n            case 19 /* TokenType.Error */:\n                return token.lexeme;\n            case 20 /* TokenType.EOF */:\n                return 'EOF';\n            default:\n                throw illegalState(`unhandled token type: ${JSON.stringify(token)}; have you forgotten to add a case?`);\n        }\n    }\n    reset(value) {\n        this._input = value;\n        this._start = 0;\n        this._current = 0;\n        this._tokens = [];\n        this._errors = [];\n        return this;\n    }\n    scan() {\n        while (!this._isAtEnd()) {\n            this._start = this._current;\n            const ch = this._advance();\n            switch (ch) {\n                case 40 /* CharCode.OpenParen */:\n                    this._addToken(0 /* TokenType.LParen */);\n                    break;\n                case 41 /* CharCode.CloseParen */:\n                    this._addToken(1 /* TokenType.RParen */);\n                    break;\n                case 33 /* CharCode.ExclamationMark */:\n                    if (this._match(61 /* CharCode.Equals */)) {\n                        const isTripleEq = this._match(61 /* CharCode.Equals */); // eat last `=` if `!==`\n                        this._tokens.push({ type: 4 /* TokenType.NotEq */, offset: this._start, isTripleEq });\n                    }\n                    else {\n                        this._addToken(2 /* TokenType.Neg */);\n                    }\n                    break;\n                case 39 /* CharCode.SingleQuote */:\n                    this._quotedString();\n                    break;\n                case 47 /* CharCode.Slash */:\n                    this._regex();\n                    break;\n                case 61 /* CharCode.Equals */:\n                    if (this._match(61 /* CharCode.Equals */)) { // support `==`\n                        const isTripleEq = this._match(61 /* CharCode.Equals */); // eat last `=` if `===`\n                        this._tokens.push({ type: 3 /* TokenType.Eq */, offset: this._start, isTripleEq });\n                    }\n                    else if (this._match(126 /* CharCode.Tilde */)) {\n                        this._addToken(9 /* TokenType.RegexOp */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('==', '=~'));\n                    }\n                    break;\n                case 60 /* CharCode.LessThan */:\n                    this._addToken(this._match(61 /* CharCode.Equals */) ? 6 /* TokenType.LtEq */ : 5 /* TokenType.Lt */);\n                    break;\n                case 62 /* CharCode.GreaterThan */:\n                    this._addToken(this._match(61 /* CharCode.Equals */) ? 8 /* TokenType.GtEq */ : 7 /* TokenType.Gt */);\n                    break;\n                case 38 /* CharCode.Ampersand */:\n                    if (this._match(38 /* CharCode.Ampersand */)) {\n                        this._addToken(15 /* TokenType.And */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('&&'));\n                    }\n                    break;\n                case 124 /* CharCode.Pipe */:\n                    if (this._match(124 /* CharCode.Pipe */)) {\n                        this._addToken(16 /* TokenType.Or */);\n                    }\n                    else {\n                        this._error(hintDidYouMean('||'));\n                    }\n                    break;\n                // TODO@ulugbekna: 1) rewrite using a regex 2) reconsider what characters are considered whitespace, including unicode, nbsp, etc.\n                case 32 /* CharCode.Space */:\n                case 13 /* CharCode.CarriageReturn */:\n                case 9 /* CharCode.Tab */:\n                case 10 /* CharCode.LineFeed */:\n                case 160 /* CharCode.NoBreakSpace */: // &nbsp\n                    break;\n                default:\n                    this._string();\n            }\n        }\n        this._start = this._current;\n        this._addToken(20 /* TokenType.EOF */);\n        return Array.from(this._tokens);\n    }\n    _match(expected) {\n        if (this._isAtEnd()) {\n            return false;\n        }\n        if (this._input.charCodeAt(this._current) !== expected) {\n            return false;\n        }\n        this._current++;\n        return true;\n    }\n    _advance() {\n        return this._input.charCodeAt(this._current++);\n    }\n    _peek() {\n        return this._isAtEnd() ? 0 /* CharCode.Null */ : this._input.charCodeAt(this._current);\n    }\n    _addToken(type) {\n        this._tokens.push({ type, offset: this._start });\n    }\n    _error(additional) {\n        const offset = this._start;\n        const lexeme = this._input.substring(this._start, this._current);\n        const errToken = { type: 19 /* TokenType.Error */, offset: this._start, lexeme };\n        this._errors.push({ offset, lexeme, additionalInfo: additional });\n        this._tokens.push(errToken);\n    }\n    _string() {\n        this.stringRe.lastIndex = this._start;\n        const match = this.stringRe.exec(this._input);\n        if (match) {\n            this._current = this._start + match[0].length;\n            const lexeme = this._input.substring(this._start, this._current);\n            const keyword = Scanner._keywords.get(lexeme);\n            if (keyword) {\n                this._addToken(keyword);\n            }\n            else {\n                this._tokens.push({ type: 17 /* TokenType.Str */, lexeme, offset: this._start });\n            }\n        }\n    }\n    // captures the lexeme without the leading and trailing '\n    _quotedString() {\n        while (this._peek() !== 39 /* CharCode.SingleQuote */ && !this._isAtEnd()) { // TODO@ulugbekna: add support for escaping ' ?\n            this._advance();\n        }\n        if (this._isAtEnd()) {\n            this._error(hintDidYouForgetToOpenOrCloseQuote);\n            return;\n        }\n        // consume the closing '\n        this._advance();\n        this._tokens.push({ type: 18 /* TokenType.QuotedStr */, lexeme: this._input.substring(this._start + 1, this._current - 1), offset: this._start + 1 });\n    }\n    /*\n     * Lexing a regex expression: /.../[igsmyu]*\n     * Based on https://github.com/microsoft/TypeScript/blob/9247ef115e617805983740ba795d7a8164babf89/src/compiler/scanner.ts#L2129-L2181\n     *\n     * Note that we want slashes within a regex to be escaped, e.g., /file:\\\\/\\\\/\\\\// should match `file:///`\n     */\n    _regex() {\n        let p = this._current;\n        let inEscape = false;\n        let inCharacterClass = false;\n        while (true) {\n            if (p >= this._input.length) {\n                this._current = p;\n                this._error(hintDidYouForgetToEscapeSlash);\n                return;\n            }\n            const ch = this._input.charCodeAt(p);\n            if (inEscape) { // parsing an escape character\n                inEscape = false;\n            }\n            else if (ch === 47 /* CharCode.Slash */ && !inCharacterClass) { // end of regex\n                p++;\n                break;\n            }\n            else if (ch === 91 /* CharCode.OpenSquareBracket */) {\n                inCharacterClass = true;\n            }\n            else if (ch === 92 /* CharCode.Backslash */) {\n                inEscape = true;\n            }\n            else if (ch === 93 /* CharCode.CloseSquareBracket */) {\n                inCharacterClass = false;\n            }\n            p++;\n        }\n        // Consume flags // TODO@ulugbekna: use regex instead\n        while (p < this._input.length && Scanner._regexFlags.has(this._input.charCodeAt(p))) {\n            p++;\n        }\n        this._current = p;\n        const lexeme = this._input.substring(this._start, this._current);\n        this._tokens.push({ type: 10 /* TokenType.RegexStr */, lexeme, offset: this._start });\n    }\n    _isAtEnd() {\n        return this._current >= this._input.length;\n    }\n}\nScanner._regexFlags = new Set(['i', 'g', 's', 'm', 'y', 'u'].map(ch => ch.charCodeAt(0)));\nScanner._keywords = new Map([\n    ['not', 14 /* TokenType.Not */],\n    ['in', 13 /* TokenType.In */],\n    ['false', 12 /* TokenType.False */],\n    ['true', 11 /* TokenType.True */],\n]);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isChrome, isEdge, isFirefox, isLinux, isMacintosh, isSafari, isWeb, isWindows } from '../../../base/common/platform.js';\nimport { isFalsyOrWhitespace } from '../../../base/common/strings.js';\nimport { Scanner } from './scanner.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport { localize } from '../../../nls.js';\nconst CONSTANT_VALUES = new Map();\nCONSTANT_VALUES.set('false', false);\nCONSTANT_VALUES.set('true', true);\nCONSTANT_VALUES.set('isMac', isMacintosh);\nCONSTANT_VALUES.set('isLinux', isLinux);\nCONSTANT_VALUES.set('isWindows', isWindows);\nCONSTANT_VALUES.set('isWeb', isWeb);\nCONSTANT_VALUES.set('isMacNative', isMacintosh && !isWeb);\nCONSTANT_VALUES.set('isEdge', isEdge);\nCONSTANT_VALUES.set('isFirefox', isFirefox);\nCONSTANT_VALUES.set('isChrome', isChrome);\nCONSTANT_VALUES.set('isSafari', isSafari);\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nconst defaultConfig = {\n    regexParsingWithErrorRecovery: true\n};\nconst errorEmptyString = localize('contextkey.parser.error.emptyString', \"Empty context key expression\");\nconst hintEmptyString = localize('contextkey.parser.error.emptyString.hint', \"Did you forget to write an expression? You can also put 'false' or 'true' to always evaluate to false or true, respectively.\");\nconst errorNoInAfterNot = localize('contextkey.parser.error.noInAfterNot', \"'in' after 'not'.\");\nconst errorClosingParenthesis = localize('contextkey.parser.error.closingParenthesis', \"closing parenthesis ')'\");\nconst errorUnexpectedToken = localize('contextkey.parser.error.unexpectedToken', \"Unexpected token\");\nconst hintUnexpectedToken = localize('contextkey.parser.error.unexpectedToken.hint', \"Did you forget to put && or || before the token?\");\nconst errorUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF', \"Unexpected end of expression\");\nconst hintUnexpectedEOF = localize('contextkey.parser.error.unexpectedEOF.hint', \"Did you forget to put a context key?\");\n/**\n * A parser for context key expressions.\n *\n * Example:\n * ```ts\n * const parser = new Parser();\n * const expr = parser.parse('foo == \"bar\" && baz == true');\n *\n * if (expr === undefined) {\n * \t// there were lexing or parsing errors\n * \t// process lexing errors with `parser.lexingErrors`\n *  // process parsing errors with `parser.parsingErrors`\n * } else {\n * \t// expr is a valid expression\n * }\n * ```\n */\nexport class Parser {\n    constructor(_config = defaultConfig) {\n        this._config = _config;\n        // lifetime note: `_scanner` lives as long as the parser does, i.e., is not reset between calls to `parse`\n        this._scanner = new Scanner();\n        // lifetime note: `_tokens`, `_current`, and `_parsingErrors` must be reset between calls to `parse`\n        this._tokens = [];\n        this._current = 0; // invariant: 0 <= this._current < this._tokens.length ; any incrementation of this value must first call `_isAtEnd`\n        this._parsingErrors = [];\n        this._flagsGYRe = /g|y/g;\n    }\n    /**\n     * Parse a context key expression.\n     *\n     * @param input the expression to parse\n     * @returns the parsed expression or `undefined` if there's an error - call `lexingErrors` and `parsingErrors` to see the errors\n     */\n    parse(input) {\n        if (input === '') {\n            this._parsingErrors.push({ message: errorEmptyString, offset: 0, lexeme: '', additionalInfo: hintEmptyString });\n            return undefined;\n        }\n        this._tokens = this._scanner.reset(input).scan();\n        // @ulugbekna: we do not stop parsing if there are lexing errors to be able to reconstruct regexes with unescaped slashes; TODO@ulugbekna: make this respect config option for recovery\n        this._current = 0;\n        this._parsingErrors = [];\n        try {\n            const expr = this._expr();\n            if (!this._isAtEnd()) {\n                const peek = this._peek();\n                const additionalInfo = peek.type === 17 /* TokenType.Str */ ? hintUnexpectedToken : undefined;\n                this._parsingErrors.push({ message: errorUnexpectedToken, offset: peek.offset, lexeme: Scanner.getLexeme(peek), additionalInfo });\n                throw Parser._parseError;\n            }\n            return expr;\n        }\n        catch (e) {\n            if (!(e === Parser._parseError)) {\n                throw e;\n            }\n            return undefined;\n        }\n    }\n    _expr() {\n        return this._or();\n    }\n    _or() {\n        const expr = [this._and()];\n        while (this._matchOne(16 /* TokenType.Or */)) {\n            const right = this._and();\n            expr.push(right);\n        }\n        return expr.length === 1 ? expr[0] : ContextKeyExpr.or(...expr);\n    }\n    _and() {\n        const expr = [this._term()];\n        while (this._matchOne(15 /* TokenType.And */)) {\n            const right = this._term();\n            expr.push(right);\n        }\n        return expr.length === 1 ? expr[0] : ContextKeyExpr.and(...expr);\n    }\n    _term() {\n        if (this._matchOne(2 /* TokenType.Neg */)) {\n            const peek = this._peek();\n            switch (peek.type) {\n                case 11 /* TokenType.True */:\n                    this._advance();\n                    return ContextKeyFalseExpr.INSTANCE;\n                case 12 /* TokenType.False */:\n                    this._advance();\n                    return ContextKeyTrueExpr.INSTANCE;\n                case 0 /* TokenType.LParen */: {\n                    this._advance();\n                    const expr = this._expr();\n                    this._consume(1 /* TokenType.RParen */, errorClosingParenthesis);\n                    return expr === null || expr === void 0 ? void 0 : expr.negate();\n                }\n                case 17 /* TokenType.Str */:\n                    this._advance();\n                    return ContextKeyNotExpr.create(peek.lexeme);\n                default:\n                    throw this._errExpectedButGot(`KEY | true | false | '(' expression ')'`, peek);\n            }\n        }\n        return this._primary();\n    }\n    _primary() {\n        const peek = this._peek();\n        switch (peek.type) {\n            case 11 /* TokenType.True */:\n                this._advance();\n                return ContextKeyExpr.true();\n            case 12 /* TokenType.False */:\n                this._advance();\n                return ContextKeyExpr.false();\n            case 0 /* TokenType.LParen */: {\n                this._advance();\n                const expr = this._expr();\n                this._consume(1 /* TokenType.RParen */, errorClosingParenthesis);\n                return expr;\n            }\n            case 17 /* TokenType.Str */: {\n                // KEY\n                const key = peek.lexeme;\n                this._advance();\n                // =~ regex\n                if (this._matchOne(9 /* TokenType.RegexOp */)) {\n                    // @ulugbekna: we need to reconstruct the regex from the tokens because some extensions use unescaped slashes in regexes\n                    const expr = this._peek();\n                    if (!this._config.regexParsingWithErrorRecovery) {\n                        this._advance();\n                        if (expr.type !== 10 /* TokenType.RegexStr */) {\n                            throw this._errExpectedButGot(`REGEX`, expr);\n                        }\n                        const regexLexeme = expr.lexeme;\n                        const closingSlashIndex = regexLexeme.lastIndexOf('/');\n                        const flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n                        let regexp;\n                        try {\n                            regexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n                        }\n                        catch (e) {\n                            throw this._errExpectedButGot(`REGEX`, expr);\n                        }\n                        return ContextKeyRegexExpr.create(key, regexp);\n                    }\n                    switch (expr.type) {\n                        case 10 /* TokenType.RegexStr */:\n                        case 19 /* TokenType.Error */: { // also handle an ErrorToken in case of smth such as /(/file)/\n                            const lexemeReconstruction = [expr.lexeme]; // /REGEX/ or /REGEX/FLAGS\n                            this._advance();\n                            let followingToken = this._peek();\n                            let parenBalance = 0;\n                            for (let i = 0; i < expr.lexeme.length; i++) {\n                                if (expr.lexeme.charCodeAt(i) === 40 /* CharCode.OpenParen */) {\n                                    parenBalance++;\n                                }\n                                else if (expr.lexeme.charCodeAt(i) === 41 /* CharCode.CloseParen */) {\n                                    parenBalance--;\n                                }\n                            }\n                            while (!this._isAtEnd() && followingToken.type !== 15 /* TokenType.And */ && followingToken.type !== 16 /* TokenType.Or */) {\n                                switch (followingToken.type) {\n                                    case 0 /* TokenType.LParen */:\n                                        parenBalance++;\n                                        break;\n                                    case 1 /* TokenType.RParen */:\n                                        parenBalance--;\n                                        break;\n                                    case 10 /* TokenType.RegexStr */:\n                                    case 18 /* TokenType.QuotedStr */:\n                                        for (let i = 0; i < followingToken.lexeme.length; i++) {\n                                            if (followingToken.lexeme.charCodeAt(i) === 40 /* CharCode.OpenParen */) {\n                                                parenBalance++;\n                                            }\n                                            else if (expr.lexeme.charCodeAt(i) === 41 /* CharCode.CloseParen */) {\n                                                parenBalance--;\n                                            }\n                                        }\n                                }\n                                if (parenBalance < 0) {\n                                    break;\n                                }\n                                lexemeReconstruction.push(Scanner.getLexeme(followingToken));\n                                this._advance();\n                                followingToken = this._peek();\n                            }\n                            const regexLexeme = lexemeReconstruction.join('');\n                            const closingSlashIndex = regexLexeme.lastIndexOf('/');\n                            const flags = closingSlashIndex === regexLexeme.length - 1 ? undefined : this._removeFlagsGY(regexLexeme.substring(closingSlashIndex + 1));\n                            let regexp;\n                            try {\n                                regexp = new RegExp(regexLexeme.substring(1, closingSlashIndex), flags);\n                            }\n                            catch (e) {\n                                throw this._errExpectedButGot(`REGEX`, expr);\n                            }\n                            return ContextKeyExpr.regex(key, regexp);\n                        }\n                        case 18 /* TokenType.QuotedStr */: {\n                            const serializedValue = expr.lexeme;\n                            this._advance();\n                            // replicate old regex parsing behavior\n                            let regex = null;\n                            if (!isFalsyOrWhitespace(serializedValue)) {\n                                const start = serializedValue.indexOf('/');\n                                const end = serializedValue.lastIndexOf('/');\n                                if (start !== end && start >= 0) {\n                                    const value = serializedValue.slice(start + 1, end);\n                                    const caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n                                    try {\n                                        regex = new RegExp(value, caseIgnoreFlag);\n                                    }\n                                    catch (_e) {\n                                        throw this._errExpectedButGot(`REGEX`, expr);\n                                    }\n                                }\n                            }\n                            if (regex === null) {\n                                throw this._errExpectedButGot('REGEX', expr);\n                            }\n                            return ContextKeyRegexExpr.create(key, regex);\n                        }\n                        default:\n                            throw this._errExpectedButGot('REGEX', this._peek());\n                    }\n                }\n                // [ 'not' 'in' value ]\n                if (this._matchOne(14 /* TokenType.Not */)) {\n                    this._consume(13 /* TokenType.In */, errorNoInAfterNot);\n                    const right = this._value();\n                    return ContextKeyExpr.notIn(key, right);\n                }\n                // [ ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in') value ]\n                const maybeOp = this._peek().type;\n                switch (maybeOp) {\n                    case 3 /* TokenType.Eq */: {\n                        this._advance();\n                        const right = this._value();\n                        if (this._previous().type === 18 /* TokenType.QuotedStr */) { // to preserve old parser behavior: \"foo == 'true'\" is preserved as \"foo == 'true'\", but \"foo == true\" is optimized as \"foo\"\n                            return ContextKeyExpr.equals(key, right);\n                        }\n                        switch (right) {\n                            case 'true':\n                                return ContextKeyExpr.has(key);\n                            case 'false':\n                                return ContextKeyExpr.not(key);\n                            default:\n                                return ContextKeyExpr.equals(key, right);\n                        }\n                    }\n                    case 4 /* TokenType.NotEq */: {\n                        this._advance();\n                        const right = this._value();\n                        if (this._previous().type === 18 /* TokenType.QuotedStr */) { // same as above with \"foo != 'true'\"\n                            return ContextKeyExpr.notEquals(key, right);\n                        }\n                        switch (right) {\n                            case 'true':\n                                return ContextKeyExpr.not(key);\n                            case 'false':\n                                return ContextKeyExpr.has(key);\n                            default:\n                                return ContextKeyExpr.notEquals(key, right);\n                        }\n                    }\n                    // TODO: ContextKeyExpr.smaller(key, right) accepts only `number` as `right` AND during eval of this node, we just eval to `false` if `right` is not a number\n                    // consequently, package.json linter should _warn_ the user if they're passing undesired things to ops\n                    case 5 /* TokenType.Lt */:\n                        this._advance();\n                        return ContextKeySmallerExpr.create(key, this._value());\n                    case 6 /* TokenType.LtEq */:\n                        this._advance();\n                        return ContextKeySmallerEqualsExpr.create(key, this._value());\n                    case 7 /* TokenType.Gt */:\n                        this._advance();\n                        return ContextKeyGreaterExpr.create(key, this._value());\n                    case 8 /* TokenType.GtEq */:\n                        this._advance();\n                        return ContextKeyGreaterEqualsExpr.create(key, this._value());\n                    case 13 /* TokenType.In */:\n                        this._advance();\n                        return ContextKeyExpr.in(key, this._value());\n                    default:\n                        return ContextKeyExpr.has(key);\n                }\n            }\n            case 20 /* TokenType.EOF */:\n                this._parsingErrors.push({ message: errorUnexpectedEOF, offset: peek.offset, lexeme: '', additionalInfo: hintUnexpectedEOF });\n                throw Parser._parseError;\n            default:\n                throw this._errExpectedButGot(`true | false | KEY \\n\\t| KEY '=~' REGEX \\n\\t| KEY ('==' | '!=' | '<' | '<=' | '>' | '>=' | 'in' | 'not' 'in') value`, this._peek());\n        }\n    }\n    _value() {\n        const token = this._peek();\n        switch (token.type) {\n            case 17 /* TokenType.Str */:\n            case 18 /* TokenType.QuotedStr */:\n                this._advance();\n                return token.lexeme;\n            case 11 /* TokenType.True */:\n                this._advance();\n                return 'true';\n            case 12 /* TokenType.False */:\n                this._advance();\n                return 'false';\n            case 13 /* TokenType.In */: // we support `in` as a value, e.g., \"when\": \"languageId == in\" - exists in existing extensions\n                this._advance();\n                return 'in';\n            default:\n                // this allows \"when\": \"foo == \" which's used by existing extensions\n                // we do not call `_advance` on purpose - we don't want to eat unintended tokens\n                return '';\n        }\n    }\n    _removeFlagsGY(flags) {\n        return flags.replaceAll(this._flagsGYRe, '');\n    }\n    // careful: this can throw if current token is the initial one (ie index = 0)\n    _previous() {\n        return this._tokens[this._current - 1];\n    }\n    _matchOne(token) {\n        if (this._check(token)) {\n            this._advance();\n            return true;\n        }\n        return false;\n    }\n    _advance() {\n        if (!this._isAtEnd()) {\n            this._current++;\n        }\n        return this._previous();\n    }\n    _consume(type, message) {\n        if (this._check(type)) {\n            return this._advance();\n        }\n        throw this._errExpectedButGot(message, this._peek());\n    }\n    _errExpectedButGot(expected, got, additionalInfo) {\n        const message = localize('contextkey.parser.error.expectedButGot', \"Expected: {0}\\nReceived: '{1}'.\", expected, Scanner.getLexeme(got));\n        const offset = got.offset;\n        const lexeme = Scanner.getLexeme(got);\n        this._parsingErrors.push({ message, offset, lexeme, additionalInfo });\n        return Parser._parseError;\n    }\n    _check(type) {\n        return this._peek().type === type;\n    }\n    _peek() {\n        return this._tokens[this._current];\n    }\n    _isAtEnd() {\n        return this._peek().type === 20 /* TokenType.EOF */;\n    }\n}\n// Note: this doesn't produce an exact syntax tree but a normalized one\n// ContextKeyExpression's that we use as AST nodes do not expose constructors that do not normalize\nParser._parseError = new Error();\nexport class ContextKeyExpr {\n    static false() {\n        return ContextKeyFalseExpr.INSTANCE;\n    }\n    static true() {\n        return ContextKeyTrueExpr.INSTANCE;\n    }\n    static has(key) {\n        return ContextKeyDefinedExpr.create(key);\n    }\n    static equals(key, value) {\n        return ContextKeyEqualsExpr.create(key, value);\n    }\n    static notEquals(key, value) {\n        return ContextKeyNotEqualsExpr.create(key, value);\n    }\n    static regex(key, value) {\n        return ContextKeyRegexExpr.create(key, value);\n    }\n    static in(key, value) {\n        return ContextKeyInExpr.create(key, value);\n    }\n    static notIn(key, value) {\n        return ContextKeyNotInExpr.create(key, value);\n    }\n    static not(key) {\n        return ContextKeyNotExpr.create(key);\n    }\n    static and(...expr) {\n        return ContextKeyAndExpr.create(expr, null, true);\n    }\n    static or(...expr) {\n        return ContextKeyOrExpr.create(expr, null, true);\n    }\n    static deserialize(serialized) {\n        if (serialized === undefined || serialized === null) { // an empty string needs to be handled by the parser to get a corresponding parsing error reported\n            return undefined;\n        }\n        const expr = this._parser.parse(serialized);\n        return expr;\n    }\n}\nContextKeyExpr._parser = new Parser({ regexParsingWithErrorRecovery: false });\nexport function expressionsAreEqualWithConstantSubstitution(a, b) {\n    const aExpr = a ? a.substituteConstants() : undefined;\n    const bExpr = b ? b.substituteConstants() : undefined;\n    if (!aExpr && !bExpr) {\n        return true;\n    }\n    if (!aExpr || !bExpr) {\n        return false;\n    }\n    return aExpr.equals(bExpr);\n}\nfunction cmp(a, b) {\n    return a.cmp(b);\n}\nexport class ContextKeyFalseExpr {\n    constructor() {\n        this.type = 0 /* ContextKeyExprType.False */;\n    }\n    cmp(other) {\n        return this.type - other.type;\n    }\n    equals(other) {\n        return (other.type === this.type);\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return false;\n    }\n    serialize() {\n        return 'false';\n    }\n    keys() {\n        return [];\n    }\n    negate() {\n        return ContextKeyTrueExpr.INSTANCE;\n    }\n}\nContextKeyFalseExpr.INSTANCE = new ContextKeyFalseExpr();\nexport class ContextKeyTrueExpr {\n    constructor() {\n        this.type = 1 /* ContextKeyExprType.True */;\n    }\n    cmp(other) {\n        return this.type - other.type;\n    }\n    equals(other) {\n        return (other.type === this.type);\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return true;\n    }\n    serialize() {\n        return 'true';\n    }\n    keys() {\n        return [];\n    }\n    negate() {\n        return ContextKeyFalseExpr.INSTANCE;\n    }\n}\nContextKeyTrueExpr.INSTANCE = new ContextKeyTrueExpr();\nexport class ContextKeyDefinedExpr {\n    static create(key, negated = null) {\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            return constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n        }\n        return new ContextKeyDefinedExpr(key, negated);\n    }\n    constructor(key, negated) {\n        this.key = key;\n        this.negated = negated;\n        this.type = 2 /* ContextKeyExprType.Defined */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp1(this.key, other.key);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            return constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n        }\n        return this;\n    }\n    evaluate(context) {\n        return (!!context.getValue(this.key));\n    }\n    serialize() {\n        return this.key;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotExpr.create(this.key, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyEqualsExpr {\n    static create(key, value, negated = null) {\n        if (typeof value === 'boolean') {\n            return (value ? ContextKeyDefinedExpr.create(key, negated) : ContextKeyNotExpr.create(key, negated));\n        }\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            const trueValue = constantValue ? 'true' : 'false';\n            return (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n        }\n        return new ContextKeyEqualsExpr(key, value, negated);\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 4 /* ContextKeyExprType.Equals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            const trueValue = constantValue ? 'true' : 'false';\n            return (this.value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        // Intentional ==\n        // eslint-disable-next-line eqeqeq\n        return (context.getValue(this.key) == this.value);\n    }\n    serialize() {\n        return `${this.key} == '${this.value}'`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyInExpr {\n    static create(key, valueKey) {\n        return new ContextKeyInExpr(key, valueKey);\n    }\n    constructor(key, valueKey) {\n        this.key = key;\n        this.valueKey = valueKey;\n        this.type = 10 /* ContextKeyExprType.In */;\n        this.negated = null;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.valueKey, other.key, other.valueKey);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.valueKey === other.valueKey);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        const source = context.getValue(this.valueKey);\n        const item = context.getValue(this.key);\n        if (Array.isArray(source)) {\n            return source.includes(item);\n        }\n        if (typeof item === 'string' && typeof source === 'object' && source !== null) {\n            return hasOwnProperty.call(source, item);\n        }\n        return false;\n    }\n    serialize() {\n        return `${this.key} in '${this.valueKey}'`;\n    }\n    keys() {\n        return [this.key, this.valueKey];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotInExpr.create(this.key, this.valueKey);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotInExpr {\n    static create(key, valueKey) {\n        return new ContextKeyNotInExpr(key, valueKey);\n    }\n    constructor(key, valueKey) {\n        this.key = key;\n        this.valueKey = valueKey;\n        this.type = 11 /* ContextKeyExprType.NotIn */;\n        this._negated = ContextKeyInExpr.create(key, valueKey);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return this._negated.cmp(other._negated);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return this._negated.equals(other._negated);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return !this._negated.evaluate(context);\n    }\n    serialize() {\n        return `${this.key} not in '${this.valueKey}'`;\n    }\n    keys() {\n        return this._negated.keys();\n    }\n    negate() {\n        return this._negated;\n    }\n}\nexport class ContextKeyNotEqualsExpr {\n    static create(key, value, negated = null) {\n        if (typeof value === 'boolean') {\n            if (value) {\n                return ContextKeyNotExpr.create(key, negated);\n            }\n            return ContextKeyDefinedExpr.create(key, negated);\n        }\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            const falseValue = constantValue ? 'true' : 'false';\n            return (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return new ContextKeyNotEqualsExpr(key, value, negated);\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 5 /* ContextKeyExprType.NotEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            const falseValue = constantValue ? 'true' : 'false';\n            return (this.value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        // Intentional !=\n        // eslint-disable-next-line eqeqeq\n        return (context.getValue(this.key) != this.value);\n    }\n    serialize() {\n        return `${this.key} != '${this.value}'`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotExpr {\n    static create(key, negated = null) {\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            return (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return new ContextKeyNotExpr(key, negated);\n    }\n    constructor(key, negated) {\n        this.key = key;\n        this.negated = negated;\n        this.type = 3 /* ContextKeyExprType.Not */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp1(this.key, other.key);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            return (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        return (!context.getValue(this.key));\n    }\n    serialize() {\n        return `!${this.key}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyDefinedExpr.create(this.key, this);\n        }\n        return this.negated;\n    }\n}\nfunction withFloatOrStr(value, callback) {\n    if (typeof value === 'string') {\n        const n = parseFloat(value);\n        if (!isNaN(n)) {\n            value = n;\n        }\n    }\n    if (typeof value === 'string' || typeof value === 'number') {\n        return callback(value);\n    }\n    return ContextKeyFalseExpr.INSTANCE;\n}\nexport class ContextKeyGreaterExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeyGreaterExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 12 /* ContextKeyExprType.Greater */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) > this.value);\n    }\n    serialize() {\n        return `${this.key} > ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeySmallerEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyGreaterEqualsExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeyGreaterEqualsExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 13 /* ContextKeyExprType.GreaterEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) >= this.value);\n    }\n    serialize() {\n        return `${this.key} >= ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeySmallerExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeySmallerExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeySmallerExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 14 /* ContextKeyExprType.Smaller */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) < this.value);\n    }\n    serialize() {\n        return `${this.key} < ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyGreaterEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeySmallerEqualsExpr {\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeySmallerEqualsExpr(key, value, negated));\n    }\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 15 /* ContextKeyExprType.SmallerEquals */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) <= this.value);\n    }\n    serialize() {\n        return `${this.key} <= ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyGreaterExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyRegexExpr {\n    static create(key, regexp) {\n        return new ContextKeyRegexExpr(key, regexp);\n    }\n    constructor(key, regexp) {\n        this.key = key;\n        this.regexp = regexp;\n        this.type = 7 /* ContextKeyExprType.Regex */;\n        this.negated = null;\n        //\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.key < other.key) {\n            return -1;\n        }\n        if (this.key > other.key) {\n            return 1;\n        }\n        const thisSource = this.regexp ? this.regexp.source : '';\n        const otherSource = other.regexp ? other.regexp.source : '';\n        if (thisSource < otherSource) {\n            return -1;\n        }\n        if (thisSource > otherSource) {\n            return 1;\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            const thisSource = this.regexp ? this.regexp.source : '';\n            const otherSource = other.regexp ? other.regexp.source : '';\n            return (this.key === other.key && thisSource === otherSource);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        const value = context.getValue(this.key);\n        return this.regexp ? this.regexp.test(value) : false;\n    }\n    serialize() {\n        const value = this.regexp\n            ? `/${this.regexp.source}/${this.regexp.flags}`\n            : '/invalid/';\n        return `${this.key} =~ ${value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotRegexExpr.create(this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotRegexExpr {\n    static create(actual) {\n        return new ContextKeyNotRegexExpr(actual);\n    }\n    constructor(_actual) {\n        this._actual = _actual;\n        this.type = 8 /* ContextKeyExprType.NotRegex */;\n        //\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return this._actual.cmp(other._actual);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return this._actual.equals(other._actual);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return !this._actual.evaluate(context);\n    }\n    serialize() {\n        return `!(${this._actual.serialize()})`;\n    }\n    keys() {\n        return this._actual.keys();\n    }\n    negate() {\n        return this._actual;\n    }\n}\n/**\n * @returns the same instance if nothing changed.\n */\nfunction eliminateConstantsInArray(arr) {\n    // Allocate array only if there is a difference\n    let newArr = null;\n    for (let i = 0, len = arr.length; i < len; i++) {\n        const newExpr = arr[i].substituteConstants();\n        if (arr[i] !== newExpr) {\n            // something has changed!\n            // allocate array on first difference\n            if (newArr === null) {\n                newArr = [];\n                for (let j = 0; j < i; j++) {\n                    newArr[j] = arr[j];\n                }\n            }\n        }\n        if (newArr !== null) {\n            newArr[i] = newExpr;\n        }\n    }\n    if (newArr === null) {\n        return arr;\n    }\n    return newArr;\n}\nexport class ContextKeyAndExpr {\n    static create(_expr, negated, extraRedundantCheck) {\n        return ContextKeyAndExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n    }\n    constructor(expr, negated) {\n        this.expr = expr;\n        this.negated = negated;\n        this.type = 6 /* ContextKeyExprType.And */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.expr.length < other.expr.length) {\n            return -1;\n        }\n        if (this.expr.length > other.expr.length) {\n            return 1;\n        }\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            const r = cmp(this.expr[i], other.expr[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            if (this.expr.length !== other.expr.length) {\n                return false;\n            }\n            for (let i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].equals(other.expr[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    substituteConstants() {\n        const exprArr = eliminateConstantsInArray(this.expr);\n        if (exprArr === this.expr) {\n            // no change\n            return this;\n        }\n        return ContextKeyAndExpr.create(exprArr, this.negated, false);\n    }\n    evaluate(context) {\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            if (!this.expr[i].evaluate(context)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static _normalizeArr(arr, negated, extraRedundantCheck) {\n        const expr = [];\n        let hasTrue = false;\n        for (const e of arr) {\n            if (!e) {\n                continue;\n            }\n            if (e.type === 1 /* ContextKeyExprType.True */) {\n                // anything && true ==> anything\n                hasTrue = true;\n                continue;\n            }\n            if (e.type === 0 /* ContextKeyExprType.False */) {\n                // anything && false ==> false\n                return ContextKeyFalseExpr.INSTANCE;\n            }\n            if (e.type === 6 /* ContextKeyExprType.And */) {\n                expr.push(...e.expr);\n                continue;\n            }\n            expr.push(e);\n        }\n        if (expr.length === 0 && hasTrue) {\n            return ContextKeyTrueExpr.INSTANCE;\n        }\n        if (expr.length === 0) {\n            return undefined;\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        expr.sort(cmp);\n        // eliminate duplicate terms\n        for (let i = 1; i < expr.length; i++) {\n            if (expr[i - 1].equals(expr[i])) {\n                expr.splice(i, 1);\n                i--;\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // We must distribute any OR expression because we don't support parens\n        // OR extensions will be at the end (due to sorting rules)\n        while (expr.length > 1) {\n            const lastElement = expr[expr.length - 1];\n            if (lastElement.type !== 9 /* ContextKeyExprType.Or */) {\n                break;\n            }\n            // pop the last element\n            expr.pop();\n            // pop the second to last element\n            const secondToLastElement = expr.pop();\n            const isFinished = (expr.length === 0);\n            // distribute `lastElement` over `secondToLastElement`\n            const resultElement = ContextKeyOrExpr.create(lastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement], null, extraRedundantCheck)), null, isFinished);\n            if (resultElement) {\n                expr.push(resultElement);\n                expr.sort(cmp);\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // resolve false AND expressions\n        if (extraRedundantCheck) {\n            for (let i = 0; i < expr.length; i++) {\n                for (let j = i + 1; j < expr.length; j++) {\n                    if (expr[i].negate().equals(expr[j])) {\n                        // A && !A case\n                        return ContextKeyFalseExpr.INSTANCE;\n                    }\n                }\n            }\n            if (expr.length === 1) {\n                return expr[0];\n            }\n        }\n        return new ContextKeyAndExpr(expr, negated);\n    }\n    serialize() {\n        return this.expr.map(e => e.serialize()).join(' && ');\n    }\n    keys() {\n        const result = [];\n        for (const expr of this.expr) {\n            result.push(...expr.keys());\n        }\n        return result;\n    }\n    negate() {\n        if (!this.negated) {\n            const result = [];\n            for (const expr of this.expr) {\n                result.push(expr.negate());\n            }\n            this.negated = ContextKeyOrExpr.create(result, this, true);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyOrExpr {\n    static create(_expr, negated, extraRedundantCheck) {\n        return ContextKeyOrExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n    }\n    constructor(expr, negated) {\n        this.expr = expr;\n        this.negated = negated;\n        this.type = 9 /* ContextKeyExprType.Or */;\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.expr.length < other.expr.length) {\n            return -1;\n        }\n        if (this.expr.length > other.expr.length) {\n            return 1;\n        }\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            const r = cmp(this.expr[i], other.expr[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            if (this.expr.length !== other.expr.length) {\n                return false;\n            }\n            for (let i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].equals(other.expr[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    substituteConstants() {\n        const exprArr = eliminateConstantsInArray(this.expr);\n        if (exprArr === this.expr) {\n            // no change\n            return this;\n        }\n        return ContextKeyOrExpr.create(exprArr, this.negated, false);\n    }\n    evaluate(context) {\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            if (this.expr[i].evaluate(context)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    static _normalizeArr(arr, negated, extraRedundantCheck) {\n        let expr = [];\n        let hasFalse = false;\n        if (arr) {\n            for (let i = 0, len = arr.length; i < len; i++) {\n                const e = arr[i];\n                if (!e) {\n                    continue;\n                }\n                if (e.type === 0 /* ContextKeyExprType.False */) {\n                    // anything || false ==> anything\n                    hasFalse = true;\n                    continue;\n                }\n                if (e.type === 1 /* ContextKeyExprType.True */) {\n                    // anything || true ==> true\n                    return ContextKeyTrueExpr.INSTANCE;\n                }\n                if (e.type === 9 /* ContextKeyExprType.Or */) {\n                    expr = expr.concat(e.expr);\n                    continue;\n                }\n                expr.push(e);\n            }\n            if (expr.length === 0 && hasFalse) {\n                return ContextKeyFalseExpr.INSTANCE;\n            }\n            expr.sort(cmp);\n        }\n        if (expr.length === 0) {\n            return undefined;\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // eliminate duplicate terms\n        for (let i = 1; i < expr.length; i++) {\n            if (expr[i - 1].equals(expr[i])) {\n                expr.splice(i, 1);\n                i--;\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // resolve true OR expressions\n        if (extraRedundantCheck) {\n            for (let i = 0; i < expr.length; i++) {\n                for (let j = i + 1; j < expr.length; j++) {\n                    if (expr[i].negate().equals(expr[j])) {\n                        // A || !A case\n                        return ContextKeyTrueExpr.INSTANCE;\n                    }\n                }\n            }\n            if (expr.length === 1) {\n                return expr[0];\n            }\n        }\n        return new ContextKeyOrExpr(expr, negated);\n    }\n    serialize() {\n        return this.expr.map(e => e.serialize()).join(' || ');\n    }\n    keys() {\n        const result = [];\n        for (const expr of this.expr) {\n            result.push(...expr.keys());\n        }\n        return result;\n    }\n    negate() {\n        if (!this.negated) {\n            const result = [];\n            for (const expr of this.expr) {\n                result.push(expr.negate());\n            }\n            // We don't support parens, so here we distribute the AND over the OR terminals\n            // We always take the first 2 AND pairs and distribute them\n            while (result.length > 1) {\n                const LEFT = result.shift();\n                const RIGHT = result.shift();\n                const all = [];\n                for (const left of getTerminals(LEFT)) {\n                    for (const right of getTerminals(RIGHT)) {\n                        all.push(ContextKeyAndExpr.create([left, right], null, false));\n                    }\n                }\n                result.unshift(ContextKeyOrExpr.create(all, null, false));\n            }\n            this.negated = ContextKeyOrExpr.create(result, this, true);\n        }\n        return this.negated;\n    }\n}\nexport class RawContextKey extends ContextKeyDefinedExpr {\n    static all() {\n        return RawContextKey._info.values();\n    }\n    constructor(key, defaultValue, metaOrHide) {\n        super(key, null);\n        this._defaultValue = defaultValue;\n        // collect all context keys into a central place\n        if (typeof metaOrHide === 'object') {\n            RawContextKey._info.push(Object.assign(Object.assign({}, metaOrHide), { key }));\n        }\n        else if (metaOrHide !== true) {\n            RawContextKey._info.push({ key, description: metaOrHide, type: defaultValue !== null && defaultValue !== undefined ? typeof defaultValue : undefined });\n        }\n    }\n    bindTo(target) {\n        return target.createKey(this.key, this._defaultValue);\n    }\n    getValue(target) {\n        return target.getContextKeyValue(this.key);\n    }\n    toNegated() {\n        return this.negate();\n    }\n    isEqualTo(value) {\n        return ContextKeyEqualsExpr.create(this.key, value);\n    }\n}\nRawContextKey._info = [];\nexport const IContextKeyService = createDecorator('contextKeyService');\nfunction cmp1(key1, key2) {\n    if (key1 < key2) {\n        return -1;\n    }\n    if (key1 > key2) {\n        return 1;\n    }\n    return 0;\n}\nfunction cmp2(key1, value1, key2, value2) {\n    if (key1 < key2) {\n        return -1;\n    }\n    if (key1 > key2) {\n        return 1;\n    }\n    if (value1 < value2) {\n        return -1;\n    }\n    if (value1 > value2) {\n        return 1;\n    }\n    return 0;\n}\n/**\n * Returns true if it is provable `p` implies `q`.\n */\nexport function implies(p, q) {\n    if (p.type === 0 /* ContextKeyExprType.False */ || q.type === 1 /* ContextKeyExprType.True */) {\n        // false implies anything\n        // anything implies true\n        return true;\n    }\n    if (p.type === 9 /* ContextKeyExprType.Or */) {\n        if (q.type === 9 /* ContextKeyExprType.Or */) {\n            // `a || b || c` can only imply something like `a || b || c || d`\n            return allElementsIncluded(p.expr, q.expr);\n        }\n        return false;\n    }\n    if (q.type === 9 /* ContextKeyExprType.Or */) {\n        for (const element of q.expr) {\n            if (implies(p, element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (p.type === 6 /* ContextKeyExprType.And */) {\n        if (q.type === 6 /* ContextKeyExprType.And */) {\n            // `a && b && c` implies `a && c`\n            return allElementsIncluded(q.expr, p.expr);\n        }\n        for (const element of p.expr) {\n            if (implies(element, q)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    return p.equals(q);\n}\n/**\n * Returns true if all elements in `p` are also present in `q`.\n * The two arrays are assumed to be sorted\n */\nfunction allElementsIncluded(p, q) {\n    let pIndex = 0;\n    let qIndex = 0;\n    while (pIndex < p.length && qIndex < q.length) {\n        const cmp = p[pIndex].cmp(q[qIndex]);\n        if (cmp < 0) {\n            // an element from `p` is missing from `q`\n            return false;\n        }\n        else if (cmp === 0) {\n            pIndex++;\n            qIndex++;\n        }\n        else {\n            qIndex++;\n        }\n    }\n    return (pIndex === p.length);\n}\nfunction getTerminals(node) {\n    if (node.type === 9 /* ContextKeyExprType.Or */) {\n        return node.expr;\n    }\n    return [node];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isIOS, isLinux, isMacintosh, isMobile, isWeb, isWindows } from '../../../base/common/platform.js';\nimport { localize } from '../../../nls.js';\nimport { RawContextKey } from './contextkey.js';\nexport const IsMacContext = new RawContextKey('isMac', isMacintosh, localize('isMac', \"Whether the operating system is macOS\"));\nexport const IsLinuxContext = new RawContextKey('isLinux', isLinux, localize('isLinux', \"Whether the operating system is Linux\"));\nexport const IsWindowsContext = new RawContextKey('isWindows', isWindows, localize('isWindows', \"Whether the operating system is Windows\"));\nexport const IsWebContext = new RawContextKey('isWeb', isWeb, localize('isWeb', \"Whether the platform is a web browser\"));\nexport const IsMacNativeContext = new RawContextKey('isMacNative', isMacintosh && !isWeb, localize('isMacNative', \"Whether the operating system is macOS on a non-browser platform\"));\nexport const IsIOSContext = new RawContextKey('isIOS', isIOS, localize('isIOS', \"Whether the operating system is iOS\"));\nexport const IsMobileContext = new RawContextKey('isMobile', isMobile, localize('isMobile', \"Whether the platform is a mobile web browser\"));\nexport const IsDevelopmentContext = new RawContextKey('isDevelopment', false, true);\nexport const ProductQualityContext = new RawContextKey('productQualityType', '', localize('productQualityType', \"Quality type of VS Code\"));\nexport const InputFocusedContextKey = 'inputFocus';\nexport const InputFocusedContext = new RawContextKey(InputFocusedContextKey, false, localize('inputFocus', \"Whether keyboard focus is inside an input box\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, addDisposableListener, EventType, getActiveElement, isAncestor, isHTMLElement } from '../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { Menu } from '../../../base/browser/ui/menu/menu.js';\nimport { ActionRunner } from '../../../base/common/actions.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { combinedDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { defaultMenuStyles } from '../../theme/browser/defaultStyles.js';\nexport class ContextMenuHandler {\n    constructor(contextViewService, telemetryService, notificationService, keybindingService) {\n        this.contextViewService = contextViewService;\n        this.telemetryService = telemetryService;\n        this.notificationService = notificationService;\n        this.keybindingService = keybindingService;\n        this.focusToReturn = null;\n        this.lastContainer = null;\n        this.block = null;\n        this.blockDisposable = null;\n        this.options = { blockMouse: true };\n    }\n    configure(options) {\n        this.options = options;\n    }\n    showContextMenu(delegate) {\n        const actions = delegate.getActions();\n        if (!actions.length) {\n            return; // Don't render an empty context menu\n        }\n        this.focusToReturn = document.activeElement;\n        let menu;\n        const shadowRootElement = isHTMLElement(delegate.domForShadowRoot) ? delegate.domForShadowRoot : undefined;\n        this.contextViewService.showContextView({\n            getAnchor: () => delegate.getAnchor(),\n            canRelayout: false,\n            anchorAlignment: delegate.anchorAlignment,\n            anchorAxisAlignment: delegate.anchorAxisAlignment,\n            render: (container) => {\n                var _a;\n                this.lastContainer = container;\n                const className = delegate.getMenuClassName ? delegate.getMenuClassName() : '';\n                if (className) {\n                    container.className += ' ' + className;\n                }\n                // Render invisible div to block mouse interaction in the rest of the UI\n                if (this.options.blockMouse) {\n                    this.block = container.appendChild($('.context-view-block'));\n                    this.block.style.position = 'fixed';\n                    this.block.style.cursor = 'initial';\n                    this.block.style.left = '0';\n                    this.block.style.top = '0';\n                    this.block.style.width = '100%';\n                    this.block.style.height = '100%';\n                    this.block.style.zIndex = '-1';\n                    (_a = this.blockDisposable) === null || _a === void 0 ? void 0 : _a.dispose();\n                    this.blockDisposable = addDisposableListener(this.block, EventType.MOUSE_DOWN, e => e.stopPropagation());\n                }\n                const menuDisposables = new DisposableStore();\n                const actionRunner = delegate.actionRunner || new ActionRunner();\n                actionRunner.onWillRun(evt => this.onActionRun(evt, !delegate.skipTelemetry), this, menuDisposables);\n                actionRunner.onDidRun(this.onDidActionRun, this, menuDisposables);\n                menu = new Menu(container, actions, {\n                    actionViewItemProvider: delegate.getActionViewItem,\n                    context: delegate.getActionsContext ? delegate.getActionsContext() : null,\n                    actionRunner,\n                    getKeyBinding: delegate.getKeyBinding ? delegate.getKeyBinding : action => this.keybindingService.lookupKeybinding(action.id)\n                }, defaultMenuStyles);\n                menu.onDidCancel(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n                menu.onDidBlur(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n                menuDisposables.add(addDisposableListener(window, EventType.BLUR, () => this.contextViewService.hideContextView(true)));\n                menuDisposables.add(addDisposableListener(window, EventType.MOUSE_DOWN, (e) => {\n                    if (e.defaultPrevented) {\n                        return;\n                    }\n                    const event = new StandardMouseEvent(e);\n                    let element = event.target;\n                    // Don't do anything as we are likely creating a context menu\n                    if (event.rightButton) {\n                        return;\n                    }\n                    while (element) {\n                        if (element === container) {\n                            return;\n                        }\n                        element = element.parentElement;\n                    }\n                    this.contextViewService.hideContextView(true);\n                }));\n                return combinedDisposable(menuDisposables, menu);\n            },\n            focus: () => {\n                menu === null || menu === void 0 ? void 0 : menu.focus(!!delegate.autoSelectFirstItem);\n            },\n            onHide: (didCancel) => {\n                var _a, _b, _c;\n                (_a = delegate.onHide) === null || _a === void 0 ? void 0 : _a.call(delegate, !!didCancel);\n                if (this.block) {\n                    this.block.remove();\n                    this.block = null;\n                }\n                (_b = this.blockDisposable) === null || _b === void 0 ? void 0 : _b.dispose();\n                this.blockDisposable = null;\n                if (!!this.lastContainer && (getActiveElement() === this.lastContainer || isAncestor(getActiveElement(), this.lastContainer))) {\n                    (_c = this.focusToReturn) === null || _c === void 0 ? void 0 : _c.focus();\n                }\n                this.lastContainer = null;\n            }\n        }, shadowRootElement, !!shadowRootElement);\n    }\n    onActionRun(e, logTelemetry) {\n        if (logTelemetry) {\n            this.telemetryService.publicLog2('workbenchActionExecuted', { id: e.action.id, from: 'contextMenu' });\n        }\n        this.contextViewService.hideContextView(false);\n    }\n    onDidActionRun(e) {\n        if (e.error && !isCancellationError(e.error)) {\n            this.notificationService.error(e.error);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { ModifierKeyEmitter } from '../../../base/browser/dom.js';\nimport { Separator } from '../../../base/common/actions.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { createAndFillInContextMenuActions } from '../../actions/browser/menuEntryActionViewItem.js';\nimport { IMenuService, MenuId } from '../../actions/common/actions.js';\nimport { IContextKeyService } from '../../contextkey/common/contextkey.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\nimport { ContextMenuHandler } from './contextMenuHandler.js';\nimport { IContextViewService } from './contextView.js';\nlet ContextMenuService = class ContextMenuService extends Disposable {\n    get contextMenuHandler() {\n        if (!this._contextMenuHandler) {\n            this._contextMenuHandler = new ContextMenuHandler(this.contextViewService, this.telemetryService, this.notificationService, this.keybindingService);\n        }\n        return this._contextMenuHandler;\n    }\n    constructor(telemetryService, notificationService, contextViewService, keybindingService, menuService, contextKeyService) {\n        super();\n        this.telemetryService = telemetryService;\n        this.notificationService = notificationService;\n        this.contextViewService = contextViewService;\n        this.keybindingService = keybindingService;\n        this.menuService = menuService;\n        this.contextKeyService = contextKeyService;\n        this._contextMenuHandler = undefined;\n        this._onDidShowContextMenu = this._store.add(new Emitter());\n        this._onDidHideContextMenu = this._store.add(new Emitter());\n    }\n    configure(options) {\n        this.contextMenuHandler.configure(options);\n    }\n    // ContextMenu\n    showContextMenu(delegate) {\n        delegate = ContextMenuMenuDelegate.transform(delegate, this.menuService, this.contextKeyService);\n        this.contextMenuHandler.showContextMenu(Object.assign(Object.assign({}, delegate), { onHide: (didCancel) => {\n                var _a;\n                (_a = delegate.onHide) === null || _a === void 0 ? void 0 : _a.call(delegate, didCancel);\n                this._onDidHideContextMenu.fire();\n            } }));\n        ModifierKeyEmitter.getInstance().resetKeyStatus();\n        this._onDidShowContextMenu.fire();\n    }\n};\nContextMenuService = __decorate([\n    __param(0, ITelemetryService),\n    __param(1, INotificationService),\n    __param(2, IContextViewService),\n    __param(3, IKeybindingService),\n    __param(4, IMenuService),\n    __param(5, IContextKeyService)\n], ContextMenuService);\nexport { ContextMenuService };\nexport var ContextMenuMenuDelegate;\n(function (ContextMenuMenuDelegate) {\n    function is(thing) {\n        return thing && thing.menuId instanceof MenuId;\n    }\n    function transform(delegate, menuService, globalContextKeyService) {\n        if (!is(delegate)) {\n            return delegate;\n        }\n        const { menuId, menuActionOptions, contextKeyService } = delegate;\n        return Object.assign(Object.assign({}, delegate), { getActions: () => {\n                const target = [];\n                if (menuId) {\n                    const menu = menuService.createMenu(menuId, contextKeyService !== null && contextKeyService !== void 0 ? contextKeyService : globalContextKeyService);\n                    createAndFillInContextMenuActions(menu, menuActionOptions, target);\n                    menu.dispose();\n                }\n                if (!delegate.getActions) {\n                    return target;\n                }\n                else {\n                    return Separator.join(delegate.getActions(), target);\n                }\n            } });\n    }\n    ContextMenuMenuDelegate.transform = transform;\n})(ContextMenuMenuDelegate || (ContextMenuMenuDelegate = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IContextViewService = createDecorator('contextViewService');\nexport const IContextMenuService = createDecorator('contextMenuService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { ContextView } from '../../../base/browser/ui/contextview/contextview.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nlet ContextViewService = class ContextViewService extends Disposable {\n    constructor(layoutService) {\n        super();\n        this.layoutService = layoutService;\n        this.currentViewDisposable = Disposable.None;\n        this.container = layoutService.hasContainer ? layoutService.container : null;\n        this.contextView = this._register(new ContextView(this.container, 1 /* ContextViewDOMPosition.ABSOLUTE */));\n        this.layout();\n        this._register(layoutService.onDidLayout(() => this.layout()));\n    }\n    // ContextView\n    setContainer(container, domPosition) {\n        this.contextView.setContainer(container, domPosition || 1 /* ContextViewDOMPosition.ABSOLUTE */);\n    }\n    showContextView(delegate, container, shadowRoot) {\n        if (container) {\n            if (container !== this.container || this.shadowRoot !== shadowRoot) {\n                this.container = container;\n                this.setContainer(container, shadowRoot ? 3 /* ContextViewDOMPosition.FIXED_SHADOW */ : 2 /* ContextViewDOMPosition.FIXED */);\n            }\n        }\n        else {\n            if (this.layoutService.hasContainer && this.container !== this.layoutService.container) {\n                this.container = this.layoutService.container;\n                this.setContainer(this.container, 1 /* ContextViewDOMPosition.ABSOLUTE */);\n            }\n        }\n        this.shadowRoot = shadowRoot;\n        this.contextView.show(delegate);\n        const disposable = toDisposable(() => {\n            if (this.currentViewDisposable === disposable) {\n                this.hideContextView();\n            }\n        });\n        this.currentViewDisposable = disposable;\n        return disposable;\n    }\n    getContextViewElement() {\n        return this.contextView.getViewElement();\n    }\n    layout() {\n        this.contextView.layout();\n    }\n    hideContextView(data) {\n        this.contextView.hide(data);\n    }\n};\nContextViewService = __decorate([\n    __param(0, ILayoutService)\n], ContextViewService);\nexport { ContextViewService };\n","import { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IDialogService = createDecorator('dialogService');\n","import { Registry } from '../../registry/common/platform.js';\n//#region Editor / Resources DND\nexport const CodeDataTransfers = {\n    EDITORS: 'CodeEditors',\n    FILES: 'CodeFiles'\n};\nclass DragAndDropContributionRegistry {\n}\nexport const Extensions = {\n    DragAndDropContribution: 'workbench.contributions.dragAndDrop'\n};\nRegistry.add(Extensions.DragAndDropContribution, new DragAndDropContributionRegistry());\n//#endregion\n//#region DND Utilities\n/**\n * A singleton to store transfer data during drag & drop operations that are only valid within the application.\n */\nexport class LocalSelectionTransfer {\n    constructor() {\n        // protect against external instantiation\n    }\n    static getInstance() {\n        return LocalSelectionTransfer.INSTANCE;\n    }\n    hasData(proto) {\n        return proto && proto === this.proto;\n    }\n    getData(proto) {\n        if (this.hasData(proto)) {\n            return this.data;\n        }\n        return undefined;\n    }\n}\nLocalSelectionTransfer.INSTANCE = new LocalSelectionTransfer();\n//#endregion\n","export var EditorOpenSource;\n(function (EditorOpenSource) {\n    /**\n     * Default: the editor is opening via a programmatic call\n     * to the editor service API.\n     */\n    EditorOpenSource[EditorOpenSource[\"API\"] = 0] = \"API\";\n    /**\n     * Indicates that a user action triggered the opening, e.g.\n     * via mouse or keyboard use.\n     */\n    EditorOpenSource[EditorOpenSource[\"USER\"] = 1] = \"USER\";\n})(EditorOpenSource || (EditorOpenSource = {}));\n"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","AccessibilityService","Disposable","constructor","_contextKeyService","_layoutService","_configurationService","super","this","_accessibilitySupport","_onDidChangeScreenReaderOptimized","Emitter","_onDidChangeReducedMotion","_accessibilityModeEnabledContext","CONTEXT_ACCESSIBILITY_MODE_ENABLED","bindTo","updateContextKey","set","isScreenReaderOptimized","_register","onDidChangeConfiguration","e","affectsConfiguration","fire","_configMotionReduced","getValue","onDidChangeScreenReaderOptimized","reduceMotionMatcher","window","matchMedia","_systemMotionReduced","matches","initReducedMotionListeners","hasContainer","addDisposableListener","updateRootClasses","reduce","isMotionReduced","container","classList","toggle","onDidChangeReducedMotion","event","config","getAccessibilitySupport","IContextKeyService","ILayoutService","IConfigurationService","IAccessibilityService","createDecorator","RawContextKey","Categories","freeze","View","value","localize","original","Help","Test","File","Preferences","Developer","comment","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","apply","acceptSelectedActionCommand","previewSelectedActionCommand","HeaderRenderer","templateId","renderTemplate","add","text","document","createElement","append","renderElement","element","_index","templateData","_a","_b","textContent","group","title","disposeTemplate","_templateData","ActionItemRenderer","_supportsPreview","_keybindingService","icon","className","keybinding","KeybindingLabel","OS","data","_c","ThemeIcon","asClassName","color","style","asCssVariable","id","Codicon","lightBulb","item","label","stripNewlines","dom","actionTitle","lookupKeybinding","getLabel","previewTitle","disabled","canPreview","IKeybindingService","AcceptSelectedEvent","UIEvent","PreviewSelectedEvent","getKeyboardNavigationLabel","kind","ActionList","user","preview","items","_delegate","_contextViewService","_actionLineHeight","_headerLineHeight","cts","CancellationTokenSource","domNode","virtualDelegate","getHeight","getTemplateId","_list","List","keyboardSupport","typeNavigationEnabled","keyboardNavigationLabelProvider","accessibilityProvider","getAriaLabel","getWidgetAriaLabel","getRole","getWidgetRole","defaultListStyles","onMouseClick","onListClick","onMouseOver","onListHover","onDidChangeFocus","onFocus","onDidChangeSelection","onListSelection","_allMenuItems","splice","focusNext","focusCondition","hide","didCancel","onHide","cancel","hideContextView","layout","minWidth","numHeaders","filter","heightWithHeaders","itemWidths","map","_","index","getElementById","getElementID","width","getBoundingClientRect","Math","max","height","min","body","clientHeight","concat","domFocus","focusPrevious","undefined","acceptSelected","focused","getFocus","focusIndex","setSelection","elements","onSelect","browserEvent","call","onHover","token","setFocus","str","replace","IContextViewService","registerColor","dark","inputActiveOptionBackground","light","hcDark","hcLight","ActionWidgetContextKeys","Visible","IActionWidgetService","ActionWidgetService","isVisible","_instantiationService","MutableDisposable","show","supportsPreview","delegate","anchor","actionBarActions","visibleContext","list","createInstance","showContextView","getAnchor","render","_renderWidget","reset","_onWidgetClosed","clear","widget","appendChild","Error","renderDisposables","DisposableStore","menuBlock","block","MOUSE_DOWN","stopPropagation","pointerBlockDiv","pointerBlock","POINTER_MOVE","remove","actionBarWidth","actionBar","_createActionBar","getContainer","parentElement","offsetWidth","focusTracker","onDidBlur","actions","$","ActionBar","push","IInstantiationService","registerSingleton","weight","registerAction2","Action2","precondition","primary","secondary","run","accessor","get","mac","widgetService","createAndFillInContextMenuActions","menu","options","primaryGroup","groups","getActions","modifierKeyEmitter","ModifierKeyEmitter","getInstance","fillInActions","keyStatus","altKey","isWindows","isLinux","shiftKey","actionGroup","createAndFillInActionBarActions","shouldInlineSubmenu","useSeparatorsInPrimaryActions","useAlternativeActions","primaryBucket","secondaryBucket","isPrimaryAction","Array","isArray","submenuInfo","Set","Separator","action","MenuItemAction","alt","newLen","SubmenuAction","submenuActions","MenuEntryActionViewItem","ActionViewItem","_notificationService","_themeService","_contextMenuService","_accessibilityService","class","draggable","hoverDelegate","_wantsAltCommand","_itemClassDispose","_altKey","_menuItemAction","_action","_commandAction","onClick","preventDefault","actionRunner","_context","err","error","_updateItemClass","isMouseOver","updateAltState","wantsAltCommand","enabled","updateLabel","updateTooltip","updateClass","getTooltip","keybindingLabel","tooltip","altTooltip","altKeybinding","altKeybindingLabel","altTitleSection","UILabelProvider","modifierLabels","checked","thing","toggled","condition","isThemeIcon","iconClasses","asClassNameArray","toDisposable","svgUrl","isDark","getColorTheme","type","asCSSUrl","svgIcon","webkitMask","mask","background","display","combinedDisposable","onDidColorThemeChange","INotificationService","IThemeService","IContextMenuService","SubmenuEntryActionViewItem","DropdownMenuActionViewItem","dropdownOptions","assign","menuAsChild","classNames","keybindingProvider","assertType","setBackgroundImage","backgroundImage","DropdownWithDefaultActionViewItem","BaseActionViewItem","submenuAction","_menuService","_instaService","_storageService","defaultAction","_container","_options","_storageKey","submenu","defaultActionId","persistLastActionId","find","a","_defaultAction","_getDefaultActionKeybindingLabel","ActionRunner","_dropdown","onDidRun","update","lastAction","store","dispose","runAction","context","prepend","defaultActionKeybinding","renderKeybindingWithDefaultActionLabel","kb","setActionContext","newContext","primaryContainer","EventType","KEY_DOWN","StandardKeyboardEvent","equals","tabIndex","focus","dropdownContainer","setFocusable","fromRight","blur","focusable","IMenuService","IStorageService","SubmenuEntrySelectActionViewItem","SelectActionViewItem","contextViewService","ID","isDisabled","defaultSelectBoxStyles","ariaLabel","optionsAsChildren","select","findIndex","borderColor","selectBorder","option","createActionViewItem","instaService","SubmenuItemAction","isSelection","rememberDefaultAction","WorkbenchToolBar","ToolBar","keybindingService","telemetryService","getKeyBinding","allowContextMenu","skipTelemetry","telemetrySource","_sessionDisposables","_store","publicLog2","from","setActions","_primary","_secondary","menuIds","slice","toggleActions","toggleActionsCheckedCount","extraSecondary","someAreHidden","hiddenItemStrategy","hideActions","isHidden","overflowBehavior","exemptedIds","intersection","exempted","Iterable","maxItems","size","count","has","coalesceInPlace","join","getElement","_d","_e","StandardMouseEvent","getItemAction","hideAction","noHide","toAction","resetMenu","resetHiddenStates","showContextMenu","menuId","contextMenu","menuActionOptions","renderShortTitle","menuOptions","contextKeyService","ITelemetryService","MenuItemAction_1","__rest","s","t","p","prototype","hasOwnProperty","indexOf","getOwnPropertySymbols","propertyIsEnumerable","isIMenuItem","command","isISubmenuItem","MenuId","identifier","_instances","TypeError","Map","CommandPalette","DebugBreakpointsContext","DebugCallStackContext","DebugConsoleContext","DebugVariablesContext","DebugWatchContext","DebugToolBar","DebugToolBarStop","EditorContext","SimpleEditorContext","EditorContent","EditorLineNumberContext","EditorContextCopy","EditorContextPeek","EditorContextShare","EditorTitle","EditorTitleRun","EditorTitleContext","EditorTitleContextShare","EmptyEditorGroup","EmptyEditorGroupContext","EditorTabsBarContext","ExplorerContext","ExplorerContextShare","ExtensionContext","GlobalActivity","CommandCenter","CommandCenterCenter","LayoutControlMenuSubmenu","LayoutControlMenu","MenubarMainMenu","MenubarAppearanceMenu","MenubarDebugMenu","MenubarEditMenu","MenubarCopy","MenubarFileMenu","MenubarGoMenu","MenubarHelpMenu","MenubarLayoutMenu","MenubarNewBreakpointMenu","PanelAlignmentMenu","PanelPositionMenu","MenubarPreferencesMenu","MenubarRecentMenu","MenubarSelectionMenu","MenubarShare","MenubarSwitchEditorMenu","MenubarSwitchGroupMenu","MenubarTerminalMenu","MenubarViewMenu","MenubarHomeMenu","OpenEditorsContext","OpenEditorsContextShare","ProblemsPanelContext","SCMChangeContext","SCMResourceContext","SCMResourceContextShare","SCMResourceFolderContext","SCMResourceGroupContext","SCMSourceControl","SCMTitle","SearchContext","SearchActionMenu","StatusBarWindowIndicatorMenu","StatusBarRemoteIndicatorMenu","StickyScrollContext","TestItem","TestItemGutter","TestMessageContext","TestMessageContent","TestPeekElement","TestPeekTitle","TouchBarContext","TitleBarContext","TitleBarTitleContext","TunnelContext","TunnelPrivacy","TunnelProtocol","TunnelPortInline","TunnelTitle","TunnelLocalAddressInline","TunnelOriginInline","ViewItemContext","ViewContainerTitle","ViewContainerTitleContext","ViewTitle","ViewTitleContext","CommentEditorActions","CommentThreadTitle","CommentThreadActions","CommentThreadAdditionalActions","CommentThreadTitleContext","CommentThreadCommentContext","CommentTitle","CommentActions","InteractiveToolbar","InteractiveCellTitle","InteractiveCellDelete","InteractiveCellExecute","InteractiveInputExecute","NotebookToolbar","NotebookStickyScrollContext","NotebookCellTitle","NotebookCellDelete","NotebookCellInsert","NotebookCellBetween","NotebookCellListTop","NotebookCellExecute","NotebookCellExecutePrimary","NotebookDiffCellInputTitle","NotebookDiffCellMetadataTitle","NotebookDiffCellOutputsTitle","NotebookOutputToolbar","NotebookEditorLayoutConfigure","NotebookKernelSource","BulkEditTitle","BulkEditContext","TimelineItemContext","TimelineTitle","TimelineTitleContext","TimelineFilterSubMenu","AccountsContext","PanelTitle","AuxiliaryBarTitle","TerminalInstanceContext","TerminalEditorInstanceContext","TerminalNewDropdownContext","TerminalTabContext","TerminalTabEmptyAreaContext","WebviewContext","InlineCompletionsActions","NewFile","MergeInput1Toolbar","MergeInput2Toolbar","MergeBaseToolbar","MergeInputResultToolbar","InlineSuggestionToolbar","ChatContext","ChatCodeBlock","ChatMessageTitle","ChatExecute","ChatInputSide","AccessibleView","MenuRegistryChangeEvent","for","_all","merge","events","ids","candidate","MenuRegistry","_commands","_menuItems","_onDidChangeMenu","MicrotaskEmitter","onDidChangeMenu","addCommand","delete","getCommand","getCommands","forEach","appendMenuItem","LinkedList","rm","appendMenuItems","getMenuItems","_appendImplicitItems","shortTitle","_commandService","contextMatchesRules","runArgs","arg","shouldForwardArgs","_len","args","_key","executeCommand","ICommandService","ctor","disposables","f1","description","CommandsRegistry","registerCommand","handler","_len2","_key2","when","KeybindingsRegistry","registerKeybindingRule","ContextKeyExpr","and","PersistedMenuHideState_1","MenuInfo_1","MenuService","storageService","_hiddenStates","PersistedMenuHideState","createMenu","MenuImpl","emitEventsForSubmenuChanges","eventDebounceDelay","_disposables","_onDidChange","onDidChange","_ignoreChangeEvent","_hiddenByDefaultCache","raw","_data","JSON","parse","create","onDidChangeValue","console","log","_isHiddenByDefault","commandId","setDefaultState","hidden","hiddenByDefault","state","includes","updateHidden","entries","idx","removeFastWithoutKeepingOrder","_persist","menus","stringify","MenuInfo","_id","_collectContextKeysForSubmenus","_menuGroups","_structureContextKeys","_preconditionContextKeys","_toggledContextKeys","refresh","structureContextKeys","preconditionContextKeys","toggledContextKeys","menuItems","sort","_compareMenuItems","groupName","_collectContextKeys","_fillInKbExprKeys","toggledExpression","createActionGroups","activeActions","isMenuItem","isHiddenByDefault","menuHide","createMenuHide","g","exp","keys","b","aGroup","bGroup","localeCompare","aPrio","order","bPrio","_compareTitles","aStr","bStr","hiddenStates","commandService","_menuInfo","rebuildMenuSoon","RunOnceScheduler","isStructuralChange","isEnablementChange","isToggleChange","schedule","lazyListener","DebounceEmitter","onWillAddFirstListener","startLazyListener","onDidChangeContext","affectsSome","onDidRemoveLastListener","bind","delay","states","IAudioCueService","Sound","register","fileName","warning","foldedArea","break","quickFixes","taskCompleted","taskFailed","terminalBell","diffLineInserted","diffLineDeleted","diffLineModified","chatRequestSent","chatResponsePending","chatResponseReceived1","chatResponseReceived2","chatResponseReceived3","chatResponseReceived4","SoundSource","randomOneOf","AudioCue","soundSource","sound","audioCue","name","settingsKey","_audioCues","inlineSuggestion","terminalQuickFix","onDebugBreak","noInlayHints","terminalCommandFailed","notebookCellCompleted","notebookCellFailed","chatResponseReceived","BrowserClipboardService","layoutService","logService","mapTextToType","findText","resources","isSafari","isWebkitWebView","installWebKitWriteTextWorkaround","currentWritePromise","DeferredPromise","webKitPendingClipboardWritePromise","isSettled","navigator","clipboard","write","ClipboardItem","catch","isRejected","writeText","complete","activeElement","textArea","position","execCommand","HTMLElement","removeChild","readText","readFindText","writeFindText","writeResources","readResources","ILogService","IClipboardService","_onDidRegisterCommand","onDidRegisterCommand","idOrCommand","constraints","constraint","actualHandler","validateConstraints","commands","removeFn","unshift","ret","isEmpty","registerCommandAlias","oldId","newId","first","toValuesTree","properties","conflictReporter","root","addToValueTree","settingsTreeRoot","segments","split","last","pop","curr","obj","removeFromValueTree","valueTree","doRemoveFromValueTree","shift","getConfigurationValue","settingPath","defaultValue","path","current","component","accessSetting","getLanguageTagSettingPlainKey","settingKey","isFrozen","objects","ConfigurationModel","_contents","_keys","_overrides","overrideConfigurations","rawConfiguration","_rawConfiguration","rawConfigurationModels","parser","ConfigurationModelParser","parseRaw","configurationModel","previous","contents","overrides","section","inspect","overrideIdentifier","override","getOverrideValue","merged","overrideContents","getContentsForOverrideIdentifer","overrideConfigurationModel","createOverrideConfigurationModel","raws","others","other","mergeContents","otherOverride","o","arrays","identifiers","every","contentsForKey","overrideContentsForKey","source","types","contentsForIdentifierOnly","contentsToMerge","toJSON","addValue","updateValue","setValue","removeValue","OVERRIDE_PROPERTY_REGEX","test","overrideIdentifiersFromKey","message","_name","_raw","_configurationModel","_restrictedConfigurations","restricted","hasExcludedProperties","doParseRaw","configurationProperties","Registry","as","Extensions","Configuration","getConfigurationProperties","filtered","toOverrides","filterOverriddenProperties","scopes","skipRestricted","exclude","propertySchema","scope","include","overrideRaw","keyInOverrideRaw","ConfigurationInspectValue","_value","overrideIdentifiers","defaultConfiguration","policyConfiguration","applicationConfiguration","userConfiguration","localUserConfiguration","remoteUserConfiguration","workspaceConfiguration","folderConfigurationModel","memoryConfigurationModel","model","inspectValue","userInspectValue","_userInspectValue","_defaultConfiguration","_policyConfiguration","_applicationConfiguration","_localUserConfiguration","_remoteUserConfiguration","_workspaceConfiguration","_folderConfigurations","ResourceMap","_memoryConfiguration","_memoryConfigurationByResource","_workspaceConsolidatedConfiguration","_foldersConsolidatedConfigurations","_userConfiguration","workspace","getConsolidatedConfigurationModel","memoryConfiguration","resource","consolidateConfigurationModel","getFolderConfigurationModelForResource","getConsolidatedConfigurationModelForResource","_ref","consolidateConfiguration","getWorkspaceConsolidatedConfiguration","getFolder","getFolderConsolidatedConfiguration","uri","memoryConfigurationForResource","folder","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguration","toData","defaults","policy","application","folders","parseConfigurationModel","URI","revive","ConfigurationChangeEvent","change","currentConfiguraiton","currentWorkspace","_marker","_markerCode1","charCodeAt","_markerCode2","affectedKeys","_previousConfiguration","_affectsConfigStr","previousConfiguration","needle","pos","code","value1","value2","allSettings","patternProperties","applicationSettings","machineSettings","machineOverridableSettings","windowSettings","resourceSettings","resourceLanguageSettingsSchemaId","contributionRegistry","JSONExtensions","JSONContribution","OVERRIDE_IDENTIFIER_PATTERN","OVERRIDE_IDENTIFIER_REGEX","RegExp","OVERRIDE_PROPERTY_PATTERN","exec","trim","distinct","configurationRegistry","_onDidSchemaChange","_onDidUpdateConfiguration","configurationDefaultsOverrides","defaultLanguageConfigurationOverridesNode","nls","configurationContributors","resourceLanguageSettingsSchema","additionalProperties","allowTrailingCommas","allowComments","policyConfigurations","excludedConfigurationProperties","registerSchema","registerOverridePropertyPatternKey","registerConfiguration","configuration","validate","registerConfigurations","configurations","doRegisterConfigurations","registerDefaultConfigurations","configurationDefaults","doRegisterDefaultConfigurations","defaultsOverrides","bucket","configurationDefaultOverride","valuesSources","plainKey","property","default","$ref","defaultDefaultValue","defaultValueSource","updatePropertyDefaultValue","updateSchema","doRegisterOverrideIdentifiers","registerOverrideIdentifiers","updateOverridePropertyPatternKey","validateAndRegisterProperties","extensionInfo","restrictedProperties","registerJSONConfiguration","validateProperty","included","deprecationMessage","markdownDeprecationMessage","subNodes","allOf","node","getPolicyConfigurations","values","overrideIdentifierProperty","resourceLanguagePropertiesSchema","errorMessage","configurationdefaultOverride","defaultSource","getDefaultValue","schema","DefaultConfiguration","reload","resetConfigurationModel","getConfigurationDefaultOverrides","updateConfigurationModel","defaultOverrideValue","KEYBINDING_CONTEXT_ATTR","Context","parent","_parent","NullContext","INSTANCE","ConfigAwareContextValuesContainer","emitter","_values","TernarySearchTree","forConfigKeys","_listener","allKeys","k","ArrayContextKeyChangeEvent","changedKeys","configKey","contextKey","cachedItems","findSuperstr","_ref2","deleteSuperstr","_keyPrefix","substr","configValue","ContextKey","service","_service","_defaultValue","setContext","removeContext","getContextKeyValue","SimpleContextKeyChangeEvent","allKeysContainedIn","CompositeContextKeyChangeEvent","evt","AbstractContextKeyService","myContextId","_onDidChangeContext","PauseableEmitter","input","_isDisposed","_myContextId","createKey","bufferChangeEvents","callback","pause","resume","createScoped","ScopedContextKeyService","rules","getContextValuesContainer","evaluate","myContext","getContext","hasAttribute","attr","getAttribute","parseInt","NaN","findContextAttr","ContextKeyService","configurationService","_contexts","_lastContextId","contextId","createChildContext","parentContextId","disposeContext","_parentChangeListener","_updateParentChangeListener","_domNode","extraInfo","setAttribute","String","thisContextValues","removeAttribute","contextValue","cloneAndChange","$mid","toString","stringifyURIs","all","seen","info","hintDidYouMean","hintDidYouForgetToOpenOrCloseQuote","hintDidYouForgetToEscapeSlash","Scanner","_input","_start","_current","_tokens","_errors","stringRe","getLexeme","isTripleEq","lexeme","illegalState","scan","_isAtEnd","_advance","_addToken","_match","offset","_quotedString","_regex","_error","_string","expected","_peek","additional","substring","errToken","additionalInfo","lastIndex","match","keyword","_keywords","inEscape","inCharacterClass","ch","_regexFlags","CONSTANT_VALUES","isMacintosh","isWeb","isEdge","isFirefox","isChrome","defaultConfig","regexParsingWithErrorRecovery","errorEmptyString","hintEmptyString","errorNoInAfterNot","errorClosingParenthesis","errorUnexpectedToken","hintUnexpectedToken","errorUnexpectedEOF","hintUnexpectedEOF","Parser","_config","_scanner","_parsingErrors","_flagsGYRe","expr","_expr","peek","_parseError","_or","_and","_matchOne","right","or","_term","ContextKeyFalseExpr","ContextKeyTrueExpr","_consume","negate","ContextKeyNotExpr","_errExpectedButGot","true","false","regexLexeme","closingSlashIndex","lastIndexOf","flags","_removeFlagsGY","regexp","ContextKeyRegexExpr","lexemeReconstruction","followingToken","parenBalance","regex","serializedValue","isFalsyOrWhitespace","start","end","caseIgnoreFlag","notIn","_previous","not","notEquals","ContextKeySmallerExpr","ContextKeySmallerEqualsExpr","ContextKeyGreaterExpr","ContextKeyGreaterEqualsExpr","in","replaceAll","_check","got","ContextKeyDefinedExpr","ContextKeyEqualsExpr","ContextKeyNotEqualsExpr","ContextKeyInExpr","ContextKeyNotInExpr","ContextKeyAndExpr","ContextKeyOrExpr","deserialize","serialized","_parser","expressionsAreEqualWithConstantSubstitution","aExpr","substituteConstants","bExpr","cmp","serialize","negated","constantValue","cmp1","cmp2","trueValue","valueKey","_negated","falseValue","withFloatOrStr","n","parseFloat","isNaN","thisSource","otherSource","ContextKeyNotRegexExpr","actual","_actual","eliminateConstantsInArray","arr","newArr","len","newExpr","j","extraRedundantCheck","_normalizeArr","exprArr","hasTrue","lastElement","secondToLastElement","isFinished","resultElement","el","hasFalse","LEFT","RIGHT","left","getTerminals","_info","metaOrHide","toNegated","isEqualTo","key1","key2","implies","q","allElementsIncluded","pIndex","qIndex","IsWindowsContext","IsWebContext","InputFocusedContextKey","isIOS","isMobile","ContextMenuHandler","notificationService","focusToReturn","lastContainer","blockDisposable","blockMouse","configure","shadowRootElement","isHTMLElement","domForShadowRoot","canRelayout","anchorAlignment","anchorAxisAlignment","getMenuClassName","cursor","top","zIndex","menuDisposables","onWillRun","onActionRun","onDidActionRun","Menu","actionViewItemProvider","getActionViewItem","getActionsContext","defaultMenuStyles","onDidCancel","BLUR","defaultPrevented","rightButton","autoSelectFirstItem","getActiveElement","isAncestor","logTelemetry","isCancellationError","ContextMenuService","contextMenuHandler","_contextMenuHandler","menuService","_onDidShowContextMenu","_onDidHideContextMenu","ContextMenuMenuDelegate","transform","resetKeyStatus","globalContextKeyService","ContextViewService","currentViewDisposable","None","contextView","ContextView","onDidLayout","setContainer","domPosition","shadowRoot","disposable","getContextViewElement","getViewElement","IDialogService","CodeDataTransfers","EDITORS","FILES","LocalSelectionTransfer","hasData","proto","getData","EditorOpenSource"],"sourceRoot":""}