{"version":3,"file":"static/js/monaco-editor-vendor.dbdc571d.832d0c8a.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/resizableContentWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/contentHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/getHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/marginHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markerHoverParticipant.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hoverOperation.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hoverTypes.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markdownHoverParticipant.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplaceCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplace.js","../node_modules/monaco-editor/esm/vs/editor/contrib/indentation/browser/indentUtils.js","../node_modules/monaco-editor/esm/vs/editor/contrib/indentation/browser/indentation.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ResizableHTMLElement } from '../../../../base/browser/ui/resizable/resizable.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport * as dom from '../../../../base/browser/dom.js';\nconst TOP_HEIGHT = 30;\nconst BOTTOM_HEIGHT = 24;\nexport class ResizableContentWidget extends Disposable {\n    constructor(_editor, minimumSize = new dom.Dimension(10, 10)) {\n        super();\n        this._editor = _editor;\n        this.allowEditorOverflow = true;\n        this.suppressMouseDown = false;\n        this._resizableNode = this._register(new ResizableHTMLElement());\n        this._contentPosition = null;\n        this._isResizing = false;\n        this._resizableNode.domNode.style.position = 'absolute';\n        this._resizableNode.minSize = dom.Dimension.lift(minimumSize);\n        this._resizableNode.layout(minimumSize.height, minimumSize.width);\n        this._resizableNode.enableSashes(true, true, true, true);\n        this._register(this._resizableNode.onDidResize(e => {\n            this._resize(new dom.Dimension(e.dimension.width, e.dimension.height));\n            if (e.done) {\n                this._isResizing = false;\n            }\n        }));\n        this._register(this._resizableNode.onDidWillResize(() => {\n            this._isResizing = true;\n        }));\n    }\n    get isResizing() {\n        return this._isResizing;\n    }\n    getDomNode() {\n        return this._resizableNode.domNode;\n    }\n    getPosition() {\n        return this._contentPosition;\n    }\n    get position() {\n        var _a;\n        return ((_a = this._contentPosition) === null || _a === void 0 ? void 0 : _a.position) ? Position.lift(this._contentPosition.position) : undefined;\n    }\n    _availableVerticalSpaceAbove(position) {\n        const editorDomNode = this._editor.getDomNode();\n        const mouseBox = this._editor.getScrolledVisiblePosition(position);\n        if (!editorDomNode || !mouseBox) {\n            return;\n        }\n        const editorBox = dom.getDomNodePagePosition(editorDomNode);\n        return editorBox.top + mouseBox.top - TOP_HEIGHT;\n    }\n    _availableVerticalSpaceBelow(position) {\n        const editorDomNode = this._editor.getDomNode();\n        const mouseBox = this._editor.getScrolledVisiblePosition(position);\n        if (!editorDomNode || !mouseBox) {\n            return;\n        }\n        const editorBox = dom.getDomNodePagePosition(editorDomNode);\n        const bodyBox = dom.getClientArea(document.body);\n        const mouseBottom = editorBox.top + mouseBox.top + mouseBox.height;\n        return bodyBox.height - mouseBottom - BOTTOM_HEIGHT;\n    }\n    _findPositionPreference(widgetHeight, showAtPosition) {\n        var _a, _b;\n        const maxHeightBelow = Math.min((_a = this._availableVerticalSpaceBelow(showAtPosition)) !== null && _a !== void 0 ? _a : Infinity, widgetHeight);\n        const maxHeightAbove = Math.min((_b = this._availableVerticalSpaceAbove(showAtPosition)) !== null && _b !== void 0 ? _b : Infinity, widgetHeight);\n        const maxHeight = Math.min(Math.max(maxHeightAbove, maxHeightBelow), widgetHeight);\n        const height = Math.min(widgetHeight, maxHeight);\n        let renderingAbove;\n        if (this._editor.getOption(59 /* EditorOption.hover */).above) {\n            renderingAbove = height <= maxHeightAbove ? 1 /* ContentWidgetPositionPreference.ABOVE */ : 2 /* ContentWidgetPositionPreference.BELOW */;\n        }\n        else {\n            renderingAbove = height <= maxHeightBelow ? 2 /* ContentWidgetPositionPreference.BELOW */ : 1 /* ContentWidgetPositionPreference.ABOVE */;\n        }\n        if (renderingAbove === 1 /* ContentWidgetPositionPreference.ABOVE */) {\n            this._resizableNode.enableSashes(true, true, false, false);\n        }\n        else {\n            this._resizableNode.enableSashes(false, true, true, false);\n        }\n        return renderingAbove;\n    }\n    _resize(dimension) {\n        this._resizableNode.layout(dimension.height, dimension.width);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { HoverAction, HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverParticipantRegistry, HoverRangeAnchor } from './hoverTypes.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { ResizableContentWidget } from './resizableContentWidget.js';\nconst $ = dom.$;\nlet ContentHoverController = class ContentHoverController extends Disposable {\n    constructor(_editor, _instantiationService, _keybindingService) {\n        super();\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._keybindingService = _keybindingService;\n        this._currentResult = null;\n        const minimumHeight = this._editor.getOption(65 /* EditorOption.lineHeight */) + 8;\n        const minimumWidth = 4 / 3 * minimumHeight;\n        const minimumSize = new dom.Dimension(minimumWidth, minimumHeight);\n        this._widget = this._register(this._instantiationService.createInstance(ContentHoverWidget, this._editor, minimumSize));\n        // Instantiate participants and sort them by `hoverOrdinal` which is relevant for rendering order.\n        this._participants = [];\n        for (const participant of HoverParticipantRegistry.getAll()) {\n            this._participants.push(this._instantiationService.createInstance(participant, this._editor));\n        }\n        this._participants.sort((p1, p2) => p1.hoverOrdinal - p2.hoverOrdinal);\n        this._computer = new ContentHoverComputer(this._editor, this._participants);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            if (!this._computer.anchor) {\n                // invalid state, ignore result\n                return;\n            }\n            const messages = (result.hasLoadingMessage ? this._addLoadingMessage(result.value) : result.value);\n            this._withResult(new HoverResult(this._computer.anchor, messages, result.isComplete));\n        }));\n        this._register(dom.addStandardDisposableListener(this._widget.getDomNode(), 'keydown', (e) => {\n            if (e.equals(9 /* KeyCode.Escape */)) {\n                this.hide();\n            }\n        }));\n        this._register(TokenizationRegistry.onDidChange(() => {\n            if (this._widget.position && this._currentResult) {\n                this._setCurrentResult(this._currentResult); // render again\n            }\n        }));\n    }\n    get widget() {\n        return this._widget;\n    }\n    /**\n     * Returns true if the hover shows now or will show.\n     */\n    maybeShowAt(mouseEvent) {\n        if (this._widget.isResizing) {\n            return true;\n        }\n        const anchorCandidates = [];\n        for (const participant of this._participants) {\n            if (participant.suggestHoverAnchor) {\n                const anchor = participant.suggestHoverAnchor(mouseEvent);\n                if (anchor) {\n                    anchorCandidates.push(anchor);\n                }\n            }\n        }\n        const target = mouseEvent.target;\n        if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            anchorCandidates.push(new HoverRangeAnchor(0, target.range, mouseEvent.event.posx, mouseEvent.event.posy));\n        }\n        if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            const epsilon = this._editor.getOption(49 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth / 2;\n            if (!target.detail.isAfterLines && typeof target.detail.horizontalDistanceToText === 'number' && target.detail.horizontalDistanceToText < epsilon) {\n                // Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough\n                anchorCandidates.push(new HoverRangeAnchor(0, target.range, mouseEvent.event.posx, mouseEvent.event.posy));\n            }\n        }\n        if (anchorCandidates.length === 0) {\n            return this._startShowingOrUpdateHover(null, 0 /* HoverStartMode.Delayed */, 0 /* HoverStartSource.Mouse */, false, mouseEvent);\n        }\n        anchorCandidates.sort((a, b) => b.priority - a.priority);\n        return this._startShowingOrUpdateHover(anchorCandidates[0], 0 /* HoverStartMode.Delayed */, 0 /* HoverStartSource.Mouse */, false, mouseEvent);\n    }\n    startShowingAtRange(range, mode, source, focus) {\n        this._startShowingOrUpdateHover(new HoverRangeAnchor(0, range, undefined, undefined), mode, source, focus, null);\n    }\n    /**\n     * Returns true if the hover shows now or will show.\n     */\n    _startShowingOrUpdateHover(anchor, mode, source, focus, mouseEvent) {\n        if (!this._widget.position || !this._currentResult) {\n            // The hover is not visible\n            if (anchor) {\n                this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n                return true;\n            }\n            return false;\n        }\n        // The hover is currently visible\n        const hoverIsSticky = this._editor.getOption(59 /* EditorOption.hover */).sticky;\n        const isGettingCloser = (hoverIsSticky && mouseEvent && this._widget.isMouseGettingCloser(mouseEvent.event.posx, mouseEvent.event.posy));\n        if (isGettingCloser) {\n            // The mouse is getting closer to the hover, so we will keep the hover untouched\n            // But we will kick off a hover update at the new anchor, insisting on keeping the hover visible.\n            if (anchor) {\n                this._startHoverOperationIfNecessary(anchor, mode, source, focus, true);\n            }\n            return true;\n        }\n        if (!anchor) {\n            this._setCurrentResult(null);\n            return false;\n        }\n        if (anchor && this._currentResult.anchor.equals(anchor)) {\n            // The widget is currently showing results for the exact same anchor, so no update is needed\n            return true;\n        }\n        if (!anchor.canAdoptVisibleHover(this._currentResult.anchor, this._widget.position)) {\n            // The new anchor is not compatible with the previous anchor\n            this._setCurrentResult(null);\n            this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n            return true;\n        }\n        // We aren't getting any closer to the hover, so we will filter existing results\n        // and keep those which also apply to the new anchor.\n        this._setCurrentResult(this._currentResult.filter(anchor));\n        this._startHoverOperationIfNecessary(anchor, mode, source, focus, false);\n        return true;\n    }\n    _startHoverOperationIfNecessary(anchor, mode, source, focus, insistOnKeepingHoverVisible) {\n        if (this._computer.anchor && this._computer.anchor.equals(anchor)) {\n            // We have to start a hover operation at the exact same anchor as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        this._computer.anchor = anchor;\n        this._computer.shouldFocus = focus;\n        this._computer.source = source;\n        this._computer.insistOnKeepingHoverVisible = insistOnKeepingHoverVisible;\n        this._hoverOperation.start(mode);\n    }\n    _setCurrentResult(hoverResult) {\n        if (this._currentResult === hoverResult) {\n            // avoid updating the DOM to avoid resetting the user selection\n            return;\n        }\n        if (hoverResult && hoverResult.messages.length === 0) {\n            hoverResult = null;\n        }\n        this._currentResult = hoverResult;\n        if (this._currentResult) {\n            this._renderMessages(this._currentResult.anchor, this._currentResult.messages);\n        }\n        else {\n            this._widget.hide();\n        }\n    }\n    hide() {\n        this._computer.anchor = null;\n        this._hoverOperation.cancel();\n        this._setCurrentResult(null);\n    }\n    get isColorPickerVisible() {\n        return this._widget.isColorPickerVisible;\n    }\n    get isVisibleFromKeyboard() {\n        return this._widget.isVisibleFromKeyboard;\n    }\n    get isVisible() {\n        return this._widget.isVisible;\n    }\n    get isFocused() {\n        return this._widget.isFocused;\n    }\n    get isResizing() {\n        return this._widget.isResizing;\n    }\n    containsNode(node) {\n        return (node ? this._widget.getDomNode().contains(node) : false);\n    }\n    _addLoadingMessage(result) {\n        if (this._computer.anchor) {\n            for (const participant of this._participants) {\n                if (participant.createLoadingMessage) {\n                    const loadingMessage = participant.createLoadingMessage(this._computer.anchor);\n                    if (loadingMessage) {\n                        return result.slice(0).concat([loadingMessage]);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    _withResult(hoverResult) {\n        if (this._widget.position && this._currentResult && this._currentResult.isComplete) {\n            // The hover is visible with a previous complete result.\n            if (!hoverResult.isComplete) {\n                // Instead of rendering the new partial result, we wait for the result to be complete.\n                return;\n            }\n            if (this._computer.insistOnKeepingHoverVisible && hoverResult.messages.length === 0) {\n                // The hover would now hide normally, so we'll keep the previous messages\n                return;\n            }\n        }\n        this._setCurrentResult(hoverResult);\n    }\n    _renderMessages(anchor, messages) {\n        const { showAtPosition, showAtSecondaryPosition, highlightRange } = ContentHoverController.computeHoverRanges(this._editor, anchor.range, messages);\n        const disposables = new DisposableStore();\n        const statusBar = disposables.add(new EditorHoverStatusBar(this._keybindingService));\n        const fragment = document.createDocumentFragment();\n        let colorPicker = null;\n        const context = {\n            fragment,\n            statusBar,\n            setColorPicker: (widget) => colorPicker = widget,\n            onContentsChanged: () => this._widget.onContentsChanged(),\n            setMinimumDimensions: (dimensions) => this._widget.setMinimumDimensions(dimensions),\n            hide: () => this.hide()\n        };\n        for (const participant of this._participants) {\n            const hoverParts = messages.filter(msg => msg.owner === participant);\n            if (hoverParts.length > 0) {\n                disposables.add(participant.renderHoverParts(context, hoverParts));\n            }\n        }\n        const isBeforeContent = messages.some(m => m.isBeforeContent);\n        if (statusBar.hasContent) {\n            fragment.appendChild(statusBar.hoverElement);\n        }\n        if (fragment.hasChildNodes()) {\n            if (highlightRange) {\n                const highlightDecoration = this._editor.createDecorationsCollection();\n                highlightDecoration.set([{\n                        range: highlightRange,\n                        options: ContentHoverController._DECORATION_OPTIONS\n                    }]);\n                disposables.add(toDisposable(() => {\n                    highlightDecoration.clear();\n                }));\n            }\n            this._widget.showAt(fragment, new ContentHoverVisibleData(colorPicker, showAtPosition, showAtSecondaryPosition, this._editor.getOption(59 /* EditorOption.hover */).above, this._computer.shouldFocus, this._computer.source, isBeforeContent, anchor.initialMousePosX, anchor.initialMousePosY, disposables));\n        }\n        else {\n            disposables.dispose();\n        }\n    }\n    static computeHoverRanges(editor, anchorRange, messages) {\n        let startColumnBoundary = 1;\n        if (editor.hasModel()) {\n            // Ensure the range is on the current view line\n            const viewModel = editor._getViewModel();\n            const coordinatesConverter = viewModel.coordinatesConverter;\n            const anchorViewRange = coordinatesConverter.convertModelRangeToViewRange(anchorRange);\n            const anchorViewRangeStart = new Position(anchorViewRange.startLineNumber, viewModel.getLineMinColumn(anchorViewRange.startLineNumber));\n            startColumnBoundary = coordinatesConverter.convertViewPositionToModelPosition(anchorViewRangeStart).column;\n        }\n        // The anchor range is always on a single line\n        const anchorLineNumber = anchorRange.startLineNumber;\n        let renderStartColumn = anchorRange.startColumn;\n        let highlightRange = messages[0].range;\n        let forceShowAtRange = null;\n        for (const msg of messages) {\n            highlightRange = Range.plusRange(highlightRange, msg.range);\n            if (msg.range.startLineNumber === anchorLineNumber && msg.range.endLineNumber === anchorLineNumber) {\n                // this message has a range that is completely sitting on the line of the anchor\n                renderStartColumn = Math.max(Math.min(renderStartColumn, msg.range.startColumn), startColumnBoundary);\n            }\n            if (msg.forceShowAtRange) {\n                forceShowAtRange = msg.range;\n            }\n        }\n        return {\n            showAtPosition: forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorLineNumber, anchorRange.startColumn),\n            showAtSecondaryPosition: forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorLineNumber, renderStartColumn),\n            highlightRange\n        };\n    }\n    focus() {\n        this._widget.focus();\n    }\n    scrollUp() {\n        this._widget.scrollUp();\n    }\n    scrollDown() {\n        this._widget.scrollDown();\n    }\n    scrollLeft() {\n        this._widget.scrollLeft();\n    }\n    scrollRight() {\n        this._widget.scrollRight();\n    }\n    pageUp() {\n        this._widget.pageUp();\n    }\n    pageDown() {\n        this._widget.pageDown();\n    }\n    goToTop() {\n        this._widget.goToTop();\n    }\n    goToBottom() {\n        this._widget.goToBottom();\n    }\n};\nContentHoverController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n    description: 'content-hover-highlight',\n    className: 'hoverHighlight'\n});\nContentHoverController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IKeybindingService)\n], ContentHoverController);\nexport { ContentHoverController };\nclass HoverResult {\n    constructor(anchor, messages, isComplete) {\n        this.anchor = anchor;\n        this.messages = messages;\n        this.isComplete = isComplete;\n    }\n    filter(anchor) {\n        const filteredMessages = this.messages.filter((m) => m.isValidForHoverAnchor(anchor));\n        if (filteredMessages.length === this.messages.length) {\n            return this;\n        }\n        return new FilteredHoverResult(this, this.anchor, filteredMessages, this.isComplete);\n    }\n}\nclass FilteredHoverResult extends HoverResult {\n    constructor(original, anchor, messages, isComplete) {\n        super(anchor, messages, isComplete);\n        this.original = original;\n    }\n    filter(anchor) {\n        return this.original.filter(anchor);\n    }\n}\nclass ContentHoverVisibleData {\n    constructor(colorPicker, showAtPosition, showAtSecondaryPosition, preferAbove, stoleFocus, source, isBeforeContent, initialMousePosX, initialMousePosY, disposables) {\n        this.colorPicker = colorPicker;\n        this.showAtPosition = showAtPosition;\n        this.showAtSecondaryPosition = showAtSecondaryPosition;\n        this.preferAbove = preferAbove;\n        this.stoleFocus = stoleFocus;\n        this.source = source;\n        this.isBeforeContent = isBeforeContent;\n        this.initialMousePosX = initialMousePosX;\n        this.initialMousePosY = initialMousePosY;\n        this.disposables = disposables;\n        this.closestMouseDistance = undefined;\n    }\n}\nconst HORIZONTAL_SCROLLING_BY = 30;\nconst SCROLLBAR_WIDTH = 10;\nconst CONTAINER_HEIGHT_PADDING = 6;\nlet ContentHoverWidget = class ContentHoverWidget extends ResizableContentWidget {\n    get isColorPickerVisible() {\n        var _a;\n        return Boolean((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.colorPicker);\n    }\n    get isVisibleFromKeyboard() {\n        var _a;\n        return (((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.source) === 1 /* HoverStartSource.Keyboard */);\n    }\n    get isVisible() {\n        var _a;\n        return (_a = this._hoverVisibleKey.get()) !== null && _a !== void 0 ? _a : false;\n    }\n    get isFocused() {\n        var _a;\n        return (_a = this._hoverFocusedKey.get()) !== null && _a !== void 0 ? _a : false;\n    }\n    constructor(editor, minimumSize, contextKeyService) {\n        super(editor, minimumSize);\n        this._hover = this._register(new HoverWidget());\n        this._hoverVisibleKey = EditorContextKeys.hoverVisible.bindTo(contextKeyService);\n        this._hoverFocusedKey = EditorContextKeys.hoverFocused.bindTo(contextKeyService);\n        dom.append(this._resizableNode.domNode, this._hover.containerDomNode);\n        this._resizableNode.domNode.style.zIndex = '50';\n        this._register(this._editor.onDidLayoutChange(() => this._layout()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(49 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        const focusTracker = this._register(dom.trackFocus(this._resizableNode.domNode));\n        this._register(focusTracker.onDidFocus(() => {\n            this._hoverFocusedKey.set(true);\n        }));\n        this._register(focusTracker.onDidBlur(() => {\n            this._hoverFocusedKey.set(false);\n        }));\n        this._setHoverData(undefined);\n        this._layout();\n        this._editor.addContentWidget(this);\n    }\n    dispose() {\n        var _a;\n        super.dispose();\n        (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.disposables.dispose();\n        this._editor.removeContentWidget(this);\n    }\n    getId() {\n        return ContentHoverWidget.ID;\n    }\n    static _applyDimensions(container, width, height) {\n        const transformedWidth = typeof width === 'number' ? `${width}px` : width;\n        const transformedHeight = typeof height === 'number' ? `${height}px` : height;\n        container.style.width = transformedWidth;\n        container.style.height = transformedHeight;\n    }\n    _setContentsDomNodeDimensions(width, height) {\n        const contentsDomNode = this._hover.contentsDomNode;\n        return ContentHoverWidget._applyDimensions(contentsDomNode, width, height);\n    }\n    _setContainerDomNodeDimensions(width, height) {\n        const containerDomNode = this._hover.containerDomNode;\n        return ContentHoverWidget._applyDimensions(containerDomNode, width, height);\n    }\n    _setHoverWidgetDimensions(width, height) {\n        this._setContentsDomNodeDimensions(width, height);\n        this._setContainerDomNodeDimensions(width, height);\n        this._layoutContentWidget();\n    }\n    static _applyMaxDimensions(container, width, height) {\n        const transformedWidth = typeof width === 'number' ? `${width}px` : width;\n        const transformedHeight = typeof height === 'number' ? `${height}px` : height;\n        container.style.maxWidth = transformedWidth;\n        container.style.maxHeight = transformedHeight;\n    }\n    _setHoverWidgetMaxDimensions(width, height) {\n        ContentHoverWidget._applyMaxDimensions(this._hover.contentsDomNode, width, height);\n        ContentHoverWidget._applyMaxDimensions(this._hover.containerDomNode, width, height);\n        this._hover.containerDomNode.style.setProperty('--hover-maxWidth', typeof width === 'number' ? `${width}px` : width);\n        this._layoutContentWidget();\n    }\n    _hasHorizontalScrollbar() {\n        const scrollDimensions = this._hover.scrollbar.getScrollDimensions();\n        const hasHorizontalScrollbar = scrollDimensions.scrollWidth > scrollDimensions.width;\n        return hasHorizontalScrollbar;\n    }\n    _adjustContentsBottomPadding() {\n        const contentsDomNode = this._hover.contentsDomNode;\n        const extraBottomPadding = `${this._hover.scrollbar.options.horizontalScrollbarSize}px`;\n        if (contentsDomNode.style.paddingBottom !== extraBottomPadding) {\n            contentsDomNode.style.paddingBottom = extraBottomPadding;\n        }\n    }\n    _setAdjustedHoverWidgetDimensions(size) {\n        this._setHoverWidgetMaxDimensions('none', 'none');\n        const width = size.width;\n        const height = size.height;\n        this._setHoverWidgetDimensions(width, height);\n        // measure if widget has horizontal scrollbar after setting the dimensions\n        if (this._hasHorizontalScrollbar()) {\n            this._adjustContentsBottomPadding();\n            this._setContentsDomNodeDimensions(width, height - SCROLLBAR_WIDTH);\n        }\n    }\n    _setResizableNodeMaxDimensions() {\n        var _a, _b;\n        const maxRenderingWidth = (_a = this._findMaximumRenderingWidth()) !== null && _a !== void 0 ? _a : Infinity;\n        const maxRenderingHeight = (_b = this._findMaximumRenderingHeight()) !== null && _b !== void 0 ? _b : Infinity;\n        this._resizableNode.maxSize = new dom.Dimension(maxRenderingWidth, maxRenderingHeight);\n        this._setHoverWidgetMaxDimensions(maxRenderingWidth, maxRenderingHeight);\n    }\n    _resize(size) {\n        var _a, _b;\n        ContentHoverWidget._lastDimensions = new dom.Dimension(size.width, size.height);\n        this._setAdjustedHoverWidgetDimensions(size);\n        this._resizableNode.layout(size.height, size.width);\n        this._setResizableNodeMaxDimensions();\n        this._hover.scrollbar.scanDomNode();\n        this._editor.layoutContentWidget(this);\n        (_b = (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.colorPicker) === null || _b === void 0 ? void 0 : _b.layout();\n    }\n    _findAvailableSpaceVertically() {\n        var _a;\n        const position = (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.showAtPosition;\n        if (!position) {\n            return;\n        }\n        return this._positionPreference === 1 /* ContentWidgetPositionPreference.ABOVE */ ? this._availableVerticalSpaceAbove(position) : this._availableVerticalSpaceBelow(position);\n    }\n    _findMaximumRenderingHeight() {\n        const availableSpace = this._findAvailableSpaceVertically();\n        if (!availableSpace) {\n            return;\n        }\n        // Padding needed in order to stop the resizing down to a smaller height\n        let maximumHeight = CONTAINER_HEIGHT_PADDING;\n        Array.from(this._hover.contentsDomNode.children).forEach((hoverPart) => {\n            maximumHeight += hoverPart.clientHeight;\n        });\n        if (this._hasHorizontalScrollbar()) {\n            maximumHeight += SCROLLBAR_WIDTH;\n        }\n        return Math.min(availableSpace, maximumHeight);\n    }\n    _findMaximumRenderingWidth() {\n        if (!this._editor || !this._editor.hasModel()) {\n            return;\n        }\n        const bodyBoxWidth = dom.getClientArea(document.body).width;\n        const horizontalPadding = 14;\n        return bodyBoxWidth - horizontalPadding;\n    }\n    isMouseGettingCloser(posx, posy) {\n        if (!this._visibleData) {\n            return false;\n        }\n        if (typeof this._visibleData.initialMousePosX === 'undefined' || typeof this._visibleData.initialMousePosY === 'undefined') {\n            this._visibleData.initialMousePosX = posx;\n            this._visibleData.initialMousePosY = posy;\n            return false;\n        }\n        const widgetRect = dom.getDomNodePagePosition(this.getDomNode());\n        if (typeof this._visibleData.closestMouseDistance === 'undefined') {\n            this._visibleData.closestMouseDistance = computeDistanceFromPointToRectangle(this._visibleData.initialMousePosX, this._visibleData.initialMousePosY, widgetRect.left, widgetRect.top, widgetRect.width, widgetRect.height);\n        }\n        const distance = computeDistanceFromPointToRectangle(posx, posy, widgetRect.left, widgetRect.top, widgetRect.width, widgetRect.height);\n        if (distance > this._visibleData.closestMouseDistance + 4 /* tolerance of 4 pixels */) {\n            // The mouse is getting farther away\n            return false;\n        }\n        this._visibleData.closestMouseDistance = Math.min(this._visibleData.closestMouseDistance, distance);\n        return true;\n    }\n    _setHoverData(hoverData) {\n        var _a;\n        (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.disposables.dispose();\n        this._visibleData = hoverData;\n        this._hoverVisibleKey.set(!!hoverData);\n        this._hover.containerDomNode.classList.toggle('hidden', !hoverData);\n    }\n    _layout() {\n        const { fontSize, lineHeight } = this._editor.getOption(49 /* EditorOption.fontInfo */);\n        const contentsDomNode = this._hover.contentsDomNode;\n        contentsDomNode.style.fontSize = `${fontSize}px`;\n        contentsDomNode.style.lineHeight = `${lineHeight / fontSize}`;\n        this._updateMaxDimensions();\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    _updateContent(node) {\n        const contentsDomNode = this._hover.contentsDomNode;\n        contentsDomNode.style.paddingBottom = '';\n        contentsDomNode.textContent = '';\n        contentsDomNode.appendChild(node);\n    }\n    _layoutContentWidget() {\n        this._editor.layoutContentWidget(this);\n        this._hover.onContentsChanged();\n    }\n    _updateMaxDimensions() {\n        const height = Math.max(this._editor.getLayoutInfo().height / 4, 250, ContentHoverWidget._lastDimensions.height);\n        const width = Math.max(this._editor.getLayoutInfo().width * 0.66, 500, ContentHoverWidget._lastDimensions.width);\n        this._setHoverWidgetMaxDimensions(width, height);\n    }\n    _render(node, hoverData) {\n        this._setHoverData(hoverData);\n        this._updateFont();\n        this._updateContent(node);\n        this._updateMaxDimensions();\n        this.onContentsChanged();\n        // Simply force a synchronous render on the editor\n        // such that the widget does not really render with left = '0px'\n        this._editor.render();\n    }\n    getPosition() {\n        var _a;\n        if (!this._visibleData) {\n            return null;\n        }\n        return {\n            position: this._visibleData.showAtPosition,\n            secondaryPosition: this._visibleData.showAtSecondaryPosition,\n            positionAffinity: this._visibleData.isBeforeContent ? 3 /* PositionAffinity.LeftOfInjectedText */ : undefined,\n            preference: [(_a = this._positionPreference) !== null && _a !== void 0 ? _a : 1 /* ContentWidgetPositionPreference.ABOVE */]\n        };\n    }\n    showAt(node, hoverData) {\n        var _a, _b;\n        if (!this._editor || !this._editor.hasModel()) {\n            return;\n        }\n        this._render(node, hoverData);\n        const widgetHeight = dom.getTotalHeight(this._hover.containerDomNode);\n        const widgetPosition = hoverData.showAtPosition;\n        this._positionPreference = (_a = this._findPositionPreference(widgetHeight, widgetPosition)) !== null && _a !== void 0 ? _a : 1 /* ContentWidgetPositionPreference.ABOVE */;\n        // See https://github.com/microsoft/vscode/issues/140339\n        // TODO: Doing a second layout of the hover after force rendering the editor\n        this.onContentsChanged();\n        if (hoverData.stoleFocus) {\n            this._hover.containerDomNode.focus();\n        }\n        (_b = hoverData.colorPicker) === null || _b === void 0 ? void 0 : _b.layout();\n    }\n    hide() {\n        if (!this._visibleData) {\n            return;\n        }\n        const stoleFocus = this._visibleData.stoleFocus || this._hoverFocusedKey.get();\n        this._setHoverData(undefined);\n        this._resizableNode.maxSize = new dom.Dimension(Infinity, Infinity);\n        this._resizableNode.clearSashHoverState();\n        this._hoverFocusedKey.set(false);\n        this._editor.layoutContentWidget(this);\n        if (stoleFocus) {\n            this._editor.focus();\n        }\n    }\n    _removeConstraintsRenderNormally() {\n        // Added because otherwise the initial size of the hover content is smaller than should be\n        const layoutInfo = this._editor.getLayoutInfo();\n        this._resizableNode.layout(layoutInfo.height, layoutInfo.width);\n        this._setHoverWidgetDimensions('auto', 'auto');\n    }\n    _adjustHoverHeightForScrollbar(height) {\n        var _a;\n        const containerDomNode = this._hover.containerDomNode;\n        const contentsDomNode = this._hover.contentsDomNode;\n        const maxRenderingHeight = (_a = this._findMaximumRenderingHeight()) !== null && _a !== void 0 ? _a : Infinity;\n        this._setContainerDomNodeDimensions(dom.getTotalWidth(containerDomNode), Math.min(maxRenderingHeight, height));\n        this._setContentsDomNodeDimensions(dom.getTotalWidth(contentsDomNode), Math.min(maxRenderingHeight, height - SCROLLBAR_WIDTH));\n    }\n    setMinimumDimensions(dimensions) {\n        this._resizableNode.minSize = dimensions;\n    }\n    onContentsChanged() {\n        var _a;\n        this._removeConstraintsRenderNormally();\n        const containerDomNode = this._hover.containerDomNode;\n        let height = dom.getTotalHeight(containerDomNode);\n        let width = dom.getTotalWidth(containerDomNode);\n        this._resizableNode.layout(height, width);\n        this._setHoverWidgetDimensions(width, height);\n        height = dom.getTotalHeight(containerDomNode);\n        width = dom.getTotalWidth(containerDomNode);\n        this._resizableNode.layout(height, width);\n        if (this._hasHorizontalScrollbar()) {\n            this._adjustContentsBottomPadding();\n            this._adjustHoverHeightForScrollbar(height);\n        }\n        if ((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.showAtPosition) {\n            const widgetHeight = dom.getTotalHeight(this._hover.containerDomNode);\n            this._positionPreference = this._findPositionPreference(widgetHeight, this._visibleData.showAtPosition);\n        }\n        this._layoutContentWidget();\n    }\n    focus() {\n        this._hover.containerDomNode.focus();\n    }\n    scrollUp() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const fontInfo = this._editor.getOption(49 /* EditorOption.fontInfo */);\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop - fontInfo.lineHeight });\n    }\n    scrollDown() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const fontInfo = this._editor.getOption(49 /* EditorOption.fontInfo */);\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop + fontInfo.lineHeight });\n    }\n    scrollLeft() {\n        const scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n        this._hover.scrollbar.setScrollPosition({ scrollLeft: scrollLeft - HORIZONTAL_SCROLLING_BY });\n    }\n    scrollRight() {\n        const scrollLeft = this._hover.scrollbar.getScrollPosition().scrollLeft;\n        this._hover.scrollbar.setScrollPosition({ scrollLeft: scrollLeft + HORIZONTAL_SCROLLING_BY });\n    }\n    pageUp() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop - scrollHeight });\n    }\n    pageDown() {\n        const scrollTop = this._hover.scrollbar.getScrollPosition().scrollTop;\n        const scrollHeight = this._hover.scrollbar.getScrollDimensions().height;\n        this._hover.scrollbar.setScrollPosition({ scrollTop: scrollTop + scrollHeight });\n    }\n    goToTop() {\n        this._hover.scrollbar.setScrollPosition({ scrollTop: 0 });\n    }\n    goToBottom() {\n        this._hover.scrollbar.setScrollPosition({ scrollTop: this._hover.scrollbar.getScrollDimensions().scrollHeight });\n    }\n};\nContentHoverWidget.ID = 'editor.contrib.resizableContentHoverWidget';\nContentHoverWidget._lastDimensions = new dom.Dimension(0, 0);\nContentHoverWidget = __decorate([\n    __param(2, IContextKeyService)\n], ContentHoverWidget);\nexport { ContentHoverWidget };\nlet EditorHoverStatusBar = class EditorHoverStatusBar extends Disposable {\n    get hasContent() {\n        return this._hasContent;\n    }\n    constructor(_keybindingService) {\n        super();\n        this._keybindingService = _keybindingService;\n        this._hasContent = false;\n        this.hoverElement = $('div.hover-row.status-bar');\n        this.actionsElement = dom.append(this.hoverElement, $('div.actions'));\n    }\n    addAction(actionOptions) {\n        const keybinding = this._keybindingService.lookupKeybinding(actionOptions.commandId);\n        const keybindingLabel = keybinding ? keybinding.getLabel() : null;\n        this._hasContent = true;\n        return this._register(HoverAction.render(this.actionsElement, actionOptions, keybindingLabel));\n    }\n    append(element) {\n        const result = dom.append(this.actionsElement, element);\n        this._hasContent = true;\n        return result;\n    }\n};\nEditorHoverStatusBar = __decorate([\n    __param(0, IKeybindingService)\n], EditorHoverStatusBar);\nexport { EditorHoverStatusBar };\nclass ContentHoverComputer {\n    get anchor() { return this._anchor; }\n    set anchor(value) { this._anchor = value; }\n    get shouldFocus() { return this._shouldFocus; }\n    set shouldFocus(value) { this._shouldFocus = value; }\n    get source() { return this._source; }\n    set source(value) { this._source = value; }\n    get insistOnKeepingHoverVisible() { return this._insistOnKeepingHoverVisible; }\n    set insistOnKeepingHoverVisible(value) { this._insistOnKeepingHoverVisible = value; }\n    constructor(_editor, _participants) {\n        this._editor = _editor;\n        this._participants = _participants;\n        this._anchor = null;\n        this._shouldFocus = false;\n        this._source = 0 /* HoverStartSource.Mouse */;\n        this._insistOnKeepingHoverVisible = false;\n    }\n    static _getLineDecorations(editor, anchor) {\n        if (anchor.type !== 1 /* HoverAnchorType.Range */ && !anchor.supportsMarkerHover) {\n            return [];\n        }\n        const model = editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        if (lineNumber > model.getLineCount()) {\n            // invalid line\n            return [];\n        }\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        return editor.getLineDecorations(lineNumber).filter((d) => {\n            if (d.options.isWholeLine) {\n                return true;\n            }\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            if (d.options.showIfCollapsed) {\n                // Relax check around `showIfCollapsed` decorations to also include +/- 1 character\n                if (startColumn > anchor.range.startColumn + 1 || anchor.range.endColumn - 1 > endColumn) {\n                    return false;\n                }\n            }\n            else {\n                if (startColumn > anchor.range.startColumn || anchor.range.endColumn > endColumn) {\n                    return false;\n                }\n            }\n            return true;\n        });\n    }\n    computeAsync(token) {\n        const anchor = this._anchor;\n        if (!this._editor.hasModel() || !anchor) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, anchor);\n        return AsyncIterableObject.merge(this._participants.map((participant) => {\n            if (!participant.computeAsync) {\n                return AsyncIterableObject.EMPTY;\n            }\n            return participant.computeAsync(anchor, lineDecorations, token);\n        }));\n    }\n    computeSync() {\n        if (!this._editor.hasModel() || !this._anchor) {\n            return [];\n        }\n        const lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, this._anchor);\n        let result = [];\n        for (const participant of this._participants) {\n            result = result.concat(participant.computeSync(this._anchor, lineDecorations));\n        }\n        return coalesce(result);\n    }\n}\nfunction computeDistanceFromPointToRectangle(pointX, pointY, left, top, width, height) {\n    const x = (left + width / 2); // x center of rectangle\n    const y = (top + height / 2); // y center of rectangle\n    const dx = Math.max(Math.abs(pointX - x) - width / 2, 0);\n    const dy = Math.max(Math.abs(pointY - y) - height / 2, 0);\n    return Math.sqrt(dx * dx + dy * dy);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class HoverProviderResult {\n    constructor(provider, hover, ordinal) {\n        this.provider = provider;\n        this.hover = hover;\n        this.ordinal = ordinal;\n    }\n}\nfunction executeProvider(provider, ordinal, model, position, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const result = yield Promise.resolve(provider.provideHover(model, position, token));\n            if (result && isValid(result)) {\n                return new HoverProviderResult(provider, result, ordinal);\n            }\n        }\n        catch (err) {\n            onUnexpectedExternalError(err);\n        }\n        return undefined;\n    });\n}\nexport function getHover(registry, model, position, token) {\n    const providers = registry.ordered(model);\n    const promises = providers.map((provider, index) => executeProvider(provider, index, model, position, token));\n    return AsyncIterableObject.fromPromises(promises).coalesce();\n}\nexport function getHoverPromise(registry, model, position, token) {\n    return getHover(registry, model, position, token).map(item => item.hover).toPromise();\n}\nregisterModelAndPositionCommand('_executeHoverProvider', (accessor, model, position) => {\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    return getHoverPromise(languageFeaturesService.hoverProvider, model, position, CancellationToken.None);\n});\nfunction isValid(result) {\n    const hasRange = (typeof result.range !== 'undefined');\n    const hasHtmlContent = typeof result.contents !== 'undefined' && result.contents && result.contents.length > 0;\n    return hasRange && hasHtmlContent;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { isEmptyMarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nconst $ = dom.$;\nexport class MarginHoverWidget extends Disposable {\n    constructor(editor, languageService, openerService) {\n        super();\n        this._renderDisposeables = this._register(new DisposableStore());\n        this._editor = editor;\n        this._isVisible = false;\n        this._messages = [];\n        this._hover = this._register(new HoverWidget());\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        this._markdownRenderer = this._register(new MarkdownRenderer({ editor: this._editor }, languageService, openerService));\n        this._computer = new MarginHoverComputer(this._editor);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            this._withResult(result.value);\n        }));\n        this._register(this._editor.onDidChangeModelDecorations(() => this._onModelDecorationsChanged()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(49 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._editor.addOverlayWidget(this);\n    }\n    dispose() {\n        this._editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n    getId() {\n        return MarginHoverWidget.ID;\n    }\n    getDomNode() {\n        return this._hover.containerDomNode;\n    }\n    getPosition() {\n        return null;\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    _onModelDecorationsChanged() {\n        if (this._isVisible) {\n            // The decorations have changed and the hover is visible,\n            // we need to recompute the displayed text\n            this._hoverOperation.cancel();\n            this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n        }\n    }\n    startShowingAt(lineNumber) {\n        if (this._computer.lineNumber === lineNumber) {\n            // We have to show the widget at the exact same line number as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        this.hide();\n        this._computer.lineNumber = lineNumber;\n        this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n    }\n    hide() {\n        this._computer.lineNumber = -1;\n        this._hoverOperation.cancel();\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n    }\n    _withResult(result) {\n        this._messages = result;\n        if (this._messages.length > 0) {\n            this._renderMessages(this._computer.lineNumber, this._messages);\n        }\n        else {\n            this.hide();\n        }\n    }\n    _renderMessages(lineNumber, messages) {\n        this._renderDisposeables.clear();\n        const fragment = document.createDocumentFragment();\n        for (const msg of messages) {\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderedContents = this._renderDisposeables.add(this._markdownRenderer.render(msg.value));\n            hoverContentsElement.appendChild(renderedContents.element);\n            fragment.appendChild(markdownHoverElement);\n        }\n        this._updateContents(fragment);\n        this._showAt(lineNumber);\n    }\n    _updateContents(node) {\n        this._hover.contentsDomNode.textContent = '';\n        this._hover.contentsDomNode.appendChild(node);\n        this._updateFont();\n    }\n    _showAt(lineNumber) {\n        if (!this._isVisible) {\n            this._isVisible = true;\n            this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        }\n        const editorLayout = this._editor.getLayoutInfo();\n        const topForLineNumber = this._editor.getTopForLineNumber(lineNumber);\n        const editorScrollTop = this._editor.getScrollTop();\n        const lineHeight = this._editor.getOption(65 /* EditorOption.lineHeight */);\n        const nodeHeight = this._hover.containerDomNode.clientHeight;\n        const top = topForLineNumber - editorScrollTop - ((nodeHeight - lineHeight) / 2);\n        this._hover.containerDomNode.style.left = `${editorLayout.glyphMarginLeft + editorLayout.glyphMarginWidth}px`;\n        this._hover.containerDomNode.style.top = `${Math.max(Math.round(top), 0)}px`;\n    }\n}\nMarginHoverWidget.ID = 'editor.contrib.modesGlyphHoverWidget';\nclass MarginHoverComputer {\n    get lineNumber() {\n        return this._lineNumber;\n    }\n    set lineNumber(value) {\n        this._lineNumber = value;\n    }\n    constructor(_editor) {\n        this._editor = _editor;\n        this._lineNumber = -1;\n    }\n    computeSync() {\n        const toHoverMessage = (contents) => {\n            return {\n                value: contents\n            };\n        };\n        const lineDecorations = this._editor.getLineDecorations(this._lineNumber);\n        const result = [];\n        if (!lineDecorations) {\n            return result;\n        }\n        for (const d of lineDecorations) {\n            if (!d.options.glyphMarginClassName) {\n                continue;\n            }\n            const hoverMessage = d.options.glyphMarginHoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            result.push(...asArray(hoverMessage).map(toHoverMessage));\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, disposableTimeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { basename } from '../../../../base/common/resources.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { IMarkerDecorationsService } from '../../../common/services/markerDecorations.js';\nimport { getCodeActions, quickFixCommandId } from '../../codeAction/browser/codeAction.js';\nimport { CodeActionController } from '../../codeAction/browser/codeActionController.js';\nimport { CodeActionKind, CodeActionTriggerSource } from '../../codeAction/common/types.js';\nimport { MarkerController, NextMarkerAction } from '../../gotoError/browser/gotoError.js';\nimport * as nls from '../../../../nls.js';\nimport { IMarkerData, MarkerSeverity } from '../../../../platform/markers/common/markers.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nconst $ = dom.$;\nexport class MarkerHover {\n    constructor(owner, range, marker) {\n        this.owner = owner;\n        this.range = range;\n        this.marker = marker;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nconst markerCodeActionTrigger = {\n    type: 1 /* CodeActionTriggerType.Invoke */,\n    filter: { include: CodeActionKind.QuickFix },\n    triggerAction: CodeActionTriggerSource.QuickFixHover\n};\nlet MarkerHoverParticipant = class MarkerHoverParticipant {\n    constructor(_editor, _markerDecorationsService, _openerService, _languageFeaturesService) {\n        this._editor = _editor;\n        this._markerDecorationsService = _markerDecorationsService;\n        this._openerService = _openerService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this.hoverOrdinal = 1;\n        this.recentMarkerCodeActionsInfo = undefined;\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */ && !anchor.supportsMarkerHover) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const marker = this._markerDecorationsService.getMarker(model.uri, d);\n            if (!marker) {\n                continue;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkerHover(this, range, marker));\n        }\n        return result;\n    }\n    renderHoverParts(context, hoverParts) {\n        if (!hoverParts.length) {\n            return Disposable.None;\n        }\n        const disposables = new DisposableStore();\n        hoverParts.forEach(msg => context.fragment.appendChild(this.renderMarkerHover(msg, disposables)));\n        const markerHoverForStatusbar = hoverParts.length === 1 ? hoverParts[0] : hoverParts.sort((a, b) => MarkerSeverity.compare(a.marker.severity, b.marker.severity))[0];\n        this.renderMarkerStatusbar(context, markerHoverForStatusbar, disposables);\n        return disposables;\n    }\n    renderMarkerHover(markerHover, disposables) {\n        const hoverElement = $('div.hover-row');\n        const markerElement = dom.append(hoverElement, $('div.marker.hover-contents'));\n        const { source, message, code, relatedInformation } = markerHover.marker;\n        this._editor.applyFontInfo(markerElement);\n        const messageElement = dom.append(markerElement, $('span'));\n        messageElement.style.whiteSpace = 'pre-wrap';\n        messageElement.innerText = message;\n        if (source || code) {\n            // Code has link\n            if (code && typeof code !== 'string') {\n                const sourceAndCodeElement = $('span');\n                if (source) {\n                    const sourceElement = dom.append(sourceAndCodeElement, $('span'));\n                    sourceElement.innerText = source;\n                }\n                const codeLink = dom.append(sourceAndCodeElement, $('a.code-link'));\n                codeLink.setAttribute('href', code.target.toString());\n                disposables.add(dom.addDisposableListener(codeLink, 'click', (e) => {\n                    this._openerService.open(code.target, { allowCommands: true });\n                    e.preventDefault();\n                    e.stopPropagation();\n                }));\n                const codeElement = dom.append(codeLink, $('span'));\n                codeElement.innerText = code.value;\n                const detailsElement = dom.append(markerElement, sourceAndCodeElement);\n                detailsElement.style.opacity = '0.6';\n                detailsElement.style.paddingLeft = '6px';\n            }\n            else {\n                const detailsElement = dom.append(markerElement, $('span'));\n                detailsElement.style.opacity = '0.6';\n                detailsElement.style.paddingLeft = '6px';\n                detailsElement.innerText = source && code ? `${source}(${code})` : source ? source : `(${code})`;\n            }\n        }\n        if (isNonEmptyArray(relatedInformation)) {\n            for (const { message, resource, startLineNumber, startColumn } of relatedInformation) {\n                const relatedInfoContainer = dom.append(markerElement, $('div'));\n                relatedInfoContainer.style.marginTop = '8px';\n                const a = dom.append(relatedInfoContainer, $('a'));\n                a.innerText = `${basename(resource)}(${startLineNumber}, ${startColumn}): `;\n                a.style.cursor = 'pointer';\n                disposables.add(dom.addDisposableListener(a, 'click', (e) => {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    if (this._openerService) {\n                        this._openerService.open(resource, {\n                            fromUserGesture: true,\n                            editorOptions: { selection: { startLineNumber, startColumn } }\n                        }).catch(onUnexpectedError);\n                    }\n                }));\n                const messageElement = dom.append(relatedInfoContainer, $('span'));\n                messageElement.innerText = message;\n                this._editor.applyFontInfo(messageElement);\n            }\n        }\n        return hoverElement;\n    }\n    renderMarkerStatusbar(context, markerHover, disposables) {\n        if (markerHover.marker.severity === MarkerSeverity.Error || markerHover.marker.severity === MarkerSeverity.Warning || markerHover.marker.severity === MarkerSeverity.Info) {\n            context.statusBar.addAction({\n                label: nls.localize('view problem', \"View Problem\"),\n                commandId: NextMarkerAction.ID,\n                run: () => {\n                    var _a;\n                    context.hide();\n                    (_a = MarkerController.get(this._editor)) === null || _a === void 0 ? void 0 : _a.showAtMarker(markerHover.marker);\n                    this._editor.focus();\n                }\n            });\n        }\n        if (!this._editor.getOption(89 /* EditorOption.readOnly */)) {\n            const quickfixPlaceholderElement = context.statusBar.append($('div'));\n            if (this.recentMarkerCodeActionsInfo) {\n                if (IMarkerData.makeKey(this.recentMarkerCodeActionsInfo.marker) === IMarkerData.makeKey(markerHover.marker)) {\n                    if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\n                        quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\n                    }\n                }\n                else {\n                    this.recentMarkerCodeActionsInfo = undefined;\n                }\n            }\n            const updatePlaceholderDisposable = this.recentMarkerCodeActionsInfo && !this.recentMarkerCodeActionsInfo.hasCodeActions ? Disposable.None : disposables.add(disposableTimeout(() => quickfixPlaceholderElement.textContent = nls.localize('checkingForQuickFixes', \"Checking for quick fixes...\"), 200));\n            if (!quickfixPlaceholderElement.textContent) {\n                // Have some content in here to avoid flickering\n                quickfixPlaceholderElement.textContent = String.fromCharCode(0xA0); // &nbsp;\n            }\n            const codeActionsPromise = this.getCodeActions(markerHover.marker);\n            disposables.add(toDisposable(() => codeActionsPromise.cancel()));\n            codeActionsPromise.then(actions => {\n                updatePlaceholderDisposable.dispose();\n                this.recentMarkerCodeActionsInfo = { marker: markerHover.marker, hasCodeActions: actions.validActions.length > 0 };\n                if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\n                    actions.dispose();\n                    quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\n                    return;\n                }\n                quickfixPlaceholderElement.style.display = 'none';\n                let showing = false;\n                disposables.add(toDisposable(() => {\n                    if (!showing) {\n                        actions.dispose();\n                    }\n                }));\n                context.statusBar.addAction({\n                    label: nls.localize('quick fixes', \"Quick Fix...\"),\n                    commandId: quickFixCommandId,\n                    run: (target) => {\n                        showing = true;\n                        const controller = CodeActionController.get(this._editor);\n                        const elementPosition = dom.getDomNodePagePosition(target);\n                        // Hide the hover pre-emptively, otherwise the editor can close the code actions\n                        // context menu as well when using keyboard navigation\n                        context.hide();\n                        controller === null || controller === void 0 ? void 0 : controller.showCodeActions(markerCodeActionTrigger, actions, {\n                            x: elementPosition.left,\n                            y: elementPosition.top,\n                            width: elementPosition.width,\n                            height: elementPosition.height\n                        });\n                    }\n                });\n            }, onUnexpectedError);\n        }\n    }\n    getCodeActions(marker) {\n        return createCancelablePromise(cancellationToken => {\n            return getCodeActions(this._languageFeaturesService.codeActionProvider, this._editor.getModel(), new Range(marker.startLineNumber, marker.startColumn, marker.endLineNumber, marker.endColumn), markerCodeActionTrigger, Progress.None, cancellationToken);\n        });\n    }\n};\nMarkerHoverParticipant = __decorate([\n    __param(1, IMarkerDecorationsService),\n    __param(2, IOpenerService),\n    __param(3, ILanguageFeaturesService)\n], MarkerHoverParticipant);\nexport { MarkerHoverParticipant };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { GotoDefinitionAtPositionEditorContribution } from '../../gotoSymbol/browser/link/goToDefinitionAtPosition.js';\nimport { ContentHoverWidget, ContentHoverController } from './contentHover.js';\nimport { MarginHoverWidget } from './marginHover.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { editorHoverBorder } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { HoverParticipantRegistry } from './hoverTypes.js';\nimport { MarkdownHoverParticipant } from './markdownHoverParticipant.js';\nimport { MarkerHoverParticipant } from './markerHoverParticipant.js';\nimport { InlineSuggestionHintsContentWidget } from '../../inlineCompletions/browser/inlineCompletionsHintsWidget.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport * as nls from '../../../../nls.js';\nimport './hover.css';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { status } from '../../../../base/browser/ui/aria/aria.js';\n// sticky hover widget which doesn't disappear on focus out and such\nconst _sticky = false;\nlet ModesHoverController = class ModesHoverController {\n    static get(editor) {\n        return editor.getContribution(ModesHoverController.ID);\n    }\n    constructor(_editor, _instantiationService, _openerService, _languageService, _keybindingService) {\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._openerService = _openerService;\n        this._languageService = _languageService;\n        this._keybindingService = _keybindingService;\n        this._toUnhook = new DisposableStore();\n        this._hoverActivatedByColorDecoratorClick = false;\n        this._isMouseDown = false;\n        this._hoverClicked = false;\n        this._contentWidget = null;\n        this._glyphWidget = null;\n        this._hookEvents();\n        this._didChangeConfigurationHandler = this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(59 /* EditorOption.hover */)) {\n                this._unhookEvents();\n                this._hookEvents();\n            }\n        });\n    }\n    _hookEvents() {\n        const hideWidgetsEventHandler = () => this._hideWidgets();\n        const hoverOpts = this._editor.getOption(59 /* EditorOption.hover */);\n        this._isHoverEnabled = hoverOpts.enabled;\n        this._isHoverSticky = hoverOpts.sticky;\n        if (this._isHoverEnabled) {\n            this._toUnhook.add(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\n            this._toUnhook.add(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\n        }\n        else {\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\n        }\n        this._toUnhook.add(this._editor.onMouseLeave((e) => this._onEditorMouseLeave(e)));\n        this._toUnhook.add(this._editor.onDidChangeModel(hideWidgetsEventHandler));\n        this._toUnhook.add(this._editor.onDidScrollChange((e) => this._onEditorScrollChanged(e)));\n    }\n    _unhookEvents() {\n        this._toUnhook.clear();\n    }\n    _onEditorScrollChanged(e) {\n        if (e.scrollTopChanged || e.scrollLeftChanged) {\n            this._hideWidgets();\n        }\n    }\n    _onEditorMouseDown(mouseEvent) {\n        var _a;\n        this._isMouseDown = true;\n        const target = mouseEvent.target;\n        if (target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID) {\n            this._hoverClicked = true;\n            // mouse down on top of content hover widget\n            return;\n        }\n        if (target.type === 12 /* MouseTargetType.OVERLAY_WIDGET */ && target.detail === MarginHoverWidget.ID) {\n            // mouse down on top of overlay hover widget\n            return;\n        }\n        if (target.type !== 12 /* MouseTargetType.OVERLAY_WIDGET */) {\n            this._hoverClicked = false;\n        }\n        if (!((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.widget.isResizing)) {\n            this._hideWidgets();\n        }\n    }\n    _onEditorMouseUp(mouseEvent) {\n        this._isMouseDown = false;\n    }\n    _onEditorMouseLeave(mouseEvent) {\n        var _a, _b;\n        const targetEm = (mouseEvent.event.browserEvent.relatedTarget);\n        if (((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.widget.isResizing) || ((_b = this._contentWidget) === null || _b === void 0 ? void 0 : _b.containsNode(targetEm))) {\n            // When the content widget is resizing\n            // when the mouse is inside hover widget\n            return;\n        }\n        if (!_sticky) {\n            this._hideWidgets();\n        }\n    }\n    _onEditorMouseMove(mouseEvent) {\n        var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l;\n        const target = mouseEvent.target;\n        if (((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isFocused) || ((_b = this._contentWidget) === null || _b === void 0 ? void 0 : _b.isResizing)) {\n            return;\n        }\n        if (this._isMouseDown && this._hoverClicked) {\n            return;\n        }\n        if (this._isHoverSticky && target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID) {\n            // mouse moved on top of content hover widget\n            return;\n        }\n        if (this._isHoverSticky && ((_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.containsNode((_d = mouseEvent.event.browserEvent.view) === null || _d === void 0 ? void 0 : _d.document.activeElement)) && !((_f = (_e = mouseEvent.event.browserEvent.view) === null || _e === void 0 ? void 0 : _e.getSelection()) === null || _f === void 0 ? void 0 : _f.isCollapsed)) {\n            // selected text within content hover widget\n            return;\n        }\n        if (!this._isHoverSticky && target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID\n            && ((_g = this._contentWidget) === null || _g === void 0 ? void 0 : _g.isColorPickerVisible)) {\n            // though the hover is not sticky, the color picker needs to.\n            return;\n        }\n        if (this._isHoverSticky && target.type === 12 /* MouseTargetType.OVERLAY_WIDGET */ && target.detail === MarginHoverWidget.ID) {\n            // mouse moved on top of overlay hover widget\n            return;\n        }\n        if (this._isHoverSticky && ((_h = this._contentWidget) === null || _h === void 0 ? void 0 : _h.isVisibleFromKeyboard)) {\n            // Sticky mode is on and the hover has been shown via keyboard\n            // so moving the mouse has no effect\n            return;\n        }\n        const mouseOnDecorator = (_j = target.element) === null || _j === void 0 ? void 0 : _j.classList.contains('colorpicker-color-decoration');\n        const decoratorActivatedOn = this._editor.getOption(145 /* EditorOption.colorDecoratorsActivatedOn */);\n        if ((mouseOnDecorator && ((decoratorActivatedOn === 'click' && !this._hoverActivatedByColorDecoratorClick) ||\n            (decoratorActivatedOn === 'hover' && !this._isHoverEnabled && !_sticky) ||\n            (decoratorActivatedOn === 'clickAndHover' && !this._isHoverEnabled && !this._hoverActivatedByColorDecoratorClick)))\n            || !mouseOnDecorator && !this._isHoverEnabled && !this._hoverActivatedByColorDecoratorClick) {\n            this._hideWidgets();\n            return;\n        }\n        const contentWidget = this._getOrCreateContentWidget();\n        if (contentWidget.maybeShowAt(mouseEvent)) {\n            (_k = this._glyphWidget) === null || _k === void 0 ? void 0 : _k.hide();\n            return;\n        }\n        if (target.type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */ && target.position) {\n            (_l = this._contentWidget) === null || _l === void 0 ? void 0 : _l.hide();\n            if (!this._glyphWidget) {\n                this._glyphWidget = new MarginHoverWidget(this._editor, this._languageService, this._openerService);\n            }\n            this._glyphWidget.startShowingAt(target.position.lineNumber);\n            return;\n        }\n        if (_sticky) {\n            return;\n        }\n        this._hideWidgets();\n    }\n    _onKeyDown(e) {\n        var _a;\n        if (!this._editor.hasModel()) {\n            return;\n        }\n        const resolvedKeyboardEvent = this._keybindingService.softDispatch(e, this._editor.getDomNode());\n        // If the beginning of a multi-chord keybinding is pressed, or the command aims to focus the hover, set the variable to true, otherwise false\n        const mightTriggerFocus = (resolvedKeyboardEvent.kind === 1 /* ResultKind.MoreChordsNeeded */ || (resolvedKeyboardEvent.kind === 2 /* ResultKind.KbFound */ && resolvedKeyboardEvent.commandId === 'editor.action.showHover' && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isVisible)));\n        if (e.keyCode !== 5 /* KeyCode.Ctrl */ && e.keyCode !== 6 /* KeyCode.Alt */ && e.keyCode !== 57 /* KeyCode.Meta */ && e.keyCode !== 4 /* KeyCode.Shift */\n            && !mightTriggerFocus) {\n            // Do not hide hover when a modifier key is pressed\n            this._hideWidgets();\n        }\n    }\n    _hideWidgets() {\n        var _a, _b, _c;\n        if (_sticky) {\n            return;\n        }\n        if ((this._isMouseDown && this._hoverClicked && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible)) || InlineSuggestionHintsContentWidget.dropDownVisible) {\n            return;\n        }\n        this._hoverActivatedByColorDecoratorClick = false;\n        this._hoverClicked = false;\n        (_b = this._glyphWidget) === null || _b === void 0 ? void 0 : _b.hide();\n        (_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.hide();\n    }\n    _getOrCreateContentWidget() {\n        if (!this._contentWidget) {\n            this._contentWidget = this._instantiationService.createInstance(ContentHoverController, this._editor);\n        }\n        return this._contentWidget;\n    }\n    showContentHover(range, mode, source, focus, activatedByColorDecoratorClick = false) {\n        this._hoverActivatedByColorDecoratorClick = activatedByColorDecoratorClick;\n        this._getOrCreateContentWidget().startShowingAtRange(range, mode, source, focus);\n    }\n    focus() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    scrollUp() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.scrollUp();\n    }\n    scrollDown() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.scrollDown();\n    }\n    scrollLeft() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.scrollLeft();\n    }\n    scrollRight() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.scrollRight();\n    }\n    pageUp() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.pageUp();\n    }\n    pageDown() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.pageDown();\n    }\n    goToTop() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.goToTop();\n    }\n    goToBottom() {\n        var _a;\n        (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.goToBottom();\n    }\n    get isColorPickerVisible() {\n        var _a;\n        return (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible;\n    }\n    get isHoverVisible() {\n        var _a;\n        return (_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isVisible;\n    }\n    dispose() {\n        var _a, _b;\n        this._unhookEvents();\n        this._toUnhook.dispose();\n        this._didChangeConfigurationHandler.dispose();\n        (_a = this._glyphWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n        (_b = this._contentWidget) === null || _b === void 0 ? void 0 : _b.dispose();\n    }\n};\nModesHoverController.ID = 'editor.contrib.hover';\nModesHoverController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IOpenerService),\n    __param(3, ILanguageService),\n    __param(4, IKeybindingService)\n], ModesHoverController);\nexport { ModesHoverController };\nclass ShowOrFocusHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.showHover',\n            label: nls.localize({\n                key: 'showOrFocusHover',\n                comment: [\n                    'Label for action that will trigger the showing/focusing of a hover in the editor.',\n                    'If the hover is not visible, it will show the hover.',\n                    'This allows for users to show the hover without using the mouse.',\n                    'If the hover is already visible, it will take focus.'\n                ]\n            }, \"Show or Focus Hover\"),\n            description: {\n                description: `Show or Focus Hover`,\n                args: [{\n                        name: 'args',\n                        schema: {\n                            type: 'object',\n                            properties: {\n                                'focus': {\n                                    description: 'Controls if when triggered with the keyboard, the hover should take focus immediately.',\n                                    type: 'boolean',\n                                    default: false\n                                }\n                            },\n                        }\n                    }]\n            },\n            alias: 'Show or Focus Hover',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        var _a;\n        const configurationService = accessor.get(IConfigurationService);\n        const accessibilityService = accessor.get(IAccessibilityService);\n        const keybindingService = accessor.get(IKeybindingService);\n        if (!editor.hasModel()) {\n            return;\n        }\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const position = editor.getPosition();\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const focus = editor.getOption(2 /* EditorOption.accessibilitySupport */) === 2 /* AccessibilitySupport.Enabled */ || !!(args === null || args === void 0 ? void 0 : args.focus);\n        if (controller.isHoverVisible) {\n            controller.focus();\n        }\n        else {\n            controller.showContentHover(range, 1 /* HoverStartMode.Immediate */, 1 /* HoverStartSource.Keyboard */, focus);\n        }\n        if (configurationService.getValue('accessibility.verbosity.hover') && accessibilityService.isScreenReaderOptimized()) {\n            const keybinding = (_a = keybindingService.lookupKeybinding('editor.action.accessibleView')) === null || _a === void 0 ? void 0 : _a.getAriaLabel();\n            const hint = keybinding ? nls.localize('chatAccessibleViewHint', \"Inspect this in the accessible view with {0}\", keybinding) : nls.localize('chatAccessibleViewHintNoKb', \"Inspect this in the accessible view via the command Open Accessible View which is currently not triggerable via keybinding\");\n            status(hint);\n        }\n    }\n}\nclass ShowDefinitionPreviewHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.showDefinitionPreviewHover',\n            label: nls.localize({\n                key: 'showDefinitionPreviewHover',\n                comment: [\n                    'Label for action that will trigger the showing of definition preview hover in the editor.',\n                    'This allows for users to show the definition preview hover without using the mouse.'\n                ]\n            }, \"Show Definition Preview Hover\"),\n            alias: 'Show Definition Preview Hover',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const position = editor.getPosition();\n        if (!position) {\n            return;\n        }\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const goto = GotoDefinitionAtPositionEditorContribution.get(editor);\n        if (!goto) {\n            return;\n        }\n        const promise = goto.startFindDefinitionFromCursor(position);\n        promise.then(() => {\n            controller.showContentHover(range, 1 /* HoverStartMode.Immediate */, 1 /* HoverStartSource.Keyboard */, true);\n        });\n    }\n}\nclass ScrollUpHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.scrollUpHover',\n            label: nls.localize({\n                key: 'scrollUpHover',\n                comment: [\n                    'Action that allows to scroll up in the hover widget with the up arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Up Hover\"),\n            alias: 'Scroll Up Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 16 /* KeyCode.UpArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollUp();\n    }\n}\nclass ScrollDownHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.scrollDownHover',\n            label: nls.localize({\n                key: 'scrollDownHover',\n                comment: [\n                    'Action that allows to scroll down in the hover widget with the up arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Down Hover\"),\n            alias: 'Scroll Down Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 18 /* KeyCode.DownArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollDown();\n    }\n}\nclass ScrollLeftHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.scrollLeftHover',\n            label: nls.localize({\n                key: 'scrollLeftHover',\n                comment: [\n                    'Action that allows to scroll left in the hover widget with the left arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Left Hover\"),\n            alias: 'Scroll Left Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 15 /* KeyCode.LeftArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollLeft();\n    }\n}\nclass ScrollRightHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.scrollRightHover',\n            label: nls.localize({\n                key: 'scrollRightHover',\n                comment: [\n                    'Action that allows to scroll right in the hover widget with the right arrow when the hover widget is focused.'\n                ]\n            }, \"Scroll Right Hover\"),\n            alias: 'Scroll Right Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 17 /* KeyCode.RightArrow */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.scrollRight();\n    }\n}\nclass PageUpHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.pageUpHover',\n            label: nls.localize({\n                key: 'pageUpHover',\n                comment: [\n                    'Action that allows to page up in the hover widget with the page up command when the hover widget is focused.'\n                ]\n            }, \"Page Up Hover\"),\n            alias: 'Page Up Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 11 /* KeyCode.PageUp */,\n                secondary: [512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.pageUp();\n    }\n}\nclass PageDownHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.pageDownHover',\n            label: nls.localize({\n                key: 'pageDownHover',\n                comment: [\n                    'Action that allows to page down in the hover widget with the page down command when the hover widget is focused.'\n                ]\n            }, \"Page Down Hover\"),\n            alias: 'Page Down Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 12 /* KeyCode.PageDown */,\n                secondary: [512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.pageDown();\n    }\n}\nclass GoToTopHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.goToTopHover',\n            label: nls.localize({\n                key: 'goToTopHover',\n                comment: [\n                    'Action that allows to go to the top of the hover widget with the home command when the hover widget is focused.'\n                ]\n            }, \"Go To Top Hover\"),\n            alias: 'Go To Bottom Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 14 /* KeyCode.Home */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.goToTop();\n    }\n}\nclass GoToBottomHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.goToBottomHover',\n            label: nls.localize({\n                key: 'goToBottomHover',\n                comment: [\n                    'Action that allows to go to the bottom in the hover widget with the end command when the hover widget is focused.'\n                ]\n            }, \"Go To Bottom Hover\"),\n            alias: 'Go To Bottom Hover',\n            precondition: EditorContextKeys.hoverFocused,\n            kbOpts: {\n                kbExpr: EditorContextKeys.hoverFocused,\n                primary: 13 /* KeyCode.End */,\n                secondary: [2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */],\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        controller.goToBottom();\n    }\n}\nregisterEditorContribution(ModesHoverController.ID, ModesHoverController, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(ShowOrFocusHoverAction);\nregisterEditorAction(ShowDefinitionPreviewHoverAction);\nregisterEditorAction(ScrollUpHoverAction);\nregisterEditorAction(ScrollDownHoverAction);\nregisterEditorAction(ScrollLeftHoverAction);\nregisterEditorAction(ScrollRightHoverAction);\nregisterEditorAction(PageUpHoverAction);\nregisterEditorAction(PageDownHoverAction);\nregisterEditorAction(GoToTopHoverAction);\nregisterEditorAction(GoToBottomHoverAction);\nHoverParticipantRegistry.register(MarkdownHoverParticipant);\nHoverParticipantRegistry.register(MarkerHoverParticipant);\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const hoverBorder = theme.getColor(editorHoverBorder);\n    if (hoverBorder) {\n        collector.addRule(`.monaco-editor .monaco-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-bottom: 0px solid ${hoverBorder.transparent(0.5)}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { createCancelableAsyncIterable, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nexport class HoverResult {\n    constructor(value, isComplete, hasLoadingMessage) {\n        this.value = value;\n        this.isComplete = isComplete;\n        this.hasLoadingMessage = hasLoadingMessage;\n    }\n}\n/**\n * Computing the hover is very fine tuned.\n *\n * Suppose the hover delay is 300ms (the default). Then, when resting the mouse at an anchor:\n * - at 150ms, the async computation is triggered (i.e. semantic hover)\n *   - if async results already come in, they are not rendered yet.\n * - at 300ms, the sync computation is triggered (i.e. decorations, markers)\n *   - if there are sync or async results, they are rendered.\n * - at 900ms, if the async computation hasn't finished, a \"Loading...\" result is added.\n */\nexport class HoverOperation extends Disposable {\n    constructor(_editor, _computer) {\n        super();\n        this._editor = _editor;\n        this._computer = _computer;\n        this._onResult = this._register(new Emitter());\n        this.onResult = this._onResult.event;\n        this._firstWaitScheduler = this._register(new RunOnceScheduler(() => this._triggerAsyncComputation(), 0));\n        this._secondWaitScheduler = this._register(new RunOnceScheduler(() => this._triggerSyncComputation(), 0));\n        this._loadingMessageScheduler = this._register(new RunOnceScheduler(() => this._triggerLoadingMessage(), 0));\n        this._state = 0 /* HoverOperationState.Idle */;\n        this._asyncIterable = null;\n        this._asyncIterableDone = false;\n        this._result = [];\n    }\n    dispose() {\n        if (this._asyncIterable) {\n            this._asyncIterable.cancel();\n            this._asyncIterable = null;\n        }\n        super.dispose();\n    }\n    get _hoverTime() {\n        return this._editor.getOption(59 /* EditorOption.hover */).delay;\n    }\n    get _firstWaitTime() {\n        return this._hoverTime / 2;\n    }\n    get _secondWaitTime() {\n        return this._hoverTime - this._firstWaitTime;\n    }\n    get _loadingMessageTime() {\n        return 3 * this._hoverTime;\n    }\n    _setState(state, fireResult = true) {\n        this._state = state;\n        if (fireResult) {\n            this._fireResult();\n        }\n    }\n    _triggerAsyncComputation() {\n        this._setState(2 /* HoverOperationState.SecondWait */);\n        this._secondWaitScheduler.schedule(this._secondWaitTime);\n        if (this._computer.computeAsync) {\n            this._asyncIterableDone = false;\n            this._asyncIterable = createCancelableAsyncIterable(token => this._computer.computeAsync(token));\n            (() => __awaiter(this, void 0, void 0, function* () {\n                var _a, e_1, _b, _c;\n                try {\n                    try {\n                        for (var _d = true, _e = __asyncValues(this._asyncIterable), _f; _f = yield _e.next(), _a = _f.done, !_a; _d = true) {\n                            _c = _f.value;\n                            _d = false;\n                            const item = _c;\n                            if (item) {\n                                this._result.push(item);\n                                this._fireResult();\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (!_d && !_a && (_b = _e.return)) yield _b.call(_e);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                    this._asyncIterableDone = true;\n                    if (this._state === 3 /* HoverOperationState.WaitingForAsync */ || this._state === 4 /* HoverOperationState.WaitingForAsyncShowingLoading */) {\n                        this._setState(0 /* HoverOperationState.Idle */);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }))();\n        }\n        else {\n            this._asyncIterableDone = true;\n        }\n    }\n    _triggerSyncComputation() {\n        if (this._computer.computeSync) {\n            this._result = this._result.concat(this._computer.computeSync());\n        }\n        this._setState(this._asyncIterableDone ? 0 /* HoverOperationState.Idle */ : 3 /* HoverOperationState.WaitingForAsync */);\n    }\n    _triggerLoadingMessage() {\n        if (this._state === 3 /* HoverOperationState.WaitingForAsync */) {\n            this._setState(4 /* HoverOperationState.WaitingForAsyncShowingLoading */);\n        }\n    }\n    _fireResult() {\n        if (this._state === 1 /* HoverOperationState.FirstWait */ || this._state === 2 /* HoverOperationState.SecondWait */) {\n            // Do not send out results before the hover time\n            return;\n        }\n        const isComplete = (this._state === 0 /* HoverOperationState.Idle */);\n        const hasLoadingMessage = (this._state === 4 /* HoverOperationState.WaitingForAsyncShowingLoading */);\n        this._onResult.fire(new HoverResult(this._result.slice(0), isComplete, hasLoadingMessage));\n    }\n    start(mode) {\n        if (mode === 0 /* HoverStartMode.Delayed */) {\n            if (this._state === 0 /* HoverOperationState.Idle */) {\n                this._setState(1 /* HoverOperationState.FirstWait */);\n                this._firstWaitScheduler.schedule(this._firstWaitTime);\n                this._loadingMessageScheduler.schedule(this._loadingMessageTime);\n            }\n        }\n        else {\n            switch (this._state) {\n                case 0 /* HoverOperationState.Idle */:\n                    this._triggerAsyncComputation();\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n                case 2 /* HoverOperationState.SecondWait */:\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n            }\n        }\n    }\n    cancel() {\n        this._firstWaitScheduler.cancel();\n        this._secondWaitScheduler.cancel();\n        this._loadingMessageScheduler.cancel();\n        if (this._asyncIterable) {\n            this._asyncIterable.cancel();\n            this._asyncIterable = null;\n        }\n        this._result = [];\n        this._setState(0 /* HoverOperationState.Idle */, false);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class HoverRangeAnchor {\n    constructor(priority, range, initialMousePosX, initialMousePosY) {\n        this.priority = priority;\n        this.range = range;\n        this.initialMousePosX = initialMousePosX;\n        this.initialMousePosY = initialMousePosY;\n        this.type = 1 /* HoverAnchorType.Range */;\n    }\n    equals(other) {\n        return (other.type === 1 /* HoverAnchorType.Range */ && this.range.equalsRange(other.range));\n    }\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\n        return (lastAnchor.type === 1 /* HoverAnchorType.Range */ && showAtPosition.lineNumber === this.range.startLineNumber);\n    }\n}\nexport class HoverForeignElementAnchor {\n    constructor(priority, owner, range, initialMousePosX, initialMousePosY, supportsMarkerHover) {\n        this.priority = priority;\n        this.owner = owner;\n        this.range = range;\n        this.initialMousePosX = initialMousePosX;\n        this.initialMousePosY = initialMousePosY;\n        this.supportsMarkerHover = supportsMarkerHover;\n        this.type = 2 /* HoverAnchorType.ForeignElement */;\n    }\n    equals(other) {\n        return (other.type === 2 /* HoverAnchorType.ForeignElement */ && this.owner === other.owner);\n    }\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\n        return (lastAnchor.type === 2 /* HoverAnchorType.ForeignElement */ && this.owner === lastAnchor.owner);\n    }\n}\nexport const HoverParticipantRegistry = (new class HoverParticipantRegistry {\n    constructor() {\n        this._participants = [];\n    }\n    register(ctor) {\n        this._participants.push(ctor);\n    }\n    getAll() {\n        return this._participants;\n    }\n}());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { getHover } from './getHover.js';\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nconst $ = dom.$;\nexport class MarkdownHover {\n    constructor(owner, range, contents, isBeforeContent, ordinal) {\n        this.owner = owner;\n        this.range = range;\n        this.contents = contents;\n        this.isBeforeContent = isBeforeContent;\n        this.ordinal = ordinal;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nlet MarkdownHoverParticipant = class MarkdownHoverParticipant {\n    constructor(_editor, _languageService, _openerService, _configurationService, _languageFeaturesService) {\n        this._editor = _editor;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this._configurationService = _configurationService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this.hoverOrdinal = 3;\n    }\n    createLoadingMessage(anchor) {\n        return new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(nls.localize('modesContentHover.loading', \"Loading...\"))], false, 2000);\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        let index = 1000;\n        const lineLength = model.getLineLength(lineNumber);\n        const languageId = model.getLanguageIdAtPosition(anchor.range.startLineNumber, anchor.range.startColumn);\n        const stopRenderingLineAfter = this._editor.getOption(115 /* EditorOption.stopRenderingLineAfter */);\n        const maxTokenizationLineLength = this._configurationService.getValue('editor.maxTokenizationLineLength', {\n            overrideIdentifier: languageId\n        });\n        let stopRenderingMessage = false;\n        if (stopRenderingLineAfter >= 0 && lineLength > stopRenderingLineAfter && anchor.range.startColumn >= stopRenderingLineAfter) {\n            stopRenderingMessage = true;\n            result.push(new MarkdownHover(this, anchor.range, [{\n                    value: nls.localize('stopped rendering', \"Rendering paused for long line for performance reasons. This can be configured via `editor.stopRenderingLineAfter`.\")\n                }], false, index++));\n        }\n        if (!stopRenderingMessage && typeof maxTokenizationLineLength === 'number' && lineLength >= maxTokenizationLineLength) {\n            result.push(new MarkdownHover(this, anchor.range, [{\n                    value: nls.localize('too many characters', \"Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.\")\n                }], false, index++));\n        }\n        let isBeforeContent = false;\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const hoverMessage = d.options.hoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            if (d.options.beforeContentClassName) {\n                isBeforeContent = true;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkdownHover(this, range, asArray(hoverMessage), isBeforeContent, index++));\n        }\n        return result;\n    }\n    computeAsync(anchor, lineDecorations, token) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const model = this._editor.getModel();\n        if (!this._languageFeaturesService.hoverProvider.has(model)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const position = new Position(anchor.range.startLineNumber, anchor.range.startColumn);\n        return getHover(this._languageFeaturesService.hoverProvider, model, position, token)\n            .filter(item => !isEmptyMarkdownString(item.hover.contents))\n            .map(item => {\n            const rng = item.hover.range ? Range.lift(item.hover.range) : anchor.range;\n            return new MarkdownHover(this, rng, item.hover.contents, false, item.ordinal);\n        });\n    }\n    renderHoverParts(context, hoverParts) {\n        return renderMarkdownHovers(context, hoverParts, this._editor, this._languageService, this._openerService);\n    }\n};\nMarkdownHoverParticipant = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService),\n    __param(4, ILanguageFeaturesService)\n], MarkdownHoverParticipant);\nexport { MarkdownHoverParticipant };\nexport function renderMarkdownHovers(context, hoverParts, editor, languageService, openerService) {\n    // Sort hover parts to keep them stable since they might come in async, out-of-order\n    hoverParts.sort((a, b) => a.ordinal - b.ordinal);\n    const disposables = new DisposableStore();\n    for (const hoverPart of hoverParts) {\n        for (const contents of hoverPart.contents) {\n            if (isEmptyMarkdownString(contents)) {\n                continue;\n            }\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderer = disposables.add(new MarkdownRenderer({ editor }, languageService, openerService));\n            disposables.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const renderedContents = disposables.add(renderer.render(contents));\n            hoverContentsElement.appendChild(renderedContents.element);\n            context.fragment.appendChild(markdownHoverElement);\n        }\n    }\n    return disposables;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../../../common/core/selection.js';\nexport class InPlaceReplaceCommand {\n    constructor(editRange, originalSelection, text) {\n        this._editRange = editRange;\n        this._originalSelection = originalSelection;\n        this._text = text;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._editRange, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        if (!this._originalSelection.isEmpty()) {\n            // Preserve selection and extends to typed text\n            return new Selection(srcRange.endLineNumber, srcRange.endColumn - this._text.length, srcRange.endLineNumber, srcRange.endColumn);\n        }\n        return new Selection(srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn), srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createCancelablePromise, timeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { EditorState } from '../../editorState/browser/editorState.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport * as nls from '../../../../nls.js';\nimport { InPlaceReplaceCommand } from './inPlaceReplaceCommand.js';\nimport './inPlaceReplace.css';\nlet InPlaceReplaceController = class InPlaceReplaceController {\n    static get(editor) {\n        return editor.getContribution(InPlaceReplaceController.ID);\n    }\n    constructor(editor, editorWorkerService) {\n        this.editor = editor;\n        this.editorWorkerService = editorWorkerService;\n        this.decorations = this.editor.createDecorationsCollection();\n    }\n    dispose() {\n    }\n    run(source, up) {\n        var _a;\n        // cancel any pending request\n        (_a = this.currentRequest) === null || _a === void 0 ? void 0 : _a.cancel();\n        const editorSelection = this.editor.getSelection();\n        const model = this.editor.getModel();\n        if (!model || !editorSelection) {\n            return undefined;\n        }\n        let selection = editorSelection;\n        if (selection.startLineNumber !== selection.endLineNumber) {\n            // Can't accept multiline selection\n            return undefined;\n        }\n        const state = new EditorState(this.editor, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */);\n        const modelURI = model.uri;\n        if (!this.editorWorkerService.canNavigateValueSet(modelURI)) {\n            return Promise.resolve(undefined);\n        }\n        this.currentRequest = createCancelablePromise(token => this.editorWorkerService.navigateValueSet(modelURI, selection, up));\n        return this.currentRequest.then(result => {\n            var _a;\n            if (!result || !result.range || !result.value) {\n                // No proper result\n                return;\n            }\n            if (!state.validate(this.editor)) {\n                // state has changed\n                return;\n            }\n            // Selection\n            const editRange = Range.lift(result.range);\n            let highlightRange = result.range;\n            const diff = result.value.length - (selection.endColumn - selection.startColumn);\n            // highlight\n            highlightRange = {\n                startLineNumber: highlightRange.startLineNumber,\n                startColumn: highlightRange.startColumn,\n                endLineNumber: highlightRange.endLineNumber,\n                endColumn: highlightRange.startColumn + result.value.length\n            };\n            if (diff > 1) {\n                selection = new Selection(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn + diff - 1);\n            }\n            // Insert new text\n            const command = new InPlaceReplaceCommand(editRange, selection, result.value);\n            this.editor.pushUndoStop();\n            this.editor.executeCommand(source, command);\n            this.editor.pushUndoStop();\n            // add decoration\n            this.decorations.set([{\n                    range: highlightRange,\n                    options: InPlaceReplaceController.DECORATION\n                }]);\n            // remove decoration after delay\n            (_a = this.decorationRemover) === null || _a === void 0 ? void 0 : _a.cancel();\n            this.decorationRemover = timeout(350);\n            this.decorationRemover.then(() => this.decorations.clear()).catch(onUnexpectedError);\n        }).catch(onUnexpectedError);\n    }\n};\nInPlaceReplaceController.ID = 'editor.contrib.inPlaceReplaceController';\nInPlaceReplaceController.DECORATION = ModelDecorationOptions.register({\n    description: 'in-place-replace',\n    className: 'valueSetReplacement'\n});\nInPlaceReplaceController = __decorate([\n    __param(1, IEditorWorkerService)\n], InPlaceReplaceController);\nclass InPlaceReplaceUp extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.up',\n            label: nls.localize('InPlaceReplaceAction.previous.label', \"Replace with Previous Value\"),\n            alias: 'Replace with Previous Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 87 /* KeyCode.Comma */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, false);\n    }\n}\nclass InPlaceReplaceDown extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.down',\n            label: nls.localize('InPlaceReplaceAction.next.label', \"Replace with Next Value\"),\n            alias: 'Replace with Next Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 89 /* KeyCode.Period */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, true);\n    }\n}\nregisterEditorContribution(InPlaceReplaceController.ID, InPlaceReplaceController, 4 /* EditorContributionInstantiation.Lazy */);\nregisterEditorAction(InPlaceReplaceUp);\nregisterEditorAction(InPlaceReplaceDown);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function getSpaceCnt(str, tabSize) {\n    let spacesCnt = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) === '\\t') {\n            spacesCnt += tabSize;\n        }\n        else {\n            spacesCnt++;\n        }\n    }\n    return spacesCnt;\n}\nexport function generateIndent(spacesCnt, tabSize, insertSpaces) {\n    spacesCnt = spacesCnt < 0 ? 0 : spacesCnt;\n    let result = '';\n    if (!insertSpaces) {\n        const tabsCnt = Math.floor(spacesCnt / tabSize);\n        spacesCnt = spacesCnt % tabSize;\n        for (let i = 0; i < tabsCnt; i++) {\n            result += '\\t';\n        }\n    }\n    for (let i = 0; i < spacesCnt; i++) {\n        result += ' ';\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ShiftCommand } from '../../../common/commands/shiftCommand.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport * as indentUtils from './indentUtils.js';\nimport * as nls from '../../../../nls.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { normalizeIndentation } from '../../../common/core/indentation.js';\nimport { getGoodIndentForLine, getIndentMetadata } from '../../../common/languages/autoIndent.js';\nexport function getReindentEditOperations(model, languageConfigurationService, startLineNumber, endLineNumber, inheritedIndent) {\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n        // Model is empty\n        return [];\n    }\n    const indentationRules = languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).indentationRules;\n    if (!indentationRules) {\n        return [];\n    }\n    endLineNumber = Math.min(endLineNumber, model.getLineCount());\n    // Skip `unIndentedLinePattern` lines\n    while (startLineNumber <= endLineNumber) {\n        if (!indentationRules.unIndentedLinePattern) {\n            break;\n        }\n        const text = model.getLineContent(startLineNumber);\n        if (!indentationRules.unIndentedLinePattern.test(text)) {\n            break;\n        }\n        startLineNumber++;\n    }\n    if (startLineNumber > endLineNumber - 1) {\n        return [];\n    }\n    const { tabSize, indentSize, insertSpaces } = model.getOptions();\n    const shiftIndent = (indentation, count) => {\n        count = count || 1;\n        return ShiftCommand.shiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\n    };\n    const unshiftIndent = (indentation, count) => {\n        count = count || 1;\n        return ShiftCommand.unshiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\n    };\n    const indentEdits = [];\n    // indentation being passed to lines below\n    let globalIndent;\n    // Calculate indentation for the first line\n    // If there is no passed-in indentation, we use the indentation of the first line as base.\n    const currentLineText = model.getLineContent(startLineNumber);\n    let adjustedLineContent = currentLineText;\n    if (inheritedIndent !== undefined && inheritedIndent !== null) {\n        globalIndent = inheritedIndent;\n        const oldIndentation = strings.getLeadingWhitespace(currentLineText);\n        adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\n            globalIndent = unshiftIndent(globalIndent);\n            adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\n        }\n        if (currentLineText !== adjustedLineContent) {\n            indentEdits.push(EditOperation.replaceMove(new Selection(startLineNumber, 1, startLineNumber, oldIndentation.length + 1), normalizeIndentation(globalIndent, indentSize, insertSpaces)));\n        }\n    }\n    else {\n        globalIndent = strings.getLeadingWhitespace(currentLineText);\n    }\n    // idealIndentForNextLine doesn't equal globalIndent when there is a line matching `indentNextLinePattern`.\n    let idealIndentForNextLine = globalIndent;\n    if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n        globalIndent = shiftIndent(globalIndent);\n    }\n    else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n    }\n    startLineNumber++;\n    // Calculate indentation adjustment for all following lines\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        const text = model.getLineContent(lineNumber);\n        const oldIndentation = strings.getLeadingWhitespace(text);\n        const adjustedLineContent = idealIndentForNextLine + text.substring(oldIndentation.length);\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\n            idealIndentForNextLine = unshiftIndent(idealIndentForNextLine);\n            globalIndent = unshiftIndent(globalIndent);\n        }\n        if (oldIndentation !== idealIndentForNextLine) {\n            indentEdits.push(EditOperation.replaceMove(new Selection(lineNumber, 1, lineNumber, oldIndentation.length + 1), normalizeIndentation(idealIndentForNextLine, indentSize, insertSpaces)));\n        }\n        // calculate idealIndentForNextLine\n        if (indentationRules.unIndentedLinePattern && indentationRules.unIndentedLinePattern.test(text)) {\n            // In reindent phase, if the line matches `unIndentedLinePattern` we inherit indentation from above lines\n            // but don't change globalIndent and idealIndentForNextLine.\n            continue;\n        }\n        else if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\n            globalIndent = shiftIndent(globalIndent);\n            idealIndentForNextLine = globalIndent;\n        }\n        else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\n            idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n        }\n        else {\n            idealIndentForNextLine = globalIndent;\n        }\n    }\n    return indentEdits;\n}\nexport class IndentationToSpacesAction extends EditorAction {\n    constructor() {\n        super({\n            id: IndentationToSpacesAction.ID,\n            label: nls.localize('indentationToSpaces', \"Convert Indentation to Spaces\"),\n            alias: 'Convert Indentation to Spaces',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const modelOpts = model.getOptions();\n        const selection = editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        const command = new IndentationToSpacesCommand(selection, modelOpts.tabSize);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n        model.updateOptions({\n            insertSpaces: true\n        });\n    }\n}\nIndentationToSpacesAction.ID = 'editor.action.indentationToSpaces';\nexport class IndentationToTabsAction extends EditorAction {\n    constructor() {\n        super({\n            id: IndentationToTabsAction.ID,\n            label: nls.localize('indentationToTabs', \"Convert Indentation to Tabs\"),\n            alias: 'Convert Indentation to Tabs',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const modelOpts = model.getOptions();\n        const selection = editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        const command = new IndentationToTabsCommand(selection, modelOpts.tabSize);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n        model.updateOptions({\n            insertSpaces: false\n        });\n    }\n}\nIndentationToTabsAction.ID = 'editor.action.indentationToTabs';\nexport class ChangeIndentationSizeAction extends EditorAction {\n    constructor(insertSpaces, displaySizeOnly, opts) {\n        super(opts);\n        this.insertSpaces = insertSpaces;\n        this.displaySizeOnly = displaySizeOnly;\n    }\n    run(accessor, editor) {\n        const quickInputService = accessor.get(IQuickInputService);\n        const modelService = accessor.get(IModelService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n        const modelOpts = model.getOptions();\n        const picks = [1, 2, 3, 4, 5, 6, 7, 8].map(n => ({\n            id: n.toString(),\n            label: n.toString(),\n            // add description for tabSize value set in the configuration\n            description: (n === creationOpts.tabSize && n === modelOpts.tabSize\n                ? nls.localize('configuredTabSize', \"Configured Tab Size\")\n                : n === creationOpts.tabSize\n                    ? nls.localize('defaultTabSize', \"Default Tab Size\")\n                    : n === modelOpts.tabSize\n                        ? nls.localize('currentTabSize', \"Current Tab Size\")\n                        : undefined)\n        }));\n        // auto focus the tabSize set for the current editor\n        const autoFocusIndex = Math.min(model.getOptions().tabSize - 1, 7);\n        setTimeout(() => {\n            quickInputService.pick(picks, { placeHolder: nls.localize({ key: 'selectTabWidth', comment: ['Tab corresponds to the tab key'] }, \"Select Tab Size for Current File\"), activeItem: picks[autoFocusIndex] }).then(pick => {\n                if (pick) {\n                    if (model && !model.isDisposed()) {\n                        const pickedVal = parseInt(pick.label, 10);\n                        if (this.displaySizeOnly) {\n                            model.updateOptions({\n                                tabSize: pickedVal\n                            });\n                        }\n                        else {\n                            model.updateOptions({\n                                tabSize: pickedVal,\n                                indentSize: pickedVal,\n                                insertSpaces: this.insertSpaces\n                            });\n                        }\n                    }\n                }\n            });\n        }, 50 /* quick input is sensitive to being opened so soon after another */);\n    }\n}\nexport class IndentUsingTabs extends ChangeIndentationSizeAction {\n    constructor() {\n        super(false, false, {\n            id: IndentUsingTabs.ID,\n            label: nls.localize('indentUsingTabs', \"Indent Using Tabs\"),\n            alias: 'Indent Using Tabs',\n            precondition: undefined\n        });\n    }\n}\nIndentUsingTabs.ID = 'editor.action.indentUsingTabs';\nexport class IndentUsingSpaces extends ChangeIndentationSizeAction {\n    constructor() {\n        super(true, false, {\n            id: IndentUsingSpaces.ID,\n            label: nls.localize('indentUsingSpaces', \"Indent Using Spaces\"),\n            alias: 'Indent Using Spaces',\n            precondition: undefined\n        });\n    }\n}\nIndentUsingSpaces.ID = 'editor.action.indentUsingSpaces';\nexport class ChangeTabDisplaySize extends ChangeIndentationSizeAction {\n    constructor() {\n        super(true, true, {\n            id: ChangeTabDisplaySize.ID,\n            label: nls.localize('changeTabDisplaySize', \"Change Tab Display Size\"),\n            alias: 'Change Tab Display Size',\n            precondition: undefined\n        });\n    }\n}\nChangeTabDisplaySize.ID = 'editor.action.changeTabDisplaySize';\nexport class DetectIndentation extends EditorAction {\n    constructor() {\n        super({\n            id: DetectIndentation.ID,\n            label: nls.localize('detectIndentation', \"Detect Indentation from Content\"),\n            alias: 'Detect Indentation from Content',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const modelService = accessor.get(IModelService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n        model.detectIndentation(creationOpts.insertSpaces, creationOpts.tabSize);\n    }\n}\nDetectIndentation.ID = 'editor.action.detectIndentation';\nexport class ReindentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.reindentlines',\n            label: nls.localize('editor.reindentlines', \"Reindent Lines\"),\n            alias: 'Reindent Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const edits = getReindentEditOperations(model, languageConfigurationService, 1, model.getLineCount());\n        if (edits.length > 0) {\n            editor.pushUndoStop();\n            editor.executeEdits(this.id, edits);\n            editor.pushUndoStop();\n        }\n    }\n}\nexport class ReindentSelectedLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.reindentselectedlines',\n            label: nls.localize('editor.reindentselectedlines', \"Reindent Selected Lines\"),\n            alias: 'Reindent Selected Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const edits = [];\n        for (const selection of selections) {\n            let startLineNumber = selection.startLineNumber;\n            let endLineNumber = selection.endLineNumber;\n            if (startLineNumber !== endLineNumber && selection.endColumn === 1) {\n                endLineNumber--;\n            }\n            if (startLineNumber === 1) {\n                if (startLineNumber === endLineNumber) {\n                    continue;\n                }\n            }\n            else {\n                startLineNumber--;\n            }\n            const editOperations = getReindentEditOperations(model, languageConfigurationService, startLineNumber, endLineNumber);\n            edits.push(...editOperations);\n        }\n        if (edits.length > 0) {\n            editor.pushUndoStop();\n            editor.executeEdits(this.id, edits);\n            editor.pushUndoStop();\n        }\n    }\n}\nexport class AutoIndentOnPasteCommand {\n    constructor(edits, initialSelection) {\n        this._initialSelection = initialSelection;\n        this._edits = [];\n        this._selectionId = null;\n        for (const edit of edits) {\n            if (edit.range && typeof edit.text === 'string') {\n                this._edits.push(edit);\n            }\n        }\n    }\n    getEditOperations(model, builder) {\n        for (const edit of this._edits) {\n            builder.addEditOperation(Range.lift(edit.range), edit.text);\n        }\n        let selectionIsSet = false;\n        if (Array.isArray(this._edits) && this._edits.length === 1 && this._initialSelection.isEmpty()) {\n            if (this._edits[0].range.startColumn === this._initialSelection.endColumn &&\n                this._edits[0].range.startLineNumber === this._initialSelection.endLineNumber) {\n                selectionIsSet = true;\n                this._selectionId = builder.trackSelection(this._initialSelection, true);\n            }\n            else if (this._edits[0].range.endColumn === this._initialSelection.startColumn &&\n                this._edits[0].range.endLineNumber === this._initialSelection.startLineNumber) {\n                selectionIsSet = true;\n                this._selectionId = builder.trackSelection(this._initialSelection, false);\n            }\n        }\n        if (!selectionIsSet) {\n            this._selectionId = builder.trackSelection(this._initialSelection);\n        }\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._selectionId);\n    }\n}\nlet AutoIndentOnPaste = class AutoIndentOnPaste {\n    constructor(editor, _languageConfigurationService) {\n        this.editor = editor;\n        this._languageConfigurationService = _languageConfigurationService;\n        this.callOnDispose = new DisposableStore();\n        this.callOnModel = new DisposableStore();\n        this.callOnDispose.add(editor.onDidChangeConfiguration(() => this.update()));\n        this.callOnDispose.add(editor.onDidChangeModel(() => this.update()));\n        this.callOnDispose.add(editor.onDidChangeModelLanguage(() => this.update()));\n    }\n    update() {\n        // clean up\n        this.callOnModel.clear();\n        // we are disabled\n        if (this.editor.getOption(11 /* EditorOption.autoIndent */) < 4 /* EditorAutoIndentStrategy.Full */ || this.editor.getOption(54 /* EditorOption.formatOnPaste */)) {\n            return;\n        }\n        // no model\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        this.callOnModel.add(this.editor.onDidPaste(({ range }) => {\n            this.trigger(range);\n        }));\n    }\n    trigger(range) {\n        const selections = this.editor.getSelections();\n        if (selections === null || selections.length > 1) {\n            return;\n        }\n        const model = this.editor.getModel();\n        if (!model) {\n            return;\n        }\n        if (!model.tokenization.isCheapToTokenize(range.getStartPosition().lineNumber)) {\n            return;\n        }\n        const autoIndent = this.editor.getOption(11 /* EditorOption.autoIndent */);\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\n        const textEdits = [];\n        const indentConverter = {\n            shiftIndent: (indentation) => {\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            },\n            unshiftIndent: (indentation) => {\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            }\n        };\n        let startLineNumber = range.startLineNumber;\n        while (startLineNumber <= range.endLineNumber) {\n            if (this.shouldIgnoreLine(model, startLineNumber)) {\n                startLineNumber++;\n                continue;\n            }\n            break;\n        }\n        if (startLineNumber > range.endLineNumber) {\n            return;\n        }\n        let firstLineText = model.getLineContent(startLineNumber);\n        if (!/\\S/.test(firstLineText.substring(0, range.startColumn - 1))) {\n            const indentOfFirstLine = getGoodIndentForLine(autoIndent, model, model.getLanguageId(), startLineNumber, indentConverter, this._languageConfigurationService);\n            if (indentOfFirstLine !== null) {\n                const oldIndentation = strings.getLeadingWhitespace(firstLineText);\n                const newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\n                const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                if (newSpaceCnt !== oldSpaceCnt) {\n                    const newIndent = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                    textEdits.push({\n                        range: new Range(startLineNumber, 1, startLineNumber, oldIndentation.length + 1),\n                        text: newIndent\n                    });\n                    firstLineText = newIndent + firstLineText.substr(oldIndentation.length);\n                }\n                else {\n                    const indentMetadata = getIndentMetadata(model, startLineNumber, this._languageConfigurationService);\n                    if (indentMetadata === 0 || indentMetadata === 8 /* IndentConsts.UNINDENT_MASK */) {\n                        // we paste content into a line where only contains whitespaces\n                        // after pasting, the indentation of the first line is already correct\n                        // the first line doesn't match any indentation rule\n                        // then no-op.\n                        return;\n                    }\n                }\n            }\n        }\n        const firstLineNumber = startLineNumber;\n        // ignore empty or ignored lines\n        while (startLineNumber < range.endLineNumber) {\n            if (!/\\S/.test(model.getLineContent(startLineNumber + 1))) {\n                startLineNumber++;\n                continue;\n            }\n            break;\n        }\n        if (startLineNumber !== range.endLineNumber) {\n            const virtualModel = {\n                tokenization: {\n                    getLineTokens: (lineNumber) => {\n                        return model.tokenization.getLineTokens(lineNumber);\n                    },\n                    getLanguageId: () => {\n                        return model.getLanguageId();\n                    },\n                    getLanguageIdAtPosition: (lineNumber, column) => {\n                        return model.getLanguageIdAtPosition(lineNumber, column);\n                    },\n                },\n                getLineContent: (lineNumber) => {\n                    if (lineNumber === firstLineNumber) {\n                        return firstLineText;\n                    }\n                    else {\n                        return model.getLineContent(lineNumber);\n                    }\n                }\n            };\n            const indentOfSecondLine = getGoodIndentForLine(autoIndent, virtualModel, model.getLanguageId(), startLineNumber + 1, indentConverter, this._languageConfigurationService);\n            if (indentOfSecondLine !== null) {\n                const newSpaceCntOfSecondLine = indentUtils.getSpaceCnt(indentOfSecondLine, tabSize);\n                const oldSpaceCntOfSecondLine = indentUtils.getSpaceCnt(strings.getLeadingWhitespace(model.getLineContent(startLineNumber + 1)), tabSize);\n                if (newSpaceCntOfSecondLine !== oldSpaceCntOfSecondLine) {\n                    const spaceCntOffset = newSpaceCntOfSecondLine - oldSpaceCntOfSecondLine;\n                    for (let i = startLineNumber + 1; i <= range.endLineNumber; i++) {\n                        const lineContent = model.getLineContent(i);\n                        const originalIndent = strings.getLeadingWhitespace(lineContent);\n                        const originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\n                        const newSpacesCnt = originalSpacesCnt + spaceCntOffset;\n                        const newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\n                        if (newIndent !== originalIndent) {\n                            textEdits.push({\n                                range: new Range(i, 1, i, originalIndent.length + 1),\n                                text: newIndent\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        if (textEdits.length > 0) {\n            this.editor.pushUndoStop();\n            const cmd = new AutoIndentOnPasteCommand(textEdits, this.editor.getSelection());\n            this.editor.executeCommand('autoIndentOnPaste', cmd);\n            this.editor.pushUndoStop();\n        }\n    }\n    shouldIgnoreLine(model, lineNumber) {\n        model.tokenization.forceTokenization(lineNumber);\n        const nonWhitespaceColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        if (nonWhitespaceColumn === 0) {\n            return true;\n        }\n        const tokens = model.tokenization.getLineTokens(lineNumber);\n        if (tokens.getCount() > 0) {\n            const firstNonWhitespaceTokenIndex = tokens.findTokenIndexAtOffset(nonWhitespaceColumn);\n            if (firstNonWhitespaceTokenIndex >= 0 && tokens.getStandardTokenType(firstNonWhitespaceTokenIndex) === 1 /* StandardTokenType.Comment */) {\n                return true;\n            }\n        }\n        return false;\n    }\n    dispose() {\n        this.callOnDispose.dispose();\n        this.callOnModel.dispose();\n    }\n};\nAutoIndentOnPaste.ID = 'editor.contrib.autoIndentOnPaste';\nAutoIndentOnPaste = __decorate([\n    __param(1, ILanguageConfigurationService)\n], AutoIndentOnPaste);\nexport { AutoIndentOnPaste };\nfunction getIndentationEditOperations(model, builder, tabSize, tabsToSpaces) {\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n        // Model is empty\n        return;\n    }\n    let spaces = '';\n    for (let i = 0; i < tabSize; i++) {\n        spaces += ' ';\n    }\n    const spacesRegExp = new RegExp(spaces, 'gi');\n    for (let lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++) {\n        let lastIndentationColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        if (lastIndentationColumn === 0) {\n            lastIndentationColumn = model.getLineMaxColumn(lineNumber);\n        }\n        if (lastIndentationColumn === 1) {\n            continue;\n        }\n        const originalIndentationRange = new Range(lineNumber, 1, lineNumber, lastIndentationColumn);\n        const originalIndentation = model.getValueInRange(originalIndentationRange);\n        const newIndentation = (tabsToSpaces\n            ? originalIndentation.replace(/\\t/ig, spaces)\n            : originalIndentation.replace(spacesRegExp, '\\t'));\n        builder.addEditOperation(originalIndentationRange, newIndentation);\n    }\n}\nexport class IndentationToSpacesCommand {\n    constructor(selection, tabSize) {\n        this.selection = selection;\n        this.tabSize = tabSize;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        this.selectionId = builder.trackSelection(this.selection);\n        getIndentationEditOperations(model, builder, this.tabSize, true);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n}\nexport class IndentationToTabsCommand {\n    constructor(selection, tabSize) {\n        this.selection = selection;\n        this.tabSize = tabSize;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        this.selectionId = builder.trackSelection(this.selection);\n        getIndentationEditOperations(model, builder, this.tabSize, false);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n}\nregisterEditorContribution(AutoIndentOnPaste.ID, AutoIndentOnPaste, 2 /* EditorContributionInstantiation.BeforeFirstInteraction */);\nregisterEditorAction(IndentationToSpacesAction);\nregisterEditorAction(IndentationToTabsAction);\nregisterEditorAction(IndentUsingTabs);\nregisterEditorAction(IndentUsingSpaces);\nregisterEditorAction(ChangeTabDisplaySize);\nregisterEditorAction(DetectIndentation);\nregisterEditorAction(ReindentLinesAction);\nregisterEditorAction(ReindentSelectedLinesAction);\n"],"names":["ResizableContentWidget","_Disposable","_inherits","_super","_createSuper","_editor","_this","minimumSize","arguments","length","undefined","dom","Dimension","_classCallCheck","call","allowEditorOverflow","suppressMouseDown","_resizableNode","_register","ResizableHTMLElement","_contentPosition","_isResizing","domNode","style","position","minSize","lift","layout","height","width","enableSashes","onDidResize","e","_resize","dimension","done","onDidWillResize","_createClass","key","get","this","value","_a","Position","editorDomNode","getDomNode","mouseBox","getScrolledVisiblePosition","getDomNodePagePosition","top","editorBox","bodyBox","getClientArea","document","body","mouseBottom","widgetHeight","showAtPosition","_b","renderingAbove","maxHeightBelow","Math","min","_availableVerticalSpaceBelow","Infinity","maxHeightAbove","_availableVerticalSpaceAbove","maxHeight","max","getOption","above","Disposable","__decorate","decorators","target","desc","d","c","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","$","ContentHoverController","_instantiationService","_keybindingService","_currentResult","minimumHeight","minimumWidth","_widget","createInstance","ContentHoverWidget","_participants","_step","_iterator","_createForOfIteratorHelper","HoverParticipantRegistry","getAll","s","n","participant","push","err","f","sort","p1","p2","hoverOrdinal","_computer","ContentHoverComputer","_hoverOperation","HoverOperation","onResult","result","anchor","messages","hasLoadingMessage","_addLoadingMessage","_withResult","HoverResult","isComplete","addStandardDisposableListener","equals","hide","TokenizationRegistry","onDidChange","_setCurrentResult","mouseEvent","isResizing","_step2","anchorCandidates","_iterator2","suggestHoverAnchor","type","HoverRangeAnchor","range","event","posx","posy","epsilon","typicalHalfwidthCharacterWidth","detail","isAfterLines","horizontalDistanceToText","_startShowingOrUpdateHover","a","b","priority","mode","source","focus","sticky","isMouseGettingCloser","_startHoverOperationIfNecessary","canAdoptVisibleHover","filter","insistOnKeepingHoverVisible","cancel","shouldFocus","start","hoverResult","_renderMessages","isColorPickerVisible","isVisibleFromKeyboard","isVisible","isFocused","node","contains","_step3","_iterator3","createLoadingMessage","loadingMessage","slice","concat","_step4","_this2","_ContentHoverControll","computeHoverRanges","showAtSecondaryPosition","highlightRange","disposables","DisposableStore","statusBar","add","EditorHoverStatusBar","fragment","createDocumentFragment","colorPicker","context","setColorPicker","widget","onContentsChanged","setMinimumDimensions","dimensions","_iterator4","_loop","hoverParts","msg","owner","renderHoverParts","isBeforeContent","some","m","hasContent","appendChild","hoverElement","hasChildNodes","highlightDecoration","createDecorationsCollection","set","options","_DECORATION_OPTIONS","toDisposable","clear","showAt","ContentHoverVisibleData","initialMousePosX","initialMousePosY","dispose","scrollUp","scrollDown","scrollLeft","scrollRight","pageUp","pageDown","goToTop","goToBottom","editor","anchorRange","startColumnBoundary","hasModel","viewModel","_getViewModel","coordinatesConverter","anchorViewRange","convertModelRangeToViewRange","anchorViewRangeStart","startLineNumber","getLineMinColumn","convertViewPositionToModelPosition","column","_step5","anchorLineNumber","renderStartColumn","startColumn","forceShowAtRange","_iterator5","Range","plusRange","endLineNumber","getStartPosition","ModelDecorationOptions","register","description","className","IInstantiationService","IKeybindingService","filteredMessages","isValidForHoverAnchor","FilteredHoverResult","_HoverResult","_super2","original","_this3","preferAbove","stoleFocus","closestMouseDistance","_ResizableContentWidg","_super3","contextKeyService","_this4","_hover","HoverWidget","_hoverVisibleKey","EditorContextKeys","hoverVisible","bindTo","_hoverFocusedKey","hoverFocused","append","containerDomNode","zIndex","onDidLayoutChange","_layout","onDidChangeConfiguration","hasChanged","_updateFont","focusTracker","trackFocus","onDidFocus","onDidBlur","_setHoverData","addContentWidget","_assertThisInitialized","Boolean","_visibleData","_get","_getPrototypeOf","prototype","removeContentWidget","ID","contentsDomNode","_applyDimensions","_setContentsDomNodeDimensions","_setContainerDomNodeDimensions","_layoutContentWidget","_applyMaxDimensions","setProperty","scrollDimensions","scrollbar","getScrollDimensions","scrollWidth","extraBottomPadding","horizontalScrollbarSize","paddingBottom","size","_setHoverWidgetMaxDimensions","_setHoverWidgetDimensions","_hasHorizontalScrollbar","_adjustContentsBottomPadding","maxRenderingWidth","_findMaximumRenderingWidth","maxRenderingHeight","_findMaximumRenderingHeight","maxSize","_lastDimensions","_setAdjustedHoverWidgetDimensions","_setResizableNodeMaxDimensions","scanDomNode","layoutContentWidget","_positionPreference","availableSpace","_findAvailableSpaceVertically","maximumHeight","Array","from","children","forEach","hoverPart","clientHeight","widgetRect","computeDistanceFromPointToRectangle","left","distance","hoverData","classList","toggle","_this$_editor$getOpti","fontSize","lineHeight","_updateMaxDimensions","_this5","getElementsByClassName","applyFontInfo","textContent","getLayoutInfo","_updateContent","render","secondaryPosition","positionAffinity","preference","_render","getTotalHeight","widgetPosition","_findPositionPreference","clearSashHoverState","layoutInfo","getTotalWidth","_removeConstraintsRenderNormally","_adjustHoverHeightForScrollbar","scrollTop","getScrollPosition","fontInfo","setScrollPosition","scrollHeight","container","transformedWidth","transformedHeight","maxWidth","IContextKeyService","_Disposable2","_super4","_this6","_hasContent","actionsElement","actionOptions","keybinding","lookupKeybinding","commandId","keybindingLabel","getLabel","HoverAction","element","_anchor","_shouldFocus","_source","_insistOnKeepingHoverVisible","token","AsyncIterableObject","EMPTY","lineDecorations","_getLineDecorations","merge","map","computeAsync","_step6","_iterator6","computeSync","coalesce","supportsMarkerHover","model","getModel","lineNumber","getLineCount","maxColumn","getLineMaxColumn","getLineDecorations","isWholeLine","endColumn","showIfCollapsed","pointX","pointY","x","y","dx","abs","dy","sqrt","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","then","apply","HoverProviderResult","provider","hover","ordinal","getHover","registry","promises","ordered","index","_regeneratorRuntime","mark","_callee","wrap","_context","prev","provideHover","sent","isValid","abrupt","t0","onUnexpectedExternalError","stop","executeProvider","fromPromises","hasRange","hasHtmlContent","contents","registerModelAndPositionCommand","accessor","item","toPromise","getHoverPromise","ILanguageFeaturesService","hoverProvider","CancellationToken","None","MarginHoverWidget","languageService","openerService","_renderDisposeables","_isVisible","_messages","_markdownRenderer","MarkdownRenderer","MarginHoverComputer","onDidChangeModelDecorations","_onModelDecorationsChanged","addOverlayWidget","removeOverlayWidget","markdownHoverElement","hoverContentsElement","renderedContents","_updateContents","_showAt","editorLayout","topForLineNumber","getTopForLineNumber","editorScrollTop","getScrollTop","glyphMarginLeft","glyphMarginWidth","round","_lineNumber","toHoverMessage","glyphMarginClassName","hoverMessage","glyphMarginHoverMessage","isEmptyMarkdownString","_toConsumableArray","asArray","MarkerHover","marker","markerCodeActionTrigger","include","CodeActionKind","QuickFix","triggerAction","CodeActionTriggerSource","QuickFixHover","MarkerHoverParticipant","_markerDecorationsService","_openerService","_languageFeaturesService","recentMarkerCodeActionsInfo","getMarker","uri","renderMarkerHover","markerHoverForStatusbar","MarkerSeverity","compare","severity","renderMarkerStatusbar","markerHover","markerElement","_markerHover$marker","message","code","relatedInformation","messageElement","whiteSpace","innerText","sourceAndCodeElement","codeLink","setAttribute","toString","addDisposableListener","open","allowCommands","preventDefault","stopPropagation","detailsElement","opacity","paddingLeft","isNonEmptyArray","_step2$value","resource","relatedInfoContainer","marginTop","basename","cursor","fromUserGesture","editorOptions","selection","catch","onUnexpectedError","Error","Warning","Info","addAction","label","nls","NextMarkerAction","run","MarkerController","showAtMarker","quickfixPlaceholderElement","IMarkerData","makeKey","hasCodeActions","updatePlaceholderDisposable","disposableTimeout","String","fromCharCode","codeActionsPromise","getCodeActions","actions","validActions","display","showing","quickFixCommandId","controller","CodeActionController","elementPosition","showCodeActions","createCancelablePromise","cancellationToken","codeActionProvider","Progress","IMarkerDecorationsService","IOpenerService","_sticky","ModesHoverController","_languageService","_toUnhook","_hoverActivatedByColorDecoratorClick","_isMouseDown","_hoverClicked","_contentWidget","_glyphWidget","_hookEvents","_didChangeConfigurationHandler","_unhookEvents","hoverOpts","_isHoverEnabled","enabled","_isHoverSticky","onMouseDown","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onMouseMove","_onEditorMouseMove","onKeyDown","_onKeyDown","onMouseLeave","_onEditorMouseLeave","onDidChangeModel","_hideWidgets","onDidScrollChange","_onEditorScrollChanged","scrollTopChanged","scrollLeftChanged","targetEm","browserEvent","relatedTarget","containsNode","_c","_d","_e","_f","_g","_h","_j","_k","_l","view","activeElement","getSelection","isCollapsed","mouseOnDecorator","decoratorActivatedOn","_getOrCreateContentWidget","maybeShowAt","startShowingAt","resolvedKeyboardEvent","softDispatch","mightTriggerFocus","kind","keyCode","InlineSuggestionHintsContentWidget","dropDownVisible","activatedByColorDecoratorClick","startShowingAtRange","getContribution","ILanguageService","ShowOrFocusHoverAction","_EditorAction","id","comment","args","name","schema","properties","default","alias","precondition","kbOpts","kbExpr","editorTextFocus","primary","KeyChord","weight","configurationService","IConfigurationService","accessibilityService","IAccessibilityService","keybindingService","getPosition","isHoverVisible","showContentHover","getValue","isScreenReaderOptimized","getAriaLabel","hint","status","EditorAction","ShowDefinitionPreviewHoverAction","_EditorAction2","goto","GotoDefinitionAtPositionEditorContribution","startFindDefinitionFromCursor","ScrollUpHoverAction","_EditorAction3","ScrollDownHoverAction","_EditorAction4","ScrollLeftHoverAction","_EditorAction5","_super5","ScrollRightHoverAction","_EditorAction6","_super6","PageUpHoverAction","_EditorAction7","_super7","secondary","PageDownHoverAction","_EditorAction8","_super8","GoToTopHoverAction","_EditorAction9","_super9","GoToBottomHoverAction","_EditorAction10","_super10","registerEditorContribution","registerEditorAction","MarkdownHoverParticipant","registerThemingParticipant","theme","collector","hoverBorder","getColor","editorHoverBorder","addRule","transparent","__asyncValues","o","Symbol","asyncIterator","TypeError","__values","iterator","verb","v","settle","_onResult","Emitter","_firstWaitScheduler","RunOnceScheduler","_triggerAsyncComputation","_secondWaitScheduler","_triggerSyncComputation","_loadingMessageScheduler","_triggerLoadingMessage","_state","_asyncIterable","_asyncIterableDone","_result","delay","_hoverTime","_firstWaitTime","state","fireResult","_fireResult","_setState","schedule","_secondWaitTime","createCancelableAsyncIterable","e_1","error","return","finish","t1","fire","_loadingMessageTime","other","equalsRange","lastAnchor","HoverForeignElementAnchor","ctor","MarkdownHover","_configurationService","MarkdownString","appendText","lineLength","getLineLength","languageId","getLanguageIdAtPosition","stopRenderingLineAfter","maxTokenizationLineLength","overrideIdentifier","stopRenderingMessage","beforeContentClassName","has","rng","renderMarkdownHovers","renderer","onDidRenderAsync","InPlaceReplaceCommand","editRange","originalSelection","text","_editRange","_originalSelection","_text","builder","addTrackedEditOperation","helper","srcRange","getInverseEditOperations","isEmpty","Selection","positionColumn","InPlaceReplaceController","editorWorkerService","decorations","up","currentRequest","editorSelection","EditorState","modelURI","canNavigateValueSet","navigateValueSet","validate","diff","command","pushUndoStop","executeCommand","DECORATION","decorationRemover","timeout","IEditorWorkerService","InPlaceReplaceUp","writable","InPlaceReplaceDown","getSpaceCnt","str","tabSize","spacesCnt","charAt","generateIndent","insertSpaces","tabsCnt","floor","getReindentEditOperations","languageConfigurationService","inheritedIndent","indentationRules","getLanguageConfiguration","getLanguageId","unIndentedLinePattern","getLineContent","test","globalIndent","_model$getOptions","getOptions","indentSize","shiftIndent","indentation","count","ShiftCommand","unshiftIndent","indentEdits","currentLineText","adjustedLineContent","oldIndentation","strings","substring","decreaseIndentPattern","EditOperation","replaceMove","normalizeIndentation","idealIndentForNextLine","increaseIndentPattern","indentNextLinePattern","IndentationToSpacesAction","modelOpts","IndentationToSpacesCommand","executeCommands","updateOptions","IndentationToTabsAction","IndentationToTabsCommand","ChangeIndentationSizeAction","displaySizeOnly","opts","quickInputService","IQuickInputService","modelService","IModelService","creationOpts","getCreationOptions","isForSimpleWidget","picks","autoFocusIndex","setTimeout","pick","placeHolder","activeItem","isDisposed","pickedVal","parseInt","IndentUsingTabs","_ChangeIndentationSiz","IndentUsingSpaces","_ChangeIndentationSiz2","ChangeTabDisplaySize","_ChangeIndentationSiz3","DetectIndentation","detectIndentation","ReindentLinesAction","ILanguageConfigurationService","edits","executeEdits","ReindentSelectedLinesAction","selections","getSelections","editOperations","AutoIndentOnPasteCommand","initialSelection","_initialSelection","_edits","_selectionId","edit","addEditOperation","selectionIsSet","isArray","trackSelection","getTrackedSelection","AutoIndentOnPaste","_languageConfigurationService","callOnDispose","callOnModel","update","onDidChangeModelLanguage","onDidPaste","_ref","trigger","tokenization","isCheapToTokenize","autoIndent","_model$getOptions2","textEdits","indentConverter","shouldIgnoreLine","firstLineText","indentOfFirstLine","getGoodIndentForLine","newSpaceCnt","indentUtils","newIndent","substr","indentMetadata","getIndentMetadata","firstLineNumber","virtualModel","getLineTokens","indentOfSecondLine","newSpaceCntOfSecondLine","oldSpaceCntOfSecondLine","spaceCntOffset","lineContent","originalIndent","newSpacesCnt","cmd","forceTokenization","nonWhitespaceColumn","getLineFirstNonWhitespaceColumn","tokens","getCount","firstNonWhitespaceTokenIndex","findTokenIndexAtOffset","getStandardTokenType","getIndentationEditOperations","tabsToSpaces","spaces","spacesRegExp","RegExp","lineCount","lastIndentationColumn","originalIndentationRange","originalIndentation","getValueInRange","newIndentation","replace","selectionId"],"sourceRoot":""}