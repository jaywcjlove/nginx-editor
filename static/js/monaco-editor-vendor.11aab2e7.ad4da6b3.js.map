{"version":3,"file":"static/js/monaco-editor-vendor.11aab2e7.ad4da6b3.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/browser/config/domFontInfo.js","../node_modules/monaco-editor/esm/vs/editor/browser/config/migrateOptions.js","../node_modules/monaco-editor/esm/vs/editor/browser/config/editorConfiguration.js","../node_modules/monaco-editor/esm/vs/editor/browser/config/elementSizeObserver.js","../node_modules/monaco-editor/esm/vs/editor/browser/config/charWidthReader.js","../node_modules/monaco-editor/esm/vs/editor/browser/config/fontMeasurements.js","../node_modules/monaco-editor/esm/vs/editor/browser/config/tabFocus.js","../node_modules/monaco-editor/esm/vs/editor/browser/controller/mouseTarget.js","../node_modules/monaco-editor/esm/vs/editor/browser/controller/mouseHandler.js","../node_modules/monaco-editor/esm/vs/editor/browser/controller/pointerHandler.js","../node_modules/monaco-editor/esm/vs/editor/browser/controller/textAreaHandler.js","../node_modules/monaco-editor/esm/vs/editor/browser/controller/textAreaInput.js","../node_modules/monaco-editor/esm/vs/editor/browser/controller/textAreaState.js","../node_modules/monaco-editor/esm/vs/editor/browser/coreCommands.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { FastDomNode } from '../../../base/browser/fastDomNode.js';\nexport function applyFontInfo(domNode, fontInfo) {\n    if (domNode instanceof FastDomNode) {\n        domNode.setFontFamily(fontInfo.getMassagedFontFamily());\n        domNode.setFontWeight(fontInfo.fontWeight);\n        domNode.setFontSize(fontInfo.fontSize);\n        domNode.setFontFeatureSettings(fontInfo.fontFeatureSettings);\n        domNode.setFontVariationSettings(fontInfo.fontVariationSettings);\n        domNode.setLineHeight(fontInfo.lineHeight);\n        domNode.setLetterSpacing(fontInfo.letterSpacing);\n    }\n    else {\n        domNode.style.fontFamily = fontInfo.getMassagedFontFamily();\n        domNode.style.fontWeight = fontInfo.fontWeight;\n        domNode.style.fontSize = fontInfo.fontSize + 'px';\n        domNode.style.fontFeatureSettings = fontInfo.fontFeatureSettings;\n        domNode.style.fontVariationSettings = fontInfo.fontVariationSettings;\n        domNode.style.lineHeight = fontInfo.lineHeight + 'px';\n        domNode.style.letterSpacing = fontInfo.letterSpacing + 'px';\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class EditorSettingMigration {\n    constructor(key, migrate) {\n        this.key = key;\n        this.migrate = migrate;\n    }\n    apply(options) {\n        const value = EditorSettingMigration._read(options, this.key);\n        const read = (key) => EditorSettingMigration._read(options, key);\n        const write = (key, value) => EditorSettingMigration._write(options, key, value);\n        this.migrate(value, read, write);\n    }\n    static _read(source, key) {\n        if (typeof source === 'undefined') {\n            return undefined;\n        }\n        const firstDotIndex = key.indexOf('.');\n        if (firstDotIndex >= 0) {\n            const firstSegment = key.substring(0, firstDotIndex);\n            return this._read(source[firstSegment], key.substring(firstDotIndex + 1));\n        }\n        return source[key];\n    }\n    static _write(target, key, value) {\n        const firstDotIndex = key.indexOf('.');\n        if (firstDotIndex >= 0) {\n            const firstSegment = key.substring(0, firstDotIndex);\n            target[firstSegment] = target[firstSegment] || {};\n            this._write(target[firstSegment], key.substring(firstDotIndex + 1), value);\n            return;\n        }\n        target[key] = value;\n    }\n}\nEditorSettingMigration.items = [];\nfunction registerEditorSettingMigration(key, migrate) {\n    EditorSettingMigration.items.push(new EditorSettingMigration(key, migrate));\n}\nfunction registerSimpleEditorSettingMigration(key, values) {\n    registerEditorSettingMigration(key, (value, read, write) => {\n        if (typeof value !== 'undefined') {\n            for (const [oldValue, newValue] of values) {\n                if (value === oldValue) {\n                    write(key, newValue);\n                    return;\n                }\n            }\n        }\n    });\n}\n/**\n * Compatibility with old options\n */\nexport function migrateOptions(options) {\n    EditorSettingMigration.items.forEach(migration => migration.apply(options));\n}\nregisterSimpleEditorSettingMigration('wordWrap', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('lineNumbers', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('cursorBlinking', [['visible', 'solid']]);\nregisterSimpleEditorSettingMigration('renderWhitespace', [[true, 'boundary'], [false, 'none']]);\nregisterSimpleEditorSettingMigration('renderLineHighlight', [[true, 'line'], [false, 'none']]);\nregisterSimpleEditorSettingMigration('acceptSuggestionOnEnter', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('tabCompletion', [[false, 'off'], [true, 'onlySnippets']]);\nregisterSimpleEditorSettingMigration('hover', [[true, { enabled: true }], [false, { enabled: false }]]);\nregisterSimpleEditorSettingMigration('parameterHints', [[true, { enabled: true }], [false, { enabled: false }]]);\nregisterSimpleEditorSettingMigration('autoIndent', [[false, 'advanced'], [true, 'full']]);\nregisterSimpleEditorSettingMigration('matchBrackets', [[true, 'always'], [false, 'never']]);\nregisterSimpleEditorSettingMigration('renderFinalNewline', [[true, 'on'], [false, 'off']]);\nregisterSimpleEditorSettingMigration('cursorSmoothCaretAnimation', [[true, 'on'], [false, 'off']]);\nregisterEditorSettingMigration('autoClosingBrackets', (value, read, write) => {\n    if (value === false) {\n        write('autoClosingBrackets', 'never');\n        if (typeof read('autoClosingQuotes') === 'undefined') {\n            write('autoClosingQuotes', 'never');\n        }\n        if (typeof read('autoSurround') === 'undefined') {\n            write('autoSurround', 'never');\n        }\n    }\n});\nregisterEditorSettingMigration('renderIndentGuides', (value, read, write) => {\n    if (typeof value !== 'undefined') {\n        write('renderIndentGuides', undefined);\n        if (typeof read('guides.indentation') === 'undefined') {\n            write('guides.indentation', !!value);\n        }\n    }\n});\nregisterEditorSettingMigration('highlightActiveIndentGuide', (value, read, write) => {\n    if (typeof value !== 'undefined') {\n        write('highlightActiveIndentGuide', undefined);\n        if (typeof read('guides.highlightActiveIndentation') === 'undefined') {\n            write('guides.highlightActiveIndentation', !!value);\n        }\n    }\n});\nconst suggestFilteredTypesMapping = {\n    method: 'showMethods',\n    function: 'showFunctions',\n    constructor: 'showConstructors',\n    deprecated: 'showDeprecated',\n    field: 'showFields',\n    variable: 'showVariables',\n    class: 'showClasses',\n    struct: 'showStructs',\n    interface: 'showInterfaces',\n    module: 'showModules',\n    property: 'showProperties',\n    event: 'showEvents',\n    operator: 'showOperators',\n    unit: 'showUnits',\n    value: 'showValues',\n    constant: 'showConstants',\n    enum: 'showEnums',\n    enumMember: 'showEnumMembers',\n    keyword: 'showKeywords',\n    text: 'showWords',\n    color: 'showColors',\n    file: 'showFiles',\n    reference: 'showReferences',\n    folder: 'showFolders',\n    typeParameter: 'showTypeParameters',\n    snippet: 'showSnippets',\n};\nregisterEditorSettingMigration('suggest.filteredTypes', (value, read, write) => {\n    if (value && typeof value === 'object') {\n        for (const entry of Object.entries(suggestFilteredTypesMapping)) {\n            const v = value[entry[0]];\n            if (v === false) {\n                if (typeof read(`suggest.${entry[1]}`) === 'undefined') {\n                    write(`suggest.${entry[1]}`, false);\n                }\n            }\n        }\n        write('suggest.filteredTypes', undefined);\n    }\n});\nregisterEditorSettingMigration('quickSuggestions', (input, read, write) => {\n    if (typeof input === 'boolean') {\n        const value = input ? 'on' : 'off';\n        const newValue = { comments: value, strings: value, other: value };\n        write('quickSuggestions', newValue);\n    }\n});\n// Sticky Scroll\nregisterEditorSettingMigration('experimental.stickyScroll.enabled', (value, read, write) => {\n    if (typeof value === 'boolean') {\n        write('experimental.stickyScroll.enabled', undefined);\n        if (typeof read('stickyScroll.enabled') === 'undefined') {\n            write('stickyScroll.enabled', value);\n        }\n    }\n});\nregisterEditorSettingMigration('experimental.stickyScroll.maxLineCount', (value, read, write) => {\n    if (typeof value === 'number') {\n        write('experimental.stickyScroll.maxLineCount', undefined);\n        if (typeof read('stickyScroll.maxLineCount') === 'undefined') {\n            write('stickyScroll.maxLineCount', value);\n        }\n    }\n});\n// Code Actions on Save\n// registerEditorSettingMigration('codeActionsOnSave', (value, read, write) => {\n// \tif (value && typeof value === 'object') {\n// \t\tlet toBeModified = false;\n// \t\tconst newValue = {} as any;\n// \t\tfor (const entry of Object.entries(value)) {\n// \t\t\tif (typeof entry[1] === 'boolean') {\n// \t\t\t\ttoBeModified = true;\n// \t\t\t\tnewValue[entry[0]] = entry[1] ? 'explicit' : 'never';\n// \t\t\t} else {\n// \t\t\t\tnewValue[entry[0]] = entry[1];\n// \t\t\t}\n// \t\t}\n// \t\tif (toBeModified) {\n// \t\t\twrite(`codeActionsOnSave`, newValue);\n// \t\t}\n// \t}\n// });\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as browser from '../../../base/browser/browser.js';\nimport * as arrays from '../../../base/common/arrays.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as objects from '../../../base/common/objects.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { ElementSizeObserver } from './elementSizeObserver.js';\nimport { FontMeasurements } from './fontMeasurements.js';\nimport { migrateOptions } from './migrateOptions.js';\nimport { TabFocus } from './tabFocus.js';\nimport { ComputeOptionsMemory, ConfigurationChangedEvent, editorOptionsRegistry } from '../../common/config/editorOptions.js';\nimport { EditorZoom } from '../../common/config/editorZoom.js';\nimport { BareFontInfo } from '../../common/config/fontInfo.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nlet EditorConfiguration = class EditorConfiguration extends Disposable {\n    constructor(isSimpleWidget, options, container, _accessibilityService) {\n        super();\n        this._accessibilityService = _accessibilityService;\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._onDidChangeFast = this._register(new Emitter());\n        this.onDidChangeFast = this._onDidChangeFast.event;\n        this._isDominatedByLongLines = false;\n        this._viewLineCount = 1;\n        this._lineNumbersDigitCount = 1;\n        this._reservedHeight = 0;\n        this._glyphMarginDecorationLaneCount = 1;\n        this._computeOptionsMemory = new ComputeOptionsMemory();\n        this.isSimpleWidget = isSimpleWidget;\n        this._containerObserver = this._register(new ElementSizeObserver(container, options.dimension));\n        this._rawOptions = deepCloneAndMigrateOptions(options);\n        this._validatedOptions = EditorOptionsUtil.validateOptions(this._rawOptions);\n        this.options = this._computeOptions();\n        if (this.options.get(13 /* EditorOption.automaticLayout */)) {\n            this._containerObserver.startObserving();\n        }\n        this._register(EditorZoom.onDidChangeZoomLevel(() => this._recomputeOptions()));\n        this._register(TabFocus.onDidChangeTabFocus(() => this._recomputeOptions()));\n        this._register(this._containerObserver.onDidChange(() => this._recomputeOptions()));\n        this._register(FontMeasurements.onDidChange(() => this._recomputeOptions()));\n        this._register(browser.PixelRatio.onDidChange(() => this._recomputeOptions()));\n        this._register(this._accessibilityService.onDidChangeScreenReaderOptimized(() => this._recomputeOptions()));\n    }\n    _recomputeOptions() {\n        const newOptions = this._computeOptions();\n        const changeEvent = EditorOptionsUtil.checkEquals(this.options, newOptions);\n        if (changeEvent === null) {\n            // nothing changed!\n            return;\n        }\n        this.options = newOptions;\n        this._onDidChangeFast.fire(changeEvent);\n        this._onDidChange.fire(changeEvent);\n    }\n    _computeOptions() {\n        const partialEnv = this._readEnvConfiguration();\n        const bareFontInfo = BareFontInfo.createFromValidatedSettings(this._validatedOptions, partialEnv.pixelRatio, this.isSimpleWidget);\n        const fontInfo = this._readFontInfo(bareFontInfo);\n        const env = {\n            memory: this._computeOptionsMemory,\n            outerWidth: partialEnv.outerWidth,\n            outerHeight: partialEnv.outerHeight - this._reservedHeight,\n            fontInfo: fontInfo,\n            extraEditorClassName: partialEnv.extraEditorClassName,\n            isDominatedByLongLines: this._isDominatedByLongLines,\n            viewLineCount: this._viewLineCount,\n            lineNumbersDigitCount: this._lineNumbersDigitCount,\n            emptySelectionClipboard: partialEnv.emptySelectionClipboard,\n            pixelRatio: partialEnv.pixelRatio,\n            tabFocusMode: TabFocus.getTabFocusMode(),\n            accessibilitySupport: partialEnv.accessibilitySupport,\n            glyphMarginDecorationLaneCount: this._glyphMarginDecorationLaneCount\n        };\n        return EditorOptionsUtil.computeOptions(this._validatedOptions, env);\n    }\n    _readEnvConfiguration() {\n        return {\n            extraEditorClassName: getExtraEditorClassName(),\n            outerWidth: this._containerObserver.getWidth(),\n            outerHeight: this._containerObserver.getHeight(),\n            emptySelectionClipboard: browser.isWebKit || browser.isFirefox,\n            pixelRatio: browser.PixelRatio.value,\n            accessibilitySupport: (this._accessibilityService.isScreenReaderOptimized()\n                ? 2 /* AccessibilitySupport.Enabled */\n                : this._accessibilityService.getAccessibilitySupport())\n        };\n    }\n    _readFontInfo(bareFontInfo) {\n        return FontMeasurements.readFontInfo(bareFontInfo);\n    }\n    getRawOptions() {\n        return this._rawOptions;\n    }\n    updateOptions(_newOptions) {\n        const newOptions = deepCloneAndMigrateOptions(_newOptions);\n        const didChange = EditorOptionsUtil.applyUpdate(this._rawOptions, newOptions);\n        if (!didChange) {\n            return;\n        }\n        this._validatedOptions = EditorOptionsUtil.validateOptions(this._rawOptions);\n        this._recomputeOptions();\n    }\n    observeContainer(dimension) {\n        this._containerObserver.observe(dimension);\n    }\n    setIsDominatedByLongLines(isDominatedByLongLines) {\n        if (this._isDominatedByLongLines === isDominatedByLongLines) {\n            return;\n        }\n        this._isDominatedByLongLines = isDominatedByLongLines;\n        this._recomputeOptions();\n    }\n    setModelLineCount(modelLineCount) {\n        const lineNumbersDigitCount = digitCount(modelLineCount);\n        if (this._lineNumbersDigitCount === lineNumbersDigitCount) {\n            return;\n        }\n        this._lineNumbersDigitCount = lineNumbersDigitCount;\n        this._recomputeOptions();\n    }\n    setViewLineCount(viewLineCount) {\n        if (this._viewLineCount === viewLineCount) {\n            return;\n        }\n        this._viewLineCount = viewLineCount;\n        this._recomputeOptions();\n    }\n    setReservedHeight(reservedHeight) {\n        if (this._reservedHeight === reservedHeight) {\n            return;\n        }\n        this._reservedHeight = reservedHeight;\n        this._recomputeOptions();\n    }\n    setGlyphMarginDecorationLaneCount(decorationLaneCount) {\n        if (this._glyphMarginDecorationLaneCount === decorationLaneCount) {\n            return;\n        }\n        this._glyphMarginDecorationLaneCount = decorationLaneCount;\n        this._recomputeOptions();\n    }\n};\nEditorConfiguration = __decorate([\n    __param(3, IAccessibilityService)\n], EditorConfiguration);\nexport { EditorConfiguration };\nfunction digitCount(n) {\n    let r = 0;\n    while (n) {\n        n = Math.floor(n / 10);\n        r++;\n    }\n    return r ? r : 1;\n}\nfunction getExtraEditorClassName() {\n    let extra = '';\n    if (!browser.isSafari && !browser.isWebkitWebView) {\n        // Use user-select: none in all browsers except Safari and native macOS WebView\n        extra += 'no-user-select ';\n    }\n    if (browser.isSafari) {\n        // See https://github.com/microsoft/vscode/issues/108822\n        extra += 'no-minimap-shadow ';\n        extra += 'enable-user-select ';\n    }\n    if (platform.isMacintosh) {\n        extra += 'mac ';\n    }\n    return extra;\n}\nclass ValidatedEditorOptions {\n    constructor() {\n        this._values = [];\n    }\n    _read(option) {\n        return this._values[option];\n    }\n    get(id) {\n        return this._values[id];\n    }\n    _write(option, value) {\n        this._values[option] = value;\n    }\n}\nexport class ComputedEditorOptions {\n    constructor() {\n        this._values = [];\n    }\n    _read(id) {\n        if (id >= this._values.length) {\n            throw new Error('Cannot read uninitialized value');\n        }\n        return this._values[id];\n    }\n    get(id) {\n        return this._read(id);\n    }\n    _write(id, value) {\n        this._values[id] = value;\n    }\n}\nclass EditorOptionsUtil {\n    static validateOptions(options) {\n        const result = new ValidatedEditorOptions();\n        for (const editorOption of editorOptionsRegistry) {\n            const value = (editorOption.name === '_never_' ? undefined : options[editorOption.name]);\n            result._write(editorOption.id, editorOption.validate(value));\n        }\n        return result;\n    }\n    static computeOptions(options, env) {\n        const result = new ComputedEditorOptions();\n        for (const editorOption of editorOptionsRegistry) {\n            result._write(editorOption.id, editorOption.compute(env, result, options._read(editorOption.id)));\n        }\n        return result;\n    }\n    static _deepEquals(a, b) {\n        if (typeof a !== 'object' || typeof b !== 'object' || !a || !b) {\n            return a === b;\n        }\n        if (Array.isArray(a) || Array.isArray(b)) {\n            return (Array.isArray(a) && Array.isArray(b) ? arrays.equals(a, b) : false);\n        }\n        if (Object.keys(a).length !== Object.keys(b).length) {\n            return false;\n        }\n        for (const key in a) {\n            if (!EditorOptionsUtil._deepEquals(a[key], b[key])) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static checkEquals(a, b) {\n        const result = [];\n        let somethingChanged = false;\n        for (const editorOption of editorOptionsRegistry) {\n            const changed = !EditorOptionsUtil._deepEquals(a._read(editorOption.id), b._read(editorOption.id));\n            result[editorOption.id] = changed;\n            if (changed) {\n                somethingChanged = true;\n            }\n        }\n        return (somethingChanged ? new ConfigurationChangedEvent(result) : null);\n    }\n    /**\n     * Returns true if something changed.\n     * Modifies `options`.\n    */\n    static applyUpdate(options, update) {\n        let changed = false;\n        for (const editorOption of editorOptionsRegistry) {\n            if (update.hasOwnProperty(editorOption.name)) {\n                const result = editorOption.applyUpdate(options[editorOption.name], update[editorOption.name]);\n                options[editorOption.name] = result.newValue;\n                changed = changed || result.didChange;\n            }\n        }\n        return changed;\n    }\n}\nfunction deepCloneAndMigrateOptions(_options) {\n    const options = objects.deepClone(_options);\n    migrateOptions(options);\n    return options;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Emitter } from '../../../base/common/event.js';\nexport class ElementSizeObserver extends Disposable {\n    constructor(referenceDomElement, dimension) {\n        super();\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._referenceDomElement = referenceDomElement;\n        this._width = -1;\n        this._height = -1;\n        this._resizeObserver = null;\n        this.measureReferenceDomElement(false, dimension);\n    }\n    dispose() {\n        this.stopObserving();\n        super.dispose();\n    }\n    getWidth() {\n        return this._width;\n    }\n    getHeight() {\n        return this._height;\n    }\n    startObserving() {\n        if (!this._resizeObserver && this._referenceDomElement) {\n            // We want to react to the resize observer only once per animation frame\n            // The first time the resize observer fires, we will react to it immediately.\n            // Otherwise we will postpone to the next animation frame.\n            // We'll use `observeContentRect` to store the content rect we received.\n            let observeContentRect = null;\n            const observeNow = () => {\n                if (observeContentRect) {\n                    this.observe({ width: observeContentRect.width, height: observeContentRect.height });\n                }\n                else {\n                    this.observe();\n                }\n            };\n            let shouldObserve = false;\n            let alreadyObservedThisAnimationFrame = false;\n            const update = () => {\n                if (shouldObserve && !alreadyObservedThisAnimationFrame) {\n                    try {\n                        shouldObserve = false;\n                        alreadyObservedThisAnimationFrame = true;\n                        observeNow();\n                    }\n                    finally {\n                        requestAnimationFrame(() => {\n                            alreadyObservedThisAnimationFrame = false;\n                            update();\n                        });\n                    }\n                }\n            };\n            this._resizeObserver = new ResizeObserver((entries) => {\n                observeContentRect = (entries && entries[0] && entries[0].contentRect ? entries[0].contentRect : null);\n                shouldObserve = true;\n                update();\n            });\n            this._resizeObserver.observe(this._referenceDomElement);\n        }\n    }\n    stopObserving() {\n        if (this._resizeObserver) {\n            this._resizeObserver.disconnect();\n            this._resizeObserver = null;\n        }\n    }\n    observe(dimension) {\n        this.measureReferenceDomElement(true, dimension);\n    }\n    measureReferenceDomElement(emitEvent, dimension) {\n        let observedWidth = 0;\n        let observedHeight = 0;\n        if (dimension) {\n            observedWidth = dimension.width;\n            observedHeight = dimension.height;\n        }\n        else if (this._referenceDomElement) {\n            observedWidth = this._referenceDomElement.clientWidth;\n            observedHeight = this._referenceDomElement.clientHeight;\n        }\n        observedWidth = Math.max(5, observedWidth);\n        observedHeight = Math.max(5, observedHeight);\n        if (this._width !== observedWidth || this._height !== observedHeight) {\n            this._width = observedWidth;\n            this._height = observedHeight;\n            if (emitEvent) {\n                this._onDidChange.fire();\n            }\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { applyFontInfo } from './domFontInfo.js';\nexport class CharWidthRequest {\n    constructor(chr, type) {\n        this.chr = chr;\n        this.type = type;\n        this.width = 0;\n    }\n    fulfill(width) {\n        this.width = width;\n    }\n}\nclass DomCharWidthReader {\n    constructor(bareFontInfo, requests) {\n        this._bareFontInfo = bareFontInfo;\n        this._requests = requests;\n        this._container = null;\n        this._testElements = null;\n    }\n    read() {\n        // Create a test container with all these test elements\n        this._createDomElements();\n        // Add the container to the DOM\n        document.body.appendChild(this._container);\n        // Read character widths\n        this._readFromDomElements();\n        // Remove the container from the DOM\n        document.body.removeChild(this._container);\n        this._container = null;\n        this._testElements = null;\n    }\n    _createDomElements() {\n        const container = document.createElement('div');\n        container.style.position = 'absolute';\n        container.style.top = '-50000px';\n        container.style.width = '50000px';\n        const regularDomNode = document.createElement('div');\n        applyFontInfo(regularDomNode, this._bareFontInfo);\n        container.appendChild(regularDomNode);\n        const boldDomNode = document.createElement('div');\n        applyFontInfo(boldDomNode, this._bareFontInfo);\n        boldDomNode.style.fontWeight = 'bold';\n        container.appendChild(boldDomNode);\n        const italicDomNode = document.createElement('div');\n        applyFontInfo(italicDomNode, this._bareFontInfo);\n        italicDomNode.style.fontStyle = 'italic';\n        container.appendChild(italicDomNode);\n        const testElements = [];\n        for (const request of this._requests) {\n            let parent;\n            if (request.type === 0 /* CharWidthRequestType.Regular */) {\n                parent = regularDomNode;\n            }\n            if (request.type === 2 /* CharWidthRequestType.Bold */) {\n                parent = boldDomNode;\n            }\n            if (request.type === 1 /* CharWidthRequestType.Italic */) {\n                parent = italicDomNode;\n            }\n            parent.appendChild(document.createElement('br'));\n            const testElement = document.createElement('span');\n            DomCharWidthReader._render(testElement, request);\n            parent.appendChild(testElement);\n            testElements.push(testElement);\n        }\n        this._container = container;\n        this._testElements = testElements;\n    }\n    static _render(testElement, request) {\n        if (request.chr === ' ') {\n            let htmlString = '\\u00a0';\n            // Repeat character 256 (2^8) times\n            for (let i = 0; i < 8; i++) {\n                htmlString += htmlString;\n            }\n            testElement.innerText = htmlString;\n        }\n        else {\n            let testString = request.chr;\n            // Repeat character 256 (2^8) times\n            for (let i = 0; i < 8; i++) {\n                testString += testString;\n            }\n            testElement.textContent = testString;\n        }\n    }\n    _readFromDomElements() {\n        for (let i = 0, len = this._requests.length; i < len; i++) {\n            const request = this._requests[i];\n            const testElement = this._testElements[i];\n            request.fulfill(testElement.offsetWidth / 256);\n        }\n    }\n}\nexport function readCharWidths(bareFontInfo, requests) {\n    const reader = new DomCharWidthReader(bareFontInfo, requests);\n    reader.read();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from '../../../base/browser/browser.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { CharWidthRequest, readCharWidths } from './charWidthReader.js';\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\nimport { FontInfo } from '../../common/config/fontInfo.js';\nexport class FontMeasurementsImpl extends Disposable {\n    constructor() {\n        super();\n        this._onDidChange = this._register(new Emitter());\n        this.onDidChange = this._onDidChange.event;\n        this._cache = new FontMeasurementsCache();\n        this._evictUntrustedReadingsTimeout = -1;\n    }\n    dispose() {\n        if (this._evictUntrustedReadingsTimeout !== -1) {\n            window.clearTimeout(this._evictUntrustedReadingsTimeout);\n            this._evictUntrustedReadingsTimeout = -1;\n        }\n        super.dispose();\n    }\n    /**\n     * Clear all cached font information and trigger a change event.\n     */\n    clearAllFontInfos() {\n        this._cache = new FontMeasurementsCache();\n        this._onDidChange.fire();\n    }\n    _writeToCache(item, value) {\n        this._cache.put(item, value);\n        if (!value.isTrusted && this._evictUntrustedReadingsTimeout === -1) {\n            // Try reading again after some time\n            this._evictUntrustedReadingsTimeout = window.setTimeout(() => {\n                this._evictUntrustedReadingsTimeout = -1;\n                this._evictUntrustedReadings();\n            }, 5000);\n        }\n    }\n    _evictUntrustedReadings() {\n        const values = this._cache.getValues();\n        let somethingRemoved = false;\n        for (const item of values) {\n            if (!item.isTrusted) {\n                somethingRemoved = true;\n                this._cache.remove(item);\n            }\n        }\n        if (somethingRemoved) {\n            this._onDidChange.fire();\n        }\n    }\n    /**\n     * Read font information.\n     */\n    readFontInfo(bareFontInfo) {\n        if (!this._cache.has(bareFontInfo)) {\n            let readConfig = this._actualReadFontInfo(bareFontInfo);\n            if (readConfig.typicalHalfwidthCharacterWidth <= 2 || readConfig.typicalFullwidthCharacterWidth <= 2 || readConfig.spaceWidth <= 2 || readConfig.maxDigitWidth <= 2) {\n                // Hey, it's Bug 14341 ... we couldn't read\n                readConfig = new FontInfo({\n                    pixelRatio: browser.PixelRatio.value,\n                    fontFamily: readConfig.fontFamily,\n                    fontWeight: readConfig.fontWeight,\n                    fontSize: readConfig.fontSize,\n                    fontFeatureSettings: readConfig.fontFeatureSettings,\n                    fontVariationSettings: readConfig.fontVariationSettings,\n                    lineHeight: readConfig.lineHeight,\n                    letterSpacing: readConfig.letterSpacing,\n                    isMonospace: readConfig.isMonospace,\n                    typicalHalfwidthCharacterWidth: Math.max(readConfig.typicalHalfwidthCharacterWidth, 5),\n                    typicalFullwidthCharacterWidth: Math.max(readConfig.typicalFullwidthCharacterWidth, 5),\n                    canUseHalfwidthRightwardsArrow: readConfig.canUseHalfwidthRightwardsArrow,\n                    spaceWidth: Math.max(readConfig.spaceWidth, 5),\n                    middotWidth: Math.max(readConfig.middotWidth, 5),\n                    wsmiddotWidth: Math.max(readConfig.wsmiddotWidth, 5),\n                    maxDigitWidth: Math.max(readConfig.maxDigitWidth, 5),\n                }, false);\n            }\n            this._writeToCache(bareFontInfo, readConfig);\n        }\n        return this._cache.get(bareFontInfo);\n    }\n    _createRequest(chr, type, all, monospace) {\n        const result = new CharWidthRequest(chr, type);\n        all.push(result);\n        monospace === null || monospace === void 0 ? void 0 : monospace.push(result);\n        return result;\n    }\n    _actualReadFontInfo(bareFontInfo) {\n        const all = [];\n        const monospace = [];\n        const typicalHalfwidthCharacter = this._createRequest('n', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const typicalFullwidthCharacter = this._createRequest('\\uff4d', 0 /* CharWidthRequestType.Regular */, all, null);\n        const space = this._createRequest(' ', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit0 = this._createRequest('0', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit1 = this._createRequest('1', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit2 = this._createRequest('2', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit3 = this._createRequest('3', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit4 = this._createRequest('4', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit5 = this._createRequest('5', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit6 = this._createRequest('6', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit7 = this._createRequest('7', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit8 = this._createRequest('8', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const digit9 = this._createRequest('9', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        // monospace test: used for whitespace rendering\n        const rightwardsArrow = this._createRequest('→', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        const halfwidthRightwardsArrow = this._createRequest('￫', 0 /* CharWidthRequestType.Regular */, all, null);\n        // U+00B7 - MIDDLE DOT\n        const middot = this._createRequest('·', 0 /* CharWidthRequestType.Regular */, all, monospace);\n        // U+2E31 - WORD SEPARATOR MIDDLE DOT\n        const wsmiddotWidth = this._createRequest(String.fromCharCode(0x2E31), 0 /* CharWidthRequestType.Regular */, all, null);\n        // monospace test: some characters\n        const monospaceTestChars = '|/-_ilm%';\n        for (let i = 0, len = monospaceTestChars.length; i < len; i++) {\n            this._createRequest(monospaceTestChars.charAt(i), 0 /* CharWidthRequestType.Regular */, all, monospace);\n            this._createRequest(monospaceTestChars.charAt(i), 1 /* CharWidthRequestType.Italic */, all, monospace);\n            this._createRequest(monospaceTestChars.charAt(i), 2 /* CharWidthRequestType.Bold */, all, monospace);\n        }\n        readCharWidths(bareFontInfo, all);\n        const maxDigitWidth = Math.max(digit0.width, digit1.width, digit2.width, digit3.width, digit4.width, digit5.width, digit6.width, digit7.width, digit8.width, digit9.width);\n        let isMonospace = (bareFontInfo.fontFeatureSettings === EditorFontLigatures.OFF);\n        const referenceWidth = monospace[0].width;\n        for (let i = 1, len = monospace.length; isMonospace && i < len; i++) {\n            const diff = referenceWidth - monospace[i].width;\n            if (diff < -0.001 || diff > 0.001) {\n                isMonospace = false;\n                break;\n            }\n        }\n        let canUseHalfwidthRightwardsArrow = true;\n        if (isMonospace && halfwidthRightwardsArrow.width !== referenceWidth) {\n            // using a halfwidth rightwards arrow would break monospace...\n            canUseHalfwidthRightwardsArrow = false;\n        }\n        if (halfwidthRightwardsArrow.width > rightwardsArrow.width) {\n            // using a halfwidth rightwards arrow would paint a larger arrow than a regular rightwards arrow\n            canUseHalfwidthRightwardsArrow = false;\n        }\n        return new FontInfo({\n            pixelRatio: browser.PixelRatio.value,\n            fontFamily: bareFontInfo.fontFamily,\n            fontWeight: bareFontInfo.fontWeight,\n            fontSize: bareFontInfo.fontSize,\n            fontFeatureSettings: bareFontInfo.fontFeatureSettings,\n            fontVariationSettings: bareFontInfo.fontVariationSettings,\n            lineHeight: bareFontInfo.lineHeight,\n            letterSpacing: bareFontInfo.letterSpacing,\n            isMonospace: isMonospace,\n            typicalHalfwidthCharacterWidth: typicalHalfwidthCharacter.width,\n            typicalFullwidthCharacterWidth: typicalFullwidthCharacter.width,\n            canUseHalfwidthRightwardsArrow: canUseHalfwidthRightwardsArrow,\n            spaceWidth: space.width,\n            middotWidth: middot.width,\n            wsmiddotWidth: wsmiddotWidth.width,\n            maxDigitWidth: maxDigitWidth\n        }, true);\n    }\n}\nclass FontMeasurementsCache {\n    constructor() {\n        this._keys = Object.create(null);\n        this._values = Object.create(null);\n    }\n    has(item) {\n        const itemId = item.getId();\n        return !!this._values[itemId];\n    }\n    get(item) {\n        const itemId = item.getId();\n        return this._values[itemId];\n    }\n    put(item, value) {\n        const itemId = item.getId();\n        this._keys[itemId] = item;\n        this._values[itemId] = value;\n    }\n    remove(item) {\n        const itemId = item.getId();\n        delete this._keys[itemId];\n        delete this._values[itemId];\n    }\n    getValues() {\n        return Object.keys(this._keys).map(id => this._values[id]);\n    }\n}\nexport const FontMeasurements = new FontMeasurementsImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nclass TabFocusImpl {\n    constructor() {\n        this._tabFocus = false;\n        this._onDidChangeTabFocus = new Emitter();\n        this.onDidChangeTabFocus = this._onDidChangeTabFocus.event;\n    }\n    getTabFocusMode() {\n        return this._tabFocus;\n    }\n    setTabFocusMode(tabFocusMode) {\n        this._tabFocus = tabFocusMode;\n        this._onDidChangeTabFocus.fire(this._tabFocus);\n    }\n}\n/**\n * Control what pressing Tab does.\n * If it is false, pressing Tab or Shift-Tab will be handled by the editor.\n * If it is true, pressing Tab or Shift-Tab will move the browser focus.\n * Defaults to false.\n */\nexport const TabFocus = new TabFocusImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { PageCoordinates } from '../editorDom.js';\nimport { PartFingerprints } from '../view/viewPart.js';\nimport { ViewLine } from '../viewParts/lines/viewLine.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range as EditorRange } from '../../common/core/range.js';\nimport { CursorColumns } from '../../common/core/cursorColumns.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { AtomicTabMoveOperations } from '../../common/cursor/cursorAtomicMoveOperations.js';\nclass UnknownHitTestResult {\n    constructor(hitTarget = null) {\n        this.hitTarget = hitTarget;\n        this.type = 0 /* HitTestResultType.Unknown */;\n    }\n}\nclass ContentHitTestResult {\n    constructor(position, spanNode, injectedText) {\n        this.position = position;\n        this.spanNode = spanNode;\n        this.injectedText = injectedText;\n        this.type = 1 /* HitTestResultType.Content */;\n    }\n}\nvar HitTestResult;\n(function (HitTestResult) {\n    function createFromDOMInfo(ctx, spanNode, offset) {\n        const position = ctx.getPositionFromDOMInfo(spanNode, offset);\n        if (position) {\n            return new ContentHitTestResult(position, spanNode, null);\n        }\n        return new UnknownHitTestResult(spanNode);\n    }\n    HitTestResult.createFromDOMInfo = createFromDOMInfo;\n})(HitTestResult || (HitTestResult = {}));\nexport class PointerHandlerLastRenderData {\n    constructor(lastViewCursorsRenderData, lastTextareaPosition) {\n        this.lastViewCursorsRenderData = lastViewCursorsRenderData;\n        this.lastTextareaPosition = lastTextareaPosition;\n    }\n}\nexport class MouseTarget {\n    static _deduceRage(position, range = null) {\n        if (!range && position) {\n            return new EditorRange(position.lineNumber, position.column, position.lineNumber, position.column);\n        }\n        return range !== null && range !== void 0 ? range : null;\n    }\n    static createUnknown(element, mouseColumn, position) {\n        return { type: 0 /* MouseTargetType.UNKNOWN */, element, mouseColumn, position, range: this._deduceRage(position) };\n    }\n    static createTextarea(element, mouseColumn) {\n        return { type: 1 /* MouseTargetType.TEXTAREA */, element, mouseColumn, position: null, range: null };\n    }\n    static createMargin(type, element, mouseColumn, position, range, detail) {\n        return { type, element, mouseColumn, position, range, detail };\n    }\n    static createViewZone(type, element, mouseColumn, position, detail) {\n        return { type, element, mouseColumn, position, range: this._deduceRage(position), detail };\n    }\n    static createContentText(element, mouseColumn, position, range, detail) {\n        return { type: 6 /* MouseTargetType.CONTENT_TEXT */, element, mouseColumn, position, range: this._deduceRage(position, range), detail };\n    }\n    static createContentEmpty(element, mouseColumn, position, detail) {\n        return { type: 7 /* MouseTargetType.CONTENT_EMPTY */, element, mouseColumn, position, range: this._deduceRage(position), detail };\n    }\n    static createContentWidget(element, mouseColumn, detail) {\n        return { type: 9 /* MouseTargetType.CONTENT_WIDGET */, element, mouseColumn, position: null, range: null, detail };\n    }\n    static createScrollbar(element, mouseColumn, position) {\n        return { type: 11 /* MouseTargetType.SCROLLBAR */, element, mouseColumn, position, range: this._deduceRage(position) };\n    }\n    static createOverlayWidget(element, mouseColumn, detail) {\n        return { type: 12 /* MouseTargetType.OVERLAY_WIDGET */, element, mouseColumn, position: null, range: null, detail };\n    }\n    static createOutsideEditor(mouseColumn, position, outsidePosition, outsideDistance) {\n        return { type: 13 /* MouseTargetType.OUTSIDE_EDITOR */, element: null, mouseColumn, position, range: this._deduceRage(position), outsidePosition, outsideDistance };\n    }\n    static _typeToString(type) {\n        if (type === 1 /* MouseTargetType.TEXTAREA */) {\n            return 'TEXTAREA';\n        }\n        if (type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */) {\n            return 'GUTTER_GLYPH_MARGIN';\n        }\n        if (type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */) {\n            return 'GUTTER_LINE_NUMBERS';\n        }\n        if (type === 4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */) {\n            return 'GUTTER_LINE_DECORATIONS';\n        }\n        if (type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n            return 'GUTTER_VIEW_ZONE';\n        }\n        if (type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return 'CONTENT_TEXT';\n        }\n        if (type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            return 'CONTENT_EMPTY';\n        }\n        if (type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */) {\n            return 'CONTENT_VIEW_ZONE';\n        }\n        if (type === 9 /* MouseTargetType.CONTENT_WIDGET */) {\n            return 'CONTENT_WIDGET';\n        }\n        if (type === 10 /* MouseTargetType.OVERVIEW_RULER */) {\n            return 'OVERVIEW_RULER';\n        }\n        if (type === 11 /* MouseTargetType.SCROLLBAR */) {\n            return 'SCROLLBAR';\n        }\n        if (type === 12 /* MouseTargetType.OVERLAY_WIDGET */) {\n            return 'OVERLAY_WIDGET';\n        }\n        return 'UNKNOWN';\n    }\n    static toString(target) {\n        return this._typeToString(target.type) + ': ' + target.position + ' - ' + target.range + ' - ' + JSON.stringify(target.detail);\n    }\n}\nclass ElementPath {\n    static isTextArea(path) {\n        return (path.length === 2\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[1] === 6 /* PartFingerprint.TextArea */);\n    }\n    static isChildOfViewLines(path) {\n        return (path.length >= 4\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[3] === 7 /* PartFingerprint.ViewLines */);\n    }\n    static isStrictChildOfViewLines(path) {\n        return (path.length > 4\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[3] === 7 /* PartFingerprint.ViewLines */);\n    }\n    static isChildOfScrollableElement(path) {\n        return (path.length >= 2\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[1] === 5 /* PartFingerprint.ScrollableElement */);\n    }\n    static isChildOfMinimap(path) {\n        return (path.length >= 2\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[1] === 8 /* PartFingerprint.Minimap */);\n    }\n    static isChildOfContentWidgets(path) {\n        return (path.length >= 4\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[3] === 1 /* PartFingerprint.ContentWidgets */);\n    }\n    static isChildOfOverflowGuard(path) {\n        return (path.length >= 1\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */);\n    }\n    static isChildOfOverflowingContentWidgets(path) {\n        return (path.length >= 1\n            && path[0] === 2 /* PartFingerprint.OverflowingContentWidgets */);\n    }\n    static isChildOfOverlayWidgets(path) {\n        return (path.length >= 2\n            && path[0] === 3 /* PartFingerprint.OverflowGuard */\n            && path[1] === 4 /* PartFingerprint.OverlayWidgets */);\n    }\n}\nexport class HitTestContext {\n    constructor(context, viewHelper, lastRenderData) {\n        this.viewModel = context.viewModel;\n        const options = context.configuration.options;\n        this.layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this.viewDomNode = viewHelper.viewDomNode;\n        this.lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this.stickyTabStops = options.get(115 /* EditorOption.stickyTabStops */);\n        this.typicalHalfwidthCharacterWidth = options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth;\n        this.lastRenderData = lastRenderData;\n        this._context = context;\n        this._viewHelper = viewHelper;\n    }\n    getZoneAtCoord(mouseVerticalOffset) {\n        return HitTestContext.getZoneAtCoord(this._context, mouseVerticalOffset);\n    }\n    static getZoneAtCoord(context, mouseVerticalOffset) {\n        // The target is either a view zone or the empty space after the last view-line\n        const viewZoneWhitespace = context.viewLayout.getWhitespaceAtVerticalOffset(mouseVerticalOffset);\n        if (viewZoneWhitespace) {\n            const viewZoneMiddle = viewZoneWhitespace.verticalOffset + viewZoneWhitespace.height / 2;\n            const lineCount = context.viewModel.getLineCount();\n            let positionBefore = null;\n            let position;\n            let positionAfter = null;\n            if (viewZoneWhitespace.afterLineNumber !== lineCount) {\n                // There are more lines after this view zone\n                positionAfter = new Position(viewZoneWhitespace.afterLineNumber + 1, 1);\n            }\n            if (viewZoneWhitespace.afterLineNumber > 0) {\n                // There are more lines above this view zone\n                positionBefore = new Position(viewZoneWhitespace.afterLineNumber, context.viewModel.getLineMaxColumn(viewZoneWhitespace.afterLineNumber));\n            }\n            if (positionAfter === null) {\n                position = positionBefore;\n            }\n            else if (positionBefore === null) {\n                position = positionAfter;\n            }\n            else if (mouseVerticalOffset < viewZoneMiddle) {\n                position = positionBefore;\n            }\n            else {\n                position = positionAfter;\n            }\n            return {\n                viewZoneId: viewZoneWhitespace.id,\n                afterLineNumber: viewZoneWhitespace.afterLineNumber,\n                positionBefore: positionBefore,\n                positionAfter: positionAfter,\n                position: position\n            };\n        }\n        return null;\n    }\n    getFullLineRangeAtCoord(mouseVerticalOffset) {\n        if (this._context.viewLayout.isAfterLines(mouseVerticalOffset)) {\n            // Below the last line\n            const lineNumber = this._context.viewModel.getLineCount();\n            const maxLineColumn = this._context.viewModel.getLineMaxColumn(lineNumber);\n            return {\n                range: new EditorRange(lineNumber, maxLineColumn, lineNumber, maxLineColumn),\n                isAfterLines: true\n            };\n        }\n        const lineNumber = this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\n        const maxLineColumn = this._context.viewModel.getLineMaxColumn(lineNumber);\n        return {\n            range: new EditorRange(lineNumber, 1, lineNumber, maxLineColumn),\n            isAfterLines: false\n        };\n    }\n    getLineNumberAtVerticalOffset(mouseVerticalOffset) {\n        return this._context.viewLayout.getLineNumberAtVerticalOffset(mouseVerticalOffset);\n    }\n    isAfterLines(mouseVerticalOffset) {\n        return this._context.viewLayout.isAfterLines(mouseVerticalOffset);\n    }\n    isInTopPadding(mouseVerticalOffset) {\n        return this._context.viewLayout.isInTopPadding(mouseVerticalOffset);\n    }\n    isInBottomPadding(mouseVerticalOffset) {\n        return this._context.viewLayout.isInBottomPadding(mouseVerticalOffset);\n    }\n    getVerticalOffsetForLineNumber(lineNumber) {\n        return this._context.viewLayout.getVerticalOffsetForLineNumber(lineNumber);\n    }\n    findAttribute(element, attr) {\n        return HitTestContext._findAttribute(element, attr, this._viewHelper.viewDomNode);\n    }\n    static _findAttribute(element, attr, stopAt) {\n        while (element && element !== element.ownerDocument.body) {\n            if (element.hasAttribute && element.hasAttribute(attr)) {\n                return element.getAttribute(attr);\n            }\n            if (element === stopAt) {\n                return null;\n            }\n            element = element.parentNode;\n        }\n        return null;\n    }\n    getLineWidth(lineNumber) {\n        return this._viewHelper.getLineWidth(lineNumber);\n    }\n    visibleRangeForPosition(lineNumber, column) {\n        return this._viewHelper.visibleRangeForPosition(lineNumber, column);\n    }\n    getPositionFromDOMInfo(spanNode, offset) {\n        return this._viewHelper.getPositionFromDOMInfo(spanNode, offset);\n    }\n    getCurrentScrollTop() {\n        return this._context.viewLayout.getCurrentScrollTop();\n    }\n    getCurrentScrollLeft() {\n        return this._context.viewLayout.getCurrentScrollLeft();\n    }\n}\nclass BareHitTestRequest {\n    constructor(ctx, editorPos, pos, relativePos) {\n        this.editorPos = editorPos;\n        this.pos = pos;\n        this.relativePos = relativePos;\n        this.mouseVerticalOffset = Math.max(0, ctx.getCurrentScrollTop() + this.relativePos.y);\n        this.mouseContentHorizontalOffset = ctx.getCurrentScrollLeft() + this.relativePos.x - ctx.layoutInfo.contentLeft;\n        this.isInMarginArea = (this.relativePos.x < ctx.layoutInfo.contentLeft && this.relativePos.x >= ctx.layoutInfo.glyphMarginLeft);\n        this.isInContentArea = !this.isInMarginArea;\n        this.mouseColumn = Math.max(0, MouseTargetFactory._getMouseColumn(this.mouseContentHorizontalOffset, ctx.typicalHalfwidthCharacterWidth));\n    }\n}\nclass HitTestRequest extends BareHitTestRequest {\n    constructor(ctx, editorPos, pos, relativePos, target) {\n        super(ctx, editorPos, pos, relativePos);\n        this._ctx = ctx;\n        if (target) {\n            this.target = target;\n            this.targetPath = PartFingerprints.collect(target, ctx.viewDomNode);\n        }\n        else {\n            this.target = null;\n            this.targetPath = new Uint8Array(0);\n        }\n    }\n    toString() {\n        return `pos(${this.pos.x},${this.pos.y}), editorPos(${this.editorPos.x},${this.editorPos.y}), relativePos(${this.relativePos.x},${this.relativePos.y}), mouseVerticalOffset: ${this.mouseVerticalOffset}, mouseContentHorizontalOffset: ${this.mouseContentHorizontalOffset}\\n\\ttarget: ${this.target ? this.target.outerHTML : null}`;\n    }\n    _getMouseColumn(position = null) {\n        if (position && position.column < this._ctx.viewModel.getLineMaxColumn(position.lineNumber)) {\n            // Most likely, the line contains foreign decorations...\n            return CursorColumns.visibleColumnFromColumn(this._ctx.viewModel.getLineContent(position.lineNumber), position.column, this._ctx.viewModel.model.getOptions().tabSize) + 1;\n        }\n        return this.mouseColumn;\n    }\n    fulfillUnknown(position = null) {\n        return MouseTarget.createUnknown(this.target, this._getMouseColumn(position), position);\n    }\n    fulfillTextarea() {\n        return MouseTarget.createTextarea(this.target, this._getMouseColumn());\n    }\n    fulfillMargin(type, position, range, detail) {\n        return MouseTarget.createMargin(type, this.target, this._getMouseColumn(position), position, range, detail);\n    }\n    fulfillViewZone(type, position, detail) {\n        return MouseTarget.createViewZone(type, this.target, this._getMouseColumn(position), position, detail);\n    }\n    fulfillContentText(position, range, detail) {\n        return MouseTarget.createContentText(this.target, this._getMouseColumn(position), position, range, detail);\n    }\n    fulfillContentEmpty(position, detail) {\n        return MouseTarget.createContentEmpty(this.target, this._getMouseColumn(position), position, detail);\n    }\n    fulfillContentWidget(detail) {\n        return MouseTarget.createContentWidget(this.target, this._getMouseColumn(), detail);\n    }\n    fulfillScrollbar(position) {\n        return MouseTarget.createScrollbar(this.target, this._getMouseColumn(position), position);\n    }\n    fulfillOverlayWidget(detail) {\n        return MouseTarget.createOverlayWidget(this.target, this._getMouseColumn(), detail);\n    }\n    withTarget(target) {\n        return new HitTestRequest(this._ctx, this.editorPos, this.pos, this.relativePos, target);\n    }\n}\nconst EMPTY_CONTENT_AFTER_LINES = { isAfterLines: true };\nfunction createEmptyContentDataInLines(horizontalDistanceToText) {\n    return {\n        isAfterLines: false,\n        horizontalDistanceToText: horizontalDistanceToText\n    };\n}\nexport class MouseTargetFactory {\n    constructor(context, viewHelper) {\n        this._context = context;\n        this._viewHelper = viewHelper;\n    }\n    mouseTargetIsWidget(e) {\n        const t = e.target;\n        const path = PartFingerprints.collect(t, this._viewHelper.viewDomNode);\n        // Is it a content widget?\n        if (ElementPath.isChildOfContentWidgets(path) || ElementPath.isChildOfOverflowingContentWidgets(path)) {\n            return true;\n        }\n        // Is it an overlay widget?\n        if (ElementPath.isChildOfOverlayWidgets(path)) {\n            return true;\n        }\n        return false;\n    }\n    createMouseTarget(lastRenderData, editorPos, pos, relativePos, target) {\n        const ctx = new HitTestContext(this._context, this._viewHelper, lastRenderData);\n        const request = new HitTestRequest(ctx, editorPos, pos, relativePos, target);\n        try {\n            const r = MouseTargetFactory._createMouseTarget(ctx, request, false);\n            if (r.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n                // Snap to the nearest soft tab boundary if atomic soft tabs are enabled.\n                if (ctx.stickyTabStops && r.position !== null) {\n                    const position = MouseTargetFactory._snapToSoftTabBoundary(r.position, ctx.viewModel);\n                    const range = EditorRange.fromPositions(position, position).plusRange(r.range);\n                    return request.fulfillContentText(position, range, r.detail);\n                }\n            }\n            // console.log(MouseTarget.toString(r));\n            return r;\n        }\n        catch (err) {\n            // console.log(err);\n            return request.fulfillUnknown();\n        }\n    }\n    static _createMouseTarget(ctx, request, domHitTestExecuted) {\n        // console.log(`${domHitTestExecuted ? '=>' : ''}CAME IN REQUEST: ${request}`);\n        // First ensure the request has a target\n        if (request.target === null) {\n            if (domHitTestExecuted) {\n                // Still no target... and we have already executed hit test...\n                return request.fulfillUnknown();\n            }\n            const hitTestResult = MouseTargetFactory._doHitTest(ctx, request);\n            if (hitTestResult.type === 1 /* HitTestResultType.Content */) {\n                return MouseTargetFactory.createMouseTargetFromHitTestPosition(ctx, request, hitTestResult.spanNode, hitTestResult.position, hitTestResult.injectedText);\n            }\n            return this._createMouseTarget(ctx, request.withTarget(hitTestResult.hitTarget), true);\n        }\n        // we know for a fact that request.target is not null\n        const resolvedRequest = request;\n        let result = null;\n        if (!ElementPath.isChildOfOverflowGuard(request.targetPath) && !ElementPath.isChildOfOverflowingContentWidgets(request.targetPath)) {\n            // We only render dom nodes inside the overflow guard or in the overflowing content widgets\n            result = result || request.fulfillUnknown();\n        }\n        result = result || MouseTargetFactory._hitTestContentWidget(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestOverlayWidget(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestMinimap(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestScrollbarSlider(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestViewZone(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestMargin(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestViewCursor(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestTextArea(ctx, resolvedRequest);\n        result = result || MouseTargetFactory._hitTestViewLines(ctx, resolvedRequest, domHitTestExecuted);\n        result = result || MouseTargetFactory._hitTestScrollbar(ctx, resolvedRequest);\n        return (result || request.fulfillUnknown());\n    }\n    static _hitTestContentWidget(ctx, request) {\n        // Is it a content widget?\n        if (ElementPath.isChildOfContentWidgets(request.targetPath) || ElementPath.isChildOfOverflowingContentWidgets(request.targetPath)) {\n            const widgetId = ctx.findAttribute(request.target, 'widgetId');\n            if (widgetId) {\n                return request.fulfillContentWidget(widgetId);\n            }\n            else {\n                return request.fulfillUnknown();\n            }\n        }\n        return null;\n    }\n    static _hitTestOverlayWidget(ctx, request) {\n        // Is it an overlay widget?\n        if (ElementPath.isChildOfOverlayWidgets(request.targetPath)) {\n            const widgetId = ctx.findAttribute(request.target, 'widgetId');\n            if (widgetId) {\n                return request.fulfillOverlayWidget(widgetId);\n            }\n            else {\n                return request.fulfillUnknown();\n            }\n        }\n        return null;\n    }\n    static _hitTestViewCursor(ctx, request) {\n        if (request.target) {\n            // Check if we've hit a painted cursor\n            const lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\n            for (const d of lastViewCursorsRenderData) {\n                if (request.target === d.domNode) {\n                    return request.fulfillContentText(d.position, null, { mightBeForeignElement: false, injectedText: null });\n                }\n            }\n        }\n        if (request.isInContentArea) {\n            // Edge has a bug when hit-testing the exact position of a cursor,\n            // instead of returning the correct dom node, it returns the\n            // first or last rendered view line dom node, therefore help it out\n            // and first check if we are on top of a cursor\n            const lastViewCursorsRenderData = ctx.lastRenderData.lastViewCursorsRenderData;\n            const mouseContentHorizontalOffset = request.mouseContentHorizontalOffset;\n            const mouseVerticalOffset = request.mouseVerticalOffset;\n            for (const d of lastViewCursorsRenderData) {\n                if (mouseContentHorizontalOffset < d.contentLeft) {\n                    // mouse position is to the left of the cursor\n                    continue;\n                }\n                if (mouseContentHorizontalOffset > d.contentLeft + d.width) {\n                    // mouse position is to the right of the cursor\n                    continue;\n                }\n                const cursorVerticalOffset = ctx.getVerticalOffsetForLineNumber(d.position.lineNumber);\n                if (cursorVerticalOffset <= mouseVerticalOffset\n                    && mouseVerticalOffset <= cursorVerticalOffset + d.height) {\n                    return request.fulfillContentText(d.position, null, { mightBeForeignElement: false, injectedText: null });\n                }\n            }\n        }\n        return null;\n    }\n    static _hitTestViewZone(ctx, request) {\n        const viewZoneData = ctx.getZoneAtCoord(request.mouseVerticalOffset);\n        if (viewZoneData) {\n            const mouseTargetType = (request.isInContentArea ? 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ : 5 /* MouseTargetType.GUTTER_VIEW_ZONE */);\n            return request.fulfillViewZone(mouseTargetType, viewZoneData.position, viewZoneData);\n        }\n        return null;\n    }\n    static _hitTestTextArea(ctx, request) {\n        // Is it the textarea?\n        if (ElementPath.isTextArea(request.targetPath)) {\n            if (ctx.lastRenderData.lastTextareaPosition) {\n                return request.fulfillContentText(ctx.lastRenderData.lastTextareaPosition, null, { mightBeForeignElement: false, injectedText: null });\n            }\n            return request.fulfillTextarea();\n        }\n        return null;\n    }\n    static _hitTestMargin(ctx, request) {\n        if (request.isInMarginArea) {\n            const res = ctx.getFullLineRangeAtCoord(request.mouseVerticalOffset);\n            const pos = res.range.getStartPosition();\n            let offset = Math.abs(request.relativePos.x);\n            const detail = {\n                isAfterLines: res.isAfterLines,\n                glyphMarginLeft: ctx.layoutInfo.glyphMarginLeft,\n                glyphMarginWidth: ctx.layoutInfo.glyphMarginWidth,\n                lineNumbersWidth: ctx.layoutInfo.lineNumbersWidth,\n                offsetX: offset\n            };\n            offset -= ctx.layoutInfo.glyphMarginLeft;\n            if (offset <= ctx.layoutInfo.glyphMarginWidth) {\n                // On the glyph margin\n                return request.fulfillMargin(2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */, pos, res.range, detail);\n            }\n            offset -= ctx.layoutInfo.glyphMarginWidth;\n            if (offset <= ctx.layoutInfo.lineNumbersWidth) {\n                // On the line numbers\n                return request.fulfillMargin(3 /* MouseTargetType.GUTTER_LINE_NUMBERS */, pos, res.range, detail);\n            }\n            offset -= ctx.layoutInfo.lineNumbersWidth;\n            // On the line decorations\n            return request.fulfillMargin(4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */, pos, res.range, detail);\n        }\n        return null;\n    }\n    static _hitTestViewLines(ctx, request, domHitTestExecuted) {\n        if (!ElementPath.isChildOfViewLines(request.targetPath)) {\n            return null;\n        }\n        if (ctx.isInTopPadding(request.mouseVerticalOffset)) {\n            return request.fulfillContentEmpty(new Position(1, 1), EMPTY_CONTENT_AFTER_LINES);\n        }\n        // Check if it is below any lines and any view zones\n        if (ctx.isAfterLines(request.mouseVerticalOffset) || ctx.isInBottomPadding(request.mouseVerticalOffset)) {\n            // This most likely indicates it happened after the last view-line\n            const lineCount = ctx.viewModel.getLineCount();\n            const maxLineColumn = ctx.viewModel.getLineMaxColumn(lineCount);\n            return request.fulfillContentEmpty(new Position(lineCount, maxLineColumn), EMPTY_CONTENT_AFTER_LINES);\n        }\n        if (domHitTestExecuted) {\n            // Check if we are hitting a view-line (can happen in the case of inline decorations on empty lines)\n            // See https://github.com/microsoft/vscode/issues/46942\n            if (ElementPath.isStrictChildOfViewLines(request.targetPath)) {\n                const lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n                if (ctx.viewModel.getLineLength(lineNumber) === 0) {\n                    const lineWidth = ctx.getLineWidth(lineNumber);\n                    const detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n                    return request.fulfillContentEmpty(new Position(lineNumber, 1), detail);\n                }\n                const lineWidth = ctx.getLineWidth(lineNumber);\n                if (request.mouseContentHorizontalOffset >= lineWidth) {\n                    const detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n                    const pos = new Position(lineNumber, ctx.viewModel.getLineMaxColumn(lineNumber));\n                    return request.fulfillContentEmpty(pos, detail);\n                }\n            }\n            // We have already executed hit test...\n            return request.fulfillUnknown();\n        }\n        const hitTestResult = MouseTargetFactory._doHitTest(ctx, request);\n        if (hitTestResult.type === 1 /* HitTestResultType.Content */) {\n            return MouseTargetFactory.createMouseTargetFromHitTestPosition(ctx, request, hitTestResult.spanNode, hitTestResult.position, hitTestResult.injectedText);\n        }\n        return this._createMouseTarget(ctx, request.withTarget(hitTestResult.hitTarget), true);\n    }\n    static _hitTestMinimap(ctx, request) {\n        if (ElementPath.isChildOfMinimap(request.targetPath)) {\n            const possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n            const maxColumn = ctx.viewModel.getLineMaxColumn(possibleLineNumber);\n            return request.fulfillScrollbar(new Position(possibleLineNumber, maxColumn));\n        }\n        return null;\n    }\n    static _hitTestScrollbarSlider(ctx, request) {\n        if (ElementPath.isChildOfScrollableElement(request.targetPath)) {\n            if (request.target && request.target.nodeType === 1) {\n                const className = request.target.className;\n                if (className && /\\b(slider|scrollbar)\\b/.test(className)) {\n                    const possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n                    const maxColumn = ctx.viewModel.getLineMaxColumn(possibleLineNumber);\n                    return request.fulfillScrollbar(new Position(possibleLineNumber, maxColumn));\n                }\n            }\n        }\n        return null;\n    }\n    static _hitTestScrollbar(ctx, request) {\n        // Is it the overview ruler?\n        // Is it a child of the scrollable element?\n        if (ElementPath.isChildOfScrollableElement(request.targetPath)) {\n            const possibleLineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n            const maxColumn = ctx.viewModel.getLineMaxColumn(possibleLineNumber);\n            return request.fulfillScrollbar(new Position(possibleLineNumber, maxColumn));\n        }\n        return null;\n    }\n    getMouseColumn(relativePos) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        const mouseContentHorizontalOffset = this._context.viewLayout.getCurrentScrollLeft() + relativePos.x - layoutInfo.contentLeft;\n        return MouseTargetFactory._getMouseColumn(mouseContentHorizontalOffset, options.get(50 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth);\n    }\n    static _getMouseColumn(mouseContentHorizontalOffset, typicalHalfwidthCharacterWidth) {\n        if (mouseContentHorizontalOffset < 0) {\n            return 1;\n        }\n        const chars = Math.round(mouseContentHorizontalOffset / typicalHalfwidthCharacterWidth);\n        return (chars + 1);\n    }\n    static createMouseTargetFromHitTestPosition(ctx, request, spanNode, pos, injectedText) {\n        const lineNumber = pos.lineNumber;\n        const column = pos.column;\n        const lineWidth = ctx.getLineWidth(lineNumber);\n        if (request.mouseContentHorizontalOffset > lineWidth) {\n            const detail = createEmptyContentDataInLines(request.mouseContentHorizontalOffset - lineWidth);\n            return request.fulfillContentEmpty(pos, detail);\n        }\n        const visibleRange = ctx.visibleRangeForPosition(lineNumber, column);\n        if (!visibleRange) {\n            return request.fulfillUnknown(pos);\n        }\n        const columnHorizontalOffset = visibleRange.left;\n        if (Math.abs(request.mouseContentHorizontalOffset - columnHorizontalOffset) < 1) {\n            return request.fulfillContentText(pos, null, { mightBeForeignElement: !!injectedText, injectedText });\n        }\n        const points = [];\n        points.push({ offset: visibleRange.left, column: column });\n        if (column > 1) {\n            const visibleRange = ctx.visibleRangeForPosition(lineNumber, column - 1);\n            if (visibleRange) {\n                points.push({ offset: visibleRange.left, column: column - 1 });\n            }\n        }\n        const lineMaxColumn = ctx.viewModel.getLineMaxColumn(lineNumber);\n        if (column < lineMaxColumn) {\n            const visibleRange = ctx.visibleRangeForPosition(lineNumber, column + 1);\n            if (visibleRange) {\n                points.push({ offset: visibleRange.left, column: column + 1 });\n            }\n        }\n        points.sort((a, b) => a.offset - b.offset);\n        const mouseCoordinates = request.pos.toClientCoordinates();\n        const spanNodeClientRect = spanNode.getBoundingClientRect();\n        const mouseIsOverSpanNode = (spanNodeClientRect.left <= mouseCoordinates.clientX && mouseCoordinates.clientX <= spanNodeClientRect.right);\n        let rng = null;\n        for (let i = 1; i < points.length; i++) {\n            const prev = points[i - 1];\n            const curr = points[i];\n            if (prev.offset <= request.mouseContentHorizontalOffset && request.mouseContentHorizontalOffset <= curr.offset) {\n                rng = new EditorRange(lineNumber, prev.column, lineNumber, curr.column);\n                // See https://github.com/microsoft/vscode/issues/152819\n                // Due to the use of zwj, the browser's hit test result is skewed towards the left\n                // Here we try to correct that if the mouse horizontal offset is closer to the right than the left\n                const prevDelta = Math.abs(prev.offset - request.mouseContentHorizontalOffset);\n                const nextDelta = Math.abs(curr.offset - request.mouseContentHorizontalOffset);\n                pos = (prevDelta < nextDelta\n                    ? new Position(lineNumber, prev.column)\n                    : new Position(lineNumber, curr.column));\n                break;\n            }\n        }\n        return request.fulfillContentText(pos, rng, { mightBeForeignElement: !mouseIsOverSpanNode || !!injectedText, injectedText });\n    }\n    /**\n     * Most probably WebKit browsers and Edge\n     */\n    static _doHitTestWithCaretRangeFromPoint(ctx, request) {\n        // In Chrome, especially on Linux it is possible to click between lines,\n        // so try to adjust the `hity` below so that it lands in the center of a line\n        const lineNumber = ctx.getLineNumberAtVerticalOffset(request.mouseVerticalOffset);\n        const lineStartVerticalOffset = ctx.getVerticalOffsetForLineNumber(lineNumber);\n        const lineEndVerticalOffset = lineStartVerticalOffset + ctx.lineHeight;\n        const isBelowLastLine = (lineNumber === ctx.viewModel.getLineCount()\n            && request.mouseVerticalOffset > lineEndVerticalOffset);\n        if (!isBelowLastLine) {\n            const lineCenteredVerticalOffset = Math.floor((lineStartVerticalOffset + lineEndVerticalOffset) / 2);\n            let adjustedPageY = request.pos.y + (lineCenteredVerticalOffset - request.mouseVerticalOffset);\n            if (adjustedPageY <= request.editorPos.y) {\n                adjustedPageY = request.editorPos.y + 1;\n            }\n            if (adjustedPageY >= request.editorPos.y + request.editorPos.height) {\n                adjustedPageY = request.editorPos.y + request.editorPos.height - 1;\n            }\n            const adjustedPage = new PageCoordinates(request.pos.x, adjustedPageY);\n            const r = this._actualDoHitTestWithCaretRangeFromPoint(ctx, adjustedPage.toClientCoordinates());\n            if (r.type === 1 /* HitTestResultType.Content */) {\n                return r;\n            }\n        }\n        // Also try to hit test without the adjustment (for the edge cases that we are near the top or bottom)\n        return this._actualDoHitTestWithCaretRangeFromPoint(ctx, request.pos.toClientCoordinates());\n    }\n    static _actualDoHitTestWithCaretRangeFromPoint(ctx, coords) {\n        const shadowRoot = dom.getShadowRoot(ctx.viewDomNode);\n        let range;\n        if (shadowRoot) {\n            if (typeof shadowRoot.caretRangeFromPoint === 'undefined') {\n                range = shadowCaretRangeFromPoint(shadowRoot, coords.clientX, coords.clientY);\n            }\n            else {\n                range = shadowRoot.caretRangeFromPoint(coords.clientX, coords.clientY);\n            }\n        }\n        else {\n            range = ctx.viewDomNode.ownerDocument.caretRangeFromPoint(coords.clientX, coords.clientY);\n        }\n        if (!range || !range.startContainer) {\n            return new UnknownHitTestResult();\n        }\n        // Chrome always hits a TEXT_NODE, while Edge sometimes hits a token span\n        const startContainer = range.startContainer;\n        if (startContainer.nodeType === startContainer.TEXT_NODE) {\n            // startContainer is expected to be the token text\n            const parent1 = startContainer.parentNode; // expected to be the token span\n            const parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\n            const parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\n            const parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? parent3.className : null;\n            if (parent3ClassName === ViewLine.CLASS_NAME) {\n                return HitTestResult.createFromDOMInfo(ctx, parent1, range.startOffset);\n            }\n            else {\n                return new UnknownHitTestResult(startContainer.parentNode);\n            }\n        }\n        else if (startContainer.nodeType === startContainer.ELEMENT_NODE) {\n            // startContainer is expected to be the token span\n            const parent1 = startContainer.parentNode; // expected to be the view line container span\n            const parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line div\n            const parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? parent2.className : null;\n            if (parent2ClassName === ViewLine.CLASS_NAME) {\n                return HitTestResult.createFromDOMInfo(ctx, startContainer, startContainer.textContent.length);\n            }\n            else {\n                return new UnknownHitTestResult(startContainer);\n            }\n        }\n        return new UnknownHitTestResult();\n    }\n    /**\n     * Most probably Gecko\n     */\n    static _doHitTestWithCaretPositionFromPoint(ctx, coords) {\n        const hitResult = ctx.viewDomNode.ownerDocument.caretPositionFromPoint(coords.clientX, coords.clientY);\n        if (hitResult.offsetNode.nodeType === hitResult.offsetNode.TEXT_NODE) {\n            // offsetNode is expected to be the token text\n            const parent1 = hitResult.offsetNode.parentNode; // expected to be the token span\n            const parent2 = parent1 ? parent1.parentNode : null; // expected to be the view line container span\n            const parent3 = parent2 ? parent2.parentNode : null; // expected to be the view line div\n            const parent3ClassName = parent3 && parent3.nodeType === parent3.ELEMENT_NODE ? parent3.className : null;\n            if (parent3ClassName === ViewLine.CLASS_NAME) {\n                return HitTestResult.createFromDOMInfo(ctx, hitResult.offsetNode.parentNode, hitResult.offset);\n            }\n            else {\n                return new UnknownHitTestResult(hitResult.offsetNode.parentNode);\n            }\n        }\n        // For inline decorations, Gecko sometimes returns the `<span>` of the line and the offset is the `<span>` with the inline decoration\n        // Some other times, it returns the `<span>` with the inline decoration\n        if (hitResult.offsetNode.nodeType === hitResult.offsetNode.ELEMENT_NODE) {\n            const parent1 = hitResult.offsetNode.parentNode;\n            const parent1ClassName = parent1 && parent1.nodeType === parent1.ELEMENT_NODE ? parent1.className : null;\n            const parent2 = parent1 ? parent1.parentNode : null;\n            const parent2ClassName = parent2 && parent2.nodeType === parent2.ELEMENT_NODE ? parent2.className : null;\n            if (parent1ClassName === ViewLine.CLASS_NAME) {\n                // it returned the `<span>` of the line and the offset is the `<span>` with the inline decoration\n                const tokenSpan = hitResult.offsetNode.childNodes[Math.min(hitResult.offset, hitResult.offsetNode.childNodes.length - 1)];\n                if (tokenSpan) {\n                    return HitTestResult.createFromDOMInfo(ctx, tokenSpan, 0);\n                }\n            }\n            else if (parent2ClassName === ViewLine.CLASS_NAME) {\n                // it returned the `<span>` with the inline decoration\n                return HitTestResult.createFromDOMInfo(ctx, hitResult.offsetNode, 0);\n            }\n        }\n        return new UnknownHitTestResult(hitResult.offsetNode);\n    }\n    static _snapToSoftTabBoundary(position, viewModel) {\n        const lineContent = viewModel.getLineContent(position.lineNumber);\n        const { tabSize } = viewModel.model.getOptions();\n        const newPosition = AtomicTabMoveOperations.atomicPosition(lineContent, position.column - 1, tabSize, 2 /* Direction.Nearest */);\n        if (newPosition !== -1) {\n            return new Position(position.lineNumber, newPosition + 1);\n        }\n        return position;\n    }\n    static _doHitTest(ctx, request) {\n        let result = new UnknownHitTestResult();\n        if (typeof ctx.viewDomNode.ownerDocument.caretRangeFromPoint === 'function') {\n            result = this._doHitTestWithCaretRangeFromPoint(ctx, request);\n        }\n        else if (ctx.viewDomNode.ownerDocument.caretPositionFromPoint) {\n            result = this._doHitTestWithCaretPositionFromPoint(ctx, request.pos.toClientCoordinates());\n        }\n        if (result.type === 1 /* HitTestResultType.Content */) {\n            const injectedText = ctx.viewModel.getInjectedTextAt(result.position);\n            const normalizedPosition = ctx.viewModel.normalizePosition(result.position, 2 /* PositionAffinity.None */);\n            if (injectedText || !normalizedPosition.equals(result.position)) {\n                result = new ContentHitTestResult(normalizedPosition, result.spanNode, injectedText);\n            }\n        }\n        return result;\n    }\n}\nfunction shadowCaretRangeFromPoint(shadowRoot, x, y) {\n    const range = document.createRange();\n    // Get the element under the point\n    let el = shadowRoot.elementFromPoint(x, y);\n    if (el !== null) {\n        // Get the last child of the element until its firstChild is a text node\n        // This assumes that the pointer is on the right of the line, out of the tokens\n        // and that we want to get the offset of the last token of the line\n        while (el && el.firstChild && el.firstChild.nodeType !== el.firstChild.TEXT_NODE && el.lastChild && el.lastChild.firstChild) {\n            el = el.lastChild;\n        }\n        // Grab its rect\n        const rect = el.getBoundingClientRect();\n        // And its font (the computed shorthand font property might be empty, see #3217)\n        const fontStyle = window.getComputedStyle(el, null).getPropertyValue('font-style');\n        const fontVariant = window.getComputedStyle(el, null).getPropertyValue('font-variant');\n        const fontWeight = window.getComputedStyle(el, null).getPropertyValue('font-weight');\n        const fontSize = window.getComputedStyle(el, null).getPropertyValue('font-size');\n        const lineHeight = window.getComputedStyle(el, null).getPropertyValue('line-height');\n        const fontFamily = window.getComputedStyle(el, null).getPropertyValue('font-family');\n        const font = `${fontStyle} ${fontVariant} ${fontWeight} ${fontSize}/${lineHeight} ${fontFamily}`;\n        // And also its txt content\n        const text = el.innerText;\n        // Position the pixel cursor at the left of the element\n        let pixelCursor = rect.left;\n        let offset = 0;\n        let step;\n        // If the point is on the right of the box put the cursor after the last character\n        if (x > rect.left + rect.width) {\n            offset = text.length;\n        }\n        else {\n            const charWidthReader = CharWidthReader.getInstance();\n            // Goes through all the characters of the innerText, and checks if the x of the point\n            // belongs to the character.\n            for (let i = 0; i < text.length + 1; i++) {\n                // The step is half the width of the character\n                step = charWidthReader.getCharWidth(text.charAt(i), font) / 2;\n                // Move to the center of the character\n                pixelCursor += step;\n                // If the x of the point is smaller that the position of the cursor, the point is over that character\n                if (x < pixelCursor) {\n                    offset = i;\n                    break;\n                }\n                // Move between the current character and the next\n                pixelCursor += step;\n            }\n        }\n        // Creates a range with the text node of the element and set the offset found\n        range.setStart(el.firstChild, offset);\n        range.setEnd(el.firstChild, offset);\n    }\n    return range;\n}\nclass CharWidthReader {\n    static getInstance() {\n        if (!CharWidthReader._INSTANCE) {\n            CharWidthReader._INSTANCE = new CharWidthReader();\n        }\n        return CharWidthReader._INSTANCE;\n    }\n    constructor() {\n        this._cache = {};\n        this._canvas = document.createElement('canvas');\n    }\n    getCharWidth(char, font) {\n        const cacheKey = char + font;\n        if (this._cache[cacheKey]) {\n            return this._cache[cacheKey];\n        }\n        const context = this._canvas.getContext('2d');\n        context.font = font;\n        const metrics = context.measureText(char);\n        const width = metrics.width;\n        this._cache[cacheKey] = width;\n        return width;\n    }\n}\nCharWidthReader._INSTANCE = null;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardWheelEvent } from '../../../base/browser/mouseEvent.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { HitTestContext, MouseTarget, MouseTargetFactory } from './mouseTarget.js';\nimport { ClientCoordinates, EditorMouseEvent, EditorMouseEventFactory, GlobalEditorPointerMoveMonitor, createEditorPagePosition, createCoordinatesRelativeToEditor, PageCoordinates } from '../editorDom.js';\nimport { EditorZoom } from '../../common/config/editorZoom.js';\nimport { Position } from '../../common/core/position.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { ViewEventHandler } from '../../common/viewEventHandler.js';\nimport { MouseWheelClassifier } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\nexport class MouseHandler extends ViewEventHandler {\n    constructor(context, viewController, viewHelper) {\n        super();\n        this._mouseLeaveMonitor = null;\n        this._context = context;\n        this.viewController = viewController;\n        this.viewHelper = viewHelper;\n        this.mouseTargetFactory = new MouseTargetFactory(this._context, viewHelper);\n        this._mouseDownOperation = this._register(new MouseDownOperation(this._context, this.viewController, this.viewHelper, this.mouseTargetFactory, (e, testEventTarget) => this._createMouseTarget(e, testEventTarget), (e) => this._getMouseColumn(e)));\n        this.lastMouseLeaveTime = -1;\n        this._height = this._context.configuration.options.get(143 /* EditorOption.layoutInfo */).height;\n        const mouseEvents = new EditorMouseEventFactory(this.viewHelper.viewDomNode);\n        this._register(mouseEvents.onContextMenu(this.viewHelper.viewDomNode, (e) => this._onContextMenu(e, true)));\n        this._register(mouseEvents.onMouseMove(this.viewHelper.viewDomNode, (e) => {\n            this._onMouseMove(e);\n            // See https://github.com/microsoft/vscode/issues/138789\n            // When moving the mouse really quickly, the browser sometimes forgets to\n            // send us a `mouseleave` or `mouseout` event. We therefore install here\n            // a global `mousemove` listener to manually recover if the mouse goes outside\n            // the editor. As soon as the mouse leaves outside of the editor, we\n            // remove this listener\n            if (!this._mouseLeaveMonitor) {\n                this._mouseLeaveMonitor = dom.addDisposableListener(this.viewHelper.viewDomNode.ownerDocument, 'mousemove', (e) => {\n                    if (!this.viewHelper.viewDomNode.contains(e.target)) {\n                        // went outside the editor!\n                        this._onMouseLeave(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode));\n                    }\n                });\n            }\n        }));\n        this._register(mouseEvents.onMouseUp(this.viewHelper.viewDomNode, (e) => this._onMouseUp(e)));\n        this._register(mouseEvents.onMouseLeave(this.viewHelper.viewDomNode, (e) => this._onMouseLeave(e)));\n        // `pointerdown` events can't be used to determine if there's a double click, or triple click\n        // because their `e.detail` is always 0.\n        // We will therefore save the pointer id for the mouse and then reuse it in the `mousedown` event\n        // for `element.setPointerCapture`.\n        let capturePointerId = 0;\n        this._register(mouseEvents.onPointerDown(this.viewHelper.viewDomNode, (e, pointerId) => {\n            capturePointerId = pointerId;\n        }));\n        // The `pointerup` listener registered by `GlobalEditorPointerMoveMonitor` does not get invoked 100% of the times.\n        // I speculate that this is because the `pointerup` listener is only registered during the `mousedown` event, and perhaps\n        // the `pointerup` event is already queued for dispatching, which makes it that the new listener doesn't get fired.\n        // See https://github.com/microsoft/vscode/issues/146486 for repro steps.\n        // To compensate for that, we simply register here a `pointerup` listener and just communicate it.\n        this._register(dom.addDisposableListener(this.viewHelper.viewDomNode, dom.EventType.POINTER_UP, (e) => {\n            this._mouseDownOperation.onPointerUp();\n        }));\n        this._register(mouseEvents.onMouseDown(this.viewHelper.viewDomNode, (e) => this._onMouseDown(e, capturePointerId)));\n        this._setupMouseWheelZoomListener();\n        this._context.addEventHandler(this);\n    }\n    _setupMouseWheelZoomListener() {\n        const classifier = MouseWheelClassifier.INSTANCE;\n        let prevMouseWheelTime = 0;\n        let gestureStartZoomLevel = EditorZoom.getZoomLevel();\n        let gestureHasZoomModifiers = false;\n        let gestureAccumulatedDelta = 0;\n        const onMouseWheel = (browserEvent) => {\n            this.viewController.emitMouseWheel(browserEvent);\n            if (!this._context.configuration.options.get(75 /* EditorOption.mouseWheelZoom */)) {\n                return;\n            }\n            const e = new StandardWheelEvent(browserEvent);\n            classifier.acceptStandardWheelEvent(e);\n            if (classifier.isPhysicalMouseWheel()) {\n                if (hasMouseWheelZoomModifiers(browserEvent)) {\n                    const zoomLevel = EditorZoom.getZoomLevel();\n                    const delta = e.deltaY > 0 ? 1 : -1;\n                    EditorZoom.setZoomLevel(zoomLevel + delta);\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n            }\n            else {\n                // we consider mousewheel events that occur within 50ms of each other to be part of the same gesture\n                // we don't want to consider mouse wheel events where ctrl/cmd is pressed during the inertia phase\n                // we also want to accumulate deltaY values from the same gesture and use that to set the zoom level\n                if (Date.now() - prevMouseWheelTime > 50) {\n                    // reset if more than 50ms have passed\n                    gestureStartZoomLevel = EditorZoom.getZoomLevel();\n                    gestureHasZoomModifiers = hasMouseWheelZoomModifiers(browserEvent);\n                    gestureAccumulatedDelta = 0;\n                }\n                prevMouseWheelTime = Date.now();\n                gestureAccumulatedDelta += e.deltaY;\n                if (gestureHasZoomModifiers) {\n                    EditorZoom.setZoomLevel(gestureStartZoomLevel + gestureAccumulatedDelta / 5);\n                    e.preventDefault();\n                    e.stopPropagation();\n                }\n            }\n        };\n        this._register(dom.addDisposableListener(this.viewHelper.viewDomNode, dom.EventType.MOUSE_WHEEL, onMouseWheel, { capture: true, passive: false }));\n        function hasMouseWheelZoomModifiers(browserEvent) {\n            return (platform.isMacintosh\n                // on macOS we support cmd + two fingers scroll (`metaKey` set)\n                // and also the two fingers pinch gesture (`ctrKey` set)\n                ? ((browserEvent.metaKey || browserEvent.ctrlKey) && !browserEvent.shiftKey && !browserEvent.altKey)\n                : (browserEvent.ctrlKey && !browserEvent.metaKey && !browserEvent.shiftKey && !browserEvent.altKey));\n        }\n    }\n    dispose() {\n        this._context.removeEventHandler(this);\n        if (this._mouseLeaveMonitor) {\n            this._mouseLeaveMonitor.dispose();\n            this._mouseLeaveMonitor = null;\n        }\n        super.dispose();\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        if (e.hasChanged(143 /* EditorOption.layoutInfo */)) {\n            // layout change\n            const height = this._context.configuration.options.get(143 /* EditorOption.layoutInfo */).height;\n            if (this._height !== height) {\n                this._height = height;\n                this._mouseDownOperation.onHeightChanged();\n            }\n        }\n        return false;\n    }\n    onCursorStateChanged(e) {\n        this._mouseDownOperation.onCursorStateChanged(e);\n        return false;\n    }\n    onFocusChanged(e) {\n        return false;\n    }\n    // --- end event handlers\n    getTargetAtClientPoint(clientX, clientY) {\n        const clientPos = new ClientCoordinates(clientX, clientY);\n        const pos = clientPos.toPageCoordinates();\n        const editorPos = createEditorPagePosition(this.viewHelper.viewDomNode);\n        if (pos.y < editorPos.y || pos.y > editorPos.y + editorPos.height || pos.x < editorPos.x || pos.x > editorPos.x + editorPos.width) {\n            return null;\n        }\n        const relativePos = createCoordinatesRelativeToEditor(this.viewHelper.viewDomNode, editorPos, pos);\n        return this.mouseTargetFactory.createMouseTarget(this.viewHelper.getLastRenderData(), editorPos, pos, relativePos, null);\n    }\n    _createMouseTarget(e, testEventTarget) {\n        let target = e.target;\n        if (!this.viewHelper.viewDomNode.contains(target)) {\n            const shadowRoot = dom.getShadowRoot(this.viewHelper.viewDomNode);\n            if (shadowRoot) {\n                target = shadowRoot.elementsFromPoint(e.posx, e.posy).find((el) => this.viewHelper.viewDomNode.contains(el));\n            }\n        }\n        return this.mouseTargetFactory.createMouseTarget(this.viewHelper.getLastRenderData(), e.editorPos, e.pos, e.relativePos, testEventTarget ? target : null);\n    }\n    _getMouseColumn(e) {\n        return this.mouseTargetFactory.getMouseColumn(e.relativePos);\n    }\n    _onContextMenu(e, testEventTarget) {\n        this.viewController.emitContextMenu({\n            event: e,\n            target: this._createMouseTarget(e, testEventTarget)\n        });\n    }\n    _onMouseMove(e) {\n        const targetIsWidget = this.mouseTargetFactory.mouseTargetIsWidget(e);\n        if (!targetIsWidget) {\n            e.preventDefault();\n        }\n        if (this._mouseDownOperation.isActive()) {\n            // In selection/drag operation\n            return;\n        }\n        const actualMouseMoveTime = e.timestamp;\n        if (actualMouseMoveTime < this.lastMouseLeaveTime) {\n            // Due to throttling, this event occurred before the mouse left the editor, therefore ignore it.\n            return;\n        }\n        this.viewController.emitMouseMove({\n            event: e,\n            target: this._createMouseTarget(e, true)\n        });\n    }\n    _onMouseLeave(e) {\n        if (this._mouseLeaveMonitor) {\n            this._mouseLeaveMonitor.dispose();\n            this._mouseLeaveMonitor = null;\n        }\n        this.lastMouseLeaveTime = (new Date()).getTime();\n        this.viewController.emitMouseLeave({\n            event: e,\n            target: null\n        });\n    }\n    _onMouseUp(e) {\n        this.viewController.emitMouseUp({\n            event: e,\n            target: this._createMouseTarget(e, true)\n        });\n    }\n    _onMouseDown(e, pointerId) {\n        const t = this._createMouseTarget(e, true);\n        const targetIsContent = (t.type === 6 /* MouseTargetType.CONTENT_TEXT */ || t.type === 7 /* MouseTargetType.CONTENT_EMPTY */);\n        const targetIsGutter = (t.type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */ || t.type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */ || t.type === 4 /* MouseTargetType.GUTTER_LINE_DECORATIONS */);\n        const targetIsLineNumbers = (t.type === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */);\n        const selectOnLineNumbers = this._context.configuration.options.get(108 /* EditorOption.selectOnLineNumbers */);\n        const targetIsViewZone = (t.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || t.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */);\n        const targetIsWidget = (t.type === 9 /* MouseTargetType.CONTENT_WIDGET */);\n        let shouldHandle = e.leftButton || e.middleButton;\n        if (platform.isMacintosh && e.leftButton && e.ctrlKey) {\n            shouldHandle = false;\n        }\n        const focus = () => {\n            e.preventDefault();\n            this.viewHelper.focusTextArea();\n        };\n        if (shouldHandle && (targetIsContent || (targetIsLineNumbers && selectOnLineNumbers))) {\n            focus();\n            this._mouseDownOperation.start(t.type, e, pointerId);\n        }\n        else if (targetIsGutter) {\n            // Do not steal focus\n            e.preventDefault();\n        }\n        else if (targetIsViewZone) {\n            const viewZoneData = t.detail;\n            if (shouldHandle && this.viewHelper.shouldSuppressMouseDownOnViewZone(viewZoneData.viewZoneId)) {\n                focus();\n                this._mouseDownOperation.start(t.type, e, pointerId);\n                e.preventDefault();\n            }\n        }\n        else if (targetIsWidget && this.viewHelper.shouldSuppressMouseDownOnWidget(t.detail)) {\n            focus();\n            e.preventDefault();\n        }\n        this.viewController.emitMouseDown({\n            event: e,\n            target: t\n        });\n    }\n}\nclass MouseDownOperation extends Disposable {\n    constructor(_context, _viewController, _viewHelper, _mouseTargetFactory, createMouseTarget, getMouseColumn) {\n        super();\n        this._context = _context;\n        this._viewController = _viewController;\n        this._viewHelper = _viewHelper;\n        this._mouseTargetFactory = _mouseTargetFactory;\n        this._createMouseTarget = createMouseTarget;\n        this._getMouseColumn = getMouseColumn;\n        this._mouseMoveMonitor = this._register(new GlobalEditorPointerMoveMonitor(this._viewHelper.viewDomNode));\n        this._topBottomDragScrolling = this._register(new TopBottomDragScrolling(this._context, this._viewHelper, this._mouseTargetFactory, (position, inSelectionMode, revealType) => this._dispatchMouse(position, inSelectionMode, revealType)));\n        this._mouseState = new MouseDownState();\n        this._currentSelection = new Selection(1, 1, 1, 1);\n        this._isActive = false;\n        this._lastMouseEvent = null;\n    }\n    dispose() {\n        super.dispose();\n    }\n    isActive() {\n        return this._isActive;\n    }\n    _onMouseDownThenMove(e) {\n        this._lastMouseEvent = e;\n        this._mouseState.setModifiers(e);\n        const position = this._findMousePosition(e, false);\n        if (!position) {\n            // Ignoring because position is unknown\n            return;\n        }\n        if (this._mouseState.isDragAndDrop) {\n            this._viewController.emitMouseDrag({\n                event: e,\n                target: position\n            });\n        }\n        else {\n            if (position.type === 13 /* MouseTargetType.OUTSIDE_EDITOR */ && (position.outsidePosition === 'above' || position.outsidePosition === 'below')) {\n                this._topBottomDragScrolling.start(position, e);\n            }\n            else {\n                this._topBottomDragScrolling.stop();\n                this._dispatchMouse(position, true, 1 /* NavigationCommandRevealType.Minimal */);\n            }\n        }\n    }\n    start(targetType, e, pointerId) {\n        this._lastMouseEvent = e;\n        this._mouseState.setStartedOnLineNumbers(targetType === 3 /* MouseTargetType.GUTTER_LINE_NUMBERS */);\n        this._mouseState.setStartButtons(e);\n        this._mouseState.setModifiers(e);\n        const position = this._findMousePosition(e, true);\n        if (!position || !position.position) {\n            // Ignoring because position is unknown\n            return;\n        }\n        this._mouseState.trySetCount(e.detail, position.position);\n        // Overwrite the detail of the MouseEvent, as it will be sent out in an event and contributions might rely on it.\n        e.detail = this._mouseState.count;\n        const options = this._context.configuration.options;\n        if (!options.get(90 /* EditorOption.readOnly */)\n            && options.get(35 /* EditorOption.dragAndDrop */)\n            && !options.get(22 /* EditorOption.columnSelection */)\n            && !this._mouseState.altKey // we don't support multiple mouse\n            && e.detail < 2 // only single click on a selection can work\n            && !this._isActive // the mouse is not down yet\n            && !this._currentSelection.isEmpty() // we don't drag single cursor\n            && (position.type === 6 /* MouseTargetType.CONTENT_TEXT */) // single click on text\n            && position.position && this._currentSelection.containsPosition(position.position) // single click on a selection\n        ) {\n            this._mouseState.isDragAndDrop = true;\n            this._isActive = true;\n            this._mouseMoveMonitor.startMonitoring(this._viewHelper.viewLinesDomNode, pointerId, e.buttons, (e) => this._onMouseDownThenMove(e), (browserEvent) => {\n                const position = this._findMousePosition(this._lastMouseEvent, false);\n                if (browserEvent && browserEvent instanceof KeyboardEvent) {\n                    // cancel\n                    this._viewController.emitMouseDropCanceled();\n                }\n                else {\n                    this._viewController.emitMouseDrop({\n                        event: this._lastMouseEvent,\n                        target: (position ? this._createMouseTarget(this._lastMouseEvent, true) : null) // Ignoring because position is unknown, e.g., Content View Zone\n                    });\n                }\n                this._stop();\n            });\n            return;\n        }\n        this._mouseState.isDragAndDrop = false;\n        this._dispatchMouse(position, e.shiftKey, 1 /* NavigationCommandRevealType.Minimal */);\n        if (!this._isActive) {\n            this._isActive = true;\n            this._mouseMoveMonitor.startMonitoring(this._viewHelper.viewLinesDomNode, pointerId, e.buttons, (e) => this._onMouseDownThenMove(e), () => this._stop());\n        }\n    }\n    _stop() {\n        this._isActive = false;\n        this._topBottomDragScrolling.stop();\n    }\n    onHeightChanged() {\n        this._mouseMoveMonitor.stopMonitoring();\n    }\n    onPointerUp() {\n        this._mouseMoveMonitor.stopMonitoring();\n    }\n    onCursorStateChanged(e) {\n        this._currentSelection = e.selections[0];\n    }\n    _getPositionOutsideEditor(e) {\n        const editorContent = e.editorPos;\n        const model = this._context.viewModel;\n        const viewLayout = this._context.viewLayout;\n        const mouseColumn = this._getMouseColumn(e);\n        if (e.posy < editorContent.y) {\n            const outsideDistance = editorContent.y - e.posy;\n            const verticalOffset = Math.max(viewLayout.getCurrentScrollTop() - outsideDistance, 0);\n            const viewZoneData = HitTestContext.getZoneAtCoord(this._context, verticalOffset);\n            if (viewZoneData) {\n                const newPosition = this._helpPositionJumpOverViewZone(viewZoneData);\n                if (newPosition) {\n                    return MouseTarget.createOutsideEditor(mouseColumn, newPosition, 'above', outsideDistance);\n                }\n            }\n            const aboveLineNumber = viewLayout.getLineNumberAtVerticalOffset(verticalOffset);\n            return MouseTarget.createOutsideEditor(mouseColumn, new Position(aboveLineNumber, 1), 'above', outsideDistance);\n        }\n        if (e.posy > editorContent.y + editorContent.height) {\n            const outsideDistance = e.posy - editorContent.y - editorContent.height;\n            const verticalOffset = viewLayout.getCurrentScrollTop() + e.relativePos.y;\n            const viewZoneData = HitTestContext.getZoneAtCoord(this._context, verticalOffset);\n            if (viewZoneData) {\n                const newPosition = this._helpPositionJumpOverViewZone(viewZoneData);\n                if (newPosition) {\n                    return MouseTarget.createOutsideEditor(mouseColumn, newPosition, 'below', outsideDistance);\n                }\n            }\n            const belowLineNumber = viewLayout.getLineNumberAtVerticalOffset(verticalOffset);\n            return MouseTarget.createOutsideEditor(mouseColumn, new Position(belowLineNumber, model.getLineMaxColumn(belowLineNumber)), 'below', outsideDistance);\n        }\n        const possibleLineNumber = viewLayout.getLineNumberAtVerticalOffset(viewLayout.getCurrentScrollTop() + e.relativePos.y);\n        if (e.posx < editorContent.x) {\n            const outsideDistance = editorContent.x - e.posx;\n            return MouseTarget.createOutsideEditor(mouseColumn, new Position(possibleLineNumber, 1), 'left', outsideDistance);\n        }\n        if (e.posx > editorContent.x + editorContent.width) {\n            const outsideDistance = e.posx - editorContent.x - editorContent.width;\n            return MouseTarget.createOutsideEditor(mouseColumn, new Position(possibleLineNumber, model.getLineMaxColumn(possibleLineNumber)), 'right', outsideDistance);\n        }\n        return null;\n    }\n    _findMousePosition(e, testEventTarget) {\n        const positionOutsideEditor = this._getPositionOutsideEditor(e);\n        if (positionOutsideEditor) {\n            return positionOutsideEditor;\n        }\n        const t = this._createMouseTarget(e, testEventTarget);\n        const hintedPosition = t.position;\n        if (!hintedPosition) {\n            return null;\n        }\n        if (t.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */ || t.type === 5 /* MouseTargetType.GUTTER_VIEW_ZONE */) {\n            const newPosition = this._helpPositionJumpOverViewZone(t.detail);\n            if (newPosition) {\n                return MouseTarget.createViewZone(t.type, t.element, t.mouseColumn, newPosition, t.detail);\n            }\n        }\n        return t;\n    }\n    _helpPositionJumpOverViewZone(viewZoneData) {\n        // Force position on view zones to go above or below depending on where selection started from\n        const selectionStart = new Position(this._currentSelection.selectionStartLineNumber, this._currentSelection.selectionStartColumn);\n        const positionBefore = viewZoneData.positionBefore;\n        const positionAfter = viewZoneData.positionAfter;\n        if (positionBefore && positionAfter) {\n            if (positionBefore.isBefore(selectionStart)) {\n                return positionBefore;\n            }\n            else {\n                return positionAfter;\n            }\n        }\n        return null;\n    }\n    _dispatchMouse(position, inSelectionMode, revealType) {\n        if (!position.position) {\n            return;\n        }\n        this._viewController.dispatchMouse({\n            position: position.position,\n            mouseColumn: position.mouseColumn,\n            startedOnLineNumbers: this._mouseState.startedOnLineNumbers,\n            revealType,\n            inSelectionMode: inSelectionMode,\n            mouseDownCount: this._mouseState.count,\n            altKey: this._mouseState.altKey,\n            ctrlKey: this._mouseState.ctrlKey,\n            metaKey: this._mouseState.metaKey,\n            shiftKey: this._mouseState.shiftKey,\n            leftButton: this._mouseState.leftButton,\n            middleButton: this._mouseState.middleButton,\n            onInjectedText: position.type === 6 /* MouseTargetType.CONTENT_TEXT */ && position.detail.injectedText !== null\n        });\n    }\n}\nclass TopBottomDragScrolling extends Disposable {\n    constructor(_context, _viewHelper, _mouseTargetFactory, _dispatchMouse) {\n        super();\n        this._context = _context;\n        this._viewHelper = _viewHelper;\n        this._mouseTargetFactory = _mouseTargetFactory;\n        this._dispatchMouse = _dispatchMouse;\n        this._operation = null;\n    }\n    dispose() {\n        super.dispose();\n        this.stop();\n    }\n    start(position, mouseEvent) {\n        if (this._operation) {\n            this._operation.setPosition(position, mouseEvent);\n        }\n        else {\n            this._operation = new TopBottomDragScrollingOperation(this._context, this._viewHelper, this._mouseTargetFactory, this._dispatchMouse, position, mouseEvent);\n        }\n    }\n    stop() {\n        if (this._operation) {\n            this._operation.dispose();\n            this._operation = null;\n        }\n    }\n}\nclass TopBottomDragScrollingOperation extends Disposable {\n    constructor(_context, _viewHelper, _mouseTargetFactory, _dispatchMouse, position, mouseEvent) {\n        super();\n        this._context = _context;\n        this._viewHelper = _viewHelper;\n        this._mouseTargetFactory = _mouseTargetFactory;\n        this._dispatchMouse = _dispatchMouse;\n        this._position = position;\n        this._mouseEvent = mouseEvent;\n        this._lastTime = Date.now();\n        this._animationFrameDisposable = dom.scheduleAtNextAnimationFrame(() => this._execute());\n    }\n    dispose() {\n        this._animationFrameDisposable.dispose();\n    }\n    setPosition(position, mouseEvent) {\n        this._position = position;\n        this._mouseEvent = mouseEvent;\n    }\n    /**\n     * update internal state and return elapsed ms since last time\n     */\n    _tick() {\n        const now = Date.now();\n        const elapsed = now - this._lastTime;\n        this._lastTime = now;\n        return elapsed;\n    }\n    /**\n     * get the number of lines per second to auto-scroll\n     */\n    _getScrollSpeed() {\n        const lineHeight = this._context.configuration.options.get(66 /* EditorOption.lineHeight */);\n        const viewportInLines = this._context.configuration.options.get(143 /* EditorOption.layoutInfo */).height / lineHeight;\n        const outsideDistanceInLines = this._position.outsideDistance / lineHeight;\n        if (outsideDistanceInLines <= 1.5) {\n            return Math.max(30, viewportInLines * (1 + outsideDistanceInLines));\n        }\n        if (outsideDistanceInLines <= 3) {\n            return Math.max(60, viewportInLines * (2 + outsideDistanceInLines));\n        }\n        return Math.max(200, viewportInLines * (7 + outsideDistanceInLines));\n    }\n    _execute() {\n        const lineHeight = this._context.configuration.options.get(66 /* EditorOption.lineHeight */);\n        const scrollSpeedInLines = this._getScrollSpeed();\n        const elapsed = this._tick();\n        const scrollInPixels = scrollSpeedInLines * (elapsed / 1000) * lineHeight;\n        const scrollValue = (this._position.outsidePosition === 'above' ? -scrollInPixels : scrollInPixels);\n        this._context.viewModel.viewLayout.deltaScrollNow(0, scrollValue);\n        this._viewHelper.renderNow();\n        const viewportData = this._context.viewLayout.getLinesViewportData();\n        const edgeLineNumber = (this._position.outsidePosition === 'above' ? viewportData.startLineNumber : viewportData.endLineNumber);\n        // First, try to find a position that matches the horizontal position of the mouse\n        let mouseTarget;\n        {\n            const editorPos = createEditorPagePosition(this._viewHelper.viewDomNode);\n            const horizontalScrollbarHeight = this._context.configuration.options.get(143 /* EditorOption.layoutInfo */).horizontalScrollbarHeight;\n            const pos = new PageCoordinates(this._mouseEvent.pos.x, editorPos.y + editorPos.height - horizontalScrollbarHeight - 0.1);\n            const relativePos = createCoordinatesRelativeToEditor(this._viewHelper.viewDomNode, editorPos, pos);\n            mouseTarget = this._mouseTargetFactory.createMouseTarget(this._viewHelper.getLastRenderData(), editorPos, pos, relativePos, null);\n        }\n        if (!mouseTarget.position || mouseTarget.position.lineNumber !== edgeLineNumber) {\n            if (this._position.outsidePosition === 'above') {\n                mouseTarget = MouseTarget.createOutsideEditor(this._position.mouseColumn, new Position(edgeLineNumber, 1), 'above', this._position.outsideDistance);\n            }\n            else {\n                mouseTarget = MouseTarget.createOutsideEditor(this._position.mouseColumn, new Position(edgeLineNumber, this._context.viewModel.getLineMaxColumn(edgeLineNumber)), 'below', this._position.outsideDistance);\n            }\n        }\n        this._dispatchMouse(mouseTarget, true, 2 /* NavigationCommandRevealType.None */);\n        this._animationFrameDisposable = dom.scheduleAtNextAnimationFrame(() => this._execute());\n    }\n}\nclass MouseDownState {\n    get altKey() { return this._altKey; }\n    get ctrlKey() { return this._ctrlKey; }\n    get metaKey() { return this._metaKey; }\n    get shiftKey() { return this._shiftKey; }\n    get leftButton() { return this._leftButton; }\n    get middleButton() { return this._middleButton; }\n    get startedOnLineNumbers() { return this._startedOnLineNumbers; }\n    constructor() {\n        this._altKey = false;\n        this._ctrlKey = false;\n        this._metaKey = false;\n        this._shiftKey = false;\n        this._leftButton = false;\n        this._middleButton = false;\n        this._startedOnLineNumbers = false;\n        this._lastMouseDownPosition = null;\n        this._lastMouseDownPositionEqualCount = 0;\n        this._lastMouseDownCount = 0;\n        this._lastSetMouseDownCountTime = 0;\n        this.isDragAndDrop = false;\n    }\n    get count() {\n        return this._lastMouseDownCount;\n    }\n    setModifiers(source) {\n        this._altKey = source.altKey;\n        this._ctrlKey = source.ctrlKey;\n        this._metaKey = source.metaKey;\n        this._shiftKey = source.shiftKey;\n    }\n    setStartButtons(source) {\n        this._leftButton = source.leftButton;\n        this._middleButton = source.middleButton;\n    }\n    setStartedOnLineNumbers(startedOnLineNumbers) {\n        this._startedOnLineNumbers = startedOnLineNumbers;\n    }\n    trySetCount(setMouseDownCount, newMouseDownPosition) {\n        // a. Invalidate multiple clicking if too much time has passed (will be hit by IE because the detail field of mouse events contains garbage in IE10)\n        const currentTime = (new Date()).getTime();\n        if (currentTime - this._lastSetMouseDownCountTime > MouseDownState.CLEAR_MOUSE_DOWN_COUNT_TIME) {\n            setMouseDownCount = 1;\n        }\n        this._lastSetMouseDownCountTime = currentTime;\n        // b. Ensure that we don't jump from single click to triple click in one go (will be hit by IE because the detail field of mouse events contains garbage in IE10)\n        if (setMouseDownCount > this._lastMouseDownCount + 1) {\n            setMouseDownCount = this._lastMouseDownCount + 1;\n        }\n        // c. Invalidate multiple clicking if the logical position is different\n        if (this._lastMouseDownPosition && this._lastMouseDownPosition.equals(newMouseDownPosition)) {\n            this._lastMouseDownPositionEqualCount++;\n        }\n        else {\n            this._lastMouseDownPositionEqualCount = 1;\n        }\n        this._lastMouseDownPosition = newMouseDownPosition;\n        // Finally set the lastMouseDownCount\n        this._lastMouseDownCount = Math.min(setMouseDownCount, this._lastMouseDownPositionEqualCount);\n    }\n}\nMouseDownState.CLEAR_MOUSE_DOWN_COUNT_TIME = 400; // ms\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport * as platform from '../../../base/common/platform.js';\nimport { EventType, Gesture } from '../../../base/browser/touch.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { MouseHandler } from './mouseHandler.js';\nimport { EditorMouseEvent, EditorPointerEventFactory } from '../editorDom.js';\nimport { BrowserFeatures } from '../../../base/browser/canIUse.js';\nimport { TextAreaSyntethicEvents } from './textAreaInput.js';\n/**\n * Currently only tested on iOS 13/ iPadOS.\n */\nexport class PointerEventHandler extends MouseHandler {\n    constructor(context, viewController, viewHelper) {\n        super(context, viewController, viewHelper);\n        this._register(Gesture.addTarget(this.viewHelper.linesContentDomNode));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Tap, (e) => this.onTap(e)));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Change, (e) => this.onChange(e)));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Contextmenu, (e) => this._onContextMenu(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode), false)));\n        this._lastPointerType = 'mouse';\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, 'pointerdown', (e) => {\n            const pointerType = e.pointerType;\n            if (pointerType === 'mouse') {\n                this._lastPointerType = 'mouse';\n                return;\n            }\n            else if (pointerType === 'touch') {\n                this._lastPointerType = 'touch';\n            }\n            else {\n                this._lastPointerType = 'pen';\n            }\n        }));\n        // PonterEvents\n        const pointerEvents = new EditorPointerEventFactory(this.viewHelper.viewDomNode);\n        this._register(pointerEvents.onPointerMove(this.viewHelper.viewDomNode, (e) => this._onMouseMove(e)));\n        this._register(pointerEvents.onPointerUp(this.viewHelper.viewDomNode, (e) => this._onMouseUp(e)));\n        this._register(pointerEvents.onPointerLeave(this.viewHelper.viewDomNode, (e) => this._onMouseLeave(e)));\n        this._register(pointerEvents.onPointerDown(this.viewHelper.viewDomNode, (e, pointerId) => this._onMouseDown(e, pointerId)));\n    }\n    onTap(event) {\n        if (!event.initialTarget || !this.viewHelper.linesContentDomNode.contains(event.initialTarget)) {\n            return;\n        }\n        event.preventDefault();\n        this.viewHelper.focusTextArea();\n        const target = this._createMouseTarget(new EditorMouseEvent(event, false, this.viewHelper.viewDomNode), false);\n        if (target.position) {\n            // this.viewController.moveTo(target.position);\n            this.viewController.dispatchMouse({\n                position: target.position,\n                mouseColumn: target.position.column,\n                startedOnLineNumbers: false,\n                revealType: 1 /* NavigationCommandRevealType.Minimal */,\n                mouseDownCount: event.tapCount,\n                inSelectionMode: false,\n                altKey: false,\n                ctrlKey: false,\n                metaKey: false,\n                shiftKey: false,\n                leftButton: false,\n                middleButton: false,\n                onInjectedText: target.type === 6 /* MouseTargetType.CONTENT_TEXT */ && target.detail.injectedText !== null\n            });\n        }\n    }\n    onChange(e) {\n        if (this._lastPointerType === 'touch') {\n            this._context.viewModel.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n        }\n    }\n    _onMouseDown(e, pointerId) {\n        if (e.browserEvent.pointerType === 'touch') {\n            return;\n        }\n        super._onMouseDown(e, pointerId);\n    }\n}\nclass TouchHandler extends MouseHandler {\n    constructor(context, viewController, viewHelper) {\n        super(context, viewController, viewHelper);\n        this._register(Gesture.addTarget(this.viewHelper.linesContentDomNode));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Tap, (e) => this.onTap(e)));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Change, (e) => this.onChange(e)));\n        this._register(dom.addDisposableListener(this.viewHelper.linesContentDomNode, EventType.Contextmenu, (e) => this._onContextMenu(new EditorMouseEvent(e, false, this.viewHelper.viewDomNode), false)));\n    }\n    onTap(event) {\n        event.preventDefault();\n        this.viewHelper.focusTextArea();\n        const target = this._createMouseTarget(new EditorMouseEvent(event, false, this.viewHelper.viewDomNode), false);\n        if (target.position) {\n            // Send the tap event also to the <textarea> (for input purposes)\n            const event = document.createEvent('CustomEvent');\n            event.initEvent(TextAreaSyntethicEvents.Tap, false, true);\n            this.viewHelper.dispatchTextAreaEvent(event);\n            this.viewController.moveTo(target.position, 1 /* NavigationCommandRevealType.Minimal */);\n        }\n    }\n    onChange(e) {\n        this._context.viewModel.viewLayout.deltaScrollNow(-e.translationX, -e.translationY);\n    }\n}\nexport class PointerHandler extends Disposable {\n    constructor(context, viewController, viewHelper) {\n        super();\n        if ((platform.isIOS && BrowserFeatures.pointerEvents)) {\n            this.handler = this._register(new PointerEventHandler(context, viewController, viewHelper));\n        }\n        else if (window.TouchEvent) {\n            this.handler = this._register(new TouchHandler(context, viewController, viewHelper));\n        }\n        else {\n            this.handler = this._register(new MouseHandler(context, viewController, viewHelper));\n        }\n    }\n    getTargetAtClientPoint(clientX, clientY) {\n        return this.handler.getTargetAtClientPoint(clientX, clientY);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport './textAreaHandler.css';\nimport * as nls from '../../../nls.js';\nimport * as browser from '../../../base/browser/browser.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport * as platform from '../../../base/common/platform.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { CopyOptions, TextAreaInput, TextAreaWrapper } from './textAreaInput.js';\nimport { PagedScreenReaderStrategy, TextAreaState, _debugComposition } from './textAreaState.js';\nimport { PartFingerprints, ViewPart } from '../view/viewPart.js';\nimport { LineNumbersOverlay } from '../viewParts/lineNumbers/lineNumbers.js';\nimport { Margin } from '../viewParts/margin/margin.js';\nimport { EditorOptions } from '../../common/config/editorOptions.js';\nimport { getMapForWordSeparators } from '../../common/core/wordCharacterClassifier.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../base/browser/ui/mouseCursor/mouseCursor.js';\nimport { TokenizationRegistry } from '../../common/languages.js';\nimport { Color } from '../../../base/common/color.js';\nimport { IME } from '../../../base/common/ime.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nclass VisibleTextAreaData {\n    constructor(_context, modelLineNumber, distanceToModelLineStart, widthOfHiddenLineTextBefore, distanceToModelLineEnd) {\n        this._context = _context;\n        this.modelLineNumber = modelLineNumber;\n        this.distanceToModelLineStart = distanceToModelLineStart;\n        this.widthOfHiddenLineTextBefore = widthOfHiddenLineTextBefore;\n        this.distanceToModelLineEnd = distanceToModelLineEnd;\n        this._visibleTextAreaBrand = undefined;\n        this.startPosition = null;\n        this.endPosition = null;\n        this.visibleTextareaStart = null;\n        this.visibleTextareaEnd = null;\n        /**\n         * When doing composition, the currently composed text might be split up into\n         * multiple tokens, then merged again into a single token, etc. Here we attempt\n         * to keep the presentation of the <textarea> stable by using the previous used\n         * style if multiple tokens come into play. This avoids flickering.\n         */\n        this._previousPresentation = null;\n    }\n    prepareRender(visibleRangeProvider) {\n        const startModelPosition = new Position(this.modelLineNumber, this.distanceToModelLineStart + 1);\n        const endModelPosition = new Position(this.modelLineNumber, this._context.viewModel.model.getLineMaxColumn(this.modelLineNumber) - this.distanceToModelLineEnd);\n        this.startPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(startModelPosition);\n        this.endPosition = this._context.viewModel.coordinatesConverter.convertModelPositionToViewPosition(endModelPosition);\n        if (this.startPosition.lineNumber === this.endPosition.lineNumber) {\n            this.visibleTextareaStart = visibleRangeProvider.visibleRangeForPosition(this.startPosition);\n            this.visibleTextareaEnd = visibleRangeProvider.visibleRangeForPosition(this.endPosition);\n        }\n        else {\n            // TODO: what if the view positions are not on the same line?\n            this.visibleTextareaStart = null;\n            this.visibleTextareaEnd = null;\n        }\n    }\n    definePresentation(tokenPresentation) {\n        if (!this._previousPresentation) {\n            // To avoid flickering, once set, always reuse a presentation throughout the entire IME session\n            if (tokenPresentation) {\n                this._previousPresentation = tokenPresentation;\n            }\n            else {\n                this._previousPresentation = {\n                    foreground: 1 /* ColorId.DefaultForeground */,\n                    italic: false,\n                    bold: false,\n                    underline: false,\n                    strikethrough: false,\n                };\n            }\n        }\n        return this._previousPresentation;\n    }\n}\nconst canUseZeroSizeTextarea = (browser.isFirefox);\nlet TextAreaHandler = class TextAreaHandler extends ViewPart {\n    constructor(context, viewController, visibleRangeProvider, _keybindingService) {\n        super(context);\n        this._keybindingService = _keybindingService;\n        this._primaryCursorPosition = new Position(1, 1);\n        this._primaryCursorVisibleRange = null;\n        this._viewController = viewController;\n        this._visibleRangeProvider = visibleRangeProvider;\n        this._scrollLeft = 0;\n        this._scrollTop = 0;\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._setAccessibilityOptions(options);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentHeight = layoutInfo.height;\n        this._fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._emptySelectionClipboard = options.get(37 /* EditorOption.emptySelectionClipboard */);\n        this._copyWithSyntaxHighlighting = options.get(25 /* EditorOption.copyWithSyntaxHighlighting */);\n        this._visibleTextArea = null;\n        this._selections = [new Selection(1, 1, 1, 1)];\n        this._modelSelections = [new Selection(1, 1, 1, 1)];\n        this._lastRenderPosition = null;\n        // Text Area (The focus will always be in the textarea when the cursor is blinking)\n        this.textArea = createFastDomNode(document.createElement('textarea'));\n        PartFingerprints.write(this.textArea, 6 /* PartFingerprint.TextArea */);\n        this.textArea.setClassName(`inputarea ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n        this.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n        const { tabSize } = this._context.viewModel.model.getOptions();\n        this.textArea.domNode.style.tabSize = `${tabSize * this._fontInfo.spaceWidth}px`;\n        this.textArea.setAttribute('autocorrect', 'off');\n        this.textArea.setAttribute('autocapitalize', 'off');\n        this.textArea.setAttribute('autocomplete', 'off');\n        this.textArea.setAttribute('spellcheck', 'false');\n        this.textArea.setAttribute('aria-label', this._getAriaLabel(options));\n        this.textArea.setAttribute('aria-required', options.get(5 /* EditorOption.ariaRequired */) ? 'true' : 'false');\n        this.textArea.setAttribute('tabindex', String(options.get(123 /* EditorOption.tabIndex */)));\n        this.textArea.setAttribute('role', 'textbox');\n        this.textArea.setAttribute('aria-roledescription', nls.localize('editor', \"editor\"));\n        this.textArea.setAttribute('aria-multiline', 'true');\n        this.textArea.setAttribute('aria-autocomplete', options.get(90 /* EditorOption.readOnly */) ? 'none' : 'both');\n        this._ensureReadOnlyAttribute();\n        this.textAreaCover = createFastDomNode(document.createElement('div'));\n        this.textAreaCover.setPosition('absolute');\n        const simpleModel = {\n            getLineCount: () => {\n                return this._context.viewModel.getLineCount();\n            },\n            getLineMaxColumn: (lineNumber) => {\n                return this._context.viewModel.getLineMaxColumn(lineNumber);\n            },\n            getValueInRange: (range, eol) => {\n                return this._context.viewModel.getValueInRange(range, eol);\n            },\n            getValueLengthInRange: (range, eol) => {\n                return this._context.viewModel.getValueLengthInRange(range, eol);\n            },\n            modifyPosition: (position, offset) => {\n                return this._context.viewModel.modifyPosition(position, offset);\n            }\n        };\n        const textAreaInputHost = {\n            getDataToCopy: () => {\n                const rawTextToCopy = this._context.viewModel.getPlainTextToCopy(this._modelSelections, this._emptySelectionClipboard, platform.isWindows);\n                const newLineCharacter = this._context.viewModel.model.getEOL();\n                const isFromEmptySelection = (this._emptySelectionClipboard && this._modelSelections.length === 1 && this._modelSelections[0].isEmpty());\n                const multicursorText = (Array.isArray(rawTextToCopy) ? rawTextToCopy : null);\n                const text = (Array.isArray(rawTextToCopy) ? rawTextToCopy.join(newLineCharacter) : rawTextToCopy);\n                let html = undefined;\n                let mode = null;\n                if (CopyOptions.forceCopyWithSyntaxHighlighting || (this._copyWithSyntaxHighlighting && text.length < 65536)) {\n                    const richText = this._context.viewModel.getRichTextToCopy(this._modelSelections, this._emptySelectionClipboard);\n                    if (richText) {\n                        html = richText.html;\n                        mode = richText.mode;\n                    }\n                }\n                return {\n                    isFromEmptySelection,\n                    multicursorText,\n                    text,\n                    html,\n                    mode\n                };\n            },\n            getScreenReaderContent: () => {\n                if (this._accessibilitySupport === 1 /* AccessibilitySupport.Disabled */) {\n                    // We know for a fact that a screen reader is not attached\n                    // On OSX, we write the character before the cursor to allow for \"long-press\" composition\n                    // Also on OSX, we write the word before the cursor to allow for the Accessibility Keyboard to give good hints\n                    const selection = this._selections[0];\n                    if (platform.isMacintosh && selection.isEmpty()) {\n                        const position = selection.getStartPosition();\n                        let textBefore = this._getWordBeforePosition(position);\n                        if (textBefore.length === 0) {\n                            textBefore = this._getCharacterBeforePosition(position);\n                        }\n                        if (textBefore.length > 0) {\n                            return new TextAreaState(textBefore, textBefore.length, textBefore.length, Range.fromPositions(position), 0);\n                        }\n                    }\n                    // on macOS, write current selection into textarea will allow system text services pick selected text,\n                    // but we still want to limit the amount of text given Chromium handles very poorly text even of a few\n                    // thousand chars\n                    // (https://github.com/microsoft/vscode/issues/27799)\n                    const LIMIT_CHARS = 500;\n                    if (platform.isMacintosh && !selection.isEmpty() && simpleModel.getValueLengthInRange(selection, 0 /* EndOfLinePreference.TextDefined */) < LIMIT_CHARS) {\n                        const text = simpleModel.getValueInRange(selection, 0 /* EndOfLinePreference.TextDefined */);\n                        return new TextAreaState(text, 0, text.length, selection, 0);\n                    }\n                    // on Safari, document.execCommand('cut') and document.execCommand('copy') will just not work\n                    // if the textarea has no content selected. So if there is an editor selection, ensure something\n                    // is selected in the textarea.\n                    if (browser.isSafari && !selection.isEmpty()) {\n                        const placeholderText = 'vscode-placeholder';\n                        return new TextAreaState(placeholderText, 0, placeholderText.length, null, undefined);\n                    }\n                    return TextAreaState.EMPTY;\n                }\n                if (browser.isAndroid) {\n                    // when tapping in the editor on a word, Android enters composition mode.\n                    // in the `compositionstart` event we cannot clear the textarea, because\n                    // it then forgets to ever send a `compositionend`.\n                    // we therefore only write the current word in the textarea\n                    const selection = this._selections[0];\n                    if (selection.isEmpty()) {\n                        const position = selection.getStartPosition();\n                        const [wordAtPosition, positionOffsetInWord] = this._getAndroidWordAtPosition(position);\n                        if (wordAtPosition.length > 0) {\n                            return new TextAreaState(wordAtPosition, positionOffsetInWord, positionOffsetInWord, Range.fromPositions(position), 0);\n                        }\n                    }\n                    return TextAreaState.EMPTY;\n                }\n                return PagedScreenReaderStrategy.fromEditorSelection(simpleModel, this._selections[0], this._accessibilityPageSize, this._accessibilitySupport === 0 /* AccessibilitySupport.Unknown */);\n            },\n            deduceModelPosition: (viewAnchorPosition, deltaOffset, lineFeedCnt) => {\n                return this._context.viewModel.deduceModelPositionRelativeToViewPosition(viewAnchorPosition, deltaOffset, lineFeedCnt);\n            }\n        };\n        const textAreaWrapper = this._register(new TextAreaWrapper(this.textArea.domNode));\n        this._textAreaInput = this._register(new TextAreaInput(textAreaInputHost, textAreaWrapper, platform.OS, {\n            isAndroid: browser.isAndroid,\n            isChrome: browser.isChrome,\n            isFirefox: browser.isFirefox,\n            isSafari: browser.isSafari,\n        }));\n        this._register(this._textAreaInput.onKeyDown((e) => {\n            this._viewController.emitKeyDown(e);\n        }));\n        this._register(this._textAreaInput.onKeyUp((e) => {\n            this._viewController.emitKeyUp(e);\n        }));\n        this._register(this._textAreaInput.onPaste((e) => {\n            let pasteOnNewLine = false;\n            let multicursorText = null;\n            let mode = null;\n            if (e.metadata) {\n                pasteOnNewLine = (this._emptySelectionClipboard && !!e.metadata.isFromEmptySelection);\n                multicursorText = (typeof e.metadata.multicursorText !== 'undefined' ? e.metadata.multicursorText : null);\n                mode = e.metadata.mode;\n            }\n            this._viewController.paste(e.text, pasteOnNewLine, multicursorText, mode);\n        }));\n        this._register(this._textAreaInput.onCut(() => {\n            this._viewController.cut();\n        }));\n        this._register(this._textAreaInput.onType((e) => {\n            if (e.replacePrevCharCnt || e.replaceNextCharCnt || e.positionDelta) {\n                // must be handled through the new command\n                if (_debugComposition) {\n                    console.log(` => compositionType: <<${e.text}>>, ${e.replacePrevCharCnt}, ${e.replaceNextCharCnt}, ${e.positionDelta}`);\n                }\n                this._viewController.compositionType(e.text, e.replacePrevCharCnt, e.replaceNextCharCnt, e.positionDelta);\n            }\n            else {\n                if (_debugComposition) {\n                    console.log(` => type: <<${e.text}>>`);\n                }\n                this._viewController.type(e.text);\n            }\n        }));\n        this._register(this._textAreaInput.onSelectionChangeRequest((modelSelection) => {\n            this._viewController.setSelection(modelSelection);\n        }));\n        this._register(this._textAreaInput.onCompositionStart((e) => {\n            // The textarea might contain some content when composition starts.\n            //\n            // When we make the textarea visible, it always has a height of 1 line,\n            // so we don't need to worry too much about content on lines above or below\n            // the selection.\n            //\n            // However, the text on the current line needs to be made visible because\n            // some IME methods allow to move to other glyphs on the current line\n            // (by pressing arrow keys).\n            //\n            // (1) The textarea might contain only some parts of the current line,\n            // like the word before the selection. Also, the content inside the textarea\n            // can grow or shrink as composition occurs. We therefore anchor the textarea\n            // in terms of distance to a certain line start and line end.\n            //\n            // (2) Also, we should not make \\t characters visible, because their rendering\n            // inside the <textarea> will not align nicely with our rendering. We therefore\n            // will hide (if necessary) some of the leading text on the current line.\n            const ta = this.textArea.domNode;\n            const modelSelection = this._modelSelections[0];\n            const { distanceToModelLineStart, widthOfHiddenTextBefore } = (() => {\n                // Find the text that is on the current line before the selection\n                const textBeforeSelection = ta.value.substring(0, Math.min(ta.selectionStart, ta.selectionEnd));\n                const lineFeedOffset1 = textBeforeSelection.lastIndexOf('\\n');\n                const lineTextBeforeSelection = textBeforeSelection.substring(lineFeedOffset1 + 1);\n                // We now search to see if we should hide some part of it (if it contains \\t)\n                const tabOffset1 = lineTextBeforeSelection.lastIndexOf('\\t');\n                const desiredVisibleBeforeCharCount = lineTextBeforeSelection.length - tabOffset1 - 1;\n                const startModelPosition = modelSelection.getStartPosition();\n                const visibleBeforeCharCount = Math.min(startModelPosition.column - 1, desiredVisibleBeforeCharCount);\n                const distanceToModelLineStart = startModelPosition.column - 1 - visibleBeforeCharCount;\n                const hiddenLineTextBefore = lineTextBeforeSelection.substring(0, lineTextBeforeSelection.length - visibleBeforeCharCount);\n                const { tabSize } = this._context.viewModel.model.getOptions();\n                const widthOfHiddenTextBefore = measureText(this.textArea.domNode.ownerDocument, hiddenLineTextBefore, this._fontInfo, tabSize);\n                return { distanceToModelLineStart, widthOfHiddenTextBefore };\n            })();\n            const { distanceToModelLineEnd } = (() => {\n                // Find the text that is on the current line after the selection\n                const textAfterSelection = ta.value.substring(Math.max(ta.selectionStart, ta.selectionEnd));\n                const lineFeedOffset2 = textAfterSelection.indexOf('\\n');\n                const lineTextAfterSelection = lineFeedOffset2 === -1 ? textAfterSelection : textAfterSelection.substring(0, lineFeedOffset2);\n                const tabOffset2 = lineTextAfterSelection.indexOf('\\t');\n                const desiredVisibleAfterCharCount = (tabOffset2 === -1 ? lineTextAfterSelection.length : lineTextAfterSelection.length - tabOffset2 - 1);\n                const endModelPosition = modelSelection.getEndPosition();\n                const visibleAfterCharCount = Math.min(this._context.viewModel.model.getLineMaxColumn(endModelPosition.lineNumber) - endModelPosition.column, desiredVisibleAfterCharCount);\n                const distanceToModelLineEnd = this._context.viewModel.model.getLineMaxColumn(endModelPosition.lineNumber) - endModelPosition.column - visibleAfterCharCount;\n                return { distanceToModelLineEnd };\n            })();\n            // Scroll to reveal the location in the editor where composition occurs\n            this._context.viewModel.revealRange('keyboard', true, Range.fromPositions(this._selections[0].getStartPosition()), 0 /* viewEvents.VerticalRevealType.Simple */, 1 /* ScrollType.Immediate */);\n            this._visibleTextArea = new VisibleTextAreaData(this._context, modelSelection.startLineNumber, distanceToModelLineStart, widthOfHiddenTextBefore, distanceToModelLineEnd);\n            // We turn off wrapping if the <textarea> becomes visible for composition\n            this.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n            this._visibleTextArea.prepareRender(this._visibleRangeProvider);\n            this._render();\n            // Show the textarea\n            this.textArea.setClassName(`inputarea ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME} ime-input`);\n            this._viewController.compositionStart();\n            this._context.viewModel.onCompositionStart();\n        }));\n        this._register(this._textAreaInput.onCompositionUpdate((e) => {\n            if (!this._visibleTextArea) {\n                return;\n            }\n            this._visibleTextArea.prepareRender(this._visibleRangeProvider);\n            this._render();\n        }));\n        this._register(this._textAreaInput.onCompositionEnd(() => {\n            this._visibleTextArea = null;\n            // We turn on wrapping as necessary if the <textarea> hides after composition\n            this.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n            this._render();\n            this.textArea.setClassName(`inputarea ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`);\n            this._viewController.compositionEnd();\n            this._context.viewModel.onCompositionEnd();\n        }));\n        this._register(this._textAreaInput.onFocus(() => {\n            this._context.viewModel.setHasFocus(true);\n        }));\n        this._register(this._textAreaInput.onBlur(() => {\n            this._context.viewModel.setHasFocus(false);\n        }));\n        this._register(IME.onDidChange(() => {\n            this._ensureReadOnlyAttribute();\n        }));\n    }\n    writeScreenReaderContent(reason) {\n        this._textAreaInput.writeScreenReaderContent(reason);\n    }\n    dispose() {\n        super.dispose();\n    }\n    _getAndroidWordAtPosition(position) {\n        const ANDROID_WORD_SEPARATORS = '`~!@#$%^&*()-=+[{]}\\\\|;:\",.<>/?';\n        const lineContent = this._context.viewModel.getLineContent(position.lineNumber);\n        const wordSeparators = getMapForWordSeparators(ANDROID_WORD_SEPARATORS);\n        let goingLeft = true;\n        let startColumn = position.column;\n        let goingRight = true;\n        let endColumn = position.column;\n        let distance = 0;\n        while (distance < 50 && (goingLeft || goingRight)) {\n            if (goingLeft && startColumn <= 1) {\n                goingLeft = false;\n            }\n            if (goingLeft) {\n                const charCode = lineContent.charCodeAt(startColumn - 2);\n                const charClass = wordSeparators.get(charCode);\n                if (charClass !== 0 /* WordCharacterClass.Regular */) {\n                    goingLeft = false;\n                }\n                else {\n                    startColumn--;\n                }\n            }\n            if (goingRight && endColumn > lineContent.length) {\n                goingRight = false;\n            }\n            if (goingRight) {\n                const charCode = lineContent.charCodeAt(endColumn - 1);\n                const charClass = wordSeparators.get(charCode);\n                if (charClass !== 0 /* WordCharacterClass.Regular */) {\n                    goingRight = false;\n                }\n                else {\n                    endColumn++;\n                }\n            }\n            distance++;\n        }\n        return [lineContent.substring(startColumn - 1, endColumn - 1), position.column - startColumn];\n    }\n    _getWordBeforePosition(position) {\n        const lineContent = this._context.viewModel.getLineContent(position.lineNumber);\n        const wordSeparators = getMapForWordSeparators(this._context.configuration.options.get(129 /* EditorOption.wordSeparators */));\n        let column = position.column;\n        let distance = 0;\n        while (column > 1) {\n            const charCode = lineContent.charCodeAt(column - 2);\n            const charClass = wordSeparators.get(charCode);\n            if (charClass !== 0 /* WordCharacterClass.Regular */ || distance > 50) {\n                return lineContent.substring(column - 1, position.column - 1);\n            }\n            distance++;\n            column--;\n        }\n        return lineContent.substring(0, position.column - 1);\n    }\n    _getCharacterBeforePosition(position) {\n        if (position.column > 1) {\n            const lineContent = this._context.viewModel.getLineContent(position.lineNumber);\n            const charBefore = lineContent.charAt(position.column - 2);\n            if (!strings.isHighSurrogate(charBefore.charCodeAt(0))) {\n                return charBefore;\n            }\n        }\n        return '';\n    }\n    _getAriaLabel(options) {\n        var _a, _b, _c;\n        const accessibilitySupport = options.get(2 /* EditorOption.accessibilitySupport */);\n        if (accessibilitySupport === 1 /* AccessibilitySupport.Disabled */) {\n            const toggleKeybindingLabel = (_a = this._keybindingService.lookupKeybinding('editor.action.toggleScreenReaderAccessibilityMode')) === null || _a === void 0 ? void 0 : _a.getAriaLabel();\n            const runCommandKeybindingLabel = (_b = this._keybindingService.lookupKeybinding('workbench.action.showCommands')) === null || _b === void 0 ? void 0 : _b.getAriaLabel();\n            const keybindingEditorKeybindingLabel = (_c = this._keybindingService.lookupKeybinding('workbench.action.openGlobalKeybindings')) === null || _c === void 0 ? void 0 : _c.getAriaLabel();\n            const editorNotAccessibleMessage = nls.localize('accessibilityModeOff', \"The editor is not accessible at this time.\");\n            if (toggleKeybindingLabel) {\n                return nls.localize('accessibilityOffAriaLabel', \"{0} To enable screen reader optimized mode, use {1}\", editorNotAccessibleMessage, toggleKeybindingLabel);\n            }\n            else if (runCommandKeybindingLabel) {\n                return nls.localize('accessibilityOffAriaLabelNoKb', \"{0} To enable screen reader optimized mode, open the quick pick with {1} and run the command Toggle Screen Reader Accessibility Mode, which is currently not triggerable via keyboard.\", editorNotAccessibleMessage, runCommandKeybindingLabel);\n            }\n            else if (keybindingEditorKeybindingLabel) {\n                return nls.localize('accessibilityOffAriaLabelNoKbs', \"{0} Please assign a keybinding for the command Toggle Screen Reader Accessibility Mode by accessing the keybindings editor with {1} and run it.\", editorNotAccessibleMessage, keybindingEditorKeybindingLabel);\n            }\n            else {\n                // SOS\n                return editorNotAccessibleMessage;\n            }\n        }\n        return options.get(4 /* EditorOption.ariaLabel */);\n    }\n    _setAccessibilityOptions(options) {\n        this._accessibilitySupport = options.get(2 /* EditorOption.accessibilitySupport */);\n        const accessibilityPageSize = options.get(3 /* EditorOption.accessibilityPageSize */);\n        if (this._accessibilitySupport === 2 /* AccessibilitySupport.Enabled */ && accessibilityPageSize === EditorOptions.accessibilityPageSize.defaultValue) {\n            // If a screen reader is attached and the default value is not set we should automatically increase the page size to 500 for a better experience\n            this._accessibilityPageSize = 500;\n        }\n        else {\n            this._accessibilityPageSize = accessibilityPageSize;\n        }\n        // When wrapping is enabled and a screen reader might be attached,\n        // we will size the textarea to match the width used for wrapping points computation (see `domLineBreaksComputer.ts`).\n        // This is because screen readers will read the text in the textarea and we'd like that the\n        // wrapping points in the textarea match the wrapping points in the editor.\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        const wrappingColumn = layoutInfo.wrappingColumn;\n        if (wrappingColumn !== -1 && this._accessibilitySupport !== 1 /* AccessibilitySupport.Disabled */) {\n            const fontInfo = options.get(50 /* EditorOption.fontInfo */);\n            this._textAreaWrapping = true;\n            this._textAreaWidth = Math.round(wrappingColumn * fontInfo.typicalHalfwidthCharacterWidth);\n        }\n        else {\n            this._textAreaWrapping = false;\n            this._textAreaWidth = (canUseZeroSizeTextarea ? 0 : 1);\n        }\n    }\n    // --- begin event handlers\n    onConfigurationChanged(e) {\n        const options = this._context.configuration.options;\n        const layoutInfo = options.get(143 /* EditorOption.layoutInfo */);\n        this._setAccessibilityOptions(options);\n        this._contentLeft = layoutInfo.contentLeft;\n        this._contentWidth = layoutInfo.contentWidth;\n        this._contentHeight = layoutInfo.height;\n        this._fontInfo = options.get(50 /* EditorOption.fontInfo */);\n        this._lineHeight = options.get(66 /* EditorOption.lineHeight */);\n        this._emptySelectionClipboard = options.get(37 /* EditorOption.emptySelectionClipboard */);\n        this._copyWithSyntaxHighlighting = options.get(25 /* EditorOption.copyWithSyntaxHighlighting */);\n        this.textArea.setAttribute('wrap', this._textAreaWrapping && !this._visibleTextArea ? 'on' : 'off');\n        const { tabSize } = this._context.viewModel.model.getOptions();\n        this.textArea.domNode.style.tabSize = `${tabSize * this._fontInfo.spaceWidth}px`;\n        this.textArea.setAttribute('aria-label', this._getAriaLabel(options));\n        this.textArea.setAttribute('aria-required', options.get(5 /* EditorOption.ariaRequired */) ? 'true' : 'false');\n        this.textArea.setAttribute('tabindex', String(options.get(123 /* EditorOption.tabIndex */)));\n        if (e.hasChanged(34 /* EditorOption.domReadOnly */) || e.hasChanged(90 /* EditorOption.readOnly */)) {\n            this._ensureReadOnlyAttribute();\n        }\n        if (e.hasChanged(2 /* EditorOption.accessibilitySupport */)) {\n            this._textAreaInput.writeScreenReaderContent('strategy changed');\n        }\n        return true;\n    }\n    onCursorStateChanged(e) {\n        this._selections = e.selections.slice(0);\n        this._modelSelections = e.modelSelections.slice(0);\n        // We must update the <textarea> synchronously, otherwise long press IME on macos breaks.\n        // See https://github.com/microsoft/vscode/issues/165821\n        this._textAreaInput.writeScreenReaderContent('selection changed');\n        return true;\n    }\n    onDecorationsChanged(e) {\n        // true for inline decorations that can end up relayouting text\n        return true;\n    }\n    onFlushed(e) {\n        return true;\n    }\n    onLinesChanged(e) {\n        return true;\n    }\n    onLinesDeleted(e) {\n        return true;\n    }\n    onLinesInserted(e) {\n        return true;\n    }\n    onScrollChanged(e) {\n        this._scrollLeft = e.scrollLeft;\n        this._scrollTop = e.scrollTop;\n        return true;\n    }\n    onZonesChanged(e) {\n        return true;\n    }\n    // --- end event handlers\n    // --- begin view API\n    isFocused() {\n        return this._textAreaInput.isFocused();\n    }\n    focusTextArea() {\n        this._textAreaInput.focusTextArea();\n    }\n    getLastRenderData() {\n        return this._lastRenderPosition;\n    }\n    setAriaOptions(options) {\n        if (options.activeDescendant) {\n            this.textArea.setAttribute('aria-haspopup', 'true');\n            this.textArea.setAttribute('aria-autocomplete', 'list');\n            this.textArea.setAttribute('aria-activedescendant', options.activeDescendant);\n        }\n        else {\n            this.textArea.setAttribute('aria-haspopup', 'false');\n            this.textArea.setAttribute('aria-autocomplete', 'both');\n            this.textArea.removeAttribute('aria-activedescendant');\n        }\n        if (options.role) {\n            this.textArea.setAttribute('role', options.role);\n        }\n    }\n    // --- end view API\n    _ensureReadOnlyAttribute() {\n        const options = this._context.configuration.options;\n        // When someone requests to disable IME, we set the \"readonly\" attribute on the <textarea>.\n        // This will prevent composition.\n        const useReadOnly = !IME.enabled || (options.get(34 /* EditorOption.domReadOnly */) && options.get(90 /* EditorOption.readOnly */));\n        if (useReadOnly) {\n            this.textArea.setAttribute('readonly', 'true');\n        }\n        else {\n            this.textArea.removeAttribute('readonly');\n        }\n    }\n    prepareRender(ctx) {\n        var _a;\n        this._primaryCursorPosition = new Position(this._selections[0].positionLineNumber, this._selections[0].positionColumn);\n        this._primaryCursorVisibleRange = ctx.visibleRangeForPosition(this._primaryCursorPosition);\n        (_a = this._visibleTextArea) === null || _a === void 0 ? void 0 : _a.prepareRender(ctx);\n    }\n    render(ctx) {\n        this._textAreaInput.writeScreenReaderContent('render');\n        this._render();\n    }\n    _render() {\n        var _a;\n        if (this._visibleTextArea) {\n            // The text area is visible for composition reasons\n            const visibleStart = this._visibleTextArea.visibleTextareaStart;\n            const visibleEnd = this._visibleTextArea.visibleTextareaEnd;\n            const startPosition = this._visibleTextArea.startPosition;\n            const endPosition = this._visibleTextArea.endPosition;\n            if (startPosition && endPosition && visibleStart && visibleEnd && visibleEnd.left >= this._scrollLeft && visibleStart.left <= this._scrollLeft + this._contentWidth) {\n                const top = (this._context.viewLayout.getVerticalOffsetForLineNumber(this._primaryCursorPosition.lineNumber) - this._scrollTop);\n                const lineCount = this._newlinecount(this.textArea.domNode.value.substr(0, this.textArea.domNode.selectionStart));\n                let scrollLeft = this._visibleTextArea.widthOfHiddenLineTextBefore;\n                let left = (this._contentLeft + visibleStart.left - this._scrollLeft);\n                // See https://github.com/microsoft/vscode/issues/141725#issuecomment-1050670841\n                // Here we are adding +1 to avoid flickering that might be caused by having a width that is too small.\n                // This could be caused by rounding errors that might only show up with certain font families.\n                // In other words, a pixel might be lost when doing something like\n                //      `Math.round(end) - Math.round(start)`\n                // vs\n                //      `Math.round(end - start)`\n                let width = visibleEnd.left - visibleStart.left + 1;\n                if (left < this._contentLeft) {\n                    // the textarea would be rendered on top of the margin,\n                    // so reduce its width. We use the same technique as\n                    // for hiding text before\n                    const delta = (this._contentLeft - left);\n                    left += delta;\n                    scrollLeft += delta;\n                    width -= delta;\n                }\n                if (width > this._contentWidth) {\n                    // the textarea would be wider than the content width,\n                    // so reduce its width.\n                    width = this._contentWidth;\n                }\n                // Try to render the textarea with the color/font style to match the text under it\n                const viewLineData = this._context.viewModel.getViewLineData(startPosition.lineNumber);\n                const startTokenIndex = viewLineData.tokens.findTokenIndexAtOffset(startPosition.column - 1);\n                const endTokenIndex = viewLineData.tokens.findTokenIndexAtOffset(endPosition.column - 1);\n                const textareaSpansSingleToken = (startTokenIndex === endTokenIndex);\n                const presentation = this._visibleTextArea.definePresentation((textareaSpansSingleToken ? viewLineData.tokens.getPresentation(startTokenIndex) : null));\n                this.textArea.domNode.scrollTop = lineCount * this._lineHeight;\n                this.textArea.domNode.scrollLeft = scrollLeft;\n                this._doRender({\n                    lastRenderPosition: null,\n                    top: top,\n                    left: left,\n                    width: width,\n                    height: this._lineHeight,\n                    useCover: false,\n                    color: (TokenizationRegistry.getColorMap() || [])[presentation.foreground],\n                    italic: presentation.italic,\n                    bold: presentation.bold,\n                    underline: presentation.underline,\n                    strikethrough: presentation.strikethrough\n                });\n            }\n            return;\n        }\n        if (!this._primaryCursorVisibleRange) {\n            // The primary cursor is outside the viewport => place textarea to the top left\n            this._renderAtTopLeft();\n            return;\n        }\n        const left = this._contentLeft + this._primaryCursorVisibleRange.left - this._scrollLeft;\n        if (left < this._contentLeft || left > this._contentLeft + this._contentWidth) {\n            // cursor is outside the viewport\n            this._renderAtTopLeft();\n            return;\n        }\n        const top = this._context.viewLayout.getVerticalOffsetForLineNumber(this._selections[0].positionLineNumber) - this._scrollTop;\n        if (top < 0 || top > this._contentHeight) {\n            // cursor is outside the viewport\n            this._renderAtTopLeft();\n            return;\n        }\n        // The primary cursor is in the viewport (at least vertically) => place textarea on the cursor\n        if (platform.isMacintosh) {\n            // For the popup emoji input, we will make the text area as high as the line height\n            // We will also make the fontSize and lineHeight the correct dimensions to help with the placement of these pickers\n            this._doRender({\n                lastRenderPosition: this._primaryCursorPosition,\n                top,\n                left: this._textAreaWrapping ? this._contentLeft : left,\n                width: this._textAreaWidth,\n                height: this._lineHeight,\n                useCover: false\n            });\n            // In case the textarea contains a word, we're going to try to align the textarea's cursor\n            // with our cursor by scrolling the textarea as much as possible\n            this.textArea.domNode.scrollLeft = this._primaryCursorVisibleRange.left;\n            const lineCount = (_a = this._textAreaInput.textAreaState.newlineCountBeforeSelection) !== null && _a !== void 0 ? _a : this._newlinecount(this.textArea.domNode.value.substr(0, this.textArea.domNode.selectionStart));\n            this.textArea.domNode.scrollTop = lineCount * this._lineHeight;\n            return;\n        }\n        this._doRender({\n            lastRenderPosition: this._primaryCursorPosition,\n            top: top,\n            left: this._textAreaWrapping ? this._contentLeft : left,\n            width: this._textAreaWidth,\n            height: (canUseZeroSizeTextarea ? 0 : 1),\n            useCover: false\n        });\n    }\n    _newlinecount(text) {\n        let result = 0;\n        let startIndex = -1;\n        do {\n            startIndex = text.indexOf('\\n', startIndex + 1);\n            if (startIndex === -1) {\n                break;\n            }\n            result++;\n        } while (true);\n        return result;\n    }\n    _renderAtTopLeft() {\n        // (in WebKit the textarea is 1px by 1px because it cannot handle input to a 0x0 textarea)\n        // specifically, when doing Korean IME, setting the textarea to 0x0 breaks IME badly.\n        this._doRender({\n            lastRenderPosition: null,\n            top: 0,\n            left: 0,\n            width: this._textAreaWidth,\n            height: (canUseZeroSizeTextarea ? 0 : 1),\n            useCover: true\n        });\n    }\n    _doRender(renderData) {\n        this._lastRenderPosition = renderData.lastRenderPosition;\n        const ta = this.textArea;\n        const tac = this.textAreaCover;\n        applyFontInfo(ta, this._fontInfo);\n        ta.setTop(renderData.top);\n        ta.setLeft(renderData.left);\n        ta.setWidth(renderData.width);\n        ta.setHeight(renderData.height);\n        ta.setColor(renderData.color ? Color.Format.CSS.formatHex(renderData.color) : '');\n        ta.setFontStyle(renderData.italic ? 'italic' : '');\n        if (renderData.bold) {\n            // fontWeight is also set by `applyFontInfo`, so only overwrite it if necessary\n            ta.setFontWeight('bold');\n        }\n        ta.setTextDecoration(`${renderData.underline ? ' underline' : ''}${renderData.strikethrough ? ' line-through' : ''}`);\n        tac.setTop(renderData.useCover ? renderData.top : 0);\n        tac.setLeft(renderData.useCover ? renderData.left : 0);\n        tac.setWidth(renderData.useCover ? renderData.width : 0);\n        tac.setHeight(renderData.useCover ? renderData.height : 0);\n        const options = this._context.configuration.options;\n        if (options.get(57 /* EditorOption.glyphMargin */)) {\n            tac.setClassName('monaco-editor-background textAreaCover ' + Margin.OUTER_CLASS_NAME);\n        }\n        else {\n            if (options.get(67 /* EditorOption.lineNumbers */).renderType !== 0 /* RenderLineNumbersType.Off */) {\n                tac.setClassName('monaco-editor-background textAreaCover ' + LineNumbersOverlay.CLASS_NAME);\n            }\n            else {\n                tac.setClassName('monaco-editor-background textAreaCover');\n            }\n        }\n    }\n};\nTextAreaHandler = __decorate([\n    __param(3, IKeybindingService)\n], TextAreaHandler);\nexport { TextAreaHandler };\nfunction measureText(document, text, fontInfo, tabSize) {\n    if (text.length === 0) {\n        return 0;\n    }\n    const container = document.createElement('div');\n    container.style.position = 'absolute';\n    container.style.top = '-50000px';\n    container.style.width = '50000px';\n    const regularDomNode = document.createElement('span');\n    applyFontInfo(regularDomNode, fontInfo);\n    regularDomNode.style.whiteSpace = 'pre'; // just like the textarea\n    regularDomNode.style.tabSize = `${tabSize * fontInfo.spaceWidth}px`; // just like the textarea\n    regularDomNode.append(text);\n    container.appendChild(regularDomNode);\n    document.body.appendChild(container);\n    const res = regularDomNode.offsetWidth;\n    document.body.removeChild(container);\n    return res;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as browser from '../../../base/browser/browser.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { DomEmitter } from '../../../base/browser/event.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { inputLatency } from '../../../base/browser/performance.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Mimes } from '../../../base/common/mime.js';\nimport * as strings from '../../../base/common/strings.js';\nimport { TextAreaState, _debugComposition } from './textAreaState.js';\nimport { Selection } from '../../common/core/selection.js';\nexport var TextAreaSyntethicEvents;\n(function (TextAreaSyntethicEvents) {\n    TextAreaSyntethicEvents.Tap = '-monaco-textarea-synthetic-tap';\n})(TextAreaSyntethicEvents || (TextAreaSyntethicEvents = {}));\nexport const CopyOptions = {\n    forceCopyWithSyntaxHighlighting: false\n};\n/**\n * Every time we write to the clipboard, we record a bit of extra metadata here.\n * Every time we read from the cipboard, if the text matches our last written text,\n * we can fetch the previous metadata.\n */\nexport class InMemoryClipboardMetadataManager {\n    constructor() {\n        this._lastState = null;\n    }\n    set(lastCopiedValue, data) {\n        this._lastState = { lastCopiedValue, data };\n    }\n    get(pastedText) {\n        if (this._lastState && this._lastState.lastCopiedValue === pastedText) {\n            // match!\n            return this._lastState.data;\n        }\n        this._lastState = null;\n        return null;\n    }\n}\nInMemoryClipboardMetadataManager.INSTANCE = new InMemoryClipboardMetadataManager();\nclass CompositionContext {\n    constructor() {\n        this._lastTypeTextLength = 0;\n    }\n    handleCompositionUpdate(text) {\n        text = text || '';\n        const typeInput = {\n            text: text,\n            replacePrevCharCnt: this._lastTypeTextLength,\n            replaceNextCharCnt: 0,\n            positionDelta: 0\n        };\n        this._lastTypeTextLength = text.length;\n        return typeInput;\n    }\n}\n/**\n * Writes screen reader content to the textarea and is able to analyze its input events to generate:\n *  - onCut\n *  - onPaste\n *  - onType\n *\n * Composition events are generated for presentation purposes (composition input is reflected in onType).\n */\nexport class TextAreaInput extends Disposable {\n    get textAreaState() {\n        return this._textAreaState;\n    }\n    constructor(_host, _textArea, _OS, _browser) {\n        super();\n        this._host = _host;\n        this._textArea = _textArea;\n        this._OS = _OS;\n        this._browser = _browser;\n        this._onFocus = this._register(new Emitter());\n        this.onFocus = this._onFocus.event;\n        this._onBlur = this._register(new Emitter());\n        this.onBlur = this._onBlur.event;\n        this._onKeyDown = this._register(new Emitter());\n        this.onKeyDown = this._onKeyDown.event;\n        this._onKeyUp = this._register(new Emitter());\n        this.onKeyUp = this._onKeyUp.event;\n        this._onCut = this._register(new Emitter());\n        this.onCut = this._onCut.event;\n        this._onPaste = this._register(new Emitter());\n        this.onPaste = this._onPaste.event;\n        this._onType = this._register(new Emitter());\n        this.onType = this._onType.event;\n        this._onCompositionStart = this._register(new Emitter());\n        this.onCompositionStart = this._onCompositionStart.event;\n        this._onCompositionUpdate = this._register(new Emitter());\n        this.onCompositionUpdate = this._onCompositionUpdate.event;\n        this._onCompositionEnd = this._register(new Emitter());\n        this.onCompositionEnd = this._onCompositionEnd.event;\n        this._onSelectionChangeRequest = this._register(new Emitter());\n        this.onSelectionChangeRequest = this._onSelectionChangeRequest.event;\n        this._asyncTriggerCut = this._register(new RunOnceScheduler(() => this._onCut.fire(), 0));\n        this._asyncFocusGainWriteScreenReaderContent = this._register(new RunOnceScheduler(() => this.writeScreenReaderContent('asyncFocusGain'), 0));\n        this._textAreaState = TextAreaState.EMPTY;\n        this._selectionChangeListener = null;\n        this.writeScreenReaderContent('ctor');\n        this._hasFocus = false;\n        this._currentComposition = null;\n        let lastKeyDown = null;\n        this._register(this._textArea.onKeyDown((_e) => {\n            const e = new StandardKeyboardEvent(_e);\n            if (e.keyCode === 114 /* KeyCode.KEY_IN_COMPOSITION */\n                || (this._currentComposition && e.keyCode === 1 /* KeyCode.Backspace */)) {\n                // Stop propagation for keyDown events if the IME is processing key input\n                e.stopPropagation();\n            }\n            if (e.equals(9 /* KeyCode.Escape */)) {\n                // Prevent default always for `Esc`, otherwise it will generate a keypress\n                // See https://msdn.microsoft.com/en-us/library/ie/ms536939(v=vs.85).aspx\n                e.preventDefault();\n            }\n            lastKeyDown = e;\n            this._onKeyDown.fire(e);\n        }));\n        this._register(this._textArea.onKeyUp((_e) => {\n            const e = new StandardKeyboardEvent(_e);\n            this._onKeyUp.fire(e);\n        }));\n        this._register(this._textArea.onCompositionStart((e) => {\n            if (_debugComposition) {\n                console.log(`[compositionstart]`, e);\n            }\n            const currentComposition = new CompositionContext();\n            if (this._currentComposition) {\n                // simply reset the composition context\n                this._currentComposition = currentComposition;\n                return;\n            }\n            this._currentComposition = currentComposition;\n            if (this._OS === 2 /* OperatingSystem.Macintosh */\n                && lastKeyDown\n                && lastKeyDown.equals(114 /* KeyCode.KEY_IN_COMPOSITION */)\n                && this._textAreaState.selectionStart === this._textAreaState.selectionEnd\n                && this._textAreaState.selectionStart > 0\n                && this._textAreaState.value.substr(this._textAreaState.selectionStart - 1, 1) === e.data\n                && (lastKeyDown.code === 'ArrowRight' || lastKeyDown.code === 'ArrowLeft')) {\n                // Handling long press case on Chromium/Safari macOS + arrow key => pretend the character was selected\n                if (_debugComposition) {\n                    console.log(`[compositionstart] Handling long press case on macOS + arrow key`, e);\n                }\n                // Pretend the previous character was composed (in order to get it removed by subsequent compositionupdate events)\n                currentComposition.handleCompositionUpdate('x');\n                this._onCompositionStart.fire({ data: e.data });\n                return;\n            }\n            if (this._browser.isAndroid) {\n                // when tapping on the editor, Android enters composition mode to edit the current word\n                // so we cannot clear the textarea on Android and we must pretend the current word was selected\n                this._onCompositionStart.fire({ data: e.data });\n                return;\n            }\n            this._onCompositionStart.fire({ data: e.data });\n        }));\n        this._register(this._textArea.onCompositionUpdate((e) => {\n            if (_debugComposition) {\n                console.log(`[compositionupdate]`, e);\n            }\n            const currentComposition = this._currentComposition;\n            if (!currentComposition) {\n                // should not be possible to receive a 'compositionupdate' without a 'compositionstart'\n                return;\n            }\n            if (this._browser.isAndroid) {\n                // On Android, the data sent with the composition update event is unusable.\n                // For example, if the cursor is in the middle of a word like Mic|osoft\n                // and Microsoft is chosen from the keyboard's suggestions, the e.data will contain \"Microsoft\".\n                // This is not really usable because it doesn't tell us where the edit began and where it ended.\n                const newState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n                const typeInput = TextAreaState.deduceAndroidCompositionInput(this._textAreaState, newState);\n                this._textAreaState = newState;\n                this._onType.fire(typeInput);\n                this._onCompositionUpdate.fire(e);\n                return;\n            }\n            const typeInput = currentComposition.handleCompositionUpdate(e.data);\n            this._textAreaState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n            this._onType.fire(typeInput);\n            this._onCompositionUpdate.fire(e);\n        }));\n        this._register(this._textArea.onCompositionEnd((e) => {\n            if (_debugComposition) {\n                console.log(`[compositionend]`, e);\n            }\n            const currentComposition = this._currentComposition;\n            if (!currentComposition) {\n                // https://github.com/microsoft/monaco-editor/issues/1663\n                // On iOS 13.2, Chinese system IME randomly trigger an additional compositionend event with empty data\n                return;\n            }\n            this._currentComposition = null;\n            if (this._browser.isAndroid) {\n                // On Android, the data sent with the composition update event is unusable.\n                // For example, if the cursor is in the middle of a word like Mic|osoft\n                // and Microsoft is chosen from the keyboard's suggestions, the e.data will contain \"Microsoft\".\n                // This is not really usable because it doesn't tell us where the edit began and where it ended.\n                const newState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n                const typeInput = TextAreaState.deduceAndroidCompositionInput(this._textAreaState, newState);\n                this._textAreaState = newState;\n                this._onType.fire(typeInput);\n                this._onCompositionEnd.fire();\n                return;\n            }\n            const typeInput = currentComposition.handleCompositionUpdate(e.data);\n            this._textAreaState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n            this._onType.fire(typeInput);\n            this._onCompositionEnd.fire();\n        }));\n        this._register(this._textArea.onInput((e) => {\n            if (_debugComposition) {\n                console.log(`[input]`, e);\n            }\n            // Pretend here we touched the text area, as the `input` event will most likely\n            // result in a `selectionchange` event which we want to ignore\n            this._textArea.setIgnoreSelectionChangeTime('received input event');\n            if (this._currentComposition) {\n                return;\n            }\n            const newState = TextAreaState.readFromTextArea(this._textArea, this._textAreaState);\n            const typeInput = TextAreaState.deduceInput(this._textAreaState, newState, /*couldBeEmojiInput*/ this._OS === 2 /* OperatingSystem.Macintosh */);\n            if (typeInput.replacePrevCharCnt === 0 && typeInput.text.length === 1) {\n                // one character was typed\n                if (strings.isHighSurrogate(typeInput.text.charCodeAt(0))\n                    || typeInput.text.charCodeAt(0) === 0x7f /* Delete */) {\n                    // Ignore invalid input but keep it around for next time\n                    return;\n                }\n            }\n            this._textAreaState = newState;\n            if (typeInput.text !== ''\n                || typeInput.replacePrevCharCnt !== 0\n                || typeInput.replaceNextCharCnt !== 0\n                || typeInput.positionDelta !== 0) {\n                this._onType.fire(typeInput);\n            }\n        }));\n        // --- Clipboard operations\n        this._register(this._textArea.onCut((e) => {\n            // Pretend here we touched the text area, as the `cut` event will most likely\n            // result in a `selectionchange` event which we want to ignore\n            this._textArea.setIgnoreSelectionChangeTime('received cut event');\n            this._ensureClipboardGetsEditorSelection(e);\n            this._asyncTriggerCut.schedule();\n        }));\n        this._register(this._textArea.onCopy((e) => {\n            this._ensureClipboardGetsEditorSelection(e);\n        }));\n        this._register(this._textArea.onPaste((e) => {\n            // Pretend here we touched the text area, as the `paste` event will most likely\n            // result in a `selectionchange` event which we want to ignore\n            this._textArea.setIgnoreSelectionChangeTime('received paste event');\n            e.preventDefault();\n            if (!e.clipboardData) {\n                return;\n            }\n            let [text, metadata] = ClipboardEventUtils.getTextData(e.clipboardData);\n            if (!text) {\n                return;\n            }\n            // try the in-memory store\n            metadata = metadata || InMemoryClipboardMetadataManager.INSTANCE.get(text);\n            this._onPaste.fire({\n                text: text,\n                metadata: metadata\n            });\n        }));\n        this._register(this._textArea.onFocus(() => {\n            const hadFocus = this._hasFocus;\n            this._setHasFocus(true);\n            if (this._browser.isSafari && !hadFocus && this._hasFocus) {\n                // When \"tabbing into\" the textarea, immediately after dispatching the 'focus' event,\n                // Safari will always move the selection at offset 0 in the textarea\n                this._asyncFocusGainWriteScreenReaderContent.schedule();\n            }\n        }));\n        this._register(this._textArea.onBlur(() => {\n            if (this._currentComposition) {\n                // See https://github.com/microsoft/vscode/issues/112621\n                // where compositionend is not triggered when the editor\n                // is taken off-dom during a composition\n                // Clear the flag to be able to write to the textarea\n                this._currentComposition = null;\n                // Clear the textarea to avoid an unwanted cursor type\n                this.writeScreenReaderContent('blurWithoutCompositionEnd');\n                // Fire artificial composition end\n                this._onCompositionEnd.fire();\n            }\n            this._setHasFocus(false);\n        }));\n        this._register(this._textArea.onSyntheticTap(() => {\n            if (this._browser.isAndroid && this._currentComposition) {\n                // on Android, tapping does not cancel the current composition, so the\n                // textarea is stuck showing the old composition\n                // Clear the flag to be able to write to the textarea\n                this._currentComposition = null;\n                // Clear the textarea to avoid an unwanted cursor type\n                this.writeScreenReaderContent('tapWithoutCompositionEnd');\n                // Fire artificial composition end\n                this._onCompositionEnd.fire();\n            }\n        }));\n    }\n    _installSelectionChangeListener() {\n        // See https://github.com/microsoft/vscode/issues/27216 and https://github.com/microsoft/vscode/issues/98256\n        // When using a Braille display, it is possible for users to reposition the\n        // system caret. This is reflected in Chrome as a `selectionchange` event.\n        //\n        // The `selectionchange` event appears to be emitted under numerous other circumstances,\n        // so it is quite a challenge to distinguish a `selectionchange` coming in from a user\n        // using a Braille display from all the other cases.\n        //\n        // The problems with the `selectionchange` event are:\n        //  * the event is emitted when the textarea is focused programmatically -- textarea.focus()\n        //  * the event is emitted when the selection is changed in the textarea programmatically -- textarea.setSelectionRange(...)\n        //  * the event is emitted when the value of the textarea is changed programmatically -- textarea.value = '...'\n        //  * the event is emitted when tabbing into the textarea\n        //  * the event is emitted asynchronously (sometimes with a delay as high as a few tens of ms)\n        //  * the event sometimes comes in bursts for a single logical textarea operation\n        // `selectionchange` events often come multiple times for a single logical change\n        // so throttle multiple `selectionchange` events that burst in a short period of time.\n        let previousSelectionChangeEventTime = 0;\n        return dom.addDisposableListener(this._textArea.ownerDocument, 'selectionchange', (e) => {\n            inputLatency.onSelectionChange();\n            if (!this._hasFocus) {\n                return;\n            }\n            if (this._currentComposition) {\n                return;\n            }\n            if (!this._browser.isChrome) {\n                // Support only for Chrome until testing happens on other browsers\n                return;\n            }\n            const now = Date.now();\n            const delta1 = now - previousSelectionChangeEventTime;\n            previousSelectionChangeEventTime = now;\n            if (delta1 < 5) {\n                // received another `selectionchange` event within 5ms of the previous `selectionchange` event\n                // => ignore it\n                return;\n            }\n            const delta2 = now - this._textArea.getIgnoreSelectionChangeTime();\n            this._textArea.resetSelectionChangeTime();\n            if (delta2 < 100) {\n                // received a `selectionchange` event within 100ms since we touched the textarea\n                // => ignore it, since we caused it\n                return;\n            }\n            if (!this._textAreaState.selection) {\n                // Cannot correlate a position in the textarea with a position in the editor...\n                return;\n            }\n            const newValue = this._textArea.getValue();\n            if (this._textAreaState.value !== newValue) {\n                // Cannot correlate a position in the textarea with a position in the editor...\n                return;\n            }\n            const newSelectionStart = this._textArea.getSelectionStart();\n            const newSelectionEnd = this._textArea.getSelectionEnd();\n            if (this._textAreaState.selectionStart === newSelectionStart && this._textAreaState.selectionEnd === newSelectionEnd) {\n                // Nothing to do...\n                return;\n            }\n            const _newSelectionStartPosition = this._textAreaState.deduceEditorPosition(newSelectionStart);\n            const newSelectionStartPosition = this._host.deduceModelPosition(_newSelectionStartPosition[0], _newSelectionStartPosition[1], _newSelectionStartPosition[2]);\n            const _newSelectionEndPosition = this._textAreaState.deduceEditorPosition(newSelectionEnd);\n            const newSelectionEndPosition = this._host.deduceModelPosition(_newSelectionEndPosition[0], _newSelectionEndPosition[1], _newSelectionEndPosition[2]);\n            const newSelection = new Selection(newSelectionStartPosition.lineNumber, newSelectionStartPosition.column, newSelectionEndPosition.lineNumber, newSelectionEndPosition.column);\n            this._onSelectionChangeRequest.fire(newSelection);\n        });\n    }\n    dispose() {\n        super.dispose();\n        if (this._selectionChangeListener) {\n            this._selectionChangeListener.dispose();\n            this._selectionChangeListener = null;\n        }\n    }\n    focusTextArea() {\n        // Setting this._hasFocus and writing the screen reader content\n        // will result in a focus() and setSelectionRange() in the textarea\n        this._setHasFocus(true);\n        // If the editor is off DOM, focus cannot be really set, so let's double check that we have managed to set the focus\n        this.refreshFocusState();\n    }\n    isFocused() {\n        return this._hasFocus;\n    }\n    refreshFocusState() {\n        this._setHasFocus(this._textArea.hasFocus());\n    }\n    _setHasFocus(newHasFocus) {\n        if (this._hasFocus === newHasFocus) {\n            // no change\n            return;\n        }\n        this._hasFocus = newHasFocus;\n        if (this._selectionChangeListener) {\n            this._selectionChangeListener.dispose();\n            this._selectionChangeListener = null;\n        }\n        if (this._hasFocus) {\n            this._selectionChangeListener = this._installSelectionChangeListener();\n        }\n        if (this._hasFocus) {\n            this.writeScreenReaderContent('focusgain');\n        }\n        if (this._hasFocus) {\n            this._onFocus.fire();\n        }\n        else {\n            this._onBlur.fire();\n        }\n    }\n    _setAndWriteTextAreaState(reason, textAreaState) {\n        if (!this._hasFocus) {\n            textAreaState = textAreaState.collapseSelection();\n        }\n        textAreaState.writeToTextArea(reason, this._textArea, this._hasFocus);\n        this._textAreaState = textAreaState;\n    }\n    writeScreenReaderContent(reason) {\n        if (this._currentComposition) {\n            // Do not write to the text area when doing composition\n            return;\n        }\n        this._setAndWriteTextAreaState(reason, this._host.getScreenReaderContent());\n    }\n    _ensureClipboardGetsEditorSelection(e) {\n        const dataToCopy = this._host.getDataToCopy();\n        const storedMetadata = {\n            version: 1,\n            isFromEmptySelection: dataToCopy.isFromEmptySelection,\n            multicursorText: dataToCopy.multicursorText,\n            mode: dataToCopy.mode\n        };\n        InMemoryClipboardMetadataManager.INSTANCE.set(\n        // When writing \"LINE\\r\\n\" to the clipboard and then pasting,\n        // Firefox pastes \"LINE\\n\", so let's work around this quirk\n        (this._browser.isFirefox ? dataToCopy.text.replace(/\\r\\n/g, '\\n') : dataToCopy.text), storedMetadata);\n        e.preventDefault();\n        if (e.clipboardData) {\n            ClipboardEventUtils.setTextData(e.clipboardData, dataToCopy.text, dataToCopy.html, storedMetadata);\n        }\n    }\n}\nexport const ClipboardEventUtils = {\n    getTextData(clipboardData) {\n        const text = clipboardData.getData(Mimes.text);\n        let metadata = null;\n        const rawmetadata = clipboardData.getData('vscode-editor-data');\n        if (typeof rawmetadata === 'string') {\n            try {\n                metadata = JSON.parse(rawmetadata);\n                if (metadata.version !== 1) {\n                    metadata = null;\n                }\n            }\n            catch (err) {\n                // no problem!\n            }\n        }\n        if (text.length === 0 && metadata === null && clipboardData.files.length > 0) {\n            // no textual data pasted, generate text from file names\n            const files = Array.prototype.slice.call(clipboardData.files, 0);\n            return [files.map(file => file.name).join('\\n'), null];\n        }\n        return [text, metadata];\n    },\n    setTextData(clipboardData, text, html, metadata) {\n        clipboardData.setData(Mimes.text, text);\n        if (typeof html === 'string') {\n            clipboardData.setData('text/html', html);\n        }\n        clipboardData.setData('vscode-editor-data', JSON.stringify(metadata));\n    }\n};\nexport class TextAreaWrapper extends Disposable {\n    get ownerDocument() {\n        return this._actual.ownerDocument;\n    }\n    constructor(_actual) {\n        super();\n        this._actual = _actual;\n        this.onKeyDown = this._register(new DomEmitter(this._actual, 'keydown')).event;\n        this.onKeyUp = this._register(new DomEmitter(this._actual, 'keyup')).event;\n        this.onCompositionStart = this._register(new DomEmitter(this._actual, 'compositionstart')).event;\n        this.onCompositionUpdate = this._register(new DomEmitter(this._actual, 'compositionupdate')).event;\n        this.onCompositionEnd = this._register(new DomEmitter(this._actual, 'compositionend')).event;\n        this.onBeforeInput = this._register(new DomEmitter(this._actual, 'beforeinput')).event;\n        this.onInput = this._register(new DomEmitter(this._actual, 'input')).event;\n        this.onCut = this._register(new DomEmitter(this._actual, 'cut')).event;\n        this.onCopy = this._register(new DomEmitter(this._actual, 'copy')).event;\n        this.onPaste = this._register(new DomEmitter(this._actual, 'paste')).event;\n        this.onFocus = this._register(new DomEmitter(this._actual, 'focus')).event;\n        this.onBlur = this._register(new DomEmitter(this._actual, 'blur')).event;\n        this._onSyntheticTap = this._register(new Emitter());\n        this.onSyntheticTap = this._onSyntheticTap.event;\n        this._ignoreSelectionChangeTime = 0;\n        this._register(this.onKeyDown(() => inputLatency.onKeyDown()));\n        this._register(this.onBeforeInput(() => inputLatency.onBeforeInput()));\n        this._register(this.onInput(() => inputLatency.onInput()));\n        this._register(this.onKeyUp(() => inputLatency.onKeyUp()));\n        this._register(dom.addDisposableListener(this._actual, TextAreaSyntethicEvents.Tap, () => this._onSyntheticTap.fire()));\n    }\n    hasFocus() {\n        const shadowRoot = dom.getShadowRoot(this._actual);\n        if (shadowRoot) {\n            return shadowRoot.activeElement === this._actual;\n        }\n        else if (dom.isInDOM(this._actual)) {\n            return this._actual.ownerDocument.activeElement === this._actual;\n        }\n        else {\n            return false;\n        }\n    }\n    setIgnoreSelectionChangeTime(reason) {\n        this._ignoreSelectionChangeTime = Date.now();\n    }\n    getIgnoreSelectionChangeTime() {\n        return this._ignoreSelectionChangeTime;\n    }\n    resetSelectionChangeTime() {\n        this._ignoreSelectionChangeTime = 0;\n    }\n    getValue() {\n        // console.log('current value: ' + this._textArea.value);\n        return this._actual.value;\n    }\n    setValue(reason, value) {\n        const textArea = this._actual;\n        if (textArea.value === value) {\n            // No change\n            return;\n        }\n        // console.log('reason: ' + reason + ', current value: ' + textArea.value + ' => new value: ' + value);\n        this.setIgnoreSelectionChangeTime('setValue');\n        textArea.value = value;\n    }\n    getSelectionStart() {\n        return this._actual.selectionDirection === 'backward' ? this._actual.selectionEnd : this._actual.selectionStart;\n    }\n    getSelectionEnd() {\n        return this._actual.selectionDirection === 'backward' ? this._actual.selectionStart : this._actual.selectionEnd;\n    }\n    setSelectionRange(reason, selectionStart, selectionEnd) {\n        const textArea = this._actual;\n        let activeElement = null;\n        const shadowRoot = dom.getShadowRoot(textArea);\n        if (shadowRoot) {\n            activeElement = shadowRoot.activeElement;\n        }\n        else {\n            activeElement = textArea.ownerDocument.activeElement;\n        }\n        const currentIsFocused = (activeElement === textArea);\n        const currentSelectionStart = textArea.selectionStart;\n        const currentSelectionEnd = textArea.selectionEnd;\n        if (currentIsFocused && currentSelectionStart === selectionStart && currentSelectionEnd === selectionEnd) {\n            // No change\n            // Firefox iframe bug https://github.com/microsoft/monaco-editor/issues/643#issuecomment-367871377\n            if (browser.isFirefox && window.parent !== window) {\n                textArea.focus();\n            }\n            return;\n        }\n        // console.log('reason: ' + reason + ', setSelectionRange: ' + selectionStart + ' -> ' + selectionEnd);\n        if (currentIsFocused) {\n            // No need to focus, only need to change the selection range\n            this.setIgnoreSelectionChangeTime('setSelectionRange');\n            textArea.setSelectionRange(selectionStart, selectionEnd);\n            if (browser.isFirefox && window.parent !== window) {\n                textArea.focus();\n            }\n            return;\n        }\n        // If the focus is outside the textarea, browsers will try really hard to reveal the textarea.\n        // Here, we try to undo the browser's desperate reveal.\n        try {\n            const scrollState = dom.saveParentsScrollTop(textArea);\n            this.setIgnoreSelectionChangeTime('setSelectionRange');\n            textArea.focus();\n            textArea.setSelectionRange(selectionStart, selectionEnd);\n            dom.restoreParentsScrollTop(textArea, scrollState);\n        }\n        catch (e) {\n            // Sometimes IE throws when setting selection (e.g. textarea is off-DOM)\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../base/common/strings.js';\nimport { Range } from '../../common/core/range.js';\nexport const _debugComposition = false;\nexport class TextAreaState {\n    constructor(value, \n    /** the offset where selection starts inside `value` */\n    selectionStart, \n    /** the offset where selection ends inside `value` */\n    selectionEnd, \n    /** the editor range in the view coordinate system that matches the selection inside `value` */\n    selection, \n    /** the visible line count (wrapped, not necessarily matching \\n characters) for the text in `value` before `selectionStart` */\n    newlineCountBeforeSelection) {\n        this.value = value;\n        this.selectionStart = selectionStart;\n        this.selectionEnd = selectionEnd;\n        this.selection = selection;\n        this.newlineCountBeforeSelection = newlineCountBeforeSelection;\n    }\n    toString() {\n        return `[ <${this.value}>, selectionStart: ${this.selectionStart}, selectionEnd: ${this.selectionEnd}]`;\n    }\n    static readFromTextArea(textArea, previousState) {\n        const value = textArea.getValue();\n        const selectionStart = textArea.getSelectionStart();\n        const selectionEnd = textArea.getSelectionEnd();\n        let newlineCountBeforeSelection = undefined;\n        if (previousState) {\n            const valueBeforeSelectionStart = value.substring(0, selectionStart);\n            const previousValueBeforeSelectionStart = previousState.value.substring(0, previousState.selectionStart);\n            if (valueBeforeSelectionStart === previousValueBeforeSelectionStart) {\n                newlineCountBeforeSelection = previousState.newlineCountBeforeSelection;\n            }\n        }\n        return new TextAreaState(value, selectionStart, selectionEnd, null, newlineCountBeforeSelection);\n    }\n    collapseSelection() {\n        if (this.selectionStart === this.value.length) {\n            return this;\n        }\n        return new TextAreaState(this.value, this.value.length, this.value.length, null, undefined);\n    }\n    writeToTextArea(reason, textArea, select) {\n        if (_debugComposition) {\n            console.log(`writeToTextArea ${reason}: ${this.toString()}`);\n        }\n        textArea.setValue(reason, this.value);\n        if (select) {\n            textArea.setSelectionRange(reason, this.selectionStart, this.selectionEnd);\n        }\n    }\n    deduceEditorPosition(offset) {\n        var _a, _b, _c, _d, _e, _f, _g, _h;\n        if (offset <= this.selectionStart) {\n            const str = this.value.substring(offset, this.selectionStart);\n            return this._finishDeduceEditorPosition((_b = (_a = this.selection) === null || _a === void 0 ? void 0 : _a.getStartPosition()) !== null && _b !== void 0 ? _b : null, str, -1);\n        }\n        if (offset >= this.selectionEnd) {\n            const str = this.value.substring(this.selectionEnd, offset);\n            return this._finishDeduceEditorPosition((_d = (_c = this.selection) === null || _c === void 0 ? void 0 : _c.getEndPosition()) !== null && _d !== void 0 ? _d : null, str, 1);\n        }\n        const str1 = this.value.substring(this.selectionStart, offset);\n        if (str1.indexOf(String.fromCharCode(8230)) === -1) {\n            return this._finishDeduceEditorPosition((_f = (_e = this.selection) === null || _e === void 0 ? void 0 : _e.getStartPosition()) !== null && _f !== void 0 ? _f : null, str1, 1);\n        }\n        const str2 = this.value.substring(offset, this.selectionEnd);\n        return this._finishDeduceEditorPosition((_h = (_g = this.selection) === null || _g === void 0 ? void 0 : _g.getEndPosition()) !== null && _h !== void 0 ? _h : null, str2, -1);\n    }\n    _finishDeduceEditorPosition(anchor, deltaText, signum) {\n        let lineFeedCnt = 0;\n        let lastLineFeedIndex = -1;\n        while ((lastLineFeedIndex = deltaText.indexOf('\\n', lastLineFeedIndex + 1)) !== -1) {\n            lineFeedCnt++;\n        }\n        return [anchor, signum * deltaText.length, lineFeedCnt];\n    }\n    static deduceInput(previousState, currentState, couldBeEmojiInput) {\n        if (!previousState) {\n            // This is the EMPTY state\n            return {\n                text: '',\n                replacePrevCharCnt: 0,\n                replaceNextCharCnt: 0,\n                positionDelta: 0\n            };\n        }\n        if (_debugComposition) {\n            console.log('------------------------deduceInput');\n            console.log(`PREVIOUS STATE: ${previousState.toString()}`);\n            console.log(`CURRENT STATE: ${currentState.toString()}`);\n        }\n        const prefixLength = Math.min(strings.commonPrefixLength(previousState.value, currentState.value), previousState.selectionStart, currentState.selectionStart);\n        const suffixLength = Math.min(strings.commonSuffixLength(previousState.value, currentState.value), previousState.value.length - previousState.selectionEnd, currentState.value.length - currentState.selectionEnd);\n        const previousValue = previousState.value.substring(prefixLength, previousState.value.length - suffixLength);\n        const currentValue = currentState.value.substring(prefixLength, currentState.value.length - suffixLength);\n        const previousSelectionStart = previousState.selectionStart - prefixLength;\n        const previousSelectionEnd = previousState.selectionEnd - prefixLength;\n        const currentSelectionStart = currentState.selectionStart - prefixLength;\n        const currentSelectionEnd = currentState.selectionEnd - prefixLength;\n        if (_debugComposition) {\n            console.log(`AFTER DIFFING PREVIOUS STATE: <${previousValue}>, selectionStart: ${previousSelectionStart}, selectionEnd: ${previousSelectionEnd}`);\n            console.log(`AFTER DIFFING CURRENT STATE: <${currentValue}>, selectionStart: ${currentSelectionStart}, selectionEnd: ${currentSelectionEnd}`);\n        }\n        if (currentSelectionStart === currentSelectionEnd) {\n            // no current selection\n            const replacePreviousCharacters = (previousState.selectionStart - prefixLength);\n            if (_debugComposition) {\n                console.log(`REMOVE PREVIOUS: ${replacePreviousCharacters} chars`);\n            }\n            return {\n                text: currentValue,\n                replacePrevCharCnt: replacePreviousCharacters,\n                replaceNextCharCnt: 0,\n                positionDelta: 0\n            };\n        }\n        // there is a current selection => composition case\n        const replacePreviousCharacters = previousSelectionEnd - previousSelectionStart;\n        return {\n            text: currentValue,\n            replacePrevCharCnt: replacePreviousCharacters,\n            replaceNextCharCnt: 0,\n            positionDelta: 0\n        };\n    }\n    static deduceAndroidCompositionInput(previousState, currentState) {\n        if (!previousState) {\n            // This is the EMPTY state\n            return {\n                text: '',\n                replacePrevCharCnt: 0,\n                replaceNextCharCnt: 0,\n                positionDelta: 0\n            };\n        }\n        if (_debugComposition) {\n            console.log('------------------------deduceAndroidCompositionInput');\n            console.log(`PREVIOUS STATE: ${previousState.toString()}`);\n            console.log(`CURRENT STATE: ${currentState.toString()}`);\n        }\n        if (previousState.value === currentState.value) {\n            return {\n                text: '',\n                replacePrevCharCnt: 0,\n                replaceNextCharCnt: 0,\n                positionDelta: currentState.selectionEnd - previousState.selectionEnd\n            };\n        }\n        const prefixLength = Math.min(strings.commonPrefixLength(previousState.value, currentState.value), previousState.selectionEnd);\n        const suffixLength = Math.min(strings.commonSuffixLength(previousState.value, currentState.value), previousState.value.length - previousState.selectionEnd);\n        const previousValue = previousState.value.substring(prefixLength, previousState.value.length - suffixLength);\n        const currentValue = currentState.value.substring(prefixLength, currentState.value.length - suffixLength);\n        const previousSelectionStart = previousState.selectionStart - prefixLength;\n        const previousSelectionEnd = previousState.selectionEnd - prefixLength;\n        const currentSelectionStart = currentState.selectionStart - prefixLength;\n        const currentSelectionEnd = currentState.selectionEnd - prefixLength;\n        if (_debugComposition) {\n            console.log(`AFTER DIFFING PREVIOUS STATE: <${previousValue}>, selectionStart: ${previousSelectionStart}, selectionEnd: ${previousSelectionEnd}`);\n            console.log(`AFTER DIFFING CURRENT STATE: <${currentValue}>, selectionStart: ${currentSelectionStart}, selectionEnd: ${currentSelectionEnd}`);\n        }\n        return {\n            text: currentValue,\n            replacePrevCharCnt: previousSelectionEnd,\n            replaceNextCharCnt: previousValue.length - previousSelectionEnd,\n            positionDelta: currentSelectionEnd - currentValue.length\n        };\n    }\n}\nTextAreaState.EMPTY = new TextAreaState('', 0, 0, null, undefined);\nexport class PagedScreenReaderStrategy {\n    static _getPageOfLine(lineNumber, linesPerPage) {\n        return Math.floor((lineNumber - 1) / linesPerPage);\n    }\n    static _getRangeForPage(page, linesPerPage) {\n        const offset = page * linesPerPage;\n        const startLineNumber = offset + 1;\n        const endLineNumber = offset + linesPerPage;\n        return new Range(startLineNumber, 1, endLineNumber + 1, 1);\n    }\n    static fromEditorSelection(model, selection, linesPerPage, trimLongText) {\n        // Chromium handles very poorly text even of a few thousand chars\n        // Cut text to avoid stalling the entire UI\n        const LIMIT_CHARS = 500;\n        const selectionStartPage = PagedScreenReaderStrategy._getPageOfLine(selection.startLineNumber, linesPerPage);\n        const selectionStartPageRange = PagedScreenReaderStrategy._getRangeForPage(selectionStartPage, linesPerPage);\n        const selectionEndPage = PagedScreenReaderStrategy._getPageOfLine(selection.endLineNumber, linesPerPage);\n        const selectionEndPageRange = PagedScreenReaderStrategy._getRangeForPage(selectionEndPage, linesPerPage);\n        let pretextRange = selectionStartPageRange.intersectRanges(new Range(1, 1, selection.startLineNumber, selection.startColumn));\n        if (trimLongText && model.getValueLengthInRange(pretextRange, 1 /* EndOfLinePreference.LF */) > LIMIT_CHARS) {\n            const pretextStart = model.modifyPosition(pretextRange.getEndPosition(), -LIMIT_CHARS);\n            pretextRange = Range.fromPositions(pretextStart, pretextRange.getEndPosition());\n        }\n        const pretext = model.getValueInRange(pretextRange, 1 /* EndOfLinePreference.LF */);\n        const lastLine = model.getLineCount();\n        const lastLineMaxColumn = model.getLineMaxColumn(lastLine);\n        let posttextRange = selectionEndPageRange.intersectRanges(new Range(selection.endLineNumber, selection.endColumn, lastLine, lastLineMaxColumn));\n        if (trimLongText && model.getValueLengthInRange(posttextRange, 1 /* EndOfLinePreference.LF */) > LIMIT_CHARS) {\n            const posttextEnd = model.modifyPosition(posttextRange.getStartPosition(), LIMIT_CHARS);\n            posttextRange = Range.fromPositions(posttextRange.getStartPosition(), posttextEnd);\n        }\n        const posttext = model.getValueInRange(posttextRange, 1 /* EndOfLinePreference.LF */);\n        let text;\n        if (selectionStartPage === selectionEndPage || selectionStartPage + 1 === selectionEndPage) {\n            // take full selection\n            text = model.getValueInRange(selection, 1 /* EndOfLinePreference.LF */);\n        }\n        else {\n            const selectionRange1 = selectionStartPageRange.intersectRanges(selection);\n            const selectionRange2 = selectionEndPageRange.intersectRanges(selection);\n            text = (model.getValueInRange(selectionRange1, 1 /* EndOfLinePreference.LF */)\n                + String.fromCharCode(8230)\n                + model.getValueInRange(selectionRange2, 1 /* EndOfLinePreference.LF */));\n        }\n        if (trimLongText && text.length > 2 * LIMIT_CHARS) {\n            text = text.substring(0, LIMIT_CHARS) + String.fromCharCode(8230) + text.substring(text.length - LIMIT_CHARS, text.length);\n        }\n        return new TextAreaState(pretext + text + posttext, pretext.length, pretext.length + text.length, selection, pretextRange.endLineNumber - pretextRange.startLineNumber);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nimport { isFirefox } from '../../base/browser/browser.js';\nimport * as types from '../../base/common/types.js';\nimport { status } from '../../base/browser/ui/aria/aria.js';\nimport { Command, EditorCommand, registerEditorCommand, UndoCommand, RedoCommand, SelectAllCommand } from './editorExtensions.js';\nimport { ICodeEditorService } from './services/codeEditorService.js';\nimport { ColumnSelection } from '../common/cursor/cursorColumnSelection.js';\nimport { CursorState } from '../common/cursorCommon.js';\nimport { DeleteOperations } from '../common/cursor/cursorDeleteOperations.js';\nimport { CursorMove as CursorMove_, CursorMoveCommands } from '../common/cursor/cursorMoveCommands.js';\nimport { TypeOperations } from '../common/cursor/cursorTypeOperations.js';\nimport { Position } from '../common/core/position.js';\nimport { Range } from '../common/core/range.js';\nimport { EditorContextKeys } from '../common/editorContextKeys.js';\nimport { ContextKeyExpr } from '../../platform/contextkey/common/contextkey.js';\nimport { KeybindingsRegistry } from '../../platform/keybinding/common/keybindingsRegistry.js';\nimport { getActiveElement } from '../../base/browser/dom.js';\nconst CORE_WEIGHT = 0 /* KeybindingWeight.EditorCore */;\nexport class CoreEditorCommand extends EditorCommand {\n    runEditorCommand(accessor, editor, args) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            // the editor has no view => has no cursors\n            return;\n        }\n        this.runCoreEditorCommand(viewModel, args || {});\n    }\n}\nexport var EditorScroll_;\n(function (EditorScroll_) {\n    const isEditorScrollArgs = function (arg) {\n        if (!types.isObject(arg)) {\n            return false;\n        }\n        const scrollArg = arg;\n        if (!types.isString(scrollArg.to)) {\n            return false;\n        }\n        if (!types.isUndefined(scrollArg.by) && !types.isString(scrollArg.by)) {\n            return false;\n        }\n        if (!types.isUndefined(scrollArg.value) && !types.isNumber(scrollArg.value)) {\n            return false;\n        }\n        if (!types.isUndefined(scrollArg.revealCursor) && !types.isBoolean(scrollArg.revealCursor)) {\n            return false;\n        }\n        return true;\n    };\n    EditorScroll_.description = {\n        description: 'Scroll editor in the given direction',\n        args: [\n            {\n                name: 'Editor scroll argument object',\n                description: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t* 'to': A mandatory direction value.\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'up', 'down'\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t* 'by': Unit to move. Default is computed based on 'to' value.\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'line', 'wrappedLine', 'page', 'halfPage', 'editor'\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t* 'value': Number of units to move. Default is '1'.\n\t\t\t\t\t* 'revealCursor': If 'true' reveals the cursor if it is outside view port.\n\t\t\t\t`,\n                constraint: isEditorScrollArgs,\n                schema: {\n                    'type': 'object',\n                    'required': ['to'],\n                    'properties': {\n                        'to': {\n                            'type': 'string',\n                            'enum': ['up', 'down']\n                        },\n                        'by': {\n                            'type': 'string',\n                            'enum': ['line', 'wrappedLine', 'page', 'halfPage', 'editor']\n                        },\n                        'value': {\n                            'type': 'number',\n                            'default': 1\n                        },\n                        'revealCursor': {\n                            'type': 'boolean',\n                        }\n                    }\n                }\n            }\n        ]\n    };\n    /**\n     * Directions in the view for editor scroll command.\n     */\n    EditorScroll_.RawDirection = {\n        Up: 'up',\n        Right: 'right',\n        Down: 'down',\n        Left: 'left'\n    };\n    /**\n     * Units for editor scroll 'by' argument\n     */\n    EditorScroll_.RawUnit = {\n        Line: 'line',\n        WrappedLine: 'wrappedLine',\n        Page: 'page',\n        HalfPage: 'halfPage',\n        Editor: 'editor',\n        Column: 'column'\n    };\n    function parse(args) {\n        let direction;\n        switch (args.to) {\n            case EditorScroll_.RawDirection.Up:\n                direction = 1 /* Direction.Up */;\n                break;\n            case EditorScroll_.RawDirection.Right:\n                direction = 2 /* Direction.Right */;\n                break;\n            case EditorScroll_.RawDirection.Down:\n                direction = 3 /* Direction.Down */;\n                break;\n            case EditorScroll_.RawDirection.Left:\n                direction = 4 /* Direction.Left */;\n                break;\n            default:\n                // Illegal arguments\n                return null;\n        }\n        let unit;\n        switch (args.by) {\n            case EditorScroll_.RawUnit.Line:\n                unit = 1 /* Unit.Line */;\n                break;\n            case EditorScroll_.RawUnit.WrappedLine:\n                unit = 2 /* Unit.WrappedLine */;\n                break;\n            case EditorScroll_.RawUnit.Page:\n                unit = 3 /* Unit.Page */;\n                break;\n            case EditorScroll_.RawUnit.HalfPage:\n                unit = 4 /* Unit.HalfPage */;\n                break;\n            case EditorScroll_.RawUnit.Editor:\n                unit = 5 /* Unit.Editor */;\n                break;\n            case EditorScroll_.RawUnit.Column:\n                unit = 6 /* Unit.Column */;\n                break;\n            default:\n                unit = 2 /* Unit.WrappedLine */;\n        }\n        const value = Math.floor(args.value || 1);\n        const revealCursor = !!args.revealCursor;\n        return {\n            direction: direction,\n            unit: unit,\n            value: value,\n            revealCursor: revealCursor,\n            select: (!!args.select)\n        };\n    }\n    EditorScroll_.parse = parse;\n})(EditorScroll_ || (EditorScroll_ = {}));\nexport var RevealLine_;\n(function (RevealLine_) {\n    const isRevealLineArgs = function (arg) {\n        if (!types.isObject(arg)) {\n            return false;\n        }\n        const reveaLineArg = arg;\n        if (!types.isNumber(reveaLineArg.lineNumber) && !types.isString(reveaLineArg.lineNumber)) {\n            return false;\n        }\n        if (!types.isUndefined(reveaLineArg.at) && !types.isString(reveaLineArg.at)) {\n            return false;\n        }\n        return true;\n    };\n    RevealLine_.description = {\n        description: 'Reveal the given line at the given logical position',\n        args: [\n            {\n                name: 'Reveal line argument object',\n                description: `Property-value pairs that can be passed through this argument:\n\t\t\t\t\t* 'lineNumber': A mandatory line number value.\n\t\t\t\t\t* 'at': Logical position at which line has to be revealed.\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t\t\t'top', 'center', 'bottom'\n\t\t\t\t\t\t\\`\\`\\`\n\t\t\t\t`,\n                constraint: isRevealLineArgs,\n                schema: {\n                    'type': 'object',\n                    'required': ['lineNumber'],\n                    'properties': {\n                        'lineNumber': {\n                            'type': ['number', 'string'],\n                        },\n                        'at': {\n                            'type': 'string',\n                            'enum': ['top', 'center', 'bottom']\n                        }\n                    }\n                }\n            }\n        ]\n    };\n    /**\n     * Values for reveal line 'at' argument\n     */\n    RevealLine_.RawAtArgument = {\n        Top: 'top',\n        Center: 'center',\n        Bottom: 'bottom'\n    };\n})(RevealLine_ || (RevealLine_ = {}));\nclass EditorOrNativeTextInputCommand {\n    constructor(target) {\n        // 1. handle case when focus is in editor.\n        target.addImplementation(10000, 'code-editor', (accessor, args) => {\n            // Only if editor text focus (i.e. not if editor has widget focus).\n            const focusedEditor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n            if (focusedEditor && focusedEditor.hasTextFocus()) {\n                return this._runEditorCommand(accessor, focusedEditor, args);\n            }\n            return false;\n        });\n        // 2. handle case when focus is in some other `input` / `textarea`.\n        target.addImplementation(1000, 'generic-dom-input-textarea', (accessor, args) => {\n            // Only if focused on an element that allows for entering text\n            const activeElement = getActiveElement();\n            if (activeElement && ['input', 'textarea'].indexOf(activeElement.tagName.toLowerCase()) >= 0) {\n                this.runDOMCommand(activeElement);\n                return true;\n            }\n            return false;\n        });\n        // 3. (default) handle case when focus is somewhere else.\n        target.addImplementation(0, 'generic-dom', (accessor, args) => {\n            // Redirecting to active editor\n            const activeEditor = accessor.get(ICodeEditorService).getActiveCodeEditor();\n            if (activeEditor) {\n                activeEditor.focus();\n                return this._runEditorCommand(accessor, activeEditor, args);\n            }\n            return false;\n        });\n    }\n    _runEditorCommand(accessor, editor, args) {\n        const result = this.runEditorCommand(accessor, editor, args);\n        if (result) {\n            return result;\n        }\n        return true;\n    }\n}\nexport var CoreNavigationCommands;\n(function (CoreNavigationCommands) {\n    class BaseMoveToCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            viewModel.model.pushStackElement();\n            const cursorStateChanged = viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                CursorMoveCommands.moveTo(viewModel, viewModel.getPrimaryCursorState(), this._inSelectionMode, args.position, args.viewPosition)\n            ]);\n            if (cursorStateChanged && args.revealType !== 2 /* NavigationCommandRevealType.None */) {\n                viewModel.revealPrimaryCursor(args.source, true, true);\n            }\n        }\n    }\n    CoreNavigationCommands.MoveTo = registerEditorCommand(new BaseMoveToCommand({\n        id: '_moveTo',\n        inSelectionMode: false,\n        precondition: undefined\n    }));\n    CoreNavigationCommands.MoveToSelect = registerEditorCommand(new BaseMoveToCommand({\n        id: '_moveToSelect',\n        inSelectionMode: true,\n        precondition: undefined\n    }));\n    class ColumnSelectCommand extends CoreEditorCommand {\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            const result = this._getColumnSelectResult(viewModel, viewModel.getPrimaryCursorState(), viewModel.getCursorColumnSelectData(), args);\n            if (result === null) {\n                // invalid arguments\n                return;\n            }\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, result.viewStates.map((viewState) => CursorState.fromViewState(viewState)));\n            viewModel.setCursorColumnSelectData({\n                isReal: true,\n                fromViewLineNumber: result.fromLineNumber,\n                fromViewVisualColumn: result.fromVisualColumn,\n                toViewLineNumber: result.toLineNumber,\n                toViewVisualColumn: result.toVisualColumn\n            });\n            if (result.reversed) {\n                viewModel.revealTopMostCursor(args.source);\n            }\n            else {\n                viewModel.revealBottomMostCursor(args.source);\n            }\n        }\n    }\n    CoreNavigationCommands.ColumnSelect = registerEditorCommand(new class extends ColumnSelectCommand {\n        constructor() {\n            super({\n                id: 'columnSelect',\n                precondition: undefined\n            });\n        }\n        _getColumnSelectResult(viewModel, primary, prevColumnSelectData, args) {\n            if (typeof args.position === 'undefined' || typeof args.viewPosition === 'undefined' || typeof args.mouseColumn === 'undefined') {\n                return null;\n            }\n            // validate `args`\n            const validatedPosition = viewModel.model.validatePosition(args.position);\n            const validatedViewPosition = viewModel.coordinatesConverter.validateViewPosition(new Position(args.viewPosition.lineNumber, args.viewPosition.column), validatedPosition);\n            const fromViewLineNumber = args.doColumnSelect ? prevColumnSelectData.fromViewLineNumber : validatedViewPosition.lineNumber;\n            const fromViewVisualColumn = args.doColumnSelect ? prevColumnSelectData.fromViewVisualColumn : args.mouseColumn - 1;\n            return ColumnSelection.columnSelect(viewModel.cursorConfig, viewModel, fromViewLineNumber, fromViewVisualColumn, validatedViewPosition.lineNumber, args.mouseColumn - 1);\n        }\n    });\n    CoreNavigationCommands.CursorColumnSelectLeft = registerEditorCommand(new class extends ColumnSelectCommand {\n        constructor() {\n            super({\n                id: 'cursorColumnSelectLeft',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 15 /* KeyCode.LeftArrow */,\n                    linux: { primary: 0 }\n                }\n            });\n        }\n        _getColumnSelectResult(viewModel, primary, prevColumnSelectData, args) {\n            return ColumnSelection.columnSelectLeft(viewModel.cursorConfig, viewModel, prevColumnSelectData);\n        }\n    });\n    CoreNavigationCommands.CursorColumnSelectRight = registerEditorCommand(new class extends ColumnSelectCommand {\n        constructor() {\n            super({\n                id: 'cursorColumnSelectRight',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 17 /* KeyCode.RightArrow */,\n                    linux: { primary: 0 }\n                }\n            });\n        }\n        _getColumnSelectResult(viewModel, primary, prevColumnSelectData, args) {\n            return ColumnSelection.columnSelectRight(viewModel.cursorConfig, viewModel, prevColumnSelectData);\n        }\n    });\n    class ColumnSelectUpCommand extends ColumnSelectCommand {\n        constructor(opts) {\n            super(opts);\n            this._isPaged = opts.isPaged;\n        }\n        _getColumnSelectResult(viewModel, primary, prevColumnSelectData, args) {\n            return ColumnSelection.columnSelectUp(viewModel.cursorConfig, viewModel, prevColumnSelectData, this._isPaged);\n        }\n    }\n    CoreNavigationCommands.CursorColumnSelectUp = registerEditorCommand(new ColumnSelectUpCommand({\n        isPaged: false,\n        id: 'cursorColumnSelectUp',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */,\n            linux: { primary: 0 }\n        }\n    }));\n    CoreNavigationCommands.CursorColumnSelectPageUp = registerEditorCommand(new ColumnSelectUpCommand({\n        isPaged: true,\n        id: 'cursorColumnSelectPageUp',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 11 /* KeyCode.PageUp */,\n            linux: { primary: 0 }\n        }\n    }));\n    class ColumnSelectDownCommand extends ColumnSelectCommand {\n        constructor(opts) {\n            super(opts);\n            this._isPaged = opts.isPaged;\n        }\n        _getColumnSelectResult(viewModel, primary, prevColumnSelectData, args) {\n            return ColumnSelection.columnSelectDown(viewModel.cursorConfig, viewModel, prevColumnSelectData, this._isPaged);\n        }\n    }\n    CoreNavigationCommands.CursorColumnSelectDown = registerEditorCommand(new ColumnSelectDownCommand({\n        isPaged: false,\n        id: 'cursorColumnSelectDown',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */,\n            linux: { primary: 0 }\n        }\n    }));\n    CoreNavigationCommands.CursorColumnSelectPageDown = registerEditorCommand(new ColumnSelectDownCommand({\n        isPaged: true,\n        id: 'cursorColumnSelectPageDown',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 512 /* KeyMod.Alt */ | 12 /* KeyCode.PageDown */,\n            linux: { primary: 0 }\n        }\n    }));\n    class CursorMoveImpl extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'cursorMove',\n                precondition: undefined,\n                description: CursorMove_.description\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            const parsed = CursorMove_.parse(args);\n            if (!parsed) {\n                // illegal arguments\n                return;\n            }\n            this._runCursorMove(viewModel, args.source, parsed);\n        }\n        _runCursorMove(viewModel, source, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(source, 3 /* CursorChangeReason.Explicit */, CursorMoveImpl._move(viewModel, viewModel.getCursorStates(), args));\n            viewModel.revealPrimaryCursor(source, true);\n        }\n        static _move(viewModel, cursors, args) {\n            const inSelectionMode = args.select;\n            const value = args.value;\n            switch (args.direction) {\n                case 0 /* CursorMove_.Direction.Left */:\n                case 1 /* CursorMove_.Direction.Right */:\n                case 2 /* CursorMove_.Direction.Up */:\n                case 3 /* CursorMove_.Direction.Down */:\n                case 4 /* CursorMove_.Direction.PrevBlankLine */:\n                case 5 /* CursorMove_.Direction.NextBlankLine */:\n                case 6 /* CursorMove_.Direction.WrappedLineStart */:\n                case 7 /* CursorMove_.Direction.WrappedLineFirstNonWhitespaceCharacter */:\n                case 8 /* CursorMove_.Direction.WrappedLineColumnCenter */:\n                case 9 /* CursorMove_.Direction.WrappedLineEnd */:\n                case 10 /* CursorMove_.Direction.WrappedLineLastNonWhitespaceCharacter */:\n                    return CursorMoveCommands.simpleMove(viewModel, cursors, args.direction, inSelectionMode, value, args.unit);\n                case 11 /* CursorMove_.Direction.ViewPortTop */:\n                case 13 /* CursorMove_.Direction.ViewPortBottom */:\n                case 12 /* CursorMove_.Direction.ViewPortCenter */:\n                case 14 /* CursorMove_.Direction.ViewPortIfOutside */:\n                    return CursorMoveCommands.viewportMove(viewModel, cursors, args.direction, inSelectionMode, value);\n                default:\n                    return null;\n            }\n        }\n    }\n    CoreNavigationCommands.CursorMoveImpl = CursorMoveImpl;\n    CoreNavigationCommands.CursorMove = registerEditorCommand(new CursorMoveImpl());\n    class CursorMoveBasedCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._staticArgs = opts.args;\n        }\n        runCoreEditorCommand(viewModel, dynamicArgs) {\n            let args = this._staticArgs;\n            if (this._staticArgs.value === -1 /* Constants.PAGE_SIZE_MARKER */) {\n                // -1 is a marker for page size\n                args = {\n                    direction: this._staticArgs.direction,\n                    unit: this._staticArgs.unit,\n                    select: this._staticArgs.select,\n                    value: dynamicArgs.pageSize || viewModel.cursorConfig.pageSize\n                };\n            }\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(dynamicArgs.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.simpleMove(viewModel, viewModel.getCursorStates(), args.direction, args.select, args.value, args.unit));\n            viewModel.revealPrimaryCursor(dynamicArgs.source, true);\n        }\n    }\n    CoreNavigationCommands.CursorLeft = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 0 /* CursorMove_.Direction.Left */,\n            unit: 0 /* CursorMove_.Unit.None */,\n            select: false,\n            value: 1\n        },\n        id: 'cursorLeft',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 15 /* KeyCode.LeftArrow */,\n            mac: { primary: 15 /* KeyCode.LeftArrow */, secondary: [256 /* KeyMod.WinCtrl */ | 32 /* KeyCode.KeyB */] }\n        }\n    }));\n    CoreNavigationCommands.CursorLeftSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 0 /* CursorMove_.Direction.Left */,\n            unit: 0 /* CursorMove_.Unit.None */,\n            select: true,\n            value: 1\n        },\n        id: 'cursorLeftSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 15 /* KeyCode.LeftArrow */\n        }\n    }));\n    CoreNavigationCommands.CursorRight = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 1 /* CursorMove_.Direction.Right */,\n            unit: 0 /* CursorMove_.Unit.None */,\n            select: false,\n            value: 1\n        },\n        id: 'cursorRight',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 17 /* KeyCode.RightArrow */,\n            mac: { primary: 17 /* KeyCode.RightArrow */, secondary: [256 /* KeyMod.WinCtrl */ | 36 /* KeyCode.KeyF */] }\n        }\n    }));\n    CoreNavigationCommands.CursorRightSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 1 /* CursorMove_.Direction.Right */,\n            unit: 0 /* CursorMove_.Unit.None */,\n            select: true,\n            value: 1\n        },\n        id: 'cursorRightSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 17 /* KeyCode.RightArrow */\n        }\n    }));\n    CoreNavigationCommands.CursorUp = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 2 /* CursorMove_.Direction.Up */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: false,\n            value: 1\n        },\n        id: 'cursorUp',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 16 /* KeyCode.UpArrow */,\n            mac: { primary: 16 /* KeyCode.UpArrow */, secondary: [256 /* KeyMod.WinCtrl */ | 46 /* KeyCode.KeyP */] }\n        }\n    }));\n    CoreNavigationCommands.CursorUpSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 2 /* CursorMove_.Direction.Up */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: true,\n            value: 1\n        },\n        id: 'cursorUpSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */,\n            secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */],\n            mac: { primary: 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */ },\n            linux: { primary: 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */ }\n        }\n    }));\n    CoreNavigationCommands.CursorPageUp = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 2 /* CursorMove_.Direction.Up */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: false,\n            value: -1 /* Constants.PAGE_SIZE_MARKER */\n        },\n        id: 'cursorPageUp',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 11 /* KeyCode.PageUp */\n        }\n    }));\n    CoreNavigationCommands.CursorPageUpSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 2 /* CursorMove_.Direction.Up */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: true,\n            value: -1 /* Constants.PAGE_SIZE_MARKER */\n        },\n        id: 'cursorPageUpSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 11 /* KeyCode.PageUp */\n        }\n    }));\n    CoreNavigationCommands.CursorDown = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 3 /* CursorMove_.Direction.Down */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: false,\n            value: 1\n        },\n        id: 'cursorDown',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 18 /* KeyCode.DownArrow */,\n            mac: { primary: 18 /* KeyCode.DownArrow */, secondary: [256 /* KeyMod.WinCtrl */ | 44 /* KeyCode.KeyN */] }\n        }\n    }));\n    CoreNavigationCommands.CursorDownSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 3 /* CursorMove_.Direction.Down */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: true,\n            value: 1\n        },\n        id: 'cursorDownSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */,\n            secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */],\n            mac: { primary: 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */ },\n            linux: { primary: 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */ }\n        }\n    }));\n    CoreNavigationCommands.CursorPageDown = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 3 /* CursorMove_.Direction.Down */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: false,\n            value: -1 /* Constants.PAGE_SIZE_MARKER */\n        },\n        id: 'cursorPageDown',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 12 /* KeyCode.PageDown */\n        }\n    }));\n    CoreNavigationCommands.CursorPageDownSelect = registerEditorCommand(new CursorMoveBasedCommand({\n        args: {\n            direction: 3 /* CursorMove_.Direction.Down */,\n            unit: 2 /* CursorMove_.Unit.WrappedLine */,\n            select: true,\n            value: -1 /* Constants.PAGE_SIZE_MARKER */\n        },\n        id: 'cursorPageDownSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 12 /* KeyCode.PageDown */\n        }\n    }));\n    CoreNavigationCommands.CreateCursor = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'createCursor',\n                precondition: undefined\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            let newState;\n            if (args.wholeLine) {\n                newState = CursorMoveCommands.line(viewModel, viewModel.getPrimaryCursorState(), false, args.position, args.viewPosition);\n            }\n            else {\n                newState = CursorMoveCommands.moveTo(viewModel, viewModel.getPrimaryCursorState(), false, args.position, args.viewPosition);\n            }\n            const states = viewModel.getCursorStates();\n            // Check if we should remove a cursor (sort of like a toggle)\n            if (states.length > 1) {\n                const newModelPosition = (newState.modelState ? newState.modelState.position : null);\n                const newViewPosition = (newState.viewState ? newState.viewState.position : null);\n                for (let i = 0, len = states.length; i < len; i++) {\n                    const state = states[i];\n                    if (newModelPosition && !state.modelState.selection.containsPosition(newModelPosition)) {\n                        continue;\n                    }\n                    if (newViewPosition && !state.viewState.selection.containsPosition(newViewPosition)) {\n                        continue;\n                    }\n                    // => Remove the cursor\n                    states.splice(i, 1);\n                    viewModel.model.pushStackElement();\n                    viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, states);\n                    return;\n                }\n            }\n            // => Add the new cursor\n            states.push(newState);\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, states);\n        }\n    });\n    CoreNavigationCommands.LastCursorMoveToSelect = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: '_lastCursorMoveToSelect',\n                precondition: undefined\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            const lastAddedCursorIndex = viewModel.getLastAddedCursorIndex();\n            const states = viewModel.getCursorStates();\n            const newStates = states.slice(0);\n            newStates[lastAddedCursorIndex] = CursorMoveCommands.moveTo(viewModel, states[lastAddedCursorIndex], true, args.position, args.viewPosition);\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, newStates);\n        }\n    });\n    class HomeCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.moveToBeginningOfLine(viewModel, viewModel.getCursorStates(), this._inSelectionMode));\n            viewModel.revealPrimaryCursor(args.source, true);\n        }\n    }\n    CoreNavigationCommands.CursorHome = registerEditorCommand(new HomeCommand({\n        inSelectionMode: false,\n        id: 'cursorHome',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 14 /* KeyCode.Home */,\n            mac: { primary: 14 /* KeyCode.Home */, secondary: [2048 /* KeyMod.CtrlCmd */ | 15 /* KeyCode.LeftArrow */] }\n        }\n    }));\n    CoreNavigationCommands.CursorHomeSelect = registerEditorCommand(new HomeCommand({\n        inSelectionMode: true,\n        id: 'cursorHomeSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 14 /* KeyCode.Home */,\n            mac: { primary: 1024 /* KeyMod.Shift */ | 14 /* KeyCode.Home */, secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 15 /* KeyCode.LeftArrow */] }\n        }\n    }));\n    class LineStartCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, this._exec(viewModel.getCursorStates()));\n            viewModel.revealPrimaryCursor(args.source, true);\n        }\n        _exec(cursors) {\n            const result = [];\n            for (let i = 0, len = cursors.length; i < len; i++) {\n                const cursor = cursors[i];\n                const lineNumber = cursor.modelState.position.lineNumber;\n                result[i] = CursorState.fromModelState(cursor.modelState.move(this._inSelectionMode, lineNumber, 1, 0));\n            }\n            return result;\n        }\n    }\n    CoreNavigationCommands.CursorLineStart = registerEditorCommand(new LineStartCommand({\n        inSelectionMode: false,\n        id: 'cursorLineStart',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 0,\n            mac: { primary: 256 /* KeyMod.WinCtrl */ | 31 /* KeyCode.KeyA */ }\n        }\n    }));\n    CoreNavigationCommands.CursorLineStartSelect = registerEditorCommand(new LineStartCommand({\n        inSelectionMode: true,\n        id: 'cursorLineStartSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 0,\n            mac: { primary: 256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 31 /* KeyCode.KeyA */ }\n        }\n    }));\n    class EndCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.moveToEndOfLine(viewModel, viewModel.getCursorStates(), this._inSelectionMode, args.sticky || false));\n            viewModel.revealPrimaryCursor(args.source, true);\n        }\n    }\n    CoreNavigationCommands.CursorEnd = registerEditorCommand(new EndCommand({\n        inSelectionMode: false,\n        id: 'cursorEnd',\n        precondition: undefined,\n        kbOpts: {\n            args: { sticky: false },\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 13 /* KeyCode.End */,\n            mac: { primary: 13 /* KeyCode.End */, secondary: [2048 /* KeyMod.CtrlCmd */ | 17 /* KeyCode.RightArrow */] }\n        },\n        description: {\n            description: `Go to End`,\n            args: [{\n                    name: 'args',\n                    schema: {\n                        type: 'object',\n                        properties: {\n                            'sticky': {\n                                description: nls.localize('stickydesc', \"Stick to the end even when going to longer lines\"),\n                                type: 'boolean',\n                                default: false\n                            }\n                        }\n                    }\n                }]\n        }\n    }));\n    CoreNavigationCommands.CursorEndSelect = registerEditorCommand(new EndCommand({\n        inSelectionMode: true,\n        id: 'cursorEndSelect',\n        precondition: undefined,\n        kbOpts: {\n            args: { sticky: false },\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 1024 /* KeyMod.Shift */ | 13 /* KeyCode.End */,\n            mac: { primary: 1024 /* KeyMod.Shift */ | 13 /* KeyCode.End */, secondary: [2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 17 /* KeyCode.RightArrow */] }\n        },\n        description: {\n            description: `Select to End`,\n            args: [{\n                    name: 'args',\n                    schema: {\n                        type: 'object',\n                        properties: {\n                            'sticky': {\n                                description: nls.localize('stickydesc', \"Stick to the end even when going to longer lines\"),\n                                type: 'boolean',\n                                default: false\n                            }\n                        }\n                    }\n                }]\n        }\n    }));\n    class LineEndCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, this._exec(viewModel, viewModel.getCursorStates()));\n            viewModel.revealPrimaryCursor(args.source, true);\n        }\n        _exec(viewModel, cursors) {\n            const result = [];\n            for (let i = 0, len = cursors.length; i < len; i++) {\n                const cursor = cursors[i];\n                const lineNumber = cursor.modelState.position.lineNumber;\n                const maxColumn = viewModel.model.getLineMaxColumn(lineNumber);\n                result[i] = CursorState.fromModelState(cursor.modelState.move(this._inSelectionMode, lineNumber, maxColumn, 0));\n            }\n            return result;\n        }\n    }\n    CoreNavigationCommands.CursorLineEnd = registerEditorCommand(new LineEndCommand({\n        inSelectionMode: false,\n        id: 'cursorLineEnd',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 0,\n            mac: { primary: 256 /* KeyMod.WinCtrl */ | 35 /* KeyCode.KeyE */ }\n        }\n    }));\n    CoreNavigationCommands.CursorLineEndSelect = registerEditorCommand(new LineEndCommand({\n        inSelectionMode: true,\n        id: 'cursorLineEndSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 0,\n            mac: { primary: 256 /* KeyMod.WinCtrl */ | 1024 /* KeyMod.Shift */ | 35 /* KeyCode.KeyE */ }\n        }\n    }));\n    class TopCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.moveToBeginningOfBuffer(viewModel, viewModel.getCursorStates(), this._inSelectionMode));\n            viewModel.revealPrimaryCursor(args.source, true);\n        }\n    }\n    CoreNavigationCommands.CursorTop = registerEditorCommand(new TopCommand({\n        inSelectionMode: false,\n        id: 'cursorTop',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 14 /* KeyCode.Home */,\n            mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */ }\n        }\n    }));\n    CoreNavigationCommands.CursorTopSelect = registerEditorCommand(new TopCommand({\n        inSelectionMode: true,\n        id: 'cursorTopSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 14 /* KeyCode.Home */,\n            mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */ }\n        }\n    }));\n    class BottomCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.moveToEndOfBuffer(viewModel, viewModel.getCursorStates(), this._inSelectionMode));\n            viewModel.revealPrimaryCursor(args.source, true);\n        }\n    }\n    CoreNavigationCommands.CursorBottom = registerEditorCommand(new BottomCommand({\n        inSelectionMode: false,\n        id: 'cursorBottom',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 13 /* KeyCode.End */,\n            mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */ }\n        }\n    }));\n    CoreNavigationCommands.CursorBottomSelect = registerEditorCommand(new BottomCommand({\n        inSelectionMode: true,\n        id: 'cursorBottomSelect',\n        precondition: undefined,\n        kbOpts: {\n            weight: CORE_WEIGHT,\n            kbExpr: EditorContextKeys.textInputFocus,\n            primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 13 /* KeyCode.End */,\n            mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */ }\n        }\n    }));\n    class EditorScrollImpl extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'editorScroll',\n                precondition: undefined,\n                description: EditorScroll_.description\n            });\n        }\n        determineScrollMethod(args) {\n            const horizontalUnits = [6 /* EditorScroll_.Unit.Column */];\n            const verticalUnits = [\n                1 /* EditorScroll_.Unit.Line */,\n                2 /* EditorScroll_.Unit.WrappedLine */,\n                3 /* EditorScroll_.Unit.Page */,\n                4 /* EditorScroll_.Unit.HalfPage */,\n                5 /* EditorScroll_.Unit.Editor */,\n                6 /* EditorScroll_.Unit.Column */\n            ];\n            const horizontalDirections = [4 /* EditorScroll_.Direction.Left */, 2 /* EditorScroll_.Direction.Right */];\n            const verticalDirections = [1 /* EditorScroll_.Direction.Up */, 3 /* EditorScroll_.Direction.Down */];\n            if (horizontalUnits.includes(args.unit) && horizontalDirections.includes(args.direction)) {\n                return this._runHorizontalEditorScroll.bind(this);\n            }\n            if (verticalUnits.includes(args.unit) && verticalDirections.includes(args.direction)) {\n                return this._runVerticalEditorScroll.bind(this);\n            }\n            return null;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            const parsed = EditorScroll_.parse(args);\n            if (!parsed) {\n                // illegal arguments\n                return;\n            }\n            const runEditorScroll = this.determineScrollMethod(parsed);\n            if (!runEditorScroll) {\n                // Incompatible unit and direction\n                return;\n            }\n            runEditorScroll(viewModel, args.source, parsed);\n        }\n        _runVerticalEditorScroll(viewModel, source, args) {\n            const desiredScrollTop = this._computeDesiredScrollTop(viewModel, args);\n            if (args.revealCursor) {\n                // must ensure cursor is in new visible range\n                const desiredVisibleViewRange = viewModel.getCompletelyVisibleViewRangeAtScrollTop(desiredScrollTop);\n                viewModel.setCursorStates(source, 3 /* CursorChangeReason.Explicit */, [\n                    CursorMoveCommands.findPositionInViewportIfOutside(viewModel, viewModel.getPrimaryCursorState(), desiredVisibleViewRange, args.select)\n                ]);\n            }\n            viewModel.viewLayout.setScrollPosition({ scrollTop: desiredScrollTop }, 0 /* ScrollType.Smooth */);\n        }\n        _computeDesiredScrollTop(viewModel, args) {\n            if (args.unit === 1 /* EditorScroll_.Unit.Line */) {\n                // scrolling by model lines\n                const futureViewport = viewModel.viewLayout.getFutureViewport();\n                const visibleViewRange = viewModel.getCompletelyVisibleViewRangeAtScrollTop(futureViewport.top);\n                const visibleModelRange = viewModel.coordinatesConverter.convertViewRangeToModelRange(visibleViewRange);\n                let desiredTopModelLineNumber;\n                if (args.direction === 1 /* EditorScroll_.Direction.Up */) {\n                    // must go x model lines up\n                    desiredTopModelLineNumber = Math.max(1, visibleModelRange.startLineNumber - args.value);\n                }\n                else {\n                    // must go x model lines down\n                    desiredTopModelLineNumber = Math.min(viewModel.model.getLineCount(), visibleModelRange.startLineNumber + args.value);\n                }\n                const viewPosition = viewModel.coordinatesConverter.convertModelPositionToViewPosition(new Position(desiredTopModelLineNumber, 1));\n                return viewModel.viewLayout.getVerticalOffsetForLineNumber(viewPosition.lineNumber);\n            }\n            if (args.unit === 5 /* EditorScroll_.Unit.Editor */) {\n                let desiredTopModelLineNumber = 0;\n                if (args.direction === 3 /* EditorScroll_.Direction.Down */) {\n                    desiredTopModelLineNumber = viewModel.model.getLineCount() - viewModel.cursorConfig.pageSize;\n                }\n                return viewModel.viewLayout.getVerticalOffsetForLineNumber(desiredTopModelLineNumber);\n            }\n            let noOfLines;\n            if (args.unit === 3 /* EditorScroll_.Unit.Page */) {\n                noOfLines = viewModel.cursorConfig.pageSize * args.value;\n            }\n            else if (args.unit === 4 /* EditorScroll_.Unit.HalfPage */) {\n                noOfLines = Math.round(viewModel.cursorConfig.pageSize / 2) * args.value;\n            }\n            else {\n                noOfLines = args.value;\n            }\n            const deltaLines = (args.direction === 1 /* EditorScroll_.Direction.Up */ ? -1 : 1) * noOfLines;\n            return viewModel.viewLayout.getCurrentScrollTop() + deltaLines * viewModel.cursorConfig.lineHeight;\n        }\n        _runHorizontalEditorScroll(viewModel, source, args) {\n            const desiredScrollLeft = this._computeDesiredScrollLeft(viewModel, args);\n            viewModel.viewLayout.setScrollPosition({ scrollLeft: desiredScrollLeft }, 0 /* ScrollType.Smooth */);\n        }\n        _computeDesiredScrollLeft(viewModel, args) {\n            const deltaColumns = (args.direction === 4 /* EditorScroll_.Direction.Left */ ? -1 : 1) * args.value;\n            return viewModel.viewLayout.getCurrentScrollLeft() + deltaColumns * viewModel.cursorConfig.typicalHalfwidthCharacterWidth;\n        }\n    }\n    CoreNavigationCommands.EditorScrollImpl = EditorScrollImpl;\n    CoreNavigationCommands.EditorScroll = registerEditorCommand(new EditorScrollImpl());\n    CoreNavigationCommands.ScrollLineUp = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollLineUp',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 16 /* KeyCode.UpArrow */,\n                    mac: { primary: 256 /* KeyMod.WinCtrl */ | 11 /* KeyCode.PageUp */ }\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Up,\n                by: EditorScroll_.RawUnit.WrappedLine,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollPageUp = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollPageUp',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 11 /* KeyCode.PageUp */,\n                    win: { primary: 512 /* KeyMod.Alt */ | 11 /* KeyCode.PageUp */ },\n                    linux: { primary: 512 /* KeyMod.Alt */ | 11 /* KeyCode.PageUp */ }\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Up,\n                by: EditorScroll_.RawUnit.Page,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollEditorTop = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollEditorTop',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Up,\n                by: EditorScroll_.RawUnit.Editor,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollLineDown = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollLineDown',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 18 /* KeyCode.DownArrow */,\n                    mac: { primary: 256 /* KeyMod.WinCtrl */ | 12 /* KeyCode.PageDown */ }\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Down,\n                by: EditorScroll_.RawUnit.WrappedLine,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollPageDown = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollPageDown',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 2048 /* KeyMod.CtrlCmd */ | 12 /* KeyCode.PageDown */,\n                    win: { primary: 512 /* KeyMod.Alt */ | 12 /* KeyCode.PageDown */ },\n                    linux: { primary: 512 /* KeyMod.Alt */ | 12 /* KeyCode.PageDown */ }\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Down,\n                by: EditorScroll_.RawUnit.Page,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollEditorBottom = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollEditorBottom',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Down,\n                by: EditorScroll_.RawUnit.Editor,\n                value: 1,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollLeft = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollLeft',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Left,\n                by: EditorScroll_.RawUnit.Column,\n                value: 2,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    CoreNavigationCommands.ScrollRight = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'scrollRight',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            CoreNavigationCommands.EditorScroll.runCoreEditorCommand(viewModel, {\n                to: EditorScroll_.RawDirection.Right,\n                by: EditorScroll_.RawUnit.Column,\n                value: 2,\n                revealCursor: false,\n                select: false,\n                source: args.source\n            });\n        }\n    });\n    class WordCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                CursorMoveCommands.word(viewModel, viewModel.getPrimaryCursorState(), this._inSelectionMode, args.position)\n            ]);\n            if (args.revealType !== 2 /* NavigationCommandRevealType.None */) {\n                viewModel.revealPrimaryCursor(args.source, true, true);\n            }\n        }\n    }\n    CoreNavigationCommands.WordSelect = registerEditorCommand(new WordCommand({\n        inSelectionMode: false,\n        id: '_wordSelect',\n        precondition: undefined\n    }));\n    CoreNavigationCommands.WordSelectDrag = registerEditorCommand(new WordCommand({\n        inSelectionMode: true,\n        id: '_wordSelectDrag',\n        precondition: undefined\n    }));\n    CoreNavigationCommands.LastCursorWordSelect = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'lastCursorWordSelect',\n                precondition: undefined\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            const lastAddedCursorIndex = viewModel.getLastAddedCursorIndex();\n            const states = viewModel.getCursorStates();\n            const newStates = states.slice(0);\n            const lastAddedState = states[lastAddedCursorIndex];\n            newStates[lastAddedCursorIndex] = CursorMoveCommands.word(viewModel, lastAddedState, lastAddedState.modelState.hasSelection(), args.position);\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, newStates);\n        }\n    });\n    class LineCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                CursorMoveCommands.line(viewModel, viewModel.getPrimaryCursorState(), this._inSelectionMode, args.position, args.viewPosition)\n            ]);\n            if (args.revealType !== 2 /* NavigationCommandRevealType.None */) {\n                viewModel.revealPrimaryCursor(args.source, false, true);\n            }\n        }\n    }\n    CoreNavigationCommands.LineSelect = registerEditorCommand(new LineCommand({\n        inSelectionMode: false,\n        id: '_lineSelect',\n        precondition: undefined\n    }));\n    CoreNavigationCommands.LineSelectDrag = registerEditorCommand(new LineCommand({\n        inSelectionMode: true,\n        id: '_lineSelectDrag',\n        precondition: undefined\n    }));\n    class LastCursorLineCommand extends CoreEditorCommand {\n        constructor(opts) {\n            super(opts);\n            this._inSelectionMode = opts.inSelectionMode;\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.position) {\n                return;\n            }\n            const lastAddedCursorIndex = viewModel.getLastAddedCursorIndex();\n            const states = viewModel.getCursorStates();\n            const newStates = states.slice(0);\n            newStates[lastAddedCursorIndex] = CursorMoveCommands.line(viewModel, states[lastAddedCursorIndex], this._inSelectionMode, args.position, args.viewPosition);\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, newStates);\n        }\n    }\n    CoreNavigationCommands.LastCursorLineSelect = registerEditorCommand(new LastCursorLineCommand({\n        inSelectionMode: false,\n        id: 'lastCursorLineSelect',\n        precondition: undefined\n    }));\n    CoreNavigationCommands.LastCursorLineSelectDrag = registerEditorCommand(new LastCursorLineCommand({\n        inSelectionMode: true,\n        id: 'lastCursorLineSelectDrag',\n        precondition: undefined\n    }));\n    CoreNavigationCommands.CancelSelection = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'cancelSelection',\n                precondition: EditorContextKeys.hasNonEmptySelection,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 9 /* KeyCode.Escape */,\n                    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                CursorMoveCommands.cancelSelection(viewModel, viewModel.getPrimaryCursorState())\n            ]);\n            viewModel.revealPrimaryCursor(args.source, true);\n        }\n    });\n    CoreNavigationCommands.RemoveSecondaryCursors = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'removeSecondaryCursors',\n                precondition: EditorContextKeys.hasMultipleSelections,\n                kbOpts: {\n                    weight: CORE_WEIGHT + 1,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 9 /* KeyCode.Escape */,\n                    secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n                }\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                viewModel.getPrimaryCursorState()\n            ]);\n            viewModel.revealPrimaryCursor(args.source, true);\n            status(nls.localize('removedCursor', \"Removed secondary cursors\"));\n        }\n    });\n    CoreNavigationCommands.RevealLine = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'revealLine',\n                precondition: undefined,\n                description: RevealLine_.description\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            const revealLineArg = args;\n            const lineNumberArg = revealLineArg.lineNumber || 0;\n            let lineNumber = typeof lineNumberArg === 'number' ? (lineNumberArg + 1) : (parseInt(lineNumberArg) + 1);\n            if (lineNumber < 1) {\n                lineNumber = 1;\n            }\n            const lineCount = viewModel.model.getLineCount();\n            if (lineNumber > lineCount) {\n                lineNumber = lineCount;\n            }\n            const range = new Range(lineNumber, 1, lineNumber, viewModel.model.getLineMaxColumn(lineNumber));\n            let revealAt = 0 /* VerticalRevealType.Simple */;\n            if (revealLineArg.at) {\n                switch (revealLineArg.at) {\n                    case RevealLine_.RawAtArgument.Top:\n                        revealAt = 3 /* VerticalRevealType.Top */;\n                        break;\n                    case RevealLine_.RawAtArgument.Center:\n                        revealAt = 1 /* VerticalRevealType.Center */;\n                        break;\n                    case RevealLine_.RawAtArgument.Bottom:\n                        revealAt = 4 /* VerticalRevealType.Bottom */;\n                        break;\n                    default:\n                        break;\n                }\n            }\n            const viewRange = viewModel.coordinatesConverter.convertModelRangeToViewRange(range);\n            viewModel.revealRange(args.source, false, viewRange, revealAt, 0 /* ScrollType.Smooth */);\n        }\n    });\n    CoreNavigationCommands.SelectAll = new class extends EditorOrNativeTextInputCommand {\n        constructor() {\n            super(SelectAllCommand);\n        }\n        runDOMCommand(activeElement) {\n            if (isFirefox) {\n                activeElement.focus();\n                activeElement.select();\n            }\n            activeElement.ownerDocument.execCommand('selectAll');\n        }\n        runEditorCommand(accessor, editor, args) {\n            const viewModel = editor._getViewModel();\n            if (!viewModel) {\n                // the editor has no view => has no cursors\n                return;\n            }\n            this.runCoreEditorCommand(viewModel, args);\n        }\n        runCoreEditorCommand(viewModel, args) {\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates('keyboard', 3 /* CursorChangeReason.Explicit */, [\n                CursorMoveCommands.selectAll(viewModel, viewModel.getPrimaryCursorState())\n            ]);\n        }\n    }();\n    CoreNavigationCommands.SetSelection = registerEditorCommand(new class extends CoreEditorCommand {\n        constructor() {\n            super({\n                id: 'setSelection',\n                precondition: undefined\n            });\n        }\n        runCoreEditorCommand(viewModel, args) {\n            if (!args.selection) {\n                return;\n            }\n            viewModel.model.pushStackElement();\n            viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, [\n                CursorState.fromModelSelection(args.selection)\n            ]);\n        }\n    });\n})(CoreNavigationCommands || (CoreNavigationCommands = {}));\nconst columnSelectionCondition = ContextKeyExpr.and(EditorContextKeys.textInputFocus, EditorContextKeys.columnSelection);\nfunction registerColumnSelection(id, keybinding) {\n    KeybindingsRegistry.registerKeybindingRule({\n        id: id,\n        primary: keybinding,\n        when: columnSelectionCondition,\n        weight: CORE_WEIGHT + 1\n    });\n}\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectLeft.id, 1024 /* KeyMod.Shift */ | 15 /* KeyCode.LeftArrow */);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectRight.id, 1024 /* KeyMod.Shift */ | 17 /* KeyCode.RightArrow */);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectUp.id, 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectPageUp.id, 1024 /* KeyMod.Shift */ | 11 /* KeyCode.PageUp */);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectDown.id, 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */);\nregisterColumnSelection(CoreNavigationCommands.CursorColumnSelectPageDown.id, 1024 /* KeyMod.Shift */ | 12 /* KeyCode.PageDown */);\nfunction registerCommand(command) {\n    command.register();\n    return command;\n}\nexport var CoreEditingCommands;\n(function (CoreEditingCommands) {\n    class CoreEditingCommand extends EditorCommand {\n        runEditorCommand(accessor, editor, args) {\n            const viewModel = editor._getViewModel();\n            if (!viewModel) {\n                // the editor has no view => has no cursors\n                return;\n            }\n            this.runCoreEditingCommand(editor, viewModel, args || {});\n        }\n    }\n    CoreEditingCommands.CoreEditingCommand = CoreEditingCommand;\n    CoreEditingCommands.LineBreakInsert = registerEditorCommand(new class extends CoreEditingCommand {\n        constructor() {\n            super({\n                id: 'lineBreakInsert',\n                precondition: EditorContextKeys.writable,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 0,\n                    mac: { primary: 256 /* KeyMod.WinCtrl */ | 45 /* KeyCode.KeyO */ }\n                }\n            });\n        }\n        runCoreEditingCommand(editor, viewModel, args) {\n            editor.pushUndoStop();\n            editor.executeCommands(this.id, TypeOperations.lineBreakInsert(viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection)));\n        }\n    });\n    CoreEditingCommands.Outdent = registerEditorCommand(new class extends CoreEditingCommand {\n        constructor() {\n            super({\n                id: 'outdent',\n                precondition: EditorContextKeys.writable,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, EditorContextKeys.tabDoesNotMoveFocus),\n                    primary: 1024 /* KeyMod.Shift */ | 2 /* KeyCode.Tab */\n                }\n            });\n        }\n        runCoreEditingCommand(editor, viewModel, args) {\n            editor.pushUndoStop();\n            editor.executeCommands(this.id, TypeOperations.outdent(viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection)));\n            editor.pushUndoStop();\n        }\n    });\n    CoreEditingCommands.Tab = registerEditorCommand(new class extends CoreEditingCommand {\n        constructor() {\n            super({\n                id: 'tab',\n                precondition: EditorContextKeys.writable,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.editorTextFocus, EditorContextKeys.tabDoesNotMoveFocus),\n                    primary: 2 /* KeyCode.Tab */\n                }\n            });\n        }\n        runCoreEditingCommand(editor, viewModel, args) {\n            editor.pushUndoStop();\n            editor.executeCommands(this.id, TypeOperations.tab(viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection)));\n            editor.pushUndoStop();\n        }\n    });\n    CoreEditingCommands.DeleteLeft = registerEditorCommand(new class extends CoreEditingCommand {\n        constructor() {\n            super({\n                id: 'deleteLeft',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 1 /* KeyCode.Backspace */,\n                    secondary: [1024 /* KeyMod.Shift */ | 1 /* KeyCode.Backspace */],\n                    mac: { primary: 1 /* KeyCode.Backspace */, secondary: [1024 /* KeyMod.Shift */ | 1 /* KeyCode.Backspace */, 256 /* KeyMod.WinCtrl */ | 38 /* KeyCode.KeyH */, 256 /* KeyMod.WinCtrl */ | 1 /* KeyCode.Backspace */] }\n                }\n            });\n        }\n        runCoreEditingCommand(editor, viewModel, args) {\n            const [shouldPushStackElementBefore, commands] = DeleteOperations.deleteLeft(viewModel.getPrevEditOperationType(), viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection), viewModel.getCursorAutoClosedCharacters());\n            if (shouldPushStackElementBefore) {\n                editor.pushUndoStop();\n            }\n            editor.executeCommands(this.id, commands);\n            viewModel.setPrevEditOperationType(2 /* EditOperationType.DeletingLeft */);\n        }\n    });\n    CoreEditingCommands.DeleteRight = registerEditorCommand(new class extends CoreEditingCommand {\n        constructor() {\n            super({\n                id: 'deleteRight',\n                precondition: undefined,\n                kbOpts: {\n                    weight: CORE_WEIGHT,\n                    kbExpr: EditorContextKeys.textInputFocus,\n                    primary: 20 /* KeyCode.Delete */,\n                    mac: { primary: 20 /* KeyCode.Delete */, secondary: [256 /* KeyMod.WinCtrl */ | 34 /* KeyCode.KeyD */, 256 /* KeyMod.WinCtrl */ | 20 /* KeyCode.Delete */] }\n                }\n            });\n        }\n        runCoreEditingCommand(editor, viewModel, args) {\n            const [shouldPushStackElementBefore, commands] = DeleteOperations.deleteRight(viewModel.getPrevEditOperationType(), viewModel.cursorConfig, viewModel.model, viewModel.getCursorStates().map(s => s.modelState.selection));\n            if (shouldPushStackElementBefore) {\n                editor.pushUndoStop();\n            }\n            editor.executeCommands(this.id, commands);\n            viewModel.setPrevEditOperationType(3 /* EditOperationType.DeletingRight */);\n        }\n    });\n    CoreEditingCommands.Undo = new class extends EditorOrNativeTextInputCommand {\n        constructor() {\n            super(UndoCommand);\n        }\n        runDOMCommand(activeElement) {\n            activeElement.ownerDocument.execCommand('undo');\n        }\n        runEditorCommand(accessor, editor, args) {\n            if (!editor.hasModel() || editor.getOption(90 /* EditorOption.readOnly */) === true) {\n                return;\n            }\n            return editor.getModel().undo();\n        }\n    }();\n    CoreEditingCommands.Redo = new class extends EditorOrNativeTextInputCommand {\n        constructor() {\n            super(RedoCommand);\n        }\n        runDOMCommand(activeElement) {\n            activeElement.ownerDocument.execCommand('redo');\n        }\n        runEditorCommand(accessor, editor, args) {\n            if (!editor.hasModel() || editor.getOption(90 /* EditorOption.readOnly */) === true) {\n                return;\n            }\n            return editor.getModel().redo();\n        }\n    }();\n})(CoreEditingCommands || (CoreEditingCommands = {}));\n/**\n * A command that will invoke a command on the focused editor.\n */\nclass EditorHandlerCommand extends Command {\n    constructor(id, handlerId, description) {\n        super({\n            id: id,\n            precondition: undefined,\n            description: description\n        });\n        this._handlerId = handlerId;\n    }\n    runCommand(accessor, args) {\n        const editor = accessor.get(ICodeEditorService).getFocusedCodeEditor();\n        if (!editor) {\n            return;\n        }\n        editor.trigger('keyboard', this._handlerId, args);\n    }\n}\nfunction registerOverwritableCommand(handlerId, description) {\n    registerCommand(new EditorHandlerCommand('default:' + handlerId, handlerId));\n    registerCommand(new EditorHandlerCommand(handlerId, handlerId, description));\n}\nregisterOverwritableCommand(\"type\" /* Handler.Type */, {\n    description: `Type`,\n    args: [{\n            name: 'args',\n            schema: {\n                'type': 'object',\n                'required': ['text'],\n                'properties': {\n                    'text': {\n                        'type': 'string'\n                    }\n                },\n            }\n        }]\n});\nregisterOverwritableCommand(\"replacePreviousChar\" /* Handler.ReplacePreviousChar */);\nregisterOverwritableCommand(\"compositionType\" /* Handler.CompositionType */);\nregisterOverwritableCommand(\"compositionStart\" /* Handler.CompositionStart */);\nregisterOverwritableCommand(\"compositionEnd\" /* Handler.CompositionEnd */);\nregisterOverwritableCommand(\"paste\" /* Handler.Paste */);\nregisterOverwritableCommand(\"cut\" /* Handler.Cut */);\n"],"names":["applyFontInfo","domNode","fontInfo","FastDomNode","setFontFamily","getMassagedFontFamily","setFontWeight","fontWeight","setFontSize","fontSize","setFontFeatureSettings","fontFeatureSettings","setFontVariationSettings","fontVariationSettings","setLineHeight","lineHeight","setLetterSpacing","letterSpacing","style","fontFamily","EditorSettingMigration","key","migrate","_classCallCheck","this","_createClass","value","options","_read","_write","source","firstDotIndex","indexOf","firstSegment","substring","target","registerEditorSettingMigration","items","push","registerSimpleEditorSettingMigration","values","read","write","_step","_iterator","_createForOfIteratorHelper","s","n","done","_step$value","_slicedToArray","oldValue","newValue","err","e","f","enabled","undefined","suggestFilteredTypesMapping","method","function","constructor","deprecated","field","variable","class","struct","interface","module","property","event","operator","unit","constant","enum","enumMember","keyword","text","color","file","reference","folder","typeParameter","snippet","_i","_Object$entries","Object","entries","length","entry","concat","input","comments","strings","other","__decorate","decorators","desc","d","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","EditorConfiguration","_Disposable","_inherits","_super","_createSuper","isSimpleWidget","container","_accessibilityService","_this","call","_onDidChange","_register","Emitter","onDidChange","_onDidChangeFast","onDidChangeFast","_isDominatedByLongLines","_viewLineCount","_lineNumbersDigitCount","_reservedHeight","_glyphMarginDecorationLaneCount","_computeOptionsMemory","ComputeOptionsMemory","_containerObserver","ElementSizeObserver","dimension","_rawOptions","deepCloneAndMigrateOptions","_validatedOptions","EditorOptionsUtil","validateOptions","_computeOptions","get","startObserving","EditorZoom","onDidChangeZoomLevel","_recomputeOptions","TabFocus","onDidChangeTabFocus","FontMeasurements","browser","onDidChangeScreenReaderOptimized","newOptions","changeEvent","checkEquals","fire","partialEnv","_readEnvConfiguration","bareFontInfo","BareFontInfo","createFromValidatedSettings","pixelRatio","_readFontInfo","env","memory","outerWidth","outerHeight","extraEditorClassName","isDominatedByLongLines","viewLineCount","lineNumbersDigitCount","emptySelectionClipboard","tabFocusMode","getTabFocusMode","accessibilitySupport","glyphMarginDecorationLaneCount","computeOptions","getExtraEditorClassName","getWidth","getHeight","isScreenReaderOptimized","getAccessibilitySupport","readFontInfo","_newOptions","applyUpdate","observe","modelLineCount","Math","floor","digitCount","reservedHeight","decorationLaneCount","Disposable","extra","platform","IAccessibilityService","ValidatedEditorOptions","_values","option","id","ComputedEditorOptions","Error","result","editorOptionsRegistry","editorOption","name","validate","_step2","_iterator2","compute","a","b","Array","isArray","arrays","keys","_deepEquals","_step3","somethingChanged","_iterator3","changed","ConfigurationChangedEvent","update","_step4","_iterator4","hasOwnProperty","didChange","_options","objects","forEach","migration","apply","migrateOptions","referenceDomElement","_referenceDomElement","_width","_height","_resizeObserver","measureReferenceDomElement","stopObserving","_get","_getPrototypeOf","prototype","_this2","observeContentRect","shouldObserve","alreadyObservedThisAnimationFrame","width","height","requestAnimationFrame","ResizeObserver","contentRect","disconnect","emitEvent","observedWidth","observedHeight","clientWidth","clientHeight","max","CharWidthRequest","chr","type","DomCharWidthReader","requests","_bareFontInfo","_requests","_container","_testElements","_createDomElements","document","body","appendChild","_readFromDomElements","removeChild","createElement","position","top","regularDomNode","boldDomNode","italicDomNode","fontStyle","testElements","request","parent","testElement","_render","len","fulfill","offsetWidth","htmlString","innerText","testString","textContent","FontMeasurementsImpl","_cache","FontMeasurementsCache","_evictUntrustedReadingsTimeout","window","clearTimeout","item","put","isTrusted","setTimeout","_evictUntrustedReadings","getValues","somethingRemoved","remove","has","readConfig","_actualReadFontInfo","typicalHalfwidthCharacterWidth","typicalFullwidthCharacterWidth","spaceWidth","maxDigitWidth","FontInfo","isMonospace","canUseHalfwidthRightwardsArrow","middotWidth","wsmiddotWidth","_writeToCache","all","monospace","typicalHalfwidthCharacter","_createRequest","typicalFullwidthCharacter","space","digit0","digit1","digit2","digit3","digit4","digit5","digit6","digit7","digit8","digit9","rightwardsArrow","halfwidthRightwardsArrow","middot","String","fromCharCode","monospaceTestChars","charAt","readCharWidths","EditorFontLigatures","OFF","referenceWidth","diff","_keys","create","itemId","getId","_this3","map","TabFocusImpl","_tabFocus","_onDidChangeTabFocus","HitTestResult","UnknownHitTestResult","hitTarget","ContentHitTestResult","spanNode","injectedText","createFromDOMInfo","ctx","offset","getPositionFromDOMInfo","PointerHandlerLastRenderData","lastViewCursorsRenderData","lastTextareaPosition","MouseTarget","range","EditorRange","lineNumber","column","element","mouseColumn","_deduceRage","detail","outsidePosition","outsideDistance","_typeToString","JSON","stringify","ElementPath","path","HitTestContext","context","viewHelper","lastRenderData","viewModel","configuration","layoutInfo","viewDomNode","stickyTabStops","_context","_viewHelper","mouseVerticalOffset","getZoneAtCoord","viewLayout","isAfterLines","getLineCount","maxLineColumn","getLineMaxColumn","getLineNumberAtVerticalOffset","isInTopPadding","isInBottomPadding","getVerticalOffsetForLineNumber","attr","_findAttribute","getLineWidth","visibleRangeForPosition","getCurrentScrollTop","getCurrentScrollLeft","viewZoneWhitespace","getWhitespaceAtVerticalOffset","viewZoneMiddle","verticalOffset","lineCount","positionBefore","positionAfter","afterLineNumber","Position","viewZoneId","stopAt","ownerDocument","hasAttribute","getAttribute","parentNode","HitTestRequest","_BareHitTestRequest","editorPos","pos","relativePos","_ctx","targetPath","PartFingerprints","collect","Uint8Array","x","y","mouseContentHorizontalOffset","outerHTML","CursorColumns","visibleColumnFromColumn","getLineContent","model","getOptions","tabSize","createUnknown","_getMouseColumn","createTextarea","createMargin","createViewZone","createContentText","createContentEmpty","createContentWidget","createScrollbar","createOverlayWidget","BareHitTestRequest","contentLeft","isInMarginArea","glyphMarginLeft","isInContentArea","MouseTargetFactory","EMPTY_CONTENT_AFTER_LINES","createEmptyContentDataInLines","horizontalDistanceToText","t","isChildOfContentWidgets","isChildOfOverflowingContentWidgets","isChildOfOverlayWidgets","_createMouseTarget","_snapToSoftTabBoundary","fromPositions","plusRange","fulfillContentText","fulfillUnknown","domHitTestExecuted","hitTestResult","_doHitTest","createMouseTargetFromHitTestPosition","withTarget","resolvedRequest","isChildOfOverflowGuard","_hitTestContentWidget","_hitTestOverlayWidget","_hitTestMinimap","_hitTestScrollbarSlider","_hitTestViewZone","_hitTestMargin","_hitTestViewCursor","_hitTestTextArea","_hitTestViewLines","_hitTestScrollbar","widgetId","findAttribute","fulfillContentWidget","fulfillOverlayWidget","mightBeForeignElement","cursorVerticalOffset","viewZoneData","mouseTargetType","fulfillViewZone","isTextArea","fulfillTextarea","res","getFullLineRangeAtCoord","getStartPosition","abs","glyphMarginWidth","lineNumbersWidth","offsetX","fulfillMargin","isChildOfViewLines","fulfillContentEmpty","isStrictChildOfViewLines","getLineLength","lineWidth","isChildOfMinimap","possibleLineNumber","maxColumn","fulfillScrollbar","isChildOfScrollableElement","nodeType","className","test","round","visibleRange","columnHorizontalOffset","left","points","sort","mouseCoordinates","toClientCoordinates","spanNodeClientRect","getBoundingClientRect","mouseIsOverSpanNode","clientX","right","rng","prev","curr","lineStartVerticalOffset","lineEndVerticalOffset","lineCenteredVerticalOffset","adjustedPageY","adjustedPage","PageCoordinates","_actualDoHitTestWithCaretRangeFromPoint","coords","shadowRoot","dom","caretRangeFromPoint","createRange","el","elementFromPoint","firstChild","TEXT_NODE","lastChild","step","rect","getComputedStyle","getPropertyValue","fontVariant","font","pixelCursor","charWidthReader","CharWidthReader","getInstance","getCharWidth","setStart","setEnd","shadowCaretRangeFromPoint","clientY","startContainer","parent1","parent2","parent3","ELEMENT_NODE","ViewLine","CLASS_NAME","startOffset","hitResult","caretPositionFromPoint","offsetNode","parent1ClassName","parent2ClassName","tokenSpan","childNodes","min","lineContent","newPosition","AtomicTabMoveOperations","atomicPosition","_doHitTestWithCaretRangeFromPoint","_doHitTestWithCaretPositionFromPoint","getInjectedTextAt","normalizedPosition","normalizePosition","equals","_canvas","char","cacheKey","getContext","measureText","_INSTANCE","MouseHandler","_ViewEventHandler","viewController","_mouseLeaveMonitor","mouseTargetFactory","_mouseDownOperation","MouseDownOperation","testEventTarget","lastMouseLeaveTime","mouseEvents","EditorMouseEventFactory","onContextMenu","_onContextMenu","onMouseMove","_onMouseMove","addDisposableListener","contains","_onMouseLeave","EditorMouseEvent","onMouseUp","_onMouseUp","onMouseLeave","capturePointerId","onPointerDown","pointerId","EventType","POINTER_UP","onPointerUp","onMouseDown","_onMouseDown","_setupMouseWheelZoomListener","addEventHandler","_assertThisInitialized","classifier","MouseWheelClassifier","INSTANCE","prevMouseWheelTime","gestureStartZoomLevel","getZoomLevel","gestureHasZoomModifiers","gestureAccumulatedDelta","hasMouseWheelZoomModifiers","browserEvent","metaKey","ctrlKey","shiftKey","altKey","MOUSE_WHEEL","emitMouseWheel","StandardWheelEvent","acceptStandardWheelEvent","isPhysicalMouseWheel","zoomLevel","delta","deltaY","setZoomLevel","preventDefault","stopPropagation","Date","now","capture","passive","removeEventHandler","dispose","hasChanged","onHeightChanged","onCursorStateChanged","ClientCoordinates","toPageCoordinates","createEditorPagePosition","createCoordinatesRelativeToEditor","createMouseTarget","getLastRenderData","getShadowRoot","elementsFromPoint","posx","posy","find","getMouseColumn","emitContextMenu","mouseTargetIsWidget","isActive","timestamp","emitMouseMove","getTime","emitMouseLeave","emitMouseUp","_this4","targetIsContent","targetIsGutter","targetIsLineNumbers","selectOnLineNumbers","targetIsViewZone","targetIsWidget","shouldHandle","leftButton","middleButton","focus","focusTextArea","start","shouldSuppressMouseDownOnViewZone","shouldSuppressMouseDownOnWidget","emitMouseDown","ViewEventHandler","_super2","_viewController","_mouseTargetFactory","_this5","_mouseMoveMonitor","GlobalEditorPointerMoveMonitor","_topBottomDragScrolling","TopBottomDragScrolling","inSelectionMode","revealType","_dispatchMouse","_mouseState","MouseDownState","_currentSelection","Selection","_isActive","_lastMouseEvent","setModifiers","_findMousePosition","isDragAndDrop","emitMouseDrag","stop","targetType","_this6","setStartedOnLineNumbers","setStartButtons","trySetCount","count","isEmpty","containsPosition","startMonitoring","viewLinesDomNode","buttons","_onMouseDownThenMove","KeyboardEvent","emitMouseDropCanceled","emitMouseDrop","_stop","stopMonitoring","selections","editorContent","_helpPositionJumpOverViewZone","createOutsideEditor","aboveLineNumber","belowLineNumber","positionOutsideEditor","_getPositionOutsideEditor","selectionStart","selectionStartLineNumber","selectionStartColumn","isBefore","dispatchMouse","startedOnLineNumbers","mouseDownCount","onInjectedText","_Disposable2","_super3","_this7","_operation","mouseEvent","setPosition","TopBottomDragScrollingOperation","_Disposable3","_super4","_this8","_position","_mouseEvent","_lastTime","_animationFrameDisposable","scheduleAtNextAnimationFrame","_execute","elapsed","viewportInLines","outsideDistanceInLines","_this9","scrollInPixels","_getScrollSpeed","_tick","scrollValue","deltaScrollNow","renderNow","mouseTarget","viewportData","getLinesViewportData","edgeLineNumber","startLineNumber","endLineNumber","horizontalScrollbarHeight","_altKey","_ctrlKey","_metaKey","_shiftKey","_leftButton","_middleButton","_startedOnLineNumbers","_lastMouseDownPosition","_lastMouseDownPositionEqualCount","_lastMouseDownCount","_lastSetMouseDownCountTime","setMouseDownCount","newMouseDownPosition","currentTime","CLEAR_MOUSE_DOWN_COUNT_TIME","PointerEventHandler","_MouseHandler","Gesture","addTarget","linesContentDomNode","Tap","onTap","Change","onChange","Contextmenu","_lastPointerType","pointerType","pointerEvents","EditorPointerEventFactory","onPointerMove","onPointerLeave","initialTarget","tapCount","translationX","translationY","TouchHandler","_MouseHandler2","createEvent","initEvent","TextAreaSyntethicEvents","dispatchTextAreaEvent","moveTo","PointerHandler","BrowserFeatures","handler","TouchEvent","getTargetAtClientPoint","VisibleTextAreaData","modelLineNumber","distanceToModelLineStart","widthOfHiddenLineTextBefore","distanceToModelLineEnd","_visibleTextAreaBrand","startPosition","endPosition","visibleTextareaStart","visibleTextareaEnd","_previousPresentation","visibleRangeProvider","startModelPosition","endModelPosition","coordinatesConverter","convertModelPositionToViewPosition","tokenPresentation","foreground","italic","bold","underline","strikethrough","canUseZeroSizeTextarea","TextAreaHandler","_ViewPart","_keybindingService","_primaryCursorPosition","_primaryCursorVisibleRange","_visibleRangeProvider","_scrollLeft","_scrollTop","_setAccessibilityOptions","_contentLeft","_contentWidth","contentWidth","_contentHeight","_fontInfo","_lineHeight","_emptySelectionClipboard","_copyWithSyntaxHighlighting","_visibleTextArea","_selections","_modelSelections","_lastRenderPosition","textArea","createFastDomNode","setClassName","MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","setAttribute","_textAreaWrapping","_getAriaLabel","nls","_ensureReadOnlyAttribute","textAreaCover","simpleModel","getValueInRange","eol","getValueLengthInRange","modifyPosition","textAreaInputHost","getDataToCopy","rawTextToCopy","getPlainTextToCopy","newLineCharacter","getEOL","isFromEmptySelection","multicursorText","join","html","mode","CopyOptions","forceCopyWithSyntaxHighlighting","richText","getRichTextToCopy","getScreenReaderContent","_accessibilitySupport","selection","textBefore","_getWordBeforePosition","_getCharacterBeforePosition","TextAreaState","Range","placeholderText","EMPTY","_this$_getAndroidWord","_getAndroidWordAtPosition","_this$_getAndroidWord2","wordAtPosition","positionOffsetInWord","PagedScreenReaderStrategy","fromEditorSelection","_accessibilityPageSize","deduceModelPosition","viewAnchorPosition","deltaOffset","lineFeedCnt","deduceModelPositionRelativeToViewPosition","textAreaWrapper","TextAreaWrapper","_textAreaInput","TextAreaInput","OS","isAndroid","isChrome","isFirefox","isSafari","onKeyDown","emitKeyDown","onKeyUp","emitKeyUp","onPaste","pasteOnNewLine","metadata","paste","onCut","cut","onType","replacePrevCharCnt","replaceNextCharCnt","positionDelta","_debugComposition","console","log","compositionType","onSelectionChangeRequest","modelSelection","setSelection","onCompositionStart","ta","_ref","textBeforeSelection","selectionEnd","lineFeedOffset1","lastIndexOf","lineTextBeforeSelection","tabOffset1","desiredVisibleBeforeCharCount","visibleBeforeCharCount","hiddenLineTextBefore","widthOfHiddenTextBefore","whiteSpace","append","textAfterSelection","lineFeedOffset2","lineTextAfterSelection","tabOffset2","desiredVisibleAfterCharCount","getEndPosition","visibleAfterCharCount","revealRange","prepareRender","compositionStart","onCompositionUpdate","onCompositionEnd","compositionEnd","onFocus","setHasFocus","onBlur","IME","reason","writeScreenReaderContent","wordSeparators","getMapForWordSeparators","goingLeft","startColumn","goingRight","endColumn","distance","charCode","charCodeAt","charBefore","_a","_b","_c","toggleKeybindingLabel","lookupKeybinding","getAriaLabel","runCommandKeybindingLabel","keybindingEditorKeybindingLabel","editorNotAccessibleMessage","accessibilityPageSize","EditorOptions","defaultValue","wrappingColumn","_textAreaWidth","slice","modelSelections","scrollLeft","scrollTop","isFocused","activeDescendant","removeAttribute","role","positionLineNumber","positionColumn","visibleStart","visibleEnd","_newlinecount","substr","viewLineData","getViewLineData","startTokenIndex","tokens","findTokenIndexAtOffset","textareaSpansSingleToken","presentation","definePresentation","getPresentation","_doRender","lastRenderPosition","useCover","TokenizationRegistry","getColorMap","_renderAtTopLeft","textAreaState","newlineCountBeforeSelection","startIndex","renderData","tac","setTop","setLeft","setWidth","setHeight","setColor","Color","Format","CSS","formatHex","setFontStyle","setTextDecoration","Margin","OUTER_CLASS_NAME","renderType","LineNumbersOverlay","ViewPart","IKeybindingService","InMemoryClipboardMetadataManager","_lastState","lastCopiedValue","data","pastedText","CompositionContext","_lastTypeTextLength","typeInput","_host","_textArea","_OS","_browser","_onFocus","_onBlur","_onKeyDown","_onKeyUp","_onCut","_onPaste","_onType","_onCompositionStart","_onCompositionUpdate","_onCompositionEnd","_onSelectionChangeRequest","_asyncTriggerCut","RunOnceScheduler","_asyncFocusGainWriteScreenReaderContent","_textAreaState","_selectionChangeListener","_hasFocus","_currentComposition","lastKeyDown","_e","StandardKeyboardEvent","keyCode","currentComposition","code","handleCompositionUpdate","newState","readFromTextArea","deduceAndroidCompositionInput","onInput","setIgnoreSelectionChangeTime","deduceInput","_ensureClipboardGetsEditorSelection","schedule","onCopy","clipboardData","_ClipboardEventUtils$","ClipboardEventUtils","getTextData","_ClipboardEventUtils$2","hadFocus","_setHasFocus","onSyntheticTap","previousSelectionChangeEventTime","inputLatency","onSelectionChange","delta1","delta2","getIgnoreSelectionChangeTime","resetSelectionChangeTime","getValue","newSelectionStart","getSelectionStart","newSelectionEnd","getSelectionEnd","_newSelectionStartPosition","deduceEditorPosition","newSelectionStartPosition","_newSelectionEndPosition","newSelectionEndPosition","newSelection","refreshFocusState","hasFocus","newHasFocus","_installSelectionChangeListener","collapseSelection","writeToTextArea","_setAndWriteTextAreaState","dataToCopy","storedMetadata","version","set","replace","setTextData","getData","Mimes","rawmetadata","parse","files","setData","_actual","DomEmitter","onBeforeInput","_onSyntheticTap","_ignoreSelectionChangeTime","activeElement","selectionDirection","currentIsFocused","currentSelectionStart","currentSelectionEnd","setSelectionRange","scrollState","select","toString","setValue","_d","_f","_g","_h","str","_finishDeduceEditorPosition","str1","str2","anchor","deltaText","signum","lastLineFeedIndex","previousState","currentState","couldBeEmojiInput","prefixLength","suffixLength","previousValue","currentValue","previousSelectionStart","previousSelectionEnd","replacePreviousCharacters","linesPerPage","page","trimLongText","LIMIT_CHARS","selectionStartPage","_getPageOfLine","selectionStartPageRange","_getRangeForPage","selectionEndPage","selectionEndPageRange","pretextRange","intersectRanges","pretextStart","pretext","lastLine","lastLineMaxColumn","posttextRange","posttextEnd","posttext","selectionRange1","selectionRange2","EditorScroll_","RevealLine_","CoreEditorCommand","_EditorCommand","accessor","editor","args","_getViewModel","runCoreEditorCommand","EditorCommand","description","constraint","arg","types","scrollArg","to","by","revealCursor","schema","RawDirection","Up","Right","Down","Left","RawUnit","Line","WrappedLine","Page","HalfPage","Editor","Column","direction","reveaLineArg","at","RawAtArgument","Top","Center","Bottom","CoreNavigationCommands","EditorOrNativeTextInputCommand","addImplementation","focusedEditor","ICodeEditorService","getFocusedCodeEditor","hasTextFocus","_runEditorCommand","getActiveElement","tagName","toLowerCase","runDOMCommand","activeEditor","getActiveCodeEditor","runEditorCommand","BaseMoveToCommand","_CoreEditorCommand","opts","_inSelectionMode","pushStackElement","setCursorStates","CursorMoveCommands","getPrimaryCursorState","viewPosition","revealPrimaryCursor","MoveTo","registerEditorCommand","precondition","MoveToSelect","ColumnSelectCommand","_CoreEditorCommand2","_getColumnSelectResult","getCursorColumnSelectData","viewStates","viewState","CursorState","fromViewState","setCursorColumnSelectData","isReal","fromViewLineNumber","fromLineNumber","fromViewVisualColumn","fromVisualColumn","toViewLineNumber","toLineNumber","toViewVisualColumn","toVisualColumn","reversed","revealTopMostCursor","revealBottomMostCursor","ColumnSelect","_ColumnSelectCommand","_class","primary","prevColumnSelectData","validatedPosition","validatePosition","validatedViewPosition","validateViewPosition","doColumnSelect","ColumnSelection","columnSelect","cursorConfig","CursorColumnSelectLeft","_ColumnSelectCommand2","_class2","_super5","kbOpts","weight","kbExpr","EditorContextKeys","textInputFocus","linux","columnSelectLeft","CursorColumnSelectRight","_ColumnSelectCommand3","_class3","_super6","columnSelectRight","ColumnSelectUpCommand","_ColumnSelectCommand4","_super7","_isPaged","isPaged","columnSelectUp","CursorColumnSelectUp","CursorColumnSelectPageUp","ColumnSelectDownCommand","_ColumnSelectCommand5","_super8","columnSelectDown","CursorColumnSelectDown","CursorColumnSelectPageDown","CursorMoveImpl","_CoreEditorCommand3","_super9","CursorMove_","parsed","_runCursorMove","_move","getCursorStates","cursors","simpleMove","viewportMove","CursorMove","CursorMoveBasedCommand","_CoreEditorCommand4","_super10","_staticArgs","dynamicArgs","pageSize","CursorLeft","mac","secondary","CursorLeftSelect","CursorRight","CursorRightSelect","CursorUp","CursorUpSelect","CursorPageUp","CursorPageUpSelect","CursorDown","CursorDownSelect","CursorPageDown","CursorPageDownSelect","CreateCursor","_CoreEditorCommand5","_class4","_super11","wholeLine","line","states","newModelPosition","modelState","newViewPosition","state","splice","LastCursorMoveToSelect","_CoreEditorCommand6","_class5","_super12","lastAddedCursorIndex","getLastAddedCursorIndex","newStates","HomeCommand","_CoreEditorCommand7","_super13","moveToBeginningOfLine","CursorHome","CursorHomeSelect","LineStartCommand","_CoreEditorCommand8","_super14","_exec","cursor","fromModelState","move","CursorLineStart","CursorLineStartSelect","EndCommand","_CoreEditorCommand9","_super15","moveToEndOfLine","sticky","CursorEnd","properties","default","CursorEndSelect","LineEndCommand","_CoreEditorCommand10","_super16","CursorLineEnd","CursorLineEndSelect","TopCommand","_CoreEditorCommand11","_super17","_this10","moveToBeginningOfBuffer","CursorTop","CursorTopSelect","BottomCommand","_CoreEditorCommand12","_super18","_this11","moveToEndOfBuffer","CursorBottom","CursorBottomSelect","EditorScrollImpl","_CoreEditorCommand13","_super19","includes","_runHorizontalEditorScroll","bind","_runVerticalEditorScroll","runEditorScroll","determineScrollMethod","desiredScrollTop","_computeDesiredScrollTop","desiredVisibleViewRange","getCompletelyVisibleViewRangeAtScrollTop","findPositionInViewportIfOutside","setScrollPosition","desiredTopModelLineNumber","futureViewport","getFutureViewport","visibleViewRange","visibleModelRange","convertViewRangeToModelRange","noOfLines","deltaLines","desiredScrollLeft","_computeDesiredScrollLeft","deltaColumns","EditorScroll","ScrollLineUp","_CoreEditorCommand14","_class6","_super20","ScrollPageUp","_CoreEditorCommand15","_class7","_super21","win","ScrollEditorTop","_CoreEditorCommand16","_class8","_super22","ScrollLineDown","_CoreEditorCommand17","_class9","_super23","ScrollPageDown","_CoreEditorCommand18","_class10","_super24","ScrollEditorBottom","_CoreEditorCommand19","_class11","_super25","ScrollLeft","_CoreEditorCommand20","_class12","_super26","ScrollRight","_CoreEditorCommand21","_class13","_super27","WordCommand","_CoreEditorCommand22","_super28","_this12","word","WordSelect","WordSelectDrag","LastCursorWordSelect","_CoreEditorCommand23","_class14","_super29","lastAddedState","hasSelection","LineCommand","_CoreEditorCommand24","_super30","_this13","LineSelect","LineSelectDrag","LastCursorLineCommand","_CoreEditorCommand25","_super31","_this14","LastCursorLineSelect","LastCursorLineSelectDrag","CancelSelection","_CoreEditorCommand26","_class15","_super32","hasNonEmptySelection","cancelSelection","RemoveSecondaryCursors","_CoreEditorCommand27","_class16","_super33","hasMultipleSelections","CORE_WEIGHT","status","RevealLine","_CoreEditorCommand28","_class17","_super34","revealLineArg","lineNumberArg","parseInt","revealAt","viewRange","convertModelRangeToViewRange","SelectAll","_EditorOrNativeTextIn","_class18","_super35","SelectAllCommand","execCommand","selectAll","SetSelection","_CoreEditorCommand29","_class19","_super36","fromModelSelection","CoreEditingCommands","columnSelectionCondition","ContextKeyExpr","and","columnSelection","registerColumnSelection","keybinding","KeybindingsRegistry","registerKeybindingRule","when","registerCommand","command","register","CoreEditingCommand","_EditorCommand2","_super37","runCoreEditingCommand","LineBreakInsert","_CoreEditingCommand","_class20","_super38","writable","pushUndoStop","executeCommands","TypeOperations","lineBreakInsert","Outdent","_CoreEditingCommand2","_class21","_super39","editorTextFocus","tabDoesNotMoveFocus","outdent","Tab","_CoreEditingCommand3","_class22","_super40","tab","DeleteLeft","_CoreEditingCommand4","_class23","_super41","_DeleteOperations$del","DeleteOperations","deleteLeft","getPrevEditOperationType","getCursorAutoClosedCharacters","_DeleteOperations$del2","shouldPushStackElementBefore","commands","setPrevEditOperationType","DeleteRight","_CoreEditingCommand5","_class24","_super42","_DeleteOperations$del3","deleteRight","_DeleteOperations$del4","Undo","_EditorOrNativeTextIn2","_class25","_super43","UndoCommand","hasModel","getOption","getModel","undo","Redo","_EditorOrNativeTextIn3","_class26","_super44","RedoCommand","redo","EditorHandlerCommand","_Command","_super45","handlerId","_this15","_handlerId","trigger","Command","registerOverwritableCommand"],"sourceRoot":""}