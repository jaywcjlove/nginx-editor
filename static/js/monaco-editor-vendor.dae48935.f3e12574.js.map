{"version":3,"file":"static/js/monaco-editor-vendor.dae48935.f3e12574.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/platform/clipboard/browser/clipboardService.js","../node_modules/monaco-editor/esm/vs/platform/clipboard/common/clipboardService.js","../node_modules/monaco-editor/esm/vs/platform/commands/common/commands.js","../node_modules/monaco-editor/esm/vs/platform/configuration/common/configuration.js","../node_modules/monaco-editor/esm/vs/platform/configuration/common/configurationModels.js","../node_modules/monaco-editor/esm/vs/platform/configuration/common/configurationRegistry.js","../node_modules/monaco-editor/esm/vs/platform/configuration/common/configurations.js","../node_modules/monaco-editor/esm/vs/platform/contextkey/browser/contextKeyService.js","../node_modules/monaco-editor/esm/vs/platform/contextkey/common/contextkey.js","../node_modules/monaco-editor/esm/vs/platform/contextkey/common/contextkeys.js","../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextMenuHandler.js","../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextMenuService.js","../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextView.js","../node_modules/monaco-editor/esm/vs/platform/contextview/browser/contextViewService.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isSafari, isWebkitWebView } from '../../../base/browser/browser.js';\nimport { $, addDisposableListener } from '../../../base/browser/dom.js';\nimport { DeferredPromise } from '../../../base/common/async.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nimport { ILogService } from '../../log/common/log.js';\nlet BrowserClipboardService = class BrowserClipboardService extends Disposable {\n    constructor(layoutService, logService) {\n        super();\n        this.layoutService = layoutService;\n        this.logService = logService;\n        this.mapTextToType = new Map(); // unsupported in web (only in-memory)\n        this.findText = ''; // unsupported in web (only in-memory)\n        this.resources = [];\n        if (isSafari || isWebkitWebView) {\n            this.installWebKitWriteTextWorkaround();\n        }\n    }\n    // In Safari, it has the following note:\n    //\n    // \"The request to write to the clipboard must be triggered during a user gesture.\n    // A call to clipboard.write or clipboard.writeText outside the scope of a user\n    // gesture(such as \"click\" or \"touch\" event handlers) will result in the immediate\n    // rejection of the promise returned by the API call.\"\n    // From: https://webkit.org/blog/10855/async-clipboard-api/\n    //\n    // Since extensions run in a web worker, and handle gestures in an asynchronous way,\n    // they are not classified by Safari as \"in response to a user gesture\" and will reject.\n    //\n    // This function sets up some handlers to work around that behavior.\n    installWebKitWriteTextWorkaround() {\n        const handler = () => {\n            const currentWritePromise = new DeferredPromise();\n            // Cancel the previous promise since we just created a new one in response to this new event\n            if (this.webKitPendingClipboardWritePromise && !this.webKitPendingClipboardWritePromise.isSettled) {\n                this.webKitPendingClipboardWritePromise.cancel();\n            }\n            this.webKitPendingClipboardWritePromise = currentWritePromise;\n            // The ctor of ClipboardItem allows you to pass in a promise that will resolve to a string.\n            // This allows us to pass in a Promise that will either be cancelled by another event or\n            // resolved with the contents of the first call to this.writeText.\n            // see https://developer.mozilla.org/en-US/docs/Web/API/ClipboardItem/ClipboardItem#parameters\n            navigator.clipboard.write([new ClipboardItem({\n                    'text/plain': currentWritePromise.p,\n                })]).catch((err) => __awaiter(this, void 0, void 0, function* () {\n                if (!(err instanceof Error) || err.name !== 'NotAllowedError' || !currentWritePromise.isRejected) {\n                    this.logService.error(err);\n                }\n            }));\n        };\n        if (this.layoutService.hasContainer) {\n            this._register(addDisposableListener(this.layoutService.container, 'click', handler));\n            this._register(addDisposableListener(this.layoutService.container, 'keydown', handler));\n        }\n    }\n    writeText(text, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // With type: only in-memory is supported\n            if (type) {\n                this.mapTextToType.set(type, text);\n                return;\n            }\n            if (this.webKitPendingClipboardWritePromise) {\n                // For Safari, we complete this Promise which allows the call to `navigator.clipboard.write()`\n                // above to resolve and successfully copy to the clipboard. If we let this continue, Safari\n                // would throw an error because this call stack doesn't appear to originate from a user gesture.\n                return this.webKitPendingClipboardWritePromise.complete(text);\n            }\n            // Guard access to navigator.clipboard with try/catch\n            // as we have seen DOMExceptions in certain browsers\n            // due to security policies.\n            try {\n                return yield navigator.clipboard.writeText(text);\n            }\n            catch (error) {\n                console.error(error);\n            }\n            // Fallback to textarea and execCommand solution\n            const activeElement = document.activeElement;\n            const textArea = document.body.appendChild($('textarea', { 'aria-hidden': true }));\n            textArea.style.height = '1px';\n            textArea.style.width = '1px';\n            textArea.style.position = 'absolute';\n            textArea.value = text;\n            textArea.focus();\n            textArea.select();\n            document.execCommand('copy');\n            if (activeElement instanceof HTMLElement) {\n                activeElement.focus();\n            }\n            document.body.removeChild(textArea);\n            return;\n        });\n    }\n    readText(type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // With type: only in-memory is supported\n            if (type) {\n                return this.mapTextToType.get(type) || '';\n            }\n            // Guard access to navigator.clipboard with try/catch\n            // as we have seen DOMExceptions in certain browsers\n            // due to security policies.\n            try {\n                return yield navigator.clipboard.readText();\n            }\n            catch (error) {\n                console.error(error);\n                return '';\n            }\n        });\n    }\n    readFindText() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.findText;\n        });\n    }\n    writeFindText(text) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.findText = text;\n        });\n    }\n    readResources() {\n        return __awaiter(this, void 0, void 0, function* () {\n            return this.resources;\n        });\n    }\n};\nBrowserClipboardService = __decorate([\n    __param(0, ILayoutService),\n    __param(1, ILogService)\n], BrowserClipboardService);\nexport { BrowserClipboardService };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IClipboardService = createDecorator('clipboardService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { LinkedList } from '../../../base/common/linkedList.js';\nimport { validateConstraints } from '../../../base/common/types.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ICommandService = createDecorator('commandService');\nexport const CommandsRegistry = new class {\n    constructor() {\n        this._commands = new Map();\n        this._onDidRegisterCommand = new Emitter();\n        this.onDidRegisterCommand = this._onDidRegisterCommand.event;\n    }\n    registerCommand(idOrCommand, handler) {\n        if (!idOrCommand) {\n            throw new Error(`invalid command`);\n        }\n        if (typeof idOrCommand === 'string') {\n            if (!handler) {\n                throw new Error(`invalid command`);\n            }\n            return this.registerCommand({ id: idOrCommand, handler });\n        }\n        // add argument validation if rich command metadata is provided\n        if (idOrCommand.description) {\n            const constraints = [];\n            for (const arg of idOrCommand.description.args) {\n                constraints.push(arg.constraint);\n            }\n            const actualHandler = idOrCommand.handler;\n            idOrCommand.handler = function (accessor, ...args) {\n                validateConstraints(args, constraints);\n                return actualHandler(accessor, ...args);\n            };\n        }\n        // find a place to store the command\n        const { id } = idOrCommand;\n        let commands = this._commands.get(id);\n        if (!commands) {\n            commands = new LinkedList();\n            this._commands.set(id, commands);\n        }\n        const removeFn = commands.unshift(idOrCommand);\n        const ret = toDisposable(() => {\n            removeFn();\n            const command = this._commands.get(id);\n            if (command === null || command === void 0 ? void 0 : command.isEmpty()) {\n                this._commands.delete(id);\n            }\n        });\n        // tell the world about this command\n        this._onDidRegisterCommand.fire(id);\n        return ret;\n    }\n    registerCommandAlias(oldId, newId) {\n        return CommandsRegistry.registerCommand(oldId, (accessor, ...args) => accessor.get(ICommandService).executeCommand(newId, ...args));\n    }\n    getCommand(id) {\n        const list = this._commands.get(id);\n        if (!list || list.isEmpty()) {\n            return undefined;\n        }\n        return Iterable.first(list);\n    }\n    getCommands() {\n        const result = new Map();\n        for (const key of this._commands.keys()) {\n            const command = this.getCommand(key);\n            if (command) {\n                result.set(key, command);\n            }\n        }\n        return result;\n    }\n};\nexport const NullCommandService = {\n    _serviceBrand: undefined,\n    onWillExecuteCommand: () => Disposable.None,\n    onDidExecuteCommand: () => Disposable.None,\n    executeCommand() {\n        return Promise.resolve(undefined);\n    }\n};\nCommandsRegistry.registerCommand('noop', () => { });\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IConfigurationService = createDecorator('configurationService');\nexport function toValuesTree(properties, conflictReporter) {\n    const root = Object.create(null);\n    for (const key in properties) {\n        addToValueTree(root, key, properties[key], conflictReporter);\n    }\n    return root;\n}\nexport function addToValueTree(settingsTreeRoot, key, value, conflictReporter) {\n    const segments = key.split('.');\n    const last = segments.pop();\n    let curr = settingsTreeRoot;\n    for (let i = 0; i < segments.length; i++) {\n        const s = segments[i];\n        let obj = curr[s];\n        switch (typeof obj) {\n            case 'undefined':\n                obj = curr[s] = Object.create(null);\n                break;\n            case 'object':\n                break;\n            default:\n                conflictReporter(`Ignoring ${key} as ${segments.slice(0, i + 1).join('.')} is ${JSON.stringify(obj)}`);\n                return;\n        }\n        curr = obj;\n    }\n    if (typeof curr === 'object' && curr !== null) {\n        try {\n            curr[last] = value; // workaround https://github.com/microsoft/vscode/issues/13606\n        }\n        catch (e) {\n            conflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n        }\n    }\n    else {\n        conflictReporter(`Ignoring ${key} as ${segments.join('.')} is ${JSON.stringify(curr)}`);\n    }\n}\nexport function removeFromValueTree(valueTree, key) {\n    const segments = key.split('.');\n    doRemoveFromValueTree(valueTree, segments);\n}\nfunction doRemoveFromValueTree(valueTree, segments) {\n    const first = segments.shift();\n    if (segments.length === 0) {\n        // Reached last segment\n        delete valueTree[first];\n        return;\n    }\n    if (Object.keys(valueTree).indexOf(first) !== -1) {\n        const value = valueTree[first];\n        if (typeof value === 'object' && !Array.isArray(value)) {\n            doRemoveFromValueTree(value, segments);\n            if (Object.keys(value).length === 0) {\n                delete valueTree[first];\n            }\n        }\n    }\n}\n/**\n * A helper function to get the configuration value with a specific settings path (e.g. config.some.setting)\n */\nexport function getConfigurationValue(config, settingPath, defaultValue) {\n    function accessSetting(config, path) {\n        let current = config;\n        for (const component of path) {\n            if (typeof current !== 'object' || current === null) {\n                return undefined;\n            }\n            current = current[component];\n        }\n        return current;\n    }\n    const path = settingPath.split('.');\n    const result = accessSetting(config, path);\n    return typeof result === 'undefined' ? defaultValue : result;\n}\nexport function getLanguageTagSettingPlainKey(settingKey) {\n    return settingKey.replace(/[\\[\\]]/g, '');\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as arrays from '../../../base/common/arrays.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nimport * as objects from '../../../base/common/objects.js';\nimport * as types from '../../../base/common/types.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { addToValueTree, getConfigurationValue, removeFromValueTree, toValuesTree } from './configuration.js';\nexport class ConfigurationModel {\n    constructor(_contents = {}, _keys = [], _overrides = []) {\n        this._contents = _contents;\n        this._keys = _keys;\n        this._overrides = _overrides;\n        this.frozen = false;\n        this.overrideConfigurations = new Map();\n    }\n    get contents() {\n        return this.checkAndFreeze(this._contents);\n    }\n    get overrides() {\n        return this.checkAndFreeze(this._overrides);\n    }\n    get keys() {\n        return this.checkAndFreeze(this._keys);\n    }\n    isEmpty() {\n        return this._keys.length === 0 && Object.keys(this._contents).length === 0 && this._overrides.length === 0;\n    }\n    getValue(section) {\n        return section ? getConfigurationValue(this.contents, section) : this.contents;\n    }\n    getOverrideValue(section, overrideIdentifier) {\n        const overrideContents = this.getContentsForOverrideIdentifer(overrideIdentifier);\n        return overrideContents\n            ? section ? getConfigurationValue(overrideContents, section) : overrideContents\n            : undefined;\n    }\n    override(identifier) {\n        let overrideConfigurationModel = this.overrideConfigurations.get(identifier);\n        if (!overrideConfigurationModel) {\n            overrideConfigurationModel = this.createOverrideConfigurationModel(identifier);\n            this.overrideConfigurations.set(identifier, overrideConfigurationModel);\n        }\n        return overrideConfigurationModel;\n    }\n    merge(...others) {\n        const contents = objects.deepClone(this.contents);\n        const overrides = objects.deepClone(this.overrides);\n        const keys = [...this.keys];\n        for (const other of others) {\n            if (other.isEmpty()) {\n                continue;\n            }\n            this.mergeContents(contents, other.contents);\n            for (const otherOverride of other.overrides) {\n                const [override] = overrides.filter(o => arrays.equals(o.identifiers, otherOverride.identifiers));\n                if (override) {\n                    this.mergeContents(override.contents, otherOverride.contents);\n                    override.keys.push(...otherOverride.keys);\n                    override.keys = arrays.distinct(override.keys);\n                }\n                else {\n                    overrides.push(objects.deepClone(otherOverride));\n                }\n            }\n            for (const key of other.keys) {\n                if (keys.indexOf(key) === -1) {\n                    keys.push(key);\n                }\n            }\n        }\n        return new ConfigurationModel(contents, keys, overrides);\n    }\n    freeze() {\n        this.frozen = true;\n        return this;\n    }\n    createOverrideConfigurationModel(identifier) {\n        const overrideContents = this.getContentsForOverrideIdentifer(identifier);\n        if (!overrideContents || typeof overrideContents !== 'object' || !Object.keys(overrideContents).length) {\n            // If there are no valid overrides, return self\n            return this;\n        }\n        const contents = {};\n        for (const key of arrays.distinct([...Object.keys(this.contents), ...Object.keys(overrideContents)])) {\n            let contentsForKey = this.contents[key];\n            const overrideContentsForKey = overrideContents[key];\n            // If there are override contents for the key, clone and merge otherwise use base contents\n            if (overrideContentsForKey) {\n                // Clone and merge only if base contents and override contents are of type object otherwise just override\n                if (typeof contentsForKey === 'object' && typeof overrideContentsForKey === 'object') {\n                    contentsForKey = objects.deepClone(contentsForKey);\n                    this.mergeContents(contentsForKey, overrideContentsForKey);\n                }\n                else {\n                    contentsForKey = overrideContentsForKey;\n                }\n            }\n            contents[key] = contentsForKey;\n        }\n        return new ConfigurationModel(contents, this.keys, this.overrides);\n    }\n    mergeContents(source, target) {\n        for (const key of Object.keys(target)) {\n            if (key in source) {\n                if (types.isObject(source[key]) && types.isObject(target[key])) {\n                    this.mergeContents(source[key], target[key]);\n                    continue;\n                }\n            }\n            source[key] = objects.deepClone(target[key]);\n        }\n    }\n    checkAndFreeze(data) {\n        if (this.frozen && !Object.isFrozen(data)) {\n            return objects.deepFreeze(data);\n        }\n        return data;\n    }\n    getContentsForOverrideIdentifer(identifier) {\n        let contentsForIdentifierOnly = null;\n        let contents = null;\n        const mergeContents = (contentsToMerge) => {\n            if (contentsToMerge) {\n                if (contents) {\n                    this.mergeContents(contents, contentsToMerge);\n                }\n                else {\n                    contents = objects.deepClone(contentsToMerge);\n                }\n            }\n        };\n        for (const override of this.overrides) {\n            if (arrays.equals(override.identifiers, [identifier])) {\n                contentsForIdentifierOnly = override.contents;\n            }\n            else if (override.identifiers.includes(identifier)) {\n                mergeContents(override.contents);\n            }\n        }\n        // Merge contents of the identifier only at the end to take precedence.\n        mergeContents(contentsForIdentifierOnly);\n        return contents;\n    }\n    toJSON() {\n        return {\n            contents: this.contents,\n            overrides: this.overrides,\n            keys: this.keys\n        };\n    }\n    // Update methods\n    setValue(key, value) {\n        this.addKey(key);\n        addToValueTree(this.contents, key, value, e => { throw new Error(e); });\n    }\n    removeValue(key) {\n        if (this.removeKey(key)) {\n            removeFromValueTree(this.contents, key);\n        }\n    }\n    addKey(key) {\n        let index = this.keys.length;\n        for (let i = 0; i < index; i++) {\n            if (key.indexOf(this.keys[i]) === 0) {\n                index = i;\n            }\n        }\n        this.keys.splice(index, 1, key);\n    }\n    removeKey(key) {\n        const index = this.keys.indexOf(key);\n        if (index !== -1) {\n            this.keys.splice(index, 1);\n            return true;\n        }\n        return false;\n    }\n}\nexport class Configuration {\n    constructor(_defaultConfiguration, _policyConfiguration, _applicationConfiguration, _localUserConfiguration, _remoteUserConfiguration = new ConfigurationModel(), _workspaceConfiguration = new ConfigurationModel(), _folderConfigurations = new ResourceMap(), _memoryConfiguration = new ConfigurationModel(), _memoryConfigurationByResource = new ResourceMap(), _freeze = true) {\n        this._defaultConfiguration = _defaultConfiguration;\n        this._policyConfiguration = _policyConfiguration;\n        this._applicationConfiguration = _applicationConfiguration;\n        this._localUserConfiguration = _localUserConfiguration;\n        this._remoteUserConfiguration = _remoteUserConfiguration;\n        this._workspaceConfiguration = _workspaceConfiguration;\n        this._folderConfigurations = _folderConfigurations;\n        this._memoryConfiguration = _memoryConfiguration;\n        this._memoryConfigurationByResource = _memoryConfigurationByResource;\n        this._freeze = _freeze;\n        this._workspaceConsolidatedConfiguration = null;\n        this._foldersConsolidatedConfigurations = new ResourceMap();\n        this._userConfiguration = null;\n    }\n    getValue(section, overrides, workspace) {\n        const consolidateConfigurationModel = this.getConsolidatedConfigurationModel(section, overrides, workspace);\n        return consolidateConfigurationModel.getValue(section);\n    }\n    updateValue(key, value, overrides = {}) {\n        let memoryConfiguration;\n        if (overrides.resource) {\n            memoryConfiguration = this._memoryConfigurationByResource.get(overrides.resource);\n            if (!memoryConfiguration) {\n                memoryConfiguration = new ConfigurationModel();\n                this._memoryConfigurationByResource.set(overrides.resource, memoryConfiguration);\n            }\n        }\n        else {\n            memoryConfiguration = this._memoryConfiguration;\n        }\n        if (value === undefined) {\n            memoryConfiguration.removeValue(key);\n        }\n        else {\n            memoryConfiguration.setValue(key, value);\n        }\n        if (!overrides.resource) {\n            this._workspaceConsolidatedConfiguration = null;\n        }\n    }\n    inspect(key, overrides, workspace) {\n        const consolidateConfigurationModel = this.getConsolidatedConfigurationModel(key, overrides, workspace);\n        const folderConfigurationModel = this.getFolderConfigurationModelForResource(overrides.resource, workspace);\n        const memoryConfigurationModel = overrides.resource ? this._memoryConfigurationByResource.get(overrides.resource) || this._memoryConfiguration : this._memoryConfiguration;\n        const defaultValue = overrides.overrideIdentifier ? this._defaultConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._defaultConfiguration.freeze().getValue(key);\n        const policyValue = this._policyConfiguration.isEmpty() ? undefined : this._policyConfiguration.freeze().getValue(key);\n        const applicationValue = this.applicationConfiguration.isEmpty() ? undefined : this.applicationConfiguration.freeze().getValue(key);\n        const userValue = overrides.overrideIdentifier ? this.userConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this.userConfiguration.freeze().getValue(key);\n        const userLocalValue = overrides.overrideIdentifier ? this.localUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this.localUserConfiguration.freeze().getValue(key);\n        const userRemoteValue = overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this.remoteUserConfiguration.freeze().getValue(key);\n        const workspaceValue = workspace ? overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().override(overrides.overrideIdentifier).getValue(key) : this._workspaceConfiguration.freeze().getValue(key) : undefined; //Check on workspace exists or not because _workspaceConfiguration is never null\n        const workspaceFolderValue = folderConfigurationModel ? overrides.overrideIdentifier ? folderConfigurationModel.freeze().override(overrides.overrideIdentifier).getValue(key) : folderConfigurationModel.freeze().getValue(key) : undefined;\n        const memoryValue = overrides.overrideIdentifier ? memoryConfigurationModel.override(overrides.overrideIdentifier).getValue(key) : memoryConfigurationModel.getValue(key);\n        const value = consolidateConfigurationModel.getValue(key);\n        const overrideIdentifiers = arrays.distinct(consolidateConfigurationModel.overrides.map(override => override.identifiers).flat()).filter(overrideIdentifier => consolidateConfigurationModel.getOverrideValue(key, overrideIdentifier) !== undefined);\n        return {\n            defaultValue,\n            policyValue,\n            applicationValue,\n            userValue,\n            userLocalValue,\n            userRemoteValue,\n            workspaceValue,\n            workspaceFolderValue,\n            memoryValue,\n            value,\n            default: defaultValue !== undefined ? { value: this._defaultConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._defaultConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            policy: policyValue !== undefined ? { value: policyValue } : undefined,\n            application: applicationValue !== undefined ? { value: applicationValue, override: overrides.overrideIdentifier ? this.applicationConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            user: userValue !== undefined ? { value: this.userConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.userConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            userLocal: userLocalValue !== undefined ? { value: this.localUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.localUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            userRemote: userRemoteValue !== undefined ? { value: this.remoteUserConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this.remoteUserConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            workspace: workspaceValue !== undefined ? { value: this._workspaceConfiguration.freeze().getValue(key), override: overrides.overrideIdentifier ? this._workspaceConfiguration.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            workspaceFolder: workspaceFolderValue !== undefined ? { value: folderConfigurationModel === null || folderConfigurationModel === void 0 ? void 0 : folderConfigurationModel.freeze().getValue(key), override: overrides.overrideIdentifier ? folderConfigurationModel === null || folderConfigurationModel === void 0 ? void 0 : folderConfigurationModel.freeze().getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            memory: memoryValue !== undefined ? { value: memoryConfigurationModel.getValue(key), override: overrides.overrideIdentifier ? memoryConfigurationModel.getOverrideValue(key, overrides.overrideIdentifier) : undefined } : undefined,\n            overrideIdentifiers: overrideIdentifiers.length ? overrideIdentifiers : undefined\n        };\n    }\n    get applicationConfiguration() {\n        return this._applicationConfiguration;\n    }\n    get userConfiguration() {\n        if (!this._userConfiguration) {\n            this._userConfiguration = this._remoteUserConfiguration.isEmpty() ? this._localUserConfiguration : this._localUserConfiguration.merge(this._remoteUserConfiguration);\n            if (this._freeze) {\n                this._userConfiguration.freeze();\n            }\n        }\n        return this._userConfiguration;\n    }\n    get localUserConfiguration() {\n        return this._localUserConfiguration;\n    }\n    get remoteUserConfiguration() {\n        return this._remoteUserConfiguration;\n    }\n    getConsolidatedConfigurationModel(section, overrides, workspace) {\n        let configurationModel = this.getConsolidatedConfigurationModelForResource(overrides, workspace);\n        if (overrides.overrideIdentifier) {\n            configurationModel = configurationModel.override(overrides.overrideIdentifier);\n        }\n        if (!this._policyConfiguration.isEmpty() && this._policyConfiguration.getValue(section) !== undefined) {\n            configurationModel = configurationModel.merge(this._policyConfiguration);\n        }\n        return configurationModel;\n    }\n    getConsolidatedConfigurationModelForResource({ resource }, workspace) {\n        let consolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n        if (workspace && resource) {\n            const root = workspace.getFolder(resource);\n            if (root) {\n                consolidateConfiguration = this.getFolderConsolidatedConfiguration(root.uri) || consolidateConfiguration;\n            }\n            const memoryConfigurationForResource = this._memoryConfigurationByResource.get(resource);\n            if (memoryConfigurationForResource) {\n                consolidateConfiguration = consolidateConfiguration.merge(memoryConfigurationForResource);\n            }\n        }\n        return consolidateConfiguration;\n    }\n    getWorkspaceConsolidatedConfiguration() {\n        if (!this._workspaceConsolidatedConfiguration) {\n            this._workspaceConsolidatedConfiguration = this._defaultConfiguration.merge(this.applicationConfiguration, this.userConfiguration, this._workspaceConfiguration, this._memoryConfiguration);\n            if (this._freeze) {\n                this._workspaceConfiguration = this._workspaceConfiguration.freeze();\n            }\n        }\n        return this._workspaceConsolidatedConfiguration;\n    }\n    getFolderConsolidatedConfiguration(folder) {\n        let folderConsolidatedConfiguration = this._foldersConsolidatedConfigurations.get(folder);\n        if (!folderConsolidatedConfiguration) {\n            const workspaceConsolidateConfiguration = this.getWorkspaceConsolidatedConfiguration();\n            const folderConfiguration = this._folderConfigurations.get(folder);\n            if (folderConfiguration) {\n                folderConsolidatedConfiguration = workspaceConsolidateConfiguration.merge(folderConfiguration);\n                if (this._freeze) {\n                    folderConsolidatedConfiguration = folderConsolidatedConfiguration.freeze();\n                }\n                this._foldersConsolidatedConfigurations.set(folder, folderConsolidatedConfiguration);\n            }\n            else {\n                folderConsolidatedConfiguration = workspaceConsolidateConfiguration;\n            }\n        }\n        return folderConsolidatedConfiguration;\n    }\n    getFolderConfigurationModelForResource(resource, workspace) {\n        if (workspace && resource) {\n            const root = workspace.getFolder(resource);\n            if (root) {\n                return this._folderConfigurations.get(root.uri);\n            }\n        }\n        return undefined;\n    }\n    toData() {\n        return {\n            defaults: {\n                contents: this._defaultConfiguration.contents,\n                overrides: this._defaultConfiguration.overrides,\n                keys: this._defaultConfiguration.keys\n            },\n            policy: {\n                contents: this._policyConfiguration.contents,\n                overrides: this._policyConfiguration.overrides,\n                keys: this._policyConfiguration.keys\n            },\n            application: {\n                contents: this.applicationConfiguration.contents,\n                overrides: this.applicationConfiguration.overrides,\n                keys: this.applicationConfiguration.keys\n            },\n            user: {\n                contents: this.userConfiguration.contents,\n                overrides: this.userConfiguration.overrides,\n                keys: this.userConfiguration.keys\n            },\n            workspace: {\n                contents: this._workspaceConfiguration.contents,\n                overrides: this._workspaceConfiguration.overrides,\n                keys: this._workspaceConfiguration.keys\n            },\n            folders: [...this._folderConfigurations.keys()].reduce((result, folder) => {\n                const { contents, overrides, keys } = this._folderConfigurations.get(folder);\n                result.push([folder, { contents, overrides, keys }]);\n                return result;\n            }, [])\n        };\n    }\n    static parse(data) {\n        const defaultConfiguration = this.parseConfigurationModel(data.defaults);\n        const policyConfiguration = this.parseConfigurationModel(data.policy);\n        const applicationConfiguration = this.parseConfigurationModel(data.application);\n        const userConfiguration = this.parseConfigurationModel(data.user);\n        const workspaceConfiguration = this.parseConfigurationModel(data.workspace);\n        const folders = data.folders.reduce((result, value) => {\n            result.set(URI.revive(value[0]), this.parseConfigurationModel(value[1]));\n            return result;\n        }, new ResourceMap());\n        return new Configuration(defaultConfiguration, policyConfiguration, applicationConfiguration, userConfiguration, new ConfigurationModel(), workspaceConfiguration, folders, new ConfigurationModel(), new ResourceMap(), false);\n    }\n    static parseConfigurationModel(model) {\n        return new ConfigurationModel(model.contents, model.keys, model.overrides).freeze();\n    }\n}\nexport class ConfigurationChangeEvent {\n    constructor(change, previous, currentConfiguraiton, currentWorkspace) {\n        this.change = change;\n        this.previous = previous;\n        this.currentConfiguraiton = currentConfiguraiton;\n        this.currentWorkspace = currentWorkspace;\n        this._previousConfiguration = undefined;\n        const keysSet = new Set();\n        change.keys.forEach(key => keysSet.add(key));\n        change.overrides.forEach(([, keys]) => keys.forEach(key => keysSet.add(key)));\n        this.affectedKeys = [...keysSet.values()];\n        const configurationModel = new ConfigurationModel();\n        this.affectedKeys.forEach(key => configurationModel.setValue(key, {}));\n        this.affectedKeysTree = configurationModel.contents;\n    }\n    get previousConfiguration() {\n        if (!this._previousConfiguration && this.previous) {\n            this._previousConfiguration = Configuration.parse(this.previous.data);\n        }\n        return this._previousConfiguration;\n    }\n    affectsConfiguration(section, overrides) {\n        var _a;\n        if (this.doesAffectedKeysTreeContains(this.affectedKeysTree, section)) {\n            if (overrides) {\n                const value1 = this.previousConfiguration ? this.previousConfiguration.getValue(section, overrides, (_a = this.previous) === null || _a === void 0 ? void 0 : _a.workspace) : undefined;\n                const value2 = this.currentConfiguraiton.getValue(section, overrides, this.currentWorkspace);\n                return !objects.equals(value1, value2);\n            }\n            return true;\n        }\n        return false;\n    }\n    doesAffectedKeysTreeContains(affectedKeysTree, section) {\n        let requestedTree = toValuesTree({ [section]: true }, () => { });\n        let key;\n        while (typeof requestedTree === 'object' && (key = Object.keys(requestedTree)[0])) { // Only one key should present, since we added only one property\n            affectedKeysTree = affectedKeysTree[key];\n            if (!affectedKeysTree) {\n                return false; // Requested tree is not found\n            }\n            requestedTree = requestedTree[key];\n        }\n        return true;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { distinct } from '../../../base/common/arrays.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport * as types from '../../../base/common/types.js';\nimport * as nls from '../../../nls.js';\nimport { getLanguageTagSettingPlainKey } from './configuration.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport const Extensions = {\n    Configuration: 'base.contributions.configuration'\n};\nexport const allSettings = { properties: {}, patternProperties: {} };\nexport const applicationSettings = { properties: {}, patternProperties: {} };\nexport const machineSettings = { properties: {}, patternProperties: {} };\nexport const machineOverridableSettings = { properties: {}, patternProperties: {} };\nexport const windowSettings = { properties: {}, patternProperties: {} };\nexport const resourceSettings = { properties: {}, patternProperties: {} };\nexport const resourceLanguageSettingsSchemaId = 'vscode://schemas/settings/resourceLanguage';\nconst contributionRegistry = Registry.as(JSONExtensions.JSONContribution);\nclass ConfigurationRegistry {\n    constructor() {\n        this.overrideIdentifiers = new Set();\n        this._onDidSchemaChange = new Emitter();\n        this._onDidUpdateConfiguration = new Emitter();\n        this.configurationDefaultsOverrides = new Map();\n        this.defaultLanguageConfigurationOverridesNode = {\n            id: 'defaultOverrides',\n            title: nls.localize('defaultLanguageConfigurationOverrides.title', \"Default Language Configuration Overrides\"),\n            properties: {}\n        };\n        this.configurationContributors = [this.defaultLanguageConfigurationOverridesNode];\n        this.resourceLanguageSettingsSchema = { properties: {}, patternProperties: {}, additionalProperties: false, errorMessage: 'Unknown editor configuration setting', allowTrailingCommas: true, allowComments: true };\n        this.configurationProperties = {};\n        this.policyConfigurations = new Map();\n        this.excludedConfigurationProperties = {};\n        contributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n        this.registerOverridePropertyPatternKey();\n    }\n    registerConfiguration(configuration, validate = true) {\n        this.registerConfigurations([configuration], validate);\n    }\n    registerConfigurations(configurations, validate = true) {\n        const properties = this.doRegisterConfigurations(configurations, validate);\n        contributionRegistry.registerSchema(resourceLanguageSettingsSchemaId, this.resourceLanguageSettingsSchema);\n        this._onDidSchemaChange.fire();\n        this._onDidUpdateConfiguration.fire({ properties });\n    }\n    registerDefaultConfigurations(configurationDefaults) {\n        var _a;\n        const properties = [];\n        const overrideIdentifiers = [];\n        for (const { overrides, source } of configurationDefaults) {\n            for (const key in overrides) {\n                properties.push(key);\n                if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                    const configurationDefaultOverride = this.configurationDefaultsOverrides.get(key);\n                    const valuesSources = (_a = configurationDefaultOverride === null || configurationDefaultOverride === void 0 ? void 0 : configurationDefaultOverride.valuesSources) !== null && _a !== void 0 ? _a : new Map();\n                    if (source) {\n                        for (const configuration of Object.keys(overrides[key])) {\n                            valuesSources.set(configuration, source);\n                        }\n                    }\n                    const defaultValue = Object.assign(Object.assign({}, ((configurationDefaultOverride === null || configurationDefaultOverride === void 0 ? void 0 : configurationDefaultOverride.value) || {})), overrides[key]);\n                    this.configurationDefaultsOverrides.set(key, { source, value: defaultValue, valuesSources });\n                    const plainKey = getLanguageTagSettingPlainKey(key);\n                    const property = {\n                        type: 'object',\n                        default: defaultValue,\n                        description: nls.localize('defaultLanguageConfiguration.description', \"Configure settings to be overridden for the {0} language.\", plainKey),\n                        $ref: resourceLanguageSettingsSchemaId,\n                        defaultDefaultValue: defaultValue,\n                        source: types.isString(source) ? undefined : source,\n                        defaultValueSource: source\n                    };\n                    overrideIdentifiers.push(...overrideIdentifiersFromKey(key));\n                    this.configurationProperties[key] = property;\n                    this.defaultLanguageConfigurationOverridesNode.properties[key] = property;\n                }\n                else {\n                    this.configurationDefaultsOverrides.set(key, { value: overrides[key], source });\n                    const property = this.configurationProperties[key];\n                    if (property) {\n                        this.updatePropertyDefaultValue(key, property);\n                        this.updateSchema(key, property);\n                    }\n                }\n            }\n        }\n        this.registerOverrideIdentifiers(overrideIdentifiers);\n        this._onDidSchemaChange.fire();\n        this._onDidUpdateConfiguration.fire({ properties, defaultsOverrides: true });\n    }\n    registerOverrideIdentifiers(overrideIdentifiers) {\n        for (const overrideIdentifier of overrideIdentifiers) {\n            this.overrideIdentifiers.add(overrideIdentifier);\n        }\n        this.updateOverridePropertyPatternKey();\n    }\n    doRegisterConfigurations(configurations, validate) {\n        const properties = [];\n        configurations.forEach(configuration => {\n            properties.push(...this.validateAndRegisterProperties(configuration, validate, configuration.extensionInfo, configuration.restrictedProperties)); // fills in defaults\n            this.configurationContributors.push(configuration);\n            this.registerJSONConfiguration(configuration);\n        });\n        return properties;\n    }\n    validateAndRegisterProperties(configuration, validate = true, extensionInfo, restrictedProperties, scope = 3 /* ConfigurationScope.WINDOW */) {\n        var _a;\n        scope = types.isUndefinedOrNull(configuration.scope) ? scope : configuration.scope;\n        const propertyKeys = [];\n        const properties = configuration.properties;\n        if (properties) {\n            for (const key in properties) {\n                const property = properties[key];\n                if (validate && validateProperty(key, property)) {\n                    delete properties[key];\n                    continue;\n                }\n                property.source = extensionInfo;\n                // update default value\n                property.defaultDefaultValue = properties[key].default;\n                this.updatePropertyDefaultValue(key, property);\n                // update scope\n                if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                    property.scope = undefined; // No scope for overridable properties `[${identifier}]`\n                }\n                else {\n                    property.scope = types.isUndefinedOrNull(property.scope) ? scope : property.scope;\n                    property.restricted = types.isUndefinedOrNull(property.restricted) ? !!(restrictedProperties === null || restrictedProperties === void 0 ? void 0 : restrictedProperties.includes(key)) : property.restricted;\n                }\n                // Add to properties maps\n                // Property is included by default if 'included' is unspecified\n                if (properties[key].hasOwnProperty('included') && !properties[key].included) {\n                    this.excludedConfigurationProperties[key] = properties[key];\n                    delete properties[key];\n                    continue;\n                }\n                else {\n                    this.configurationProperties[key] = properties[key];\n                    if ((_a = properties[key].policy) === null || _a === void 0 ? void 0 : _a.name) {\n                        this.policyConfigurations.set(properties[key].policy.name, key);\n                    }\n                }\n                if (!properties[key].deprecationMessage && properties[key].markdownDeprecationMessage) {\n                    // If not set, default deprecationMessage to the markdown source\n                    properties[key].deprecationMessage = properties[key].markdownDeprecationMessage;\n                }\n                propertyKeys.push(key);\n            }\n        }\n        const subNodes = configuration.allOf;\n        if (subNodes) {\n            for (const node of subNodes) {\n                propertyKeys.push(...this.validateAndRegisterProperties(node, validate, extensionInfo, restrictedProperties, scope));\n            }\n        }\n        return propertyKeys;\n    }\n    getConfigurationProperties() {\n        return this.configurationProperties;\n    }\n    getPolicyConfigurations() {\n        return this.policyConfigurations;\n    }\n    registerJSONConfiguration(configuration) {\n        const register = (configuration) => {\n            const properties = configuration.properties;\n            if (properties) {\n                for (const key in properties) {\n                    this.updateSchema(key, properties[key]);\n                }\n            }\n            const subNodes = configuration.allOf;\n            subNodes === null || subNodes === void 0 ? void 0 : subNodes.forEach(register);\n        };\n        register(configuration);\n    }\n    updateSchema(key, property) {\n        allSettings.properties[key] = property;\n        switch (property.scope) {\n            case 1 /* ConfigurationScope.APPLICATION */:\n                applicationSettings.properties[key] = property;\n                break;\n            case 2 /* ConfigurationScope.MACHINE */:\n                machineSettings.properties[key] = property;\n                break;\n            case 6 /* ConfigurationScope.MACHINE_OVERRIDABLE */:\n                machineOverridableSettings.properties[key] = property;\n                break;\n            case 3 /* ConfigurationScope.WINDOW */:\n                windowSettings.properties[key] = property;\n                break;\n            case 4 /* ConfigurationScope.RESOURCE */:\n                resourceSettings.properties[key] = property;\n                break;\n            case 5 /* ConfigurationScope.LANGUAGE_OVERRIDABLE */:\n                resourceSettings.properties[key] = property;\n                this.resourceLanguageSettingsSchema.properties[key] = property;\n                break;\n        }\n    }\n    updateOverridePropertyPatternKey() {\n        for (const overrideIdentifier of this.overrideIdentifiers.values()) {\n            const overrideIdentifierProperty = `[${overrideIdentifier}]`;\n            const resourceLanguagePropertiesSchema = {\n                type: 'object',\n                description: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n                errorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n                $ref: resourceLanguageSettingsSchemaId,\n            };\n            this.updatePropertyDefaultValue(overrideIdentifierProperty, resourceLanguagePropertiesSchema);\n            allSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            applicationSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            machineSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            machineOverridableSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            windowSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n            resourceSettings.properties[overrideIdentifierProperty] = resourceLanguagePropertiesSchema;\n        }\n        this._onDidSchemaChange.fire();\n    }\n    registerOverridePropertyPatternKey() {\n        const resourceLanguagePropertiesSchema = {\n            type: 'object',\n            description: nls.localize('overrideSettings.defaultDescription', \"Configure editor settings to be overridden for a language.\"),\n            errorMessage: nls.localize('overrideSettings.errorMessage', \"This setting does not support per-language configuration.\"),\n            $ref: resourceLanguageSettingsSchemaId,\n        };\n        allSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        applicationSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        machineSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        machineOverridableSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        windowSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        resourceSettings.patternProperties[OVERRIDE_PROPERTY_PATTERN] = resourceLanguagePropertiesSchema;\n        this._onDidSchemaChange.fire();\n    }\n    updatePropertyDefaultValue(key, property) {\n        const configurationdefaultOverride = this.configurationDefaultsOverrides.get(key);\n        let defaultValue = configurationdefaultOverride === null || configurationdefaultOverride === void 0 ? void 0 : configurationdefaultOverride.value;\n        let defaultSource = configurationdefaultOverride === null || configurationdefaultOverride === void 0 ? void 0 : configurationdefaultOverride.source;\n        if (types.isUndefined(defaultValue)) {\n            defaultValue = property.defaultDefaultValue;\n            defaultSource = undefined;\n        }\n        if (types.isUndefined(defaultValue)) {\n            defaultValue = getDefaultValue(property.type);\n        }\n        property.default = defaultValue;\n        property.defaultValueSource = defaultSource;\n    }\n}\nconst OVERRIDE_IDENTIFIER_PATTERN = `\\\\[([^\\\\]]+)\\\\]`;\nconst OVERRIDE_IDENTIFIER_REGEX = new RegExp(OVERRIDE_IDENTIFIER_PATTERN, 'g');\nexport const OVERRIDE_PROPERTY_PATTERN = `^(${OVERRIDE_IDENTIFIER_PATTERN})+$`;\nexport const OVERRIDE_PROPERTY_REGEX = new RegExp(OVERRIDE_PROPERTY_PATTERN);\nexport function overrideIdentifiersFromKey(key) {\n    const identifiers = [];\n    if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n        let matches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n        while (matches === null || matches === void 0 ? void 0 : matches.length) {\n            const identifier = matches[1].trim();\n            if (identifier) {\n                identifiers.push(identifier);\n            }\n            matches = OVERRIDE_IDENTIFIER_REGEX.exec(key);\n        }\n    }\n    return distinct(identifiers);\n}\nexport function getDefaultValue(type) {\n    const t = Array.isArray(type) ? type[0] : type;\n    switch (t) {\n        case 'boolean':\n            return false;\n        case 'integer':\n        case 'number':\n            return 0;\n        case 'string':\n            return '';\n        case 'array':\n            return [];\n        case 'object':\n            return {};\n        default:\n            return null;\n    }\n}\nconst configurationRegistry = new ConfigurationRegistry();\nRegistry.add(Extensions.Configuration, configurationRegistry);\nexport function validateProperty(property, schema) {\n    var _a, _b, _c, _d;\n    if (!property.trim()) {\n        return nls.localize('config.property.empty', \"Cannot register an empty property\");\n    }\n    if (OVERRIDE_PROPERTY_REGEX.test(property)) {\n        return nls.localize('config.property.languageDefault', \"Cannot register '{0}'. This matches property pattern '\\\\\\\\[.*\\\\\\\\]$' for describing language specific editor settings. Use 'configurationDefaults' contribution.\", property);\n    }\n    if (configurationRegistry.getConfigurationProperties()[property] !== undefined) {\n        return nls.localize('config.property.duplicate', \"Cannot register '{0}'. This property is already registered.\", property);\n    }\n    if (((_a = schema.policy) === null || _a === void 0 ? void 0 : _a.name) && configurationRegistry.getPolicyConfigurations().get((_b = schema.policy) === null || _b === void 0 ? void 0 : _b.name) !== undefined) {\n        return nls.localize('config.policy.duplicate', \"Cannot register '{0}'. The associated policy {1} is already registered with {2}.\", property, (_c = schema.policy) === null || _c === void 0 ? void 0 : _c.name, configurationRegistry.getPolicyConfigurations().get((_d = schema.policy) === null || _d === void 0 ? void 0 : _d.name));\n    }\n    return null;\n}\n","import { addToValueTree, toValuesTree } from './configuration.js';\nimport { ConfigurationModel } from './configurationModels.js';\nimport { Extensions, overrideIdentifiersFromKey, OVERRIDE_PROPERTY_REGEX } from './configurationRegistry.js';\nimport { Registry } from '../../registry/common/platform.js';\nexport class DefaultConfigurationModel extends ConfigurationModel {\n    constructor(configurationDefaultsOverrides = {}) {\n        const properties = Registry.as(Extensions.Configuration).getConfigurationProperties();\n        const keys = Object.keys(properties);\n        const contents = Object.create(null);\n        const overrides = [];\n        for (const key in properties) {\n            const defaultOverrideValue = configurationDefaultsOverrides[key];\n            const value = defaultOverrideValue !== undefined ? defaultOverrideValue : properties[key].default;\n            addToValueTree(contents, key, value, message => console.error(`Conflict in default settings: ${message}`));\n        }\n        for (const key of Object.keys(contents)) {\n            if (OVERRIDE_PROPERTY_REGEX.test(key)) {\n                overrides.push({\n                    identifiers: overrideIdentifiersFromKey(key),\n                    keys: Object.keys(contents[key]),\n                    contents: toValuesTree(contents[key], message => console.error(`Conflict in default settings file: ${message}`)),\n                });\n            }\n        }\n        super(contents, keys, overrides);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { PauseableEmitter } from '../../../base/common/event.js';\nimport { Iterable } from '../../../base/common/iterator.js';\nimport { DisposableStore, MutableDisposable } from '../../../base/common/lifecycle.js';\nimport { TernarySearchTree } from '../../../base/common/map.js';\nimport { cloneAndChange } from '../../../base/common/objects.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { CommandsRegistry } from '../../commands/common/commands.js';\nimport { IConfigurationService } from '../../configuration/common/configuration.js';\nimport { IContextKeyService, RawContextKey, SET_CONTEXT_COMMAND_ID } from '../common/contextkey.js';\nconst KEYBINDING_CONTEXT_ATTR = 'data-keybinding-context';\nexport class Context {\n    constructor(id, parent) {\n        this._id = id;\n        this._parent = parent;\n        this._value = Object.create(null);\n        this._value['_contextId'] = id;\n    }\n    get value() {\n        return Object.assign({}, this._value);\n    }\n    setValue(key, value) {\n        // console.log('SET ' + key + ' = ' + value + ' ON ' + this._id);\n        if (this._value[key] !== value) {\n            this._value[key] = value;\n            return true;\n        }\n        return false;\n    }\n    removeValue(key) {\n        // console.log('REMOVE ' + key + ' FROM ' + this._id);\n        if (key in this._value) {\n            delete this._value[key];\n            return true;\n        }\n        return false;\n    }\n    getValue(key) {\n        const ret = this._value[key];\n        if (typeof ret === 'undefined' && this._parent) {\n            return this._parent.getValue(key);\n        }\n        return ret;\n    }\n}\nclass NullContext extends Context {\n    constructor() {\n        super(-1, null);\n    }\n    setValue(key, value) {\n        return false;\n    }\n    removeValue(key) {\n        return false;\n    }\n    getValue(key) {\n        return undefined;\n    }\n}\nNullContext.INSTANCE = new NullContext();\nclass ConfigAwareContextValuesContainer extends Context {\n    constructor(id, _configurationService, emitter) {\n        super(id, null);\n        this._configurationService = _configurationService;\n        this._values = TernarySearchTree.forConfigKeys();\n        this._listener = this._configurationService.onDidChangeConfiguration(event => {\n            if (event.source === 7 /* ConfigurationTarget.DEFAULT */) {\n                // new setting, reset everything\n                const allKeys = Array.from(Iterable.map(this._values, ([k]) => k));\n                this._values.clear();\n                emitter.fire(new ArrayContextKeyChangeEvent(allKeys));\n            }\n            else {\n                const changedKeys = [];\n                for (const configKey of event.affectedKeys) {\n                    const contextKey = `config.${configKey}`;\n                    const cachedItems = this._values.findSuperstr(contextKey);\n                    if (cachedItems !== undefined) {\n                        changedKeys.push(...Iterable.map(cachedItems, ([key]) => key));\n                        this._values.deleteSuperstr(contextKey);\n                    }\n                    if (this._values.has(contextKey)) {\n                        changedKeys.push(contextKey);\n                        this._values.delete(contextKey);\n                    }\n                }\n                emitter.fire(new ArrayContextKeyChangeEvent(changedKeys));\n            }\n        });\n    }\n    dispose() {\n        this._listener.dispose();\n    }\n    getValue(key) {\n        if (key.indexOf(ConfigAwareContextValuesContainer._keyPrefix) !== 0) {\n            return super.getValue(key);\n        }\n        if (this._values.has(key)) {\n            return this._values.get(key);\n        }\n        const configKey = key.substr(ConfigAwareContextValuesContainer._keyPrefix.length);\n        const configValue = this._configurationService.getValue(configKey);\n        let value = undefined;\n        switch (typeof configValue) {\n            case 'number':\n            case 'boolean':\n            case 'string':\n                value = configValue;\n                break;\n            default:\n                if (Array.isArray(configValue)) {\n                    value = JSON.stringify(configValue);\n                }\n                else {\n                    value = configValue;\n                }\n        }\n        this._values.set(key, value);\n        return value;\n    }\n    setValue(key, value) {\n        return super.setValue(key, value);\n    }\n    removeValue(key) {\n        return super.removeValue(key);\n    }\n}\nConfigAwareContextValuesContainer._keyPrefix = 'config.';\nclass ContextKey {\n    constructor(service, key, defaultValue) {\n        this._service = service;\n        this._key = key;\n        this._defaultValue = defaultValue;\n        this.reset();\n    }\n    set(value) {\n        this._service.setContext(this._key, value);\n    }\n    reset() {\n        if (typeof this._defaultValue === 'undefined') {\n            this._service.removeContext(this._key);\n        }\n        else {\n            this._service.setContext(this._key, this._defaultValue);\n        }\n    }\n    get() {\n        return this._service.getContextKeyValue(this._key);\n    }\n}\nclass SimpleContextKeyChangeEvent {\n    constructor(key) {\n        this.key = key;\n    }\n    affectsSome(keys) {\n        return keys.has(this.key);\n    }\n    allKeysContainedIn(keys) {\n        return this.affectsSome(keys);\n    }\n}\nclass ArrayContextKeyChangeEvent {\n    constructor(keys) {\n        this.keys = keys;\n    }\n    affectsSome(keys) {\n        for (const key of this.keys) {\n            if (keys.has(key)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    allKeysContainedIn(keys) {\n        return this.keys.every(key => keys.has(key));\n    }\n}\nclass CompositeContextKeyChangeEvent {\n    constructor(events) {\n        this.events = events;\n    }\n    affectsSome(keys) {\n        for (const e of this.events) {\n            if (e.affectsSome(keys)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    allKeysContainedIn(keys) {\n        return this.events.every(evt => evt.allKeysContainedIn(keys));\n    }\n}\nfunction allEventKeysInContext(event, context) {\n    return event.allKeysContainedIn(new Set(Object.keys(context)));\n}\nexport class AbstractContextKeyService {\n    constructor(myContextId) {\n        this._onDidChangeContext = new PauseableEmitter({ merge: input => new CompositeContextKeyChangeEvent(input) });\n        this.onDidChangeContext = this._onDidChangeContext.event;\n        this._isDisposed = false;\n        this._myContextId = myContextId;\n    }\n    createKey(key, defaultValue) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        return new ContextKey(this, key, defaultValue);\n    }\n    bufferChangeEvents(callback) {\n        this._onDidChangeContext.pause();\n        try {\n            callback();\n        }\n        finally {\n            this._onDidChangeContext.resume();\n        }\n    }\n    createScoped(domNode) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        return new ScopedContextKeyService(this, domNode);\n    }\n    contextMatchesRules(rules) {\n        if (this._isDisposed) {\n            throw new Error(`AbstractContextKeyService has been disposed`);\n        }\n        const context = this.getContextValuesContainer(this._myContextId);\n        const result = (rules ? rules.evaluate(context) : true);\n        // console.group(rules.serialize() + ' -> ' + result);\n        // rules.keys().forEach(key => { console.log(key, ctx[key]); });\n        // console.groupEnd();\n        return result;\n    }\n    getContextKeyValue(key) {\n        if (this._isDisposed) {\n            return undefined;\n        }\n        return this.getContextValuesContainer(this._myContextId).getValue(key);\n    }\n    setContext(key, value) {\n        if (this._isDisposed) {\n            return;\n        }\n        const myContext = this.getContextValuesContainer(this._myContextId);\n        if (!myContext) {\n            return;\n        }\n        if (myContext.setValue(key, value)) {\n            this._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\n        }\n    }\n    removeContext(key) {\n        if (this._isDisposed) {\n            return;\n        }\n        if (this.getContextValuesContainer(this._myContextId).removeValue(key)) {\n            this._onDidChangeContext.fire(new SimpleContextKeyChangeEvent(key));\n        }\n    }\n    getContext(target) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this.getContextValuesContainer(findContextAttr(target));\n    }\n}\nlet ContextKeyService = class ContextKeyService extends AbstractContextKeyService {\n    constructor(configurationService) {\n        super(0);\n        this._contexts = new Map();\n        this._toDispose = new DisposableStore();\n        this._lastContextId = 0;\n        const myContext = new ConfigAwareContextValuesContainer(this._myContextId, configurationService, this._onDidChangeContext);\n        this._contexts.set(this._myContextId, myContext);\n        this._toDispose.add(myContext);\n        // Uncomment this to see the contexts continuously logged\n        // let lastLoggedValue: string | null = null;\n        // setInterval(() => {\n        // \tlet values = Object.keys(this._contexts).map((key) => this._contexts[key]);\n        // \tlet logValue = values.map(v => JSON.stringify(v._value, null, '\\t')).join('\\n');\n        // \tif (lastLoggedValue !== logValue) {\n        // \t\tlastLoggedValue = logValue;\n        // \t\tconsole.log(lastLoggedValue);\n        // \t}\n        // }, 2000);\n    }\n    dispose() {\n        this._onDidChangeContext.dispose();\n        this._isDisposed = true;\n        this._toDispose.dispose();\n    }\n    getContextValuesContainer(contextId) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this._contexts.get(contextId) || NullContext.INSTANCE;\n    }\n    createChildContext(parentContextId = this._myContextId) {\n        if (this._isDisposed) {\n            throw new Error(`ContextKeyService has been disposed`);\n        }\n        const id = (++this._lastContextId);\n        this._contexts.set(id, new Context(id, this.getContextValuesContainer(parentContextId)));\n        return id;\n    }\n    disposeContext(contextId) {\n        if (!this._isDisposed) {\n            this._contexts.delete(contextId);\n        }\n    }\n};\nContextKeyService = __decorate([\n    __param(0, IConfigurationService)\n], ContextKeyService);\nexport { ContextKeyService };\nclass ScopedContextKeyService extends AbstractContextKeyService {\n    constructor(parent, domNode) {\n        super(parent.createChildContext());\n        this._parentChangeListener = new MutableDisposable();\n        this._parent = parent;\n        this._updateParentChangeListener();\n        this._domNode = domNode;\n        if (this._domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\n            let extraInfo = '';\n            if (this._domNode.classList) {\n                extraInfo = Array.from(this._domNode.classList.values()).join(', ');\n            }\n            console.error(`Element already has context attribute${extraInfo ? ': ' + extraInfo : ''}`);\n        }\n        this._domNode.setAttribute(KEYBINDING_CONTEXT_ATTR, String(this._myContextId));\n    }\n    _updateParentChangeListener() {\n        // Forward parent events to this listener. Parent will change.\n        this._parentChangeListener.value = this._parent.onDidChangeContext(e => {\n            const thisContainer = this._parent.getContextValuesContainer(this._myContextId);\n            const thisContextValues = thisContainer.value;\n            if (!allEventKeysInContext(e, thisContextValues)) {\n                this._onDidChangeContext.fire(e);\n            }\n        });\n    }\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        this._onDidChangeContext.dispose();\n        this._parent.disposeContext(this._myContextId);\n        this._parentChangeListener.dispose();\n        this._domNode.removeAttribute(KEYBINDING_CONTEXT_ATTR);\n        this._isDisposed = true;\n    }\n    getContextValuesContainer(contextId) {\n        if (this._isDisposed) {\n            return NullContext.INSTANCE;\n        }\n        return this._parent.getContextValuesContainer(contextId);\n    }\n    createChildContext(parentContextId = this._myContextId) {\n        if (this._isDisposed) {\n            throw new Error(`ScopedContextKeyService has been disposed`);\n        }\n        return this._parent.createChildContext(parentContextId);\n    }\n    disposeContext(contextId) {\n        if (this._isDisposed) {\n            return;\n        }\n        this._parent.disposeContext(contextId);\n    }\n}\nfunction findContextAttr(domNode) {\n    while (domNode) {\n        if (domNode.hasAttribute(KEYBINDING_CONTEXT_ATTR)) {\n            const attr = domNode.getAttribute(KEYBINDING_CONTEXT_ATTR);\n            if (attr) {\n                return parseInt(attr, 10);\n            }\n            return NaN;\n        }\n        domNode = domNode.parentElement;\n    }\n    return 0;\n}\nexport function setContext(accessor, contextKey, contextValue) {\n    accessor.get(IContextKeyService).createKey(String(contextKey), stringifyURIs(contextValue));\n}\nfunction stringifyURIs(contextValue) {\n    return cloneAndChange(contextValue, (obj) => {\n        if (typeof obj === 'object' && obj.$mid === 1 /* MarshalledId.Uri */) {\n            return URI.revive(obj).toString();\n        }\n        if (obj instanceof URI) {\n            return obj.toString();\n        }\n        return undefined;\n    });\n}\nCommandsRegistry.registerCommand(SET_CONTEXT_COMMAND_ID, setContext);\nCommandsRegistry.registerCommand({\n    id: 'getContextKeyInfo',\n    handler() {\n        return [...RawContextKey.all()].sort((a, b) => a.key.localeCompare(b.key));\n    },\n    description: {\n        description: localize('getContextKeyInfo', \"A command that returns information about context keys\"),\n        args: []\n    }\n});\nCommandsRegistry.registerCommand('_generateContextKeyInfo', function () {\n    const result = [];\n    const seen = new Set();\n    for (const info of RawContextKey.all()) {\n        if (!seen.has(info.key)) {\n            seen.add(info.key);\n            result.push(info);\n        }\n    }\n    result.sort((a, b) => a.key.localeCompare(b.key));\n    console.log(JSON.stringify(result, undefined, 2));\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isChrome, isEdge, isFirefox, isLinux, isMacintosh, isSafari, isWeb, isWindows } from '../../../base/common/platform.js';\nimport { isFalsyOrWhitespace } from '../../../base/common/strings.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nconst CONSTANT_VALUES = new Map();\nCONSTANT_VALUES.set('false', false);\nCONSTANT_VALUES.set('true', true);\nCONSTANT_VALUES.set('isMac', isMacintosh);\nCONSTANT_VALUES.set('isLinux', isLinux);\nCONSTANT_VALUES.set('isWindows', isWindows);\nCONSTANT_VALUES.set('isWeb', isWeb);\nCONSTANT_VALUES.set('isMacNative', isMacintosh && !isWeb);\nCONSTANT_VALUES.set('isEdge', isEdge);\nCONSTANT_VALUES.set('isFirefox', isFirefox);\nCONSTANT_VALUES.set('isChrome', isChrome);\nCONSTANT_VALUES.set('isSafari', isSafari);\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\nexport class ContextKeyExpr {\n    static has(key) {\n        return ContextKeyDefinedExpr.create(key);\n    }\n    static equals(key, value) {\n        return ContextKeyEqualsExpr.create(key, value);\n    }\n    static regex(key, value) {\n        return ContextKeyRegexExpr.create(key, value);\n    }\n    static not(key) {\n        return ContextKeyNotExpr.create(key);\n    }\n    static and(...expr) {\n        return ContextKeyAndExpr.create(expr, null);\n    }\n    static or(...expr) {\n        return ContextKeyOrExpr.create(expr, null, true);\n    }\n    static deserialize(serialized, strict = false) {\n        if (!serialized) {\n            return undefined;\n        }\n        return this._deserializeOrExpression(serialized, strict);\n    }\n    static _deserializeOrExpression(serialized, strict) {\n        const pieces = serialized.split('||');\n        return ContextKeyOrExpr.create(pieces.map(p => this._deserializeAndExpression(p, strict)), null, true);\n    }\n    static _deserializeAndExpression(serialized, strict) {\n        const pieces = serialized.split('&&');\n        return ContextKeyAndExpr.create(pieces.map(p => this._deserializeOne(p, strict)), null);\n    }\n    static _deserializeOne(serializedOne, strict) {\n        serializedOne = serializedOne.trim();\n        if (serializedOne.indexOf('!=') >= 0) {\n            const pieces = serializedOne.split('!=');\n            return ContextKeyNotEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n        }\n        if (serializedOne.indexOf('==') >= 0) {\n            const pieces = serializedOne.split('==');\n            return ContextKeyEqualsExpr.create(pieces[0].trim(), this._deserializeValue(pieces[1], strict));\n        }\n        if (serializedOne.indexOf('=~') >= 0) {\n            const pieces = serializedOne.split('=~');\n            return ContextKeyRegexExpr.create(pieces[0].trim(), this._deserializeRegexValue(pieces[1], strict));\n        }\n        if (serializedOne.indexOf(' not in ') >= 0) {\n            const pieces = serializedOne.split(' not in ');\n            return ContextKeyNotInExpr.create(pieces[0].trim(), pieces[1].trim());\n        }\n        if (serializedOne.indexOf(' in ') >= 0) {\n            const pieces = serializedOne.split(' in ');\n            return ContextKeyInExpr.create(pieces[0].trim(), pieces[1].trim());\n        }\n        if (/^[^<=>]+>=[^<=>]+$/.test(serializedOne)) {\n            const pieces = serializedOne.split('>=');\n            return ContextKeyGreaterEqualsExpr.create(pieces[0].trim(), pieces[1].trim());\n        }\n        if (/^[^<=>]+>[^<=>]+$/.test(serializedOne)) {\n            const pieces = serializedOne.split('>');\n            return ContextKeyGreaterExpr.create(pieces[0].trim(), pieces[1].trim());\n        }\n        if (/^[^<=>]+<=[^<=>]+$/.test(serializedOne)) {\n            const pieces = serializedOne.split('<=');\n            return ContextKeySmallerEqualsExpr.create(pieces[0].trim(), pieces[1].trim());\n        }\n        if (/^[^<=>]+<[^<=>]+$/.test(serializedOne)) {\n            const pieces = serializedOne.split('<');\n            return ContextKeySmallerExpr.create(pieces[0].trim(), pieces[1].trim());\n        }\n        if (/^\\!\\s*/.test(serializedOne)) {\n            return ContextKeyNotExpr.create(serializedOne.substr(1).trim());\n        }\n        return ContextKeyDefinedExpr.create(serializedOne);\n    }\n    static _deserializeValue(serializedValue, strict) {\n        serializedValue = serializedValue.trim();\n        if (serializedValue === 'true') {\n            return true;\n        }\n        if (serializedValue === 'false') {\n            return false;\n        }\n        const m = /^'([^']*)'$/.exec(serializedValue);\n        if (m) {\n            return m[1].trim();\n        }\n        return serializedValue;\n    }\n    static _deserializeRegexValue(serializedValue, strict) {\n        if (isFalsyOrWhitespace(serializedValue)) {\n            if (strict) {\n                throw new Error('missing regexp-value for =~-expression');\n            }\n            else {\n                console.warn('missing regexp-value for =~-expression');\n            }\n            return null;\n        }\n        const start = serializedValue.indexOf('/');\n        const end = serializedValue.lastIndexOf('/');\n        if (start === end || start < 0 /* || to < 0 */) {\n            if (strict) {\n                throw new Error(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n            }\n            else {\n                console.warn(`bad regexp-value '${serializedValue}', missing /-enclosure`);\n            }\n            return null;\n        }\n        const value = serializedValue.slice(start + 1, end);\n        const caseIgnoreFlag = serializedValue[end + 1] === 'i' ? 'i' : '';\n        try {\n            return new RegExp(value, caseIgnoreFlag);\n        }\n        catch (e) {\n            if (strict) {\n                throw new Error(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n            }\n            else {\n                console.warn(`bad regexp-value '${serializedValue}', parse error: ${e}`);\n            }\n            return null;\n        }\n    }\n}\nexport function expressionsAreEqualWithConstantSubstitution(a, b) {\n    const aExpr = a ? a.substituteConstants() : undefined;\n    const bExpr = b ? b.substituteConstants() : undefined;\n    if (!aExpr && !bExpr) {\n        return true;\n    }\n    if (!aExpr || !bExpr) {\n        return false;\n    }\n    return aExpr.equals(bExpr);\n}\nfunction cmp(a, b) {\n    return a.cmp(b);\n}\nexport class ContextKeyFalseExpr {\n    constructor() {\n        this.type = 0 /* ContextKeyExprType.False */;\n    }\n    cmp(other) {\n        return this.type - other.type;\n    }\n    equals(other) {\n        return (other.type === this.type);\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return false;\n    }\n    serialize() {\n        return 'false';\n    }\n    keys() {\n        return [];\n    }\n    negate() {\n        return ContextKeyTrueExpr.INSTANCE;\n    }\n}\nContextKeyFalseExpr.INSTANCE = new ContextKeyFalseExpr();\nexport class ContextKeyTrueExpr {\n    constructor() {\n        this.type = 1 /* ContextKeyExprType.True */;\n    }\n    cmp(other) {\n        return this.type - other.type;\n    }\n    equals(other) {\n        return (other.type === this.type);\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return true;\n    }\n    serialize() {\n        return 'true';\n    }\n    keys() {\n        return [];\n    }\n    negate() {\n        return ContextKeyFalseExpr.INSTANCE;\n    }\n}\nContextKeyTrueExpr.INSTANCE = new ContextKeyTrueExpr();\nexport class ContextKeyDefinedExpr {\n    constructor(key, negated) {\n        this.key = key;\n        this.negated = negated;\n        this.type = 2 /* ContextKeyExprType.Defined */;\n    }\n    static create(key, negated = null) {\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            return constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n        }\n        return new ContextKeyDefinedExpr(key, negated);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp1(this.key, other.key);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            return constantValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE;\n        }\n        return this;\n    }\n    evaluate(context) {\n        return (!!context.getValue(this.key));\n    }\n    serialize() {\n        return this.key;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotExpr.create(this.key, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyEqualsExpr {\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 4 /* ContextKeyExprType.Equals */;\n    }\n    static create(key, value, negated = null) {\n        if (typeof value === 'boolean') {\n            return (value ? ContextKeyDefinedExpr.create(key, negated) : ContextKeyNotExpr.create(key, negated));\n        }\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            const trueValue = constantValue ? 'true' : 'false';\n            return (value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n        }\n        return new ContextKeyEqualsExpr(key, value, negated);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            const trueValue = constantValue ? 'true' : 'false';\n            return (this.value === trueValue ? ContextKeyTrueExpr.INSTANCE : ContextKeyFalseExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        // Intentional ==\n        // eslint-disable-next-line eqeqeq\n        return (context.getValue(this.key) == this.value);\n    }\n    serialize() {\n        return `${this.key} == '${this.value}'`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyInExpr {\n    constructor(key, valueKey) {\n        this.key = key;\n        this.valueKey = valueKey;\n        this.type = 10 /* ContextKeyExprType.In */;\n        this.negated = null;\n    }\n    static create(key, valueKey) {\n        return new ContextKeyInExpr(key, valueKey);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.valueKey, other.key, other.valueKey);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.valueKey === other.valueKey);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        const source = context.getValue(this.valueKey);\n        const item = context.getValue(this.key);\n        if (Array.isArray(source)) {\n            return source.includes(item);\n        }\n        if (typeof item === 'string' && typeof source === 'object' && source !== null) {\n            return hasOwnProperty.call(source, item);\n        }\n        return false;\n    }\n    serialize() {\n        return `${this.key} in '${this.valueKey}'`;\n    }\n    keys() {\n        return [this.key, this.valueKey];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotInExpr.create(this.key, this.valueKey);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotInExpr {\n    constructor(key, valueKey) {\n        this.key = key;\n        this.valueKey = valueKey;\n        this.type = 11 /* ContextKeyExprType.NotIn */;\n        this._negated = ContextKeyInExpr.create(key, valueKey);\n    }\n    static create(key, valueKey) {\n        return new ContextKeyNotInExpr(key, valueKey);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return this._negated.cmp(other._negated);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return this._negated.equals(other._negated);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return !this._negated.evaluate(context);\n    }\n    serialize() {\n        return `${this.key} not in '${this.valueKey}'`;\n    }\n    keys() {\n        return this._negated.keys();\n    }\n    negate() {\n        return this._negated;\n    }\n}\nexport class ContextKeyNotEqualsExpr {\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 5 /* ContextKeyExprType.NotEquals */;\n    }\n    static create(key, value, negated = null) {\n        if (typeof value === 'boolean') {\n            if (value) {\n                return ContextKeyNotExpr.create(key, negated);\n            }\n            return ContextKeyDefinedExpr.create(key, negated);\n        }\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            const falseValue = constantValue ? 'true' : 'false';\n            return (value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return new ContextKeyNotEqualsExpr(key, value, negated);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            const falseValue = constantValue ? 'true' : 'false';\n            return (this.value === falseValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        // Intentional !=\n        // eslint-disable-next-line eqeqeq\n        return (context.getValue(this.key) != this.value);\n    }\n    serialize() {\n        return `${this.key} != '${this.value}'`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotExpr {\n    constructor(key, negated) {\n        this.key = key;\n        this.negated = negated;\n        this.type = 3 /* ContextKeyExprType.Not */;\n    }\n    static create(key, negated = null) {\n        const constantValue = CONSTANT_VALUES.get(key);\n        if (typeof constantValue === 'boolean') {\n            return (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return new ContextKeyNotExpr(key, negated);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp1(this.key, other.key);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key);\n        }\n        return false;\n    }\n    substituteConstants() {\n        const constantValue = CONSTANT_VALUES.get(this.key);\n        if (typeof constantValue === 'boolean') {\n            return (constantValue ? ContextKeyFalseExpr.INSTANCE : ContextKeyTrueExpr.INSTANCE);\n        }\n        return this;\n    }\n    evaluate(context) {\n        return (!context.getValue(this.key));\n    }\n    serialize() {\n        return `!${this.key}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyDefinedExpr.create(this.key, this);\n        }\n        return this.negated;\n    }\n}\nfunction withFloatOrStr(value, callback) {\n    if (typeof value === 'string') {\n        const n = parseFloat(value);\n        if (!isNaN(n)) {\n            value = n;\n        }\n    }\n    if (typeof value === 'string' || typeof value === 'number') {\n        return callback(value);\n    }\n    return ContextKeyFalseExpr.INSTANCE;\n}\nexport class ContextKeyGreaterExpr {\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 12 /* ContextKeyExprType.Greater */;\n    }\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeyGreaterExpr(key, value, negated));\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) > this.value);\n    }\n    serialize() {\n        return `${this.key} > ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeySmallerEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyGreaterEqualsExpr {\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 13 /* ContextKeyExprType.GreaterEquals */;\n    }\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeyGreaterEqualsExpr(key, value, negated));\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) >= this.value);\n    }\n    serialize() {\n        return `${this.key} >= ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeySmallerExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeySmallerExpr {\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 14 /* ContextKeyExprType.Smaller */;\n    }\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeySmallerExpr(key, value, negated));\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) < this.value);\n    }\n    serialize() {\n        return `${this.key} < ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyGreaterEqualsExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeySmallerEqualsExpr {\n    constructor(key, value, negated) {\n        this.key = key;\n        this.value = value;\n        this.negated = negated;\n        this.type = 15 /* ContextKeyExprType.SmallerEquals */;\n    }\n    static create(key, _value, negated = null) {\n        return withFloatOrStr(_value, (value) => new ContextKeySmallerEqualsExpr(key, value, negated));\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return cmp2(this.key, this.value, other.key, other.value);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return (this.key === other.key && this.value === other.value);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        if (typeof this.value === 'string') {\n            return false;\n        }\n        return (parseFloat(context.getValue(this.key)) <= this.value);\n    }\n    serialize() {\n        return `${this.key} <= ${this.value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyGreaterExpr.create(this.key, this.value, this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyRegexExpr {\n    constructor(key, regexp) {\n        this.key = key;\n        this.regexp = regexp;\n        this.type = 7 /* ContextKeyExprType.Regex */;\n        this.negated = null;\n        //\n    }\n    static create(key, regexp) {\n        return new ContextKeyRegexExpr(key, regexp);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.key < other.key) {\n            return -1;\n        }\n        if (this.key > other.key) {\n            return 1;\n        }\n        const thisSource = this.regexp ? this.regexp.source : '';\n        const otherSource = other.regexp ? other.regexp.source : '';\n        if (thisSource < otherSource) {\n            return -1;\n        }\n        if (thisSource > otherSource) {\n            return 1;\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            const thisSource = this.regexp ? this.regexp.source : '';\n            const otherSource = other.regexp ? other.regexp.source : '';\n            return (this.key === other.key && thisSource === otherSource);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        const value = context.getValue(this.key);\n        return this.regexp ? this.regexp.test(value) : false;\n    }\n    serialize() {\n        const value = this.regexp\n            ? `/${this.regexp.source}/${this.regexp.ignoreCase ? 'i' : ''}`\n            : '/invalid/';\n        return `${this.key} =~ ${value}`;\n    }\n    keys() {\n        return [this.key];\n    }\n    negate() {\n        if (!this.negated) {\n            this.negated = ContextKeyNotRegexExpr.create(this);\n        }\n        return this.negated;\n    }\n}\nexport class ContextKeyNotRegexExpr {\n    constructor(_actual) {\n        this._actual = _actual;\n        this.type = 8 /* ContextKeyExprType.NotRegex */;\n        //\n    }\n    static create(actual) {\n        return new ContextKeyNotRegexExpr(actual);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        return this._actual.cmp(other._actual);\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            return this._actual.equals(other._actual);\n        }\n        return false;\n    }\n    substituteConstants() {\n        return this;\n    }\n    evaluate(context) {\n        return !this._actual.evaluate(context);\n    }\n    serialize() {\n        throw new Error('Method not implemented.');\n    }\n    keys() {\n        return this._actual.keys();\n    }\n    negate() {\n        return this._actual;\n    }\n}\n/**\n * @returns the same instance if nothing changed.\n */\nfunction eliminateConstantsInArray(arr) {\n    // Allocate array only if there is a difference\n    let newArr = null;\n    for (let i = 0, len = arr.length; i < len; i++) {\n        const newExpr = arr[i].substituteConstants();\n        if (arr[i] !== newExpr) {\n            // something has changed!\n            // allocate array on first difference\n            if (newArr === null) {\n                newArr = [];\n                for (let j = 0; j < i; j++) {\n                    newArr[j] = arr[j];\n                }\n            }\n        }\n        if (newArr !== null) {\n            newArr[i] = newExpr;\n        }\n    }\n    if (newArr === null) {\n        return arr;\n    }\n    return newArr;\n}\nclass ContextKeyAndExpr {\n    constructor(expr, negated) {\n        this.expr = expr;\n        this.negated = negated;\n        this.type = 6 /* ContextKeyExprType.And */;\n    }\n    static create(_expr, negated) {\n        return ContextKeyAndExpr._normalizeArr(_expr, negated);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.expr.length < other.expr.length) {\n            return -1;\n        }\n        if (this.expr.length > other.expr.length) {\n            return 1;\n        }\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            const r = cmp(this.expr[i], other.expr[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            if (this.expr.length !== other.expr.length) {\n                return false;\n            }\n            for (let i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].equals(other.expr[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    substituteConstants() {\n        const exprArr = eliminateConstantsInArray(this.expr);\n        if (exprArr === this.expr) {\n            // no change\n            return this;\n        }\n        return ContextKeyAndExpr.create(exprArr, this.negated);\n    }\n    evaluate(context) {\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            if (!this.expr[i].evaluate(context)) {\n                return false;\n            }\n        }\n        return true;\n    }\n    static _normalizeArr(arr, negated) {\n        const expr = [];\n        let hasTrue = false;\n        for (const e of arr) {\n            if (!e) {\n                continue;\n            }\n            if (e.type === 1 /* ContextKeyExprType.True */) {\n                // anything && true ==> anything\n                hasTrue = true;\n                continue;\n            }\n            if (e.type === 0 /* ContextKeyExprType.False */) {\n                // anything && false ==> false\n                return ContextKeyFalseExpr.INSTANCE;\n            }\n            if (e.type === 6 /* ContextKeyExprType.And */) {\n                expr.push(...e.expr);\n                continue;\n            }\n            expr.push(e);\n        }\n        if (expr.length === 0 && hasTrue) {\n            return ContextKeyTrueExpr.INSTANCE;\n        }\n        if (expr.length === 0) {\n            return undefined;\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        expr.sort(cmp);\n        // eliminate duplicate terms\n        for (let i = 1; i < expr.length; i++) {\n            if (expr[i - 1].equals(expr[i])) {\n                expr.splice(i, 1);\n                i--;\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // We must distribute any OR expression because we don't support parens\n        // OR extensions will be at the end (due to sorting rules)\n        while (expr.length > 1) {\n            const lastElement = expr[expr.length - 1];\n            if (lastElement.type !== 9 /* ContextKeyExprType.Or */) {\n                break;\n            }\n            // pop the last element\n            expr.pop();\n            // pop the second to last element\n            const secondToLastElement = expr.pop();\n            const isFinished = (expr.length === 0);\n            // distribute `lastElement` over `secondToLastElement`\n            const resultElement = ContextKeyOrExpr.create(lastElement.expr.map(el => ContextKeyAndExpr.create([el, secondToLastElement], null)), null, isFinished);\n            if (resultElement) {\n                expr.push(resultElement);\n                expr.sort(cmp);\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        return new ContextKeyAndExpr(expr, negated);\n    }\n    serialize() {\n        return this.expr.map(e => e.serialize()).join(' && ');\n    }\n    keys() {\n        const result = [];\n        for (const expr of this.expr) {\n            result.push(...expr.keys());\n        }\n        return result;\n    }\n    negate() {\n        if (!this.negated) {\n            const result = [];\n            for (const expr of this.expr) {\n                result.push(expr.negate());\n            }\n            this.negated = ContextKeyOrExpr.create(result, this, true);\n        }\n        return this.negated;\n    }\n}\nclass ContextKeyOrExpr {\n    constructor(expr, negated) {\n        this.expr = expr;\n        this.negated = negated;\n        this.type = 9 /* ContextKeyExprType.Or */;\n    }\n    static create(_expr, negated, extraRedundantCheck) {\n        return ContextKeyOrExpr._normalizeArr(_expr, negated, extraRedundantCheck);\n    }\n    cmp(other) {\n        if (other.type !== this.type) {\n            return this.type - other.type;\n        }\n        if (this.expr.length < other.expr.length) {\n            return -1;\n        }\n        if (this.expr.length > other.expr.length) {\n            return 1;\n        }\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            const r = cmp(this.expr[i], other.expr[i]);\n            if (r !== 0) {\n                return r;\n            }\n        }\n        return 0;\n    }\n    equals(other) {\n        if (other.type === this.type) {\n            if (this.expr.length !== other.expr.length) {\n                return false;\n            }\n            for (let i = 0, len = this.expr.length; i < len; i++) {\n                if (!this.expr[i].equals(other.expr[i])) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        return false;\n    }\n    substituteConstants() {\n        const exprArr = eliminateConstantsInArray(this.expr);\n        if (exprArr === this.expr) {\n            // no change\n            return this;\n        }\n        return ContextKeyOrExpr.create(exprArr, this.negated, false);\n    }\n    evaluate(context) {\n        for (let i = 0, len = this.expr.length; i < len; i++) {\n            if (this.expr[i].evaluate(context)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    static _normalizeArr(arr, negated, extraRedundantCheck) {\n        let expr = [];\n        let hasFalse = false;\n        if (arr) {\n            for (let i = 0, len = arr.length; i < len; i++) {\n                const e = arr[i];\n                if (!e) {\n                    continue;\n                }\n                if (e.type === 0 /* ContextKeyExprType.False */) {\n                    // anything || false ==> anything\n                    hasFalse = true;\n                    continue;\n                }\n                if (e.type === 1 /* ContextKeyExprType.True */) {\n                    // anything || true ==> true\n                    return ContextKeyTrueExpr.INSTANCE;\n                }\n                if (e.type === 9 /* ContextKeyExprType.Or */) {\n                    expr = expr.concat(e.expr);\n                    continue;\n                }\n                expr.push(e);\n            }\n            if (expr.length === 0 && hasFalse) {\n                return ContextKeyFalseExpr.INSTANCE;\n            }\n            expr.sort(cmp);\n        }\n        if (expr.length === 0) {\n            return undefined;\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // eliminate duplicate terms\n        for (let i = 1; i < expr.length; i++) {\n            if (expr[i - 1].equals(expr[i])) {\n                expr.splice(i, 1);\n                i--;\n            }\n        }\n        if (expr.length === 1) {\n            return expr[0];\n        }\n        // eliminate redundant terms\n        if (extraRedundantCheck) {\n            for (let i = 0; i < expr.length; i++) {\n                for (let j = i + 1; j < expr.length; j++) {\n                    if (implies(expr[i], expr[j])) {\n                        expr.splice(j, 1);\n                        j--;\n                    }\n                }\n            }\n            if (expr.length === 1) {\n                return expr[0];\n            }\n        }\n        return new ContextKeyOrExpr(expr, negated);\n    }\n    serialize() {\n        return this.expr.map(e => e.serialize()).join(' || ');\n    }\n    keys() {\n        const result = [];\n        for (const expr of this.expr) {\n            result.push(...expr.keys());\n        }\n        return result;\n    }\n    negate() {\n        if (!this.negated) {\n            const result = [];\n            for (const expr of this.expr) {\n                result.push(expr.negate());\n            }\n            // We don't support parens, so here we distribute the AND over the OR terminals\n            // We always take the first 2 AND pairs and distribute them\n            while (result.length > 1) {\n                const LEFT = result.shift();\n                const RIGHT = result.shift();\n                const all = [];\n                for (const left of getTerminals(LEFT)) {\n                    for (const right of getTerminals(RIGHT)) {\n                        all.push(ContextKeyAndExpr.create([left, right], null));\n                    }\n                }\n                const isFinished = (result.length === 0);\n                result.unshift(ContextKeyOrExpr.create(all, null, isFinished));\n            }\n            this.negated = result[0];\n        }\n        return this.negated;\n    }\n}\nexport class RawContextKey extends ContextKeyDefinedExpr {\n    constructor(key, defaultValue, metaOrHide) {\n        super(key, null);\n        this._defaultValue = defaultValue;\n        // collect all context keys into a central place\n        if (typeof metaOrHide === 'object') {\n            RawContextKey._info.push(Object.assign(Object.assign({}, metaOrHide), { key }));\n        }\n        else if (metaOrHide !== true) {\n            RawContextKey._info.push({ key, description: metaOrHide, type: defaultValue !== null && defaultValue !== undefined ? typeof defaultValue : undefined });\n        }\n    }\n    static all() {\n        return RawContextKey._info.values();\n    }\n    bindTo(target) {\n        return target.createKey(this.key, this._defaultValue);\n    }\n    getValue(target) {\n        return target.getContextKeyValue(this.key);\n    }\n    toNegated() {\n        return this.negate();\n    }\n    isEqualTo(value) {\n        return ContextKeyEqualsExpr.create(this.key, value);\n    }\n}\nRawContextKey._info = [];\nexport const IContextKeyService = createDecorator('contextKeyService');\nexport const SET_CONTEXT_COMMAND_ID = 'setContext';\nfunction cmp1(key1, key2) {\n    if (key1 < key2) {\n        return -1;\n    }\n    if (key1 > key2) {\n        return 1;\n    }\n    return 0;\n}\nfunction cmp2(key1, value1, key2, value2) {\n    if (key1 < key2) {\n        return -1;\n    }\n    if (key1 > key2) {\n        return 1;\n    }\n    if (value1 < value2) {\n        return -1;\n    }\n    if (value1 > value2) {\n        return 1;\n    }\n    return 0;\n}\n/**\n * Returns true if it is provable `p` implies `q`.\n */\nexport function implies(p, q) {\n    if (q.type === 6 /* ContextKeyExprType.And */ && (p.type !== 9 /* ContextKeyExprType.Or */ && p.type !== 6 /* ContextKeyExprType.And */)) {\n        // covers the case: A implies A && B\n        for (const qTerm of q.expr) {\n            if (p.equals(qTerm)) {\n                return true;\n            }\n        }\n    }\n    const notP = p.negate();\n    const expr = getTerminals(notP).concat(getTerminals(q));\n    expr.sort(cmp);\n    for (let i = 0; i < expr.length; i++) {\n        const a = expr[i];\n        const notA = a.negate();\n        for (let j = i + 1; j < expr.length; j++) {\n            const b = expr[j];\n            if (notA.equals(b)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\nfunction getTerminals(node) {\n    if (node.type === 9 /* ContextKeyExprType.Or */) {\n        return node.expr;\n    }\n    return [node];\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isIOS, isLinux, isMacintosh, isWeb, isWindows } from '../../../base/common/platform.js';\nimport { localize } from '../../../nls.js';\nimport { RawContextKey } from './contextkey.js';\nexport const IsMacContext = new RawContextKey('isMac', isMacintosh, localize('isMac', \"Whether the operating system is macOS\"));\nexport const IsLinuxContext = new RawContextKey('isLinux', isLinux, localize('isLinux', \"Whether the operating system is Linux\"));\nexport const IsWindowsContext = new RawContextKey('isWindows', isWindows, localize('isWindows', \"Whether the operating system is Windows\"));\nexport const IsWebContext = new RawContextKey('isWeb', isWeb, localize('isWeb', \"Whether the platform is a web browser\"));\nexport const IsMacNativeContext = new RawContextKey('isMacNative', isMacintosh && !isWeb, localize('isMacNative', \"Whether the operating system is macOS on a non-browser platform\"));\nexport const IsIOSContext = new RawContextKey('isIOS', isIOS, localize('isIOS', \"Whether the operating system is iOS\"));\nexport const IsDevelopmentContext = new RawContextKey('isDevelopment', false, true);\nexport const ProductQualityContext = new RawContextKey('productQualityType', '', localize('productQualityType', \"Quality type of VS Code\"));\nexport const InputFocusedContextKey = 'inputFocus';\nexport const InputFocusedContext = new RawContextKey(InputFocusedContextKey, false, localize('inputFocus', \"Whether keyboard focus is inside an input box\"));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, addDisposableListener, EventType, isHTMLElement } from '../../../base/browser/dom.js';\nimport { StandardMouseEvent } from '../../../base/browser/mouseEvent.js';\nimport { Menu } from '../../../base/browser/ui/menu/menu.js';\nimport { ActionRunner } from '../../../base/common/actions.js';\nimport { isCancellationError } from '../../../base/common/errors.js';\nimport { combinedDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { attachMenuStyler } from '../../theme/common/styler.js';\nexport class ContextMenuHandler {\n    constructor(contextViewService, telemetryService, notificationService, keybindingService, themeService) {\n        this.contextViewService = contextViewService;\n        this.telemetryService = telemetryService;\n        this.notificationService = notificationService;\n        this.keybindingService = keybindingService;\n        this.themeService = themeService;\n        this.focusToReturn = null;\n        this.block = null;\n        this.options = { blockMouse: true };\n    }\n    configure(options) {\n        this.options = options;\n    }\n    showContextMenu(delegate) {\n        const actions = delegate.getActions();\n        if (!actions.length) {\n            return; // Don't render an empty context menu\n        }\n        this.focusToReturn = document.activeElement;\n        let menu;\n        const shadowRootElement = isHTMLElement(delegate.domForShadowRoot) ? delegate.domForShadowRoot : undefined;\n        this.contextViewService.showContextView({\n            getAnchor: () => delegate.getAnchor(),\n            canRelayout: false,\n            anchorAlignment: delegate.anchorAlignment,\n            anchorAxisAlignment: delegate.anchorAxisAlignment,\n            render: (container) => {\n                const className = delegate.getMenuClassName ? delegate.getMenuClassName() : '';\n                if (className) {\n                    container.className += ' ' + className;\n                }\n                // Render invisible div to block mouse interaction in the rest of the UI\n                if (this.options.blockMouse) {\n                    this.block = container.appendChild($('.context-view-block'));\n                    this.block.style.position = 'fixed';\n                    this.block.style.cursor = 'initial';\n                    this.block.style.left = '0';\n                    this.block.style.top = '0';\n                    this.block.style.width = '100%';\n                    this.block.style.height = '100%';\n                    this.block.style.zIndex = '-1';\n                    // TODO@Steven: this is never getting disposed\n                    addDisposableListener(this.block, EventType.MOUSE_DOWN, e => e.stopPropagation());\n                }\n                const menuDisposables = new DisposableStore();\n                const actionRunner = delegate.actionRunner || new ActionRunner();\n                actionRunner.onBeforeRun(this.onActionRun, this, menuDisposables);\n                actionRunner.onDidRun(this.onDidActionRun, this, menuDisposables);\n                menu = new Menu(container, actions, {\n                    actionViewItemProvider: delegate.getActionViewItem,\n                    context: delegate.getActionsContext ? delegate.getActionsContext() : null,\n                    actionRunner,\n                    getKeyBinding: delegate.getKeyBinding ? delegate.getKeyBinding : action => this.keybindingService.lookupKeybinding(action.id)\n                });\n                menuDisposables.add(attachMenuStyler(menu, this.themeService));\n                menu.onDidCancel(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n                menu.onDidBlur(() => this.contextViewService.hideContextView(true), null, menuDisposables);\n                menuDisposables.add(addDisposableListener(window, EventType.BLUR, () => this.contextViewService.hideContextView(true)));\n                menuDisposables.add(addDisposableListener(window, EventType.MOUSE_DOWN, (e) => {\n                    if (e.defaultPrevented) {\n                        return;\n                    }\n                    const event = new StandardMouseEvent(e);\n                    let element = event.target;\n                    // Don't do anything as we are likely creating a context menu\n                    if (event.rightButton) {\n                        return;\n                    }\n                    while (element) {\n                        if (element === container) {\n                            return;\n                        }\n                        element = element.parentElement;\n                    }\n                    this.contextViewService.hideContextView(true);\n                }));\n                return combinedDisposable(menuDisposables, menu);\n            },\n            focus: () => {\n                menu === null || menu === void 0 ? void 0 : menu.focus(!!delegate.autoSelectFirstItem);\n            },\n            onHide: (didCancel) => {\n                var _a;\n                (_a = delegate.onHide) === null || _a === void 0 ? void 0 : _a.call(delegate, !!didCancel);\n                if (this.block) {\n                    this.block.remove();\n                    this.block = null;\n                }\n                if (this.focusToReturn) {\n                    this.focusToReturn.focus();\n                }\n            }\n        }, shadowRootElement, !!shadowRootElement);\n    }\n    onActionRun(e) {\n        this.telemetryService.publicLog2('workbenchActionExecuted', { id: e.action.id, from: 'contextMenu' });\n        this.contextViewService.hideContextView(false);\n        // Restore focus here\n        if (this.focusToReturn) {\n            this.focusToReturn.focus();\n        }\n    }\n    onDidActionRun(e) {\n        if (e.error && !isCancellationError(e.error)) {\n            this.notificationService.error(e.error);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { ModifierKeyEmitter } from '../../../base/browser/dom.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { IKeybindingService } from '../../keybinding/common/keybinding.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { ITelemetryService } from '../../telemetry/common/telemetry.js';\nimport { IThemeService } from '../../theme/common/themeService.js';\nimport { ContextMenuHandler } from './contextMenuHandler.js';\nimport { IContextViewService } from './contextView.js';\nlet ContextMenuService = class ContextMenuService extends Disposable {\n    constructor(telemetryService, notificationService, contextViewService, keybindingService, themeService) {\n        super();\n        this._onDidShowContextMenu = new Emitter();\n        this._onDidHideContextMenu = new Emitter();\n        this.contextMenuHandler = new ContextMenuHandler(contextViewService, telemetryService, notificationService, keybindingService, themeService);\n    }\n    configure(options) {\n        this.contextMenuHandler.configure(options);\n    }\n    // ContextMenu\n    showContextMenu(delegate) {\n        this.contextMenuHandler.showContextMenu(Object.assign(Object.assign({}, delegate), { onHide: (didCancel) => {\n                var _a;\n                (_a = delegate.onHide) === null || _a === void 0 ? void 0 : _a.call(delegate, didCancel);\n                this._onDidHideContextMenu.fire();\n            } }));\n        ModifierKeyEmitter.getInstance().resetKeyStatus();\n        this._onDidShowContextMenu.fire();\n    }\n};\nContextMenuService = __decorate([\n    __param(0, ITelemetryService),\n    __param(1, INotificationService),\n    __param(2, IContextViewService),\n    __param(3, IKeybindingService),\n    __param(4, IThemeService)\n], ContextMenuService);\nexport { ContextMenuService };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IContextViewService = createDecorator('contextViewService');\nexport const IContextMenuService = createDecorator('contextMenuService');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { ContextView } from '../../../base/browser/ui/contextview/contextview.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { ILayoutService } from '../../layout/browser/layoutService.js';\nlet ContextViewService = class ContextViewService extends Disposable {\n    constructor(layoutService) {\n        super();\n        this.layoutService = layoutService;\n        this.currentViewDisposable = Disposable.None;\n        this.container = layoutService.hasContainer ? layoutService.container : null;\n        this.contextView = this._register(new ContextView(this.container, 1 /* ContextViewDOMPosition.ABSOLUTE */));\n        this.layout();\n        this._register(layoutService.onDidLayout(() => this.layout()));\n    }\n    // ContextView\n    setContainer(container, domPosition) {\n        this.contextView.setContainer(container, domPosition || 1 /* ContextViewDOMPosition.ABSOLUTE */);\n    }\n    showContextView(delegate, container, shadowRoot) {\n        if (container) {\n            if (container !== this.container || this.shadowRoot !== shadowRoot) {\n                this.container = container;\n                this.setContainer(container, shadowRoot ? 3 /* ContextViewDOMPosition.FIXED_SHADOW */ : 2 /* ContextViewDOMPosition.FIXED */);\n            }\n        }\n        else {\n            if (this.layoutService.hasContainer && this.container !== this.layoutService.container) {\n                this.container = this.layoutService.container;\n                this.setContainer(this.container, 1 /* ContextViewDOMPosition.ABSOLUTE */);\n            }\n        }\n        this.shadowRoot = shadowRoot;\n        this.contextView.show(delegate);\n        const disposable = toDisposable(() => {\n            if (this.currentViewDisposable === disposable) {\n                this.hideContextView();\n            }\n        });\n        this.currentViewDisposable = disposable;\n        return disposable;\n    }\n    getContextViewElement() {\n        return this.contextView.getViewElement();\n    }\n    layout() {\n        this.contextView.layout();\n    }\n    hideContextView(data) {\n        this.contextView.hide(data);\n    }\n};\nContextViewService = __decorate([\n    __param(0, ILayoutService)\n], ContextViewService);\nexport { ContextViewService };\n"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","BrowserClipboardService","layoutService","logService","mapTextToType","Map","findText","resources","isSafari","isWebkitWebView","installWebKitWriteTextWorkaround","handler","currentWritePromise","DeferredPromise","webKitPendingClipboardWritePromise","isSettled","cancel","navigator","clipboard","write","ClipboardItem","p","catch","err","Error","name","isRejected","this","error","hasContainer","_register","addDisposableListener","container","text","type","set","complete","writeText","console","activeElement","document","textArea","body","appendChild","$","style","height","width","position","focus","select","execCommand","HTMLElement","removeChild","get","readText","Disposable","ILayoutService","ILogService","IClipboardService","createDecorator","ICommandService","CommandsRegistry","_commands","_onDidRegisterCommand","Emitter","onDidRegisterCommand","event","idOrCommand","registerCommand","id","description","constraints","args","arg","push","constraint","actualHandler","accessor","validateConstraints","commands","LinkedList","removeFn","unshift","ret","toDisposable","command","isEmpty","delete","fire","oldId","newId","executeCommand","list","Iterable","keys","getCommand","IConfigurationService","toValuesTree","properties","conflictReporter","root","create","addToValueTree","settingsTreeRoot","segments","split","last","pop","curr","s","obj","slice","join","JSON","stringify","removeFromValueTree","valueTree","doRemoveFromValueTree","first","shift","indexOf","Array","isArray","getConfigurationValue","config","settingPath","defaultValue","path","current","component","accessSetting","getLanguageTagSettingPlainKey","settingKey","replace","ConfigurationModel","_contents","_keys","_overrides","frozen","overrideConfigurations","checkAndFreeze","section","contents","overrideIdentifier","overrideContents","getContentsForOverrideIdentifer","undefined","identifier","overrideConfigurationModel","createOverrideConfigurationModel","objects","overrides","others","other","mergeContents","otherOverride","filter","o","arrays","identifiers","override","contentsForKey","overrideContentsForKey","source","types","data","isFrozen","contentsForIdentifierOnly","contentsToMerge","includes","addKey","removeKey","index","splice","Configuration","_defaultConfiguration","_policyConfiguration","_applicationConfiguration","_localUserConfiguration","_remoteUserConfiguration","_workspaceConfiguration","_folderConfigurations","ResourceMap","_memoryConfiguration","_memoryConfigurationByResource","_freeze","_workspaceConsolidatedConfiguration","_foldersConsolidatedConfigurations","_userConfiguration","workspace","getConsolidatedConfigurationModel","getValue","memoryConfiguration","resource","removeValue","setValue","consolidateConfigurationModel","folderConfigurationModel","getFolderConfigurationModelForResource","memoryConfigurationModel","freeze","policyValue","applicationValue","applicationConfiguration","userValue","userConfiguration","userLocalValue","localUserConfiguration","userRemoteValue","remoteUserConfiguration","workspaceValue","workspaceFolderValue","memoryValue","overrideIdentifiers","map","flat","getOverrideValue","default","policy","application","user","userLocal","userRemote","workspaceFolder","memory","merge","configurationModel","getConsolidatedConfigurationModelForResource","consolidateConfiguration","getWorkspaceConsolidatedConfiguration","getFolder","getFolderConsolidatedConfiguration","uri","memoryConfigurationForResource","folder","folderConsolidatedConfiguration","workspaceConsolidateConfiguration","folderConfiguration","defaults","folders","reduce","defaultConfiguration","parseConfigurationModel","policyConfiguration","workspaceConfiguration","URI","model","ConfigurationChangeEvent","change","previous","currentConfiguraiton","currentWorkspace","_previousConfiguration","keysSet","Set","forEach","add","affectedKeys","values","affectedKeysTree","parse","_a","doesAffectedKeysTreeContains","value1","previousConfiguration","value2","requestedTree","Extensions","allSettings","patternProperties","applicationSettings","machineSettings","machineOverridableSettings","windowSettings","resourceSettings","resourceLanguageSettingsSchemaId","contributionRegistry","Registry","JSONExtensions","ConfigurationRegistry","_onDidSchemaChange","_onDidUpdateConfiguration","configurationDefaultsOverrides","defaultLanguageConfigurationOverridesNode","title","nls","configurationContributors","resourceLanguageSettingsSchema","additionalProperties","errorMessage","allowTrailingCommas","allowComments","configurationProperties","policyConfigurations","excludedConfigurationProperties","registerSchema","registerOverridePropertyPatternKey","configuration","validate","registerConfigurations","configurations","doRegisterConfigurations","configurationDefaults","OVERRIDE_PROPERTY_REGEX","test","configurationDefaultOverride","valuesSources","assign","plainKey","property","$ref","defaultDefaultValue","defaultValueSource","overrideIdentifiersFromKey","updatePropertyDefaultValue","updateSchema","registerOverrideIdentifiers","defaultsOverrides","updateOverridePropertyPatternKey","validateAndRegisterProperties","extensionInfo","restrictedProperties","registerJSONConfiguration","scope","propertyKeys","validateProperty","restricted","hasOwnProperty","included","deprecationMessage","markdownDeprecationMessage","subNodes","allOf","node","register","overrideIdentifierProperty","resourceLanguagePropertiesSchema","OVERRIDE_PROPERTY_PATTERN","configurationdefaultOverride","defaultSource","getDefaultValue","OVERRIDE_IDENTIFIER_PATTERN","OVERRIDE_IDENTIFIER_REGEX","RegExp","matches","exec","trim","distinct","configurationRegistry","schema","_b","_c","_d","getConfigurationProperties","getPolicyConfigurations","DefaultConfigurationModel","defaultOverrideValue","message","KEYBINDING_CONTEXT_ATTR","Context","parent","_id","_parent","_value","NullContext","INSTANCE","ConfigAwareContextValuesContainer","_configurationService","emitter","_values","TernarySearchTree","_listener","onDidChangeConfiguration","allKeys","from","clear","ArrayContextKeyChangeEvent","changedKeys","configKey","contextKey","cachedItems","findSuperstr","deleteSuperstr","has","dispose","_keyPrefix","substr","configValue","ContextKey","service","_service","_key","_defaultValue","reset","setContext","removeContext","getContextKeyValue","SimpleContextKeyChangeEvent","affectsSome","every","CompositeContextKeyChangeEvent","events","evt","allKeysContainedIn","AbstractContextKeyService","myContextId","_onDidChangeContext","PauseableEmitter","input","onDidChangeContext","_isDisposed","_myContextId","callback","pause","resume","domNode","ScopedContextKeyService","rules","context","getContextValuesContainer","evaluate","myContext","hasAttribute","attr","getAttribute","parseInt","NaN","parentElement","findContextAttr","ContextKeyService","configurationService","_contexts","_toDispose","DisposableStore","_lastContextId","contextId","parentContextId","createChildContext","_parentChangeListener","MutableDisposable","_updateParentChangeListener","_domNode","extraInfo","classList","setAttribute","String","thisContextValues","disposeContext","removeAttribute","SET_CONTEXT_COMMAND_ID","contextValue","IContextKeyService","createKey","cloneAndChange","$mid","toString","stringifyURIs","RawContextKey","sort","a","b","localeCompare","localize","seen","info","log","CONSTANT_VALUES","isMacintosh","isLinux","isWindows","isWeb","isEdge","isFirefox","isChrome","prototype","ContextKeyExpr","ContextKeyDefinedExpr","ContextKeyEqualsExpr","ContextKeyRegexExpr","ContextKeyNotExpr","expr","ContextKeyAndExpr","ContextKeyOrExpr","serialized","strict","_deserializeOrExpression","pieces","_deserializeAndExpression","_deserializeOne","serializedOne","ContextKeyNotEqualsExpr","_deserializeValue","_deserializeRegexValue","ContextKeyNotInExpr","ContextKeyInExpr","ContextKeyGreaterEqualsExpr","ContextKeyGreaterExpr","ContextKeySmallerEqualsExpr","ContextKeySmallerExpr","serializedValue","m","isFalsyOrWhitespace","warn","start","end","lastIndexOf","caseIgnoreFlag","expressionsAreEqualWithConstantSubstitution","aExpr","substituteConstants","bExpr","equals","cmp","ContextKeyFalseExpr","ContextKeyTrueExpr","negated","cmp1","constantValue","cmp2","trueValue","valueKey","item","call","_negated","falseValue","withFloatOrStr","n","parseFloat","isNaN","regexp","thisSource","otherSource","ignoreCase","ContextKeyNotRegexExpr","_actual","actual","eliminateConstantsInArray","arr","newArr","len","newExpr","j","exprArr","serialize","negate","_expr","_normalizeArr","hasTrue","lastElement","secondToLastElement","isFinished","resultElement","el","LEFT","RIGHT","all","getTerminals","left","right","extraRedundantCheck","hasFalse","concat","implies","metaOrHide","_info","key1","key2","q","qTerm","notA","IsWindowsContext","InputFocusedContextKey","isIOS","ContextMenuHandler","contextViewService","telemetryService","notificationService","keybindingService","themeService","focusToReturn","block","options","blockMouse","delegate","actions","getActions","menu","shadowRootElement","isHTMLElement","domForShadowRoot","showContextView","getAnchor","canRelayout","anchorAlignment","anchorAxisAlignment","render","className","getMenuClassName","cursor","top","zIndex","EventType","stopPropagation","menuDisposables","actionRunner","ActionRunner","onBeforeRun","onActionRun","onDidRun","onDidActionRun","Menu","actionViewItemProvider","getActionViewItem","getActionsContext","getKeyBinding","action","lookupKeybinding","attachMenuStyler","onDidCancel","hideContextView","onDidBlur","window","defaultPrevented","StandardMouseEvent","element","rightButton","combinedDisposable","autoSelectFirstItem","onHide","didCancel","remove","publicLog2","isCancellationError","ContextMenuService","_onDidShowContextMenu","_onDidHideContextMenu","contextMenuHandler","configure","showContextMenu","ModifierKeyEmitter","resetKeyStatus","ITelemetryService","INotificationService","IContextViewService","IKeybindingService","IThemeService","IContextMenuService","ContextViewService","currentViewDisposable","contextView","ContextView","layout","onDidLayout","domPosition","setContainer","shadowRoot","show","disposable","getViewElement","hide"],"sourceRoot":""}