{"version":3,"file":"static/js/monaco-editor-vendor.ec949289.5124f7ff.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/standalone/browser/standaloneCodeEditorService.js","../node_modules/monaco-editor/esm/vs/editor/standalone/browser/standaloneCodeEditor.js","../node_modules/monaco-editor/esm/vs/editor/standalone/browser/standaloneEditor.js","../node_modules/monaco-editor/esm/vs/editor/standalone/common/monarch/monarchCompile.js","../node_modules/monaco-editor/esm/vs/editor/standalone/browser/standaloneLanguages.js","../node_modules/monaco-editor/esm/vs/editor/standalone/browser/standaloneLayoutService.js","../node_modules/monaco-editor/esm/vs/editor/standalone/browser/standaloneServices.js","../node_modules/monaco-editor/esm/vs/editor/standalone/common/themes.js","../node_modules/monaco-editor/esm/vs/editor/standalone/browser/standaloneThemeService.js","../node_modules/monaco-editor/esm/vs/editor/standalone/browser/toggleHighContrast/toggleHighContrast.js","../node_modules/monaco-editor/esm/vs/editor/standalone/common/monarch/monarchCommon.js","../node_modules/monaco-editor/esm/vs/editor/standalone/common/monarch/monarchLexer.js","../node_modules/monaco-editor/esm/vs/editor/standalone/common/standaloneTheme.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { windowOpenNoOpener } from '../../../base/browser/dom.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { AbstractCodeEditorService } from '../../browser/services/abstractCodeEditorService.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nlet StandaloneCodeEditorService = class StandaloneCodeEditorService extends AbstractCodeEditorService {\n    constructor(contextKeyService, themeService) {\n        super(themeService);\n        this._register(this.onCodeEditorAdd(() => this._checkContextKey()));\n        this._register(this.onCodeEditorRemove(() => this._checkContextKey()));\n        this._editorIsOpen = contextKeyService.createKey('editorIsOpen', false);\n        this._activeCodeEditor = null;\n        this._register(this.registerCodeEditorOpenHandler(async (input, source, sideBySide) => {\n            if (!source) {\n                return null;\n            }\n            return this.doOpenEditor(source, input);\n        }));\n    }\n    _checkContextKey() {\n        let hasCodeEditor = false;\n        for (const editor of this.listCodeEditors()) {\n            if (!editor.isSimpleWidget) {\n                hasCodeEditor = true;\n                break;\n            }\n        }\n        this._editorIsOpen.set(hasCodeEditor);\n    }\n    setActiveCodeEditor(activeCodeEditor) {\n        this._activeCodeEditor = activeCodeEditor;\n    }\n    getActiveCodeEditor() {\n        return this._activeCodeEditor;\n    }\n    doOpenEditor(editor, input) {\n        const model = this.findModel(editor, input.resource);\n        if (!model) {\n            if (input.resource) {\n                const schema = input.resource.scheme;\n                if (schema === Schemas.http || schema === Schemas.https) {\n                    // This is a fully qualified http or https URL\n                    windowOpenNoOpener(input.resource.toString());\n                    return editor;\n                }\n            }\n            return null;\n        }\n        const selection = (input.options ? input.options.selection : null);\n        if (selection) {\n            if (typeof selection.endLineNumber === 'number' && typeof selection.endColumn === 'number') {\n                editor.setSelection(selection);\n                editor.revealRangeInCenter(selection, 1 /* ScrollType.Immediate */);\n            }\n            else {\n                const pos = {\n                    lineNumber: selection.startLineNumber,\n                    column: selection.startColumn\n                };\n                editor.setPosition(pos);\n                editor.revealPositionInCenter(pos, 1 /* ScrollType.Immediate */);\n            }\n        }\n        return editor;\n    }\n    findModel(editor, resource) {\n        const model = editor.getModel();\n        if (model && model.uri.toString() !== resource.toString()) {\n            return null;\n        }\n        return model;\n    }\n};\nStandaloneCodeEditorService = __decorate([\n    __param(0, IContextKeyService),\n    __param(1, IThemeService)\n], StandaloneCodeEditorService);\nexport { StandaloneCodeEditorService };\nregisterSingleton(ICodeEditorService, StandaloneCodeEditorService, 0 /* InstantiationType.Eager */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as aria from '../../../base/browser/ui/aria/aria.js';\nimport { Disposable, toDisposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { CodeEditorWidget } from '../../browser/widget/codeEditor/codeEditorWidget.js';\nimport { InternalEditorAction } from '../../common/editorAction.js';\nimport { StandaloneKeybindingService, updateConfigurationService } from './standaloneServices.js';\nimport { IStandaloneThemeService } from '../common/standaloneTheme.js';\nimport { MenuId, MenuRegistry } from '../../../platform/actions/common/actions.js';\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { StandaloneCodeEditorNLS } from '../../common/standaloneStrings.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { IModelService } from '../../common/services/model.js';\nimport { ILanguageService } from '../../common/languages/language.js';\nimport { StandaloneCodeEditorService } from './standaloneCodeEditorService.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../../common/languages/modesRegistry.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nimport { DiffEditorWidget } from '../../browser/widget/diffEditor/diffEditorWidget.js';\nimport { IAccessibilitySignalService } from '../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { setHoverDelegateFactory } from '../../../base/browser/ui/hover/hoverDelegateFactory.js';\nimport { IHoverService, WorkbenchHoverDelegate } from '../../../platform/hover/browser/hover.js';\nimport { setBaseLayerHoverDelegate } from '../../../base/browser/ui/hover/hoverDelegate2.js';\nlet LAST_GENERATED_COMMAND_ID = 0;\nlet ariaDomNodeCreated = false;\n/**\n * Create ARIA dom node inside parent,\n * or only for the first editor instantiation inside document.body.\n * @param parent container element for ARIA dom node\n */\nfunction createAriaDomNode(parent) {\n    if (!parent) {\n        if (ariaDomNodeCreated) {\n            return;\n        }\n        ariaDomNodeCreated = true;\n    }\n    aria.setARIAContainer(parent || mainWindow.document.body);\n}\n/**\n * A code editor to be used both by the standalone editor and the standalone diff editor.\n */\nlet StandaloneCodeEditor = class StandaloneCodeEditor extends CodeEditorWidget {\n    constructor(domElement, _options, instantiationService, codeEditorService, commandService, contextKeyService, hoverService, keybindingService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService) {\n        const options = { ..._options };\n        options.ariaLabel = options.ariaLabel || StandaloneCodeEditorNLS.editorViewAccessibleLabel;\n        options.ariaLabel = options.ariaLabel + ';' + (StandaloneCodeEditorNLS.accessibilityHelpMessage);\n        super(domElement, options, {}, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService);\n        if (keybindingService instanceof StandaloneKeybindingService) {\n            this._standaloneKeybindingService = keybindingService;\n        }\n        else {\n            this._standaloneKeybindingService = null;\n        }\n        createAriaDomNode(options.ariaContainerElement);\n        setHoverDelegateFactory((placement, enableInstantHover) => instantiationService.createInstance(WorkbenchHoverDelegate, placement, enableInstantHover, {}));\n        setBaseLayerHoverDelegate(hoverService);\n    }\n    addCommand(keybinding, handler, context) {\n        if (!this._standaloneKeybindingService) {\n            console.warn('Cannot add command because the editor is configured with an unrecognized KeybindingService');\n            return null;\n        }\n        const commandId = 'DYNAMIC_' + (++LAST_GENERATED_COMMAND_ID);\n        const whenExpression = ContextKeyExpr.deserialize(context);\n        this._standaloneKeybindingService.addDynamicKeybinding(commandId, keybinding, handler, whenExpression);\n        return commandId;\n    }\n    createContextKey(key, defaultValue) {\n        return this._contextKeyService.createKey(key, defaultValue);\n    }\n    addAction(_descriptor) {\n        if ((typeof _descriptor.id !== 'string') || (typeof _descriptor.label !== 'string') || (typeof _descriptor.run !== 'function')) {\n            throw new Error('Invalid action descriptor, `id`, `label` and `run` are required properties!');\n        }\n        if (!this._standaloneKeybindingService) {\n            console.warn('Cannot add keybinding because the editor is configured with an unrecognized KeybindingService');\n            return Disposable.None;\n        }\n        // Read descriptor options\n        const id = _descriptor.id;\n        const label = _descriptor.label;\n        const precondition = ContextKeyExpr.and(ContextKeyExpr.equals('editorId', this.getId()), ContextKeyExpr.deserialize(_descriptor.precondition));\n        const keybindings = _descriptor.keybindings;\n        const keybindingsWhen = ContextKeyExpr.and(precondition, ContextKeyExpr.deserialize(_descriptor.keybindingContext));\n        const contextMenuGroupId = _descriptor.contextMenuGroupId || null;\n        const contextMenuOrder = _descriptor.contextMenuOrder || 0;\n        const run = (_accessor, ...args) => {\n            return Promise.resolve(_descriptor.run(this, ...args));\n        };\n        const toDispose = new DisposableStore();\n        // Generate a unique id to allow the same descriptor.id across multiple editor instances\n        const uniqueId = this.getId() + ':' + id;\n        // Register the command\n        toDispose.add(CommandsRegistry.registerCommand(uniqueId, run));\n        // Register the context menu item\n        if (contextMenuGroupId) {\n            const menuItem = {\n                command: {\n                    id: uniqueId,\n                    title: label\n                },\n                when: precondition,\n                group: contextMenuGroupId,\n                order: contextMenuOrder\n            };\n            toDispose.add(MenuRegistry.appendMenuItem(MenuId.EditorContext, menuItem));\n        }\n        // Register the keybindings\n        if (Array.isArray(keybindings)) {\n            for (const kb of keybindings) {\n                toDispose.add(this._standaloneKeybindingService.addDynamicKeybinding(uniqueId, kb, run, keybindingsWhen));\n            }\n        }\n        // Finally, register an internal editor action\n        const internalAction = new InternalEditorAction(uniqueId, label, label, undefined, precondition, (...args) => Promise.resolve(_descriptor.run(this, ...args)), this._contextKeyService);\n        // Store it under the original id, such that trigger with the original id will work\n        this._actions.set(id, internalAction);\n        toDispose.add(toDisposable(() => {\n            this._actions.delete(id);\n        }));\n        return toDispose;\n    }\n    _triggerCommand(handlerId, payload) {\n        if (this._codeEditorService instanceof StandaloneCodeEditorService) {\n            // Help commands find this editor as the active editor\n            try {\n                this._codeEditorService.setActiveCodeEditor(this);\n                super._triggerCommand(handlerId, payload);\n            }\n            finally {\n                this._codeEditorService.setActiveCodeEditor(null);\n            }\n        }\n        else {\n            super._triggerCommand(handlerId, payload);\n        }\n    }\n};\nStandaloneCodeEditor = __decorate([\n    __param(2, IInstantiationService),\n    __param(3, ICodeEditorService),\n    __param(4, ICommandService),\n    __param(5, IContextKeyService),\n    __param(6, IHoverService),\n    __param(7, IKeybindingService),\n    __param(8, IThemeService),\n    __param(9, INotificationService),\n    __param(10, IAccessibilityService),\n    __param(11, ILanguageConfigurationService),\n    __param(12, ILanguageFeaturesService)\n], StandaloneCodeEditor);\nexport { StandaloneCodeEditor };\nlet StandaloneEditor = class StandaloneEditor extends StandaloneCodeEditor {\n    constructor(domElement, _options, instantiationService, codeEditorService, commandService, contextKeyService, hoverService, keybindingService, themeService, notificationService, configurationService, accessibilityService, modelService, languageService, languageConfigurationService, languageFeaturesService) {\n        const options = { ..._options };\n        updateConfigurationService(configurationService, options, false);\n        const themeDomRegistration = themeService.registerEditorContainer(domElement);\n        if (typeof options.theme === 'string') {\n            themeService.setTheme(options.theme);\n        }\n        if (typeof options.autoDetectHighContrast !== 'undefined') {\n            themeService.setAutoDetectHighContrast(Boolean(options.autoDetectHighContrast));\n        }\n        const _model = options.model;\n        delete options.model;\n        super(domElement, options, instantiationService, codeEditorService, commandService, contextKeyService, hoverService, keybindingService, themeService, notificationService, accessibilityService, languageConfigurationService, languageFeaturesService);\n        this._configurationService = configurationService;\n        this._standaloneThemeService = themeService;\n        this._register(themeDomRegistration);\n        let model;\n        if (typeof _model === 'undefined') {\n            const languageId = languageService.getLanguageIdByMimeType(options.language) || options.language || PLAINTEXT_LANGUAGE_ID;\n            model = createTextModel(modelService, languageService, options.value || '', languageId, undefined);\n            this._ownsModel = true;\n        }\n        else {\n            model = _model;\n            this._ownsModel = false;\n        }\n        this._attachModel(model);\n        if (model) {\n            const e = {\n                oldModelUrl: null,\n                newModelUrl: model.uri\n            };\n            this._onDidChangeModel.fire(e);\n        }\n    }\n    dispose() {\n        super.dispose();\n    }\n    updateOptions(newOptions) {\n        updateConfigurationService(this._configurationService, newOptions, false);\n        if (typeof newOptions.theme === 'string') {\n            this._standaloneThemeService.setTheme(newOptions.theme);\n        }\n        if (typeof newOptions.autoDetectHighContrast !== 'undefined') {\n            this._standaloneThemeService.setAutoDetectHighContrast(Boolean(newOptions.autoDetectHighContrast));\n        }\n        super.updateOptions(newOptions);\n    }\n    _postDetachModelCleanup(detachedModel) {\n        super._postDetachModelCleanup(detachedModel);\n        if (detachedModel && this._ownsModel) {\n            detachedModel.dispose();\n            this._ownsModel = false;\n        }\n    }\n};\nStandaloneEditor = __decorate([\n    __param(2, IInstantiationService),\n    __param(3, ICodeEditorService),\n    __param(4, ICommandService),\n    __param(5, IContextKeyService),\n    __param(6, IHoverService),\n    __param(7, IKeybindingService),\n    __param(8, IStandaloneThemeService),\n    __param(9, INotificationService),\n    __param(10, IConfigurationService),\n    __param(11, IAccessibilityService),\n    __param(12, IModelService),\n    __param(13, ILanguageService),\n    __param(14, ILanguageConfigurationService),\n    __param(15, ILanguageFeaturesService)\n], StandaloneEditor);\nexport { StandaloneEditor };\nlet StandaloneDiffEditor2 = class StandaloneDiffEditor2 extends DiffEditorWidget {\n    constructor(domElement, _options, instantiationService, contextKeyService, codeEditorService, themeService, notificationService, configurationService, contextMenuService, editorProgressService, clipboardService, accessibilitySignalService) {\n        const options = { ..._options };\n        updateConfigurationService(configurationService, options, true);\n        const themeDomRegistration = themeService.registerEditorContainer(domElement);\n        if (typeof options.theme === 'string') {\n            themeService.setTheme(options.theme);\n        }\n        if (typeof options.autoDetectHighContrast !== 'undefined') {\n            themeService.setAutoDetectHighContrast(Boolean(options.autoDetectHighContrast));\n        }\n        super(domElement, options, {}, contextKeyService, instantiationService, codeEditorService, accessibilitySignalService, editorProgressService);\n        this._configurationService = configurationService;\n        this._standaloneThemeService = themeService;\n        this._register(themeDomRegistration);\n    }\n    dispose() {\n        super.dispose();\n    }\n    updateOptions(newOptions) {\n        updateConfigurationService(this._configurationService, newOptions, true);\n        if (typeof newOptions.theme === 'string') {\n            this._standaloneThemeService.setTheme(newOptions.theme);\n        }\n        if (typeof newOptions.autoDetectHighContrast !== 'undefined') {\n            this._standaloneThemeService.setAutoDetectHighContrast(Boolean(newOptions.autoDetectHighContrast));\n        }\n        super.updateOptions(newOptions);\n    }\n    _createInnerEditor(instantiationService, container, options) {\n        return instantiationService.createInstance(StandaloneCodeEditor, container, options);\n    }\n    getOriginalEditor() {\n        return super.getOriginalEditor();\n    }\n    getModifiedEditor() {\n        return super.getModifiedEditor();\n    }\n    addCommand(keybinding, handler, context) {\n        return this.getModifiedEditor().addCommand(keybinding, handler, context);\n    }\n    createContextKey(key, defaultValue) {\n        return this.getModifiedEditor().createContextKey(key, defaultValue);\n    }\n    addAction(descriptor) {\n        return this.getModifiedEditor().addAction(descriptor);\n    }\n};\nStandaloneDiffEditor2 = __decorate([\n    __param(2, IInstantiationService),\n    __param(3, IContextKeyService),\n    __param(4, ICodeEditorService),\n    __param(5, IStandaloneThemeService),\n    __param(6, INotificationService),\n    __param(7, IConfigurationService),\n    __param(8, IContextMenuService),\n    __param(9, IEditorProgressService),\n    __param(10, IClipboardService),\n    __param(11, IAccessibilitySignalService)\n], StandaloneDiffEditor2);\nexport { StandaloneDiffEditor2 };\n/**\n * @internal\n */\nexport function createTextModel(modelService, languageService, value, languageId, uri) {\n    value = value || '';\n    if (!languageId) {\n        const firstLF = value.indexOf('\\n');\n        let firstLine = value;\n        if (firstLF !== -1) {\n            firstLine = value.substring(0, firstLF);\n        }\n        return doCreateModel(modelService, value, languageService.createByFilepathOrFirstLine(uri || null, firstLine), uri);\n    }\n    return doCreateModel(modelService, value, languageService.createById(languageId), uri);\n}\n/**\n * @internal\n */\nfunction doCreateModel(modelService, value, languageSelection, uri) {\n    return modelService.createModel(value, languageSelection, uri);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { Disposable, DisposableStore } from '../../../base/common/lifecycle.js';\nimport { splitLines } from '../../../base/common/strings.js';\nimport { URI } from '../../../base/common/uri.js';\nimport './standalone-tokens.css';\nimport { FontMeasurements } from '../../browser/config/fontMeasurements.js';\nimport { EditorCommand } from '../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { createWebWorker as actualCreateWebWorker } from '../../browser/services/webWorker.js';\nimport { ApplyUpdateResult, ConfigurationChangedEvent, EditorOptions } from '../../common/config/editorOptions.js';\nimport { EditorZoom } from '../../common/config/editorZoom.js';\nimport { BareFontInfo, FontInfo } from '../../common/config/fontInfo.js';\nimport { EditorType } from '../../common/editorCommon.js';\nimport * as languages from '../../common/languages.js';\nimport { ILanguageService } from '../../common/languages/language.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { PLAINTEXT_LANGUAGE_ID } from '../../common/languages/modesRegistry.js';\nimport { NullState, nullTokenize } from '../../common/languages/nullTokenize.js';\nimport { FindMatch, TextModelResolvedOptions } from '../../common/model.js';\nimport { IModelService } from '../../common/services/model.js';\nimport * as standaloneEnums from '../../common/standalone/standaloneEnums.js';\nimport { Colorizer } from './colorizer.js';\nimport { StandaloneDiffEditor2, StandaloneEditor, createTextModel } from './standaloneCodeEditor.js';\nimport { StandaloneKeybindingService, StandaloneServices } from './standaloneServices.js';\nimport { IStandaloneThemeService } from '../common/standaloneTheme.js';\nimport { MenuId, MenuRegistry } from '../../../platform/actions/common/actions.js';\nimport { CommandsRegistry } from '../../../platform/commands/common/commands.js';\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\nimport { MultiDiffEditorWidget } from '../../browser/widget/multiDiffEditor/multiDiffEditorWidget.js';\n/**\n * Create a new editor under `domElement`.\n * `domElement` should be empty (not contain other dom nodes).\n * The editor will read the size of `domElement`.\n */\nexport function create(domElement, options, override) {\n    const instantiationService = StandaloneServices.initialize(override || {});\n    return instantiationService.createInstance(StandaloneEditor, domElement, options);\n}\n/**\n * Emitted when an editor is created.\n * Creating a diff editor might cause this listener to be invoked with the two editors.\n * @event\n */\nexport function onDidCreateEditor(listener) {\n    const codeEditorService = StandaloneServices.get(ICodeEditorService);\n    return codeEditorService.onCodeEditorAdd((editor) => {\n        listener(editor);\n    });\n}\n/**\n * Emitted when an diff editor is created.\n * @event\n */\nexport function onDidCreateDiffEditor(listener) {\n    const codeEditorService = StandaloneServices.get(ICodeEditorService);\n    return codeEditorService.onDiffEditorAdd((editor) => {\n        listener(editor);\n    });\n}\n/**\n * Get all the created editors.\n */\nexport function getEditors() {\n    const codeEditorService = StandaloneServices.get(ICodeEditorService);\n    return codeEditorService.listCodeEditors();\n}\n/**\n * Get all the created diff editors.\n */\nexport function getDiffEditors() {\n    const codeEditorService = StandaloneServices.get(ICodeEditorService);\n    return codeEditorService.listDiffEditors();\n}\n/**\n * Create a new diff editor under `domElement`.\n * `domElement` should be empty (not contain other dom nodes).\n * The editor will read the size of `domElement`.\n */\nexport function createDiffEditor(domElement, options, override) {\n    const instantiationService = StandaloneServices.initialize(override || {});\n    return instantiationService.createInstance(StandaloneDiffEditor2, domElement, options);\n}\nexport function createMultiFileDiffEditor(domElement, override) {\n    const instantiationService = StandaloneServices.initialize(override || {});\n    return new MultiDiffEditorWidget(domElement, {}, instantiationService);\n}\n/**\n * Add a command.\n */\nexport function addCommand(descriptor) {\n    if ((typeof descriptor.id !== 'string') || (typeof descriptor.run !== 'function')) {\n        throw new Error('Invalid command descriptor, `id` and `run` are required properties!');\n    }\n    return CommandsRegistry.registerCommand(descriptor.id, descriptor.run);\n}\n/**\n * Add an action to all editors.\n */\nexport function addEditorAction(descriptor) {\n    if ((typeof descriptor.id !== 'string') || (typeof descriptor.label !== 'string') || (typeof descriptor.run !== 'function')) {\n        throw new Error('Invalid action descriptor, `id`, `label` and `run` are required properties!');\n    }\n    const precondition = ContextKeyExpr.deserialize(descriptor.precondition);\n    const run = (accessor, ...args) => {\n        return EditorCommand.runEditorCommand(accessor, args, precondition, (accessor, editor, args) => Promise.resolve(descriptor.run(editor, ...args)));\n    };\n    const toDispose = new DisposableStore();\n    // Register the command\n    toDispose.add(CommandsRegistry.registerCommand(descriptor.id, run));\n    // Register the context menu item\n    if (descriptor.contextMenuGroupId) {\n        const menuItem = {\n            command: {\n                id: descriptor.id,\n                title: descriptor.label\n            },\n            when: precondition,\n            group: descriptor.contextMenuGroupId,\n            order: descriptor.contextMenuOrder || 0\n        };\n        toDispose.add(MenuRegistry.appendMenuItem(MenuId.EditorContext, menuItem));\n    }\n    // Register the keybindings\n    if (Array.isArray(descriptor.keybindings)) {\n        const keybindingService = StandaloneServices.get(IKeybindingService);\n        if (!(keybindingService instanceof StandaloneKeybindingService)) {\n            console.warn('Cannot add keybinding because the editor is configured with an unrecognized KeybindingService');\n        }\n        else {\n            const keybindingsWhen = ContextKeyExpr.and(precondition, ContextKeyExpr.deserialize(descriptor.keybindingContext));\n            toDispose.add(keybindingService.addDynamicKeybindings(descriptor.keybindings.map((keybinding) => {\n                return {\n                    keybinding,\n                    command: descriptor.id,\n                    when: keybindingsWhen\n                };\n            })));\n        }\n    }\n    return toDispose;\n}\n/**\n * Add a keybinding rule.\n */\nexport function addKeybindingRule(rule) {\n    return addKeybindingRules([rule]);\n}\n/**\n * Add keybinding rules.\n */\nexport function addKeybindingRules(rules) {\n    const keybindingService = StandaloneServices.get(IKeybindingService);\n    if (!(keybindingService instanceof StandaloneKeybindingService)) {\n        console.warn('Cannot add keybinding because the editor is configured with an unrecognized KeybindingService');\n        return Disposable.None;\n    }\n    return keybindingService.addDynamicKeybindings(rules.map((rule) => {\n        return {\n            keybinding: rule.keybinding,\n            command: rule.command,\n            commandArgs: rule.commandArgs,\n            when: ContextKeyExpr.deserialize(rule.when),\n        };\n    }));\n}\n/**\n * Create a new editor model.\n * You can specify the language that should be set for this model or let the language be inferred from the `uri`.\n */\nexport function createModel(value, language, uri) {\n    const languageService = StandaloneServices.get(ILanguageService);\n    const languageId = languageService.getLanguageIdByMimeType(language) || language;\n    return createTextModel(StandaloneServices.get(IModelService), languageService, value, languageId, uri);\n}\n/**\n * Change the language for a model.\n */\nexport function setModelLanguage(model, mimeTypeOrLanguageId) {\n    const languageService = StandaloneServices.get(ILanguageService);\n    const languageId = languageService.getLanguageIdByMimeType(mimeTypeOrLanguageId) || mimeTypeOrLanguageId || PLAINTEXT_LANGUAGE_ID;\n    model.setLanguage(languageService.createById(languageId));\n}\n/**\n * Set the markers for a model.\n */\nexport function setModelMarkers(model, owner, markers) {\n    if (model) {\n        const markerService = StandaloneServices.get(IMarkerService);\n        markerService.changeOne(owner, model.uri, markers);\n    }\n}\n/**\n * Remove all markers of an owner.\n */\nexport function removeAllMarkers(owner) {\n    const markerService = StandaloneServices.get(IMarkerService);\n    markerService.changeAll(owner, []);\n}\n/**\n * Get markers for owner and/or resource\n *\n * @returns list of markers\n */\nexport function getModelMarkers(filter) {\n    const markerService = StandaloneServices.get(IMarkerService);\n    return markerService.read(filter);\n}\n/**\n * Emitted when markers change for a model.\n * @event\n */\nexport function onDidChangeMarkers(listener) {\n    const markerService = StandaloneServices.get(IMarkerService);\n    return markerService.onMarkerChanged(listener);\n}\n/**\n * Get the model that has `uri` if it exists.\n */\nexport function getModel(uri) {\n    const modelService = StandaloneServices.get(IModelService);\n    return modelService.getModel(uri);\n}\n/**\n * Get all the created models.\n */\nexport function getModels() {\n    const modelService = StandaloneServices.get(IModelService);\n    return modelService.getModels();\n}\n/**\n * Emitted when a model is created.\n * @event\n */\nexport function onDidCreateModel(listener) {\n    const modelService = StandaloneServices.get(IModelService);\n    return modelService.onModelAdded(listener);\n}\n/**\n * Emitted right before a model is disposed.\n * @event\n */\nexport function onWillDisposeModel(listener) {\n    const modelService = StandaloneServices.get(IModelService);\n    return modelService.onModelRemoved(listener);\n}\n/**\n * Emitted when a different language is set to a model.\n * @event\n */\nexport function onDidChangeModelLanguage(listener) {\n    const modelService = StandaloneServices.get(IModelService);\n    return modelService.onModelLanguageChanged((e) => {\n        listener({\n            model: e.model,\n            oldLanguage: e.oldLanguageId\n        });\n    });\n}\n/**\n * Create a new web worker that has model syncing capabilities built in.\n * Specify an AMD module to load that will `create` an object that will be proxied.\n */\nexport function createWebWorker(opts) {\n    return actualCreateWebWorker(StandaloneServices.get(IModelService), StandaloneServices.get(ILanguageConfigurationService), opts);\n}\n/**\n * Colorize the contents of `domNode` using attribute `data-lang`.\n */\nexport function colorizeElement(domNode, options) {\n    const languageService = StandaloneServices.get(ILanguageService);\n    const themeService = StandaloneServices.get(IStandaloneThemeService);\n    return Colorizer.colorizeElement(themeService, languageService, domNode, options).then(() => {\n        themeService.registerEditorContainer(domNode);\n    });\n}\n/**\n * Colorize `text` using language `languageId`.\n */\nexport function colorize(text, languageId, options) {\n    const languageService = StandaloneServices.get(ILanguageService);\n    const themeService = StandaloneServices.get(IStandaloneThemeService);\n    themeService.registerEditorContainer(mainWindow.document.body);\n    return Colorizer.colorize(languageService, text, languageId, options);\n}\n/**\n * Colorize a line in a model.\n */\nexport function colorizeModelLine(model, lineNumber, tabSize = 4) {\n    const themeService = StandaloneServices.get(IStandaloneThemeService);\n    themeService.registerEditorContainer(mainWindow.document.body);\n    return Colorizer.colorizeModelLine(model, lineNumber, tabSize);\n}\n/**\n * @internal\n */\nfunction getSafeTokenizationSupport(language) {\n    const tokenizationSupport = languages.TokenizationRegistry.get(language);\n    if (tokenizationSupport) {\n        return tokenizationSupport;\n    }\n    return {\n        getInitialState: () => NullState,\n        tokenize: (line, hasEOL, state) => nullTokenize(language, state)\n    };\n}\n/**\n * Tokenize `text` using language `languageId`\n */\nexport function tokenize(text, languageId) {\n    // Needed in order to get the mode registered for subsequent look-ups\n    languages.TokenizationRegistry.getOrCreate(languageId);\n    const tokenizationSupport = getSafeTokenizationSupport(languageId);\n    const lines = splitLines(text);\n    const result = [];\n    let state = tokenizationSupport.getInitialState();\n    for (let i = 0, len = lines.length; i < len; i++) {\n        const line = lines[i];\n        const tokenizationResult = tokenizationSupport.tokenize(line, true, state);\n        result[i] = tokenizationResult.tokens;\n        state = tokenizationResult.endState;\n    }\n    return result;\n}\n/**\n * Define a new theme or update an existing theme.\n */\nexport function defineTheme(themeName, themeData) {\n    const standaloneThemeService = StandaloneServices.get(IStandaloneThemeService);\n    standaloneThemeService.defineTheme(themeName, themeData);\n}\n/**\n * Switches to a theme.\n */\nexport function setTheme(themeName) {\n    const standaloneThemeService = StandaloneServices.get(IStandaloneThemeService);\n    standaloneThemeService.setTheme(themeName);\n}\n/**\n * Clears all cached font measurements and triggers re-measurement.\n */\nexport function remeasureFonts() {\n    FontMeasurements.clearAllFontInfos();\n}\n/**\n * Register a command.\n */\nexport function registerCommand(id, handler) {\n    return CommandsRegistry.registerCommand({ id, handler });\n}\n/**\n * Registers a handler that is called when a link is opened in any editor. The handler callback should return `true` if the link was handled and `false` otherwise.\n * The handler that was registered last will be called first when a link is opened.\n *\n * Returns a disposable that can unregister the opener again.\n */\nexport function registerLinkOpener(opener) {\n    const openerService = StandaloneServices.get(IOpenerService);\n    return openerService.registerOpener({\n        async open(resource) {\n            if (typeof resource === 'string') {\n                resource = URI.parse(resource);\n            }\n            return opener.open(resource);\n        }\n    });\n}\n/**\n * Registers a handler that is called when a resource other than the current model should be opened in the editor (e.g. \"go to definition\").\n * The handler callback should return `true` if the request was handled and `false` otherwise.\n *\n * Returns a disposable that can unregister the opener again.\n *\n * If no handler is registered the default behavior is to do nothing for models other than the currently attached one.\n */\nexport function registerEditorOpener(opener) {\n    const codeEditorService = StandaloneServices.get(ICodeEditorService);\n    return codeEditorService.registerCodeEditorOpenHandler(async (input, source, sideBySide) => {\n        var _a;\n        if (!source) {\n            return null;\n        }\n        const selection = (_a = input.options) === null || _a === void 0 ? void 0 : _a.selection;\n        let selectionOrPosition;\n        if (selection && typeof selection.endLineNumber === 'number' && typeof selection.endColumn === 'number') {\n            selectionOrPosition = selection;\n        }\n        else if (selection) {\n            selectionOrPosition = { lineNumber: selection.startLineNumber, column: selection.startColumn };\n        }\n        if (await opener.openCodeEditor(source, input.resource, selectionOrPosition)) {\n            return source; // return source editor to indicate that this handler has successfully handled the opening\n        }\n        return null; // fallback to other registered handlers\n    });\n}\n/**\n * @internal\n */\nexport function createMonacoEditorAPI() {\n    return {\n        // methods\n        create: create,\n        getEditors: getEditors,\n        getDiffEditors: getDiffEditors,\n        onDidCreateEditor: onDidCreateEditor,\n        onDidCreateDiffEditor: onDidCreateDiffEditor,\n        createDiffEditor: createDiffEditor,\n        addCommand: addCommand,\n        addEditorAction: addEditorAction,\n        addKeybindingRule: addKeybindingRule,\n        addKeybindingRules: addKeybindingRules,\n        createModel: createModel,\n        setModelLanguage: setModelLanguage,\n        setModelMarkers: setModelMarkers,\n        getModelMarkers: getModelMarkers,\n        removeAllMarkers: removeAllMarkers,\n        onDidChangeMarkers: onDidChangeMarkers,\n        getModels: getModels,\n        getModel: getModel,\n        onDidCreateModel: onDidCreateModel,\n        onWillDisposeModel: onWillDisposeModel,\n        onDidChangeModelLanguage: onDidChangeModelLanguage,\n        createWebWorker: createWebWorker,\n        colorizeElement: colorizeElement,\n        colorize: colorize,\n        colorizeModelLine: colorizeModelLine,\n        tokenize: tokenize,\n        defineTheme: defineTheme,\n        setTheme: setTheme,\n        remeasureFonts: remeasureFonts,\n        registerCommand: registerCommand,\n        registerLinkOpener: registerLinkOpener,\n        registerEditorOpener: registerEditorOpener,\n        // enums\n        AccessibilitySupport: standaloneEnums.AccessibilitySupport,\n        ContentWidgetPositionPreference: standaloneEnums.ContentWidgetPositionPreference,\n        CursorChangeReason: standaloneEnums.CursorChangeReason,\n        DefaultEndOfLine: standaloneEnums.DefaultEndOfLine,\n        EditorAutoIndentStrategy: standaloneEnums.EditorAutoIndentStrategy,\n        EditorOption: standaloneEnums.EditorOption,\n        EndOfLinePreference: standaloneEnums.EndOfLinePreference,\n        EndOfLineSequence: standaloneEnums.EndOfLineSequence,\n        MinimapPosition: standaloneEnums.MinimapPosition,\n        MinimapSectionHeaderStyle: standaloneEnums.MinimapSectionHeaderStyle,\n        MouseTargetType: standaloneEnums.MouseTargetType,\n        OverlayWidgetPositionPreference: standaloneEnums.OverlayWidgetPositionPreference,\n        OverviewRulerLane: standaloneEnums.OverviewRulerLane,\n        GlyphMarginLane: standaloneEnums.GlyphMarginLane,\n        RenderLineNumbersType: standaloneEnums.RenderLineNumbersType,\n        RenderMinimap: standaloneEnums.RenderMinimap,\n        ScrollbarVisibility: standaloneEnums.ScrollbarVisibility,\n        ScrollType: standaloneEnums.ScrollType,\n        TextEditorCursorBlinkingStyle: standaloneEnums.TextEditorCursorBlinkingStyle,\n        TextEditorCursorStyle: standaloneEnums.TextEditorCursorStyle,\n        TrackedRangeStickiness: standaloneEnums.TrackedRangeStickiness,\n        WrappingIndent: standaloneEnums.WrappingIndent,\n        InjectedTextCursorStops: standaloneEnums.InjectedTextCursorStops,\n        PositionAffinity: standaloneEnums.PositionAffinity,\n        ShowLightbulbIconMode: standaloneEnums.ShowLightbulbIconMode,\n        // classes\n        ConfigurationChangedEvent: ConfigurationChangedEvent,\n        BareFontInfo: BareFontInfo,\n        FontInfo: FontInfo,\n        TextModelResolvedOptions: TextModelResolvedOptions,\n        FindMatch: FindMatch,\n        ApplyUpdateResult: ApplyUpdateResult,\n        EditorZoom: EditorZoom,\n        createMultiFileDiffEditor: createMultiFileDiffEditor,\n        // vars\n        EditorType: EditorType,\n        EditorOptions: EditorOptions\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/*\n * This module only exports 'compile' which compiles a JSON language definition\n * into a typed and checked ILexer definition.\n */\nimport * as monarchCommon from './monarchCommon.js';\n/*\n * Type helpers\n *\n * Note: this is just for sanity checks on the JSON description which is\n * helpful for the programmer. No checks are done anymore once the lexer is\n * already 'compiled and checked'.\n *\n */\nfunction isArrayOf(elemType, obj) {\n    if (!obj) {\n        return false;\n    }\n    if (!(Array.isArray(obj))) {\n        return false;\n    }\n    for (const el of obj) {\n        if (!(elemType(el))) {\n            return false;\n        }\n    }\n    return true;\n}\nfunction bool(prop, defValue) {\n    if (typeof prop === 'boolean') {\n        return prop;\n    }\n    return defValue;\n}\nfunction string(prop, defValue) {\n    if (typeof (prop) === 'string') {\n        return prop;\n    }\n    return defValue;\n}\nfunction arrayToHash(array) {\n    const result = {};\n    for (const e of array) {\n        result[e] = true;\n    }\n    return result;\n}\nfunction createKeywordMatcher(arr, caseInsensitive = false) {\n    if (caseInsensitive) {\n        arr = arr.map(function (x) { return x.toLowerCase(); });\n    }\n    const hash = arrayToHash(arr);\n    if (caseInsensitive) {\n        return function (word) {\n            return hash[word.toLowerCase()] !== undefined && hash.hasOwnProperty(word.toLowerCase());\n        };\n    }\n    else {\n        return function (word) {\n            return hash[word] !== undefined && hash.hasOwnProperty(word);\n        };\n    }\n}\nfunction compileRegExp(lexer, str, handleSn) {\n    // @@ must be interpreted as a literal @, so we replace all occurences of @@ with a placeholder character\n    str = str.replace(/@@/g, `\\x01`);\n    let n = 0;\n    let hadExpansion;\n    do {\n        hadExpansion = false;\n        str = str.replace(/@(\\w+)/g, function (s, attr) {\n            hadExpansion = true;\n            let sub = '';\n            if (typeof (lexer[attr]) === 'string') {\n                sub = lexer[attr];\n            }\n            else if (lexer[attr] && lexer[attr] instanceof RegExp) {\n                sub = lexer[attr].source;\n            }\n            else {\n                if (lexer[attr] === undefined) {\n                    throw monarchCommon.createError(lexer, 'language definition does not contain attribute \\'' + attr + '\\', used at: ' + str);\n                }\n                else {\n                    throw monarchCommon.createError(lexer, 'attribute reference \\'' + attr + '\\' must be a string, used at: ' + str);\n                }\n            }\n            return (monarchCommon.empty(sub) ? '' : '(?:' + sub + ')');\n        });\n        n++;\n    } while (hadExpansion && n < 5);\n    // handle escaped @@\n    str = str.replace(/\\x01/g, '@');\n    const flags = (lexer.ignoreCase ? 'i' : '') + (lexer.unicode ? 'u' : '');\n    // handle $Sn\n    if (handleSn) {\n        const match = str.match(/\\$[sS](\\d\\d?)/g);\n        if (match) {\n            let lastState = null;\n            let lastRegEx = null;\n            return (state) => {\n                if (lastRegEx && lastState === state) {\n                    return lastRegEx;\n                }\n                lastState = state;\n                lastRegEx = new RegExp(monarchCommon.substituteMatchesRe(lexer, str, state), flags);\n                return lastRegEx;\n            };\n        }\n    }\n    return new RegExp(str, flags);\n}\n/**\n * Compiles guard functions for case matches.\n * This compiles 'cases' attributes into efficient match functions.\n *\n */\nfunction selectScrutinee(id, matches, state, num) {\n    if (num < 0) {\n        return id;\n    }\n    if (num < matches.length) {\n        return matches[num];\n    }\n    if (num >= 100) {\n        num = num - 100;\n        const parts = state.split('.');\n        parts.unshift(state);\n        if (num < parts.length) {\n            return parts[num];\n        }\n    }\n    return null;\n}\nfunction createGuard(lexer, ruleName, tkey, val) {\n    // get the scrutinee and pattern\n    let scrut = -1; // -1: $!, 0-99: $n, 100+n: $Sn\n    let oppat = tkey;\n    let matches = tkey.match(/^\\$(([sS]?)(\\d\\d?)|#)(.*)$/);\n    if (matches) {\n        if (matches[3]) { // if digits\n            scrut = parseInt(matches[3]);\n            if (matches[2]) {\n                scrut = scrut + 100; // if [sS] present\n            }\n        }\n        oppat = matches[4];\n    }\n    // get operator\n    let op = '~';\n    let pat = oppat;\n    if (!oppat || oppat.length === 0) {\n        op = '!=';\n        pat = '';\n    }\n    else if (/^\\w*$/.test(pat)) { // just a word\n        op = '==';\n    }\n    else {\n        matches = oppat.match(/^(@|!@|~|!~|==|!=)(.*)$/);\n        if (matches) {\n            op = matches[1];\n            pat = matches[2];\n        }\n    }\n    // set the tester function\n    let tester;\n    // special case a regexp that matches just words\n    if ((op === '~' || op === '!~') && /^(\\w|\\|)*$/.test(pat)) {\n        const inWords = createKeywordMatcher(pat.split('|'), lexer.ignoreCase);\n        tester = function (s) { return (op === '~' ? inWords(s) : !inWords(s)); };\n    }\n    else if (op === '@' || op === '!@') {\n        const words = lexer[pat];\n        if (!words) {\n            throw monarchCommon.createError(lexer, 'the @ match target \\'' + pat + '\\' is not defined, in rule: ' + ruleName);\n        }\n        if (!(isArrayOf(function (elem) { return (typeof (elem) === 'string'); }, words))) {\n            throw monarchCommon.createError(lexer, 'the @ match target \\'' + pat + '\\' must be an array of strings, in rule: ' + ruleName);\n        }\n        const inWords = createKeywordMatcher(words, lexer.ignoreCase);\n        tester = function (s) { return (op === '@' ? inWords(s) : !inWords(s)); };\n    }\n    else if (op === '~' || op === '!~') {\n        if (pat.indexOf('$') < 0) {\n            // precompile regular expression\n            const re = compileRegExp(lexer, '^' + pat + '$', false);\n            tester = function (s) { return (op === '~' ? re.test(s) : !re.test(s)); };\n        }\n        else {\n            tester = function (s, id, matches, state) {\n                const re = compileRegExp(lexer, '^' + monarchCommon.substituteMatches(lexer, pat, id, matches, state) + '$', false);\n                return re.test(s);\n            };\n        }\n    }\n    else { // if (op==='==' || op==='!=') {\n        if (pat.indexOf('$') < 0) {\n            const patx = monarchCommon.fixCase(lexer, pat);\n            tester = function (s) { return (op === '==' ? s === patx : s !== patx); };\n        }\n        else {\n            const patx = monarchCommon.fixCase(lexer, pat);\n            tester = function (s, id, matches, state, eos) {\n                const patexp = monarchCommon.substituteMatches(lexer, patx, id, matches, state);\n                return (op === '==' ? s === patexp : s !== patexp);\n            };\n        }\n    }\n    // return the branch object\n    if (scrut === -1) {\n        return {\n            name: tkey, value: val, test: function (id, matches, state, eos) {\n                return tester(id, id, matches, state, eos);\n            }\n        };\n    }\n    else {\n        return {\n            name: tkey, value: val, test: function (id, matches, state, eos) {\n                const scrutinee = selectScrutinee(id, matches, state, scrut);\n                return tester(!scrutinee ? '' : scrutinee, id, matches, state, eos);\n            }\n        };\n    }\n}\n/**\n * Compiles an action: i.e. optimize regular expressions and case matches\n * and do many sanity checks.\n *\n * This is called only during compilation but if the lexer definition\n * contains user functions as actions (which is usually not allowed), then this\n * may be called during lexing. It is important therefore to compile common cases efficiently\n */\nfunction compileAction(lexer, ruleName, action) {\n    if (!action) {\n        return { token: '' };\n    }\n    else if (typeof (action) === 'string') {\n        return action; // { token: action };\n    }\n    else if (action.token || action.token === '') {\n        if (typeof (action.token) !== 'string') {\n            throw monarchCommon.createError(lexer, 'a \\'token\\' attribute must be of type string, in rule: ' + ruleName);\n        }\n        else {\n            // only copy specific typed fields (only happens once during compile Lexer)\n            const newAction = { token: action.token };\n            if (action.token.indexOf('$') >= 0) {\n                newAction.tokenSubst = true;\n            }\n            if (typeof (action.bracket) === 'string') {\n                if (action.bracket === '@open') {\n                    newAction.bracket = 1 /* monarchCommon.MonarchBracket.Open */;\n                }\n                else if (action.bracket === '@close') {\n                    newAction.bracket = -1 /* monarchCommon.MonarchBracket.Close */;\n                }\n                else {\n                    throw monarchCommon.createError(lexer, 'a \\'bracket\\' attribute must be either \\'@open\\' or \\'@close\\', in rule: ' + ruleName);\n                }\n            }\n            if (action.next) {\n                if (typeof (action.next) !== 'string') {\n                    throw monarchCommon.createError(lexer, 'the next state must be a string value in rule: ' + ruleName);\n                }\n                else {\n                    let next = action.next;\n                    if (!/^(@pop|@push|@popall)$/.test(next)) {\n                        if (next[0] === '@') {\n                            next = next.substr(1); // peel off starting @ sign\n                        }\n                        if (next.indexOf('$') < 0) { // no dollar substitution, we can check if the state exists\n                            if (!monarchCommon.stateExists(lexer, monarchCommon.substituteMatches(lexer, next, '', [], ''))) {\n                                throw monarchCommon.createError(lexer, 'the next state \\'' + action.next + '\\' is not defined in rule: ' + ruleName);\n                            }\n                        }\n                    }\n                    newAction.next = next;\n                }\n            }\n            if (typeof (action.goBack) === 'number') {\n                newAction.goBack = action.goBack;\n            }\n            if (typeof (action.switchTo) === 'string') {\n                newAction.switchTo = action.switchTo;\n            }\n            if (typeof (action.log) === 'string') {\n                newAction.log = action.log;\n            }\n            if (typeof (action.nextEmbedded) === 'string') {\n                newAction.nextEmbedded = action.nextEmbedded;\n                lexer.usesEmbedded = true;\n            }\n            return newAction;\n        }\n    }\n    else if (Array.isArray(action)) {\n        const results = [];\n        for (let i = 0, len = action.length; i < len; i++) {\n            results[i] = compileAction(lexer, ruleName, action[i]);\n        }\n        return { group: results };\n    }\n    else if (action.cases) {\n        // build an array of test cases\n        const cases = [];\n        // for each case, push a test function and result value\n        for (const tkey in action.cases) {\n            if (action.cases.hasOwnProperty(tkey)) {\n                const val = compileAction(lexer, ruleName, action.cases[tkey]);\n                // what kind of case\n                if (tkey === '@default' || tkey === '@' || tkey === '') {\n                    cases.push({ test: undefined, value: val, name: tkey });\n                }\n                else if (tkey === '@eos') {\n                    cases.push({ test: function (id, matches, state, eos) { return eos; }, value: val, name: tkey });\n                }\n                else {\n                    cases.push(createGuard(lexer, ruleName, tkey, val)); // call separate function to avoid local variable capture\n                }\n            }\n        }\n        // create a matching function\n        const def = lexer.defaultToken;\n        return {\n            test: function (id, matches, state, eos) {\n                for (const _case of cases) {\n                    const didmatch = (!_case.test || _case.test(id, matches, state, eos));\n                    if (didmatch) {\n                        return _case.value;\n                    }\n                }\n                return def;\n            }\n        };\n    }\n    else {\n        throw monarchCommon.createError(lexer, 'an action must be a string, an object with a \\'token\\' or \\'cases\\' attribute, or an array of actions; in rule: ' + ruleName);\n    }\n}\n/**\n * Helper class for creating matching rules\n */\nclass Rule {\n    constructor(name) {\n        this.regex = new RegExp('');\n        this.action = { token: '' };\n        this.matchOnlyAtLineStart = false;\n        this.name = '';\n        this.name = name;\n    }\n    setRegex(lexer, re) {\n        let sregex;\n        if (typeof (re) === 'string') {\n            sregex = re;\n        }\n        else if (re instanceof RegExp) {\n            sregex = re.source;\n        }\n        else {\n            throw monarchCommon.createError(lexer, 'rules must start with a match string or regular expression: ' + this.name);\n        }\n        this.matchOnlyAtLineStart = (sregex.length > 0 && sregex[0] === '^');\n        this.name = this.name + ': ' + sregex;\n        this.regex = compileRegExp(lexer, '^(?:' + (this.matchOnlyAtLineStart ? sregex.substr(1) : sregex) + ')', true);\n    }\n    setAction(lexer, act) {\n        this.action = compileAction(lexer, this.name, act);\n    }\n    resolveRegex(state) {\n        if (this.regex instanceof RegExp) {\n            return this.regex;\n        }\n        else {\n            return this.regex(state);\n        }\n    }\n}\n/**\n * Compiles a json description function into json where all regular expressions,\n * case matches etc, are compiled and all include rules are expanded.\n * We also compile the bracket definitions, supply defaults, and do many sanity checks.\n * If the 'jsonStrict' parameter is 'false', we allow at certain locations\n * regular expression objects and functions that get called during lexing.\n * (Currently we have no samples that need this so perhaps we should always have\n * jsonStrict to true).\n */\nexport function compile(languageId, json) {\n    if (!json || typeof (json) !== 'object') {\n        throw new Error('Monarch: expecting a language definition object');\n    }\n    // Create our lexer\n    const lexer = {};\n    lexer.languageId = languageId;\n    lexer.includeLF = bool(json.includeLF, false);\n    lexer.noThrow = false; // raise exceptions during compilation\n    lexer.maxStack = 100;\n    // Set standard fields: be defensive about types\n    lexer.start = (typeof json.start === 'string' ? json.start : null);\n    lexer.ignoreCase = bool(json.ignoreCase, false);\n    lexer.unicode = bool(json.unicode, false);\n    lexer.tokenPostfix = string(json.tokenPostfix, '.' + lexer.languageId);\n    lexer.defaultToken = string(json.defaultToken, 'source');\n    lexer.usesEmbedded = false; // becomes true if we find a nextEmbedded action\n    // For calling compileAction later on\n    const lexerMin = json;\n    lexerMin.languageId = languageId;\n    lexerMin.includeLF = lexer.includeLF;\n    lexerMin.ignoreCase = lexer.ignoreCase;\n    lexerMin.unicode = lexer.unicode;\n    lexerMin.noThrow = lexer.noThrow;\n    lexerMin.usesEmbedded = lexer.usesEmbedded;\n    lexerMin.stateNames = json.tokenizer;\n    lexerMin.defaultToken = lexer.defaultToken;\n    // Compile an array of rules into newrules where RegExp objects are created.\n    function addRules(state, newrules, rules) {\n        for (const rule of rules) {\n            let include = rule.include;\n            if (include) {\n                if (typeof (include) !== 'string') {\n                    throw monarchCommon.createError(lexer, 'an \\'include\\' attribute must be a string at: ' + state);\n                }\n                if (include[0] === '@') {\n                    include = include.substr(1); // peel off starting @\n                }\n                if (!json.tokenizer[include]) {\n                    throw monarchCommon.createError(lexer, 'include target \\'' + include + '\\' is not defined at: ' + state);\n                }\n                addRules(state + '.' + include, newrules, json.tokenizer[include]);\n            }\n            else {\n                const newrule = new Rule(state);\n                // Set up new rule attributes\n                if (Array.isArray(rule) && rule.length >= 1 && rule.length <= 3) {\n                    newrule.setRegex(lexerMin, rule[0]);\n                    if (rule.length >= 3) {\n                        if (typeof (rule[1]) === 'string') {\n                            newrule.setAction(lexerMin, { token: rule[1], next: rule[2] });\n                        }\n                        else if (typeof (rule[1]) === 'object') {\n                            const rule1 = rule[1];\n                            rule1.next = rule[2];\n                            newrule.setAction(lexerMin, rule1);\n                        }\n                        else {\n                            throw monarchCommon.createError(lexer, 'a next state as the last element of a rule can only be given if the action is either an object or a string, at: ' + state);\n                        }\n                    }\n                    else {\n                        newrule.setAction(lexerMin, rule[1]);\n                    }\n                }\n                else {\n                    if (!rule.regex) {\n                        throw monarchCommon.createError(lexer, 'a rule must either be an array, or an object with a \\'regex\\' or \\'include\\' field at: ' + state);\n                    }\n                    if (rule.name) {\n                        if (typeof rule.name === 'string') {\n                            newrule.name = rule.name;\n                        }\n                    }\n                    if (rule.matchOnlyAtStart) {\n                        newrule.matchOnlyAtLineStart = bool(rule.matchOnlyAtLineStart, false);\n                    }\n                    newrule.setRegex(lexerMin, rule.regex);\n                    newrule.setAction(lexerMin, rule.action);\n                }\n                newrules.push(newrule);\n            }\n        }\n    }\n    // compile the tokenizer rules\n    if (!json.tokenizer || typeof (json.tokenizer) !== 'object') {\n        throw monarchCommon.createError(lexer, 'a language definition must define the \\'tokenizer\\' attribute as an object');\n    }\n    lexer.tokenizer = [];\n    for (const key in json.tokenizer) {\n        if (json.tokenizer.hasOwnProperty(key)) {\n            if (!lexer.start) {\n                lexer.start = key;\n            }\n            const rules = json.tokenizer[key];\n            lexer.tokenizer[key] = new Array();\n            addRules('tokenizer.' + key, lexer.tokenizer[key], rules);\n        }\n    }\n    lexer.usesEmbedded = lexerMin.usesEmbedded; // can be set during compileAction\n    // Set simple brackets\n    if (json.brackets) {\n        if (!(Array.isArray(json.brackets))) {\n            throw monarchCommon.createError(lexer, 'the \\'brackets\\' attribute must be defined as an array');\n        }\n    }\n    else {\n        json.brackets = [\n            { open: '{', close: '}', token: 'delimiter.curly' },\n            { open: '[', close: ']', token: 'delimiter.square' },\n            { open: '(', close: ')', token: 'delimiter.parenthesis' },\n            { open: '<', close: '>', token: 'delimiter.angle' }\n        ];\n    }\n    const brackets = [];\n    for (const el of json.brackets) {\n        let desc = el;\n        if (desc && Array.isArray(desc) && desc.length === 3) {\n            desc = { token: desc[2], open: desc[0], close: desc[1] };\n        }\n        if (desc.open === desc.close) {\n            throw monarchCommon.createError(lexer, 'open and close brackets in a \\'brackets\\' attribute must be different: ' + desc.open +\n                '\\n hint: use the \\'bracket\\' attribute if matching on equal brackets is required.');\n        }\n        if (typeof desc.open === 'string' && typeof desc.token === 'string' && typeof desc.close === 'string') {\n            brackets.push({\n                token: desc.token + lexer.tokenPostfix,\n                open: monarchCommon.fixCase(lexer, desc.open),\n                close: monarchCommon.fixCase(lexer, desc.close)\n            });\n        }\n        else {\n            throw monarchCommon.createError(lexer, 'every element in the \\'brackets\\' array must be a \\'{open,close,token}\\' object or array');\n        }\n    }\n    lexer.brackets = brackets;\n    // Disable throw so the syntax highlighter goes, no matter what\n    lexer.noThrow = true;\n    return lexer;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Color } from '../../../base/common/color.js';\nimport { Range } from '../../common/core/range.js';\nimport * as languages from '../../common/languages.js';\nimport { ILanguageService } from '../../common/languages/language.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { ModesRegistry } from '../../common/languages/modesRegistry.js';\nimport { ILanguageFeaturesService } from '../../common/services/languageFeatures.js';\nimport * as standaloneEnums from '../../common/standalone/standaloneEnums.js';\nimport { StandaloneServices } from './standaloneServices.js';\nimport { compile } from '../common/monarch/monarchCompile.js';\nimport { MonarchTokenizer } from '../common/monarch/monarchLexer.js';\nimport { IStandaloneThemeService } from '../common/standaloneTheme.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\n/**\n * Register information about a new language.\n */\nexport function register(language) {\n    // Intentionally using the `ModesRegistry` here to avoid\n    // instantiating services too quickly in the standalone editor.\n    ModesRegistry.registerLanguage(language);\n}\n/**\n * Get the information of all the registered languages.\n */\nexport function getLanguages() {\n    let result = [];\n    result = result.concat(ModesRegistry.getLanguages());\n    return result;\n}\nexport function getEncodedLanguageId(languageId) {\n    const languageService = StandaloneServices.get(ILanguageService);\n    return languageService.languageIdCodec.encodeLanguageId(languageId);\n}\n/**\n * An event emitted when a language is associated for the first time with a text model.\n * @event\n */\nexport function onLanguage(languageId, callback) {\n    return StandaloneServices.withServices(() => {\n        const languageService = StandaloneServices.get(ILanguageService);\n        const disposable = languageService.onDidRequestRichLanguageFeatures((encounteredLanguageId) => {\n            if (encounteredLanguageId === languageId) {\n                // stop listening\n                disposable.dispose();\n                // invoke actual listener\n                callback();\n            }\n        });\n        return disposable;\n    });\n}\n/**\n * An event emitted when a language is associated for the first time with a text model or\n * when a language is encountered during the tokenization of another language.\n * @event\n */\nexport function onLanguageEncountered(languageId, callback) {\n    return StandaloneServices.withServices(() => {\n        const languageService = StandaloneServices.get(ILanguageService);\n        const disposable = languageService.onDidRequestBasicLanguageFeatures((encounteredLanguageId) => {\n            if (encounteredLanguageId === languageId) {\n                // stop listening\n                disposable.dispose();\n                // invoke actual listener\n                callback();\n            }\n        });\n        return disposable;\n    });\n}\n/**\n * Set the editing configuration for a language.\n */\nexport function setLanguageConfiguration(languageId, configuration) {\n    const languageService = StandaloneServices.get(ILanguageService);\n    if (!languageService.isRegisteredLanguageId(languageId)) {\n        throw new Error(`Cannot set configuration for unknown language ${languageId}`);\n    }\n    const languageConfigurationService = StandaloneServices.get(ILanguageConfigurationService);\n    return languageConfigurationService.register(languageId, configuration, 100);\n}\n/**\n * @internal\n */\nexport class EncodedTokenizationSupportAdapter {\n    constructor(languageId, actual) {\n        this._languageId = languageId;\n        this._actual = actual;\n    }\n    dispose() {\n        // NOOP\n    }\n    getInitialState() {\n        return this._actual.getInitialState();\n    }\n    tokenize(line, hasEOL, state) {\n        if (typeof this._actual.tokenize === 'function') {\n            return TokenizationSupportAdapter.adaptTokenize(this._languageId, this._actual, line, state);\n        }\n        throw new Error('Not supported!');\n    }\n    tokenizeEncoded(line, hasEOL, state) {\n        const result = this._actual.tokenizeEncoded(line, state);\n        return new languages.EncodedTokenizationResult(result.tokens, result.endState);\n    }\n}\n/**\n * @internal\n */\nexport class TokenizationSupportAdapter {\n    constructor(_languageId, _actual, _languageService, _standaloneThemeService) {\n        this._languageId = _languageId;\n        this._actual = _actual;\n        this._languageService = _languageService;\n        this._standaloneThemeService = _standaloneThemeService;\n    }\n    dispose() {\n        // NOOP\n    }\n    getInitialState() {\n        return this._actual.getInitialState();\n    }\n    static _toClassicTokens(tokens, language) {\n        const result = [];\n        let previousStartIndex = 0;\n        for (let i = 0, len = tokens.length; i < len; i++) {\n            const t = tokens[i];\n            let startIndex = t.startIndex;\n            // Prevent issues stemming from a buggy external tokenizer.\n            if (i === 0) {\n                // Force first token to start at first index!\n                startIndex = 0;\n            }\n            else if (startIndex < previousStartIndex) {\n                // Force tokens to be after one another!\n                startIndex = previousStartIndex;\n            }\n            result[i] = new languages.Token(startIndex, t.scopes, language);\n            previousStartIndex = startIndex;\n        }\n        return result;\n    }\n    static adaptTokenize(language, actual, line, state) {\n        const actualResult = actual.tokenize(line, state);\n        const tokens = TokenizationSupportAdapter._toClassicTokens(actualResult.tokens, language);\n        let endState;\n        // try to save an object if possible\n        if (actualResult.endState.equals(state)) {\n            endState = state;\n        }\n        else {\n            endState = actualResult.endState;\n        }\n        return new languages.TokenizationResult(tokens, endState);\n    }\n    tokenize(line, hasEOL, state) {\n        return TokenizationSupportAdapter.adaptTokenize(this._languageId, this._actual, line, state);\n    }\n    _toBinaryTokens(languageIdCodec, tokens) {\n        const languageId = languageIdCodec.encodeLanguageId(this._languageId);\n        const tokenTheme = this._standaloneThemeService.getColorTheme().tokenTheme;\n        const result = [];\n        let resultLen = 0;\n        let previousStartIndex = 0;\n        for (let i = 0, len = tokens.length; i < len; i++) {\n            const t = tokens[i];\n            const metadata = tokenTheme.match(languageId, t.scopes) | 1024 /* MetadataConsts.BALANCED_BRACKETS_MASK */;\n            if (resultLen > 0 && result[resultLen - 1] === metadata) {\n                // same metadata\n                continue;\n            }\n            let startIndex = t.startIndex;\n            // Prevent issues stemming from a buggy external tokenizer.\n            if (i === 0) {\n                // Force first token to start at first index!\n                startIndex = 0;\n            }\n            else if (startIndex < previousStartIndex) {\n                // Force tokens to be after one another!\n                startIndex = previousStartIndex;\n            }\n            result[resultLen++] = startIndex;\n            result[resultLen++] = metadata;\n            previousStartIndex = startIndex;\n        }\n        const actualResult = new Uint32Array(resultLen);\n        for (let i = 0; i < resultLen; i++) {\n            actualResult[i] = result[i];\n        }\n        return actualResult;\n    }\n    tokenizeEncoded(line, hasEOL, state) {\n        const actualResult = this._actual.tokenize(line, state);\n        const tokens = this._toBinaryTokens(this._languageService.languageIdCodec, actualResult.tokens);\n        let endState;\n        // try to save an object if possible\n        if (actualResult.endState.equals(state)) {\n            endState = state;\n        }\n        else {\n            endState = actualResult.endState;\n        }\n        return new languages.EncodedTokenizationResult(tokens, endState);\n    }\n}\nfunction isATokensProvider(provider) {\n    return (typeof provider.getInitialState === 'function');\n}\nfunction isEncodedTokensProvider(provider) {\n    return 'tokenizeEncoded' in provider;\n}\nfunction isThenable(obj) {\n    return obj && typeof obj.then === 'function';\n}\n/**\n * Change the color map that is used for token colors.\n * Supported formats (hex): #RRGGBB, $RRGGBBAA, #RGB, #RGBA\n */\nexport function setColorMap(colorMap) {\n    const standaloneThemeService = StandaloneServices.get(IStandaloneThemeService);\n    if (colorMap) {\n        const result = [null];\n        for (let i = 1, len = colorMap.length; i < len; i++) {\n            result[i] = Color.fromHex(colorMap[i]);\n        }\n        standaloneThemeService.setColorMapOverride(result);\n    }\n    else {\n        standaloneThemeService.setColorMapOverride(null);\n    }\n}\n/**\n * @internal\n */\nfunction createTokenizationSupportAdapter(languageId, provider) {\n    if (isEncodedTokensProvider(provider)) {\n        return new EncodedTokenizationSupportAdapter(languageId, provider);\n    }\n    else {\n        return new TokenizationSupportAdapter(languageId, provider, StandaloneServices.get(ILanguageService), StandaloneServices.get(IStandaloneThemeService));\n    }\n}\n/**\n * Register a tokens provider factory for a language. This tokenizer will be exclusive with a tokenizer\n * set using `setTokensProvider` or one created using `setMonarchTokensProvider`, but will work together\n * with a tokens provider set using `registerDocumentSemanticTokensProvider` or `registerDocumentRangeSemanticTokensProvider`.\n */\nexport function registerTokensProviderFactory(languageId, factory) {\n    const adaptedFactory = new languages.LazyTokenizationSupport(async () => {\n        const result = await Promise.resolve(factory.create());\n        if (!result) {\n            return null;\n        }\n        if (isATokensProvider(result)) {\n            return createTokenizationSupportAdapter(languageId, result);\n        }\n        return new MonarchTokenizer(StandaloneServices.get(ILanguageService), StandaloneServices.get(IStandaloneThemeService), languageId, compile(languageId, result), StandaloneServices.get(IConfigurationService));\n    });\n    return languages.TokenizationRegistry.registerFactory(languageId, adaptedFactory);\n}\n/**\n * Set the tokens provider for a language (manual implementation). This tokenizer will be exclusive\n * with a tokenizer created using `setMonarchTokensProvider`, or with `registerTokensProviderFactory`,\n * but will work together with a tokens provider set using `registerDocumentSemanticTokensProvider`\n * or `registerDocumentRangeSemanticTokensProvider`.\n */\nexport function setTokensProvider(languageId, provider) {\n    const languageService = StandaloneServices.get(ILanguageService);\n    if (!languageService.isRegisteredLanguageId(languageId)) {\n        throw new Error(`Cannot set tokens provider for unknown language ${languageId}`);\n    }\n    if (isThenable(provider)) {\n        return registerTokensProviderFactory(languageId, { create: () => provider });\n    }\n    return languages.TokenizationRegistry.register(languageId, createTokenizationSupportAdapter(languageId, provider));\n}\n/**\n * Set the tokens provider for a language (monarch implementation). This tokenizer will be exclusive\n * with a tokenizer set using `setTokensProvider`, or with `registerTokensProviderFactory`, but will\n * work together with a tokens provider set using `registerDocumentSemanticTokensProvider` or\n * `registerDocumentRangeSemanticTokensProvider`.\n */\nexport function setMonarchTokensProvider(languageId, languageDef) {\n    const create = (languageDef) => {\n        return new MonarchTokenizer(StandaloneServices.get(ILanguageService), StandaloneServices.get(IStandaloneThemeService), languageId, compile(languageId, languageDef), StandaloneServices.get(IConfigurationService));\n    };\n    if (isThenable(languageDef)) {\n        return registerTokensProviderFactory(languageId, { create: () => languageDef });\n    }\n    return languages.TokenizationRegistry.register(languageId, create(languageDef));\n}\n/**\n * Register a reference provider (used by e.g. reference search).\n */\nexport function registerReferenceProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.referenceProvider.register(languageSelector, provider);\n}\n/**\n * Register a rename provider (used by e.g. rename symbol).\n */\nexport function registerRenameProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.renameProvider.register(languageSelector, provider);\n}\n/**\n * Register a new symbol-name provider (e.g., when a symbol is being renamed, show new possible symbol-names)\n */\nexport function registerNewSymbolNameProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.newSymbolNamesProvider.register(languageSelector, provider);\n}\n/**\n * Register a signature help provider (used by e.g. parameter hints).\n */\nexport function registerSignatureHelpProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.signatureHelpProvider.register(languageSelector, provider);\n}\n/**\n * Register a hover provider (used by e.g. editor hover).\n */\nexport function registerHoverProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.hoverProvider.register(languageSelector, {\n        provideHover: async (model, position, token, context) => {\n            const word = model.getWordAtPosition(position);\n            return Promise.resolve(provider.provideHover(model, position, token, context)).then((value) => {\n                if (!value) {\n                    return undefined;\n                }\n                if (!value.range && word) {\n                    value.range = new Range(position.lineNumber, word.startColumn, position.lineNumber, word.endColumn);\n                }\n                if (!value.range) {\n                    value.range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n                }\n                return value;\n            });\n        }\n    });\n}\n/**\n * Register a document symbol provider (used by e.g. outline).\n */\nexport function registerDocumentSymbolProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.documentSymbolProvider.register(languageSelector, provider);\n}\n/**\n * Register a document highlight provider (used by e.g. highlight occurrences).\n */\nexport function registerDocumentHighlightProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.documentHighlightProvider.register(languageSelector, provider);\n}\n/**\n * Register an linked editing range provider.\n */\nexport function registerLinkedEditingRangeProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.linkedEditingRangeProvider.register(languageSelector, provider);\n}\n/**\n * Register a definition provider (used by e.g. go to definition).\n */\nexport function registerDefinitionProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.definitionProvider.register(languageSelector, provider);\n}\n/**\n * Register a implementation provider (used by e.g. go to implementation).\n */\nexport function registerImplementationProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.implementationProvider.register(languageSelector, provider);\n}\n/**\n * Register a type definition provider (used by e.g. go to type definition).\n */\nexport function registerTypeDefinitionProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.typeDefinitionProvider.register(languageSelector, provider);\n}\n/**\n * Register a code lens provider (used by e.g. inline code lenses).\n */\nexport function registerCodeLensProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.codeLensProvider.register(languageSelector, provider);\n}\n/**\n * Register a code action provider (used by e.g. quick fix).\n */\nexport function registerCodeActionProvider(languageSelector, provider, metadata) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.codeActionProvider.register(languageSelector, {\n        providedCodeActionKinds: metadata === null || metadata === void 0 ? void 0 : metadata.providedCodeActionKinds,\n        documentation: metadata === null || metadata === void 0 ? void 0 : metadata.documentation,\n        provideCodeActions: (model, range, context, token) => {\n            const markerService = StandaloneServices.get(IMarkerService);\n            const markers = markerService.read({ resource: model.uri }).filter(m => {\n                return Range.areIntersectingOrTouching(m, range);\n            });\n            return provider.provideCodeActions(model, range, { markers, only: context.only, trigger: context.trigger }, token);\n        },\n        resolveCodeAction: provider.resolveCodeAction\n    });\n}\n/**\n * Register a formatter that can handle only entire models.\n */\nexport function registerDocumentFormattingEditProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.documentFormattingEditProvider.register(languageSelector, provider);\n}\n/**\n * Register a formatter that can handle a range inside a model.\n */\nexport function registerDocumentRangeFormattingEditProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.documentRangeFormattingEditProvider.register(languageSelector, provider);\n}\n/**\n * Register a formatter than can do formatting as the user types.\n */\nexport function registerOnTypeFormattingEditProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.onTypeFormattingEditProvider.register(languageSelector, provider);\n}\n/**\n * Register a link provider that can find links in text.\n */\nexport function registerLinkProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.linkProvider.register(languageSelector, provider);\n}\n/**\n * Register a completion item provider (use by e.g. suggestions).\n */\nexport function registerCompletionItemProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.completionProvider.register(languageSelector, provider);\n}\n/**\n * Register a document color provider (used by Color Picker, Color Decorator).\n */\nexport function registerColorProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.colorProvider.register(languageSelector, provider);\n}\n/**\n * Register a folding range provider\n */\nexport function registerFoldingRangeProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.foldingRangeProvider.register(languageSelector, provider);\n}\n/**\n * Register a declaration provider\n */\nexport function registerDeclarationProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.declarationProvider.register(languageSelector, provider);\n}\n/**\n * Register a selection range provider\n */\nexport function registerSelectionRangeProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.selectionRangeProvider.register(languageSelector, provider);\n}\n/**\n * Register a document semantic tokens provider. A semantic tokens provider will complement and enhance a\n * simple top-down tokenizer. Simple top-down tokenizers can be set either via `setMonarchTokensProvider`\n * or `setTokensProvider`.\n *\n * For the best user experience, register both a semantic tokens provider and a top-down tokenizer.\n */\nexport function registerDocumentSemanticTokensProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.documentSemanticTokensProvider.register(languageSelector, provider);\n}\n/**\n * Register a document range semantic tokens provider. A semantic tokens provider will complement and enhance a\n * simple top-down tokenizer. Simple top-down tokenizers can be set either via `setMonarchTokensProvider`\n * or `setTokensProvider`.\n *\n * For the best user experience, register both a semantic tokens provider and a top-down tokenizer.\n */\nexport function registerDocumentRangeSemanticTokensProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.documentRangeSemanticTokensProvider.register(languageSelector, provider);\n}\n/**\n * Register an inline completions provider.\n */\nexport function registerInlineCompletionsProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.inlineCompletionsProvider.register(languageSelector, provider);\n}\nexport function registerInlineEditProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.inlineEditProvider.register(languageSelector, provider);\n}\n/**\n * Register an inlay hints provider.\n */\nexport function registerInlayHintsProvider(languageSelector, provider) {\n    const languageFeaturesService = StandaloneServices.get(ILanguageFeaturesService);\n    return languageFeaturesService.inlayHintsProvider.register(languageSelector, provider);\n}\n/**\n * @internal\n */\nexport function createMonacoLanguagesAPI() {\n    return {\n        register: register,\n        getLanguages: getLanguages,\n        onLanguage: onLanguage,\n        onLanguageEncountered: onLanguageEncountered,\n        getEncodedLanguageId: getEncodedLanguageId,\n        // provider methods\n        setLanguageConfiguration: setLanguageConfiguration,\n        setColorMap: setColorMap,\n        registerTokensProviderFactory: registerTokensProviderFactory,\n        setTokensProvider: setTokensProvider,\n        setMonarchTokensProvider: setMonarchTokensProvider,\n        registerReferenceProvider: registerReferenceProvider,\n        registerRenameProvider: registerRenameProvider,\n        registerNewSymbolNameProvider: registerNewSymbolNameProvider,\n        registerCompletionItemProvider: registerCompletionItemProvider,\n        registerSignatureHelpProvider: registerSignatureHelpProvider,\n        registerHoverProvider: registerHoverProvider,\n        registerDocumentSymbolProvider: registerDocumentSymbolProvider,\n        registerDocumentHighlightProvider: registerDocumentHighlightProvider,\n        registerLinkedEditingRangeProvider: registerLinkedEditingRangeProvider,\n        registerDefinitionProvider: registerDefinitionProvider,\n        registerImplementationProvider: registerImplementationProvider,\n        registerTypeDefinitionProvider: registerTypeDefinitionProvider,\n        registerCodeLensProvider: registerCodeLensProvider,\n        registerCodeActionProvider: registerCodeActionProvider,\n        registerDocumentFormattingEditProvider: registerDocumentFormattingEditProvider,\n        registerDocumentRangeFormattingEditProvider: registerDocumentRangeFormattingEditProvider,\n        registerOnTypeFormattingEditProvider: registerOnTypeFormattingEditProvider,\n        registerLinkProvider: registerLinkProvider,\n        registerColorProvider: registerColorProvider,\n        registerFoldingRangeProvider: registerFoldingRangeProvider,\n        registerDeclarationProvider: registerDeclarationProvider,\n        registerSelectionRangeProvider: registerSelectionRangeProvider,\n        registerDocumentSemanticTokensProvider: registerDocumentSemanticTokensProvider,\n        registerDocumentRangeSemanticTokensProvider: registerDocumentRangeSemanticTokensProvider,\n        registerInlineCompletionsProvider: registerInlineCompletionsProvider,\n        registerInlineEditProvider: registerInlineEditProvider,\n        registerInlayHintsProvider: registerInlayHintsProvider,\n        // enums\n        DocumentHighlightKind: standaloneEnums.DocumentHighlightKind,\n        CompletionItemKind: standaloneEnums.CompletionItemKind,\n        CompletionItemTag: standaloneEnums.CompletionItemTag,\n        CompletionItemInsertTextRule: standaloneEnums.CompletionItemInsertTextRule,\n        SymbolKind: standaloneEnums.SymbolKind,\n        SymbolTag: standaloneEnums.SymbolTag,\n        IndentAction: standaloneEnums.IndentAction,\n        CompletionTriggerKind: standaloneEnums.CompletionTriggerKind,\n        SignatureHelpTriggerKind: standaloneEnums.SignatureHelpTriggerKind,\n        InlayHintKind: standaloneEnums.InlayHintKind,\n        InlineCompletionTriggerKind: standaloneEnums.InlineCompletionTriggerKind,\n        InlineEditTriggerKind: standaloneEnums.InlineEditTriggerKind,\n        CodeActionTriggerType: standaloneEnums.CodeActionTriggerType,\n        NewSymbolNameTag: standaloneEnums.NewSymbolNameTag,\n        NewSymbolNameTriggerKind: standaloneEnums.NewSymbolNameTriggerKind,\n        PartialAcceptTriggerKind: standaloneEnums.PartialAcceptTriggerKind,\n        HoverVerbosityAction: standaloneEnums.HoverVerbosityAction,\n        // classes\n        FoldingRangeKind: languages.FoldingRangeKind,\n        SelectedSuggestionInfo: languages.SelectedSuggestionInfo,\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../base/browser/dom.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { coalesce, firstOrDefault } from '../../../base/common/arrays.js';\nimport { Event } from '../../../base/common/event.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { ILayoutService } from '../../../platform/layout/browser/layoutService.js';\nlet StandaloneLayoutService = class StandaloneLayoutService {\n    get mainContainer() {\n        var _a, _b;\n        return (_b = (_a = firstOrDefault(this._codeEditorService.listCodeEditors())) === null || _a === void 0 ? void 0 : _a.getContainerDomNode()) !== null && _b !== void 0 ? _b : mainWindow.document.body;\n    }\n    get activeContainer() {\n        var _a, _b;\n        const activeCodeEditor = (_a = this._codeEditorService.getFocusedCodeEditor()) !== null && _a !== void 0 ? _a : this._codeEditorService.getActiveCodeEditor();\n        return (_b = activeCodeEditor === null || activeCodeEditor === void 0 ? void 0 : activeCodeEditor.getContainerDomNode()) !== null && _b !== void 0 ? _b : this.mainContainer;\n    }\n    get mainContainerDimension() {\n        return dom.getClientArea(this.mainContainer);\n    }\n    get activeContainerDimension() {\n        return dom.getClientArea(this.activeContainer);\n    }\n    get containers() {\n        return coalesce(this._codeEditorService.listCodeEditors().map(codeEditor => codeEditor.getContainerDomNode()));\n    }\n    getContainer() {\n        return this.activeContainer;\n    }\n    whenContainerStylesLoaded() { return undefined; }\n    focus() {\n        var _a;\n        (_a = this._codeEditorService.getFocusedCodeEditor()) === null || _a === void 0 ? void 0 : _a.focus();\n    }\n    constructor(_codeEditorService) {\n        this._codeEditorService = _codeEditorService;\n        this.onDidLayoutMainContainer = Event.None;\n        this.onDidLayoutActiveContainer = Event.None;\n        this.onDidLayoutContainer = Event.None;\n        this.onDidChangeActiveContainer = Event.None;\n        this.onDidAddContainer = Event.None;\n        this.mainContainerOffset = { top: 0, quickPickTop: 0 };\n        this.activeContainerOffset = { top: 0, quickPickTop: 0 };\n    }\n};\nStandaloneLayoutService = __decorate([\n    __param(0, ICodeEditorService)\n], StandaloneLayoutService);\nlet EditorScopedLayoutService = class EditorScopedLayoutService extends StandaloneLayoutService {\n    get mainContainer() {\n        return this._container;\n    }\n    constructor(_container, codeEditorService) {\n        super(codeEditorService);\n        this._container = _container;\n    }\n};\nEditorScopedLayoutService = __decorate([\n    __param(1, ICodeEditorService)\n], EditorScopedLayoutService);\nexport { EditorScopedLayoutService };\nregisterSingleton(ILayoutService, StandaloneLayoutService, 1 /* InstantiationType.Delayed */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport '../../common/languages/languageConfigurationRegistry.js';\nimport './standaloneCodeEditorService.js';\nimport './standaloneLayoutService.js';\nimport '../../../platform/undoRedo/common/undoRedoService.js';\nimport '../../common/services/languageFeatureDebounce.js';\nimport '../../common/services/semanticTokensStylingService.js';\nimport '../../common/services/languageFeaturesService.js';\nimport '../../browser/services/hoverService/hoverService.js';\nimport * as strings from '../../../base/common/strings.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { StandardKeyboardEvent } from '../../../base/browser/keyboardEvent.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { KeyCodeChord, decodeKeybinding } from '../../../base/common/keybindings.js';\nimport { ImmortalReference, toDisposable, DisposableStore, Disposable, combinedDisposable } from '../../../base/common/lifecycle.js';\nimport { OS, isLinux, isMacintosh } from '../../../base/common/platform.js';\nimport Severity from '../../../base/common/severity.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { IBulkEditService, ResourceEdit, ResourceTextEdit } from '../../browser/services/bulkEditService.js';\nimport { isDiffEditorConfigurationKey, isEditorConfigurationKey } from '../../common/config/editorConfigurationSchema.js';\nimport { EditOperation } from '../../common/core/editOperation.js';\nimport { Position as Pos } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { IModelService } from '../../common/services/model.js';\nimport { ITextModelService } from '../../common/services/resolverService.js';\nimport { ITextResourceConfigurationService, ITextResourcePropertiesService } from '../../common/services/textResourceConfiguration.js';\nimport { CommandsRegistry, ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IConfigurationService } from '../../../platform/configuration/common/configuration.js';\nimport { Configuration, ConfigurationModel, ConfigurationChangeEvent } from '../../../platform/configuration/common/configurationModels.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IDialogService } from '../../../platform/dialogs/common/dialogs.js';\nimport { createDecorator, IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { AbstractKeybindingService } from '../../../platform/keybinding/common/abstractKeybindingService.js';\nimport { IKeybindingService } from '../../../platform/keybinding/common/keybinding.js';\nimport { KeybindingResolver } from '../../../platform/keybinding/common/keybindingResolver.js';\nimport { KeybindingsRegistry } from '../../../platform/keybinding/common/keybindingsRegistry.js';\nimport { ResolvedKeybindingItem } from '../../../platform/keybinding/common/resolvedKeybindingItem.js';\nimport { USLayoutResolvedKeybinding } from '../../../platform/keybinding/common/usLayoutResolvedKeybinding.js';\nimport { ILabelService } from '../../../platform/label/common/label.js';\nimport { INotificationService, NoOpNotification } from '../../../platform/notification/common/notification.js';\nimport { IEditorProgressService, IProgressService } from '../../../platform/progress/common/progress.js';\nimport { ITelemetryService } from '../../../platform/telemetry/common/telemetry.js';\nimport { IWorkspaceContextService, WorkspaceFolder, STANDALONE_EDITOR_WORKSPACE_ID } from '../../../platform/workspace/common/workspace.js';\nimport { ILayoutService } from '../../../platform/layout/browser/layoutService.js';\nimport { StandaloneServicesNLS } from '../../common/standaloneStrings.js';\nimport { basename } from '../../../base/common/resources.js';\nimport { ICodeEditorService } from '../../browser/services/codeEditorService.js';\nimport { ConsoleLogger, ILogService } from '../../../platform/log/common/log.js';\nimport { IWorkspaceTrustManagementService } from '../../../platform/workspace/common/workspaceTrust.js';\nimport { IContextMenuService, IContextViewService } from '../../../platform/contextview/browser/contextView.js';\nimport { ContextViewService } from '../../../platform/contextview/browser/contextViewService.js';\nimport { LanguageService } from '../../common/services/languageService.js';\nimport { ContextMenuService } from '../../../platform/contextview/browser/contextMenuService.js';\nimport { getSingletonServiceDescriptors, registerSingleton } from '../../../platform/instantiation/common/extensions.js';\nimport { OpenerService } from '../../browser/services/openerService.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorker.js';\nimport { EditorWorkerService } from '../../browser/services/editorWorkerService.js';\nimport { ILanguageService } from '../../common/languages/language.js';\nimport { MarkerDecorationsService } from '../../common/services/markerDecorationsService.js';\nimport { IMarkerDecorationsService } from '../../common/services/markerDecorations.js';\nimport { ModelService } from '../../common/services/modelService.js';\nimport { StandaloneQuickInputService } from './quickInput/standaloneQuickInputService.js';\nimport { StandaloneThemeService } from './standaloneThemeService.js';\nimport { IStandaloneThemeService } from '../common/standaloneTheme.js';\nimport { AccessibilityService } from '../../../platform/accessibility/browser/accessibilityService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { IMenuService } from '../../../platform/actions/common/actions.js';\nimport { MenuService } from '../../../platform/actions/common/menuService.js';\nimport { BrowserClipboardService } from '../../../platform/clipboard/browser/clipboardService.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyService } from '../../../platform/contextkey/browser/contextKeyService.js';\nimport { SyncDescriptor } from '../../../platform/instantiation/common/descriptors.js';\nimport { InstantiationService } from '../../../platform/instantiation/common/instantiationService.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { IListService, ListService } from '../../../platform/list/browser/listService.js';\nimport { IMarkerService } from '../../../platform/markers/common/markers.js';\nimport { MarkerService } from '../../../platform/markers/common/markerService.js';\nimport { IOpenerService } from '../../../platform/opener/common/opener.js';\nimport { IQuickInputService } from '../../../platform/quickinput/common/quickInput.js';\nimport { IStorageService, InMemoryStorageService } from '../../../platform/storage/common/storage.js';\nimport { DefaultConfiguration } from '../../../platform/configuration/common/configurations.js';\nimport { IAccessibilitySignalService } from '../../../platform/accessibilitySignal/browser/accessibilitySignalService.js';\nimport { LogService } from '../../../platform/log/common/logService.js';\nimport { getEditorFeatures } from '../../common/editorFeatures.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { IEnvironmentService } from '../../../platform/environment/common/environment.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nimport { ResourceMap } from '../../../base/common/map.js';\nclass SimpleModel {\n    constructor(model) {\n        this.disposed = false;\n        this.model = model;\n        this._onWillDispose = new Emitter();\n    }\n    get textEditorModel() {\n        return this.model;\n    }\n    dispose() {\n        this.disposed = true;\n        this._onWillDispose.fire();\n    }\n}\nlet StandaloneTextModelService = class StandaloneTextModelService {\n    constructor(modelService) {\n        this.modelService = modelService;\n    }\n    createModelReference(resource) {\n        const model = this.modelService.getModel(resource);\n        if (!model) {\n            return Promise.reject(new Error(`Model not found`));\n        }\n        return Promise.resolve(new ImmortalReference(new SimpleModel(model)));\n    }\n};\nStandaloneTextModelService = __decorate([\n    __param(0, IModelService)\n], StandaloneTextModelService);\nclass StandaloneEditorProgressService {\n    show() {\n        return StandaloneEditorProgressService.NULL_PROGRESS_RUNNER;\n    }\n    async showWhile(promise, delay) {\n        await promise;\n    }\n}\nStandaloneEditorProgressService.NULL_PROGRESS_RUNNER = {\n    done: () => { },\n    total: () => { },\n    worked: () => { }\n};\nclass StandaloneProgressService {\n    withProgress(_options, task, onDidCancel) {\n        return task({\n            report: () => { },\n        });\n    }\n}\nclass StandaloneEnvironmentService {\n    constructor() {\n        this.isExtensionDevelopment = false;\n        this.isBuilt = false;\n    }\n}\nclass StandaloneDialogService {\n    async confirm(confirmation) {\n        const confirmed = this.doConfirm(confirmation.message, confirmation.detail);\n        return {\n            confirmed,\n            checkboxChecked: false // unsupported\n        };\n    }\n    doConfirm(message, detail) {\n        let messageText = message;\n        if (detail) {\n            messageText = messageText + '\\n\\n' + detail;\n        }\n        return mainWindow.confirm(messageText);\n    }\n    async prompt(prompt) {\n        var _a, _b;\n        let result = undefined;\n        const confirmed = this.doConfirm(prompt.message, prompt.detail);\n        if (confirmed) {\n            const promptButtons = [...((_a = prompt.buttons) !== null && _a !== void 0 ? _a : [])];\n            if (prompt.cancelButton && typeof prompt.cancelButton !== 'string' && typeof prompt.cancelButton !== 'boolean') {\n                promptButtons.push(prompt.cancelButton);\n            }\n            result = await ((_b = promptButtons[0]) === null || _b === void 0 ? void 0 : _b.run({ checkboxChecked: false }));\n        }\n        return { result };\n    }\n    async error(message, detail) {\n        await this.prompt({ type: Severity.Error, message, detail });\n    }\n}\nexport class StandaloneNotificationService {\n    info(message) {\n        return this.notify({ severity: Severity.Info, message });\n    }\n    warn(message) {\n        return this.notify({ severity: Severity.Warning, message });\n    }\n    error(error) {\n        return this.notify({ severity: Severity.Error, message: error });\n    }\n    notify(notification) {\n        switch (notification.severity) {\n            case Severity.Error:\n                console.error(notification.message);\n                break;\n            case Severity.Warning:\n                console.warn(notification.message);\n                break;\n            default:\n                console.log(notification.message);\n                break;\n        }\n        return StandaloneNotificationService.NO_OP;\n    }\n    prompt(severity, message, choices, options) {\n        return StandaloneNotificationService.NO_OP;\n    }\n    status(message, options) {\n        return Disposable.None;\n    }\n}\nStandaloneNotificationService.NO_OP = new NoOpNotification();\nlet StandaloneCommandService = class StandaloneCommandService {\n    constructor(instantiationService) {\n        this._onWillExecuteCommand = new Emitter();\n        this._onDidExecuteCommand = new Emitter();\n        this.onDidExecuteCommand = this._onDidExecuteCommand.event;\n        this._instantiationService = instantiationService;\n    }\n    executeCommand(id, ...args) {\n        const command = CommandsRegistry.getCommand(id);\n        if (!command) {\n            return Promise.reject(new Error(`command '${id}' not found`));\n        }\n        try {\n            this._onWillExecuteCommand.fire({ commandId: id, args });\n            const result = this._instantiationService.invokeFunction.apply(this._instantiationService, [command.handler, ...args]);\n            this._onDidExecuteCommand.fire({ commandId: id, args });\n            return Promise.resolve(result);\n        }\n        catch (err) {\n            return Promise.reject(err);\n        }\n    }\n};\nStandaloneCommandService = __decorate([\n    __param(0, IInstantiationService)\n], StandaloneCommandService);\nexport { StandaloneCommandService };\nlet StandaloneKeybindingService = class StandaloneKeybindingService extends AbstractKeybindingService {\n    constructor(contextKeyService, commandService, telemetryService, notificationService, logService, codeEditorService) {\n        super(contextKeyService, commandService, telemetryService, notificationService, logService);\n        this._cachedResolver = null;\n        this._dynamicKeybindings = [];\n        this._domNodeListeners = [];\n        const addContainer = (domNode) => {\n            const disposables = new DisposableStore();\n            // for standard keybindings\n            disposables.add(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, (e) => {\n                const keyEvent = new StandardKeyboardEvent(e);\n                const shouldPreventDefault = this._dispatch(keyEvent, keyEvent.target);\n                if (shouldPreventDefault) {\n                    keyEvent.preventDefault();\n                    keyEvent.stopPropagation();\n                }\n            }));\n            // for single modifier chord keybindings (e.g. shift shift)\n            disposables.add(dom.addDisposableListener(domNode, dom.EventType.KEY_UP, (e) => {\n                const keyEvent = new StandardKeyboardEvent(e);\n                const shouldPreventDefault = this._singleModifierDispatch(keyEvent, keyEvent.target);\n                if (shouldPreventDefault) {\n                    keyEvent.preventDefault();\n                }\n            }));\n            this._domNodeListeners.push(new DomNodeListeners(domNode, disposables));\n        };\n        const removeContainer = (domNode) => {\n            for (let i = 0; i < this._domNodeListeners.length; i++) {\n                const domNodeListeners = this._domNodeListeners[i];\n                if (domNodeListeners.domNode === domNode) {\n                    this._domNodeListeners.splice(i, 1);\n                    domNodeListeners.dispose();\n                }\n            }\n        };\n        const addCodeEditor = (codeEditor) => {\n            if (codeEditor.getOption(61 /* EditorOption.inDiffEditor */)) {\n                return;\n            }\n            addContainer(codeEditor.getContainerDomNode());\n        };\n        const removeCodeEditor = (codeEditor) => {\n            if (codeEditor.getOption(61 /* EditorOption.inDiffEditor */)) {\n                return;\n            }\n            removeContainer(codeEditor.getContainerDomNode());\n        };\n        this._register(codeEditorService.onCodeEditorAdd(addCodeEditor));\n        this._register(codeEditorService.onCodeEditorRemove(removeCodeEditor));\n        codeEditorService.listCodeEditors().forEach(addCodeEditor);\n        const addDiffEditor = (diffEditor) => {\n            addContainer(diffEditor.getContainerDomNode());\n        };\n        const removeDiffEditor = (diffEditor) => {\n            removeContainer(diffEditor.getContainerDomNode());\n        };\n        this._register(codeEditorService.onDiffEditorAdd(addDiffEditor));\n        this._register(codeEditorService.onDiffEditorRemove(removeDiffEditor));\n        codeEditorService.listDiffEditors().forEach(addDiffEditor);\n    }\n    addDynamicKeybinding(command, keybinding, handler, when) {\n        return combinedDisposable(CommandsRegistry.registerCommand(command, handler), this.addDynamicKeybindings([{\n                keybinding,\n                command,\n                when\n            }]));\n    }\n    addDynamicKeybindings(rules) {\n        const entries = rules.map((rule) => {\n            var _a;\n            const keybinding = decodeKeybinding(rule.keybinding, OS);\n            return {\n                keybinding,\n                command: (_a = rule.command) !== null && _a !== void 0 ? _a : null,\n                commandArgs: rule.commandArgs,\n                when: rule.when,\n                weight1: 1000,\n                weight2: 0,\n                extensionId: null,\n                isBuiltinExtension: false\n            };\n        });\n        this._dynamicKeybindings = this._dynamicKeybindings.concat(entries);\n        this.updateResolver();\n        return toDisposable(() => {\n            // Search the first entry and remove them all since they will be contiguous\n            for (let i = 0; i < this._dynamicKeybindings.length; i++) {\n                if (this._dynamicKeybindings[i] === entries[0]) {\n                    this._dynamicKeybindings.splice(i, entries.length);\n                    this.updateResolver();\n                    return;\n                }\n            }\n        });\n    }\n    updateResolver() {\n        this._cachedResolver = null;\n        this._onDidUpdateKeybindings.fire();\n    }\n    _getResolver() {\n        if (!this._cachedResolver) {\n            const defaults = this._toNormalizedKeybindingItems(KeybindingsRegistry.getDefaultKeybindings(), true);\n            const overrides = this._toNormalizedKeybindingItems(this._dynamicKeybindings, false);\n            this._cachedResolver = new KeybindingResolver(defaults, overrides, (str) => this._log(str));\n        }\n        return this._cachedResolver;\n    }\n    _documentHasFocus() {\n        return mainWindow.document.hasFocus();\n    }\n    _toNormalizedKeybindingItems(items, isDefault) {\n        const result = [];\n        let resultLen = 0;\n        for (const item of items) {\n            const when = item.when || undefined;\n            const keybinding = item.keybinding;\n            if (!keybinding) {\n                // This might be a removal keybinding item in user settings => accept it\n                result[resultLen++] = new ResolvedKeybindingItem(undefined, item.command, item.commandArgs, when, isDefault, null, false);\n            }\n            else {\n                const resolvedKeybindings = USLayoutResolvedKeybinding.resolveKeybinding(keybinding, OS);\n                for (const resolvedKeybinding of resolvedKeybindings) {\n                    result[resultLen++] = new ResolvedKeybindingItem(resolvedKeybinding, item.command, item.commandArgs, when, isDefault, null, false);\n                }\n            }\n        }\n        return result;\n    }\n    resolveKeyboardEvent(keyboardEvent) {\n        const chord = new KeyCodeChord(keyboardEvent.ctrlKey, keyboardEvent.shiftKey, keyboardEvent.altKey, keyboardEvent.metaKey, keyboardEvent.keyCode);\n        return new USLayoutResolvedKeybinding([chord], OS);\n    }\n};\nStandaloneKeybindingService = __decorate([\n    __param(0, IContextKeyService),\n    __param(1, ICommandService),\n    __param(2, ITelemetryService),\n    __param(3, INotificationService),\n    __param(4, ILogService),\n    __param(5, ICodeEditorService)\n], StandaloneKeybindingService);\nexport { StandaloneKeybindingService };\nclass DomNodeListeners extends Disposable {\n    constructor(domNode, disposables) {\n        super();\n        this.domNode = domNode;\n        this._register(disposables);\n    }\n}\nfunction isConfigurationOverrides(thing) {\n    return thing\n        && typeof thing === 'object'\n        && (!thing.overrideIdentifier || typeof thing.overrideIdentifier === 'string')\n        && (!thing.resource || thing.resource instanceof URI);\n}\nlet StandaloneConfigurationService = class StandaloneConfigurationService {\n    constructor(logService) {\n        this.logService = logService;\n        this._onDidChangeConfiguration = new Emitter();\n        this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n        const defaultConfiguration = new DefaultConfiguration(logService);\n        this._configuration = new Configuration(defaultConfiguration.reload(), ConfigurationModel.createEmptyModel(logService), ConfigurationModel.createEmptyModel(logService), ConfigurationModel.createEmptyModel(logService), ConfigurationModel.createEmptyModel(logService), ConfigurationModel.createEmptyModel(logService), new ResourceMap(), ConfigurationModel.createEmptyModel(logService), new ResourceMap(), logService);\n        defaultConfiguration.dispose();\n    }\n    getValue(arg1, arg2) {\n        const section = typeof arg1 === 'string' ? arg1 : undefined;\n        const overrides = isConfigurationOverrides(arg1) ? arg1 : isConfigurationOverrides(arg2) ? arg2 : {};\n        return this._configuration.getValue(section, overrides, undefined);\n    }\n    updateValues(values) {\n        const previous = { data: this._configuration.toData() };\n        const changedKeys = [];\n        for (const entry of values) {\n            const [key, value] = entry;\n            if (this.getValue(key) === value) {\n                continue;\n            }\n            this._configuration.updateValue(key, value);\n            changedKeys.push(key);\n        }\n        if (changedKeys.length > 0) {\n            const configurationChangeEvent = new ConfigurationChangeEvent({ keys: changedKeys, overrides: [] }, previous, this._configuration, undefined, this.logService);\n            configurationChangeEvent.source = 8 /* ConfigurationTarget.MEMORY */;\n            this._onDidChangeConfiguration.fire(configurationChangeEvent);\n        }\n        return Promise.resolve();\n    }\n    updateValue(key, value, arg3, arg4) {\n        return this.updateValues([[key, value]]);\n    }\n    inspect(key, options = {}) {\n        return this._configuration.inspect(key, options, undefined);\n    }\n};\nStandaloneConfigurationService = __decorate([\n    __param(0, ILogService)\n], StandaloneConfigurationService);\nexport { StandaloneConfigurationService };\nlet StandaloneResourceConfigurationService = class StandaloneResourceConfigurationService {\n    constructor(configurationService, modelService, languageService) {\n        this.configurationService = configurationService;\n        this.modelService = modelService;\n        this.languageService = languageService;\n        this._onDidChangeConfiguration = new Emitter();\n        this.configurationService.onDidChangeConfiguration((e) => {\n            this._onDidChangeConfiguration.fire({ affectedKeys: e.affectedKeys, affectsConfiguration: (resource, configuration) => e.affectsConfiguration(configuration) });\n        });\n    }\n    getValue(resource, arg2, arg3) {\n        const position = Pos.isIPosition(arg2) ? arg2 : null;\n        const section = position ? (typeof arg3 === 'string' ? arg3 : undefined) : (typeof arg2 === 'string' ? arg2 : undefined);\n        const language = resource ? this.getLanguage(resource, position) : undefined;\n        if (typeof section === 'undefined') {\n            return this.configurationService.getValue({\n                resource,\n                overrideIdentifier: language\n            });\n        }\n        return this.configurationService.getValue(section, {\n            resource,\n            overrideIdentifier: language\n        });\n    }\n    getLanguage(resource, position) {\n        const model = this.modelService.getModel(resource);\n        if (model) {\n            return position ? model.getLanguageIdAtPosition(position.lineNumber, position.column) : model.getLanguageId();\n        }\n        return this.languageService.guessLanguageIdByFilepathOrFirstLine(resource);\n    }\n};\nStandaloneResourceConfigurationService = __decorate([\n    __param(0, IConfigurationService),\n    __param(1, IModelService),\n    __param(2, ILanguageService)\n], StandaloneResourceConfigurationService);\nlet StandaloneResourcePropertiesService = class StandaloneResourcePropertiesService {\n    constructor(configurationService) {\n        this.configurationService = configurationService;\n    }\n    getEOL(resource, language) {\n        const eol = this.configurationService.getValue('files.eol', { overrideIdentifier: language, resource });\n        if (eol && typeof eol === 'string' && eol !== 'auto') {\n            return eol;\n        }\n        return (isLinux || isMacintosh) ? '\\n' : '\\r\\n';\n    }\n};\nStandaloneResourcePropertiesService = __decorate([\n    __param(0, IConfigurationService)\n], StandaloneResourcePropertiesService);\nclass StandaloneTelemetryService {\n    publicLog2() { }\n}\nclass StandaloneWorkspaceContextService {\n    constructor() {\n        const resource = URI.from({ scheme: StandaloneWorkspaceContextService.SCHEME, authority: 'model', path: '/' });\n        this.workspace = { id: STANDALONE_EDITOR_WORKSPACE_ID, folders: [new WorkspaceFolder({ uri: resource, name: '', index: 0 })] };\n    }\n    getWorkspace() {\n        return this.workspace;\n    }\n    getWorkspaceFolder(resource) {\n        return resource && resource.scheme === StandaloneWorkspaceContextService.SCHEME ? this.workspace.folders[0] : null;\n    }\n}\nStandaloneWorkspaceContextService.SCHEME = 'inmemory';\nexport function updateConfigurationService(configurationService, source, isDiffEditor) {\n    if (!source) {\n        return;\n    }\n    if (!(configurationService instanceof StandaloneConfigurationService)) {\n        return;\n    }\n    const toUpdate = [];\n    Object.keys(source).forEach((key) => {\n        if (isEditorConfigurationKey(key)) {\n            toUpdate.push([`editor.${key}`, source[key]]);\n        }\n        if (isDiffEditor && isDiffEditorConfigurationKey(key)) {\n            toUpdate.push([`diffEditor.${key}`, source[key]]);\n        }\n    });\n    if (toUpdate.length > 0) {\n        configurationService.updateValues(toUpdate);\n    }\n}\nlet StandaloneBulkEditService = class StandaloneBulkEditService {\n    constructor(_modelService) {\n        this._modelService = _modelService;\n        //\n    }\n    hasPreviewHandler() {\n        return false;\n    }\n    async apply(editsIn, _options) {\n        const edits = Array.isArray(editsIn) ? editsIn : ResourceEdit.convert(editsIn);\n        const textEdits = new Map();\n        for (const edit of edits) {\n            if (!(edit instanceof ResourceTextEdit)) {\n                throw new Error('bad edit - only text edits are supported');\n            }\n            const model = this._modelService.getModel(edit.resource);\n            if (!model) {\n                throw new Error('bad edit - model not found');\n            }\n            if (typeof edit.versionId === 'number' && model.getVersionId() !== edit.versionId) {\n                throw new Error('bad state - model changed in the meantime');\n            }\n            let array = textEdits.get(model);\n            if (!array) {\n                array = [];\n                textEdits.set(model, array);\n            }\n            array.push(EditOperation.replaceMove(Range.lift(edit.textEdit.range), edit.textEdit.text));\n        }\n        let totalEdits = 0;\n        let totalFiles = 0;\n        for (const [model, edits] of textEdits) {\n            model.pushStackElement();\n            model.pushEditOperations([], edits, () => []);\n            model.pushStackElement();\n            totalFiles += 1;\n            totalEdits += edits.length;\n        }\n        return {\n            ariaSummary: strings.format(StandaloneServicesNLS.bulkEditServiceSummary, totalEdits, totalFiles),\n            isApplied: totalEdits > 0\n        };\n    }\n};\nStandaloneBulkEditService = __decorate([\n    __param(0, IModelService)\n], StandaloneBulkEditService);\nclass StandaloneUriLabelService {\n    getUriLabel(resource, options) {\n        if (resource.scheme === 'file') {\n            return resource.fsPath;\n        }\n        return resource.path;\n    }\n    getUriBasenameLabel(resource) {\n        return basename(resource);\n    }\n}\nlet StandaloneContextViewService = class StandaloneContextViewService extends ContextViewService {\n    constructor(layoutService, _codeEditorService) {\n        super(layoutService);\n        this._codeEditorService = _codeEditorService;\n    }\n    showContextView(delegate, container, shadowRoot) {\n        if (!container) {\n            const codeEditor = this._codeEditorService.getFocusedCodeEditor() || this._codeEditorService.getActiveCodeEditor();\n            if (codeEditor) {\n                container = codeEditor.getContainerDomNode();\n            }\n        }\n        return super.showContextView(delegate, container, shadowRoot);\n    }\n};\nStandaloneContextViewService = __decorate([\n    __param(0, ILayoutService),\n    __param(1, ICodeEditorService)\n], StandaloneContextViewService);\nclass StandaloneWorkspaceTrustManagementService {\n    constructor() {\n        this._neverEmitter = new Emitter();\n        this.onDidChangeTrust = this._neverEmitter.event;\n    }\n    isWorkspaceTrusted() {\n        return true;\n    }\n}\nclass StandaloneLanguageService extends LanguageService {\n    constructor() {\n        super();\n    }\n}\nclass StandaloneLogService extends LogService {\n    constructor() {\n        super(new ConsoleLogger());\n    }\n}\nlet StandaloneContextMenuService = class StandaloneContextMenuService extends ContextMenuService {\n    constructor(telemetryService, notificationService, contextViewService, keybindingService, menuService, contextKeyService) {\n        super(telemetryService, notificationService, contextViewService, keybindingService, menuService, contextKeyService);\n        this.configure({ blockMouse: false }); // we do not want that in the standalone editor\n    }\n};\nStandaloneContextMenuService = __decorate([\n    __param(0, ITelemetryService),\n    __param(1, INotificationService),\n    __param(2, IContextViewService),\n    __param(3, IKeybindingService),\n    __param(4, IMenuService),\n    __param(5, IContextKeyService)\n], StandaloneContextMenuService);\nclass StandaloneAccessbilitySignalService {\n    async playSignal(cue, options) {\n    }\n}\nregisterSingleton(ILogService, StandaloneLogService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IConfigurationService, StandaloneConfigurationService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ITextResourceConfigurationService, StandaloneResourceConfigurationService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ITextResourcePropertiesService, StandaloneResourcePropertiesService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IWorkspaceContextService, StandaloneWorkspaceContextService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ILabelService, StandaloneUriLabelService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ITelemetryService, StandaloneTelemetryService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IDialogService, StandaloneDialogService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IEnvironmentService, StandaloneEnvironmentService, 0 /* InstantiationType.Eager */);\nregisterSingleton(INotificationService, StandaloneNotificationService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IMarkerService, MarkerService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ILanguageService, StandaloneLanguageService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IStandaloneThemeService, StandaloneThemeService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IModelService, ModelService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IMarkerDecorationsService, MarkerDecorationsService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IContextKeyService, ContextKeyService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IProgressService, StandaloneProgressService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IEditorProgressService, StandaloneEditorProgressService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IStorageService, InMemoryStorageService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IEditorWorkerService, EditorWorkerService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IBulkEditService, StandaloneBulkEditService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IWorkspaceTrustManagementService, StandaloneWorkspaceTrustManagementService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ITextModelService, StandaloneTextModelService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IAccessibilityService, AccessibilityService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IListService, ListService, 0 /* InstantiationType.Eager */);\nregisterSingleton(ICommandService, StandaloneCommandService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IKeybindingService, StandaloneKeybindingService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IQuickInputService, StandaloneQuickInputService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IContextViewService, StandaloneContextViewService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IOpenerService, OpenerService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IClipboardService, BrowserClipboardService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IContextMenuService, StandaloneContextMenuService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IMenuService, MenuService, 0 /* InstantiationType.Eager */);\nregisterSingleton(IAccessibilitySignalService, StandaloneAccessbilitySignalService, 0 /* InstantiationType.Eager */);\n/**\n * We don't want to eagerly instantiate services because embedders get a one time chance\n * to override services when they create the first editor.\n */\nexport var StandaloneServices;\n(function (StandaloneServices) {\n    const serviceCollection = new ServiceCollection();\n    for (const [id, descriptor] of getSingletonServiceDescriptors()) {\n        serviceCollection.set(id, descriptor);\n    }\n    const instantiationService = new InstantiationService(serviceCollection, true);\n    serviceCollection.set(IInstantiationService, instantiationService);\n    function get(serviceId) {\n        if (!initialized) {\n            initialize({});\n        }\n        const r = serviceCollection.get(serviceId);\n        if (!r) {\n            throw new Error('Missing service ' + serviceId);\n        }\n        if (r instanceof SyncDescriptor) {\n            return instantiationService.invokeFunction((accessor) => accessor.get(serviceId));\n        }\n        else {\n            return r;\n        }\n    }\n    StandaloneServices.get = get;\n    let initialized = false;\n    const onDidInitialize = new Emitter();\n    function initialize(overrides) {\n        if (initialized) {\n            return instantiationService;\n        }\n        initialized = true;\n        // Add singletons that were registered after this module loaded\n        for (const [id, descriptor] of getSingletonServiceDescriptors()) {\n            if (!serviceCollection.get(id)) {\n                serviceCollection.set(id, descriptor);\n            }\n        }\n        // Initialize the service collection with the overrides, but only if the\n        // service was not instantiated in the meantime.\n        for (const serviceId in overrides) {\n            if (overrides.hasOwnProperty(serviceId)) {\n                const serviceIdentifier = createDecorator(serviceId);\n                const r = serviceCollection.get(serviceIdentifier);\n                if (r instanceof SyncDescriptor) {\n                    serviceCollection.set(serviceIdentifier, overrides[serviceId]);\n                }\n            }\n        }\n        // Instantiate all editor features\n        const editorFeatures = getEditorFeatures();\n        for (const feature of editorFeatures) {\n            try {\n                instantiationService.createInstance(feature);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n        }\n        onDidInitialize.fire();\n        return instantiationService;\n    }\n    StandaloneServices.initialize = initialize;\n    /**\n     * Executes callback once services are initialized.\n     */\n    function withServices(callback) {\n        if (initialized) {\n            return callback();\n        }\n        const disposable = new DisposableStore();\n        const listener = disposable.add(onDidInitialize.event(() => {\n            listener.dispose();\n            disposable.add(callback());\n        }));\n        return disposable;\n    }\n    StandaloneServices.withServices = withServices;\n})(StandaloneServices || (StandaloneServices = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { editorActiveIndentGuide1, editorIndentGuide1 } from '../../common/core/editorColorRegistry.js';\nimport { editorBackground, editorForeground, editorInactiveSelection, editorSelectionHighlight } from '../../../platform/theme/common/colorRegistry.js';\n/* -------------------------------- Begin vs theme -------------------------------- */\nexport const vs = {\n    base: 'vs',\n    inherit: false,\n    rules: [\n        { token: '', foreground: '000000', background: 'fffffe' },\n        { token: 'invalid', foreground: 'cd3131' },\n        { token: 'emphasis', fontStyle: 'italic' },\n        { token: 'strong', fontStyle: 'bold' },\n        { token: 'variable', foreground: '001188' },\n        { token: 'variable.predefined', foreground: '4864AA' },\n        { token: 'constant', foreground: 'dd0000' },\n        { token: 'comment', foreground: '008000' },\n        { token: 'number', foreground: '098658' },\n        { token: 'number.hex', foreground: '3030c0' },\n        { token: 'regexp', foreground: '800000' },\n        { token: 'annotation', foreground: '808080' },\n        { token: 'type', foreground: '008080' },\n        { token: 'delimiter', foreground: '000000' },\n        { token: 'delimiter.html', foreground: '383838' },\n        { token: 'delimiter.xml', foreground: '0000FF' },\n        { token: 'tag', foreground: '800000' },\n        { token: 'tag.id.pug', foreground: '4F76AC' },\n        { token: 'tag.class.pug', foreground: '4F76AC' },\n        { token: 'meta.scss', foreground: '800000' },\n        { token: 'metatag', foreground: 'e00000' },\n        { token: 'metatag.content.html', foreground: 'FF0000' },\n        { token: 'metatag.html', foreground: '808080' },\n        { token: 'metatag.xml', foreground: '808080' },\n        { token: 'metatag.php', fontStyle: 'bold' },\n        { token: 'key', foreground: '863B00' },\n        { token: 'string.key.json', foreground: 'A31515' },\n        { token: 'string.value.json', foreground: '0451A5' },\n        { token: 'attribute.name', foreground: 'FF0000' },\n        { token: 'attribute.value', foreground: '0451A5' },\n        { token: 'attribute.value.number', foreground: '098658' },\n        { token: 'attribute.value.unit', foreground: '098658' },\n        { token: 'attribute.value.html', foreground: '0000FF' },\n        { token: 'attribute.value.xml', foreground: '0000FF' },\n        { token: 'string', foreground: 'A31515' },\n        { token: 'string.html', foreground: '0000FF' },\n        { token: 'string.sql', foreground: 'FF0000' },\n        { token: 'string.yaml', foreground: '0451A5' },\n        { token: 'keyword', foreground: '0000FF' },\n        { token: 'keyword.json', foreground: '0451A5' },\n        { token: 'keyword.flow', foreground: 'AF00DB' },\n        { token: 'keyword.flow.scss', foreground: '0000FF' },\n        { token: 'operator.scss', foreground: '666666' },\n        { token: 'operator.sql', foreground: '778899' },\n        { token: 'operator.swift', foreground: '666666' },\n        { token: 'predefined.sql', foreground: 'C700C7' },\n    ],\n    colors: {\n        [editorBackground]: '#FFFFFE',\n        [editorForeground]: '#000000',\n        [editorInactiveSelection]: '#E5EBF1',\n        [editorIndentGuide1]: '#D3D3D3',\n        [editorActiveIndentGuide1]: '#939393',\n        [editorSelectionHighlight]: '#ADD6FF4D'\n    }\n};\n/* -------------------------------- End vs theme -------------------------------- */\n/* -------------------------------- Begin vs-dark theme -------------------------------- */\nexport const vs_dark = {\n    base: 'vs-dark',\n    inherit: false,\n    rules: [\n        { token: '', foreground: 'D4D4D4', background: '1E1E1E' },\n        { token: 'invalid', foreground: 'f44747' },\n        { token: 'emphasis', fontStyle: 'italic' },\n        { token: 'strong', fontStyle: 'bold' },\n        { token: 'variable', foreground: '74B0DF' },\n        { token: 'variable.predefined', foreground: '4864AA' },\n        { token: 'variable.parameter', foreground: '9CDCFE' },\n        { token: 'constant', foreground: '569CD6' },\n        { token: 'comment', foreground: '608B4E' },\n        { token: 'number', foreground: 'B5CEA8' },\n        { token: 'number.hex', foreground: '5BB498' },\n        { token: 'regexp', foreground: 'B46695' },\n        { token: 'annotation', foreground: 'cc6666' },\n        { token: 'type', foreground: '3DC9B0' },\n        { token: 'delimiter', foreground: 'DCDCDC' },\n        { token: 'delimiter.html', foreground: '808080' },\n        { token: 'delimiter.xml', foreground: '808080' },\n        { token: 'tag', foreground: '569CD6' },\n        { token: 'tag.id.pug', foreground: '4F76AC' },\n        { token: 'tag.class.pug', foreground: '4F76AC' },\n        { token: 'meta.scss', foreground: 'A79873' },\n        { token: 'meta.tag', foreground: 'CE9178' },\n        { token: 'metatag', foreground: 'DD6A6F' },\n        { token: 'metatag.content.html', foreground: '9CDCFE' },\n        { token: 'metatag.html', foreground: '569CD6' },\n        { token: 'metatag.xml', foreground: '569CD6' },\n        { token: 'metatag.php', fontStyle: 'bold' },\n        { token: 'key', foreground: '9CDCFE' },\n        { token: 'string.key.json', foreground: '9CDCFE' },\n        { token: 'string.value.json', foreground: 'CE9178' },\n        { token: 'attribute.name', foreground: '9CDCFE' },\n        { token: 'attribute.value', foreground: 'CE9178' },\n        { token: 'attribute.value.number.css', foreground: 'B5CEA8' },\n        { token: 'attribute.value.unit.css', foreground: 'B5CEA8' },\n        { token: 'attribute.value.hex.css', foreground: 'D4D4D4' },\n        { token: 'string', foreground: 'CE9178' },\n        { token: 'string.sql', foreground: 'FF0000' },\n        { token: 'keyword', foreground: '569CD6' },\n        { token: 'keyword.flow', foreground: 'C586C0' },\n        { token: 'keyword.json', foreground: 'CE9178' },\n        { token: 'keyword.flow.scss', foreground: '569CD6' },\n        { token: 'operator.scss', foreground: '909090' },\n        { token: 'operator.sql', foreground: '778899' },\n        { token: 'operator.swift', foreground: '909090' },\n        { token: 'predefined.sql', foreground: 'FF00FF' },\n    ],\n    colors: {\n        [editorBackground]: '#1E1E1E',\n        [editorForeground]: '#D4D4D4',\n        [editorInactiveSelection]: '#3A3D41',\n        [editorIndentGuide1]: '#404040',\n        [editorActiveIndentGuide1]: '#707070',\n        [editorSelectionHighlight]: '#ADD6FF26'\n    }\n};\n/* -------------------------------- End vs-dark theme -------------------------------- */\n/* -------------------------------- Begin hc-black theme -------------------------------- */\nexport const hc_black = {\n    base: 'hc-black',\n    inherit: false,\n    rules: [\n        { token: '', foreground: 'FFFFFF', background: '000000' },\n        { token: 'invalid', foreground: 'f44747' },\n        { token: 'emphasis', fontStyle: 'italic' },\n        { token: 'strong', fontStyle: 'bold' },\n        { token: 'variable', foreground: '1AEBFF' },\n        { token: 'variable.parameter', foreground: '9CDCFE' },\n        { token: 'constant', foreground: '569CD6' },\n        { token: 'comment', foreground: '608B4E' },\n        { token: 'number', foreground: 'FFFFFF' },\n        { token: 'regexp', foreground: 'C0C0C0' },\n        { token: 'annotation', foreground: '569CD6' },\n        { token: 'type', foreground: '3DC9B0' },\n        { token: 'delimiter', foreground: 'FFFF00' },\n        { token: 'delimiter.html', foreground: 'FFFF00' },\n        { token: 'tag', foreground: '569CD6' },\n        { token: 'tag.id.pug', foreground: '4F76AC' },\n        { token: 'tag.class.pug', foreground: '4F76AC' },\n        { token: 'meta', foreground: 'D4D4D4' },\n        { token: 'meta.tag', foreground: 'CE9178' },\n        { token: 'metatag', foreground: '569CD6' },\n        { token: 'metatag.content.html', foreground: '1AEBFF' },\n        { token: 'metatag.html', foreground: '569CD6' },\n        { token: 'metatag.xml', foreground: '569CD6' },\n        { token: 'metatag.php', fontStyle: 'bold' },\n        { token: 'key', foreground: '9CDCFE' },\n        { token: 'string.key', foreground: '9CDCFE' },\n        { token: 'string.value', foreground: 'CE9178' },\n        { token: 'attribute.name', foreground: '569CD6' },\n        { token: 'attribute.value', foreground: '3FF23F' },\n        { token: 'string', foreground: 'CE9178' },\n        { token: 'string.sql', foreground: 'FF0000' },\n        { token: 'keyword', foreground: '569CD6' },\n        { token: 'keyword.flow', foreground: 'C586C0' },\n        { token: 'operator.sql', foreground: '778899' },\n        { token: 'operator.swift', foreground: '909090' },\n        { token: 'predefined.sql', foreground: 'FF00FF' },\n    ],\n    colors: {\n        [editorBackground]: '#000000',\n        [editorForeground]: '#FFFFFF',\n        [editorIndentGuide1]: '#FFFFFF',\n        [editorActiveIndentGuide1]: '#FFFFFF',\n    }\n};\n/* -------------------------------- End hc-black theme -------------------------------- */\n/* -------------------------------- Begin hc-light theme -------------------------------- */\nexport const hc_light = {\n    base: 'hc-light',\n    inherit: false,\n    rules: [\n        { token: '', foreground: '292929', background: 'FFFFFF' },\n        { token: 'invalid', foreground: 'B5200D' },\n        { token: 'emphasis', fontStyle: 'italic' },\n        { token: 'strong', fontStyle: 'bold' },\n        { token: 'variable', foreground: '264F70' },\n        { token: 'variable.predefined', foreground: '4864AA' },\n        { token: 'constant', foreground: 'dd0000' },\n        { token: 'comment', foreground: '008000' },\n        { token: 'number', foreground: '098658' },\n        { token: 'number.hex', foreground: '3030c0' },\n        { token: 'regexp', foreground: '800000' },\n        { token: 'annotation', foreground: '808080' },\n        { token: 'type', foreground: '008080' },\n        { token: 'delimiter', foreground: '000000' },\n        { token: 'delimiter.html', foreground: '383838' },\n        { token: 'tag', foreground: '800000' },\n        { token: 'tag.id.pug', foreground: '4F76AC' },\n        { token: 'tag.class.pug', foreground: '4F76AC' },\n        { token: 'meta.scss', foreground: '800000' },\n        { token: 'metatag', foreground: 'e00000' },\n        { token: 'metatag.content.html', foreground: 'B5200D' },\n        { token: 'metatag.html', foreground: '808080' },\n        { token: 'metatag.xml', foreground: '808080' },\n        { token: 'metatag.php', fontStyle: 'bold' },\n        { token: 'key', foreground: '863B00' },\n        { token: 'string.key.json', foreground: 'A31515' },\n        { token: 'string.value.json', foreground: '0451A5' },\n        { token: 'attribute.name', foreground: '264F78' },\n        { token: 'attribute.value', foreground: '0451A5' },\n        { token: 'string', foreground: 'A31515' },\n        { token: 'string.sql', foreground: 'B5200D' },\n        { token: 'keyword', foreground: '0000FF' },\n        { token: 'keyword.flow', foreground: 'AF00DB' },\n        { token: 'operator.sql', foreground: '778899' },\n        { token: 'operator.swift', foreground: '666666' },\n        { token: 'predefined.sql', foreground: 'C700C7' },\n    ],\n    colors: {\n        [editorBackground]: '#FFFFFF',\n        [editorForeground]: '#292929',\n        [editorIndentGuide1]: '#292929',\n        [editorActiveIndentGuide1]: '#292929',\n    }\n};\n/* -------------------------------- End hc-light theme -------------------------------- */\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../base/browser/dom.js';\nimport { addMatchMediaChangeListener } from '../../../base/browser/browser.js';\nimport { Color } from '../../../base/common/color.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { TokenizationRegistry } from '../../common/languages.js';\nimport { TokenMetadata } from '../../common/encodedTokenAttributes.js';\nimport { TokenTheme, generateTokensCSSForColorMap } from '../../common/languages/supports/tokenization.js';\nimport { hc_black, hc_light, vs, vs_dark } from '../common/themes.js';\nimport { Registry } from '../../../platform/registry/common/platform.js';\nimport { asCssVariableName, Extensions } from '../../../platform/theme/common/colorRegistry.js';\nimport { Extensions as ThemingExtensions } from '../../../platform/theme/common/themeService.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { ColorScheme, isDark, isHighContrast } from '../../../platform/theme/common/theme.js';\nimport { getIconsStyleSheet, UnthemedProductIconTheme } from '../../../platform/theme/browser/iconsStyleSheet.js';\nimport { mainWindow } from '../../../base/browser/window.js';\nexport const VS_LIGHT_THEME_NAME = 'vs';\nexport const VS_DARK_THEME_NAME = 'vs-dark';\nexport const HC_BLACK_THEME_NAME = 'hc-black';\nexport const HC_LIGHT_THEME_NAME = 'hc-light';\nconst colorRegistry = Registry.as(Extensions.ColorContribution);\nconst themingRegistry = Registry.as(ThemingExtensions.ThemingContribution);\nclass StandaloneTheme {\n    constructor(name, standaloneThemeData) {\n        this.semanticHighlighting = false;\n        this.themeData = standaloneThemeData;\n        const base = standaloneThemeData.base;\n        if (name.length > 0) {\n            if (isBuiltinTheme(name)) {\n                this.id = name;\n            }\n            else {\n                this.id = base + ' ' + name;\n            }\n            this.themeName = name;\n        }\n        else {\n            this.id = base;\n            this.themeName = base;\n        }\n        this.colors = null;\n        this.defaultColors = Object.create(null);\n        this._tokenTheme = null;\n    }\n    get base() {\n        return this.themeData.base;\n    }\n    notifyBaseUpdated() {\n        if (this.themeData.inherit) {\n            this.colors = null;\n            this._tokenTheme = null;\n        }\n    }\n    getColors() {\n        if (!this.colors) {\n            const colors = new Map();\n            for (const id in this.themeData.colors) {\n                colors.set(id, Color.fromHex(this.themeData.colors[id]));\n            }\n            if (this.themeData.inherit) {\n                const baseData = getBuiltinRules(this.themeData.base);\n                for (const id in baseData.colors) {\n                    if (!colors.has(id)) {\n                        colors.set(id, Color.fromHex(baseData.colors[id]));\n                    }\n                }\n            }\n            this.colors = colors;\n        }\n        return this.colors;\n    }\n    getColor(colorId, useDefault) {\n        const color = this.getColors().get(colorId);\n        if (color) {\n            return color;\n        }\n        if (useDefault !== false) {\n            return this.getDefault(colorId);\n        }\n        return undefined;\n    }\n    getDefault(colorId) {\n        let color = this.defaultColors[colorId];\n        if (color) {\n            return color;\n        }\n        color = colorRegistry.resolveDefaultColor(colorId, this);\n        this.defaultColors[colorId] = color;\n        return color;\n    }\n    defines(colorId) {\n        return this.getColors().has(colorId);\n    }\n    get type() {\n        switch (this.base) {\n            case VS_LIGHT_THEME_NAME: return ColorScheme.LIGHT;\n            case HC_BLACK_THEME_NAME: return ColorScheme.HIGH_CONTRAST_DARK;\n            case HC_LIGHT_THEME_NAME: return ColorScheme.HIGH_CONTRAST_LIGHT;\n            default: return ColorScheme.DARK;\n        }\n    }\n    get tokenTheme() {\n        if (!this._tokenTheme) {\n            let rules = [];\n            let encodedTokensColors = [];\n            if (this.themeData.inherit) {\n                const baseData = getBuiltinRules(this.themeData.base);\n                rules = baseData.rules;\n                if (baseData.encodedTokensColors) {\n                    encodedTokensColors = baseData.encodedTokensColors;\n                }\n            }\n            // Pick up default colors from `editor.foreground` and `editor.background` if available\n            const editorForeground = this.themeData.colors['editor.foreground'];\n            const editorBackground = this.themeData.colors['editor.background'];\n            if (editorForeground || editorBackground) {\n                const rule = { token: '' };\n                if (editorForeground) {\n                    rule.foreground = editorForeground;\n                }\n                if (editorBackground) {\n                    rule.background = editorBackground;\n                }\n                rules.push(rule);\n            }\n            rules = rules.concat(this.themeData.rules);\n            if (this.themeData.encodedTokensColors) {\n                encodedTokensColors = this.themeData.encodedTokensColors;\n            }\n            this._tokenTheme = TokenTheme.createFromRawTokenTheme(rules, encodedTokensColors);\n        }\n        return this._tokenTheme;\n    }\n    getTokenStyleMetadata(type, modifiers, modelLanguage) {\n        // use theme rules match\n        const style = this.tokenTheme._match([type].concat(modifiers).join('.'));\n        const metadata = style.metadata;\n        const foreground = TokenMetadata.getForeground(metadata);\n        const fontStyle = TokenMetadata.getFontStyle(metadata);\n        return {\n            foreground: foreground,\n            italic: Boolean(fontStyle & 1 /* FontStyle.Italic */),\n            bold: Boolean(fontStyle & 2 /* FontStyle.Bold */),\n            underline: Boolean(fontStyle & 4 /* FontStyle.Underline */),\n            strikethrough: Boolean(fontStyle & 8 /* FontStyle.Strikethrough */)\n        };\n    }\n}\nfunction isBuiltinTheme(themeName) {\n    return (themeName === VS_LIGHT_THEME_NAME\n        || themeName === VS_DARK_THEME_NAME\n        || themeName === HC_BLACK_THEME_NAME\n        || themeName === HC_LIGHT_THEME_NAME);\n}\nfunction getBuiltinRules(builtinTheme) {\n    switch (builtinTheme) {\n        case VS_LIGHT_THEME_NAME:\n            return vs;\n        case VS_DARK_THEME_NAME:\n            return vs_dark;\n        case HC_BLACK_THEME_NAME:\n            return hc_black;\n        case HC_LIGHT_THEME_NAME:\n            return hc_light;\n    }\n}\nfunction newBuiltInTheme(builtinTheme) {\n    const themeData = getBuiltinRules(builtinTheme);\n    return new StandaloneTheme(builtinTheme, themeData);\n}\nexport class StandaloneThemeService extends Disposable {\n    constructor() {\n        super();\n        this._onColorThemeChange = this._register(new Emitter());\n        this.onDidColorThemeChange = this._onColorThemeChange.event;\n        this._onProductIconThemeChange = this._register(new Emitter());\n        this.onDidProductIconThemeChange = this._onProductIconThemeChange.event;\n        this._environment = Object.create(null);\n        this._builtInProductIconTheme = new UnthemedProductIconTheme();\n        this._autoDetectHighContrast = true;\n        this._knownThemes = new Map();\n        this._knownThemes.set(VS_LIGHT_THEME_NAME, newBuiltInTheme(VS_LIGHT_THEME_NAME));\n        this._knownThemes.set(VS_DARK_THEME_NAME, newBuiltInTheme(VS_DARK_THEME_NAME));\n        this._knownThemes.set(HC_BLACK_THEME_NAME, newBuiltInTheme(HC_BLACK_THEME_NAME));\n        this._knownThemes.set(HC_LIGHT_THEME_NAME, newBuiltInTheme(HC_LIGHT_THEME_NAME));\n        const iconsStyleSheet = this._register(getIconsStyleSheet(this));\n        this._codiconCSS = iconsStyleSheet.getCSS();\n        this._themeCSS = '';\n        this._allCSS = `${this._codiconCSS}\\n${this._themeCSS}`;\n        this._globalStyleElement = null;\n        this._styleElements = [];\n        this._colorMapOverride = null;\n        this.setTheme(VS_LIGHT_THEME_NAME);\n        this._onOSSchemeChanged();\n        this._register(iconsStyleSheet.onDidChange(() => {\n            this._codiconCSS = iconsStyleSheet.getCSS();\n            this._updateCSS();\n        }));\n        addMatchMediaChangeListener(mainWindow, '(forced-colors: active)', () => {\n            this._onOSSchemeChanged();\n        });\n    }\n    registerEditorContainer(domNode) {\n        if (dom.isInShadowDOM(domNode)) {\n            return this._registerShadowDomContainer(domNode);\n        }\n        return this._registerRegularEditorContainer();\n    }\n    _registerRegularEditorContainer() {\n        if (!this._globalStyleElement) {\n            this._globalStyleElement = dom.createStyleSheet(undefined, style => {\n                style.className = 'monaco-colors';\n                style.textContent = this._allCSS;\n            });\n            this._styleElements.push(this._globalStyleElement);\n        }\n        return Disposable.None;\n    }\n    _registerShadowDomContainer(domNode) {\n        const styleElement = dom.createStyleSheet(domNode, style => {\n            style.className = 'monaco-colors';\n            style.textContent = this._allCSS;\n        });\n        this._styleElements.push(styleElement);\n        return {\n            dispose: () => {\n                for (let i = 0; i < this._styleElements.length; i++) {\n                    if (this._styleElements[i] === styleElement) {\n                        this._styleElements.splice(i, 1);\n                        return;\n                    }\n                }\n            }\n        };\n    }\n    defineTheme(themeName, themeData) {\n        if (!/^[a-z0-9\\-]+$/i.test(themeName)) {\n            throw new Error('Illegal theme name!');\n        }\n        if (!isBuiltinTheme(themeData.base) && !isBuiltinTheme(themeName)) {\n            throw new Error('Illegal theme base!');\n        }\n        // set or replace theme\n        this._knownThemes.set(themeName, new StandaloneTheme(themeName, themeData));\n        if (isBuiltinTheme(themeName)) {\n            this._knownThemes.forEach(theme => {\n                if (theme.base === themeName) {\n                    theme.notifyBaseUpdated();\n                }\n            });\n        }\n        if (this._theme.themeName === themeName) {\n            this.setTheme(themeName); // refresh theme\n        }\n    }\n    getColorTheme() {\n        return this._theme;\n    }\n    setColorMapOverride(colorMapOverride) {\n        this._colorMapOverride = colorMapOverride;\n        this._updateThemeOrColorMap();\n    }\n    setTheme(themeName) {\n        let theme;\n        if (this._knownThemes.has(themeName)) {\n            theme = this._knownThemes.get(themeName);\n        }\n        else {\n            theme = this._knownThemes.get(VS_LIGHT_THEME_NAME);\n        }\n        this._updateActualTheme(theme);\n    }\n    _updateActualTheme(desiredTheme) {\n        if (!desiredTheme || this._theme === desiredTheme) {\n            // Nothing to do\n            return;\n        }\n        this._theme = desiredTheme;\n        this._updateThemeOrColorMap();\n    }\n    _onOSSchemeChanged() {\n        if (this._autoDetectHighContrast) {\n            const wantsHighContrast = mainWindow.matchMedia(`(forced-colors: active)`).matches;\n            if (wantsHighContrast !== isHighContrast(this._theme.type)) {\n                // switch to high contrast or non-high contrast but stick to dark or light\n                let newThemeName;\n                if (isDark(this._theme.type)) {\n                    newThemeName = wantsHighContrast ? HC_BLACK_THEME_NAME : VS_DARK_THEME_NAME;\n                }\n                else {\n                    newThemeName = wantsHighContrast ? HC_LIGHT_THEME_NAME : VS_LIGHT_THEME_NAME;\n                }\n                this._updateActualTheme(this._knownThemes.get(newThemeName));\n            }\n        }\n    }\n    setAutoDetectHighContrast(autoDetectHighContrast) {\n        this._autoDetectHighContrast = autoDetectHighContrast;\n        this._onOSSchemeChanged();\n    }\n    _updateThemeOrColorMap() {\n        const cssRules = [];\n        const hasRule = {};\n        const ruleCollector = {\n            addRule: (rule) => {\n                if (!hasRule[rule]) {\n                    cssRules.push(rule);\n                    hasRule[rule] = true;\n                }\n            }\n        };\n        themingRegistry.getThemingParticipants().forEach(p => p(this._theme, ruleCollector, this._environment));\n        const colorVariables = [];\n        for (const item of colorRegistry.getColors()) {\n            const color = this._theme.getColor(item.id, true);\n            if (color) {\n                colorVariables.push(`${asCssVariableName(item.id)}: ${color.toString()};`);\n            }\n        }\n        ruleCollector.addRule(`.monaco-editor, .monaco-diff-editor, .monaco-component { ${colorVariables.join('\\n')} }`);\n        const colorMap = this._colorMapOverride || this._theme.tokenTheme.getColorMap();\n        ruleCollector.addRule(generateTokensCSSForColorMap(colorMap));\n        this._themeCSS = cssRules.join('\\n');\n        this._updateCSS();\n        TokenizationRegistry.setColorMap(colorMap);\n        this._onColorThemeChange.fire(this._theme);\n    }\n    _updateCSS() {\n        this._allCSS = `${this._codiconCSS}\\n${this._themeCSS}`;\n        this._styleElements.forEach(styleElement => styleElement.textContent = this._allCSS);\n    }\n    getFileIconTheme() {\n        return {\n            hasFileIcons: false,\n            hasFolderIcons: false,\n            hidesExplorerArrows: false\n        };\n    }\n    getProductIconTheme() {\n        return this._builtInProductIconTheme;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { IStandaloneThemeService } from '../../common/standaloneTheme.js';\nimport { ToggleHighContrastNLS } from '../../../common/standaloneStrings.js';\nimport { isDark, isHighContrast } from '../../../../platform/theme/common/theme.js';\nimport { HC_BLACK_THEME_NAME, HC_LIGHT_THEME_NAME, VS_DARK_THEME_NAME, VS_LIGHT_THEME_NAME } from '../standaloneThemeService.js';\nclass ToggleHighContrast extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.toggleHighContrast',\n            label: ToggleHighContrastNLS.toggleHighContrast,\n            alias: 'Toggle High Contrast Theme',\n            precondition: undefined\n        });\n        this._originalThemeName = null;\n    }\n    run(accessor, editor) {\n        const standaloneThemeService = accessor.get(IStandaloneThemeService);\n        const currentTheme = standaloneThemeService.getColorTheme();\n        if (isHighContrast(currentTheme.type)) {\n            // We must toggle back to the integrator's theme\n            standaloneThemeService.setTheme(this._originalThemeName || (isDark(currentTheme.type) ? VS_DARK_THEME_NAME : VS_LIGHT_THEME_NAME));\n            this._originalThemeName = null;\n        }\n        else {\n            standaloneThemeService.setTheme(isDark(currentTheme.type) ? HC_BLACK_THEME_NAME : HC_LIGHT_THEME_NAME);\n            this._originalThemeName = currentTheme.themeName;\n        }\n    }\n}\nregisterEditorAction(ToggleHighContrast);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function isFuzzyActionArr(what) {\n    return (Array.isArray(what));\n}\nexport function isFuzzyAction(what) {\n    return !isFuzzyActionArr(what);\n}\nexport function isString(what) {\n    return (typeof what === 'string');\n}\nexport function isIAction(what) {\n    return !isString(what);\n}\n// Small helper functions\n/**\n * Is a string null, undefined, or empty?\n */\nexport function empty(s) {\n    return (s ? false : true);\n}\n/**\n * Puts a string to lower case if 'ignoreCase' is set.\n */\nexport function fixCase(lexer, str) {\n    return (lexer.ignoreCase && str ? str.toLowerCase() : str);\n}\n/**\n * Ensures there are no bad characters in a CSS token class.\n */\nexport function sanitize(s) {\n    return s.replace(/[&<>'\"_]/g, '-'); // used on all output token CSS classes\n}\n// Logging\n/**\n * Logs a message.\n */\nexport function log(lexer, msg) {\n    console.log(`${lexer.languageId}: ${msg}`);\n}\n// Throwing errors\nexport function createError(lexer, msg) {\n    return new Error(`${lexer.languageId}: ${msg}`);\n}\n// Helper functions for rule finding and substitution\n/**\n * substituteMatches is used on lexer strings and can substitutes predefined patterns:\n * \t\t$$  => $\n * \t\t$#  => id\n * \t\t$n  => matched entry n\n * \t\t@attr => contents of lexer[attr]\n *\n * See documentation for more info\n */\nexport function substituteMatches(lexer, str, id, matches, state) {\n    const re = /\\$((\\$)|(#)|(\\d\\d?)|[sS](\\d\\d?)|@(\\w+))/g;\n    let stateMatches = null;\n    return str.replace(re, function (full, sub, dollar, hash, n, s, attr, ofs, total) {\n        if (!empty(dollar)) {\n            return '$'; // $$\n        }\n        if (!empty(hash)) {\n            return fixCase(lexer, id); // default $#\n        }\n        if (!empty(n) && n < matches.length) {\n            return fixCase(lexer, matches[n]); // $n\n        }\n        if (!empty(attr) && lexer && typeof (lexer[attr]) === 'string') {\n            return lexer[attr]; //@attribute\n        }\n        if (stateMatches === null) { // split state on demand\n            stateMatches = state.split('.');\n            stateMatches.unshift(state);\n        }\n        if (!empty(s) && s < stateMatches.length) {\n            return fixCase(lexer, stateMatches[s]); //$Sn\n        }\n        return '';\n    });\n}\n/**\n * substituteMatchesRe is used on lexer regex rules and can substitutes predefined patterns:\n * \t\t$Sn => n'th part of state\n *\n */\nexport function substituteMatchesRe(lexer, str, state) {\n    const re = /\\$[sS](\\d\\d?)/g;\n    let stateMatches = null;\n    return str.replace(re, function (full, s) {\n        if (stateMatches === null) { // split state on demand\n            stateMatches = state.split('.');\n            stateMatches.unshift(state);\n        }\n        if (!empty(s) && s < stateMatches.length) {\n            return fixCase(lexer, stateMatches[s]); //$Sn\n        }\n        return '';\n    });\n}\n/**\n * Find the tokenizer rules for a specific state (i.e. next action)\n */\nexport function findRules(lexer, inState) {\n    let state = inState;\n    while (state && state.length > 0) {\n        const rules = lexer.tokenizer[state];\n        if (rules) {\n            return rules;\n        }\n        const idx = state.lastIndexOf('.');\n        if (idx < 0) {\n            state = null; // no further parent\n        }\n        else {\n            state = state.substr(0, idx);\n        }\n    }\n    return null;\n}\n/**\n * Is a certain state defined? In contrast to 'findRules' this works on a ILexerMin.\n * This is used during compilation where we may know the defined states\n * but not yet whether the corresponding rules are correct.\n */\nexport function stateExists(lexer, inState) {\n    let state = inState;\n    while (state && state.length > 0) {\n        const exist = lexer.stateNames[state];\n        if (exist) {\n            return true;\n        }\n        const idx = state.lastIndexOf('.');\n        if (idx < 0) {\n            state = null; // no further parent\n        }\n        else {\n            state = state.substr(0, idx);\n        }\n    }\n    return false;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar MonarchTokenizer_1;\n/**\n * Create a syntax highighter with a fully declarative JSON style lexer description\n * using regular expressions.\n */\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport * as languages from '../../../common/languages.js';\nimport { NullState, nullTokenizeEncoded, nullTokenize } from '../../../common/languages/nullTokenize.js';\nimport * as monarchCommon from './monarchCommon.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nconst CACHE_STACK_DEPTH = 5;\n/**\n * Reuse the same stack elements up to a certain depth.\n */\nclass MonarchStackElementFactory {\n    static create(parent, state) {\n        return this._INSTANCE.create(parent, state);\n    }\n    constructor(maxCacheDepth) {\n        this._maxCacheDepth = maxCacheDepth;\n        this._entries = Object.create(null);\n    }\n    create(parent, state) {\n        if (parent !== null && parent.depth >= this._maxCacheDepth) {\n            // no caching above a certain depth\n            return new MonarchStackElement(parent, state);\n        }\n        let stackElementId = MonarchStackElement.getStackElementId(parent);\n        if (stackElementId.length > 0) {\n            stackElementId += '|';\n        }\n        stackElementId += state;\n        let result = this._entries[stackElementId];\n        if (result) {\n            return result;\n        }\n        result = new MonarchStackElement(parent, state);\n        this._entries[stackElementId] = result;\n        return result;\n    }\n}\nMonarchStackElementFactory._INSTANCE = new MonarchStackElementFactory(CACHE_STACK_DEPTH);\nclass MonarchStackElement {\n    constructor(parent, state) {\n        this.parent = parent;\n        this.state = state;\n        this.depth = (this.parent ? this.parent.depth : 0) + 1;\n    }\n    static getStackElementId(element) {\n        let result = '';\n        while (element !== null) {\n            if (result.length > 0) {\n                result += '|';\n            }\n            result += element.state;\n            element = element.parent;\n        }\n        return result;\n    }\n    static _equals(a, b) {\n        while (a !== null && b !== null) {\n            if (a === b) {\n                return true;\n            }\n            if (a.state !== b.state) {\n                return false;\n            }\n            a = a.parent;\n            b = b.parent;\n        }\n        if (a === null && b === null) {\n            return true;\n        }\n        return false;\n    }\n    equals(other) {\n        return MonarchStackElement._equals(this, other);\n    }\n    push(state) {\n        return MonarchStackElementFactory.create(this, state);\n    }\n    pop() {\n        return this.parent;\n    }\n    popall() {\n        let result = this;\n        while (result.parent) {\n            result = result.parent;\n        }\n        return result;\n    }\n    switchTo(state) {\n        return MonarchStackElementFactory.create(this.parent, state);\n    }\n}\nclass EmbeddedLanguageData {\n    constructor(languageId, state) {\n        this.languageId = languageId;\n        this.state = state;\n    }\n    equals(other) {\n        return (this.languageId === other.languageId\n            && this.state.equals(other.state));\n    }\n    clone() {\n        const stateClone = this.state.clone();\n        // save an object\n        if (stateClone === this.state) {\n            return this;\n        }\n        return new EmbeddedLanguageData(this.languageId, this.state);\n    }\n}\n/**\n * Reuse the same line states up to a certain depth.\n */\nclass MonarchLineStateFactory {\n    static create(stack, embeddedLanguageData) {\n        return this._INSTANCE.create(stack, embeddedLanguageData);\n    }\n    constructor(maxCacheDepth) {\n        this._maxCacheDepth = maxCacheDepth;\n        this._entries = Object.create(null);\n    }\n    create(stack, embeddedLanguageData) {\n        if (embeddedLanguageData !== null) {\n            // no caching when embedding\n            return new MonarchLineState(stack, embeddedLanguageData);\n        }\n        if (stack !== null && stack.depth >= this._maxCacheDepth) {\n            // no caching above a certain depth\n            return new MonarchLineState(stack, embeddedLanguageData);\n        }\n        const stackElementId = MonarchStackElement.getStackElementId(stack);\n        let result = this._entries[stackElementId];\n        if (result) {\n            return result;\n        }\n        result = new MonarchLineState(stack, null);\n        this._entries[stackElementId] = result;\n        return result;\n    }\n}\nMonarchLineStateFactory._INSTANCE = new MonarchLineStateFactory(CACHE_STACK_DEPTH);\nclass MonarchLineState {\n    constructor(stack, embeddedLanguageData) {\n        this.stack = stack;\n        this.embeddedLanguageData = embeddedLanguageData;\n    }\n    clone() {\n        const embeddedlanguageDataClone = this.embeddedLanguageData ? this.embeddedLanguageData.clone() : null;\n        // save an object\n        if (embeddedlanguageDataClone === this.embeddedLanguageData) {\n            return this;\n        }\n        return MonarchLineStateFactory.create(this.stack, this.embeddedLanguageData);\n    }\n    equals(other) {\n        if (!(other instanceof MonarchLineState)) {\n            return false;\n        }\n        if (!this.stack.equals(other.stack)) {\n            return false;\n        }\n        if (this.embeddedLanguageData === null && other.embeddedLanguageData === null) {\n            return true;\n        }\n        if (this.embeddedLanguageData === null || other.embeddedLanguageData === null) {\n            return false;\n        }\n        return this.embeddedLanguageData.equals(other.embeddedLanguageData);\n    }\n}\nclass MonarchClassicTokensCollector {\n    constructor() {\n        this._tokens = [];\n        this._languageId = null;\n        this._lastTokenType = null;\n        this._lastTokenLanguage = null;\n    }\n    enterLanguage(languageId) {\n        this._languageId = languageId;\n    }\n    emit(startOffset, type) {\n        if (this._lastTokenType === type && this._lastTokenLanguage === this._languageId) {\n            return;\n        }\n        this._lastTokenType = type;\n        this._lastTokenLanguage = this._languageId;\n        this._tokens.push(new languages.Token(startOffset, type, this._languageId));\n    }\n    nestedLanguageTokenize(embeddedLanguageLine, hasEOL, embeddedLanguageData, offsetDelta) {\n        const nestedLanguageId = embeddedLanguageData.languageId;\n        const embeddedModeState = embeddedLanguageData.state;\n        const nestedLanguageTokenizationSupport = languages.TokenizationRegistry.get(nestedLanguageId);\n        if (!nestedLanguageTokenizationSupport) {\n            this.enterLanguage(nestedLanguageId);\n            this.emit(offsetDelta, '');\n            return embeddedModeState;\n        }\n        const nestedResult = nestedLanguageTokenizationSupport.tokenize(embeddedLanguageLine, hasEOL, embeddedModeState);\n        if (offsetDelta !== 0) {\n            for (const token of nestedResult.tokens) {\n                this._tokens.push(new languages.Token(token.offset + offsetDelta, token.type, token.language));\n            }\n        }\n        else {\n            this._tokens = this._tokens.concat(nestedResult.tokens);\n        }\n        this._lastTokenType = null;\n        this._lastTokenLanguage = null;\n        this._languageId = null;\n        return nestedResult.endState;\n    }\n    finalize(endState) {\n        return new languages.TokenizationResult(this._tokens, endState);\n    }\n}\nclass MonarchModernTokensCollector {\n    constructor(languageService, theme) {\n        this._languageService = languageService;\n        this._theme = theme;\n        this._prependTokens = null;\n        this._tokens = [];\n        this._currentLanguageId = 0 /* LanguageId.Null */;\n        this._lastTokenMetadata = 0;\n    }\n    enterLanguage(languageId) {\n        this._currentLanguageId = this._languageService.languageIdCodec.encodeLanguageId(languageId);\n    }\n    emit(startOffset, type) {\n        const metadata = this._theme.match(this._currentLanguageId, type) | 1024 /* MetadataConsts.BALANCED_BRACKETS_MASK */;\n        if (this._lastTokenMetadata === metadata) {\n            return;\n        }\n        this._lastTokenMetadata = metadata;\n        this._tokens.push(startOffset);\n        this._tokens.push(metadata);\n    }\n    static _merge(a, b, c) {\n        const aLen = (a !== null ? a.length : 0);\n        const bLen = b.length;\n        const cLen = (c !== null ? c.length : 0);\n        if (aLen === 0 && bLen === 0 && cLen === 0) {\n            return new Uint32Array(0);\n        }\n        if (aLen === 0 && bLen === 0) {\n            return c;\n        }\n        if (bLen === 0 && cLen === 0) {\n            return a;\n        }\n        const result = new Uint32Array(aLen + bLen + cLen);\n        if (a !== null) {\n            result.set(a);\n        }\n        for (let i = 0; i < bLen; i++) {\n            result[aLen + i] = b[i];\n        }\n        if (c !== null) {\n            result.set(c, aLen + bLen);\n        }\n        return result;\n    }\n    nestedLanguageTokenize(embeddedLanguageLine, hasEOL, embeddedLanguageData, offsetDelta) {\n        const nestedLanguageId = embeddedLanguageData.languageId;\n        const embeddedModeState = embeddedLanguageData.state;\n        const nestedLanguageTokenizationSupport = languages.TokenizationRegistry.get(nestedLanguageId);\n        if (!nestedLanguageTokenizationSupport) {\n            this.enterLanguage(nestedLanguageId);\n            this.emit(offsetDelta, '');\n            return embeddedModeState;\n        }\n        const nestedResult = nestedLanguageTokenizationSupport.tokenizeEncoded(embeddedLanguageLine, hasEOL, embeddedModeState);\n        if (offsetDelta !== 0) {\n            for (let i = 0, len = nestedResult.tokens.length; i < len; i += 2) {\n                nestedResult.tokens[i] += offsetDelta;\n            }\n        }\n        this._prependTokens = MonarchModernTokensCollector._merge(this._prependTokens, this._tokens, nestedResult.tokens);\n        this._tokens = [];\n        this._currentLanguageId = 0;\n        this._lastTokenMetadata = 0;\n        return nestedResult.endState;\n    }\n    finalize(endState) {\n        return new languages.EncodedTokenizationResult(MonarchModernTokensCollector._merge(this._prependTokens, this._tokens, null), endState);\n    }\n}\nlet MonarchTokenizer = MonarchTokenizer_1 = class MonarchTokenizer extends Disposable {\n    constructor(languageService, standaloneThemeService, languageId, lexer, _configurationService) {\n        super();\n        this._configurationService = _configurationService;\n        this._languageService = languageService;\n        this._standaloneThemeService = standaloneThemeService;\n        this._languageId = languageId;\n        this._lexer = lexer;\n        this._embeddedLanguages = Object.create(null);\n        this.embeddedLoaded = Promise.resolve(undefined);\n        // Set up listening for embedded modes\n        let emitting = false;\n        this._register(languages.TokenizationRegistry.onDidChange((e) => {\n            if (emitting) {\n                return;\n            }\n            let isOneOfMyEmbeddedModes = false;\n            for (let i = 0, len = e.changedLanguages.length; i < len; i++) {\n                const language = e.changedLanguages[i];\n                if (this._embeddedLanguages[language]) {\n                    isOneOfMyEmbeddedModes = true;\n                    break;\n                }\n            }\n            if (isOneOfMyEmbeddedModes) {\n                emitting = true;\n                languages.TokenizationRegistry.handleChange([this._languageId]);\n                emitting = false;\n            }\n        }));\n        this._maxTokenizationLineLength = this._configurationService.getValue('editor.maxTokenizationLineLength', {\n            overrideIdentifier: this._languageId\n        });\n        this._register(this._configurationService.onDidChangeConfiguration(e => {\n            if (e.affectsConfiguration('editor.maxTokenizationLineLength')) {\n                this._maxTokenizationLineLength = this._configurationService.getValue('editor.maxTokenizationLineLength', {\n                    overrideIdentifier: this._languageId\n                });\n            }\n        }));\n    }\n    getLoadStatus() {\n        const promises = [];\n        for (const nestedLanguageId in this._embeddedLanguages) {\n            const tokenizationSupport = languages.TokenizationRegistry.get(nestedLanguageId);\n            if (tokenizationSupport) {\n                // The nested language is already loaded\n                if (tokenizationSupport instanceof MonarchTokenizer_1) {\n                    const nestedModeStatus = tokenizationSupport.getLoadStatus();\n                    if (nestedModeStatus.loaded === false) {\n                        promises.push(nestedModeStatus.promise);\n                    }\n                }\n                continue;\n            }\n            if (!languages.TokenizationRegistry.isResolved(nestedLanguageId)) {\n                // The nested language is in the process of being loaded\n                promises.push(languages.TokenizationRegistry.getOrCreate(nestedLanguageId));\n            }\n        }\n        if (promises.length === 0) {\n            return {\n                loaded: true\n            };\n        }\n        return {\n            loaded: false,\n            promise: Promise.all(promises).then(_ => undefined)\n        };\n    }\n    getInitialState() {\n        const rootState = MonarchStackElementFactory.create(null, this._lexer.start);\n        return MonarchLineStateFactory.create(rootState, null);\n    }\n    tokenize(line, hasEOL, lineState) {\n        if (line.length >= this._maxTokenizationLineLength) {\n            return nullTokenize(this._languageId, lineState);\n        }\n        const tokensCollector = new MonarchClassicTokensCollector();\n        const endLineState = this._tokenize(line, hasEOL, lineState, tokensCollector);\n        return tokensCollector.finalize(endLineState);\n    }\n    tokenizeEncoded(line, hasEOL, lineState) {\n        if (line.length >= this._maxTokenizationLineLength) {\n            return nullTokenizeEncoded(this._languageService.languageIdCodec.encodeLanguageId(this._languageId), lineState);\n        }\n        const tokensCollector = new MonarchModernTokensCollector(this._languageService, this._standaloneThemeService.getColorTheme().tokenTheme);\n        const endLineState = this._tokenize(line, hasEOL, lineState, tokensCollector);\n        return tokensCollector.finalize(endLineState);\n    }\n    _tokenize(line, hasEOL, lineState, collector) {\n        if (lineState.embeddedLanguageData) {\n            return this._nestedTokenize(line, hasEOL, lineState, 0, collector);\n        }\n        else {\n            return this._myTokenize(line, hasEOL, lineState, 0, collector);\n        }\n    }\n    _findLeavingNestedLanguageOffset(line, state) {\n        let rules = this._lexer.tokenizer[state.stack.state];\n        if (!rules) {\n            rules = monarchCommon.findRules(this._lexer, state.stack.state); // do parent matching\n            if (!rules) {\n                throw monarchCommon.createError(this._lexer, 'tokenizer state is not defined: ' + state.stack.state);\n            }\n        }\n        let popOffset = -1;\n        let hasEmbeddedPopRule = false;\n        for (const rule of rules) {\n            if (!monarchCommon.isIAction(rule.action) || rule.action.nextEmbedded !== '@pop') {\n                continue;\n            }\n            hasEmbeddedPopRule = true;\n            let regex = rule.resolveRegex(state.stack.state);\n            const regexSource = regex.source;\n            if (regexSource.substr(0, 4) === '^(?:' && regexSource.substr(regexSource.length - 1, 1) === ')') {\n                const flags = (regex.ignoreCase ? 'i' : '') + (regex.unicode ? 'u' : '');\n                regex = new RegExp(regexSource.substr(4, regexSource.length - 5), flags);\n            }\n            const result = line.search(regex);\n            if (result === -1 || (result !== 0 && rule.matchOnlyAtLineStart)) {\n                continue;\n            }\n            if (popOffset === -1 || result < popOffset) {\n                popOffset = result;\n            }\n        }\n        if (!hasEmbeddedPopRule) {\n            throw monarchCommon.createError(this._lexer, 'no rule containing nextEmbedded: \"@pop\" in tokenizer embedded state: ' + state.stack.state);\n        }\n        return popOffset;\n    }\n    _nestedTokenize(line, hasEOL, lineState, offsetDelta, tokensCollector) {\n        const popOffset = this._findLeavingNestedLanguageOffset(line, lineState);\n        if (popOffset === -1) {\n            // tokenization will not leave nested language\n            const nestedEndState = tokensCollector.nestedLanguageTokenize(line, hasEOL, lineState.embeddedLanguageData, offsetDelta);\n            return MonarchLineStateFactory.create(lineState.stack, new EmbeddedLanguageData(lineState.embeddedLanguageData.languageId, nestedEndState));\n        }\n        const nestedLanguageLine = line.substring(0, popOffset);\n        if (nestedLanguageLine.length > 0) {\n            // tokenize with the nested language\n            tokensCollector.nestedLanguageTokenize(nestedLanguageLine, false, lineState.embeddedLanguageData, offsetDelta);\n        }\n        const restOfTheLine = line.substring(popOffset);\n        return this._myTokenize(restOfTheLine, hasEOL, lineState, offsetDelta + popOffset, tokensCollector);\n    }\n    _safeRuleName(rule) {\n        if (rule) {\n            return rule.name;\n        }\n        return '(unknown)';\n    }\n    _myTokenize(lineWithoutLF, hasEOL, lineState, offsetDelta, tokensCollector) {\n        tokensCollector.enterLanguage(this._languageId);\n        const lineWithoutLFLength = lineWithoutLF.length;\n        const line = (hasEOL && this._lexer.includeLF ? lineWithoutLF + '\\n' : lineWithoutLF);\n        const lineLength = line.length;\n        let embeddedLanguageData = lineState.embeddedLanguageData;\n        let stack = lineState.stack;\n        let pos = 0;\n        let groupMatching = null;\n        // See https://github.com/microsoft/monaco-editor/issues/1235\n        // Evaluate rules at least once for an empty line\n        let forceEvaluation = true;\n        while (forceEvaluation || pos < lineLength) {\n            const pos0 = pos;\n            const stackLen0 = stack.depth;\n            const groupLen0 = groupMatching ? groupMatching.groups.length : 0;\n            const state = stack.state;\n            let matches = null;\n            let matched = null;\n            let action = null;\n            let rule = null;\n            let enteringEmbeddedLanguage = null;\n            // check if we need to process group matches first\n            if (groupMatching) {\n                matches = groupMatching.matches;\n                const groupEntry = groupMatching.groups.shift();\n                matched = groupEntry.matched;\n                action = groupEntry.action;\n                rule = groupMatching.rule;\n                // cleanup if necessary\n                if (groupMatching.groups.length === 0) {\n                    groupMatching = null;\n                }\n            }\n            else {\n                // otherwise we match on the token stream\n                if (!forceEvaluation && pos >= lineLength) {\n                    // nothing to do\n                    break;\n                }\n                forceEvaluation = false;\n                // get the rules for this state\n                let rules = this._lexer.tokenizer[state];\n                if (!rules) {\n                    rules = monarchCommon.findRules(this._lexer, state); // do parent matching\n                    if (!rules) {\n                        throw monarchCommon.createError(this._lexer, 'tokenizer state is not defined: ' + state);\n                    }\n                }\n                // try each rule until we match\n                const restOfLine = line.substr(pos);\n                for (const rule of rules) {\n                    if (pos === 0 || !rule.matchOnlyAtLineStart) {\n                        matches = restOfLine.match(rule.resolveRegex(state));\n                        if (matches) {\n                            matched = matches[0];\n                            action = rule.action;\n                            break;\n                        }\n                    }\n                }\n            }\n            // We matched 'rule' with 'matches' and 'action'\n            if (!matches) {\n                matches = [''];\n                matched = '';\n            }\n            if (!action) {\n                // bad: we didn't match anything, and there is no action to take\n                // we need to advance the stream or we get progress trouble\n                if (pos < lineLength) {\n                    matches = [line.charAt(pos)];\n                    matched = matches[0];\n                }\n                action = this._lexer.defaultToken;\n            }\n            if (matched === null) {\n                // should never happen, needed for strict null checking\n                break;\n            }\n            // advance stream\n            pos += matched.length;\n            // maybe call action function (used for 'cases')\n            while (monarchCommon.isFuzzyAction(action) && monarchCommon.isIAction(action) && action.test) {\n                action = action.test(matched, matches, state, pos === lineLength);\n            }\n            let result = null;\n            // set the result: either a string or an array of actions\n            if (typeof action === 'string' || Array.isArray(action)) {\n                result = action;\n            }\n            else if (action.group) {\n                result = action.group;\n            }\n            else if (action.token !== null && action.token !== undefined) {\n                // do $n replacements?\n                if (action.tokenSubst) {\n                    result = monarchCommon.substituteMatches(this._lexer, action.token, matched, matches, state);\n                }\n                else {\n                    result = action.token;\n                }\n                // enter embedded language?\n                if (action.nextEmbedded) {\n                    if (action.nextEmbedded === '@pop') {\n                        if (!embeddedLanguageData) {\n                            throw monarchCommon.createError(this._lexer, 'cannot pop embedded language if not inside one');\n                        }\n                        embeddedLanguageData = null;\n                    }\n                    else if (embeddedLanguageData) {\n                        throw monarchCommon.createError(this._lexer, 'cannot enter embedded language from within an embedded language');\n                    }\n                    else {\n                        enteringEmbeddedLanguage = monarchCommon.substituteMatches(this._lexer, action.nextEmbedded, matched, matches, state);\n                    }\n                }\n                // state transformations\n                if (action.goBack) { // back up the stream..\n                    pos = Math.max(0, pos - action.goBack);\n                }\n                if (action.switchTo && typeof action.switchTo === 'string') {\n                    let nextState = monarchCommon.substituteMatches(this._lexer, action.switchTo, matched, matches, state); // switch state without a push...\n                    if (nextState[0] === '@') {\n                        nextState = nextState.substr(1); // peel off starting '@'\n                    }\n                    if (!monarchCommon.findRules(this._lexer, nextState)) {\n                        throw monarchCommon.createError(this._lexer, 'trying to switch to a state \\'' + nextState + '\\' that is undefined in rule: ' + this._safeRuleName(rule));\n                    }\n                    else {\n                        stack = stack.switchTo(nextState);\n                    }\n                }\n                else if (action.transform && typeof action.transform === 'function') {\n                    throw monarchCommon.createError(this._lexer, 'action.transform not supported');\n                }\n                else if (action.next) {\n                    if (action.next === '@push') {\n                        if (stack.depth >= this._lexer.maxStack) {\n                            throw monarchCommon.createError(this._lexer, 'maximum tokenizer stack size reached: [' +\n                                stack.state + ',' + stack.parent.state + ',...]');\n                        }\n                        else {\n                            stack = stack.push(state);\n                        }\n                    }\n                    else if (action.next === '@pop') {\n                        if (stack.depth <= 1) {\n                            throw monarchCommon.createError(this._lexer, 'trying to pop an empty stack in rule: ' + this._safeRuleName(rule));\n                        }\n                        else {\n                            stack = stack.pop();\n                        }\n                    }\n                    else if (action.next === '@popall') {\n                        stack = stack.popall();\n                    }\n                    else {\n                        let nextState = monarchCommon.substituteMatches(this._lexer, action.next, matched, matches, state);\n                        if (nextState[0] === '@') {\n                            nextState = nextState.substr(1); // peel off starting '@'\n                        }\n                        if (!monarchCommon.findRules(this._lexer, nextState)) {\n                            throw monarchCommon.createError(this._lexer, 'trying to set a next state \\'' + nextState + '\\' that is undefined in rule: ' + this._safeRuleName(rule));\n                        }\n                        else {\n                            stack = stack.push(nextState);\n                        }\n                    }\n                }\n                if (action.log && typeof (action.log) === 'string') {\n                    monarchCommon.log(this._lexer, this._lexer.languageId + ': ' + monarchCommon.substituteMatches(this._lexer, action.log, matched, matches, state));\n                }\n            }\n            // check result\n            if (result === null) {\n                throw monarchCommon.createError(this._lexer, 'lexer rule has no well-defined action in rule: ' + this._safeRuleName(rule));\n            }\n            const computeNewStateForEmbeddedLanguage = (enteringEmbeddedLanguage) => {\n                // support language names, mime types, and language ids\n                const languageId = (this._languageService.getLanguageIdByLanguageName(enteringEmbeddedLanguage)\n                    || this._languageService.getLanguageIdByMimeType(enteringEmbeddedLanguage)\n                    || enteringEmbeddedLanguage);\n                const embeddedLanguageData = this._getNestedEmbeddedLanguageData(languageId);\n                if (pos < lineLength) {\n                    // there is content from the embedded language on this line\n                    const restOfLine = lineWithoutLF.substr(pos);\n                    return this._nestedTokenize(restOfLine, hasEOL, MonarchLineStateFactory.create(stack, embeddedLanguageData), offsetDelta + pos, tokensCollector);\n                }\n                else {\n                    return MonarchLineStateFactory.create(stack, embeddedLanguageData);\n                }\n            };\n            // is the result a group match?\n            if (Array.isArray(result)) {\n                if (groupMatching && groupMatching.groups.length > 0) {\n                    throw monarchCommon.createError(this._lexer, 'groups cannot be nested: ' + this._safeRuleName(rule));\n                }\n                if (matches.length !== result.length + 1) {\n                    throw monarchCommon.createError(this._lexer, 'matched number of groups does not match the number of actions in rule: ' + this._safeRuleName(rule));\n                }\n                let totalLen = 0;\n                for (let i = 1; i < matches.length; i++) {\n                    totalLen += matches[i].length;\n                }\n                if (totalLen !== matched.length) {\n                    throw monarchCommon.createError(this._lexer, 'with groups, all characters should be matched in consecutive groups in rule: ' + this._safeRuleName(rule));\n                }\n                groupMatching = {\n                    rule: rule,\n                    matches: matches,\n                    groups: []\n                };\n                for (let i = 0; i < result.length; i++) {\n                    groupMatching.groups[i] = {\n                        action: result[i],\n                        matched: matches[i + 1]\n                    };\n                }\n                pos -= matched.length;\n                // call recursively to initiate first result match\n                continue;\n            }\n            else {\n                // regular result\n                // check for '@rematch'\n                if (result === '@rematch') {\n                    pos -= matched.length;\n                    matched = ''; // better set the next state too..\n                    matches = null;\n                    result = '';\n                    // Even though `@rematch` was specified, if `nextEmbedded` also specified,\n                    // a state transition should occur.\n                    if (enteringEmbeddedLanguage !== null) {\n                        return computeNewStateForEmbeddedLanguage(enteringEmbeddedLanguage);\n                    }\n                }\n                // check progress\n                if (matched.length === 0) {\n                    if (lineLength === 0 || stackLen0 !== stack.depth || state !== stack.state || (!groupMatching ? 0 : groupMatching.groups.length) !== groupLen0) {\n                        continue;\n                    }\n                    else {\n                        throw monarchCommon.createError(this._lexer, 'no progress in tokenizer in rule: ' + this._safeRuleName(rule));\n                    }\n                }\n                // return the result (and check for brace matching)\n                // todo: for efficiency we could pre-sanitize tokenPostfix and substitutions\n                let tokenType = null;\n                if (monarchCommon.isString(result) && result.indexOf('@brackets') === 0) {\n                    const rest = result.substr('@brackets'.length);\n                    const bracket = findBracket(this._lexer, matched);\n                    if (!bracket) {\n                        throw monarchCommon.createError(this._lexer, '@brackets token returned but no bracket defined as: ' + matched);\n                    }\n                    tokenType = monarchCommon.sanitize(bracket.token + rest);\n                }\n                else {\n                    const token = (result === '' ? '' : result + this._lexer.tokenPostfix);\n                    tokenType = monarchCommon.sanitize(token);\n                }\n                if (pos0 < lineWithoutLFLength) {\n                    tokensCollector.emit(pos0 + offsetDelta, tokenType);\n                }\n            }\n            if (enteringEmbeddedLanguage !== null) {\n                return computeNewStateForEmbeddedLanguage(enteringEmbeddedLanguage);\n            }\n        }\n        return MonarchLineStateFactory.create(stack, embeddedLanguageData);\n    }\n    _getNestedEmbeddedLanguageData(languageId) {\n        if (!this._languageService.isRegisteredLanguageId(languageId)) {\n            return new EmbeddedLanguageData(languageId, NullState);\n        }\n        if (languageId !== this._languageId) {\n            // Fire language loading event\n            this._languageService.requestBasicLanguageFeatures(languageId);\n            languages.TokenizationRegistry.getOrCreate(languageId);\n            this._embeddedLanguages[languageId] = true;\n        }\n        const tokenizationSupport = languages.TokenizationRegistry.get(languageId);\n        if (tokenizationSupport) {\n            return new EmbeddedLanguageData(languageId, tokenizationSupport.getInitialState());\n        }\n        return new EmbeddedLanguageData(languageId, NullState);\n    }\n};\nMonarchTokenizer = MonarchTokenizer_1 = __decorate([\n    __param(4, IConfigurationService)\n], MonarchTokenizer);\nexport { MonarchTokenizer };\n/**\n * Searches for a bracket in the 'brackets' attribute that matches the input.\n */\nfunction findBracket(lexer, matched) {\n    if (!matched) {\n        return null;\n    }\n    matched = monarchCommon.fixCase(lexer, matched);\n    const brackets = lexer.brackets;\n    for (const bracket of brackets) {\n        if (bracket.open === matched) {\n            return { token: bracket.token, bracketType: 1 /* monarchCommon.MonarchBracket.Open */ };\n        }\n        else if (bracket.close === matched) {\n            return { token: bracket.token, bracketType: -1 /* monarchCommon.MonarchBracket.Close */ };\n        }\n    }\n    return null;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../../platform/instantiation/common/instantiation.js';\nexport const IStandaloneThemeService = createDecorator('themeService');\n"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","StandaloneCodeEditorService","AbstractCodeEditorService","constructor","contextKeyService","themeService","super","this","_register","onCodeEditorAdd","_checkContextKey","onCodeEditorRemove","_editorIsOpen","createKey","_activeCodeEditor","registerCodeEditorOpenHandler","async","input","source","sideBySide","doOpenEditor","hasCodeEditor","editor","listCodeEditors","isSimpleWidget","set","setActiveCodeEditor","activeCodeEditor","getActiveCodeEditor","findModel","resource","schema","scheme","Schemas","http","https","windowOpenNoOpener","toString","selection","options","endLineNumber","endColumn","setSelection","revealRangeInCenter","pos","lineNumber","startLineNumber","column","startColumn","setPosition","revealPositionInCenter","model","getModel","uri","IContextKeyService","IThemeService","registerSingleton","ICodeEditorService","LAST_GENERATED_COMMAND_ID","ariaDomNodeCreated","StandaloneCodeEditor","CodeEditorWidget","domElement","_options","instantiationService","codeEditorService","commandService","hoverService","keybindingService","notificationService","accessibilityService","languageConfigurationService","languageFeaturesService","ariaLabel","StandaloneCodeEditorNLS","editorViewAccessibleLabel","accessibilityHelpMessage","StandaloneKeybindingService","_standaloneKeybindingService","parent","aria","mainWindow","document","body","createAriaDomNode","ariaContainerElement","setHoverDelegateFactory","placement","enableInstantHover","createInstance","WorkbenchHoverDelegate","setBaseLayerHoverDelegate","addCommand","keybinding","handler","context","console","warn","commandId","whenExpression","ContextKeyExpr","deserialize","addDynamicKeybinding","createContextKey","defaultValue","_contextKeyService","addAction","_descriptor","_this","id","label","run","Error","Disposable","None","precondition","and","equals","getId","keybindings","keybindingsWhen","keybindingContext","contextMenuGroupId","contextMenuOrder","_accessor","_len","args","Array","_key","Promise","resolve","toDispose","DisposableStore","uniqueId","add","CommandsRegistry","registerCommand","menuItem","command","title","when","group","order","MenuRegistry","appendMenuItem","MenuId","EditorContext","isArray","kb","internalAction","InternalEditorAction","undefined","_len2","_key2","_actions","toDisposable","delete","_triggerCommand","handlerId","payload","_codeEditorService","IInstantiationService","ICommandService","IHoverService","IKeybindingService","INotificationService","IAccessibilityService","ILanguageConfigurationService","ILanguageFeaturesService","StandaloneEditor","configurationService","modelService","languageService","updateConfigurationService","themeDomRegistration","registerEditorContainer","theme","setTheme","autoDetectHighContrast","setAutoDetectHighContrast","Boolean","_model","_configurationService","_standaloneThemeService","languageId","getLanguageIdByMimeType","language","PLAINTEXT_LANGUAGE_ID","createTextModel","value","_ownsModel","_attachModel","e","oldModelUrl","newModelUrl","_onDidChangeModel","fire","dispose","updateOptions","newOptions","_postDetachModelCleanup","detachedModel","IStandaloneThemeService","IConfigurationService","IModelService","ILanguageService","StandaloneDiffEditor2","DiffEditorWidget","contextMenuService","editorProgressService","clipboardService","accessibilitySignalService","_createInnerEditor","container","getOriginalEditor","getModifiedEditor","descriptor","firstLF","indexOf","firstLine","substring","doCreateModel","createByFilepathOrFirstLine","createById","languageSelection","createModel","IContextMenuService","IEditorProgressService","IClipboardService","IAccessibilitySignalService","create","override","StandaloneServices","initialize","onDidCreateEditor","listener","get","onDidCreateDiffEditor","onDiffEditorAdd","getEditors","getDiffEditors","listDiffEditors","createDiffEditor","createMultiFileDiffEditor","MultiDiffEditorWidget","addEditorAction","accessor","EditorCommand","runEditorCommand","addDynamicKeybindings","map","addKeybindingRule","rule","addKeybindingRules","rules","commandArgs","setModelLanguage","mimeTypeOrLanguageId","setLanguage","setModelMarkers","owner","markers","IMarkerService","changeOne","removeAllMarkers","changeAll","getModelMarkers","filter","read","onDidChangeMarkers","onMarkerChanged","getModels","onDidCreateModel","onModelAdded","onWillDisposeModel","onModelRemoved","onDidChangeModelLanguage","onModelLanguageChanged","oldLanguage","oldLanguageId","createWebWorker","opts","actualCreateWebWorker","colorizeElement","domNode","Colorizer","then","colorize","text","colorizeModelLine","tabSize","tokenize","languages","getOrCreate","tokenizationSupport","getInitialState","NullState","line","hasEOL","state","nullTokenize","getSafeTokenizationSupport","lines","splitLines","result","len","tokenizationResult","tokens","endState","defineTheme","themeName","themeData","remeasureFonts","FontMeasurements","clearAllFontInfos","registerLinkOpener","opener","IOpenerService","registerOpener","open","URI","parse","registerEditorOpener","_a","selectionOrPosition","openCodeEditor","createMonacoEditorAPI","AccessibilitySupport","standaloneEnums","ContentWidgetPositionPreference","CursorChangeReason","DefaultEndOfLine","EditorAutoIndentStrategy","EditorOption","EndOfLinePreference","EndOfLineSequence","MinimapPosition","MinimapSectionHeaderStyle","MouseTargetType","OverlayWidgetPositionPreference","OverviewRulerLane","GlyphMarginLane","RenderLineNumbersType","RenderMinimap","ScrollbarVisibility","ScrollType","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","TrackedRangeStickiness","WrappingIndent","InjectedTextCursorStops","PositionAffinity","ShowLightbulbIconMode","ConfigurationChangedEvent","BareFontInfo","FontInfo","TextModelResolvedOptions","FindMatch","ApplyUpdateResult","EditorZoom","EditorType","EditorOptions","bool","prop","defValue","string","createKeywordMatcher","arr","caseInsensitive","x","toLowerCase","hash","array","arrayToHash","word","hasOwnProperty","compileRegExp","lexer","str","handleSn","replace","hadExpansion","n","s","attr","sub","RegExp","monarchCommon","flags","ignoreCase","unicode","match","lastState","lastRegEx","createGuard","ruleName","tkey","val","scrut","oppat","matches","parseInt","tester","op","pat","test","words","elemType","obj","el","isArrayOf","elem","inWords","re","patx","eos","patexp","split","name","scrutinee","num","parts","unshift","selectScrutinee","compileAction","action","token","newAction","tokenSubst","bracket","next","substr","goBack","switchTo","log","nextEmbedded","usesEmbedded","results","cases","push","def","defaultToken","_case","Rule","regex","matchOnlyAtLineStart","setRegex","sregex","setAction","act","resolveRegex","compile","json","includeLF","noThrow","maxStack","start","tokenPostfix","lexerMin","addRules","newrules","include","tokenizer","newrule","rule1","matchOnlyAtStart","stateNames","brackets","close","register","ModesRegistry","registerLanguage","getLanguages","concat","getEncodedLanguageId","languageIdCodec","encodeLanguageId","onLanguage","callback","withServices","disposable","onDidRequestRichLanguageFeatures","encounteredLanguageId","onLanguageEncountered","onDidRequestBasicLanguageFeatures","setLanguageConfiguration","configuration","isRegisteredLanguageId","EncodedTokenizationSupportAdapter","actual","_languageId","_actual","TokenizationSupportAdapter","adaptTokenize","tokenizeEncoded","_languageService","_toClassicTokens","previousStartIndex","t","startIndex","scopes","actualResult","_toBinaryTokens","tokenTheme","getColorTheme","resultLen","metadata","Uint32Array","isThenable","setColorMap","colorMap","standaloneThemeService","Color","fromHex","setColorMapOverride","createTokenizationSupportAdapter","provider","isEncodedTokensProvider","registerTokensProviderFactory","factory","adaptedFactory","MonarchTokenizer","registerFactory","setTokensProvider","setMonarchTokensProvider","languageDef","registerReferenceProvider","languageSelector","referenceProvider","registerRenameProvider","renameProvider","registerNewSymbolNameProvider","newSymbolNamesProvider","registerSignatureHelpProvider","signatureHelpProvider","registerHoverProvider","hoverProvider","provideHover","position","getWordAtPosition","range","Range","registerDocumentSymbolProvider","documentSymbolProvider","registerDocumentHighlightProvider","documentHighlightProvider","registerLinkedEditingRangeProvider","linkedEditingRangeProvider","registerDefinitionProvider","definitionProvider","registerImplementationProvider","implementationProvider","registerTypeDefinitionProvider","typeDefinitionProvider","registerCodeLensProvider","codeLensProvider","registerCodeActionProvider","codeActionProvider","providedCodeActionKinds","documentation","provideCodeActions","m","areIntersectingOrTouching","only","trigger","resolveCodeAction","registerDocumentFormattingEditProvider","documentFormattingEditProvider","registerDocumentRangeFormattingEditProvider","documentRangeFormattingEditProvider","registerOnTypeFormattingEditProvider","onTypeFormattingEditProvider","registerLinkProvider","linkProvider","registerCompletionItemProvider","completionProvider","registerColorProvider","colorProvider","registerFoldingRangeProvider","foldingRangeProvider","registerDeclarationProvider","declarationProvider","registerSelectionRangeProvider","selectionRangeProvider","registerDocumentSemanticTokensProvider","documentSemanticTokensProvider","registerDocumentRangeSemanticTokensProvider","documentRangeSemanticTokensProvider","registerInlineCompletionsProvider","inlineCompletionsProvider","registerInlineEditProvider","inlineEditProvider","registerInlayHintsProvider","inlayHintsProvider","createMonacoLanguagesAPI","DocumentHighlightKind","CompletionItemKind","CompletionItemTag","CompletionItemInsertTextRule","SymbolKind","SymbolTag","IndentAction","CompletionTriggerKind","SignatureHelpTriggerKind","InlayHintKind","InlineCompletionTriggerKind","InlineEditTriggerKind","CodeActionTriggerType","NewSymbolNameTag","NewSymbolNameTriggerKind","PartialAcceptTriggerKind","HoverVerbosityAction","FoldingRangeKind","SelectedSuggestionInfo","StandaloneLayoutService","mainContainer","_b","firstOrDefault","getContainerDomNode","activeContainer","getFocusedCodeEditor","mainContainerDimension","dom","activeContainerDimension","containers","coalesce","codeEditor","getContainer","whenContainerStylesLoaded","focus","onDidLayoutMainContainer","Event","onDidLayoutActiveContainer","onDidLayoutContainer","onDidChangeActiveContainer","onDidAddContainer","mainContainerOffset","top","quickPickTop","activeContainerOffset","EditorScopedLayoutService","_container","ILayoutService","SimpleModel","disposed","_onWillDispose","Emitter","textEditorModel","StandaloneTextModelService","createModelReference","ImmortalReference","reject","StandaloneEditorProgressService","show","NULL_PROGRESS_RUNNER","showWhile","promise","delay","done","total","worked","StandaloneNotificationService","info","message","notify","severity","Severity","Info","Warning","error","notification","NO_OP","prompt","choices","status","NoOpNotification","StandaloneCommandService","_onWillExecuteCommand","_onDidExecuteCommand","onDidExecuteCommand","event","_instantiationService","executeCommand","getCommand","invokeFunction","apply","err","AbstractKeybindingService","telemetryService","logService","_cachedResolver","_dynamicKeybindings","_domNodeListeners","addContainer","disposables","KEY_DOWN","keyEvent","StandardKeyboardEvent","_dispatch","preventDefault","stopPropagation","KEY_UP","_singleModifierDispatch","DomNodeListeners","removeContainer","domNodeListeners","splice","addCodeEditor","getOption","forEach","addDiffEditor","diffEditor","onDiffEditorRemove","combinedDisposable","entries","decodeKeybinding","OS","weight1","weight2","extensionId","isBuiltinExtension","updateResolver","_onDidUpdateKeybindings","_getResolver","defaults","_toNormalizedKeybindingItems","KeybindingsRegistry","getDefaultKeybindings","overrides","KeybindingResolver","_log","_documentHasFocus","hasFocus","items","isDefault","item","resolvedKeybindings","USLayoutResolvedKeybinding","resolveKeybinding","resolvedKeybinding","ResolvedKeybindingItem","resolveKeyboardEvent","keyboardEvent","chord","KeyCodeChord","ctrlKey","shiftKey","altKey","metaKey","keyCode","ITelemetryService","ILogService","isConfigurationOverrides","thing","overrideIdentifier","StandaloneConfigurationService","_onDidChangeConfiguration","onDidChangeConfiguration","defaultConfiguration","DefaultConfiguration","_configuration","Configuration","reload","ConfigurationModel","createEmptyModel","ResourceMap","getValue","arg1","arg2","section","updateValues","values","previous","data","toData","changedKeys","entry","updateValue","configurationChangeEvent","ConfigurationChangeEvent","keys","arg3","arg4","inspect","StandaloneResourceConfigurationService","affectedKeys","affectsConfiguration","Pos","isIPosition","getLanguage","getLanguageIdAtPosition","getLanguageId","guessLanguageIdByFilepathOrFirstLine","StandaloneResourcePropertiesService","getEOL","eol","isLinux","isMacintosh","StandaloneWorkspaceContextService","from","SCHEME","authority","path","workspace","STANDALONE_EDITOR_WORKSPACE_ID","folders","WorkspaceFolder","index","getWorkspace","getWorkspaceFolder","isDiffEditor","toUpdate","isEditorConfigurationKey","isDiffEditorConfigurationKey","StandaloneBulkEditService","_modelService","hasPreviewHandler","editsIn","edits","ResourceEdit","convert","textEdits","Map","edit","ResourceTextEdit","versionId","getVersionId","EditOperation","replaceMove","lift","textEdit","totalEdits","totalFiles","pushStackElement","pushEditOperations","ariaSummary","strings","StandaloneServicesNLS","bulkEditServiceSummary","isApplied","StandaloneContextViewService","ContextViewService","layoutService","showContextView","delegate","shadowRoot","StandaloneLanguageService","LanguageService","StandaloneLogService","LogService","ConsoleLogger","StandaloneContextMenuService","ContextMenuService","contextViewService","menuService","configure","blockMouse","IContextViewService","IMenuService","ITextResourceConfigurationService","ITextResourcePropertiesService","IWorkspaceContextService","ILabelService","getUriLabel","fsPath","getUriBasenameLabel","basename","publicLog2","IDialogService","confirm","confirmation","confirmed","doConfirm","detail","checkboxChecked","messageText","promptButtons","buttons","cancelButton","type","IEnvironmentService","isExtensionDevelopment","isBuilt","MarkerService","StandaloneThemeService","ModelService","IMarkerDecorationsService","MarkerDecorationsService","ContextKeyService","IProgressService","withProgress","task","onDidCancel","report","IStorageService","InMemoryStorageService","IEditorWorkerService","EditorWorkerService","IBulkEditService","IWorkspaceTrustManagementService","_neverEmitter","onDidChangeTrust","isWorkspaceTrusted","ITextModelService","AccessibilityService","IListService","ListService","IQuickInputService","StandaloneQuickInputService","OpenerService","BrowserClipboardService","MenuService","playSignal","cue","serviceCollection","ServiceCollection","getSingletonServiceDescriptors","InstantiationService","serviceId","initialized","SyncDescriptor","onDidInitialize","serviceIdentifier","createDecorator","editorFeatures","getEditorFeatures","feature","onUnexpectedError","vs","base","inherit","foreground","background","fontStyle","colors","editorBackground","editorForeground","editorInactiveSelection","editorIndentGuide1","editorActiveIndentGuide1","editorSelectionHighlight","vs_dark","hc_black","hc_light","VS_LIGHT_THEME_NAME","VS_DARK_THEME_NAME","HC_BLACK_THEME_NAME","HC_LIGHT_THEME_NAME","colorRegistry","Registry","as","Extensions","ColorContribution","themingRegistry","ThemingExtensions","ThemingContribution","StandaloneTheme","standaloneThemeData","semanticHighlighting","isBuiltinTheme","defaultColors","_tokenTheme","notifyBaseUpdated","getColors","baseData","getBuiltinRules","has","getColor","colorId","useDefault","color","getDefault","resolveDefaultColor","defines","ColorScheme","LIGHT","HIGH_CONTRAST_DARK","HIGH_CONTRAST_LIGHT","DARK","encodedTokensColors","TokenTheme","createFromRawTokenTheme","getTokenStyleMetadata","modifiers","modelLanguage","_match","join","TokenMetadata","getForeground","getFontStyle","italic","bold","underline","strikethrough","builtinTheme","newBuiltInTheme","_onColorThemeChange","onDidColorThemeChange","_onProductIconThemeChange","onDidProductIconThemeChange","_environment","_builtInProductIconTheme","UnthemedProductIconTheme","_autoDetectHighContrast","_knownThemes","iconsStyleSheet","getIconsStyleSheet","_codiconCSS","getCSS","_themeCSS","_allCSS","_globalStyleElement","_styleElements","_colorMapOverride","_onOSSchemeChanged","onDidChange","_updateCSS","addMatchMediaChangeListener","_registerShadowDomContainer","_registerRegularEditorContainer","style","className","textContent","styleElement","_theme","colorMapOverride","_updateThemeOrColorMap","_updateActualTheme","desiredTheme","wantsHighContrast","matchMedia","isHighContrast","newThemeName","isDark","cssRules","hasRule","ruleCollector","addRule","getThemingParticipants","p","colorVariables","asCssVariableName","getColorMap","generateTokensCSSForColorMap","TokenizationRegistry","getFileIconTheme","hasFileIcons","hasFolderIcons","hidesExplorerArrows","getProductIconTheme","ToggleHighContrast","EditorAction","ToggleHighContrastNLS","toggleHighContrast","alias","_originalThemeName","currentTheme","registerEditorAction","isFuzzyAction","what","isFuzzyActionArr","isString","isIAction","empty","fixCase","sanitize","msg","createError","substituteMatches","stateMatches","full","dollar","ofs","substituteMatchesRe","findRules","inState","idx","lastIndexOf","stateExists","MonarchTokenizer_1","MonarchStackElementFactory","_INSTANCE","maxCacheDepth","_maxCacheDepth","_entries","depth","MonarchStackElement","stackElementId","getStackElementId","element","_equals","a","b","other","pop","popall","EmbeddedLanguageData","clone","MonarchLineStateFactory","stack","embeddedLanguageData","MonarchLineState","MonarchClassicTokensCollector","_tokens","_lastTokenType","_lastTokenLanguage","enterLanguage","emit","startOffset","nestedLanguageTokenize","embeddedLanguageLine","offsetDelta","nestedLanguageId","embeddedModeState","nestedLanguageTokenizationSupport","nestedResult","offset","finalize","MonarchModernTokensCollector","_prependTokens","_currentLanguageId","_lastTokenMetadata","_merge","aLen","bLen","cLen","_lexer","_embeddedLanguages","embeddedLoaded","emitting","isOneOfMyEmbeddedModes","changedLanguages","handleChange","_maxTokenizationLineLength","getLoadStatus","promises","nestedModeStatus","loaded","isResolved","all","_","rootState","lineState","tokensCollector","endLineState","_tokenize","nullTokenizeEncoded","collector","_nestedTokenize","_myTokenize","_findLeavingNestedLanguageOffset","popOffset","hasEmbeddedPopRule","regexSource","search","nestedEndState","nestedLanguageLine","restOfTheLine","_safeRuleName","lineWithoutLF","lineWithoutLFLength","lineLength","groupMatching","forceEvaluation","pos0","stackLen0","groupLen0","groups","matched","enteringEmbeddedLanguage","groupEntry","shift","restOfLine","charAt","Math","max","nextState","transform","computeNewStateForEmbeddedLanguage","getLanguageIdByLanguageName","_getNestedEmbeddedLanguageData","totalLen","tokenType","rest","findBracket","requestBasicLanguageFeatures","bracketType"],"sourceRoot":""}