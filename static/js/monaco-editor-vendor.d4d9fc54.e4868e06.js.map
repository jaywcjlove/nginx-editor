{"version":3,"file":"static/js/monaco-editor-vendor.d4d9fc54.e4868e06.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHints.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsLocations.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsController.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsContribution.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/consts.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/utils.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostText.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionToGhostText.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/suggestWidgetInlineCompletionProvider.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/suggestWidgetPreviewModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextController.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextHoverParticipant.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostText.contribution.js","../node_modules/monaco-editor/esm/vs/editor/contrib/lineSelection/browser/lineSelection.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/copyLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/moveLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/sortLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/linesOperations.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linkedEditing/browser/linkedEditing.js","../node_modules/monaco-editor/esm/vs/editor/contrib/links/browser/getLinks.js","../node_modules/monaco-editor/esm/vs/editor/contrib/links/browser/links.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { URI } from '../../../../base/common/uri.js';\nexport class InlayHintAnchor {\n    constructor(range, direction) {\n        this.range = range;\n        this.direction = direction;\n    }\n}\nexport class InlayHintItem {\n    constructor(hint, anchor, provider) {\n        this.hint = hint;\n        this.anchor = anchor;\n        this.provider = provider;\n        this._isResolved = false;\n    }\n    with(delta) {\n        const result = new InlayHintItem(this.hint, delta.anchor, this.provider);\n        result._isResolved = this._isResolved;\n        result._currentResolve = this._currentResolve;\n        return result;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.provider.resolveInlayHint !== 'function') {\n                return;\n            }\n            if (this._currentResolve) {\n                // wait for an active resolve operation and try again\n                // when that's done.\n                yield this._currentResolve;\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                return this.resolve(token);\n            }\n            if (!this._isResolved) {\n                this._currentResolve = this._doResolve(token)\n                    .finally(() => this._currentResolve = undefined);\n            }\n            yield this._currentResolve;\n        });\n    }\n    _doResolve(token) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const newHint = yield Promise.resolve(this.provider.resolveInlayHint(this.hint, token));\n                this.hint.tooltip = (_a = newHint === null || newHint === void 0 ? void 0 : newHint.tooltip) !== null && _a !== void 0 ? _a : this.hint.tooltip;\n                this.hint.label = (_b = newHint === null || newHint === void 0 ? void 0 : newHint.label) !== null && _b !== void 0 ? _b : this.hint.label;\n                this._isResolved = true;\n            }\n            catch (err) {\n                onUnexpectedExternalError(err);\n                this._isResolved = false;\n            }\n        });\n    }\n}\nexport class InlayHintsFragments {\n    constructor(ranges, data, model) {\n        this._disposables = new DisposableStore();\n        this.ranges = ranges;\n        this.provider = new Set();\n        const items = [];\n        for (const [list, provider] of data) {\n            this._disposables.add(list);\n            this.provider.add(provider);\n            for (const hint of list.hints) {\n                // compute the range to which the item should be attached to\n                const position = model.validatePosition(hint.position);\n                let direction = 'before';\n                const wordRange = InlayHintsFragments._getRangeAtPosition(model, position);\n                let range;\n                if (wordRange.getStartPosition().isBefore(position)) {\n                    range = Range.fromPositions(wordRange.getStartPosition(), position);\n                    direction = 'after';\n                }\n                else {\n                    range = Range.fromPositions(position, wordRange.getEndPosition());\n                    direction = 'before';\n                }\n                items.push(new InlayHintItem(hint, new InlayHintAnchor(range, direction), provider));\n            }\n        }\n        this.items = items.sort((a, b) => Position.compare(a.hint.position, b.hint.position));\n    }\n    static create(registry, model, ranges, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = [];\n            const promises = registry.ordered(model).reverse().map(provider => ranges.map((range) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const result = yield provider.provideInlayHints(model, range, token);\n                    if (result === null || result === void 0 ? void 0 : result.hints.length) {\n                        data.push([result, provider]);\n                    }\n                }\n                catch (err) {\n                    onUnexpectedExternalError(err);\n                }\n            })));\n            yield Promise.all(promises.flat());\n            if (token.isCancellationRequested || model.isDisposed()) {\n                throw new CancellationError();\n            }\n            return new InlayHintsFragments(ranges, data, model);\n        });\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    static _getRangeAtPosition(model, position) {\n        const line = position.lineNumber;\n        const word = model.getWordAtPosition(position);\n        if (word) {\n            // always prefer the word range\n            return new Range(line, word.startColumn, line, word.endColumn);\n        }\n        model.tokenization.tokenizeIfCheap(line);\n        const tokens = model.tokenization.getLineTokens(line);\n        const offset = position.column - 1;\n        const idx = tokens.findTokenIndexAtOffset(offset);\n        let start = tokens.getStartOffset(idx);\n        let end = tokens.getEndOffset(idx);\n        if (end - start === 1) {\n            // single character token, when at its end try leading/trailing token instead\n            if (start === offset && idx > 1) {\n                // leading token\n                start = tokens.getStartOffset(idx - 1);\n                end = tokens.getEndOffset(idx - 1);\n            }\n            else if (end === offset && idx < tokens.getCount() - 1) {\n                // trailing token\n                start = tokens.getStartOffset(idx + 1);\n                end = tokens.getEndOffset(idx + 1);\n            }\n        }\n        return new Range(line, start + 1, line, end + 1);\n    }\n}\nexport function asCommandLink(command) {\n    return URI.from({\n        scheme: Schemas.command,\n        path: command.id,\n        query: command.arguments && encodeURIComponent(JSON.stringify(command.arguments))\n    }).toString();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Action, Separator } from '../../../../base/common/actions.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { EditorExtensionsRegistry } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { DefinitionAction, SymbolNavigationAction, SymbolNavigationAnchor } from '../../gotoSymbol/browser/goToCommands.js';\nimport { PeekContext } from '../../peekView/browser/peekView.js';\nimport { isIMenuItem, MenuId, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nexport function showGoToContextMenu(accessor, editor, anchor, part) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const resolverService = accessor.get(ITextModelService);\n        const contextMenuService = accessor.get(IContextMenuService);\n        const commandService = accessor.get(ICommandService);\n        const instaService = accessor.get(IInstantiationService);\n        const notificationService = accessor.get(INotificationService);\n        yield part.item.resolve(CancellationToken.None);\n        if (!part.part.location) {\n            return;\n        }\n        const location = part.part.location;\n        const menuActions = [];\n        // from all registered (not active) context menu actions select those\n        // that are a symbol navigation action\n        const filter = new Set(MenuRegistry.getMenuItems(MenuId.EditorContext)\n            .map(item => isIMenuItem(item) ? item.command.id : ''));\n        for (const delegate of EditorExtensionsRegistry.getEditorActions()) {\n            if (delegate instanceof SymbolNavigationAction && filter.has(delegate.id)) {\n                menuActions.push(new Action(delegate.id, delegate.label, undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                    const ref = yield resolverService.createModelReference(location.uri);\n                    try {\n                        yield instaService.invokeFunction(delegate.run.bind(delegate), editor, new SymbolNavigationAnchor(ref.object.textEditorModel, Range.getStartPosition(location.range)));\n                    }\n                    finally {\n                        ref.dispose();\n                    }\n                })));\n            }\n        }\n        if (part.part.command) {\n            const { command } = part.part;\n            menuActions.push(new Separator());\n            menuActions.push(new Action(command.id, command.title, undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                var _b;\n                try {\n                    yield commandService.executeCommand(command.id, ...((_b = command.arguments) !== null && _b !== void 0 ? _b : []));\n                }\n                catch (err) {\n                    notificationService.notify({\n                        severity: Severity.Error,\n                        source: part.item.provider.displayName,\n                        message: err\n                    });\n                }\n            })));\n        }\n        // show context menu\n        const useShadowDOM = editor.getOption(117 /* EditorOption.useShadowDOM */);\n        contextMenuService.showContextMenu({\n            domForShadowRoot: useShadowDOM ? (_a = editor.getDomNode()) !== null && _a !== void 0 ? _a : undefined : undefined,\n            getAnchor: () => {\n                const box = dom.getDomNodePagePosition(anchor);\n                return { x: box.left, y: box.top + box.height + 8 };\n            },\n            getActions: () => menuActions,\n            onHide: () => {\n                editor.focus();\n            },\n            autoSelectFirstItem: true,\n        });\n    });\n}\nexport function goToDefinitionWithLocation(accessor, event, editor, location) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const resolverService = accessor.get(ITextModelService);\n        const ref = yield resolverService.createModelReference(location.uri);\n        yield editor.invokeWithinContext((accessor) => __awaiter(this, void 0, void 0, function* () {\n            const openToSide = event.hasSideBySideModifier;\n            const contextKeyService = accessor.get(IContextKeyService);\n            const isInPeek = PeekContext.inPeekEditor.getValue(contextKeyService);\n            const canPeek = !openToSide && editor.getOption(80 /* EditorOption.definitionLinkOpensInPeek */) && !isInPeek;\n            const action = new DefinitionAction({ openToSide, openInPeek: canPeek, muteMessage: true }, { alias: '', label: '', id: '', precondition: undefined });\n            return action.run(accessor, editor, { model: ref.object.textEditorModel, position: Range.getStartPosition(location.range) });\n        }));\n        ref.dispose();\n    });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ModifierKeyEmitter } from '../../../../base/browser/dom.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DynamicCssRules } from '../../../browser/editorDom.js';\nimport { EDITOR_FONT_DEFAULTS } from '../../../common/config/editorOptions.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport * as languages from '../../../common/languages.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { InlayHintAnchor, InlayHintsFragments } from './inlayHints.js';\nimport { goToDefinitionWithLocation, showGoToContextMenu } from './inlayHintsLocations.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport * as colors from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\n// --- hint caching service (per session)\nclass InlayHintsCache {\n    constructor() {\n        this._entries = new LRUCache(50);\n    }\n    get(model) {\n        const key = InlayHintsCache._key(model);\n        return this._entries.get(key);\n    }\n    set(model, value) {\n        const key = InlayHintsCache._key(model);\n        this._entries.set(key, value);\n    }\n    static _key(model) {\n        return `${model.uri.toString()}/${model.getVersionId()}`;\n    }\n}\nconst IInlayHintsCache = createDecorator('IInlayHintsCache');\nregisterSingleton(IInlayHintsCache, InlayHintsCache, true);\n// --- rendered label\nexport class RenderedInlayHintLabelPart {\n    constructor(item, index) {\n        this.item = item;\n        this.index = index;\n    }\n    get part() {\n        const label = this.item.hint.label;\n        if (typeof label === 'string') {\n            return { label };\n        }\n        else {\n            return label[this.index];\n        }\n    }\n}\nclass ActiveInlayHintInfo {\n    constructor(part, hasTriggerModifier) {\n        this.part = part;\n        this.hasTriggerModifier = hasTriggerModifier;\n    }\n}\n// --- controller\nlet InlayHintsController = class InlayHintsController {\n    constructor(_editor, _languageFeaturesService, _featureDebounce, _inlayHintsCache, _commandService, _notificationService, _instaService) {\n        this._editor = _editor;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._inlayHintsCache = _inlayHintsCache;\n        this._commandService = _commandService;\n        this._notificationService = _notificationService;\n        this._instaService = _instaService;\n        this._disposables = new DisposableStore();\n        this._sessionDisposables = new DisposableStore();\n        this._decorationsMetadata = new Map();\n        this._ruleFactory = new DynamicCssRules(this._editor);\n        this._activeRenderMode = 0 /* RenderMode.Normal */;\n        this._debounceInfo = _featureDebounce.for(_languageFeaturesService.inlayHintsProvider, 'InlayHint', { min: 25 });\n        this._disposables.add(_languageFeaturesService.inlayHintsProvider.onDidChange(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModel(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModelLanguage(() => this._update()));\n        this._disposables.add(_editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(129 /* EditorOption.inlayHints */)) {\n                this._update();\n            }\n        }));\n        this._update();\n    }\n    static get(editor) {\n        var _a;\n        return (_a = editor.getContribution(InlayHintsController.ID)) !== null && _a !== void 0 ? _a : undefined;\n    }\n    dispose() {\n        this._sessionDisposables.dispose();\n        this._removeAllDecorations();\n        this._disposables.dispose();\n    }\n    _update() {\n        this._sessionDisposables.clear();\n        this._removeAllDecorations();\n        const options = this._editor.getOption(129 /* EditorOption.inlayHints */);\n        if (options.enabled === 'off') {\n            return;\n        }\n        const model = this._editor.getModel();\n        if (!model || !this._languageFeaturesService.inlayHintsProvider.has(model)) {\n            return;\n        }\n        // iff possible, quickly update from cache\n        const cached = this._inlayHintsCache.get(model);\n        if (cached) {\n            this._updateHintsDecorators([model.getFullModelRange()], cached);\n        }\n        this._sessionDisposables.add(toDisposable(() => {\n            // cache items when switching files etc\n            if (!model.isDisposed()) {\n                this._cacheHintsForFastRestore(model);\n            }\n        }));\n        let cts;\n        const watchedProviders = new Set();\n        const scheduler = new RunOnceScheduler(() => __awaiter(this, void 0, void 0, function* () {\n            const t1 = Date.now();\n            cts === null || cts === void 0 ? void 0 : cts.dispose(true);\n            cts = new CancellationTokenSource();\n            const listener = model.onWillDispose(() => cts === null || cts === void 0 ? void 0 : cts.cancel());\n            try {\n                const myToken = cts.token;\n                const inlayHints = yield InlayHintsFragments.create(this._languageFeaturesService.inlayHintsProvider, model, this._getHintsRanges(), myToken);\n                scheduler.delay = this._debounceInfo.update(model, Date.now() - t1);\n                if (myToken.isCancellationRequested) {\n                    inlayHints.dispose();\n                    return;\n                }\n                // listen to provider changes\n                for (const provider of inlayHints.provider) {\n                    if (typeof provider.onDidChangeInlayHints === 'function' && !watchedProviders.has(provider)) {\n                        watchedProviders.add(provider);\n                        this._sessionDisposables.add(provider.onDidChangeInlayHints(() => {\n                            if (!scheduler.isScheduled()) { // ignore event when request is already scheduled\n                                scheduler.schedule();\n                            }\n                        }));\n                    }\n                }\n                this._sessionDisposables.add(inlayHints);\n                this._updateHintsDecorators(inlayHints.ranges, inlayHints.items);\n                this._cacheHintsForFastRestore(model);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                cts.dispose();\n                listener.dispose();\n            }\n        }), this._debounceInfo.get(model));\n        this._sessionDisposables.add(scheduler);\n        this._sessionDisposables.add(toDisposable(() => cts === null || cts === void 0 ? void 0 : cts.dispose(true)));\n        scheduler.schedule(0);\n        this._sessionDisposables.add(this._editor.onDidScrollChange((e) => {\n            // update when scroll position changes\n            // uses scrollTopChanged has weak heuristic to differenatiate between scrolling due to\n            // typing or due to \"actual\" scrolling\n            if (e.scrollTopChanged || !scheduler.isScheduled()) {\n                scheduler.schedule();\n            }\n        }));\n        this._sessionDisposables.add(this._editor.onDidChangeModelContent((e) => {\n            // update less aggressive when typing\n            const delay = Math.max(scheduler.delay, 1250);\n            scheduler.schedule(delay);\n        }));\n        if (options.enabled === 'on') {\n            // different \"on\" modes: always\n            this._activeRenderMode = 0 /* RenderMode.Normal */;\n        }\n        else {\n            // different \"on\" modes: offUnlessPressed, or onUnlessPressed\n            let defaultMode;\n            let altMode;\n            if (options.enabled === 'onUnlessPressed') {\n                defaultMode = 0 /* RenderMode.Normal */;\n                altMode = 1 /* RenderMode.Invisible */;\n            }\n            else {\n                defaultMode = 1 /* RenderMode.Invisible */;\n                altMode = 0 /* RenderMode.Normal */;\n            }\n            this._activeRenderMode = defaultMode;\n            this._sessionDisposables.add(ModifierKeyEmitter.getInstance().event(e => {\n                if (!this._editor.hasModel()) {\n                    return;\n                }\n                const newRenderMode = e.altKey && e.ctrlKey ? altMode : defaultMode;\n                if (newRenderMode !== this._activeRenderMode) {\n                    this._activeRenderMode = newRenderMode;\n                    const model = this._editor.getModel();\n                    const copies = this._copyInlayHintsWithCurrentAnchor(model);\n                    this._updateHintsDecorators([model.getFullModelRange()], copies);\n                    scheduler.schedule(0);\n                }\n            }));\n        }\n        // mouse gestures\n        this._sessionDisposables.add(this._installDblClickGesture(() => scheduler.schedule(0)));\n        this._sessionDisposables.add(this._installLinkGesture());\n        this._sessionDisposables.add(this._installContextMenu());\n    }\n    _installLinkGesture() {\n        const store = new DisposableStore();\n        const gesture = store.add(new ClickLinkGesture(this._editor));\n        // let removeHighlight = () => { };\n        const sessionStore = new DisposableStore();\n        store.add(sessionStore);\n        store.add(gesture.onMouseMoveOrRelevantKeyDown(e => {\n            const [mouseEvent] = e;\n            const labelPart = this._getInlayHintLabelPart(mouseEvent);\n            const model = this._editor.getModel();\n            if (!labelPart || !model) {\n                sessionStore.clear();\n                return;\n            }\n            // resolve the item\n            const cts = new CancellationTokenSource();\n            sessionStore.add(toDisposable(() => cts.dispose(true)));\n            labelPart.item.resolve(cts.token);\n            // render link => when the modifier is pressed and when there is a command or location\n            this._activeInlayHintPart = labelPart.part.command || labelPart.part.location\n                ? new ActiveInlayHintInfo(labelPart, mouseEvent.hasTriggerModifier)\n                : undefined;\n            const lineNumber = labelPart.item.hint.position.lineNumber;\n            const range = new Range(lineNumber, 1, lineNumber, model.getLineMaxColumn(lineNumber));\n            const lineHints = this._getInlineHintsForRange(range);\n            this._updateHintsDecorators([range], lineHints);\n            sessionStore.add(toDisposable(() => {\n                this._activeInlayHintPart = undefined;\n                this._updateHintsDecorators([range], lineHints);\n            }));\n        }));\n        store.add(gesture.onCancel(() => sessionStore.clear()));\n        store.add(gesture.onExecute((e) => __awaiter(this, void 0, void 0, function* () {\n            const label = this._getInlayHintLabelPart(e);\n            if (label) {\n                const part = label.part;\n                if (part.location) {\n                    // location -> execute go to def\n                    this._instaService.invokeFunction(goToDefinitionWithLocation, e, this._editor, part.location);\n                }\n                else if (languages.Command.is(part.command)) {\n                    // command -> execute it\n                    yield this._invokeCommand(part.command, label.item);\n                }\n            }\n        })));\n        return store;\n    }\n    _getInlineHintsForRange(range) {\n        const lineHints = new Set();\n        for (const data of this._decorationsMetadata.values()) {\n            if (range.containsRange(data.item.anchor.range)) {\n                lineHints.add(data.item);\n            }\n        }\n        return Array.from(lineHints);\n    }\n    _installDblClickGesture(updateInlayHints) {\n        return this._editor.onMouseUp((e) => __awaiter(this, void 0, void 0, function* () {\n            if (e.event.detail !== 2) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (!part) {\n                return;\n            }\n            e.event.preventDefault();\n            yield part.item.resolve(CancellationToken.None);\n            if (isNonEmptyArray(part.item.hint.textEdits)) {\n                const edits = part.item.hint.textEdits.map(edit => EditOperation.replace(Range.lift(edit.range), edit.text));\n                this._editor.executeEdits('inlayHint.default', edits);\n                updateInlayHints();\n            }\n        }));\n    }\n    _installContextMenu() {\n        return this._editor.onContextMenu((e) => __awaiter(this, void 0, void 0, function* () {\n            if (!(e.event.target instanceof HTMLElement)) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (part) {\n                yield this._instaService.invokeFunction(showGoToContextMenu, this._editor, e.event.target, part);\n            }\n        }));\n    }\n    _getInlayHintLabelPart(e) {\n        var _a;\n        if (e.target.type !== 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return undefined;\n        }\n        const options = (_a = e.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n        if (options instanceof ModelDecorationInjectedTextOptions && (options === null || options === void 0 ? void 0 : options.attachedData) instanceof RenderedInlayHintLabelPart) {\n            return options.attachedData;\n        }\n        return undefined;\n    }\n    _invokeCommand(command, item) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._commandService.executeCommand(command.id, ...((_a = command.arguments) !== null && _a !== void 0 ? _a : []));\n            }\n            catch (err) {\n                this._notificationService.notify({\n                    severity: Severity.Error,\n                    source: item.provider.displayName,\n                    message: err\n                });\n            }\n        });\n    }\n    _cacheHintsForFastRestore(model) {\n        const hints = this._copyInlayHintsWithCurrentAnchor(model);\n        this._inlayHintsCache.set(model, hints);\n    }\n    // return inlay hints but with an anchor that reflects \"updates\"\n    // that happened after receiving them, e.g adding new lines before a hint\n    _copyInlayHintsWithCurrentAnchor(model) {\n        const items = new Map();\n        for (const [id, obj] of this._decorationsMetadata) {\n            if (items.has(obj.item)) {\n                // an inlay item can be rendered as multiple decorations\n                // but they will all uses the same range\n                continue;\n            }\n            const range = model.getDecorationRange(id);\n            if (range) {\n                // update range with whatever the editor has tweaked it to\n                const anchor = new InlayHintAnchor(range, obj.item.anchor.direction);\n                const copy = obj.item.with({ anchor });\n                items.set(obj.item, copy);\n            }\n        }\n        return Array.from(items.values());\n    }\n    _getHintsRanges() {\n        const extra = 30;\n        const model = this._editor.getModel();\n        const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\n        const result = [];\n        for (const range of visibleRanges.sort(Range.compareRangesUsingStarts)) {\n            const extendedRange = model.validateRange(new Range(range.startLineNumber - extra, range.startColumn, range.endLineNumber + extra, range.endColumn));\n            if (result.length === 0 || !Range.areIntersectingOrTouching(result[result.length - 1], extendedRange)) {\n                result.push(extendedRange);\n            }\n            else {\n                result[result.length - 1] = Range.plusRange(result[result.length - 1], extendedRange);\n            }\n        }\n        return result;\n    }\n    _updateHintsDecorators(ranges, items) {\n        var _a, _b;\n        // utils to collect/create injected text decorations\n        const newDecorationsData = [];\n        const addInjectedText = (item, ref, content, cursorStops, attachedData) => {\n            const opts = {\n                content,\n                inlineClassNameAffectsLetterSpacing: true,\n                inlineClassName: ref.className,\n                cursorStops,\n                attachedData\n            };\n            newDecorationsData.push({\n                item,\n                classNameRef: ref,\n                decoration: {\n                    range: item.anchor.range,\n                    options: {\n                        // className: \"rangeHighlight\", // DEBUG highlight to see to what range a hint is attached\n                        description: 'InlayHint',\n                        showIfCollapsed: item.anchor.range.isEmpty(),\n                        collapseOnReplaceEdit: !item.anchor.range.isEmpty(),\n                        stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n                        [item.anchor.direction]: this._activeRenderMode === 0 /* RenderMode.Normal */ ? opts : undefined\n                    }\n                }\n            });\n        };\n        const addInjectedWhitespace = (item, isLast) => {\n            const marginRule = this._ruleFactory.createClassNameRef({\n                width: `${(fontSize / 3) | 0}px`,\n                display: 'inline-block'\n            });\n            addInjectedText(item, marginRule, '\\u200a', isLast ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None);\n        };\n        //\n        const { fontSize, fontFamily, padding, isUniform } = this._getLayoutInfo();\n        const fontFamilyVar = '--code-editorInlayHintsFontFamily';\n        this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily);\n        for (const item of items) {\n            // whitespace leading the actual label\n            if (item.hint.paddingLeft) {\n                addInjectedWhitespace(item, false);\n            }\n            // the label with its parts\n            const parts = typeof item.hint.label === 'string'\n                ? [{ label: item.hint.label }]\n                : item.hint.label;\n            for (let i = 0; i < parts.length; i++) {\n                const part = parts[i];\n                const isFirst = i === 0;\n                const isLast = i === parts.length - 1;\n                const cssProperties = {\n                    fontSize: `${fontSize}px`,\n                    fontFamily: `var(${fontFamilyVar}), ${EDITOR_FONT_DEFAULTS.fontFamily}`,\n                    verticalAlign: isUniform ? 'baseline' : 'middle',\n                };\n                if (isNonEmptyArray(item.hint.textEdits)) {\n                    cssProperties.cursor = 'default';\n                }\n                this._fillInColors(cssProperties, item.hint);\n                if ((part.command || part.location) && ((_a = this._activeInlayHintPart) === null || _a === void 0 ? void 0 : _a.part.item) === item && this._activeInlayHintPart.part.index === i) {\n                    // active link!\n                    cssProperties.textDecoration = 'underline';\n                    if (this._activeInlayHintPart.hasTriggerModifier) {\n                        cssProperties.color = themeColorFromId(colors.editorActiveLinkForeground);\n                        cssProperties.cursor = 'pointer';\n                    }\n                }\n                if (padding) {\n                    if (isFirst && isLast) {\n                        // only element\n                        cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px`;\n                        cssProperties.borderRadius = `${(fontSize / 4) | 0}px`;\n                    }\n                    else if (isFirst) {\n                        // first element\n                        cssProperties.padding = `1px 0 1px ${Math.max(1, fontSize / 4) | 0}px`;\n                        cssProperties.borderRadius = `${(fontSize / 4) | 0}px 0 0 ${(fontSize / 4) | 0}px`;\n                    }\n                    else if (isLast) {\n                        // last element\n                        cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px 1px 0`;\n                        cssProperties.borderRadius = `0 ${(fontSize / 4) | 0}px ${(fontSize / 4) | 0}px 0`;\n                    }\n                    else {\n                        cssProperties.padding = `1px 0 1px 0`;\n                    }\n                }\n                addInjectedText(item, this._ruleFactory.createClassNameRef(cssProperties), fixSpace(part.label), isLast && !item.hint.paddingRight ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None, new RenderedInlayHintLabelPart(item, i));\n            }\n            // whitespace trailing the actual label\n            if (item.hint.paddingRight) {\n                addInjectedWhitespace(item, true);\n            }\n            if (newDecorationsData.length > InlayHintsController._MAX_DECORATORS) {\n                break;\n            }\n        }\n        // collect all decoration ids that are affected by the ranges\n        // and only update those decorations\n        const decorationIdsToReplace = [];\n        for (const range of ranges) {\n            for (const { id } of (_b = this._editor.getDecorationsInRange(range)) !== null && _b !== void 0 ? _b : []) {\n                const metadata = this._decorationsMetadata.get(id);\n                if (metadata) {\n                    decorationIdsToReplace.push(id);\n                    metadata.classNameRef.dispose();\n                    this._decorationsMetadata.delete(id);\n                }\n            }\n        }\n        this._editor.changeDecorations(accessor => {\n            const newDecorationIds = accessor.deltaDecorations(decorationIdsToReplace, newDecorationsData.map(d => d.decoration));\n            for (let i = 0; i < newDecorationIds.length; i++) {\n                const data = newDecorationsData[i];\n                this._decorationsMetadata.set(newDecorationIds[i], data);\n            }\n        });\n    }\n    _fillInColors(props, hint) {\n        if (hint.kind === languages.InlayHintKind.Parameter) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintParameterBackground);\n            props.color = themeColorFromId(colors.editorInlayHintParameterForeground);\n        }\n        else if (hint.kind === languages.InlayHintKind.Type) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintTypeBackground);\n            props.color = themeColorFromId(colors.editorInlayHintTypeForeground);\n        }\n        else {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintBackground);\n            props.color = themeColorFromId(colors.editorInlayHintForeground);\n        }\n    }\n    _getLayoutInfo() {\n        const options = this._editor.getOption(129 /* EditorOption.inlayHints */);\n        const padding = options.padding;\n        const editorFontSize = this._editor.getOption(48 /* EditorOption.fontSize */);\n        const editorFontFamily = this._editor.getOption(45 /* EditorOption.fontFamily */);\n        let fontSize = options.fontSize;\n        if (!fontSize || fontSize < 5 || fontSize > editorFontSize) {\n            fontSize = editorFontSize;\n        }\n        const fontFamily = options.fontFamily || editorFontFamily;\n        const isUniform = !padding\n            && fontFamily === editorFontFamily\n            && fontSize === editorFontSize;\n        return { fontSize, fontFamily, padding, isUniform };\n    }\n    _removeAllDecorations() {\n        this._editor.removeDecorations(Array.from(this._decorationsMetadata.keys()));\n        for (const obj of this._decorationsMetadata.values()) {\n            obj.classNameRef.dispose();\n        }\n        this._decorationsMetadata.clear();\n    }\n};\nInlayHintsController.ID = 'editor.contrib.InlayHints';\nInlayHintsController._MAX_DECORATORS = 1500;\nInlayHintsController = __decorate([\n    __param(1, ILanguageFeaturesService),\n    __param(2, ILanguageFeatureDebounceService),\n    __param(3, IInlayHintsCache),\n    __param(4, ICommandService),\n    __param(5, INotificationService),\n    __param(6, IInstantiationService)\n], InlayHintsController);\nexport { InlayHintsController };\n// Prevents the view from potentially visible whitespace\nfunction fixSpace(str) {\n    const noBreakWhitespace = '\\xa0';\n    return str.replace(/[ \\t]/g, noBreakWhitespace);\n}\nCommandsRegistry.registerCommand('_executeInlayHintProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    const [uri, range] = args;\n    assertType(URI.isUri(uri));\n    assertType(Range.isIRange(range));\n    const { inlayHintsProvider } = accessor.get(ILanguageFeaturesService);\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\n    try {\n        const model = yield InlayHintsFragments.create(inlayHintsProvider, ref.object.textEditorModel, [Range.lift(range)], CancellationToken.None);\n        const result = model.items.map(i => i.hint);\n        setTimeout(() => model.dispose(), 0); // dispose after sending to ext host\n        return result;\n    }\n    finally {\n        ref.dispose();\n    }\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { getHover } from '../../hover/browser/getHover.js';\nimport { MarkdownHover, MarkdownHoverParticipant } from '../../hover/browser/markdownHoverParticipant.js';\nimport { RenderedInlayHintLabelPart, InlayHintsController } from './inlayHintsController.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { localize } from '../../../../nls.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { asCommandLink } from './inlayHints.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nclass InlayHintsHoverAnchor extends HoverForeignElementAnchor {\n    constructor(part, owner) {\n        super(10, owner, part.item.anchor.range);\n        this.part = part;\n    }\n}\nlet InlayHintsHover = class InlayHintsHover extends MarkdownHoverParticipant {\n    constructor(editor, languageService, openerService, configurationService, _resolverService, languageFeaturesService) {\n        super(editor, languageService, openerService, configurationService, languageFeaturesService);\n        this._resolverService = _resolverService;\n        this.hoverOrdinal = 6;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        var _a;\n        const controller = InlayHintsController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        if (mouseEvent.target.type !== 6 /* MouseTargetType.CONTENT_TEXT */) {\n            return null;\n        }\n        const options = (_a = mouseEvent.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n        if (!(options instanceof ModelDecorationInjectedTextOptions && options.attachedData instanceof RenderedInlayHintLabelPart)) {\n            return null;\n        }\n        return new InlayHintsHoverAnchor(options.attachedData, this);\n    }\n    computeSync() {\n        return [];\n    }\n    computeAsync(anchor, _lineDecorations, token) {\n        if (!(anchor instanceof InlayHintsHoverAnchor)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        return new AsyncIterableObject((executor) => __awaiter(this, void 0, void 0, function* () {\n            var e_1, _a;\n            const { part } = anchor;\n            yield part.item.resolve(token);\n            if (token.isCancellationRequested) {\n                return;\n            }\n            // (1) Inlay Tooltip\n            let itemTooltip;\n            if (typeof part.item.hint.tooltip === 'string') {\n                itemTooltip = new MarkdownString().appendText(part.item.hint.tooltip);\n            }\n            else if (part.item.hint.tooltip) {\n                itemTooltip = part.item.hint.tooltip;\n            }\n            if (itemTooltip) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [itemTooltip], 0));\n            }\n            // (1.2) Inlay dbl-click gesture\n            if (isNonEmptyArray(part.item.hint.textEdits)) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(localize('hint.dbl', \"Double click to insert\"))], 10001));\n            }\n            // (2) Inlay Label Part Tooltip\n            let partTooltip;\n            if (typeof part.part.tooltip === 'string') {\n                partTooltip = new MarkdownString().appendText(part.part.tooltip);\n            }\n            else if (part.part.tooltip) {\n                partTooltip = part.part.tooltip;\n            }\n            if (partTooltip) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [partTooltip], 1));\n            }\n            // (2.2) Inlay Label Part Help Hover\n            if (part.part.location || part.part.command) {\n                let linkHint;\n                const useMetaKey = this._editor.getOption(72 /* EditorOption.multiCursorModifier */) === 'altKey';\n                const kb = useMetaKey\n                    ? platform.isMacintosh\n                        ? localize('links.navigate.kb.meta.mac', \"cmd + click\")\n                        : localize('links.navigate.kb.meta', \"ctrl + click\")\n                    : platform.isMacintosh\n                        ? localize('links.navigate.kb.alt.mac', \"option + click\")\n                        : localize('links.navigate.kb.alt', \"alt + click\");\n                if (part.part.location && part.part.command) {\n                    linkHint = new MarkdownString().appendText(localize('hint.defAndCommand', 'Go to Definition ({0}), right click for more', kb));\n                }\n                else if (part.part.location) {\n                    linkHint = new MarkdownString().appendText(localize('hint.def', 'Go to Definition ({0})', kb));\n                }\n                else if (part.part.command) {\n                    linkHint = new MarkdownString(`[${localize('hint.cmd', \"Execute Command\")}](${asCommandLink(part.part.command)} \"${part.part.command.title}\") (${kb})`, { isTrusted: true });\n                }\n                if (linkHint) {\n                    executor.emitOne(new MarkdownHover(this, anchor.range, [linkHint], 10000));\n                }\n            }\n            // (3) Inlay Label Part Location tooltip\n            const iterable = yield this._resolveInlayHintLabelPartHover(part, token);\n            try {\n                for (var iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = yield iterable_1.next(), !iterable_1_1.done;) {\n                    const item = iterable_1_1.value;\n                    executor.emitOne(item);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (iterable_1_1 && !iterable_1_1.done && (_a = iterable_1.return)) yield _a.call(iterable_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }));\n    }\n    _resolveInlayHintLabelPartHover(part, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!part.part.location) {\n                return AsyncIterableObject.EMPTY;\n            }\n            const { uri, range } = part.part.location;\n            const ref = yield this._resolverService.createModelReference(uri);\n            try {\n                const model = ref.object.textEditorModel;\n                if (!this._languageFeaturesService.hoverProvider.has(model)) {\n                    return AsyncIterableObject.EMPTY;\n                }\n                return getHover(this._languageFeaturesService.hoverProvider, model, new Position(range.startLineNumber, range.startColumn), token)\n                    .filter(item => !isEmptyMarkdownString(item.hover.contents))\n                    .map(item => new MarkdownHover(this, part.item.anchor.range, item.hover.contents, 2 + item.ordinal));\n            }\n            finally {\n                ref.dispose();\n            }\n        });\n    }\n};\nInlayHintsHover = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService),\n    __param(4, ITextModelService),\n    __param(5, ILanguageFeaturesService)\n], InlayHintsHover);\nexport { InlayHintsHover };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { InlayHintsController } from './inlayHintsController.js';\nimport { InlayHintsHover } from './inlayHintsHover.js';\nregisterEditorContribution(InlayHintsController.ID, InlayHintsController);\nHoverParticipantRegistry.register(InlayHintsHover);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const inlineSuggestCommitId = 'editor.action.inlineSuggest.commit';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nexport function createDisposableRef(object, disposable) {\n    return {\n        object,\n        dispose: () => disposable === null || disposable === void 0 ? void 0 : disposable.dispose(),\n    };\n}\nexport function applyEdits(text, edits) {\n    const transformer = new PositionOffsetTransformer(text);\n    const offsetEdits = edits.map(e => {\n        const range = Range.lift(e.range);\n        return ({\n            startOffset: transformer.getOffset(range.getStartPosition()),\n            endOffset: transformer.getOffset(range.getEndPosition()),\n            text: e.text\n        });\n    });\n    offsetEdits.sort((a, b) => b.startOffset - a.startOffset);\n    for (const edit of offsetEdits) {\n        text = text.substring(0, edit.startOffset) + edit.text + text.substring(edit.endOffset);\n    }\n    return text;\n}\nclass PositionOffsetTransformer {\n    constructor(text) {\n        this.lineStartOffsetByLineIdx = [];\n        this.lineStartOffsetByLineIdx.push(0);\n        for (let i = 0; i < text.length; i++) {\n            if (text.charAt(i) === '\\n') {\n                this.lineStartOffsetByLineIdx.push(i + 1);\n            }\n        }\n    }\n    getOffset(position) {\n        return this.lineStartOffsetByLineIdx[position.lineNumber - 1] + position.column - 1;\n    }\n}\nconst array = [];\nexport function getReadonlyEmptyArray() {\n    return array;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { applyEdits } from './utils.js';\nexport class GhostText {\n    constructor(lineNumber, parts, additionalReservedLineCount = 0) {\n        this.lineNumber = lineNumber;\n        this.parts = parts;\n        this.additionalReservedLineCount = additionalReservedLineCount;\n    }\n    renderForScreenReader(lineText) {\n        if (this.parts.length === 0) {\n            return '';\n        }\n        const lastPart = this.parts[this.parts.length - 1];\n        const cappedLineText = lineText.substr(0, lastPart.column - 1);\n        const text = applyEdits(cappedLineText, this.parts.map(p => ({\n            range: { startLineNumber: 1, endLineNumber: 1, startColumn: p.column, endColumn: p.column },\n            text: p.lines.join('\\n')\n        })));\n        return text.substring(this.parts[0].column - 1);\n    }\n    isEmpty() {\n        return this.parts.every(p => p.lines.length === 0);\n    }\n}\nexport class GhostTextPart {\n    constructor(column, lines, \n    /**\n     * Indicates if this part is a preview of an inline suggestion when a suggestion is previewed.\n    */\n    preview) {\n        this.column = column;\n        this.lines = lines;\n        this.preview = preview;\n    }\n}\nexport class GhostTextReplacement {\n    constructor(lineNumber, columnStart, length, newLines, additionalReservedLineCount = 0) {\n        this.lineNumber = lineNumber;\n        this.columnStart = columnStart;\n        this.length = length;\n        this.newLines = newLines;\n        this.additionalReservedLineCount = additionalReservedLineCount;\n        this.parts = [\n            new GhostTextPart(this.columnStart + this.length, this.newLines, false),\n        ];\n    }\n    renderForScreenReader(_lineText) {\n        return this.newLines.join('\\n');\n    }\n}\nexport class BaseGhostTextWidgetModel extends Disposable {\n    constructor(editor) {\n        super();\n        this.editor = editor;\n        this._expanded = undefined;\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(108 /* EditorOption.suggest */) && this._expanded === undefined) {\n                this.onDidChangeEmitter.fire();\n            }\n        }));\n    }\n    setExpanded(expanded) {\n        this._expanded = true;\n        this.onDidChangeEmitter.fire();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../../base/common/diff/diff.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { GhostText, GhostTextPart } from './ghostText.js';\nexport function minimizeInlineCompletion(model, inlineCompletion) {\n    if (!inlineCompletion) {\n        return inlineCompletion;\n    }\n    const valueToReplace = model.getValueInRange(inlineCompletion.range);\n    const commonPrefixLen = strings.commonPrefixLength(valueToReplace, inlineCompletion.insertText);\n    const startOffset = model.getOffsetAt(inlineCompletion.range.getStartPosition()) + commonPrefixLen;\n    const start = model.getPositionAt(startOffset);\n    const remainingValueToReplace = valueToReplace.substr(commonPrefixLen);\n    const commonSuffixLen = strings.commonSuffixLength(remainingValueToReplace, inlineCompletion.insertText);\n    const end = model.getPositionAt(Math.max(startOffset, model.getOffsetAt(inlineCompletion.range.getEndPosition()) - commonSuffixLen));\n    return {\n        range: Range.fromPositions(start, end),\n        insertText: inlineCompletion.insertText.substr(commonPrefixLen, inlineCompletion.insertText.length - commonPrefixLen - commonSuffixLen),\n        snippetInfo: inlineCompletion.snippetInfo,\n        filterText: inlineCompletion.filterText,\n        additionalTextEdits: inlineCompletion.additionalTextEdits,\n    };\n}\nexport function normalizedInlineCompletionsEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    return a.range.equalsRange(b.range) && a.insertText === b.insertText && a.command === b.command;\n}\n/**\n * @param previewSuffixLength Sets where to split `inlineCompletion.text`.\n * \tIf the text is `hello` and the suffix length is 2, the non-preview part is `hel` and the preview-part is `lo`.\n*/\nexport function inlineCompletionToGhostText(inlineCompletion, textModel, mode, cursorPosition, previewSuffixLength = 0) {\n    if (inlineCompletion.range.startLineNumber !== inlineCompletion.range.endLineNumber) {\n        // Only single line replacements are supported.\n        return undefined;\n    }\n    const sourceLine = textModel.getLineContent(inlineCompletion.range.startLineNumber);\n    const sourceIndentationLength = strings.getLeadingWhitespace(sourceLine).length;\n    const suggestionTouchesIndentation = inlineCompletion.range.startColumn - 1 <= sourceIndentationLength;\n    if (suggestionTouchesIndentation) {\n        // source:      ··········[······abc]\n        //                         ^^^^^^^^^ inlineCompletion.range\n        //              ^^^^^^^^^^ ^^^^^^ sourceIndentationLength\n        //                         ^^^^^^ replacedIndentation.length\n        //                               ^^^ rangeThatDoesNotReplaceIndentation\n        // inlineCompletion.text: '··foo'\n        //                         ^^ suggestionAddedIndentationLength\n        const suggestionAddedIndentationLength = strings.getLeadingWhitespace(inlineCompletion.insertText).length;\n        const replacedIndentation = sourceLine.substring(inlineCompletion.range.startColumn - 1, sourceIndentationLength);\n        const rangeThatDoesNotReplaceIndentation = Range.fromPositions(inlineCompletion.range.getStartPosition().delta(0, replacedIndentation.length), inlineCompletion.range.getEndPosition());\n        const suggestionWithoutIndentationChange = inlineCompletion.insertText.startsWith(replacedIndentation)\n            // Adds more indentation without changing existing indentation: We can add ghost text for this\n            ? inlineCompletion.insertText.substring(replacedIndentation.length)\n            // Changes or removes existing indentation. Only add ghost text for the non-indentation part.\n            : inlineCompletion.insertText.substring(suggestionAddedIndentationLength);\n        inlineCompletion = {\n            range: rangeThatDoesNotReplaceIndentation,\n            insertText: suggestionWithoutIndentationChange,\n            command: inlineCompletion.command,\n            snippetInfo: undefined,\n            filterText: inlineCompletion.filterText,\n            additionalTextEdits: inlineCompletion.additionalTextEdits,\n        };\n    }\n    // This is a single line string\n    const valueToBeReplaced = textModel.getValueInRange(inlineCompletion.range);\n    const changes = cachingDiff(valueToBeReplaced, inlineCompletion.insertText);\n    if (!changes) {\n        // No ghost text in case the diff would be too slow to compute\n        return undefined;\n    }\n    const lineNumber = inlineCompletion.range.startLineNumber;\n    const parts = new Array();\n    if (mode === 'prefix') {\n        const filteredChanges = changes.filter(c => c.originalLength === 0);\n        if (filteredChanges.length > 1 || filteredChanges.length === 1 && filteredChanges[0].originalStart !== valueToBeReplaced.length) {\n            // Prefixes only have a single change.\n            return undefined;\n        }\n    }\n    const previewStartInCompletionText = inlineCompletion.insertText.length - previewSuffixLength;\n    for (const c of changes) {\n        const insertColumn = inlineCompletion.range.startColumn + c.originalStart + c.originalLength;\n        if (mode === 'subwordSmart' && cursorPosition && cursorPosition.lineNumber === inlineCompletion.range.startLineNumber && insertColumn < cursorPosition.column) {\n            // No ghost text before cursor\n            return undefined;\n        }\n        if (c.originalLength > 0) {\n            return undefined;\n        }\n        if (c.modifiedLength === 0) {\n            continue;\n        }\n        const modifiedEnd = c.modifiedStart + c.modifiedLength;\n        const nonPreviewTextEnd = Math.max(c.modifiedStart, Math.min(modifiedEnd, previewStartInCompletionText));\n        const nonPreviewText = inlineCompletion.insertText.substring(c.modifiedStart, nonPreviewTextEnd);\n        const italicText = inlineCompletion.insertText.substring(nonPreviewTextEnd, Math.max(c.modifiedStart, modifiedEnd));\n        if (nonPreviewText.length > 0) {\n            const lines = strings.splitLines(nonPreviewText);\n            parts.push(new GhostTextPart(insertColumn, lines, false));\n        }\n        if (italicText.length > 0) {\n            const lines = strings.splitLines(italicText);\n            parts.push(new GhostTextPart(insertColumn, lines, true));\n        }\n    }\n    return new GhostText(lineNumber, parts, 0);\n}\nlet lastRequest = undefined;\nfunction cachingDiff(originalValue, newValue) {\n    if ((lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.originalValue) === originalValue && (lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.newValue) === newValue) {\n        return lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.changes;\n    }\n    else {\n        let changes = smartDiff(originalValue, newValue, true);\n        if (changes) {\n            const deletedChars = deletedCharacters(changes);\n            if (deletedChars > 0) {\n                // For performance reasons, don't compute diff if there is nothing to improve\n                const newChanges = smartDiff(originalValue, newValue, false);\n                if (newChanges && deletedCharacters(newChanges) < deletedChars) {\n                    // Disabling smartness seems to be better here\n                    changes = newChanges;\n                }\n            }\n        }\n        lastRequest = {\n            originalValue,\n            newValue,\n            changes\n        };\n        return changes;\n    }\n}\nfunction deletedCharacters(changes) {\n    let sum = 0;\n    for (const c of changes) {\n        sum += Math.max(c.originalLength - c.modifiedLength, 0);\n    }\n    return sum;\n}\n/**\n * When matching `if ()` with `if (f() = 1) { g(); }`,\n * align it like this:        `if (       )`\n * Not like this:\t\t\t  `if (  )`\n * Also not like this:\t\t  `if (             )`.\n *\n * The parenthesis are preprocessed to ensure that they match correctly.\n */\nfunction smartDiff(originalValue, newValue, smartBracketMatching) {\n    if (originalValue.length > 5000 || newValue.length > 5000) {\n        // We don't want to work on strings that are too big\n        return undefined;\n    }\n    function getMaxCharCode(val) {\n        let maxCharCode = 0;\n        for (let i = 0, len = val.length; i < len; i++) {\n            const charCode = val.charCodeAt(i);\n            if (charCode > maxCharCode) {\n                maxCharCode = charCode;\n            }\n        }\n        return maxCharCode;\n    }\n    const maxCharCode = Math.max(getMaxCharCode(originalValue), getMaxCharCode(newValue));\n    function getUniqueCharCode(id) {\n        if (id < 0) {\n            throw new Error('unexpected');\n        }\n        return maxCharCode + id + 1;\n    }\n    function getElements(source) {\n        let level = 0;\n        let group = 0;\n        const characters = new Int32Array(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            // TODO support more brackets\n            if (smartBracketMatching && source[i] === '(') {\n                const id = group * 100 + level;\n                characters[i] = getUniqueCharCode(2 * id);\n                level++;\n            }\n            else if (smartBracketMatching && source[i] === ')') {\n                level = Math.max(level - 1, 0);\n                const id = group * 100 + level;\n                characters[i] = getUniqueCharCode(2 * id + 1);\n                if (level === 0) {\n                    group++;\n                }\n            }\n            else {\n                characters[i] = source.charCodeAt(i);\n            }\n        }\n        return characters;\n    }\n    const elements1 = getElements(originalValue);\n    const elements2 = getElements(newValue);\n    return new LcsDiff({ getElements: () => elements1 }, { getElements: () => elements2 }).ComputeDiff(false).changes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { BaseGhostTextWidgetModel, GhostTextReplacement } from './ghostText.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { inlineSuggestCommitId } from './consts.js';\nimport { inlineCompletionToGhostText } from './inlineCompletionToGhostText.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { fixBracketsInLine } from '../../../common/model/bracketPairsTextModelPart/fixBrackets.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { SnippetController2 } from '../../snippet/browser/snippetController2.js';\nimport { assertNever } from '../../../../base/common/types.js';\nimport { matchesSubString } from '../../../../base/common/filters.js';\nimport { getReadonlyEmptyArray } from './utils.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nlet InlineCompletionsModel = class InlineCompletionsModel extends Disposable {\n    constructor(editor, cache, commandService, languageConfigurationService, languageFeaturesService, debounceService, configurationService) {\n        super();\n        this.editor = editor;\n        this.cache = cache;\n        this.commandService = commandService;\n        this.languageConfigurationService = languageConfigurationService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.debounceService = debounceService;\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.completionSession = this._register(new MutableDisposable());\n        this.active = false;\n        this.disposed = false;\n        this.debounceValue = this.debounceService.for(this.languageFeaturesService.inlineCompletionsProvider, 'InlineCompletionsDebounce', { min: 50, max: 50 });\n        this._register(commandService.onDidExecuteCommand((e) => {\n            // These commands don't trigger onDidType.\n            const commands = new Set([\n                CoreEditingCommands.Tab.id,\n                CoreEditingCommands.DeleteLeft.id,\n                CoreEditingCommands.DeleteRight.id,\n                inlineSuggestCommitId,\n                'acceptSelectedSuggestion',\n            ]);\n            if (commands.has(e.commandId) && editor.hasTextFocus()) {\n                this.handleUserInput();\n            }\n        }));\n        this._register(this.editor.onDidType((e) => {\n            this.handleUserInput();\n        }));\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\n            if (e.reason === 3 /* CursorChangeReason.Explicit */ ||\n                this.session && !this.session.isValid) {\n                this.hide();\n            }\n        }));\n        this._register(toDisposable(() => {\n            this.disposed = true;\n        }));\n        this._register(this.editor.onDidBlurEditorWidget(() => {\n            // This is a hidden setting very useful for debugging\n            if (configurationService.getValue('editor.inlineSuggest.hideOnBlur')) {\n                return;\n            }\n            this.hide();\n        }));\n    }\n    handleUserInput() {\n        if (this.session && !this.session.isValid) {\n            this.hide();\n        }\n        setTimeout(() => {\n            if (this.disposed) {\n                return;\n            }\n            // Wait for the cursor update that happens in the same iteration loop iteration\n            this.startSessionIfTriggered();\n        }, 0);\n    }\n    get session() {\n        return this.completionSession.value;\n    }\n    get ghostText() {\n        var _a;\n        return (_a = this.session) === null || _a === void 0 ? void 0 : _a.ghostText;\n    }\n    get minReservedLineCount() {\n        return this.session ? this.session.minReservedLineCount : 0;\n    }\n    setExpanded(expanded) {\n        var _a;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.setExpanded(expanded);\n    }\n    setActive(active) {\n        var _a;\n        this.active = active;\n        if (active) {\n            (_a = this.session) === null || _a === void 0 ? void 0 : _a.scheduleAutomaticUpdate();\n        }\n    }\n    startSessionIfTriggered() {\n        const suggestOptions = this.editor.getOption(57 /* EditorOption.inlineSuggest */);\n        if (!suggestOptions.enabled) {\n            return;\n        }\n        if (this.session && this.session.isValid) {\n            return;\n        }\n        this.trigger(InlineCompletionTriggerKind.Automatic);\n    }\n    trigger(triggerKind) {\n        if (this.completionSession.value) {\n            if (triggerKind === InlineCompletionTriggerKind.Explicit) {\n                void this.completionSession.value.ensureUpdateWithExplicitContext();\n            }\n            return;\n        }\n        this.completionSession.value = new InlineCompletionsSession(this.editor, this.editor.getPosition(), () => this.active, this.commandService, this.cache, triggerKind, this.languageConfigurationService, this.languageFeaturesService.inlineCompletionsProvider, this.debounceValue);\n        this.completionSession.value.takeOwnership(this.completionSession.value.onDidChange(() => {\n            this.onDidChangeEmitter.fire();\n        }));\n    }\n    hide() {\n        this.completionSession.clear();\n        this.onDidChangeEmitter.fire();\n    }\n    commitCurrentSuggestion() {\n        var _a;\n        // Don't dispose the session, so that after committing, more suggestions are shown.\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.commitCurrentCompletion();\n    }\n    showNext() {\n        var _a;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.showNextInlineCompletion();\n    }\n    showPrevious() {\n        var _a;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.showPreviousInlineCompletion();\n    }\n    hasMultipleInlineCompletions() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield ((_a = this.session) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\n            return result !== undefined ? result : false;\n        });\n    }\n};\nInlineCompletionsModel = __decorate([\n    __param(2, ICommandService),\n    __param(3, ILanguageConfigurationService),\n    __param(4, ILanguageFeaturesService),\n    __param(5, ILanguageFeatureDebounceService),\n    __param(6, IConfigurationService)\n], InlineCompletionsModel);\nexport { InlineCompletionsModel };\nexport class InlineCompletionsSession extends BaseGhostTextWidgetModel {\n    constructor(editor, triggerPosition, shouldUpdate, commandService, cache, initialTriggerKind, languageConfigurationService, registry, debounce) {\n        super(editor);\n        this.triggerPosition = triggerPosition;\n        this.shouldUpdate = shouldUpdate;\n        this.commandService = commandService;\n        this.cache = cache;\n        this.initialTriggerKind = initialTriggerKind;\n        this.languageConfigurationService = languageConfigurationService;\n        this.registry = registry;\n        this.debounce = debounce;\n        this.minReservedLineCount = 0;\n        this.updateOperation = this._register(new MutableDisposable());\n        this.updateSoon = this._register(new RunOnceScheduler(() => {\n            const triggerKind = this.initialTriggerKind;\n            // All subsequent triggers are automatic.\n            this.initialTriggerKind = InlineCompletionTriggerKind.Automatic;\n            return this.update(triggerKind);\n        }, 50));\n        this.filteredCompletions = [];\n        //#region Selection\n        // We use a semantic id to track the selection even if the cache changes.\n        this.currentlySelectedCompletionId = undefined;\n        let lastCompletionItem = undefined;\n        this._register(this.onDidChange(() => {\n            var _a;\n            const currentCompletion = this.currentCompletion;\n            if (currentCompletion && currentCompletion.sourceInlineCompletion !== lastCompletionItem) {\n                lastCompletionItem = currentCompletion.sourceInlineCompletion;\n                const provider = currentCompletion.sourceProvider;\n                (_a = provider.handleItemDidShow) === null || _a === void 0 ? void 0 : _a.call(provider, currentCompletion.sourceInlineCompletions, lastCompletionItem);\n            }\n        }));\n        this._register(toDisposable(() => {\n            this.cache.clear();\n        }));\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\n            var _a;\n            if (e.reason === 3 /* CursorChangeReason.Explicit */) {\n                return;\n            }\n            // Ghost text depends on the cursor position\n            (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.updateRanges();\n            if (this.cache.value) {\n                this.updateFilteredInlineCompletions();\n                this.onDidChangeEmitter.fire();\n            }\n        }));\n        this._register(this.editor.onDidChangeModelContent((e) => {\n            var _a;\n            // Call this in case `onDidChangeModelContent` calls us first.\n            (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.updateRanges();\n            this.updateFilteredInlineCompletions();\n            this.scheduleAutomaticUpdate();\n        }));\n        this._register(this.registry.onDidChange(() => {\n            this.updateSoon.schedule(this.debounce.get(this.editor.getModel()));\n        }));\n        this.scheduleAutomaticUpdate();\n    }\n    updateFilteredInlineCompletions() {\n        if (!this.cache.value) {\n            this.filteredCompletions = [];\n            return;\n        }\n        const model = this.editor.getModel();\n        const cursorPosition = model.validatePosition(this.editor.getPosition());\n        this.filteredCompletions = this.cache.value.completions.filter(c => {\n            const originalValue = model.getValueInRange(c.synchronizedRange).toLowerCase();\n            const filterText = c.inlineCompletion.filterText.toLowerCase();\n            const indent = model.getLineIndentColumn(c.synchronizedRange.startLineNumber);\n            const cursorPosIndex = Math.max(0, cursorPosition.column - c.synchronizedRange.startColumn);\n            let filterTextBefore = filterText.substring(0, cursorPosIndex);\n            let filterTextAfter = filterText.substring(cursorPosIndex);\n            let originalValueBefore = originalValue.substring(0, cursorPosIndex);\n            let originalValueAfter = originalValue.substring(cursorPosIndex);\n            if (c.synchronizedRange.startColumn <= indent) {\n                // Remove indentation\n                originalValueBefore = originalValueBefore.trimStart();\n                if (originalValueBefore.length === 0) {\n                    originalValueAfter = originalValueAfter.trimStart();\n                }\n                filterTextBefore = filterTextBefore.trimStart();\n                if (filterTextBefore.length === 0) {\n                    filterTextAfter = filterTextAfter.trimStart();\n                }\n            }\n            return filterTextBefore.startsWith(originalValueBefore)\n                && matchesSubString(originalValueAfter, filterTextAfter);\n        });\n    }\n    fixAndGetIndexOfCurrentSelection() {\n        if (!this.currentlySelectedCompletionId || !this.cache.value) {\n            return 0;\n        }\n        if (this.cache.value.completions.length === 0) {\n            // don't reset the selection in this case\n            return 0;\n        }\n        const idx = this.filteredCompletions.findIndex(v => v.semanticId === this.currentlySelectedCompletionId);\n        if (idx === -1) {\n            // Reset the selection so that the selection does not jump back when it appears again\n            this.currentlySelectedCompletionId = undefined;\n            return 0;\n        }\n        return idx;\n    }\n    get currentCachedCompletion() {\n        if (!this.cache.value) {\n            return undefined;\n        }\n        return this.filteredCompletions[this.fixAndGetIndexOfCurrentSelection()];\n    }\n    showNextInlineCompletion() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ensureUpdateWithExplicitContext();\n            const completions = this.filteredCompletions || [];\n            if (completions.length > 0) {\n                const newIdx = (this.fixAndGetIndexOfCurrentSelection() + 1) % completions.length;\n                this.currentlySelectedCompletionId = completions[newIdx].semanticId;\n            }\n            else {\n                this.currentlySelectedCompletionId = undefined;\n            }\n            this.onDidChangeEmitter.fire();\n        });\n    }\n    showPreviousInlineCompletion() {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ensureUpdateWithExplicitContext();\n            const completions = this.filteredCompletions || [];\n            if (completions.length > 0) {\n                const newIdx = (this.fixAndGetIndexOfCurrentSelection() + completions.length - 1) % completions.length;\n                this.currentlySelectedCompletionId = completions[newIdx].semanticId;\n            }\n            else {\n                this.currentlySelectedCompletionId = undefined;\n            }\n            this.onDidChangeEmitter.fire();\n        });\n    }\n    ensureUpdateWithExplicitContext() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.updateOperation.value) {\n                // Restart or wait for current update operation\n                if (this.updateOperation.value.triggerKind === InlineCompletionTriggerKind.Explicit) {\n                    yield this.updateOperation.value.promise;\n                }\n                else {\n                    yield this.update(InlineCompletionTriggerKind.Explicit);\n                }\n            }\n            else if (((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.triggerKind) !== InlineCompletionTriggerKind.Explicit) {\n                // Refresh cache\n                yield this.update(InlineCompletionTriggerKind.Explicit);\n            }\n        });\n    }\n    hasMultipleInlineCompletions() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ensureUpdateWithExplicitContext();\n            return (((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions.length) || 0) > 1;\n        });\n    }\n    //#endregion\n    get ghostText() {\n        const currentCompletion = this.currentCompletion;\n        if (!currentCompletion) {\n            return undefined;\n        }\n        const cursorPosition = this.editor.getPosition();\n        if (currentCompletion.range.getEndPosition().isBefore(cursorPosition)) {\n            return undefined;\n        }\n        const mode = this.editor.getOptions().get(57 /* EditorOption.inlineSuggest */).mode;\n        const ghostText = inlineCompletionToGhostText(currentCompletion, this.editor.getModel(), mode, cursorPosition);\n        if (ghostText) {\n            if (ghostText.isEmpty()) {\n                return undefined;\n            }\n            return ghostText;\n        }\n        return new GhostTextReplacement(currentCompletion.range.startLineNumber, currentCompletion.range.startColumn, currentCompletion.range.endColumn - currentCompletion.range.startColumn, currentCompletion.insertText.split('\\n'), 0);\n    }\n    get currentCompletion() {\n        const completion = this.currentCachedCompletion;\n        if (!completion) {\n            return undefined;\n        }\n        return completion.toLiveInlineCompletion();\n    }\n    get isValid() {\n        return this.editor.getPosition().lineNumber === this.triggerPosition.lineNumber;\n    }\n    scheduleAutomaticUpdate() {\n        // Since updateSoon debounces, starvation can happen.\n        // To prevent stale cache, we clear the current update operation.\n        this.updateOperation.clear();\n        this.updateSoon.schedule(this.debounce.get(this.editor.getModel()));\n    }\n    update(triggerKind) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.shouldUpdate()) {\n                return;\n            }\n            const position = this.editor.getPosition();\n            const startTime = new Date();\n            const promise = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                let result;\n                try {\n                    result = yield provideInlineCompletions(this.registry, position, this.editor.getModel(), { triggerKind, selectedSuggestionInfo: undefined }, token, this.languageConfigurationService);\n                    const endTime = new Date();\n                    this.debounce.update(this.editor.getModel(), endTime.getTime() - startTime.getTime());\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                    return;\n                }\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                this.cache.setValue(this.editor, result, triggerKind);\n                this.updateFilteredInlineCompletions();\n                this.onDidChangeEmitter.fire();\n            }));\n            const operation = new UpdateOperation(promise, triggerKind);\n            this.updateOperation.value = operation;\n            yield promise;\n            if (this.updateOperation.value === operation) {\n                this.updateOperation.clear();\n            }\n        });\n    }\n    takeOwnership(disposable) {\n        this._register(disposable);\n    }\n    commitCurrentCompletion() {\n        const ghostText = this.ghostText;\n        if (!ghostText) {\n            // No ghost text was shown for this completion.\n            // Thus, we don't want to commit anything.\n            return;\n        }\n        const completion = this.currentCompletion;\n        if (completion) {\n            this.commit(completion);\n        }\n    }\n    commit(completion) {\n        var _a;\n        // Mark the cache as stale, but don't dispose it yet,\n        // otherwise command args might get disposed.\n        const cache = this.cache.clearAndLeak();\n        if (completion.snippetInfo) {\n            this.editor.executeEdits('inlineSuggestion.accept', [\n                EditOperation.replaceMove(completion.range, ''),\n                ...completion.additionalTextEdits\n            ]);\n            this.editor.setPosition(completion.snippetInfo.range.getStartPosition());\n            (_a = SnippetController2.get(this.editor)) === null || _a === void 0 ? void 0 : _a.insert(completion.snippetInfo.snippet);\n        }\n        else {\n            this.editor.executeEdits('inlineSuggestion.accept', [\n                EditOperation.replaceMove(completion.range, completion.insertText),\n                ...completion.additionalTextEdits\n            ]);\n        }\n        if (completion.command) {\n            this.commandService\n                .executeCommand(completion.command.id, ...(completion.command.arguments || []))\n                .finally(() => {\n                cache === null || cache === void 0 ? void 0 : cache.dispose();\n            })\n                .then(undefined, onUnexpectedExternalError);\n        }\n        else {\n            cache === null || cache === void 0 ? void 0 : cache.dispose();\n        }\n        this.onDidChangeEmitter.fire();\n    }\n    get commands() {\n        var _a;\n        const lists = new Set(((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions.map(c => c.inlineCompletion.sourceInlineCompletions)) || []);\n        return [...lists].flatMap(l => l.commands || []);\n    }\n}\nexport class UpdateOperation {\n    constructor(promise, triggerKind) {\n        this.promise = promise;\n        this.triggerKind = triggerKind;\n    }\n    dispose() {\n        this.promise.cancel();\n    }\n}\n/**\n * The cache keeps itself in sync with the editor.\n * It also owns the completions result and disposes it when the cache is diposed.\n*/\nexport class SynchronizedInlineCompletionsCache extends Disposable {\n    constructor(completionsSource, editor, onChange, triggerKind) {\n        super();\n        this.editor = editor;\n        this.onChange = onChange;\n        this.triggerKind = triggerKind;\n        this.isDisposing = false;\n        const decorationIds = editor.changeDecorations((changeAccessor) => {\n            return changeAccessor.deltaDecorations([], completionsSource.items.map(i => ({\n                range: i.range,\n                options: {\n                    description: 'inline-completion-tracking-range'\n                },\n            })));\n        });\n        this._register(toDisposable(() => {\n            this.isDisposing = true;\n            editor.removeDecorations(decorationIds);\n        }));\n        this.completions = completionsSource.items.map((c, idx) => new CachedInlineCompletion(c, decorationIds[idx]));\n        this._register(editor.onDidChangeModelContent(() => {\n            this.updateRanges();\n        }));\n        this._register(completionsSource);\n    }\n    updateRanges() {\n        if (this.isDisposing) {\n            return;\n        }\n        let hasChanged = false;\n        const model = this.editor.getModel();\n        for (const c of this.completions) {\n            const newRange = model.getDecorationRange(c.decorationId);\n            if (!newRange) {\n                onUnexpectedError(new Error('Decoration has no range'));\n                continue;\n            }\n            if (!c.synchronizedRange.equalsRange(newRange)) {\n                hasChanged = true;\n                c.synchronizedRange = newRange;\n            }\n        }\n        if (hasChanged) {\n            this.onChange();\n        }\n    }\n}\nclass CachedInlineCompletion {\n    constructor(inlineCompletion, decorationId) {\n        this.inlineCompletion = inlineCompletion;\n        this.decorationId = decorationId;\n        this.semanticId = JSON.stringify({\n            text: this.inlineCompletion.insertText,\n            abbreviation: this.inlineCompletion.filterText,\n            startLine: this.inlineCompletion.range.startLineNumber,\n            startColumn: this.inlineCompletion.range.startColumn,\n            command: this.inlineCompletion.command\n        });\n        this.synchronizedRange = inlineCompletion.range;\n    }\n    toLiveInlineCompletion() {\n        return {\n            insertText: this.inlineCompletion.insertText,\n            range: this.synchronizedRange,\n            command: this.inlineCompletion.command,\n            sourceProvider: this.inlineCompletion.sourceProvider,\n            sourceInlineCompletions: this.inlineCompletion.sourceInlineCompletions,\n            sourceInlineCompletion: this.inlineCompletion.sourceInlineCompletion,\n            snippetInfo: this.inlineCompletion.snippetInfo,\n            filterText: this.inlineCompletion.filterText,\n            additionalTextEdits: this.inlineCompletion.additionalTextEdits,\n        };\n    }\n}\nexport function provideInlineCompletions(registry, position, model, context, token = CancellationToken.None, languageConfigurationService) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const defaultReplaceRange = getDefaultRange(position, model);\n        const providers = registry.all(model);\n        const results = yield Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\n            const completions = yield Promise.resolve(provider.provideInlineCompletions(model, position, context, token)).catch(onUnexpectedExternalError);\n            return ({\n                completions,\n                provider,\n                dispose: () => {\n                    if (completions) {\n                        provider.freeInlineCompletions(completions);\n                    }\n                }\n            });\n        })));\n        const itemsByHash = new Map();\n        for (const result of results) {\n            const completions = result.completions;\n            if (!completions) {\n                continue;\n            }\n            for (const item of completions.items) {\n                let range = item.range ? Range.lift(item.range) : defaultReplaceRange;\n                if (range.startLineNumber !== range.endLineNumber) {\n                    // Ignore invalid ranges.\n                    continue;\n                }\n                let insertText;\n                let snippetInfo;\n                if (typeof item.insertText === 'string') {\n                    insertText = item.insertText;\n                    if (languageConfigurationService && item.completeBracketPairs) {\n                        insertText = closeBrackets(insertText, range.getStartPosition(), model, languageConfigurationService);\n                        // Modify range depending on if brackets are added or removed\n                        const diff = insertText.length - item.insertText.length;\n                        if (diff !== 0) {\n                            range = new Range(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn + diff);\n                        }\n                    }\n                    snippetInfo = undefined;\n                }\n                else if ('snippet' in item.insertText) {\n                    const snippet = new SnippetParser().parse(item.insertText.snippet);\n                    insertText = snippet.toString();\n                    snippetInfo = {\n                        snippet: item.insertText.snippet,\n                        range: range\n                    };\n                }\n                else {\n                    assertNever(item.insertText);\n                }\n                const trackedItem = ({\n                    insertText,\n                    snippetInfo,\n                    range,\n                    command: item.command,\n                    sourceProvider: result.provider,\n                    sourceInlineCompletions: completions,\n                    sourceInlineCompletion: item,\n                    filterText: item.filterText || insertText,\n                    additionalTextEdits: item.additionalTextEdits || getReadonlyEmptyArray()\n                });\n                itemsByHash.set(JSON.stringify({ insertText, range: item.range }), trackedItem);\n            }\n        }\n        return {\n            items: [...itemsByHash.values()],\n            dispose: () => {\n                for (const result of results) {\n                    result.dispose();\n                }\n            },\n        };\n    });\n}\nfunction getDefaultRange(position, model) {\n    const word = model.getWordAtPosition(position);\n    const maxColumn = model.getLineMaxColumn(position.lineNumber);\n    // By default, always replace up until the end of the current line.\n    // This default might be subject to change!\n    return word\n        ? new Range(position.lineNumber, word.startColumn, position.lineNumber, maxColumn)\n        : Range.fromPositions(position, position.with(undefined, maxColumn));\n}\nfunction closeBrackets(text, position, model, languageConfigurationService) {\n    const lineStart = model.getLineContent(position.lineNumber).substring(0, position.column - 1);\n    const newLine = lineStart + text;\n    const newTokens = model.tokenization.tokenizeLineWithEdit(position, newLine.length - (position.column - 1), text);\n    const slicedTokens = newTokens === null || newTokens === void 0 ? void 0 : newTokens.sliceAndInflate(position.column - 1, newLine.length, 0);\n    if (!slicedTokens) {\n        return text;\n    }\n    const newText = fixBracketsInLine(slicedTokens, languageConfigurationService);\n    return newText;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { compareBy, findMaxBy, numberComparator } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { SnippetSession } from '../../snippet/browser/snippetSession.js';\nimport { SuggestController } from '../../suggest/browser/suggestController.js';\nimport { minimizeInlineCompletion, normalizedInlineCompletionsEquals } from './inlineCompletionToGhostText.js';\nexport class SuggestWidgetInlineCompletionProvider extends Disposable {\n    constructor(editor, suggestControllerPreselector) {\n        super();\n        this.editor = editor;\n        this.suggestControllerPreselector = suggestControllerPreselector;\n        this.isSuggestWidgetVisible = false;\n        this.isShiftKeyPressed = false;\n        this._isActive = false;\n        this._currentSuggestItemInfo = undefined;\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        // This delay fixes a suggest widget issue when typing \".\" immediately restarts the suggestion session.\n        this.setInactiveDelayed = this._register(new RunOnceScheduler(() => {\n            if (!this.isSuggestWidgetVisible) {\n                if (this._isActive) {\n                    this._isActive = false;\n                    this.onDidChangeEmitter.fire();\n                }\n            }\n        }, 100));\n        // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\n        this._register(editor.onKeyDown(e => {\n            if (e.shiftKey && !this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = true;\n                this.update(this._isActive);\n            }\n        }));\n        this._register(editor.onKeyUp(e => {\n            if (e.shiftKey && this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = false;\n                this.update(this._isActive);\n            }\n        }));\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            this._register(suggestController.registerSelector({\n                priority: 100,\n                select: (model, pos, suggestItems) => {\n                    const textModel = this.editor.getModel();\n                    const normalizedItemToPreselect = minimizeInlineCompletion(textModel, this.suggestControllerPreselector());\n                    if (!normalizedItemToPreselect) {\n                        return -1;\n                    }\n                    const position = Position.lift(pos);\n                    const candidates = suggestItems\n                        .map((suggestItem, index) => {\n                        const inlineSuggestItem = suggestionToSuggestItemInfo(suggestController, position, suggestItem, this.isShiftKeyPressed);\n                        const normalizedSuggestItem = minimizeInlineCompletion(textModel, inlineSuggestItem === null || inlineSuggestItem === void 0 ? void 0 : inlineSuggestItem.normalizedInlineCompletion);\n                        if (!normalizedSuggestItem) {\n                            return undefined;\n                        }\n                        const valid = rangeStartsWith(normalizedItemToPreselect.range, normalizedSuggestItem.range) &&\n                            normalizedItemToPreselect.insertText.startsWith(normalizedSuggestItem.insertText);\n                        return { index, valid, prefixLength: normalizedSuggestItem.insertText.length, suggestItem };\n                    })\n                        .filter(item => item && item.valid);\n                    const result = findMaxBy(candidates, compareBy(s => s.prefixLength, numberComparator));\n                    return result ? result.index : -1;\n                }\n            }));\n            let isBoundToSuggestWidget = false;\n            const bindToSuggestWidget = () => {\n                if (isBoundToSuggestWidget) {\n                    return;\n                }\n                isBoundToSuggestWidget = true;\n                this._register(suggestController.widget.value.onDidShow(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n                this._register(suggestController.widget.value.onDidHide(() => {\n                    this.isSuggestWidgetVisible = false;\n                    this.setInactiveDelayed.schedule();\n                    this.update(this._isActive);\n                }));\n                this._register(suggestController.widget.value.onDidFocus(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n            };\n            this._register(Event.once(suggestController.model.onDidTrigger)(e => {\n                bindToSuggestWidget();\n            }));\n        }\n        this.update(this._isActive);\n    }\n    /**\n     * Returns undefined if the suggest widget is not active.\n    */\n    get state() {\n        if (!this._isActive) {\n            return undefined;\n        }\n        return { selectedItem: this._currentSuggestItemInfo };\n    }\n    update(newActive) {\n        const newInlineCompletion = this.getSuggestItemInfo();\n        let shouldFire = false;\n        if (!suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\n            this._currentSuggestItemInfo = newInlineCompletion;\n            shouldFire = true;\n        }\n        if (this._isActive !== newActive) {\n            this._isActive = newActive;\n            shouldFire = true;\n        }\n        if (shouldFire) {\n            this.onDidChangeEmitter.fire();\n        }\n    }\n    getSuggestItemInfo() {\n        const suggestController = SuggestController.get(this.editor);\n        if (!suggestController) {\n            return undefined;\n        }\n        if (!this.isSuggestWidgetVisible) {\n            return undefined;\n        }\n        const focusedItem = suggestController.widget.value.getFocusedItem();\n        if (!focusedItem) {\n            return undefined;\n        }\n        // TODO: item.isResolved\n        return suggestionToSuggestItemInfo(suggestController, this.editor.getPosition(), focusedItem.item, this.isShiftKeyPressed);\n    }\n    stopForceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            suggestController.stopForceRenderingAbove();\n        }\n    }\n    forceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            suggestController.forceRenderingAbove();\n        }\n    }\n}\nexport function rangeStartsWith(rangeToTest, prefix) {\n    return (prefix.startLineNumber === rangeToTest.startLineNumber &&\n        prefix.startColumn === rangeToTest.startColumn &&\n        (prefix.endLineNumber < rangeToTest.endLineNumber ||\n            (prefix.endLineNumber === rangeToTest.endLineNumber &&\n                prefix.endColumn <= rangeToTest.endColumn)));\n}\nfunction suggestItemInfoEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    return a.completionItemKind === b.completionItemKind &&\n        a.isSnippetText === b.isSnippetText &&\n        normalizedInlineCompletionsEquals(a.normalizedInlineCompletion, b.normalizedInlineCompletion);\n}\nfunction suggestionToSuggestItemInfo(suggestController, position, item, toggleMode) {\n    // additionalTextEdits might not be resolved here, this could be problematic.\n    if (Array.isArray(item.completion.additionalTextEdits) && item.completion.additionalTextEdits.length > 0) {\n        // cannot represent additional text edits. TODO: Now we can.\n        return {\n            completionItemKind: item.completion.kind,\n            isSnippetText: false,\n            normalizedInlineCompletion: {\n                // Dummy element, so that space is reserved, but no text is shown\n                range: Range.fromPositions(position, position),\n                insertText: '',\n                filterText: '',\n                snippetInfo: undefined,\n                additionalTextEdits: [],\n            },\n        };\n    }\n    let { insertText } = item.completion;\n    let isSnippetText = false;\n    if (item.completion.insertTextRules & 4 /* CompletionItemInsertTextRule.InsertAsSnippet */) {\n        const snippet = new SnippetParser().parse(insertText);\n        const model = suggestController.editor.getModel();\n        // Ignore snippets that are too large.\n        // Adjust whitespace is expensive for them.\n        if (snippet.children.length > 100) {\n            return undefined;\n        }\n        SnippetSession.adjustWhitespace(model, position, snippet, true, true);\n        insertText = snippet.toString();\n        isSnippetText = true;\n    }\n    const info = suggestController.getOverwriteInfo(item, toggleMode);\n    return {\n        isSnippetText,\n        completionItemKind: item.completion.kind,\n        normalizedInlineCompletion: {\n            insertText: insertText,\n            filterText: insertText,\n            range: Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0))),\n            snippetInfo: undefined,\n            additionalTextEdits: [],\n        }\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { BaseGhostTextWidgetModel, GhostText } from './ghostText.js';\nimport { provideInlineCompletions, UpdateOperation } from './inlineCompletionsModel.js';\nimport { inlineCompletionToGhostText, minimizeInlineCompletion } from './inlineCompletionToGhostText.js';\nimport { SuggestWidgetInlineCompletionProvider } from './suggestWidgetInlineCompletionProvider.js';\nlet SuggestWidgetPreviewModel = class SuggestWidgetPreviewModel extends BaseGhostTextWidgetModel {\n    constructor(editor, cache, languageFeaturesService) {\n        super(editor);\n        this.cache = cache;\n        this.languageFeaturesService = languageFeaturesService;\n        this.suggestionInlineCompletionSource = this._register(new SuggestWidgetInlineCompletionProvider(this.editor, \n        // Use the first cache item (if any) as preselection.\n        () => { var _a, _b; return (_b = (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions[0]) === null || _b === void 0 ? void 0 : _b.toLiveInlineCompletion(); }));\n        this.updateOperation = this._register(new MutableDisposable());\n        this.updateCacheSoon = this._register(new RunOnceScheduler(() => this.updateCache(), 50));\n        this.minReservedLineCount = 0;\n        this._register(this.suggestionInlineCompletionSource.onDidChange(() => {\n            if (!this.editor.hasModel()) {\n                // onDidChange might be called when calling setModel on the editor, before we are disposed.\n                return;\n            }\n            this.updateCacheSoon.schedule();\n            const suggestWidgetState = this.suggestionInlineCompletionSource.state;\n            if (!suggestWidgetState) {\n                this.minReservedLineCount = 0;\n            }\n            const newGhostText = this.ghostText;\n            if (newGhostText) {\n                this.minReservedLineCount = Math.max(this.minReservedLineCount, sum(newGhostText.parts.map(p => p.lines.length - 1)));\n            }\n            if (this.minReservedLineCount >= 1) {\n                this.suggestionInlineCompletionSource.forceRenderingAbove();\n            }\n            else {\n                this.suggestionInlineCompletionSource.stopForceRenderingAbove();\n            }\n            this.onDidChangeEmitter.fire();\n        }));\n        this._register(this.cache.onDidChange(() => {\n            this.onDidChangeEmitter.fire();\n        }));\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\n            this.minReservedLineCount = 0;\n            this.updateCacheSoon.schedule();\n            this.onDidChangeEmitter.fire();\n        }));\n        this._register(toDisposable(() => this.suggestionInlineCompletionSource.stopForceRenderingAbove()));\n    }\n    get isActive() {\n        return this.suggestionInlineCompletionSource.state !== undefined;\n    }\n    isSuggestionPreviewEnabled() {\n        const suggestOptions = this.editor.getOption(108 /* EditorOption.suggest */);\n        return suggestOptions.preview;\n    }\n    updateCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const state = this.suggestionInlineCompletionSource.state;\n            if (!state || !state.selectedItem) {\n                return;\n            }\n            const info = {\n                text: state.selectedItem.normalizedInlineCompletion.insertText,\n                range: state.selectedItem.normalizedInlineCompletion.range,\n                isSnippetText: state.selectedItem.isSnippetText,\n                completionKind: state.selectedItem.completionItemKind,\n            };\n            const position = this.editor.getPosition();\n            if (state.selectedItem.isSnippetText ||\n                state.selectedItem.completionItemKind === 27 /* CompletionItemKind.Snippet */ ||\n                state.selectedItem.completionItemKind === 20 /* CompletionItemKind.File */ ||\n                state.selectedItem.completionItemKind === 23 /* CompletionItemKind.Folder */) {\n                // Don't ask providers for these types of suggestions.\n                this.cache.clear();\n                return;\n            }\n            const promise = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                let result;\n                try {\n                    result = yield provideInlineCompletions(this.languageFeaturesService.inlineCompletionsProvider, position, this.editor.getModel(), { triggerKind: InlineCompletionTriggerKind.Automatic, selectedSuggestionInfo: info }, token);\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                    return;\n                }\n                if (token.isCancellationRequested) {\n                    result.dispose();\n                    return;\n                }\n                this.cache.setValue(this.editor, result, InlineCompletionTriggerKind.Automatic);\n                this.onDidChangeEmitter.fire();\n            }));\n            const operation = new UpdateOperation(promise, InlineCompletionTriggerKind.Automatic);\n            this.updateOperation.value = operation;\n            yield promise;\n            if (this.updateOperation.value === operation) {\n                this.updateOperation.clear();\n            }\n        });\n    }\n    get ghostText() {\n        var _a, _b, _c;\n        const isSuggestionPreviewEnabled = this.isSuggestionPreviewEnabled();\n        const model = this.editor.getModel();\n        const augmentedCompletion = minimizeInlineCompletion(model, (_b = (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions[0]) === null || _b === void 0 ? void 0 : _b.toLiveInlineCompletion());\n        const suggestWidgetState = this.suggestionInlineCompletionSource.state;\n        const suggestInlineCompletion = minimizeInlineCompletion(model, (_c = suggestWidgetState === null || suggestWidgetState === void 0 ? void 0 : suggestWidgetState.selectedItem) === null || _c === void 0 ? void 0 : _c.normalizedInlineCompletion);\n        const isAugmentedCompletionValid = augmentedCompletion\n            && suggestInlineCompletion\n            && augmentedCompletion.insertText.startsWith(suggestInlineCompletion.insertText)\n            && augmentedCompletion.range.equalsRange(suggestInlineCompletion.range);\n        if (!isSuggestionPreviewEnabled && !isAugmentedCompletionValid) {\n            return undefined;\n        }\n        // If the augmented completion is not valid and there is no suggest inline completion, we still show the augmented completion.\n        const finalCompletion = isAugmentedCompletionValid ? augmentedCompletion : (suggestInlineCompletion || augmentedCompletion);\n        const inlineCompletionPreviewLength = isAugmentedCompletionValid ? finalCompletion.insertText.length - suggestInlineCompletion.insertText.length : 0;\n        const newGhostText = this.toGhostText(finalCompletion, inlineCompletionPreviewLength);\n        return newGhostText;\n    }\n    toGhostText(completion, inlineCompletionPreviewLength) {\n        const mode = this.editor.getOptions().get(108 /* EditorOption.suggest */).previewMode;\n        return completion\n            ? (inlineCompletionToGhostText(completion, this.editor.getModel(), mode, this.editor.getPosition(), inlineCompletionPreviewLength) ||\n                // Show an invisible ghost text to reserve space\n                new GhostText(completion.range.endLineNumber, [], this.minReservedLineCount))\n            : undefined;\n    }\n};\nSuggestWidgetPreviewModel = __decorate([\n    __param(2, ILanguageFeaturesService)\n], SuggestWidgetPreviewModel);\nexport { SuggestWidgetPreviewModel };\nfunction sum(arr) {\n    return arr.reduce((a, b) => a + b, 0);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { InlineCompletionsModel, SynchronizedInlineCompletionsCache } from './inlineCompletionsModel.js';\nimport { SuggestWidgetPreviewModel } from './suggestWidgetPreviewModel.js';\nimport { createDisposableRef } from './utils.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nexport class DelegatingModel extends Disposable {\n    constructor() {\n        super(...arguments);\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.hasCachedGhostText = false;\n        this.currentModelRef = this._register(new MutableDisposable());\n    }\n    get targetModel() {\n        var _a;\n        return (_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object;\n    }\n    setTargetModel(model) {\n        var _a;\n        if (((_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object) === model) {\n            return;\n        }\n        this.currentModelRef.clear();\n        this.currentModelRef.value = model ? createDisposableRef(model, model.onDidChange(() => {\n            this.hasCachedGhostText = false;\n            this.onDidChangeEmitter.fire();\n        })) : undefined;\n        this.hasCachedGhostText = false;\n        this.onDidChangeEmitter.fire();\n    }\n    get ghostText() {\n        var _a, _b;\n        if (!this.hasCachedGhostText) {\n            this.cachedGhostText = (_b = (_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object) === null || _b === void 0 ? void 0 : _b.ghostText;\n            this.hasCachedGhostText = true;\n        }\n        return this.cachedGhostText;\n    }\n    setExpanded(expanded) {\n        var _a;\n        (_a = this.targetModel) === null || _a === void 0 ? void 0 : _a.setExpanded(expanded);\n    }\n    get minReservedLineCount() {\n        return this.targetModel ? this.targetModel.minReservedLineCount : 0;\n    }\n}\n/**\n * A ghost text model that is both driven by inline completions and the suggest widget.\n*/\nlet GhostTextModel = class GhostTextModel extends DelegatingModel {\n    constructor(editor, instantiationService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.sharedCache = this._register(new SharedInlineCompletionCache());\n        this.suggestWidgetAdapterModel = this._register(this.instantiationService.createInstance(SuggestWidgetPreviewModel, this.editor, this.sharedCache));\n        this.inlineCompletionsModel = this._register(this.instantiationService.createInstance(InlineCompletionsModel, this.editor, this.sharedCache));\n        this._register(this.suggestWidgetAdapterModel.onDidChange(() => {\n            this.updateModel();\n        }));\n        this.updateModel();\n    }\n    get activeInlineCompletionsModel() {\n        if (this.targetModel === this.inlineCompletionsModel) {\n            return this.inlineCompletionsModel;\n        }\n        return undefined;\n    }\n    updateModel() {\n        this.setTargetModel(this.suggestWidgetAdapterModel.isActive\n            ? this.suggestWidgetAdapterModel\n            : this.inlineCompletionsModel);\n        this.inlineCompletionsModel.setActive(this.targetModel === this.inlineCompletionsModel);\n    }\n    shouldShowHoverAt(hoverRange) {\n        var _a;\n        const ghostText = (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.ghostText;\n        if (ghostText) {\n            return ghostText.parts.some(p => hoverRange.containsPosition(new Position(ghostText.lineNumber, p.column)));\n        }\n        return false;\n    }\n    triggerInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.trigger(InlineCompletionTriggerKind.Explicit);\n    }\n    commitInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.commitCurrentSuggestion();\n    }\n    hideInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.hide();\n    }\n    showNextInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.showNext();\n    }\n    showPreviousInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.showPrevious();\n    }\n    hasMultipleInlineCompletions() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield ((_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\n            return result !== undefined ? result : false;\n        });\n    }\n};\nGhostTextModel = __decorate([\n    __param(1, IInstantiationService)\n], GhostTextModel);\nexport { GhostTextModel };\nexport class SharedInlineCompletionCache extends Disposable {\n    constructor() {\n        super(...arguments);\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.cache = this._register(new MutableDisposable());\n    }\n    get value() {\n        return this.cache.value;\n    }\n    setValue(editor, completionsSource, triggerKind) {\n        this.cache.value = new SynchronizedInlineCompletionsCache(completionsSource, editor, () => this.onDidChangeEmitter.fire(), triggerKind);\n    }\n    clearAndLeak() {\n        return this.cache.clearAndLeak();\n    }\n    clear() {\n        this.cache.clear();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar _a;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './ghostText.css';\nimport { applyFontInfo } from '../../../browser/config/domFontInfo.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nimport { LineTokens } from '../../../common/tokens/lineTokens.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { createStringBuilder } from '../../../common/core/stringBuilder.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { ghostTextBackground, ghostTextBorder, ghostTextForeground } from '../../../common/core/editorColorRegistry.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { GhostTextReplacement } from './ghostText.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('editorGhostText', { createHTML: value => value });\nlet GhostTextWidget = class GhostTextWidget extends Disposable {\n    constructor(editor, model, instantiationService, languageService) {\n        super();\n        this.editor = editor;\n        this.model = model;\n        this.instantiationService = instantiationService;\n        this.languageService = languageService;\n        this.disposed = false;\n        this.partsWidget = this._register(this.instantiationService.createInstance(DecorationsWidget, this.editor));\n        this.additionalLinesWidget = this._register(new AdditionalLinesWidget(this.editor, this.languageService.languageIdCodec));\n        this.viewMoreContentWidget = undefined;\n        this.replacementDecoration = this._register(new DisposableDecorations(this.editor));\n        this._register(this.editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(29 /* EditorOption.disableMonospaceOptimizations */)\n                || e.hasChanged(107 /* EditorOption.stopRenderingLineAfter */)\n                || e.hasChanged(90 /* EditorOption.renderWhitespace */)\n                || e.hasChanged(85 /* EditorOption.renderControlCharacters */)\n                || e.hasChanged(47 /* EditorOption.fontLigatures */)\n                || e.hasChanged(46 /* EditorOption.fontInfo */)\n                || e.hasChanged(61 /* EditorOption.lineHeight */)) {\n                this.update();\n            }\n        }));\n        this._register(toDisposable(() => {\n            var _a;\n            this.disposed = true;\n            this.update();\n            (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.viewMoreContentWidget = undefined;\n        }));\n        this._register(model.onDidChange(() => {\n            this.update();\n        }));\n        this.update();\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        return (this.additionalLinesWidget.viewZoneId === viewZoneId);\n    }\n    update() {\n        var _a;\n        const ghostText = this.model.ghostText;\n        if (!this.editor.hasModel() || !ghostText || this.disposed) {\n            this.partsWidget.clear();\n            this.additionalLinesWidget.clear();\n            this.replacementDecoration.clear();\n            return;\n        }\n        const inlineTexts = new Array();\n        const additionalLines = new Array();\n        function addToAdditionalLines(lines, className) {\n            if (additionalLines.length > 0) {\n                const lastLine = additionalLines[additionalLines.length - 1];\n                if (className) {\n                    lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* InlineDecorationType.Regular */));\n                }\n                lastLine.content += lines[0];\n                lines = lines.slice(1);\n            }\n            for (const line of lines) {\n                additionalLines.push({\n                    content: line,\n                    decorations: className ? [new LineDecoration(1, line.length + 1, className, 0 /* InlineDecorationType.Regular */)] : []\n                });\n            }\n        }\n        if (ghostText instanceof GhostTextReplacement) {\n            this.replacementDecoration.setDecorations([\n                {\n                    range: new Range(ghostText.lineNumber, ghostText.columnStart, ghostText.lineNumber, ghostText.columnStart + ghostText.length),\n                    options: {\n                        inlineClassName: 'inline-completion-text-to-replace',\n                        description: 'GhostTextReplacement'\n                    }\n                },\n            ]);\n        }\n        else {\n            this.replacementDecoration.setDecorations([]);\n        }\n        const textBufferLine = this.editor.getModel().getLineContent(ghostText.lineNumber);\n        let hiddenTextStartColumn = undefined;\n        let lastIdx = 0;\n        for (const part of ghostText.parts) {\n            let lines = part.lines;\n            if (hiddenTextStartColumn === undefined) {\n                inlineTexts.push({\n                    column: part.column,\n                    text: lines[0],\n                    preview: part.preview,\n                });\n                lines = lines.slice(1);\n            }\n            else {\n                addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\n            }\n            if (lines.length > 0) {\n                addToAdditionalLines(lines, 'ghost-text');\n                if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\n                    hiddenTextStartColumn = part.column;\n                }\n            }\n            lastIdx = part.column - 1;\n        }\n        if (hiddenTextStartColumn !== undefined) {\n            addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\n        }\n        this.partsWidget.setParts(ghostText.lineNumber, inlineTexts, hiddenTextStartColumn !== undefined ? { column: hiddenTextStartColumn, length: textBufferLine.length + 1 - hiddenTextStartColumn } : undefined);\n        this.additionalLinesWidget.updateLines(ghostText.lineNumber, additionalLines, ghostText.additionalReservedLineCount);\n        if (0 < 0) {\n            // Not supported at the moment, condition is always false.\n            this.viewMoreContentWidget = this.renderViewMoreLines(new Position(ghostText.lineNumber, this.editor.getModel().getLineMaxColumn(ghostText.lineNumber)), '', 0);\n        }\n        else {\n            (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.viewMoreContentWidget = undefined;\n        }\n    }\n    renderViewMoreLines(position, firstLineText, remainingLinesLength) {\n        const fontInfo = this.editor.getOption(46 /* EditorOption.fontInfo */);\n        const domNode = document.createElement('div');\n        domNode.className = 'suggest-preview-additional-widget';\n        applyFontInfo(domNode, fontInfo);\n        const spacer = document.createElement('span');\n        spacer.className = 'content-spacer';\n        spacer.append(firstLineText);\n        domNode.append(spacer);\n        const newline = document.createElement('span');\n        newline.className = 'content-newline suggest-preview-text';\n        newline.append('⏎  ');\n        domNode.append(newline);\n        const disposableStore = new DisposableStore();\n        const button = document.createElement('div');\n        button.className = 'button suggest-preview-text';\n        button.append(`+${remainingLinesLength} lines…`);\n        disposableStore.add(dom.addStandardDisposableListener(button, 'mousedown', (e) => {\n            var _a;\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.setExpanded(true);\n            e.preventDefault();\n            this.editor.focus();\n        }));\n        domNode.append(button);\n        return new ViewMoreLinesContentWidget(this.editor, position, domNode, disposableStore);\n    }\n};\nGhostTextWidget = __decorate([\n    __param(2, IInstantiationService),\n    __param(3, ILanguageService)\n], GhostTextWidget);\nexport { GhostTextWidget };\nclass DisposableDecorations {\n    constructor(editor) {\n        this.editor = editor;\n        this.decorationIds = [];\n    }\n    setDecorations(decorations) {\n        // Using change decorations ensures that we update the id's before some event handler is called.\n        this.editor.changeDecorations(accessor => {\n            this.decorationIds = accessor.deltaDecorations(this.decorationIds, decorations);\n        });\n    }\n    clear() {\n        this.setDecorations([]);\n    }\n    dispose() {\n        this.clear();\n    }\n}\nclass DecorationsWidget {\n    constructor(editor) {\n        this.editor = editor;\n        this.decorationIds = [];\n    }\n    dispose() {\n        this.clear();\n    }\n    clear() {\n        // Using change decorations ensures that we update the id's before some event handler is called.\n        this.editor.changeDecorations(accessor => {\n            this.decorationIds = accessor.deltaDecorations(this.decorationIds, []);\n        });\n    }\n    setParts(lineNumber, parts, hiddenText) {\n        const textModel = this.editor.getModel();\n        if (!textModel) {\n            return;\n        }\n        const hiddenTextDecorations = new Array();\n        if (hiddenText) {\n            hiddenTextDecorations.push({\n                range: Range.fromPositions(new Position(lineNumber, hiddenText.column), new Position(lineNumber, hiddenText.column + hiddenText.length)),\n                options: {\n                    inlineClassName: 'ghost-text-hidden',\n                    description: 'ghost-text-hidden',\n                }\n            });\n        }\n        // Using change decorations ensures that we update the id's before some event handler is called.\n        this.editor.changeDecorations(accessor => {\n            this.decorationIds = accessor.deltaDecorations(this.decorationIds, parts.map(p => {\n                return ({\n                    range: Range.fromPositions(new Position(lineNumber, p.column)),\n                    options: {\n                        description: 'ghost-text',\n                        after: { content: p.text, inlineClassName: p.preview ? 'ghost-text-decoration-preview' : 'ghost-text-decoration', cursorStops: InjectedTextCursorStops.Left },\n                        showIfCollapsed: true,\n                    }\n                });\n            }).concat(hiddenTextDecorations));\n        });\n    }\n}\nclass AdditionalLinesWidget {\n    constructor(editor, languageIdCodec) {\n        this.editor = editor;\n        this.languageIdCodec = languageIdCodec;\n        this._viewZoneId = undefined;\n    }\n    get viewZoneId() { return this._viewZoneId; }\n    dispose() {\n        this.clear();\n    }\n    clear() {\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n        });\n    }\n    updateLines(lineNumber, additionalLines, minReservedLineCount) {\n        const textModel = this.editor.getModel();\n        if (!textModel) {\n            return;\n        }\n        const { tabSize } = textModel.getOptions();\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n            const heightInLines = Math.max(additionalLines.length, minReservedLineCount);\n            if (heightInLines > 0) {\n                const domNode = document.createElement('div');\n                renderLines(domNode, tabSize, additionalLines, this.editor.getOptions(), this.languageIdCodec);\n                this._viewZoneId = changeAccessor.addZone({\n                    afterLineNumber: lineNumber,\n                    heightInLines: heightInLines,\n                    domNode,\n                    afterColumnAffinity: 1 /* PositionAffinity.Right */\n                });\n            }\n        });\n    }\n}\nfunction renderLines(domNode, tabSize, lines, opts, languageIdCodec) {\n    const disableMonospaceOptimizations = opts.get(29 /* EditorOption.disableMonospaceOptimizations */);\n    const stopRenderingLineAfter = opts.get(107 /* EditorOption.stopRenderingLineAfter */);\n    // To avoid visual confusion, we don't want to render visible whitespace\n    const renderWhitespace = 'none';\n    const renderControlCharacters = opts.get(85 /* EditorOption.renderControlCharacters */);\n    const fontLigatures = opts.get(47 /* EditorOption.fontLigatures */);\n    const fontInfo = opts.get(46 /* EditorOption.fontInfo */);\n    const lineHeight = opts.get(61 /* EditorOption.lineHeight */);\n    const sb = createStringBuilder(10000);\n    sb.appendASCIIString('<div class=\"suggest-preview-text\">');\n    for (let i = 0, len = lines.length; i < len; i++) {\n        const lineData = lines[i];\n        const line = lineData.content;\n        sb.appendASCIIString('<div class=\"view-line');\n        sb.appendASCIIString('\" style=\"top:');\n        sb.appendASCIIString(String(i * lineHeight));\n        sb.appendASCIIString('px;width:1000000px;\">');\n        const isBasicASCII = strings.isBasicASCII(line);\n        const containsRTL = strings.containsRTL(line);\n        const lineTokens = LineTokens.createEmpty(line, languageIdCodec);\n        renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, line, false, isBasicASCII, containsRTL, 0, lineTokens, lineData.decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null), sb);\n        sb.appendASCIIString('</div>');\n    }\n    sb.appendASCIIString('</div>');\n    applyFontInfo(domNode, fontInfo);\n    const html = sb.build();\n    const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n    domNode.innerHTML = trustedhtml;\n}\nclass ViewMoreLinesContentWidget extends Disposable {\n    constructor(editor, position, domNode, disposableStore) {\n        super();\n        this.editor = editor;\n        this.position = position;\n        this.domNode = domNode;\n        this.allowEditorOverflow = false;\n        this.suppressMouseDown = false;\n        this._register(disposableStore);\n        this._register(toDisposable(() => {\n            this.editor.removeContentWidget(this);\n        }));\n        this.editor.addContentWidget(this);\n    }\n    getId() {\n        return 'editor.widget.viewMoreLinesWidget';\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    getPosition() {\n        return {\n            position: this.position,\n            preference: [0 /* ContentWidgetPositionPreference.EXACT */]\n        };\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const foreground = theme.getColor(ghostTextForeground);\n    if (foreground) {\n        // `!important` ensures that other decorations don't cause a style conflict (#132017).\n        collector.addRule(`.monaco-editor .ghost-text-decoration { color: ${foreground.toString()} !important; }`);\n        collector.addRule(`.monaco-editor .ghost-text-decoration-preview { color: ${foreground.toString()} !important; }`);\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { color: ${foreground.toString()} !important; }`);\n    }\n    const background = theme.getColor(ghostTextBackground);\n    if (background) {\n        collector.addRule(`.monaco-editor .ghost-text-decoration { background-color: ${background.toString()}; }`);\n        collector.addRule(`.monaco-editor .ghost-text-decoration-preview { background-color: ${background.toString()}; }`);\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { background-color: ${background.toString()}; }`);\n    }\n    const border = theme.getColor(ghostTextBorder);\n    if (border) {\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { border: 1px solid ${border}; }`);\n        collector.addRule(`.monaco-editor .ghost-text-decoration { border: 1px solid ${border}; }`);\n        collector.addRule(`.monaco-editor .ghost-text-decoration-preview { border: 1px solid ${border}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { firstNonWhitespaceIndex } from '../../../../base/common/strings.js';\nimport { EditorAction } from '../../../browser/editorExtensions.js';\nimport { CursorColumns } from '../../../common/core/cursorColumns.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { GhostTextModel } from './ghostTextModel.js';\nimport { GhostTextWidget } from './ghostTextWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nlet GhostTextController = class GhostTextController extends Disposable {\n    constructor(editor, instantiationService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.triggeredExplicitly = false;\n        this.activeController = this._register(new MutableDisposable());\n        this.activeModelDidChangeEmitter = this._register(new Emitter());\n        this._register(this.editor.onDidChangeModel(() => {\n            this.updateModelController();\n        }));\n        this._register(this.editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(108 /* EditorOption.suggest */)) {\n                this.updateModelController();\n            }\n            if (e.hasChanged(57 /* EditorOption.inlineSuggest */)) {\n                this.updateModelController();\n            }\n        }));\n        this.updateModelController();\n    }\n    static get(editor) {\n        return editor.getContribution(GhostTextController.ID);\n    }\n    get activeModel() {\n        var _a;\n        return (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.model;\n    }\n    // Don't call this method when not necessary. It will recreate the activeController.\n    updateModelController() {\n        const suggestOptions = this.editor.getOption(108 /* EditorOption.suggest */);\n        const inlineSuggestOptions = this.editor.getOption(57 /* EditorOption.inlineSuggest */);\n        this.activeController.value = undefined;\n        // ActiveGhostTextController is only created if one of those settings is set or if the inline completions are triggered explicitly.\n        this.activeController.value =\n            this.editor.hasModel() && (suggestOptions.preview || inlineSuggestOptions.enabled || this.triggeredExplicitly)\n                ? this.instantiationService.createInstance(ActiveGhostTextController, this.editor)\n                : undefined;\n        this.activeModelDidChangeEmitter.fire();\n    }\n    shouldShowHoverAt(hoverRange) {\n        var _a;\n        return ((_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.shouldShowHoverAt(hoverRange)) || false;\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        var _a, _b;\n        return ((_b = (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.widget) === null || _b === void 0 ? void 0 : _b.shouldShowHoverAtViewZone(viewZoneId)) || false;\n    }\n    trigger() {\n        var _a;\n        this.triggeredExplicitly = true;\n        if (!this.activeController.value) {\n            this.updateModelController();\n        }\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.triggerInlineCompletion();\n    }\n    commit() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.commitInlineCompletion();\n    }\n    hide() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.hideInlineCompletion();\n    }\n    showNextInlineCompletion() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.showNextInlineCompletion();\n    }\n    showPreviousInlineCompletion() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.showPreviousInlineCompletion();\n    }\n    hasMultipleInlineCompletions() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield ((_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\n            return result !== undefined ? result : false;\n        });\n    }\n};\nGhostTextController.inlineSuggestionVisible = new RawContextKey('inlineSuggestionVisible', false, nls.localize('inlineSuggestionVisible', \"Whether an inline suggestion is visible\"));\nGhostTextController.inlineSuggestionHasIndentation = new RawContextKey('inlineSuggestionHasIndentation', false, nls.localize('inlineSuggestionHasIndentation', \"Whether the inline suggestion starts with whitespace\"));\nGhostTextController.inlineSuggestionHasIndentationLessThanTabSize = new RawContextKey('inlineSuggestionHasIndentationLessThanTabSize', true, nls.localize('inlineSuggestionHasIndentationLessThanTabSize', \"Whether the inline suggestion starts with whitespace that is less than what would be inserted by tab\"));\nGhostTextController.ID = 'editor.contrib.ghostTextController';\nGhostTextController = __decorate([\n    __param(1, IInstantiationService)\n], GhostTextController);\nexport { GhostTextController };\nclass GhostTextContextKeys {\n    constructor(contextKeyService) {\n        this.contextKeyService = contextKeyService;\n        this.inlineCompletionVisible = GhostTextController.inlineSuggestionVisible.bindTo(this.contextKeyService);\n        this.inlineCompletionSuggestsIndentation = GhostTextController.inlineSuggestionHasIndentation.bindTo(this.contextKeyService);\n        this.inlineCompletionSuggestsIndentationLessThanTabSize = GhostTextController.inlineSuggestionHasIndentationLessThanTabSize.bindTo(this.contextKeyService);\n    }\n}\n/**\n * The controller for a text editor with an initialized text model.\n * Must be disposed as soon as the model detaches from the editor.\n*/\nlet ActiveGhostTextController = class ActiveGhostTextController extends Disposable {\n    constructor(editor, instantiationService, contextKeyService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.contextKeys = new GhostTextContextKeys(this.contextKeyService);\n        this.model = this._register(this.instantiationService.createInstance(GhostTextModel, this.editor));\n        this.widget = this._register(this.instantiationService.createInstance(GhostTextWidget, this.editor, this.model));\n        this._register(toDisposable(() => {\n            this.contextKeys.inlineCompletionVisible.set(false);\n            this.contextKeys.inlineCompletionSuggestsIndentation.set(false);\n            this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(true);\n        }));\n        this._register(this.model.onDidChange(() => {\n            this.updateContextKeys();\n        }));\n        this.updateContextKeys();\n    }\n    updateContextKeys() {\n        var _a;\n        this.contextKeys.inlineCompletionVisible.set(((_a = this.model.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.ghostText) !== undefined);\n        let startsWithIndentation = false;\n        let startsWithIndentationLessThanTabSize = true;\n        const ghostText = this.model.inlineCompletionsModel.ghostText;\n        if (!!this.model.activeInlineCompletionsModel && ghostText && ghostText.parts.length > 0) {\n            const { column, lines } = ghostText.parts[0];\n            const firstLine = lines[0];\n            const indentationEndColumn = this.editor.getModel().getLineIndentColumn(ghostText.lineNumber);\n            const inIndentation = column <= indentationEndColumn;\n            if (inIndentation) {\n                let firstNonWsIdx = firstNonWhitespaceIndex(firstLine);\n                if (firstNonWsIdx === -1) {\n                    firstNonWsIdx = firstLine.length - 1;\n                }\n                startsWithIndentation = firstNonWsIdx > 0;\n                const tabSize = this.editor.getModel().getOptions().tabSize;\n                const visibleColumnIndentation = CursorColumns.visibleColumnFromColumn(firstLine, firstNonWsIdx + 1, tabSize);\n                startsWithIndentationLessThanTabSize = visibleColumnIndentation < tabSize;\n            }\n        }\n        this.contextKeys.inlineCompletionSuggestsIndentation.set(startsWithIndentation);\n        this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(startsWithIndentationLessThanTabSize);\n    }\n};\nActiveGhostTextController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IContextKeyService)\n], ActiveGhostTextController);\nexport { ActiveGhostTextController };\nexport class ShowNextInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: ShowNextInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showNext', \"Show Next Inline Suggestion\"),\n            alias: 'Show Next Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* KeyMod.Alt */ | 89 /* KeyCode.BracketRight */,\n            },\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            if (controller) {\n                controller.showNextInlineCompletion();\n                editor.focus();\n            }\n        });\n    }\n}\nShowNextInlineSuggestionAction.ID = 'editor.action.inlineSuggest.showNext';\nexport class ShowPreviousInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: ShowPreviousInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showPrevious', \"Show Previous Inline Suggestion\"),\n            alias: 'Show Previous Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* KeyMod.Alt */ | 87 /* KeyCode.BracketLeft */,\n            },\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            if (controller) {\n                controller.showPreviousInlineCompletion();\n                editor.focus();\n            }\n        });\n    }\n}\nShowPreviousInlineSuggestionAction.ID = 'editor.action.inlineSuggest.showPrevious';\nexport class TriggerInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.trigger',\n            label: nls.localize('action.inlineSuggest.trigger', \"Trigger Inline Suggestion\"),\n            alias: 'Trigger Inline Suggestion',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            if (controller) {\n                controller.trigger();\n            }\n        });\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { GhostTextController, ShowNextInlineSuggestionAction, ShowPreviousInlineSuggestionAction } from './ghostTextController.js';\nimport * as nls from '../../../../nls.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { IMenuService, MenuId, MenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { inlineSuggestCommitId } from './consts.js';\nexport class InlineCompletionsHover {\n    constructor(owner, range, controller) {\n        this.owner = owner;\n        this.range = range;\n        this.controller = controller;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n    hasMultipleSuggestions() {\n        return this.controller.hasMultipleInlineCompletions();\n    }\n    get commands() {\n        var _a, _b, _c;\n        return ((_c = (_b = (_a = this.controller.activeModel) === null || _a === void 0 ? void 0 : _a.activeInlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.completionSession.value) === null || _c === void 0 ? void 0 : _c.commands) || [];\n    }\n}\nlet InlineCompletionsHoverParticipant = class InlineCompletionsHoverParticipant {\n    constructor(_editor, _commandService, _menuService, _contextKeyService, _languageService, _openerService, accessibilityService) {\n        this._editor = _editor;\n        this._commandService = _commandService;\n        this._menuService = _menuService;\n        this._contextKeyService = _contextKeyService;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this.accessibilityService = accessibilityService;\n        this.hoverOrdinal = 3;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        const controller = GhostTextController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        const target = mouseEvent.target;\n        if (target.type === 8 /* MouseTargetType.CONTENT_VIEW_ZONE */) {\n            // handle the case where the mouse is over the view zone\n            const viewZoneData = target.detail;\n            if (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) {\n                return new HoverForeignElementAnchor(1000, this, Range.fromPositions(viewZoneData.positionBefore || viewZoneData.position, viewZoneData.positionBefore || viewZoneData.position));\n            }\n        }\n        if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            // handle the case where the mouse is over the empty portion of a line following ghost text\n            if (controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range);\n            }\n        }\n        if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            // handle the case where the mouse is directly over ghost text\n            const mightBeForeignElement = target.detail.mightBeForeignElement;\n            if (mightBeForeignElement && controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range);\n            }\n        }\n        return null;\n    }\n    computeSync(anchor, lineDecorations) {\n        const controller = GhostTextController.get(this._editor);\n        if (controller && controller.shouldShowHoverAt(anchor.range)) {\n            return [new InlineCompletionsHover(this, anchor.range, controller)];\n        }\n        return [];\n    }\n    renderHoverParts(context, hoverParts) {\n        const disposableStore = new DisposableStore();\n        const part = hoverParts[0];\n        if (this.accessibilityService.isScreenReaderOptimized()) {\n            this.renderScreenReaderText(context, part, disposableStore);\n        }\n        // TODO@hediet: deprecate MenuId.InlineCompletionsActions\n        const menu = disposableStore.add(this._menuService.createMenu(MenuId.InlineCompletionsActions, this._contextKeyService));\n        const previousAction = context.statusBar.addAction({\n            label: nls.localize('showNextInlineSuggestion', \"Next\"),\n            commandId: ShowNextInlineSuggestionAction.ID,\n            run: () => this._commandService.executeCommand(ShowNextInlineSuggestionAction.ID)\n        });\n        const nextAction = context.statusBar.addAction({\n            label: nls.localize('showPreviousInlineSuggestion', \"Previous\"),\n            commandId: ShowPreviousInlineSuggestionAction.ID,\n            run: () => this._commandService.executeCommand(ShowPreviousInlineSuggestionAction.ID)\n        });\n        context.statusBar.addAction({\n            label: nls.localize('acceptInlineSuggestion', \"Accept\"),\n            commandId: inlineSuggestCommitId,\n            run: () => this._commandService.executeCommand(inlineSuggestCommitId)\n        });\n        const actions = [previousAction, nextAction];\n        for (const action of actions) {\n            action.setEnabled(false);\n        }\n        part.hasMultipleSuggestions().then(hasMore => {\n            for (const action of actions) {\n                action.setEnabled(hasMore);\n            }\n        });\n        for (const command of part.commands) {\n            context.statusBar.addAction({\n                label: command.title,\n                commandId: command.id,\n                run: () => this._commandService.executeCommand(command.id, ...(command.arguments || []))\n            });\n        }\n        for (const [_, group] of menu.getActions()) {\n            for (const action of group) {\n                if (action instanceof MenuItemAction) {\n                    context.statusBar.addAction({\n                        label: action.label,\n                        commandId: action.item.id,\n                        run: () => this._commandService.executeCommand(action.item.id)\n                    });\n                }\n            }\n        }\n        return disposableStore;\n    }\n    renderScreenReaderText(context, part, disposableStore) {\n        var _a, _b;\n        const $ = dom.$;\n        const markdownHoverElement = $('div.hover-row.markdown-hover');\n        const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n        const renderer = disposableStore.add(new MarkdownRenderer({ editor: this._editor }, this._languageService, this._openerService));\n        const render = (code) => {\n            disposableStore.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const inlineSuggestionAvailable = nls.localize('inlineSuggestionFollows', \"Suggestion:\");\n            const renderedContents = disposableStore.add(renderer.render(new MarkdownString().appendText(inlineSuggestionAvailable).appendCodeblock('text', code)));\n            hoverContentsElement.replaceChildren(renderedContents.element);\n        };\n        const ghostText = (_b = (_a = part.controller.activeModel) === null || _a === void 0 ? void 0 : _a.inlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.ghostText;\n        if (ghostText) {\n            const lineText = this._editor.getModel().getLineContent(ghostText.lineNumber);\n            render(ghostText.renderForScreenReader(lineText));\n        }\n        context.fragment.appendChild(markdownHoverElement);\n    }\n};\nInlineCompletionsHoverParticipant = __decorate([\n    __param(1, ICommandService),\n    __param(2, IMenuService),\n    __param(3, IContextKeyService),\n    __param(4, ILanguageService),\n    __param(5, IOpenerService),\n    __param(6, IAccessibilityService)\n], InlineCompletionsHoverParticipant);\nexport { InlineCompletionsHoverParticipant };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { inlineSuggestCommitId } from './consts.js';\nimport { GhostTextController, ShowNextInlineSuggestionAction, ShowPreviousInlineSuggestionAction, TriggerInlineSuggestionAction } from './ghostTextController.js';\nimport { InlineCompletionsHoverParticipant } from './ghostTextHoverParticipant.js';\nimport { ContextKeyExpr } from '../../../../platform/contextkey/common/contextkey.js';\nimport { KeybindingsRegistry } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nregisterEditorContribution(GhostTextController.ID, GhostTextController);\nregisterEditorAction(TriggerInlineSuggestionAction);\nregisterEditorAction(ShowNextInlineSuggestionAction);\nregisterEditorAction(ShowPreviousInlineSuggestionAction);\nHoverParticipantRegistry.register(InlineCompletionsHoverParticipant);\nconst GhostTextCommand = EditorCommand.bindToContribution(GhostTextController.get);\nexport const commitInlineSuggestionAction = new GhostTextCommand({\n    id: inlineSuggestCommitId,\n    precondition: GhostTextController.inlineSuggestionVisible,\n    handler(x) {\n        x.commit();\n        x.editor.focus();\n    }\n});\nregisterEditorCommand(commitInlineSuggestionAction);\nKeybindingsRegistry.registerKeybindingRule({\n    primary: 2 /* KeyCode.Tab */,\n    weight: 200,\n    id: commitInlineSuggestionAction.id,\n    when: ContextKeyExpr.and(commitInlineSuggestionAction.precondition, EditorContextKeys.tabMovesFocus.toNegated(), GhostTextController.inlineSuggestionHasIndentationLessThanTabSize),\n});\nregisterEditorCommand(new GhostTextCommand({\n    id: 'editor.action.inlineSuggest.hide',\n    precondition: GhostTextController.inlineSuggestionVisible,\n    kbOpts: {\n        weight: 100,\n        primary: 9 /* KeyCode.Escape */,\n    },\n    handler(x) {\n        x.hide();\n    }\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { CursorMoveCommands } from '../../../common/cursor/cursorMoveCommands.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nexport class ExpandLineSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'expandLineSelection',\n            label: nls.localize('expandLineSelection', \"Expand Line Selection\"),\n            alias: 'Expand Line Selection',\n            precondition: undefined,\n            kbOpts: {\n                weight: 0 /* KeybindingWeight.EditorCore */,\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 42 /* KeyCode.KeyL */\n            },\n        });\n    }\n    run(_accessor, editor, args) {\n        args = args || {};\n        if (!editor.hasModel()) {\n            return;\n        }\n        const viewModel = editor._getViewModel();\n        viewModel.model.pushStackElement();\n        viewModel.setCursorStates(args.source, 3 /* CursorChangeReason.Explicit */, CursorMoveCommands.expandLineSelection(viewModel, viewModel.getCursorStates()));\n        viewModel.revealPrimaryCursor(args.source, true);\n    }\n}\nregisterEditorAction(ExpandLineSelectionAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class CopyLinesCommand {\n    constructor(selection, isCopyingDown, noop) {\n        this._selection = selection;\n        this._isCopyingDown = isCopyingDown;\n        this._noop = noop || false;\n        this._selectionDirection = 0 /* SelectionDirection.LTR */;\n        this._selectionId = null;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n    }\n    getEditOperations(model, builder) {\n        let s = this._selection;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._endLineNumberDelta = 1;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const sourceLines = [];\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            sourceLines.push(model.getLineContent(i));\n        }\n        const sourceText = sourceLines.join('\\n');\n        if (sourceText === '') {\n            // Duplicating empty line\n            if (this._isCopyingDown) {\n                this._startLineNumberDelta++;\n                this._endLineNumberDelta++;\n            }\n        }\n        if (this._noop) {\n            builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber + 1, 1), s.endLineNumber === model.getLineCount() ? '' : '\\n');\n        }\n        else {\n            if (!this._isCopyingDown) {\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + sourceText);\n            }\n            else {\n                builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), sourceText + '\\n');\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n        this._selectionDirection = this._selection.getDirection();\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._startLineNumberDelta !== 0 || this._endLineNumberDelta !== 0) {\n            let startLineNumber = result.startLineNumber;\n            let startColumn = result.startColumn;\n            let endLineNumber = result.endLineNumber;\n            let endColumn = result.endColumn;\n            if (this._startLineNumberDelta !== 0) {\n                startLineNumber = startLineNumber + this._startLineNumberDelta;\n                startColumn = 1;\n            }\n            if (this._endLineNumberDelta !== 0) {\n                endLineNumber = endLineNumber + this._endLineNumberDelta;\n                endColumn = 1;\n            }\n            result = Selection.createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, this._selectionDirection);\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as strings from '../../../../base/common/strings.js';\nimport { ShiftCommand } from '../../../common/commands/shiftCommand.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IndentAction } from '../../../common/languages/languageConfiguration.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport * as indentUtils from '../../indentation/browser/indentUtils.js';\nimport { getGoodIndentForLine, getIndentMetadata } from '../../../common/languages/autoIndent.js';\nimport { getEnterAction } from '../../../common/languages/enterAction.js';\nlet MoveLinesCommand = class MoveLinesCommand {\n    constructor(selection, isMovingDown, autoIndent, _languageConfigurationService) {\n        this._languageConfigurationService = _languageConfigurationService;\n        this._selection = selection;\n        this._isMovingDown = isMovingDown;\n        this._autoIndent = autoIndent;\n        this._selectionId = null;\n        this._moveEndLineSelectionShrink = false;\n    }\n    getEditOperations(model, builder) {\n        const modelLineCount = model.getLineCount();\n        if (this._isMovingDown && this._selection.endLineNumber === modelLineCount) {\n            this._selectionId = builder.trackSelection(this._selection);\n            return;\n        }\n        if (!this._isMovingDown && this._selection.startLineNumber === 1) {\n            this._selectionId = builder.trackSelection(this._selection);\n            return;\n        }\n        this._moveEndPositionDown = false;\n        let s = this._selection;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._moveEndPositionDown = true;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\n        const indentConverter = this.buildIndentConverter(tabSize, indentSize, insertSpaces);\n        const virtualModel = {\n            tokenization: {\n                getLineTokens: (lineNumber) => {\n                    return model.tokenization.getLineTokens(lineNumber);\n                },\n                getLanguageId: () => {\n                    return model.getLanguageId();\n                },\n                getLanguageIdAtPosition: (lineNumber, column) => {\n                    return model.getLanguageIdAtPosition(lineNumber, column);\n                },\n            },\n            getLineContent: null,\n        };\n        if (s.startLineNumber === s.endLineNumber && model.getLineMaxColumn(s.startLineNumber) === 1) {\n            // Current line is empty\n            const lineNumber = s.startLineNumber;\n            const otherLineNumber = (this._isMovingDown ? lineNumber + 1 : lineNumber - 1);\n            if (model.getLineMaxColumn(otherLineNumber) === 1) {\n                // Other line number is empty too, so no editing is needed\n                // Add a no-op to force running by the model\n                builder.addEditOperation(new Range(1, 1, 1, 1), null);\n            }\n            else {\n                // Type content from other line number on line number\n                builder.addEditOperation(new Range(lineNumber, 1, lineNumber, 1), model.getLineContent(otherLineNumber));\n                // Remove content from other line number\n                builder.addEditOperation(new Range(otherLineNumber, 1, otherLineNumber, model.getLineMaxColumn(otherLineNumber)), null);\n            }\n            // Track selection at the other line number\n            s = new Selection(otherLineNumber, 1, otherLineNumber, 1);\n        }\n        else {\n            let movingLineNumber;\n            let movingLineText;\n            if (this._isMovingDown) {\n                movingLineNumber = s.endLineNumber + 1;\n                movingLineText = model.getLineContent(movingLineNumber);\n                // Delete line that needs to be moved\n                builder.addEditOperation(new Range(movingLineNumber - 1, model.getLineMaxColumn(movingLineNumber - 1), movingLineNumber, model.getLineMaxColumn(movingLineNumber)), null);\n                let insertingText = movingLineText;\n                if (this.shouldAutoIndent(model, s)) {\n                    const movingLineMatchResult = this.matchEnterRule(model, indentConverter, tabSize, movingLineNumber, s.startLineNumber - 1);\n                    // if s.startLineNumber - 1 matches onEnter rule, we still honor that.\n                    if (movingLineMatchResult !== null) {\n                        const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\n                        const newSpaceCnt = movingLineMatchResult + indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                        const newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                        insertingText = newIndentation + this.trimLeft(movingLineText);\n                    }\n                    else {\n                        // no enter rule matches, let's check indentatin rules then.\n                        virtualModel.getLineContent = (lineNumber) => {\n                            if (lineNumber === s.startLineNumber) {\n                                return model.getLineContent(movingLineNumber);\n                            }\n                            else {\n                                return model.getLineContent(lineNumber);\n                            }\n                        };\n                        const indentOfMovingLine = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber, indentConverter, this._languageConfigurationService);\n                        if (indentOfMovingLine !== null) {\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(indentOfMovingLine, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                                insertingText = newIndentation + this.trimLeft(movingLineText);\n                            }\n                        }\n                    }\n                    // add edit operations for moving line first to make sure it's executed after we make indentation change\n                    // to s.startLineNumber\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\n                    const ret = this.matchEnterRuleMovingDown(model, indentConverter, tabSize, s.startLineNumber, movingLineNumber, insertingText);\n                    // check if the line being moved before matches onEnter rules, if so let's adjust the indentation by onEnter rules.\n                    if (ret !== null) {\n                        if (ret !== 0) {\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\n                        }\n                    }\n                    else {\n                        // it doesn't match onEnter rules, let's check indentation rules then.\n                        virtualModel.getLineContent = (lineNumber) => {\n                            if (lineNumber === s.startLineNumber) {\n                                return insertingText;\n                            }\n                            else if (lineNumber >= s.startLineNumber + 1 && lineNumber <= s.endLineNumber + 1) {\n                                return model.getLineContent(lineNumber - 1);\n                            }\n                            else {\n                                return model.getLineContent(lineNumber);\n                            }\n                        };\n                        const newIndentatOfMovingBlock = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber + 1, indentConverter, this._languageConfigurationService);\n                        if (newIndentatOfMovingBlock !== null) {\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(newIndentatOfMovingBlock, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\n                            }\n                        }\n                    }\n                }\n                else {\n                    // Insert line that needs to be moved before\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\n                }\n            }\n            else {\n                movingLineNumber = s.startLineNumber - 1;\n                movingLineText = model.getLineContent(movingLineNumber);\n                // Delete line that needs to be moved\n                builder.addEditOperation(new Range(movingLineNumber, 1, movingLineNumber + 1, 1), null);\n                // Insert line that needs to be moved after\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + movingLineText);\n                if (this.shouldAutoIndent(model, s)) {\n                    virtualModel.getLineContent = (lineNumber) => {\n                        if (lineNumber === movingLineNumber) {\n                            return model.getLineContent(s.startLineNumber);\n                        }\n                        else {\n                            return model.getLineContent(lineNumber);\n                        }\n                    };\n                    const ret = this.matchEnterRule(model, indentConverter, tabSize, s.startLineNumber, s.startLineNumber - 2);\n                    // check if s.startLineNumber - 2 matches onEnter rules, if so adjust the moving block by onEnter rules.\n                    if (ret !== null) {\n                        if (ret !== 0) {\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\n                        }\n                    }\n                    else {\n                        // it doesn't match any onEnter rule, let's check indentation rules then.\n                        const indentOfFirstLine = getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(s.startLineNumber, 1), movingLineNumber, indentConverter, this._languageConfigurationService);\n                        if (indentOfFirstLine !== null) {\n                            // adjust the indentation of the moving block\n                            const oldIndent = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndent, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n    }\n    buildIndentConverter(tabSize, indentSize, insertSpaces) {\n        return {\n            shiftIndent: (indentation) => {\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            },\n            unshiftIndent: (indentation) => {\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            }\n        };\n    }\n    parseEnterResult(model, indentConverter, tabSize, line, enter) {\n        if (enter) {\n            let enterPrefix = enter.indentation;\n            if (enter.indentAction === IndentAction.None) {\n                enterPrefix = enter.indentation + enter.appendText;\n            }\n            else if (enter.indentAction === IndentAction.Indent) {\n                enterPrefix = enter.indentation + enter.appendText;\n            }\n            else if (enter.indentAction === IndentAction.IndentOutdent) {\n                enterPrefix = enter.indentation;\n            }\n            else if (enter.indentAction === IndentAction.Outdent) {\n                enterPrefix = indentConverter.unshiftIndent(enter.indentation) + enter.appendText;\n            }\n            const movingLineText = model.getLineContent(line);\n            if (this.trimLeft(movingLineText).indexOf(this.trimLeft(enterPrefix)) >= 0) {\n                const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(line));\n                let newIndentation = strings.getLeadingWhitespace(enterPrefix);\n                const indentMetadataOfMovelingLine = getIndentMetadata(model, line, this._languageConfigurationService);\n                if (indentMetadataOfMovelingLine !== null && indentMetadataOfMovelingLine & 2 /* IndentConsts.DECREASE_MASK */) {\n                    newIndentation = indentConverter.unshiftIndent(newIndentation);\n                }\n                const newSpaceCnt = indentUtils.getSpaceCnt(newIndentation, tabSize);\n                const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                return newSpaceCnt - oldSpaceCnt;\n            }\n        }\n        return null;\n    }\n    /**\n     *\n     * @param model\n     * @param indentConverter\n     * @param tabSize\n     * @param line the line moving down\n     * @param futureAboveLineNumber the line which will be at the `line` position\n     * @param futureAboveLineText\n     */\n    matchEnterRuleMovingDown(model, indentConverter, tabSize, line, futureAboveLineNumber, futureAboveLineText) {\n        if (strings.lastNonWhitespaceIndex(futureAboveLineText) >= 0) {\n            // break\n            const maxColumn = model.getLineMaxColumn(futureAboveLineNumber);\n            const enter = getEnterAction(this._autoIndent, model, new Range(futureAboveLineNumber, maxColumn, futureAboveLineNumber, maxColumn), this._languageConfigurationService);\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n        }\n        else {\n            // go upwards, starting from `line - 1`\n            let validPrecedingLine = line - 1;\n            while (validPrecedingLine >= 1) {\n                const lineContent = model.getLineContent(validPrecedingLine);\n                const nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\n                if (nonWhitespaceIdx >= 0) {\n                    break;\n                }\n                validPrecedingLine--;\n            }\n            if (validPrecedingLine < 1 || line > model.getLineCount()) {\n                return null;\n            }\n            const maxColumn = model.getLineMaxColumn(validPrecedingLine);\n            const enter = getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn), this._languageConfigurationService);\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n        }\n    }\n    matchEnterRule(model, indentConverter, tabSize, line, oneLineAbove, previousLineText) {\n        let validPrecedingLine = oneLineAbove;\n        while (validPrecedingLine >= 1) {\n            // ship empty lines as empty lines just inherit indentation\n            let lineContent;\n            if (validPrecedingLine === oneLineAbove && previousLineText !== undefined) {\n                lineContent = previousLineText;\n            }\n            else {\n                lineContent = model.getLineContent(validPrecedingLine);\n            }\n            const nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\n            if (nonWhitespaceIdx >= 0) {\n                break;\n            }\n            validPrecedingLine--;\n        }\n        if (validPrecedingLine < 1 || line > model.getLineCount()) {\n            return null;\n        }\n        const maxColumn = model.getLineMaxColumn(validPrecedingLine);\n        const enter = getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn), this._languageConfigurationService);\n        return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n    }\n    trimLeft(str) {\n        return str.replace(/^\\s+/, '');\n    }\n    shouldAutoIndent(model, selection) {\n        if (this._autoIndent < 4 /* EditorAutoIndentStrategy.Full */) {\n            return false;\n        }\n        // if it's not easy to tokenize, we stop auto indent.\n        if (!model.tokenization.isCheapToTokenize(selection.startLineNumber)) {\n            return false;\n        }\n        const languageAtSelectionStart = model.getLanguageIdAtPosition(selection.startLineNumber, 1);\n        const languageAtSelectionEnd = model.getLanguageIdAtPosition(selection.endLineNumber, 1);\n        if (languageAtSelectionStart !== languageAtSelectionEnd) {\n            return false;\n        }\n        if (this._languageConfigurationService.getLanguageConfiguration(languageAtSelectionStart).indentRulesSupport === null) {\n            return false;\n        }\n        return true;\n    }\n    getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, offset) {\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            const lineContent = model.getLineContent(i);\n            const originalIndent = strings.getLeadingWhitespace(lineContent);\n            const originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\n            const newSpacesCnt = originalSpacesCnt + offset;\n            const newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\n            if (newIndent !== originalIndent) {\n                builder.addEditOperation(new Range(i, 1, i, originalIndent.length + 1), newIndent);\n                if (i === s.endLineNumber && s.endColumn <= originalIndent.length + 1 && newIndent === '') {\n                    // as users select part of the original indent white spaces\n                    // when we adjust the indentation of endLine, we should adjust the cursor position as well.\n                    this._moveEndLineSelectionShrink = true;\n                }\n            }\n        }\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._moveEndPositionDown) {\n            result = result.setEndPosition(result.endLineNumber + 1, 1);\n        }\n        if (this._moveEndLineSelectionShrink && result.startLineNumber < result.endLineNumber) {\n            result = result.setEndPosition(result.endLineNumber, 2);\n        }\n        return result;\n    }\n};\nMoveLinesCommand = __decorate([\n    __param(3, ILanguageConfigurationService)\n], MoveLinesCommand);\nexport { MoveLinesCommand };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nexport class SortLinesCommand {\n    constructor(selection, descending) {\n        this.selection = selection;\n        this.descending = descending;\n        this.selectionId = null;\n    }\n    static getCollator() {\n        if (!SortLinesCommand._COLLATOR) {\n            SortLinesCommand._COLLATOR = new Intl.Collator();\n        }\n        return SortLinesCommand._COLLATOR;\n    }\n    getEditOperations(model, builder) {\n        const op = sortLines(model, this.selection, this.descending);\n        if (op) {\n            builder.addEditOperation(op.range, op.text);\n        }\n        this.selectionId = builder.trackSelection(this.selection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n    static canRun(model, selection, descending) {\n        if (model === null) {\n            return false;\n        }\n        const data = getSortData(model, selection, descending);\n        if (!data) {\n            return false;\n        }\n        for (let i = 0, len = data.before.length; i < len; i++) {\n            if (data.before[i] !== data.after[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nSortLinesCommand._COLLATOR = null;\nfunction getSortData(model, selection, descending) {\n    const startLineNumber = selection.startLineNumber;\n    let endLineNumber = selection.endLineNumber;\n    if (selection.endColumn === 1) {\n        endLineNumber--;\n    }\n    // Nothing to sort if user didn't select anything.\n    if (startLineNumber >= endLineNumber) {\n        return null;\n    }\n    const linesToSort = [];\n    // Get the contents of the selection to be sorted.\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        linesToSort.push(model.getLineContent(lineNumber));\n    }\n    let sorted = linesToSort.slice(0);\n    sorted.sort(SortLinesCommand.getCollator().compare);\n    // If descending, reverse the order.\n    if (descending === true) {\n        sorted = sorted.reverse();\n    }\n    return {\n        startLineNumber: startLineNumber,\n        endLineNumber: endLineNumber,\n        before: linesToSort,\n        after: sorted\n    };\n}\n/**\n * Generate commands for sorting lines on a model.\n */\nfunction sortLines(model, selection, descending) {\n    const data = getSortData(model, selection, descending);\n    if (!data) {\n        return null;\n    }\n    return EditOperation.replace(new Range(data.startLineNumber, 1, data.endLineNumber, model.getLineMaxColumn(data.endLineNumber)), data.after.join('\\n'));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection, ReplaceCommandThatSelectsText } from '../../../common/commands/replaceCommand.js';\nimport { TrimTrailingWhitespaceCommand } from '../../../common/commands/trimTrailingWhitespaceCommand.js';\nimport { TypeOperations } from '../../../common/cursor/cursorTypeOperations.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { CopyLinesCommand } from './copyLinesCommand.js';\nimport { MoveLinesCommand } from './moveLinesCommand.js';\nimport { SortLinesCommand } from './sortLinesCommand.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\n// copy lines\nclass AbstractCopyLinesAction extends EditorAction {\n    constructor(down, opts) {\n        super(opts);\n        this.down = down;\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections().map((selection, index) => ({ selection, index, ignore: false }));\n        selections.sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\n        // Remove selections that would result in copying the same line\n        let prev = selections[0];\n        for (let i = 1; i < selections.length; i++) {\n            const curr = selections[i];\n            if (prev.selection.endLineNumber === curr.selection.startLineNumber) {\n                // these two selections would copy the same line\n                if (prev.index < curr.index) {\n                    // prev wins\n                    curr.ignore = true;\n                }\n                else {\n                    // curr wins\n                    prev.ignore = true;\n                    prev = curr;\n                }\n            }\n        }\n        const commands = [];\n        for (const selection of selections) {\n            commands.push(new CopyLinesCommand(selection.selection, this.down, selection.ignore));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass CopyLinesUpAction extends AbstractCopyLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.copyLinesUpAction',\n            label: nls.localize('lines.copyUp', \"Copy Line Up\"),\n            alias: 'Copy Line Up',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 16 /* KeyCode.UpArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miCopyLinesUp', comment: ['&& denotes a mnemonic'] }, \"&&Copy Line Up\"),\n                order: 1\n            }\n        });\n    }\n}\nclass CopyLinesDownAction extends AbstractCopyLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.copyLinesDownAction',\n            label: nls.localize('lines.copyDown', \"Copy Line Down\"),\n            alias: 'Copy Line Down',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */,\n                linux: { primary: 2048 /* KeyMod.CtrlCmd */ | 512 /* KeyMod.Alt */ | 1024 /* KeyMod.Shift */ | 18 /* KeyCode.DownArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miCopyLinesDown', comment: ['&& denotes a mnemonic'] }, \"Co&&py Line Down\"),\n                order: 2\n            }\n        });\n    }\n}\nexport class DuplicateSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.duplicateSelection',\n            label: nls.localize('duplicateSelection', \"Duplicate Selection\"),\n            alias: 'Duplicate Selection',\n            precondition: EditorContextKeys.writable,\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miDuplicateSelection', comment: ['&& denotes a mnemonic'] }, \"&&Duplicate Selection\"),\n                order: 5\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const commands = [];\n        const selections = editor.getSelections();\n        const model = editor.getModel();\n        for (const selection of selections) {\n            if (selection.isEmpty()) {\n                commands.push(new CopyLinesCommand(selection, true));\n            }\n            else {\n                const insertSelection = new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn);\n                commands.push(new ReplaceCommandThatSelectsText(insertSelection, model.getValueInRange(selection)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\n// move lines\nclass AbstractMoveLinesAction extends EditorAction {\n    constructor(down, opts) {\n        super(opts);\n        this.down = down;\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const commands = [];\n        const selections = editor.getSelections() || [];\n        const autoIndent = editor.getOption(9 /* EditorOption.autoIndent */);\n        for (const selection of selections) {\n            commands.push(new MoveLinesCommand(selection, this.down, autoIndent, languageConfigurationService));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass MoveLinesUpAction extends AbstractMoveLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.moveLinesUpAction',\n            label: nls.localize('lines.moveUp', \"Move Line Up\"),\n            alias: 'Move Line Up',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */,\n                linux: { primary: 512 /* KeyMod.Alt */ | 16 /* KeyCode.UpArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miMoveLinesUp', comment: ['&& denotes a mnemonic'] }, \"Mo&&ve Line Up\"),\n                order: 3\n            }\n        });\n    }\n}\nclass MoveLinesDownAction extends AbstractMoveLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.moveLinesDownAction',\n            label: nls.localize('lines.moveDown', \"Move Line Down\"),\n            alias: 'Move Line Down',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */,\n                linux: { primary: 512 /* KeyMod.Alt */ | 18 /* KeyCode.DownArrow */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miMoveLinesDown', comment: ['&& denotes a mnemonic'] }, \"Move &&Line Down\"),\n                order: 4\n            }\n        });\n    }\n}\nexport class AbstractSortLinesAction extends EditorAction {\n    constructor(descending, opts) {\n        super(opts);\n        this.descending = descending;\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections() || [];\n        for (const selection of selections) {\n            if (!SortLinesCommand.canRun(editor.getModel(), selection, this.descending)) {\n                return;\n            }\n        }\n        const commands = [];\n        for (let i = 0, len = selections.length; i < len; i++) {\n            commands[i] = new SortLinesCommand(selections[i], this.descending);\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nexport class SortLinesAscendingAction extends AbstractSortLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.sortLinesAscending',\n            label: nls.localize('lines.sortAscending', \"Sort Lines Ascending\"),\n            alias: 'Sort Lines Ascending',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nexport class SortLinesDescendingAction extends AbstractSortLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.sortLinesDescending',\n            label: nls.localize('lines.sortDescending', \"Sort Lines Descending\"),\n            alias: 'Sort Lines Descending',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nexport class DeleteDuplicateLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.removeDuplicateLines',\n            label: nls.localize('lines.deleteDuplicates', \"Delete Duplicate Lines\"),\n            alias: 'Delete Duplicate Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n            return;\n        }\n        const edits = [];\n        const endCursorState = [];\n        let linesDeleted = 0;\n        for (const selection of editor.getSelections()) {\n            const uniqueLines = new Set();\n            const lines = [];\n            for (let i = selection.startLineNumber; i <= selection.endLineNumber; i++) {\n                const line = model.getLineContent(i);\n                if (uniqueLines.has(line)) {\n                    continue;\n                }\n                lines.push(line);\n                uniqueLines.add(line);\n            }\n            const selectionToReplace = new Selection(selection.startLineNumber, 1, selection.endLineNumber, model.getLineMaxColumn(selection.endLineNumber));\n            const adjustedSelectionStart = selection.startLineNumber - linesDeleted;\n            const finalSelection = new Selection(adjustedSelectionStart, 1, adjustedSelectionStart + lines.length - 1, lines[lines.length - 1].length);\n            edits.push(EditOperation.replace(selectionToReplace, lines.join('\\n')));\n            endCursorState.push(finalSelection);\n            linesDeleted += (selection.endLineNumber - selection.startLineNumber + 1) - lines.length;\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class TrimTrailingWhitespaceAction extends EditorAction {\n    constructor() {\n        super({\n            id: TrimTrailingWhitespaceAction.ID,\n            label: nls.localize('lines.trimTrailingWhitespace', \"Trim Trailing Whitespace\"),\n            alias: 'Trim Trailing Whitespace',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 54 /* KeyCode.KeyX */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor, args) {\n        let cursors = [];\n        if (args.reason === 'auto-save') {\n            // See https://github.com/editorconfig/editorconfig-vscode/issues/47\n            // It is very convenient for the editor config extension to invoke this action.\n            // So, if we get a reason:'auto-save' passed in, let's preserve cursor positions.\n            cursors = (editor.getSelections() || []).map(s => new Position(s.positionLineNumber, s.positionColumn));\n        }\n        const selection = editor.getSelection();\n        if (selection === null) {\n            return;\n        }\n        const command = new TrimTrailingWhitespaceCommand(selection, cursors);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n    }\n}\nTrimTrailingWhitespaceAction.ID = 'editor.action.trimTrailingWhitespace';\nexport class DeleteLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.deleteLines',\n            label: nls.localize('lines.delete', \"Delete Line\"),\n            alias: 'Delete Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 41 /* KeyCode.KeyK */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const ops = this._getLinesToRemove(editor);\n        const model = editor.getModel();\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n            // Model is empty\n            return;\n        }\n        let linesDeleted = 0;\n        const edits = [];\n        const cursorState = [];\n        for (let i = 0, len = ops.length; i < len; i++) {\n            const op = ops[i];\n            let startLineNumber = op.startLineNumber;\n            let endLineNumber = op.endLineNumber;\n            let startColumn = 1;\n            let endColumn = model.getLineMaxColumn(endLineNumber);\n            if (endLineNumber < model.getLineCount()) {\n                endLineNumber += 1;\n                endColumn = 1;\n            }\n            else if (startLineNumber > 1) {\n                startLineNumber -= 1;\n                startColumn = model.getLineMaxColumn(startLineNumber);\n            }\n            edits.push(EditOperation.replace(new Selection(startLineNumber, startColumn, endLineNumber, endColumn), ''));\n            cursorState.push(new Selection(startLineNumber - linesDeleted, op.positionColumn, startLineNumber - linesDeleted, op.positionColumn));\n            linesDeleted += (op.endLineNumber - op.startLineNumber + 1);\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, cursorState);\n        editor.pushUndoStop();\n    }\n    _getLinesToRemove(editor) {\n        // Construct delete operations\n        const operations = editor.getSelections().map((s) => {\n            let endLineNumber = s.endLineNumber;\n            if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n                endLineNumber -= 1;\n            }\n            return {\n                startLineNumber: s.startLineNumber,\n                selectionStartColumn: s.selectionStartColumn,\n                endLineNumber: endLineNumber,\n                positionColumn: s.positionColumn\n            };\n        });\n        // Sort delete operations\n        operations.sort((a, b) => {\n            if (a.startLineNumber === b.startLineNumber) {\n                return a.endLineNumber - b.endLineNumber;\n            }\n            return a.startLineNumber - b.startLineNumber;\n        });\n        // Merge delete operations which are adjacent or overlapping\n        const mergedOperations = [];\n        let previousOperation = operations[0];\n        for (let i = 1; i < operations.length; i++) {\n            if (previousOperation.endLineNumber + 1 >= operations[i].startLineNumber) {\n                // Merge current operations into the previous one\n                previousOperation.endLineNumber = operations[i].endLineNumber;\n            }\n            else {\n                // Push previous operation\n                mergedOperations.push(previousOperation);\n                previousOperation = operations[i];\n            }\n        }\n        // Push the last operation\n        mergedOperations.push(previousOperation);\n        return mergedOperations;\n    }\n}\nexport class IndentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.indentLines',\n            label: nls.localize('lines.indent', \"Indent Line\"),\n            alias: 'Indent Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 89 /* KeyCode.BracketRight */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.indent(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n        editor.pushUndoStop();\n    }\n}\nclass OutdentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.outdentLines',\n            label: nls.localize('lines.outdent', \"Outdent Line\"),\n            alias: 'Outdent Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 87 /* KeyCode.BracketLeft */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        CoreEditingCommands.Outdent.runEditorCommand(_accessor, editor, null);\n    }\n}\nexport class InsertLineBeforeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertLineBefore',\n            label: nls.localize('lines.insertBefore', \"Insert Line Above\"),\n            alias: 'Insert Line Above',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 3 /* KeyCode.Enter */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.lineInsertBefore(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n    }\n}\nexport class InsertLineAfterAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertLineAfter',\n            label: nls.localize('lines.insertAfter', \"Insert Line Below\"),\n            alias: 'Insert Line Below',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 3 /* KeyCode.Enter */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.lineInsertAfter(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n    }\n}\nexport class AbstractDeleteAllToBoundaryAction extends EditorAction {\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const primaryCursor = editor.getSelection();\n        const rangesToDelete = this._getRangesToDelete(editor);\n        // merge overlapping selections\n        const effectiveRanges = [];\n        for (let i = 0, count = rangesToDelete.length - 1; i < count; i++) {\n            const range = rangesToDelete[i];\n            const nextRange = rangesToDelete[i + 1];\n            if (Range.intersectRanges(range, nextRange) === null) {\n                effectiveRanges.push(range);\n            }\n            else {\n                rangesToDelete[i + 1] = Range.plusRange(range, nextRange);\n            }\n        }\n        effectiveRanges.push(rangesToDelete[rangesToDelete.length - 1]);\n        const endCursorState = this._getEndCursorState(primaryCursor, effectiveRanges);\n        const edits = effectiveRanges.map(range => {\n            return EditOperation.replace(range, '');\n        });\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class DeleteAllLeftAction extends AbstractDeleteAllToBoundaryAction {\n    constructor() {\n        super({\n            id: 'deleteAllLeft',\n            label: nls.localize('lines.deleteAllLeft', \"Delete All Left\"),\n            alias: 'Delete All Left',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 2048 /* KeyMod.CtrlCmd */ | 1 /* KeyCode.Backspace */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _getEndCursorState(primaryCursor, rangesToDelete) {\n        let endPrimaryCursor = null;\n        const endCursorState = [];\n        let deletedLines = 0;\n        rangesToDelete.forEach(range => {\n            let endCursor;\n            if (range.endColumn === 1 && deletedLines > 0) {\n                const newStartLine = range.startLineNumber - deletedLines;\n                endCursor = new Selection(newStartLine, range.startColumn, newStartLine, range.startColumn);\n            }\n            else {\n                endCursor = new Selection(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n            }\n            deletedLines += range.endLineNumber - range.startLineNumber;\n            if (range.intersectRanges(primaryCursor)) {\n                endPrimaryCursor = endCursor;\n            }\n            else {\n                endCursorState.push(endCursor);\n            }\n        });\n        if (endPrimaryCursor) {\n            endCursorState.unshift(endPrimaryCursor);\n        }\n        return endCursorState;\n    }\n    _getRangesToDelete(editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return [];\n        }\n        let rangesToDelete = selections;\n        const model = editor.getModel();\n        if (model === null) {\n            return [];\n        }\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\n        rangesToDelete = rangesToDelete.map(selection => {\n            if (selection.isEmpty()) {\n                if (selection.startColumn === 1) {\n                    const deleteFromLine = Math.max(1, selection.startLineNumber - 1);\n                    const deleteFromColumn = selection.startLineNumber === 1 ? 1 : model.getLineContent(deleteFromLine).length + 1;\n                    return new Range(deleteFromLine, deleteFromColumn, selection.startLineNumber, 1);\n                }\n                else {\n                    return new Range(selection.startLineNumber, 1, selection.startLineNumber, selection.startColumn);\n                }\n            }\n            else {\n                return new Range(selection.startLineNumber, 1, selection.endLineNumber, selection.endColumn);\n            }\n        });\n        return rangesToDelete;\n    }\n}\nexport class DeleteAllRightAction extends AbstractDeleteAllToBoundaryAction {\n    constructor() {\n        super({\n            id: 'deleteAllRight',\n            label: nls.localize('lines.deleteAllRight', \"Delete All Right\"),\n            alias: 'Delete All Right',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 41 /* KeyCode.KeyK */, secondary: [2048 /* KeyMod.CtrlCmd */ | 20 /* KeyCode.Delete */] },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    _getEndCursorState(primaryCursor, rangesToDelete) {\n        let endPrimaryCursor = null;\n        const endCursorState = [];\n        for (let i = 0, len = rangesToDelete.length, offset = 0; i < len; i++) {\n            const range = rangesToDelete[i];\n            const endCursor = new Selection(range.startLineNumber - offset, range.startColumn, range.startLineNumber - offset, range.startColumn);\n            if (range.intersectRanges(primaryCursor)) {\n                endPrimaryCursor = endCursor;\n            }\n            else {\n                endCursorState.push(endCursor);\n            }\n        }\n        if (endPrimaryCursor) {\n            endCursorState.unshift(endPrimaryCursor);\n        }\n        return endCursorState;\n    }\n    _getRangesToDelete(editor) {\n        const model = editor.getModel();\n        if (model === null) {\n            return [];\n        }\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return [];\n        }\n        const rangesToDelete = selections.map((sel) => {\n            if (sel.isEmpty()) {\n                const maxColumn = model.getLineMaxColumn(sel.startLineNumber);\n                if (sel.startColumn === maxColumn) {\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber + 1, 1);\n                }\n                else {\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber, maxColumn);\n                }\n            }\n            return sel;\n        });\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\n        return rangesToDelete;\n    }\n}\nexport class JoinLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.joinLines',\n            label: nls.localize('lines.joinLines', \"Join Lines\"),\n            alias: 'Join Lines',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 0,\n                mac: { primary: 256 /* KeyMod.WinCtrl */ | 40 /* KeyCode.KeyJ */ },\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        let primaryCursor = editor.getSelection();\n        if (primaryCursor === null) {\n            return;\n        }\n        selections.sort(Range.compareRangesUsingStarts);\n        const reducedSelections = [];\n        const lastSelection = selections.reduce((previousValue, currentValue) => {\n            if (previousValue.isEmpty()) {\n                if (previousValue.endLineNumber === currentValue.startLineNumber) {\n                    if (primaryCursor.equalsSelection(previousValue)) {\n                        primaryCursor = currentValue;\n                    }\n                    return currentValue;\n                }\n                if (currentValue.startLineNumber > previousValue.endLineNumber + 1) {\n                    reducedSelections.push(previousValue);\n                    return currentValue;\n                }\n                else {\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n                }\n            }\n            else {\n                if (currentValue.startLineNumber > previousValue.endLineNumber) {\n                    reducedSelections.push(previousValue);\n                    return currentValue;\n                }\n                else {\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n                }\n            }\n        });\n        reducedSelections.push(lastSelection);\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const edits = [];\n        const endCursorState = [];\n        let endPrimaryCursor = primaryCursor;\n        let lineOffset = 0;\n        for (let i = 0, len = reducedSelections.length; i < len; i++) {\n            const selection = reducedSelections[i];\n            const startLineNumber = selection.startLineNumber;\n            const startColumn = 1;\n            let columnDeltaOffset = 0;\n            let endLineNumber, endColumn;\n            const selectionEndPositionOffset = model.getLineContent(selection.endLineNumber).length - selection.endColumn;\n            if (selection.isEmpty() || selection.startLineNumber === selection.endLineNumber) {\n                const position = selection.getStartPosition();\n                if (position.lineNumber < model.getLineCount()) {\n                    endLineNumber = startLineNumber + 1;\n                    endColumn = model.getLineMaxColumn(endLineNumber);\n                }\n                else {\n                    endLineNumber = position.lineNumber;\n                    endColumn = model.getLineMaxColumn(position.lineNumber);\n                }\n            }\n            else {\n                endLineNumber = selection.endLineNumber;\n                endColumn = model.getLineMaxColumn(endLineNumber);\n            }\n            let trimmedLinesContent = model.getLineContent(startLineNumber);\n            for (let i = startLineNumber + 1; i <= endLineNumber; i++) {\n                const lineText = model.getLineContent(i);\n                const firstNonWhitespaceIdx = model.getLineFirstNonWhitespaceColumn(i);\n                if (firstNonWhitespaceIdx >= 1) {\n                    let insertSpace = true;\n                    if (trimmedLinesContent === '') {\n                        insertSpace = false;\n                    }\n                    if (insertSpace && (trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === ' ' ||\n                        trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === '\\t')) {\n                        insertSpace = false;\n                        trimmedLinesContent = trimmedLinesContent.replace(/[\\s\\uFEFF\\xA0]+$/g, ' ');\n                    }\n                    const lineTextWithoutIndent = lineText.substr(firstNonWhitespaceIdx - 1);\n                    trimmedLinesContent += (insertSpace ? ' ' : '') + lineTextWithoutIndent;\n                    if (insertSpace) {\n                        columnDeltaOffset = lineTextWithoutIndent.length + 1;\n                    }\n                    else {\n                        columnDeltaOffset = lineTextWithoutIndent.length;\n                    }\n                }\n                else {\n                    columnDeltaOffset = 0;\n                }\n            }\n            const deleteSelection = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n            if (!deleteSelection.isEmpty()) {\n                let resultSelection;\n                if (selection.isEmpty()) {\n                    edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                    resultSelection = new Selection(deleteSelection.startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1, startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1);\n                }\n                else {\n                    if (selection.startLineNumber === selection.endLineNumber) {\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.endLineNumber - lineOffset, selection.endColumn);\n                    }\n                    else {\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.startLineNumber - lineOffset, trimmedLinesContent.length - selectionEndPositionOffset);\n                    }\n                }\n                if (Range.intersectRanges(deleteSelection, primaryCursor) !== null) {\n                    endPrimaryCursor = resultSelection;\n                }\n                else {\n                    endCursorState.push(resultSelection);\n                }\n            }\n            lineOffset += deleteSelection.endLineNumber - deleteSelection.startLineNumber;\n        }\n        endCursorState.unshift(endPrimaryCursor);\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class TransposeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.transpose',\n            label: nls.localize('editor.transpose', \"Transpose characters around the cursor\"),\n            alias: 'Transpose characters around the cursor',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const commands = [];\n        for (let i = 0, len = selections.length; i < len; i++) {\n            const selection = selections[i];\n            if (!selection.isEmpty()) {\n                continue;\n            }\n            const cursor = selection.getStartPosition();\n            const maxColumn = model.getLineMaxColumn(cursor.lineNumber);\n            if (cursor.column >= maxColumn) {\n                if (cursor.lineNumber === model.getLineCount()) {\n                    continue;\n                }\n                // The cursor is at the end of current line and current line is not empty\n                // then we transpose the character before the cursor and the line break if there is any following line.\n                const deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1);\n                const chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n                commands.push(new ReplaceCommand(new Selection(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1), chars));\n            }\n            else {\n                const deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber, cursor.column + 1);\n                const chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n                commands.push(new ReplaceCommandThatPreservesSelection(deleteSelection, chars, new Selection(cursor.lineNumber, cursor.column + 1, cursor.lineNumber, cursor.column + 1)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nexport class AbstractCaseAction extends EditorAction {\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const wordSeparators = editor.getOption(119 /* EditorOption.wordSeparators */);\n        const textEdits = [];\n        for (const selection of selections) {\n            if (selection.isEmpty()) {\n                const cursor = selection.getStartPosition();\n                const word = editor.getConfiguredWordAtPosition(cursor);\n                if (!word) {\n                    continue;\n                }\n                const wordRange = new Range(cursor.lineNumber, word.startColumn, cursor.lineNumber, word.endColumn);\n                const text = model.getValueInRange(wordRange);\n                textEdits.push(EditOperation.replace(wordRange, this._modifyText(text, wordSeparators)));\n            }\n            else {\n                const text = model.getValueInRange(selection);\n                textEdits.push(EditOperation.replace(selection, this._modifyText(text, wordSeparators)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, textEdits);\n        editor.pushUndoStop();\n    }\n}\nexport class UpperCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToUppercase',\n            label: nls.localize('editor.transformToUppercase', \"Transform to Uppercase\"),\n            alias: 'Transform to Uppercase',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        return text.toLocaleUpperCase();\n    }\n}\nexport class LowerCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToLowercase',\n            label: nls.localize('editor.transformToLowercase', \"Transform to Lowercase\"),\n            alias: 'Transform to Lowercase',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        return text.toLocaleLowerCase();\n    }\n}\nclass BackwardsCompatibleRegExp {\n    constructor(_pattern, _flags) {\n        this._pattern = _pattern;\n        this._flags = _flags;\n        this._actual = null;\n        this._evaluated = false;\n    }\n    get() {\n        if (!this._evaluated) {\n            this._evaluated = true;\n            try {\n                this._actual = new RegExp(this._pattern, this._flags);\n            }\n            catch (err) {\n                // this browser does not support this regular expression\n            }\n        }\n        return this._actual;\n    }\n    isSupported() {\n        return (this.get() !== null);\n    }\n}\nexport class TitleCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToTitlecase',\n            label: nls.localize('editor.transformToTitlecase', \"Transform to Title Case\"),\n            alias: 'Transform to Title Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const titleBoundary = TitleCaseAction.titleBoundary.get();\n        if (!titleBoundary) {\n            // cannot support this\n            return text;\n        }\n        return text\n            .toLocaleLowerCase()\n            .replace(titleBoundary, (b) => b.toLocaleUpperCase());\n    }\n}\nTitleCaseAction.titleBoundary = new BackwardsCompatibleRegExp('(^|[^\\\\p{L}\\\\p{N}\\']|((^|\\\\P{L})\\'))\\\\p{L}', 'gmu');\nexport class SnakeCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToSnakecase',\n            label: nls.localize('editor.transformToSnakecase', \"Transform to Snake Case\"),\n            alias: 'Transform to Snake Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const caseBoundary = SnakeCaseAction.caseBoundary.get();\n        const singleLetters = SnakeCaseAction.singleLetters.get();\n        if (!caseBoundary || !singleLetters) {\n            // cannot support this\n            return text;\n        }\n        return (text\n            .replace(caseBoundary, '$1_$2')\n            .replace(singleLetters, '$1_$2$3')\n            .toLocaleLowerCase());\n    }\n}\nSnakeCaseAction.caseBoundary = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\nSnakeCaseAction.singleLetters = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu})(\\\\p{Ll})', 'gmu');\nexport class KebabCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToKebabcase',\n            label: nls.localize('editor.transformToKebabcase', 'Transform to Kebab Case'),\n            alias: 'Transform to Kebab Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    static isSupported() {\n        const areAllRegexpsSupported = [\n            this.caseBoundary,\n            this.singleLetters,\n            this.underscoreBoundary,\n        ].every((regexp) => regexp.isSupported());\n        return areAllRegexpsSupported;\n    }\n    _modifyText(text, _) {\n        const caseBoundary = KebabCaseAction.caseBoundary.get();\n        const singleLetters = KebabCaseAction.singleLetters.get();\n        const underscoreBoundary = KebabCaseAction.underscoreBoundary.get();\n        if (!caseBoundary || !singleLetters || !underscoreBoundary) {\n            // one or more regexps aren't supported\n            return text;\n        }\n        return text\n            .replace(underscoreBoundary, '$1-$3')\n            .replace(caseBoundary, '$1-$2')\n            .replace(singleLetters, '$1-$2')\n            .toLocaleLowerCase();\n    }\n}\nKebabCaseAction.caseBoundary = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\nKebabCaseAction.singleLetters = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu}\\\\p{Ll})', 'gmu');\nKebabCaseAction.underscoreBoundary = new BackwardsCompatibleRegExp('(\\\\S)(_)(\\\\S)', 'gm');\nregisterEditorAction(CopyLinesUpAction);\nregisterEditorAction(CopyLinesDownAction);\nregisterEditorAction(DuplicateSelectionAction);\nregisterEditorAction(MoveLinesUpAction);\nregisterEditorAction(MoveLinesDownAction);\nregisterEditorAction(SortLinesAscendingAction);\nregisterEditorAction(SortLinesDescendingAction);\nregisterEditorAction(DeleteDuplicateLinesAction);\nregisterEditorAction(TrimTrailingWhitespaceAction);\nregisterEditorAction(DeleteLinesAction);\nregisterEditorAction(IndentLinesAction);\nregisterEditorAction(OutdentLinesAction);\nregisterEditorAction(InsertLineBeforeAction);\nregisterEditorAction(InsertLineAfterAction);\nregisterEditorAction(DeleteAllLeftAction);\nregisterEditorAction(DeleteAllRightAction);\nregisterEditorAction(JoinLinesAction);\nregisterEditorAction(TransposeAction);\nregisterEditorAction(UpperCaseAction);\nregisterEditorAction(LowerCaseAction);\nif (SnakeCaseAction.caseBoundary.isSupported() && SnakeCaseAction.singleLetters.isSupported()) {\n    registerEditorAction(SnakeCaseAction);\n}\nif (TitleCaseAction.titleBoundary.isSupported()) {\n    registerEditorAction(TitleCaseAction);\n}\nif (KebabCaseAction.isSupported()) {\n    registerEditorAction(KebabCaseAction);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, Delayer, first } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { isCancellationError, onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution, registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nexport const CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE = new RawContextKey('LinkedEditingInputVisible', false);\nconst DECORATION_CLASS_NAME = 'linked-editing-decoration';\nlet LinkedEditingContribution = class LinkedEditingContribution extends Disposable {\n    constructor(editor, contextKeyService, languageFeaturesService, languageConfigurationService, languageFeatureDebounceService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        this._syncRangesToken = 0;\n        this._localToDispose = this._register(new DisposableStore());\n        this._editor = editor;\n        this._providers = languageFeaturesService.linkedEditingRangeProvider;\n        this._enabled = false;\n        this._visibleContextKey = CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\n        this._debounceInformation = languageFeatureDebounceService.for(this._providers, 'Linked Editing', { min: 200 });\n        this._currentDecorations = this._editor.createDecorationsCollection();\n        this._languageWordPattern = null;\n        this._currentWordPattern = null;\n        this._ignoreChangeEvent = false;\n        this._localToDispose = this._register(new DisposableStore());\n        this._rangeUpdateTriggerPromise = null;\n        this._rangeSyncTriggerPromise = null;\n        this._currentRequest = null;\n        this._currentRequestPosition = null;\n        this._currentRequestModelVersion = null;\n        this._register(this._editor.onDidChangeModel(() => this.reinitialize(true)));\n        this._register(this._editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(64 /* EditorOption.linkedEditing */) || e.hasChanged(84 /* EditorOption.renameOnType */)) {\n                this.reinitialize(false);\n            }\n        }));\n        this._register(this._providers.onDidChange(() => this.reinitialize(false)));\n        this._register(this._editor.onDidChangeModelLanguage(() => this.reinitialize(true)));\n        this.reinitialize(true);\n    }\n    static get(editor) {\n        return editor.getContribution(LinkedEditingContribution.ID);\n    }\n    reinitialize(forceRefresh) {\n        const model = this._editor.getModel();\n        const isEnabled = model !== null && (this._editor.getOption(64 /* EditorOption.linkedEditing */) || this._editor.getOption(84 /* EditorOption.renameOnType */)) && this._providers.has(model);\n        if (isEnabled === this._enabled && !forceRefresh) {\n            return;\n        }\n        this._enabled = isEnabled;\n        this.clearRanges();\n        this._localToDispose.clear();\n        if (!isEnabled || model === null) {\n            return;\n        }\n        this._localToDispose.add(Event.runAndSubscribe(model.onDidChangeLanguageConfiguration, () => {\n            this._languageWordPattern = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n        }));\n        const rangeUpdateScheduler = new Delayer(this._debounceInformation.get(model));\n        const triggerRangeUpdate = () => {\n            var _a;\n            this._rangeUpdateTriggerPromise = rangeUpdateScheduler.trigger(() => this.updateRanges(), (_a = this._debounceDuration) !== null && _a !== void 0 ? _a : this._debounceInformation.get(model));\n        };\n        const rangeSyncScheduler = new Delayer(0);\n        const triggerRangeSync = (token) => {\n            this._rangeSyncTriggerPromise = rangeSyncScheduler.trigger(() => this._syncRanges(token));\n        };\n        this._localToDispose.add(this._editor.onDidChangeCursorPosition(() => {\n            triggerRangeUpdate();\n        }));\n        this._localToDispose.add(this._editor.onDidChangeModelContent((e) => {\n            if (!this._ignoreChangeEvent) {\n                if (this._currentDecorations.length > 0) {\n                    const referenceRange = this._currentDecorations.getRange(0);\n                    if (referenceRange && e.changes.every(c => referenceRange.intersectRanges(c.range))) {\n                        triggerRangeSync(this._syncRangesToken);\n                        return;\n                    }\n                }\n            }\n            triggerRangeUpdate();\n        }));\n        this._localToDispose.add({\n            dispose: () => {\n                rangeUpdateScheduler.dispose();\n                rangeSyncScheduler.dispose();\n            }\n        });\n        this.updateRanges();\n    }\n    _syncRanges(token) {\n        // dalayed invocation, make sure we're still on\n        if (!this._editor.hasModel() || token !== this._syncRangesToken || this._currentDecorations.length === 0) {\n            // nothing to do\n            return;\n        }\n        const model = this._editor.getModel();\n        const referenceRange = this._currentDecorations.getRange(0);\n        if (!referenceRange || referenceRange.startLineNumber !== referenceRange.endLineNumber) {\n            return this.clearRanges();\n        }\n        const referenceValue = model.getValueInRange(referenceRange);\n        if (this._currentWordPattern) {\n            const match = referenceValue.match(this._currentWordPattern);\n            const matchLength = match ? match[0].length : 0;\n            if (matchLength !== referenceValue.length) {\n                return this.clearRanges();\n            }\n        }\n        const edits = [];\n        for (let i = 1, len = this._currentDecorations.length; i < len; i++) {\n            const mirrorRange = this._currentDecorations.getRange(i);\n            if (!mirrorRange) {\n                continue;\n            }\n            if (mirrorRange.startLineNumber !== mirrorRange.endLineNumber) {\n                edits.push({\n                    range: mirrorRange,\n                    text: referenceValue\n                });\n            }\n            else {\n                let oldValue = model.getValueInRange(mirrorRange);\n                let newValue = referenceValue;\n                let rangeStartColumn = mirrorRange.startColumn;\n                let rangeEndColumn = mirrorRange.endColumn;\n                const commonPrefixLength = strings.commonPrefixLength(oldValue, newValue);\n                rangeStartColumn += commonPrefixLength;\n                oldValue = oldValue.substr(commonPrefixLength);\n                newValue = newValue.substr(commonPrefixLength);\n                const commonSuffixLength = strings.commonSuffixLength(oldValue, newValue);\n                rangeEndColumn -= commonSuffixLength;\n                oldValue = oldValue.substr(0, oldValue.length - commonSuffixLength);\n                newValue = newValue.substr(0, newValue.length - commonSuffixLength);\n                if (rangeStartColumn !== rangeEndColumn || newValue.length !== 0) {\n                    edits.push({\n                        range: new Range(mirrorRange.startLineNumber, rangeStartColumn, mirrorRange.endLineNumber, rangeEndColumn),\n                        text: newValue\n                    });\n                }\n            }\n        }\n        if (edits.length === 0) {\n            return;\n        }\n        try {\n            this._editor.popUndoStop();\n            this._ignoreChangeEvent = true;\n            const prevEditOperationType = this._editor._getViewModel().getPrevEditOperationType();\n            this._editor.executeEdits('linkedEditing', edits);\n            this._editor._getViewModel().setPrevEditOperationType(prevEditOperationType);\n        }\n        finally {\n            this._ignoreChangeEvent = false;\n        }\n    }\n    dispose() {\n        this.clearRanges();\n        super.dispose();\n    }\n    clearRanges() {\n        this._visibleContextKey.set(false);\n        this._currentDecorations.clear();\n        if (this._currentRequest) {\n            this._currentRequest.cancel();\n            this._currentRequest = null;\n            this._currentRequestPosition = null;\n        }\n    }\n    updateRanges(force = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._editor.hasModel()) {\n                this.clearRanges();\n                return;\n            }\n            const position = this._editor.getPosition();\n            if (!this._enabled && !force || this._editor.getSelections().length > 1) {\n                // disabled or multicursor\n                this.clearRanges();\n                return;\n            }\n            const model = this._editor.getModel();\n            const modelVersionId = model.getVersionId();\n            if (this._currentRequestPosition && this._currentRequestModelVersion === modelVersionId) {\n                if (position.equals(this._currentRequestPosition)) {\n                    return; // same position\n                }\n                if (this._currentDecorations.length > 0) {\n                    const range = this._currentDecorations.getRange(0);\n                    if (range && range.containsPosition(position)) {\n                        return; // just moving inside the existing primary range\n                    }\n                }\n            }\n            this._currentRequestPosition = position;\n            this._currentRequestModelVersion = modelVersionId;\n            const request = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const sw = new StopWatch(false);\n                    const response = yield getLinkedEditingRanges(this._providers, model, position, token);\n                    this._debounceInformation.update(model, sw.elapsed());\n                    if (request !== this._currentRequest) {\n                        return;\n                    }\n                    this._currentRequest = null;\n                    if (modelVersionId !== model.getVersionId()) {\n                        return;\n                    }\n                    let ranges = [];\n                    if (response === null || response === void 0 ? void 0 : response.ranges) {\n                        ranges = response.ranges;\n                    }\n                    this._currentWordPattern = (response === null || response === void 0 ? void 0 : response.wordPattern) || this._languageWordPattern;\n                    let foundReferenceRange = false;\n                    for (let i = 0, len = ranges.length; i < len; i++) {\n                        if (Range.containsPosition(ranges[i], position)) {\n                            foundReferenceRange = true;\n                            if (i !== 0) {\n                                const referenceRange = ranges[i];\n                                ranges.splice(i, 1);\n                                ranges.unshift(referenceRange);\n                            }\n                            break;\n                        }\n                    }\n                    if (!foundReferenceRange) {\n                        // Cannot do linked editing if the ranges are not where the cursor is...\n                        this.clearRanges();\n                        return;\n                    }\n                    const decorations = ranges.map(range => ({ range: range, options: LinkedEditingContribution.DECORATION }));\n                    this._visibleContextKey.set(true);\n                    this._currentDecorations.set(decorations);\n                    this._syncRangesToken++; // cancel any pending syncRanges call\n                }\n                catch (err) {\n                    if (!isCancellationError(err)) {\n                        onUnexpectedError(err);\n                    }\n                    if (this._currentRequest === request || !this._currentRequest) {\n                        // stop if we are still the latest request\n                        this.clearRanges();\n                    }\n                }\n            }));\n            this._currentRequest = request;\n            return request;\n        });\n    }\n};\nLinkedEditingContribution.ID = 'editor.contrib.linkedEditing';\nLinkedEditingContribution.DECORATION = ModelDecorationOptions.register({\n    description: 'linked-editing',\n    stickiness: 0 /* TrackedRangeStickiness.AlwaysGrowsWhenTypingAtEdges */,\n    className: DECORATION_CLASS_NAME\n});\nLinkedEditingContribution = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, ILanguageFeaturesService),\n    __param(3, ILanguageConfigurationService),\n    __param(4, ILanguageFeatureDebounceService)\n], LinkedEditingContribution);\nexport { LinkedEditingContribution };\nexport class LinkedEditingAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.linkedEditing',\n            label: nls.localize('linkedEditing.label', \"Start Linked Editing\"),\n            alias: 'Start Linked Editing',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 60 /* KeyCode.F2 */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    runCommand(accessor, args) {\n        const editorService = accessor.get(ICodeEditorService);\n        const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\n        if (URI.isUri(uri) && Position.isIPosition(pos)) {\n            return editorService.openCodeEditor({ resource: uri }, editorService.getActiveCodeEditor()).then(editor => {\n                if (!editor) {\n                    return;\n                }\n                editor.setPosition(pos);\n                editor.invokeWithinContext(accessor => {\n                    this.reportTelemetry(accessor, editor);\n                    return this.run(accessor, editor);\n                });\n            }, onUnexpectedError);\n        }\n        return super.runCommand(accessor, args);\n    }\n    run(_accessor, editor) {\n        const controller = LinkedEditingContribution.get(editor);\n        if (controller) {\n            return Promise.resolve(controller.updateRanges(true));\n        }\n        return Promise.resolve();\n    }\n}\nconst LinkedEditingCommand = EditorCommand.bindToContribution(LinkedEditingContribution.get);\nregisterEditorCommand(new LinkedEditingCommand({\n    id: 'cancelLinkedEditingInput',\n    precondition: CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE,\n    handler: x => x.clearRanges(),\n    kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        weight: 100 /* KeybindingWeight.EditorContrib */ + 99,\n        primary: 9 /* KeyCode.Escape */,\n        secondary: [1024 /* KeyMod.Shift */ | 9 /* KeyCode.Escape */]\n    }\n}));\nfunction getLinkedEditingRanges(providers, model, position, token) {\n    const orderedByScore = providers.ordered(model);\n    // in order of score ask the linked editing range provider\n    // until someone response with a good result\n    // (good = not null)\n    return first(orderedByScore.map(provider => () => __awaiter(this, void 0, void 0, function* () {\n        try {\n            return yield provider.provideLinkedEditingRanges(model, position, token);\n        }\n        catch (e) {\n            onUnexpectedExternalError(e);\n            return undefined;\n        }\n    })), result => !!result && arrays.isNonEmptyArray(result === null || result === void 0 ? void 0 : result.ranges));\n}\nexport const editorLinkedEditingBackground = registerColor('editor.linkedEditingBackground', { dark: Color.fromHex('#f00').transparent(0.3), light: Color.fromHex('#f00').transparent(0.3), hcDark: Color.fromHex('#f00').transparent(0.3), hcLight: Color.white }, nls.localize('editorLinkedEditingBackground', 'Background color when the editor auto renames on type.'));\nregisterThemingParticipant((theme, collector) => {\n    const editorLinkedEditingBackgroundColor = theme.getColor(editorLinkedEditingBackground);\n    if (editorLinkedEditingBackgroundColor) {\n        collector.addRule(`.monaco-editor .${DECORATION_CLASS_NAME} { background: ${editorLinkedEditingBackgroundColor}; border-left-color: ${editorLinkedEditingBackgroundColor}; }`);\n    }\n});\nregisterModelAndPositionCommand('_executeLinkedEditingProvider', (_accessor, model, position) => {\n    const { linkedEditingRangeProvider } = _accessor.get(ILanguageFeaturesService);\n    return getLinkedEditingRanges(linkedEditingRangeProvider, model, position, CancellationToken.None);\n});\nregisterEditorContribution(LinkedEditingContribution.ID, LinkedEditingContribution);\nregisterEditorAction(LinkedEditingAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore, isDisposable } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class Link {\n    constructor(link, provider) {\n        this._link = link;\n        this._provider = provider;\n    }\n    toJSON() {\n        return {\n            range: this.range,\n            url: this.url,\n            tooltip: this.tooltip\n        };\n    }\n    get range() {\n        return this._link.range;\n    }\n    get url() {\n        return this._link.url;\n    }\n    get tooltip() {\n        return this._link.tooltip;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._link.url) {\n                return this._link.url;\n            }\n            if (typeof this._provider.resolveLink === 'function') {\n                return Promise.resolve(this._provider.resolveLink(this._link, token)).then(value => {\n                    this._link = value || this._link;\n                    if (this._link.url) {\n                        // recurse\n                        return this.resolve(token);\n                    }\n                    return Promise.reject(new Error('missing'));\n                });\n            }\n            return Promise.reject(new Error('missing'));\n        });\n    }\n}\nexport class LinksList {\n    constructor(tuples) {\n        this._disposables = new DisposableStore();\n        let links = [];\n        for (const [list, provider] of tuples) {\n            // merge all links\n            const newLinks = list.links.map(link => new Link(link, provider));\n            links = LinksList._union(links, newLinks);\n            // register disposables\n            if (isDisposable(list)) {\n                this._disposables.add(list);\n            }\n        }\n        this.links = links;\n    }\n    dispose() {\n        this._disposables.dispose();\n        this.links.length = 0;\n    }\n    static _union(oldLinks, newLinks) {\n        // reunite oldLinks with newLinks and remove duplicates\n        const result = [];\n        let oldIndex;\n        let oldLen;\n        let newIndex;\n        let newLen;\n        for (oldIndex = 0, newIndex = 0, oldLen = oldLinks.length, newLen = newLinks.length; oldIndex < oldLen && newIndex < newLen;) {\n            const oldLink = oldLinks[oldIndex];\n            const newLink = newLinks[newIndex];\n            if (Range.areIntersectingOrTouching(oldLink.range, newLink.range)) {\n                // Remove the oldLink\n                oldIndex++;\n                continue;\n            }\n            const comparisonResult = Range.compareRangesUsingStarts(oldLink.range, newLink.range);\n            if (comparisonResult < 0) {\n                // oldLink is before\n                result.push(oldLink);\n                oldIndex++;\n            }\n            else {\n                // newLink is before\n                result.push(newLink);\n                newIndex++;\n            }\n        }\n        for (; oldIndex < oldLen; oldIndex++) {\n            result.push(oldLinks[oldIndex]);\n        }\n        for (; newIndex < newLen; newIndex++) {\n            result.push(newLinks[newIndex]);\n        }\n        return result;\n    }\n}\nexport function getLinks(providers, model, token) {\n    const lists = [];\n    // ask all providers for links in parallel\n    const promises = providers.ordered(model).reverse().map((provider, i) => {\n        return Promise.resolve(provider.provideLinks(model, token)).then(result => {\n            if (result) {\n                lists[i] = [result, provider];\n            }\n        }, onUnexpectedExternalError);\n    });\n    return Promise.all(promises).then(() => {\n        const result = new LinksList(coalesce(lists));\n        if (!token.isCancellationRequested) {\n            return result;\n        }\n        result.dispose();\n        return new LinksList([]);\n    });\n}\nCommandsRegistry.registerCommand('_executeLinkProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    let [uri, resolveCount] = args;\n    assertType(uri instanceof URI);\n    if (typeof resolveCount !== 'number') {\n        resolveCount = 0;\n    }\n    const { linkProvider } = accessor.get(ILanguageFeaturesService);\n    const model = accessor.get(IModelService).getModel(uri);\n    if (!model) {\n        return [];\n    }\n    const list = yield getLinks(linkProvider, model, CancellationToken.None);\n    if (!list) {\n        return [];\n    }\n    // resolve links\n    for (let i = 0; i < Math.min(resolveCount, list.links.length); i++) {\n        yield list.links[i].resolve(CancellationToken.None);\n    }\n    const result = list.links.slice(0);\n    list.dispose();\n    return result;\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as resources from '../../../../base/common/resources.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport './links.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { getLinks } from './getLinks.js';\nimport * as nls from '../../../../nls.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { editorActiveLinkForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nlet LinkDetector = class LinkDetector extends Disposable {\n    constructor(editor, openerService, notificationService, languageFeaturesService, languageFeatureDebounceService) {\n        super();\n        this.editor = editor;\n        this.openerService = openerService;\n        this.notificationService = notificationService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.providers = this.languageFeaturesService.linkProvider;\n        this.debounceInformation = languageFeatureDebounceService.for(this.providers, 'Links', { min: 1000, max: 4000 });\n        this.computeLinks = this._register(new RunOnceScheduler(() => this.computeLinksNow(), 1000));\n        this.computePromise = null;\n        this.activeLinksList = null;\n        this.currentOccurrences = {};\n        this.activeLinkDecorationId = null;\n        const clickLinkGesture = this._register(new ClickLinkGesture(editor));\n        this._register(clickLinkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent]) => {\n            this._onEditorMouseMove(mouseEvent, keyboardEvent);\n        }));\n        this._register(clickLinkGesture.onExecute((e) => {\n            this.onEditorMouseUp(e);\n        }));\n        this._register(clickLinkGesture.onCancel((e) => {\n            this.cleanUpActiveLinkDecoration();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!e.hasChanged(65 /* EditorOption.links */)) {\n                return;\n            }\n            // Remove any links (for the getting disabled case)\n            this.updateDecorations([]);\n            // Stop any computation (for the getting disabled case)\n            this.stop();\n            // Start computing (for the getting enabled case)\n            this.computeLinks.schedule(0);\n        }));\n        this._register(editor.onDidChangeModelContent((e) => {\n            if (!this.editor.hasModel()) {\n                return;\n            }\n            this.computeLinks.schedule(this.debounceInformation.get(this.editor.getModel()));\n        }));\n        this._register(editor.onDidChangeModel((e) => {\n            this.currentOccurrences = {};\n            this.activeLinkDecorationId = null;\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this._register(editor.onDidChangeModelLanguage((e) => {\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this._register(this.providers.onDidChange((e) => {\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this.computeLinks.schedule(0);\n    }\n    static get(editor) {\n        return editor.getContribution(LinkDetector.ID);\n    }\n    computeLinksNow() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.editor.hasModel() || !this.editor.getOption(65 /* EditorOption.links */)) {\n                return;\n            }\n            const model = this.editor.getModel();\n            if (!this.providers.has(model)) {\n                return;\n            }\n            if (this.activeLinksList) {\n                this.activeLinksList.dispose();\n                this.activeLinksList = null;\n            }\n            this.computePromise = createCancelablePromise(token => getLinks(this.providers, model, token));\n            try {\n                const sw = new StopWatch(false);\n                this.activeLinksList = yield this.computePromise;\n                this.debounceInformation.update(model, sw.elapsed());\n                if (model.isDisposed()) {\n                    return;\n                }\n                this.updateDecorations(this.activeLinksList.links);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                this.computePromise = null;\n            }\n        });\n    }\n    updateDecorations(links) {\n        const useMetaKey = (this.editor.getOption(72 /* EditorOption.multiCursorModifier */) === 'altKey');\n        const oldDecorations = [];\n        const keys = Object.keys(this.currentOccurrences);\n        for (const decorationId of keys) {\n            const occurence = this.currentOccurrences[decorationId];\n            oldDecorations.push(occurence.decorationId);\n        }\n        const newDecorations = [];\n        if (links) {\n            // Not sure why this is sometimes null\n            for (const link of links) {\n                newDecorations.push(LinkOccurrence.decoration(link, useMetaKey));\n            }\n        }\n        this.editor.changeDecorations((changeAccessor) => {\n            const decorations = changeAccessor.deltaDecorations(oldDecorations, newDecorations);\n            this.currentOccurrences = {};\n            this.activeLinkDecorationId = null;\n            for (let i = 0, len = decorations.length; i < len; i++) {\n                const occurence = new LinkOccurrence(links[i], decorations[i]);\n                this.currentOccurrences[occurence.decorationId] = occurence;\n            }\n        });\n    }\n    _onEditorMouseMove(mouseEvent, withKey) {\n        const useMetaKey = (this.editor.getOption(72 /* EditorOption.multiCursorModifier */) === 'altKey');\n        if (this.isEnabled(mouseEvent, withKey)) {\n            this.cleanUpActiveLinkDecoration(); // always remove previous link decoration as their can only be one\n            const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\n            if (occurrence) {\n                this.editor.changeDecorations((changeAccessor) => {\n                    occurrence.activate(changeAccessor, useMetaKey);\n                    this.activeLinkDecorationId = occurrence.decorationId;\n                });\n            }\n        }\n        else {\n            this.cleanUpActiveLinkDecoration();\n        }\n    }\n    cleanUpActiveLinkDecoration() {\n        const useMetaKey = (this.editor.getOption(72 /* EditorOption.multiCursorModifier */) === 'altKey');\n        if (this.activeLinkDecorationId) {\n            const occurrence = this.currentOccurrences[this.activeLinkDecorationId];\n            if (occurrence) {\n                this.editor.changeDecorations((changeAccessor) => {\n                    occurrence.deactivate(changeAccessor, useMetaKey);\n                });\n            }\n            this.activeLinkDecorationId = null;\n        }\n    }\n    onEditorMouseUp(mouseEvent) {\n        if (!this.isEnabled(mouseEvent)) {\n            return;\n        }\n        const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\n        if (!occurrence) {\n            return;\n        }\n        this.openLinkOccurrence(occurrence, mouseEvent.hasSideBySideModifier, true /* from user gesture */);\n    }\n    openLinkOccurrence(occurrence, openToSide, fromUserGesture = false) {\n        if (!this.openerService) {\n            return;\n        }\n        const { link } = occurrence;\n        link.resolve(CancellationToken.None).then(uri => {\n            // Support for relative file URIs of the shape file://./relativeFile.txt or file:///./relativeFile.txt\n            if (typeof uri === 'string' && this.editor.hasModel()) {\n                const modelUri = this.editor.getModel().uri;\n                if (modelUri.scheme === Schemas.file && uri.startsWith(`${Schemas.file}:`)) {\n                    const parsedUri = URI.parse(uri);\n                    if (parsedUri.scheme === Schemas.file) {\n                        const fsPath = resources.originalFSPath(parsedUri);\n                        let relativePath = null;\n                        if (fsPath.startsWith('/./')) {\n                            relativePath = `.${fsPath.substr(1)}`;\n                        }\n                        else if (fsPath.startsWith('//./')) {\n                            relativePath = `.${fsPath.substr(2)}`;\n                        }\n                        if (relativePath) {\n                            uri = resources.joinPath(modelUri, relativePath);\n                        }\n                    }\n                }\n            }\n            return this.openerService.open(uri, { openToSide, fromUserGesture, allowContributedOpeners: true, allowCommands: true, fromWorkspace: true });\n        }, err => {\n            const messageOrError = err instanceof Error ? err.message : err;\n            // different error cases\n            if (messageOrError === 'invalid') {\n                this.notificationService.warn(nls.localize('invalid.url', 'Failed to open this link because it is not well-formed: {0}', link.url.toString()));\n            }\n            else if (messageOrError === 'missing') {\n                this.notificationService.warn(nls.localize('missing.url', 'Failed to open this link because its target is missing.'));\n            }\n            else {\n                onUnexpectedError(err);\n            }\n        });\n    }\n    getLinkOccurrence(position) {\n        if (!this.editor.hasModel() || !position) {\n            return null;\n        }\n        const decorations = this.editor.getModel().getDecorationsInRange({\n            startLineNumber: position.lineNumber,\n            startColumn: position.column,\n            endLineNumber: position.lineNumber,\n            endColumn: position.column\n        }, 0, true);\n        for (const decoration of decorations) {\n            const currentOccurrence = this.currentOccurrences[decoration.id];\n            if (currentOccurrence) {\n                return currentOccurrence;\n            }\n        }\n        return null;\n    }\n    isEnabled(mouseEvent, withKey) {\n        return Boolean((mouseEvent.target.type === 6 /* MouseTargetType.CONTENT_TEXT */)\n            && (mouseEvent.hasTriggerModifier || (withKey && withKey.keyCodeIsTriggerKey)));\n    }\n    stop() {\n        var _a;\n        this.computeLinks.cancel();\n        if (this.activeLinksList) {\n            (_a = this.activeLinksList) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.activeLinksList = null;\n        }\n        if (this.computePromise) {\n            this.computePromise.cancel();\n            this.computePromise = null;\n        }\n    }\n    dispose() {\n        super.dispose();\n        this.stop();\n    }\n};\nLinkDetector.ID = 'editor.linkDetector';\nLinkDetector = __decorate([\n    __param(1, IOpenerService),\n    __param(2, INotificationService),\n    __param(3, ILanguageFeaturesService),\n    __param(4, ILanguageFeatureDebounceService)\n], LinkDetector);\nexport { LinkDetector };\nconst decoration = {\n    general: ModelDecorationOptions.register({\n        description: 'detected-link',\n        stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n        collapseOnReplaceEdit: true,\n        inlineClassName: 'detected-link'\n    }),\n    active: ModelDecorationOptions.register({\n        description: 'detected-link-active',\n        stickiness: 1 /* TrackedRangeStickiness.NeverGrowsWhenTypingAtEdges */,\n        collapseOnReplaceEdit: true,\n        inlineClassName: 'detected-link-active'\n    })\n};\nclass LinkOccurrence {\n    constructor(link, decorationId) {\n        this.link = link;\n        this.decorationId = decorationId;\n    }\n    static decoration(link, useMetaKey) {\n        return {\n            range: link.range,\n            options: LinkOccurrence._getOptions(link, useMetaKey, false)\n        };\n    }\n    static _getOptions(link, useMetaKey, isActive) {\n        const options = Object.assign({}, (isActive ? decoration.active : decoration.general));\n        options.hoverMessage = getHoverMessage(link, useMetaKey);\n        return options;\n    }\n    activate(changeAccessor, useMetaKey) {\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, true));\n    }\n    deactivate(changeAccessor, useMetaKey) {\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, false));\n    }\n}\nfunction getHoverMessage(link, useMetaKey) {\n    const executeCmd = link.url && /^command:/i.test(link.url.toString());\n    const label = link.tooltip\n        ? link.tooltip\n        : executeCmd\n            ? nls.localize('links.navigate.executeCmd', 'Execute command')\n            : nls.localize('links.navigate.follow', 'Follow link');\n    const kb = useMetaKey\n        ? platform.isMacintosh\n            ? nls.localize('links.navigate.kb.meta.mac', \"cmd + click\")\n            : nls.localize('links.navigate.kb.meta', \"ctrl + click\")\n        : platform.isMacintosh\n            ? nls.localize('links.navigate.kb.alt.mac', \"option + click\")\n            : nls.localize('links.navigate.kb.alt', \"alt + click\");\n    if (link.url) {\n        let nativeLabel = '';\n        if (/^command:/i.test(link.url.toString())) {\n            // Don't show complete command arguments in the native tooltip\n            const match = link.url.toString().match(/^command:([^?#]+)/);\n            if (match) {\n                const commandId = match[1];\n                nativeLabel = nls.localize('tooltip.explanation', \"Execute command {0}\", commandId);\n            }\n        }\n        const hoverMessage = new MarkdownString('', true)\n            .appendLink(link.url.toString(true).replace(/ /g, '%20'), label, nativeLabel)\n            .appendMarkdown(` (${kb})`);\n        return hoverMessage;\n    }\n    else {\n        return new MarkdownString().appendText(`${label} (${kb})`);\n    }\n}\nclass OpenLinkAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.openLink',\n            label: nls.localize('label', \"Open Link\"),\n            alias: 'Open Link',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const linkDetector = LinkDetector.get(editor);\n        if (!linkDetector) {\n            return;\n        }\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections();\n        for (const sel of selections) {\n            const link = linkDetector.getLinkOccurrence(sel.getEndPosition());\n            if (link) {\n                linkDetector.openLinkOccurrence(link, false);\n            }\n        }\n    }\n}\nregisterEditorContribution(LinkDetector.ID, LinkDetector);\nregisterEditorAction(OpenLinkAction);\nregisterThemingParticipant((theme, collector) => {\n    const activeLinkForeground = theme.getColor(editorActiveLinkForeground);\n    if (activeLinkForeground) {\n        collector.addRule(`.monaco-editor .detected-link-active { color: ${activeLinkForeground} !important; }`);\n    }\n});\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","InlayHintAnchor","range","direction","this","InlayHintItem","hint","anchor","provider","_isResolved","delta","_currentResolve","token","resolveInlayHint","isCancellationRequested","_doResolve","finally","undefined","_a","_b","newHint","tooltip","label","onUnexpectedExternalError","InlayHintsFragments","ranges","data","model","_disposables","DisposableStore","Set","items","list","add","hints","position","validatePosition","wordRange","_getRangeAtPosition","getStartPosition","isBefore","Range","getEndPosition","push","sort","a","b","Position","dispose","registry","promises","ordered","reverse","map","provideInlayHints","length","all","flat","isDisposed","CancellationError","line","lineNumber","word","getWordAtPosition","startColumn","endColumn","tokenization","tokenizeIfCheap","tokens","getLineTokens","offset","column","idx","findTokenIndexAtOffset","start","getStartOffset","end","getEndOffset","getCount","showGoToContextMenu","accessor","editor","part","resolverService","get","ITextModelService","contextMenuService","IContextMenuService","commandService","ICommandService","instaService","IInstantiationService","notificationService","INotificationService","item","CancellationToken","location","menuActions","filter","MenuRegistry","MenuId","isIMenuItem","command","id","EditorExtensionsRegistry","delegate","SymbolNavigationAction","has","Action","createModelReference","uri","ref","invokeFunction","run","bind","SymbolNavigationAnchor","object","textEditorModel","f","Separator","title","executeCommand","arguments","notify","severity","Severity","source","displayName","message","useShadowDOM","getOption","showContextMenu","domForShadowRoot","getDomNode","getAnchor","box","dom","getDomNodePagePosition","x","left","y","top","height","getActions","onHide","focus","autoSelectFirstItem","goToDefinitionWithLocation","event","invokeWithinContext","openToSide","hasSideBySideModifier","contextKeyService","IContextKeyService","isInPeek","PeekContext","canPeek","action","DefinitionAction","openInPeek","muteMessage","alias","precondition","__decorate","decorators","target","key","desc","d","c","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","InlayHintsCache","_entries","LRUCache","_key","set","toString","getVersionId","IInlayHintsCache","createDecorator","registerSingleton","RenderedInlayHintLabelPart","index","ActiveInlayHintInfo","hasTriggerModifier","InlayHintsController","_editor","_languageFeaturesService","_featureDebounce","_inlayHintsCache","_commandService","_notificationService","_instaService","_sessionDisposables","_decorationsMetadata","Map","_ruleFactory","DynamicCssRules","_activeRenderMode","_debounceInfo","for","inlayHintsProvider","min","onDidChange","_update","onDidChangeModel","onDidChangeModelLanguage","onDidChangeConfiguration","hasChanged","_removeAllDecorations","clear","options","enabled","getModel","cts","cached","_updateHintsDecorators","getFullModelRange","toDisposable","_cacheHintsForFastRestore","defaultMode","altMode","watchedProviders","scheduler","RunOnceScheduler","t1","Date","now","CancellationTokenSource","listener","onWillDispose","cancel","myToken","create","_getHintsRanges","inlayHints","delay","update","onDidChangeInlayHints","isScheduled","schedule","onUnexpectedError","onDidScrollChange","scrollTopChanged","onDidChangeModelContent","Math","max","ModifierKeyEmitter","hasModel","newRenderMode","altKey","ctrlKey","copies","_copyInlayHintsWithCurrentAnchor","_installDblClickGesture","_installLinkGesture","_installContextMenu","store","gesture","ClickLinkGesture","sessionStore","onMouseMoveOrRelevantKeyDown","mouseEvent","labelPart","_getInlayHintLabelPart","_activeInlayHintPart","getLineMaxColumn","lineHints","_getInlineHintsForRange","onCancel","onExecute","languages","_invokeCommand","values","containsRange","Array","from","updateInlayHints","onMouseUp","detail","preventDefault","isNonEmptyArray","textEdits","edits","edit","EditOperation","text","executeEdits","onContextMenu","HTMLElement","type","injectedText","ModelDecorationInjectedTextOptions","attachedData","obj","getDecorationRange","copy","with","visibleRanges","getVisibleRangesPlusViewportAboveBelow","extendedRange","validateRange","startLineNumber","endLineNumber","newDecorationsData","addInjectedText","content","cursorStops","opts","inlineClassNameAffectsLetterSpacing","inlineClassName","className","classNameRef","decoration","description","showIfCollapsed","isEmpty","collapseOnReplaceEdit","stickiness","addInjectedWhitespace","isLast","marginRule","createClassNameRef","width","fontSize","display","InjectedTextCursorStops","_getLayoutInfo","fontFamily","padding","isUniform","fontFamilyVar","getContainerDomNode","style","setProperty","paddingLeft","parts","isFirst","cssProperties","EDITOR_FONT_DEFAULTS","verticalAlign","cursor","_fillInColors","textDecoration","color","themeColorFromId","colors","borderRadius","fixSpace","paddingRight","_MAX_DECORATORS","decorationIdsToReplace","getDecorationsInRange","metadata","delete","changeDecorations","newDecorationIds","deltaDecorations","props","kind","backgroundColor","editorFontSize","editorFontFamily","removeDecorations","keys","getContribution","ID","str","replace","ILanguageFeaturesService","ILanguageFeatureDebounceService","CommandsRegistry","args","assertType","URI","setTimeout","__asyncValues","o","Symbol","asyncIterator","TypeError","m","call","__values","iterator","verb","n","v","settle","InlayHintsHoverAnchor","owner","HoverForeignElementAnchor","InlayHintsHover","languageService","openerService","configurationService","_resolverService","languageFeaturesService","hoverOrdinal","_lineDecorations","AsyncIterableObject","executor","itemTooltip","MarkdownString","appendText","emitOne","MarkdownHover","localize","partTooltip","useMetaKey","kb","platform","linkHint","scheme","Schemas","path","query","encodeURIComponent","JSON","stringify","isTrusted","_resolveInlayHintLabelPartHover","iterable","iterable_1","iterable_1_1","e_1","error","return","hoverProvider","getHover","isEmptyMarkdownString","hover","contents","ordinal","MarkdownHoverParticipant","ILanguageService","IOpenerService","IConfigurationService","registerEditorContribution","HoverParticipantRegistry","inlineSuggestCommitId","PositionOffsetTransformer","lineStartOffsetByLineIdx","charAt","array","getReadonlyEmptyArray","GhostText","additionalReservedLineCount","lineText","lastPart","transformer","offsetEdits","startOffset","getOffset","endOffset","substring","applyEdits","substr","p","lines","join","every","GhostTextPart","preview","GhostTextReplacement","columnStart","newLines","_lineText","BaseGhostTextWidgetModel","_expanded","onDidChangeEmitter","Emitter","_register","fire","expanded","Disposable","minimizeInlineCompletion","inlineCompletion","valueToReplace","getValueInRange","commonPrefixLen","strings","insertText","getOffsetAt","getPositionAt","remainingValueToReplace","commonSuffixLen","snippetInfo","filterText","additionalTextEdits","inlineCompletionToGhostText","textModel","mode","cursorPosition","previewSuffixLength","sourceLine","getLineContent","sourceIndentationLength","suggestionTouchesIndentation","suggestionAddedIndentationLength","replacedIndentation","rangeThatDoesNotReplaceIndentation","suggestionWithoutIndentationChange","startsWith","valueToBeReplaced","changes","cachingDiff","filteredChanges","originalLength","originalStart","previewStartInCompletionText","insertColumn","modifiedLength","modifiedEnd","modifiedStart","nonPreviewTextEnd","nonPreviewText","italicText","lastRequest","originalValue","newValue","smartDiff","deletedChars","deletedCharacters","newChanges","sum","smartBracketMatching","maxCharCode","getMaxCharCode","elements1","getElements","elements2","LcsDiff","ComputeDiff","val","len","charCode","charCodeAt","getUniqueCharCode","Error","level","group","characters","Int32Array","InlineCompletionsModel","cache","languageConfigurationService","debounceService","completionSession","MutableDisposable","active","disposed","debounceValue","inlineCompletionsProvider","onDidExecuteCommand","CoreEditingCommands","commandId","hasTextFocus","handleUserInput","onDidType","onDidChangeCursorPosition","reason","session","isValid","hide","onDidBlurEditorWidget","getValue","startSessionIfTriggered","ghostText","minReservedLineCount","setExpanded","scheduleAutomaticUpdate","trigger","InlineCompletionTriggerKind","triggerKind","ensureUpdateWithExplicitContext","InlineCompletionsSession","getPosition","takeOwnership","commitCurrentCompletion","showNextInlineCompletion","showPreviousInlineCompletion","hasMultipleInlineCompletions","ILanguageConfigurationService","triggerPosition","shouldUpdate","initialTriggerKind","debounce","updateOperation","updateSoon","filteredCompletions","currentlySelectedCompletionId","lastCompletionItem","currentCompletion","sourceInlineCompletion","sourceProvider","handleItemDidShow","sourceInlineCompletions","updateRanges","updateFilteredInlineCompletions","completions","synchronizedRange","toLowerCase","indent","getLineIndentColumn","cursorPosIndex","filterTextBefore","filterTextAfter","originalValueBefore","originalValueAfter","trimStart","matchesSubString","findIndex","semanticId","fixAndGetIndexOfCurrentSelection","newIdx","promise","getOptions","split","completion","currentCachedCompletion","toLiveInlineCompletion","startTime","createCancelablePromise","provideInlineCompletions","selectedSuggestionInfo","endTime","getTime","setValue","operation","UpdateOperation","disposable","commit","clearAndLeak","setPosition","SnippetController2","insert","snippet","lists","flatMap","l","commands","SynchronizedInlineCompletionsCache","completionsSource","onChange","isDisposing","decorationIds","changeAccessor","CachedInlineCompletion","newRange","decorationId","equalsRange","abbreviation","startLine","context","defaultReplaceRange","getDefaultRange","providers","catch","freeInlineCompletions","results","itemsByHash","completeBracketPairs","closeBrackets","diff","SnippetParser","parse","assertNever","trackedItem","maxColumn","newLine","newTokens","tokenizeLineWithEdit","slicedTokens","sliceAndInflate","fixBracketsInLine","SuggestWidgetInlineCompletionProvider","suggestControllerPreselector","isSuggestWidgetVisible","isShiftKeyPressed","_isActive","_currentSuggestItemInfo","setInactiveDelayed","onKeyDown","shiftKey","onKeyUp","suggestController","SuggestController","registerSelector","priority","select","pos","suggestItems","normalizedItemToPreselect","candidates","suggestItem","rangeToTest","prefix","inlineSuggestItem","suggestionToSuggestItemInfo","normalizedSuggestItem","normalizedInlineCompletion","valid","prefixLength","findMaxBy","compareBy","s","numberComparator","isBoundToSuggestWidget","Event","onDidTrigger","widget","onDidShow","onDidHide","onDidFocus","selectedItem","newActive","newInlineCompletion","getSuggestItemInfo","shouldFire","completionItemKind","isSnippetText","normalizedInlineCompletionsEquals","suggestItemInfoEquals","focusedItem","getFocusedItem","stopForceRenderingAbove","forceRenderingAbove","toggleMode","isArray","insertTextRules","children","SnippetSession","info","getOverwriteInfo","overwriteBefore","overwriteAfter","SuggestWidgetPreviewModel","suggestionInlineCompletionSource","updateCacheSoon","updateCache","state","newGhostText","reduce","completionKind","_c","isSuggestionPreviewEnabled","augmentedCompletion","suggestWidgetState","suggestInlineCompletion","isAugmentedCompletionValid","finalCompletion","inlineCompletionPreviewLength","toGhostText","previewMode","DelegatingModel","hasCachedGhostText","currentModelRef","cachedGhostText","targetModel","GhostTextModel","instantiationService","sharedCache","SharedInlineCompletionCache","suggestWidgetAdapterModel","createInstance","inlineCompletionsModel","updateModel","setTargetModel","isActive","setActive","hoverRange","activeInlineCompletionsModel","some","containsPosition","commitCurrentSuggestion","showNext","showPrevious","ttPolicy","window","trustedTypes","createPolicy","createHTML","GhostTextWidget","partsWidget","DecorationsWidget","additionalLinesWidget","AdditionalLinesWidget","languageIdCodec","viewMoreContentWidget","replacementDecoration","DisposableDecorations","viewZoneId","inlineTexts","additionalLines","addToAdditionalLines","lastLine","decorations","LineDecoration","slice","setDecorations","textBufferLine","hiddenTextStartColumn","lastIdx","setParts","updateLines","firstLineText","remainingLinesLength","fontInfo","domNode","document","createElement","applyFontInfo","spacer","append","newline","disposableStore","button","addStandardDisposableListener","ViewMoreLinesContentWidget","hiddenText","hiddenTextDecorations","after","concat","_viewZoneId","changeViewZones","removeZone","tabSize","heightInLines","disableMonospaceOptimizations","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","lineHeight","sb","createStringBuilder","appendASCIIString","lineData","String","isBasicASCII","containsRTL","lineTokens","LineTokens","renderViewLine","RenderLineInput","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","EditorFontLigatures","html","build","trustedhtml","innerHTML","renderLines","addZone","afterLineNumber","afterColumnAffinity","allowEditorOverflow","suppressMouseDown","removeContentWidget","addContentWidget","preference","registerThemingParticipant","theme","collector","foreground","getColor","ghostTextForeground","addRule","background","ghostTextBackground","border","ghostTextBorder","GhostTextController","triggeredExplicitly","activeController","activeModelDidChangeEmitter","updateModelController","suggestOptions","inlineSuggestOptions","ActiveGhostTextController","activeModel","shouldShowHoverAt","shouldShowHoverAtViewZone","triggerInlineCompletion","commitInlineCompletion","hideInlineCompletion","inlineSuggestionVisible","RawContextKey","nls","inlineSuggestionHasIndentation","inlineSuggestionHasIndentationLessThanTabSize","GhostTextContextKeys","inlineCompletionVisible","bindTo","inlineCompletionSuggestsIndentation","inlineCompletionSuggestsIndentationLessThanTabSize","contextKeys","updateContextKeys","startsWithIndentation","startsWithIndentationLessThanTabSize","firstLine","firstNonWsIdx","firstNonWhitespaceIndex","CursorColumns","ShowNextInlineSuggestionAction","ContextKeyExpr","EditorContextKeys","kbOpts","weight","primary","controller","EditorAction","ShowPreviousInlineSuggestionAction","TriggerInlineSuggestionAction","InlineCompletionsHover","InlineCompletionsHoverParticipant","_menuService","_contextKeyService","_languageService","_openerService","accessibilityService","viewZoneData","positionBefore","mightBeForeignElement","lineDecorations","hoverParts","isScreenReaderOptimized","renderScreenReaderText","menu","createMenu","previousAction","statusBar","addAction","nextAction","actions","setEnabled","hasMultipleSuggestions","hasMore","MenuItemAction","$","markdownHoverElement","hoverContentsElement","renderer","MarkdownRenderer","code","onDidRenderAsync","onContentsChanged","inlineSuggestionAvailable","renderedContents","render","appendCodeblock","replaceChildren","element","renderForScreenReader","fragment","appendChild","IMenuService","IAccessibilityService","registerEditorAction","GhostTextCommand","EditorCommand","commitInlineSuggestionAction","handler","registerEditorCommand","KeybindingsRegistry","when","ExpandLineSelectionAction","kbExpr","_accessor","viewModel","_getViewModel","pushStackElement","setCursorStates","CursorMoveCommands","getCursorStates","revealPrimaryCursor","CopyLinesCommand","selection","isCopyingDown","noop","_selection","_isCopyingDown","_noop","_selectionDirection","_selectionId","_startLineNumberDelta","_endLineNumberDelta","builder","setEndPosition","sourceLines","sourceText","addEditOperation","getLineCount","trackSelection","getDirection","helper","getTrackedSelection","Selection","MoveLinesCommand","isMovingDown","autoIndent","_languageConfigurationService","_isMovingDown","_autoIndent","_moveEndLineSelectionShrink","modelLineCount","_moveEndPositionDown","indentSize","insertSpaces","indentConverter","buildIndentConverter","virtualModel","getLanguageId","getLanguageIdAtPosition","otherLineNumber","movingLineNumber","movingLineText","insertingText","shouldAutoIndent","movingLineMatchResult","matchEnterRule","oldIndentation","newSpaceCnt","indentUtils","newIndentation","trimLeft","indentOfMovingLine","getGoodIndentForLine","ret","matchEnterRuleMovingDown","getIndentEditsOfMovingBlock","newIndentatOfMovingBlock","oldSpaceCnt","spaceCntOffset","indentOfFirstLine","oldIndent","shiftIndent","indentation","ShiftCommand","unshiftIndent","enter","enterPrefix","indentAction","IndentAction","indexOf","indentMetadataOfMovelingLine","getIndentMetadata","futureAboveLineNumber","futureAboveLineText","getEnterAction","parseEnterResult","validPrecedingLine","lineContent","oneLineAbove","previousLineText","isCheapToTokenize","languageAtSelectionStart","getLanguageConfiguration","indentRulesSupport","originalIndent","newSpacesCnt","newIndent","SortLinesCommand","descending","selectionId","op","getSortData","sortLines","_COLLATOR","Intl","Collator","before","linesToSort","sorted","getCollator","compare","AbstractCopyLinesAction","down","selections","getSelections","ignore","prev","curr","pushUndoStop","executeCommands","CopyLinesUpAction","linux","menuOpts","menuId","comment","order","CopyLinesDownAction","DuplicateSelectionAction","insertSelection","ReplaceCommandThatSelectsText","AbstractMoveLinesAction","MoveLinesUpAction","MoveLinesDownAction","AbstractSortLinesAction","canRun","SortLinesAscendingAction","SortLinesDescendingAction","DeleteDuplicateLinesAction","endCursorState","linesDeleted","uniqueLines","selectionToReplace","adjustedSelectionStart","finalSelection","TrimTrailingWhitespaceAction","KeyChord","cursors","positionLineNumber","positionColumn","getSelection","TrimTrailingWhitespaceCommand","DeleteLinesAction","ops","_getLinesToRemove","cursorState","operations","selectionStartColumn","mergedOperations","previousOperation","IndentLinesAction","TypeOperations","cursorConfig","OutdentLinesAction","InsertLineBeforeAction","InsertLineAfterAction","AbstractDeleteAllToBoundaryAction","primaryCursor","rangesToDelete","_getRangesToDelete","effectiveRanges","count","nextRange","_getEndCursorState","DeleteAllLeftAction","mac","endPrimaryCursor","deletedLines","forEach","endCursor","newStartLine","intersectRanges","unshift","deleteFromLine","deleteFromColumn","DeleteAllRightAction","secondary","sel","JoinLinesAction","reducedSelections","lastSelection","previousValue","currentValue","equalsSelection","lineOffset","columnDeltaOffset","selectionEndPositionOffset","trimmedLinesContent","firstNonWhitespaceIdx","getLineFirstNonWhitespaceColumn","insertSpace","lineTextWithoutIndent","deleteSelection","resultSelection","TransposeAction","chars","ReplaceCommand","ReplaceCommandThatPreservesSelection","AbstractCaseAction","wordSeparators","getConfiguredWordAtPosition","_modifyText","UpperCaseAction","toLocaleUpperCase","LowerCaseAction","toLocaleLowerCase","BackwardsCompatibleRegExp","_pattern","_flags","_actual","_evaluated","RegExp","err","TitleCaseAction","titleBoundary","SnakeCaseAction","caseBoundary","singleLetters","KebabCaseAction","_","underscoreBoundary","regexp","isSupported","CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE","DECORATION_CLASS_NAME","LinkedEditingContribution","languageFeatureDebounceService","_syncRangesToken","_localToDispose","_providers","linkedEditingRangeProvider","_enabled","_visibleContextKey","_debounceInformation","_currentDecorations","createDecorationsCollection","_languageWordPattern","_currentWordPattern","_ignoreChangeEvent","_rangeUpdateTriggerPromise","_rangeSyncTriggerPromise","_currentRequest","_currentRequestPosition","_currentRequestModelVersion","reinitialize","forceRefresh","isEnabled","clearRanges","onDidChangeLanguageConfiguration","getWordDefinition","rangeUpdateScheduler","Delayer","triggerRangeUpdate","_debounceDuration","rangeSyncScheduler","referenceRange","getRange","_syncRanges","referenceValue","match","mirrorRange","oldValue","rangeStartColumn","rangeEndColumn","commonPrefixLength","commonSuffixLength","popUndoStop","prevEditOperationType","getPrevEditOperationType","setPrevEditOperationType","force","modelVersionId","equals","request","sw","StopWatch","getLinkedEditingRanges","response","elapsed","wordPattern","foundReferenceRange","splice","DECORATION","isCancellationError","ModelDecorationOptions","LinkedEditingAction","editorService","ICodeEditorService","openCodeEditor","resource","getActiveCodeEditor","reportTelemetry","LinkedEditingCommand","orderedByScore","first","provideLinkedEditingRanges","arrays","editorLinkedEditingBackground","registerColor","dark","Color","transparent","light","hcDark","hcLight","editorLinkedEditingBackgroundColor","registerModelAndPositionCommand","Link","link","_link","_provider","url","resolveLink","LinksList","tuples","links","newLinks","_union","isDisposable","oldLinks","oldIndex","oldLen","newIndex","newLen","oldLink","newLink","getLinks","provideLinks","coalesce","resolveCount","linkProvider","IModelService","LinkDetector","debounceInformation","computeLinks","computeLinksNow","computePromise","activeLinksList","currentOccurrences","activeLinkDecorationId","clickLinkGesture","keyboardEvent","_onEditorMouseMove","onEditorMouseUp","cleanUpActiveLinkDecoration","updateDecorations","stop","oldDecorations","occurence","newDecorations","LinkOccurrence","withKey","occurrence","getLinkOccurrence","activate","deactivate","openLinkOccurrence","fromUserGesture","modelUri","parsedUri","fsPath","resources","relativePath","open","allowContributedOpeners","allowCommands","fromWorkspace","messageOrError","warn","currentOccurrence","Boolean","keyCodeIsTriggerKey","general","changeDecorationOptions","_getOptions","assign","hoverMessage","executeCmd","test","nativeLabel","appendLink","appendMarkdown","getHoverMessage","OpenLinkAction","linkDetector","activeLinkForeground","editorActiveLinkForeground"],"sourceRoot":""}