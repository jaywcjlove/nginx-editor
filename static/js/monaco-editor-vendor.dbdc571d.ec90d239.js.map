{"version":3,"file":"static/js/monaco-editor-vendor.dbdc571d.ec90d239.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/getHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hoverOperation.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/contentHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/marginHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markerHoverParticipant.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hoverTypes.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markdownHoverParticipant.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplaceCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplace.js","../node_modules/monaco-editor/esm/vs/editor/contrib/indentation/browser/indentUtils.js","../node_modules/monaco-editor/esm/vs/editor/contrib/indentation/browser/indentation.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class HoverProviderResult {\n    constructor(provider, hover, ordinal) {\n        this.provider = provider;\n        this.hover = hover;\n        this.ordinal = ordinal;\n    }\n}\nfunction executeProvider(provider, ordinal, model, position, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const result = yield Promise.resolve(provider.provideHover(model, position, token));\n            if (result && isValid(result)) {\n                return new HoverProviderResult(provider, result, ordinal);\n            }\n        }\n        catch (err) {\n            onUnexpectedExternalError(err);\n        }\n        return undefined;\n    });\n}\nexport function getHover(registry, model, position, token) {\n    const providers = registry.ordered(model);\n    const promises = providers.map((provider, index) => executeProvider(provider, index, model, position, token));\n    return AsyncIterableObject.fromPromises(promises).coalesce();\n}\nexport function getHoverPromise(registry, model, position, token) {\n    return getHover(registry, model, position, token).map(item => item.hover).toPromise();\n}\nregisterModelAndPositionCommand('_executeHoverProvider', (accessor, model, position) => {\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    return getHoverPromise(languageFeaturesService.hoverProvider, model, position, CancellationToken.None);\n});\nfunction isValid(result) {\n    const hasRange = (typeof result.range !== 'undefined');\n    const hasHtmlContent = typeof result.contents !== 'undefined' && result.contents && result.contents.length > 0;\n    return hasRange && hasHtmlContent;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { createCancelableAsyncIterable, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nexport class HoverResult {\n    constructor(value, isComplete, hasLoadingMessage) {\n        this.value = value;\n        this.isComplete = isComplete;\n        this.hasLoadingMessage = hasLoadingMessage;\n    }\n}\n/**\n * Computing the hover is very fine tuned.\n *\n * Suppose the hover delay is 300ms (the default). Then, when resting the mouse at an anchor:\n * - at 150ms, the async computation is triggered (i.e. semantic hover)\n *   - if async results already come in, they are not rendered yet.\n * - at 300ms, the sync computation is triggered (i.e. decorations, markers)\n *   - if there are sync or async results, they are rendered.\n * - at 900ms, if the async computation hasn't finished, a \"Loading...\" result is added.\n */\nexport class HoverOperation extends Disposable {\n    constructor(_editor, _computer) {\n        super();\n        this._editor = _editor;\n        this._computer = _computer;\n        this._onResult = this._register(new Emitter());\n        this.onResult = this._onResult.event;\n        this._firstWaitScheduler = this._register(new RunOnceScheduler(() => this._triggerAsyncComputation(), 0));\n        this._secondWaitScheduler = this._register(new RunOnceScheduler(() => this._triggerSyncComputation(), 0));\n        this._loadingMessageScheduler = this._register(new RunOnceScheduler(() => this._triggerLoadingMessage(), 0));\n        this._state = 0 /* HoverOperationState.Idle */;\n        this._asyncIterable = null;\n        this._asyncIterableDone = false;\n        this._result = [];\n    }\n    dispose() {\n        if (this._asyncIterable) {\n            this._asyncIterable.cancel();\n            this._asyncIterable = null;\n        }\n        super.dispose();\n    }\n    get _hoverTime() {\n        return this._editor.getOption(55 /* EditorOption.hover */).delay;\n    }\n    get _firstWaitTime() {\n        return this._hoverTime / 2;\n    }\n    get _secondWaitTime() {\n        return this._hoverTime - this._firstWaitTime;\n    }\n    get _loadingMessageTime() {\n        return 3 * this._hoverTime;\n    }\n    _setState(state, fireResult = true) {\n        this._state = state;\n        if (fireResult) {\n            this._fireResult();\n        }\n    }\n    _triggerAsyncComputation() {\n        this._setState(2 /* HoverOperationState.SecondWait */);\n        this._secondWaitScheduler.schedule(this._secondWaitTime);\n        if (this._computer.computeAsync) {\n            this._asyncIterableDone = false;\n            this._asyncIterable = createCancelableAsyncIterable(token => this._computer.computeAsync(token));\n            (() => __awaiter(this, void 0, void 0, function* () {\n                var e_1, _a;\n                try {\n                    try {\n                        for (var _b = __asyncValues(this._asyncIterable), _c; _c = yield _b.next(), !_c.done;) {\n                            const item = _c.value;\n                            if (item) {\n                                this._result.push(item);\n                                this._fireResult();\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                    this._asyncIterableDone = true;\n                    if (this._state === 3 /* HoverOperationState.WaitingForAsync */ || this._state === 4 /* HoverOperationState.WaitingForAsyncShowingLoading */) {\n                        this._setState(0 /* HoverOperationState.Idle */);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }))();\n        }\n        else {\n            this._asyncIterableDone = true;\n        }\n    }\n    _triggerSyncComputation() {\n        if (this._computer.computeSync) {\n            this._result = this._result.concat(this._computer.computeSync());\n        }\n        this._setState(this._asyncIterableDone ? 0 /* HoverOperationState.Idle */ : 3 /* HoverOperationState.WaitingForAsync */);\n    }\n    _triggerLoadingMessage() {\n        if (this._state === 3 /* HoverOperationState.WaitingForAsync */) {\n            this._setState(4 /* HoverOperationState.WaitingForAsyncShowingLoading */);\n        }\n    }\n    _fireResult() {\n        if (this._state === 1 /* HoverOperationState.FirstWait */ || this._state === 2 /* HoverOperationState.SecondWait */) {\n            // Do not send out results before the hover time\n            return;\n        }\n        const isComplete = (this._state === 0 /* HoverOperationState.Idle */);\n        const hasLoadingMessage = (this._state === 4 /* HoverOperationState.WaitingForAsyncShowingLoading */);\n        this._onResult.fire(new HoverResult(this._result.slice(0), isComplete, hasLoadingMessage));\n    }\n    start(mode) {\n        if (mode === 0 /* HoverStartMode.Delayed */) {\n            if (this._state === 0 /* HoverOperationState.Idle */) {\n                this._setState(1 /* HoverOperationState.FirstWait */);\n                this._firstWaitScheduler.schedule(this._firstWaitTime);\n                this._loadingMessageScheduler.schedule(this._loadingMessageTime);\n            }\n        }\n        else {\n            switch (this._state) {\n                case 0 /* HoverOperationState.Idle */:\n                    this._triggerAsyncComputation();\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n                case 2 /* HoverOperationState.SecondWait */:\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n            }\n        }\n    }\n    cancel() {\n        this._firstWaitScheduler.cancel();\n        this._secondWaitScheduler.cancel();\n        this._loadingMessageScheduler.cancel();\n        if (this._asyncIterable) {\n            this._asyncIterable.cancel();\n            this._asyncIterable = null;\n        }\n        this._result = [];\n        this._setState(0 /* HoverOperationState.Idle */, false);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { HoverAction, HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverParticipantRegistry, HoverRangeAnchor } from './hoverTypes.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { Context as SuggestContext } from '../../suggest/browser/suggest.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nconst $ = dom.$;\nlet ContentHoverController = class ContentHoverController extends Disposable {\n    constructor(_editor, _instantiationService, _keybindingService) {\n        super();\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._keybindingService = _keybindingService;\n        this._widget = this._register(this._instantiationService.createInstance(ContentHoverWidget, this._editor));\n        this._isChangingDecorations = false;\n        this._messages = [];\n        this._messagesAreComplete = false;\n        // Instantiate participants and sort them by `hoverOrdinal` which is relevant for rendering order.\n        this._participants = [];\n        for (const participant of HoverParticipantRegistry.getAll()) {\n            this._participants.push(this._instantiationService.createInstance(participant, this._editor));\n        }\n        this._participants.sort((p1, p2) => p1.hoverOrdinal - p2.hoverOrdinal);\n        this._computer = new ContentHoverComputer(this._editor, this._participants);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            this._withResult(result.value, result.isComplete, result.hasLoadingMessage);\n        }));\n        this._register(this._editor.onDidChangeModelDecorations(() => {\n            if (this._isChangingDecorations) {\n                return;\n            }\n            this._onModelDecorationsChanged();\n        }));\n        this._register(dom.addStandardDisposableListener(this._widget.getDomNode(), 'keydown', (e) => {\n            if (e.equals(9 /* KeyCode.Escape */)) {\n                this.hide();\n            }\n        }));\n        this._register(TokenizationRegistry.onDidChange(() => {\n            if (this._widget.position && this._computer.anchor && this._messages.length > 0) {\n                this._widget.clear();\n                this._renderMessages(this._computer.anchor, this._messages);\n            }\n        }));\n    }\n    _onModelDecorationsChanged() {\n        if (this._widget.position) {\n            // The decorations have changed and the hover is visible,\n            // we need to recompute the displayed text\n            this._hoverOperation.cancel();\n            if (!this._widget.isColorPickerVisible) { // TODO@Michel ensure that displayed text for other decorations is computed even if color picker is in place\n                this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n            }\n        }\n    }\n    maybeShowAt(mouseEvent) {\n        const anchorCandidates = [];\n        for (const participant of this._participants) {\n            if (participant.suggestHoverAnchor) {\n                const anchor = participant.suggestHoverAnchor(mouseEvent);\n                if (anchor) {\n                    anchorCandidates.push(anchor);\n                }\n            }\n        }\n        const target = mouseEvent.target;\n        if (target.type === 6 /* MouseTargetType.CONTENT_TEXT */) {\n            anchorCandidates.push(new HoverRangeAnchor(0, target.range));\n        }\n        if (target.type === 7 /* MouseTargetType.CONTENT_EMPTY */) {\n            const epsilon = this._editor.getOption(46 /* EditorOption.fontInfo */).typicalHalfwidthCharacterWidth / 2;\n            if (!target.detail.isAfterLines && typeof target.detail.horizontalDistanceToText === 'number' && target.detail.horizontalDistanceToText < epsilon) {\n                // Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough\n                anchorCandidates.push(new HoverRangeAnchor(0, target.range));\n            }\n        }\n        if (anchorCandidates.length === 0) {\n            return false;\n        }\n        anchorCandidates.sort((a, b) => b.priority - a.priority);\n        this._startShowingAt(anchorCandidates[0], 0 /* HoverStartMode.Delayed */, false);\n        return true;\n    }\n    startShowingAtRange(range, mode, focus) {\n        this._startShowingAt(new HoverRangeAnchor(0, range), mode, focus);\n    }\n    _startShowingAt(anchor, mode, focus) {\n        if (this._computer.anchor && this._computer.anchor.equals(anchor)) {\n            // We have to show the widget at the exact same range as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        if (this._widget.position) {\n            // The range might have changed, but the hover is visible\n            // Instead of hiding it completely, filter out messages that are still in the new range and\n            // kick off a new computation\n            if (!this._computer.anchor || !anchor.canAdoptVisibleHover(this._computer.anchor, this._widget.position)) {\n                this.hide();\n            }\n            else {\n                const filteredMessages = this._messages.filter((m) => m.isValidForHoverAnchor(anchor));\n                if (filteredMessages.length === 0) {\n                    this.hide();\n                }\n                else if (filteredMessages.length === this._messages.length && this._messagesAreComplete) {\n                    // no change\n                    return;\n                }\n                else {\n                    this._renderMessages(anchor, filteredMessages);\n                }\n            }\n        }\n        this._computer.anchor = anchor;\n        this._computer.shouldFocus = focus;\n        this._hoverOperation.start(mode);\n    }\n    hide() {\n        this._computer.anchor = null;\n        this._hoverOperation.cancel();\n        this._widget.hide();\n    }\n    isColorPickerVisible() {\n        return this._widget.isColorPickerVisible;\n    }\n    containsNode(node) {\n        return this._widget.getDomNode().contains(node);\n    }\n    _addLoadingMessage(result) {\n        if (this._computer.anchor) {\n            for (const participant of this._participants) {\n                if (participant.createLoadingMessage) {\n                    const loadingMessage = participant.createLoadingMessage(this._computer.anchor);\n                    if (loadingMessage) {\n                        return result.slice(0).concat([loadingMessage]);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    _withResult(result, isComplete, hasLoadingMessage) {\n        this._messages = (hasLoadingMessage ? this._addLoadingMessage(result) : result);\n        this._messagesAreComplete = isComplete;\n        if (this._computer.anchor && this._messages.length > 0) {\n            this._renderMessages(this._computer.anchor, this._messages);\n        }\n        else if (isComplete) {\n            this.hide();\n        }\n    }\n    _renderMessages(anchor, messages) {\n        const { showAtPosition, showAtRange, highlightRange } = ContentHoverController.computeHoverRanges(anchor.range, messages);\n        const disposables = new DisposableStore();\n        const statusBar = disposables.add(new EditorHoverStatusBar(this._keybindingService));\n        const fragment = document.createDocumentFragment();\n        let colorPicker = null;\n        const context = {\n            fragment,\n            statusBar,\n            setColorPicker: (widget) => colorPicker = widget,\n            onContentsChanged: () => this._widget.onContentsChanged(),\n            hide: () => this.hide()\n        };\n        for (const participant of this._participants) {\n            const hoverParts = messages.filter(msg => msg.owner === participant);\n            if (hoverParts.length > 0) {\n                disposables.add(participant.renderHoverParts(context, hoverParts));\n            }\n        }\n        if (statusBar.hasContent) {\n            fragment.appendChild(statusBar.hoverElement);\n        }\n        if (fragment.hasChildNodes()) {\n            if (highlightRange) {\n                const highlightDecoration = this._editor.createDecorationsCollection();\n                try {\n                    this._isChangingDecorations = true;\n                    highlightDecoration.set([{\n                            range: highlightRange,\n                            options: ContentHoverController._DECORATION_OPTIONS\n                        }]);\n                }\n                finally {\n                    this._isChangingDecorations = false;\n                }\n                disposables.add(toDisposable(() => {\n                    try {\n                        this._isChangingDecorations = true;\n                        highlightDecoration.clear();\n                    }\n                    finally {\n                        this._isChangingDecorations = false;\n                    }\n                }));\n            }\n            this._widget.showAt(fragment, new ContentHoverVisibleData(colorPicker, showAtPosition, showAtRange, this._editor.getOption(55 /* EditorOption.hover */).above, this._computer.shouldFocus, disposables));\n        }\n        else {\n            disposables.dispose();\n        }\n    }\n    static computeHoverRanges(anchorRange, messages) {\n        // The anchor range is always on a single line\n        const anchorLineNumber = anchorRange.startLineNumber;\n        let renderStartColumn = anchorRange.startColumn;\n        let renderEndColumn = anchorRange.endColumn;\n        let highlightRange = messages[0].range;\n        let forceShowAtRange = null;\n        for (const msg of messages) {\n            highlightRange = Range.plusRange(highlightRange, msg.range);\n            if (msg.range.startLineNumber === anchorLineNumber && msg.range.endLineNumber === anchorLineNumber) {\n                // this message has a range that is completely sitting on the line of the anchor\n                renderStartColumn = Math.min(renderStartColumn, msg.range.startColumn);\n                renderEndColumn = Math.max(renderEndColumn, msg.range.endColumn);\n            }\n            if (msg.forceShowAtRange) {\n                forceShowAtRange = msg.range;\n            }\n        }\n        return {\n            showAtPosition: forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchorRange.startLineNumber, renderStartColumn),\n            showAtRange: forceShowAtRange ? forceShowAtRange : new Range(anchorLineNumber, renderStartColumn, anchorLineNumber, renderEndColumn),\n            highlightRange\n        };\n    }\n};\nContentHoverController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n    description: 'content-hover-highlight',\n    className: 'hoverHighlight'\n});\nContentHoverController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IKeybindingService)\n], ContentHoverController);\nexport { ContentHoverController };\nclass ContentHoverVisibleData {\n    constructor(colorPicker, showAtPosition, showAtRange, preferAbove, stoleFocus, disposables) {\n        this.colorPicker = colorPicker;\n        this.showAtPosition = showAtPosition;\n        this.showAtRange = showAtRange;\n        this.preferAbove = preferAbove;\n        this.stoleFocus = stoleFocus;\n        this.disposables = disposables;\n    }\n}\nlet ContentHoverWidget = class ContentHoverWidget extends Disposable {\n    constructor(_editor, _contextKeyService) {\n        super();\n        this._editor = _editor;\n        this._contextKeyService = _contextKeyService;\n        this.allowEditorOverflow = true;\n        this._hoverVisibleKey = EditorContextKeys.hoverVisible.bindTo(this._contextKeyService);\n        this._hover = this._register(new HoverWidget());\n        this._visibleData = null;\n        this._register(this._editor.onDidLayoutChange(() => this._layout()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(46 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._setVisibleData(null);\n        this._layout();\n        this._editor.addContentWidget(this);\n    }\n    /**\n     * Returns `null` if the hover is not visible.\n     */\n    get position() {\n        var _a, _b;\n        return (_b = (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.showAtPosition) !== null && _b !== void 0 ? _b : null;\n    }\n    get isColorPickerVisible() {\n        var _a;\n        return Boolean((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.colorPicker);\n    }\n    dispose() {\n        this._editor.removeContentWidget(this);\n        if (this._visibleData) {\n            this._visibleData.disposables.dispose();\n        }\n        super.dispose();\n    }\n    getId() {\n        return ContentHoverWidget.ID;\n    }\n    getDomNode() {\n        return this._hover.containerDomNode;\n    }\n    getPosition() {\n        if (!this._visibleData) {\n            return null;\n        }\n        let preferAbove = this._visibleData.preferAbove;\n        if (!preferAbove && this._contextKeyService.getContextKeyValue(SuggestContext.Visible.key)) {\n            // Prefer rendering above if the suggest widget is visible\n            preferAbove = true;\n        }\n        return {\n            position: this._visibleData.showAtPosition,\n            range: this._visibleData.showAtRange,\n            preference: (preferAbove\n                ? [1 /* ContentWidgetPositionPreference.ABOVE */, 2 /* ContentWidgetPositionPreference.BELOW */]\n                : [2 /* ContentWidgetPositionPreference.BELOW */, 1 /* ContentWidgetPositionPreference.ABOVE */]),\n        };\n    }\n    _setVisibleData(visibleData) {\n        if (this._visibleData) {\n            this._visibleData.disposables.dispose();\n        }\n        this._visibleData = visibleData;\n        this._hoverVisibleKey.set(!!this._visibleData);\n        this._hover.containerDomNode.classList.toggle('hidden', !this._visibleData);\n    }\n    _layout() {\n        const height = Math.max(this._editor.getLayoutInfo().height / 4, 250);\n        const { fontSize, lineHeight } = this._editor.getOption(46 /* EditorOption.fontInfo */);\n        this._hover.contentsDomNode.style.fontSize = `${fontSize}px`;\n        this._hover.contentsDomNode.style.lineHeight = `${lineHeight / fontSize}`;\n        this._hover.contentsDomNode.style.maxHeight = `${height}px`;\n        this._hover.contentsDomNode.style.maxWidth = `${Math.max(this._editor.getLayoutInfo().width * 0.66, 500)}px`;\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    showAt(node, visibleData) {\n        this._setVisibleData(visibleData);\n        this._hover.contentsDomNode.textContent = '';\n        this._hover.contentsDomNode.appendChild(node);\n        this._hover.contentsDomNode.style.paddingBottom = '';\n        this._updateFont();\n        this.onContentsChanged();\n        // Simply force a synchronous render on the editor\n        // such that the widget does not really render with left = '0px'\n        this._editor.render();\n        // See https://github.com/microsoft/vscode/issues/140339\n        // TODO: Doing a second layout of the hover after force rendering the editor\n        this.onContentsChanged();\n        if (visibleData.stoleFocus) {\n            this._hover.containerDomNode.focus();\n        }\n        if (visibleData.colorPicker) {\n            visibleData.colorPicker.layout();\n        }\n    }\n    hide() {\n        if (this._visibleData) {\n            const stoleFocus = this._visibleData.stoleFocus;\n            this._setVisibleData(null);\n            this._editor.layoutContentWidget(this);\n            if (stoleFocus) {\n                this._editor.focus();\n            }\n        }\n    }\n    onContentsChanged() {\n        this._editor.layoutContentWidget(this);\n        this._hover.onContentsChanged();\n        const scrollDimensions = this._hover.scrollbar.getScrollDimensions();\n        const hasHorizontalScrollbar = (scrollDimensions.scrollWidth > scrollDimensions.width);\n        if (hasHorizontalScrollbar) {\n            // There is just a horizontal scrollbar\n            const extraBottomPadding = `${this._hover.scrollbar.options.horizontalScrollbarSize}px`;\n            if (this._hover.contentsDomNode.style.paddingBottom !== extraBottomPadding) {\n                this._hover.contentsDomNode.style.paddingBottom = extraBottomPadding;\n                this._editor.layoutContentWidget(this);\n                this._hover.onContentsChanged();\n            }\n        }\n    }\n    clear() {\n        this._hover.contentsDomNode.textContent = '';\n    }\n};\nContentHoverWidget.ID = 'editor.contrib.contentHoverWidget';\nContentHoverWidget = __decorate([\n    __param(1, IContextKeyService)\n], ContentHoverWidget);\nexport { ContentHoverWidget };\nlet EditorHoverStatusBar = class EditorHoverStatusBar extends Disposable {\n    constructor(_keybindingService) {\n        super();\n        this._keybindingService = _keybindingService;\n        this._hasContent = false;\n        this.hoverElement = $('div.hover-row.status-bar');\n        this.actionsElement = dom.append(this.hoverElement, $('div.actions'));\n    }\n    get hasContent() {\n        return this._hasContent;\n    }\n    addAction(actionOptions) {\n        const keybinding = this._keybindingService.lookupKeybinding(actionOptions.commandId);\n        const keybindingLabel = keybinding ? keybinding.getLabel() : null;\n        this._hasContent = true;\n        return this._register(HoverAction.render(this.actionsElement, actionOptions, keybindingLabel));\n    }\n    append(element) {\n        const result = dom.append(this.actionsElement, element);\n        this._hasContent = true;\n        return result;\n    }\n};\nEditorHoverStatusBar = __decorate([\n    __param(0, IKeybindingService)\n], EditorHoverStatusBar);\nclass ContentHoverComputer {\n    constructor(_editor, _participants) {\n        this._editor = _editor;\n        this._participants = _participants;\n        this._anchor = null;\n        this._shouldFocus = false;\n    }\n    get anchor() { return this._anchor; }\n    set anchor(value) { this._anchor = value; }\n    get shouldFocus() { return this._shouldFocus; }\n    set shouldFocus(value) { this._shouldFocus = value; }\n    static _getLineDecorations(editor, anchor) {\n        if (anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return [];\n        }\n        const model = editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        if (lineNumber > model.getLineCount()) {\n            // invalid line\n            return [];\n        }\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        return editor.getLineDecorations(lineNumber).filter((d) => {\n            if (d.options.isWholeLine) {\n                return true;\n            }\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            if (d.options.showIfCollapsed) {\n                // Relax check around `showIfCollapsed` decorations to also include +/- 1 character\n                if (startColumn > anchor.range.startColumn + 1 || anchor.range.endColumn - 1 > endColumn) {\n                    return false;\n                }\n            }\n            else {\n                if (startColumn > anchor.range.startColumn || anchor.range.endColumn > endColumn) {\n                    return false;\n                }\n            }\n            return true;\n        });\n    }\n    computeAsync(token) {\n        const anchor = this._anchor;\n        if (!this._editor.hasModel() || !anchor) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, anchor);\n        return AsyncIterableObject.merge(this._participants.map((participant) => {\n            if (!participant.computeAsync) {\n                return AsyncIterableObject.EMPTY;\n            }\n            return participant.computeAsync(anchor, lineDecorations, token);\n        }));\n    }\n    computeSync() {\n        if (!this._editor.hasModel() || !this._anchor) {\n            return [];\n        }\n        const lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, this._anchor);\n        let result = [];\n        for (const participant of this._participants) {\n            result = result.concat(participant.computeSync(this._anchor, lineDecorations));\n        }\n        return coalesce(result);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { isEmptyMarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { NullOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nconst $ = dom.$;\nexport class MarginHoverWidget extends Disposable {\n    constructor(editor, languageService, openerService = NullOpenerService) {\n        super();\n        this._renderDisposeables = this._register(new DisposableStore());\n        this._editor = editor;\n        this._isVisible = false;\n        this._messages = [];\n        this._hover = this._register(new HoverWidget());\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        this._markdownRenderer = this._register(new MarkdownRenderer({ editor: this._editor }, languageService, openerService));\n        this._computer = new MarginHoverComputer(this._editor);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            this._withResult(result.value);\n        }));\n        this._register(this._editor.onDidChangeModelDecorations(() => this._onModelDecorationsChanged()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(46 /* EditorOption.fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._editor.addOverlayWidget(this);\n    }\n    dispose() {\n        this._editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n    getId() {\n        return MarginHoverWidget.ID;\n    }\n    getDomNode() {\n        return this._hover.containerDomNode;\n    }\n    getPosition() {\n        return null;\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    _onModelDecorationsChanged() {\n        if (this._isVisible) {\n            // The decorations have changed and the hover is visible,\n            // we need to recompute the displayed text\n            this._hoverOperation.cancel();\n            this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n        }\n    }\n    startShowingAt(lineNumber) {\n        if (this._computer.lineNumber === lineNumber) {\n            // We have to show the widget at the exact same line number as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        this.hide();\n        this._computer.lineNumber = lineNumber;\n        this._hoverOperation.start(0 /* HoverStartMode.Delayed */);\n    }\n    hide() {\n        this._computer.lineNumber = -1;\n        this._hoverOperation.cancel();\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n    }\n    _withResult(result) {\n        this._messages = result;\n        if (this._messages.length > 0) {\n            this._renderMessages(this._computer.lineNumber, this._messages);\n        }\n        else {\n            this.hide();\n        }\n    }\n    _renderMessages(lineNumber, messages) {\n        this._renderDisposeables.clear();\n        const fragment = document.createDocumentFragment();\n        for (const msg of messages) {\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderedContents = this._renderDisposeables.add(this._markdownRenderer.render(msg.value));\n            hoverContentsElement.appendChild(renderedContents.element);\n            fragment.appendChild(markdownHoverElement);\n        }\n        this._updateContents(fragment);\n        this._showAt(lineNumber);\n    }\n    _updateContents(node) {\n        this._hover.contentsDomNode.textContent = '';\n        this._hover.contentsDomNode.appendChild(node);\n        this._updateFont();\n    }\n    _showAt(lineNumber) {\n        if (!this._isVisible) {\n            this._isVisible = true;\n            this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        }\n        const editorLayout = this._editor.getLayoutInfo();\n        const topForLineNumber = this._editor.getTopForLineNumber(lineNumber);\n        const editorScrollTop = this._editor.getScrollTop();\n        const lineHeight = this._editor.getOption(61 /* EditorOption.lineHeight */);\n        const nodeHeight = this._hover.containerDomNode.clientHeight;\n        const top = topForLineNumber - editorScrollTop - ((nodeHeight - lineHeight) / 2);\n        this._hover.containerDomNode.style.left = `${editorLayout.glyphMarginLeft + editorLayout.glyphMarginWidth}px`;\n        this._hover.containerDomNode.style.top = `${Math.max(Math.round(top), 0)}px`;\n    }\n}\nMarginHoverWidget.ID = 'editor.contrib.modesGlyphHoverWidget';\nclass MarginHoverComputer {\n    constructor(_editor) {\n        this._editor = _editor;\n        this._lineNumber = -1;\n    }\n    get lineNumber() {\n        return this._lineNumber;\n    }\n    set lineNumber(value) {\n        this._lineNumber = value;\n    }\n    computeSync() {\n        const toHoverMessage = (contents) => {\n            return {\n                value: contents\n            };\n        };\n        const lineDecorations = this._editor.getLineDecorations(this._lineNumber);\n        const result = [];\n        if (!lineDecorations) {\n            return result;\n        }\n        for (const d of lineDecorations) {\n            if (!d.options.glyphMarginClassName) {\n                continue;\n            }\n            const hoverMessage = d.options.glyphMarginHoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            result.push(...asArray(hoverMessage).map(toHoverMessage));\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, disposableTimeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { basename } from '../../../../base/common/resources.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IMarkerDecorationsService } from '../../../common/services/markerDecorations.js';\nimport { getCodeActions } from '../../codeAction/browser/codeAction.js';\nimport { QuickFixAction, QuickFixController } from '../../codeAction/browser/codeActionCommands.js';\nimport { CodeActionKind, CodeActionTriggerSource } from '../../codeAction/browser/types.js';\nimport { MarkerController, NextMarkerAction } from '../../gotoError/browser/gotoError.js';\nimport * as nls from '../../../../nls.js';\nimport { IMarkerData, MarkerSeverity } from '../../../../platform/markers/common/markers.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nimport { textLinkActiveForeground, textLinkForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nconst $ = dom.$;\nexport class MarkerHover {\n    constructor(owner, range, marker) {\n        this.owner = owner;\n        this.range = range;\n        this.marker = marker;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nconst markerCodeActionTrigger = {\n    type: 1 /* CodeActionTriggerType.Invoke */,\n    filter: { include: CodeActionKind.QuickFix },\n    triggerAction: CodeActionTriggerSource.QuickFixHover\n};\nlet MarkerHoverParticipant = class MarkerHoverParticipant {\n    constructor(_editor, _markerDecorationsService, _openerService, _languageFeaturesService) {\n        this._editor = _editor;\n        this._markerDecorationsService = _markerDecorationsService;\n        this._openerService = _openerService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this.hoverOrdinal = 5;\n        this.recentMarkerCodeActionsInfo = undefined;\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const marker = this._markerDecorationsService.getMarker(model.uri, d);\n            if (!marker) {\n                continue;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkerHover(this, range, marker));\n        }\n        return result;\n    }\n    renderHoverParts(context, hoverParts) {\n        if (!hoverParts.length) {\n            return Disposable.None;\n        }\n        const disposables = new DisposableStore();\n        hoverParts.forEach(msg => context.fragment.appendChild(this.renderMarkerHover(msg, disposables)));\n        const markerHoverForStatusbar = hoverParts.length === 1 ? hoverParts[0] : hoverParts.sort((a, b) => MarkerSeverity.compare(a.marker.severity, b.marker.severity))[0];\n        this.renderMarkerStatusbar(context, markerHoverForStatusbar, disposables);\n        return disposables;\n    }\n    renderMarkerHover(markerHover, disposables) {\n        const hoverElement = $('div.hover-row');\n        const markerElement = dom.append(hoverElement, $('div.marker.hover-contents'));\n        const { source, message, code, relatedInformation } = markerHover.marker;\n        this._editor.applyFontInfo(markerElement);\n        const messageElement = dom.append(markerElement, $('span'));\n        messageElement.style.whiteSpace = 'pre-wrap';\n        messageElement.innerText = message;\n        if (source || code) {\n            // Code has link\n            if (code && typeof code !== 'string') {\n                const sourceAndCodeElement = $('span');\n                if (source) {\n                    const sourceElement = dom.append(sourceAndCodeElement, $('span'));\n                    sourceElement.innerText = source;\n                }\n                const codeLink = dom.append(sourceAndCodeElement, $('a.code-link'));\n                codeLink.setAttribute('href', code.target.toString());\n                disposables.add(dom.addDisposableListener(codeLink, 'click', (e) => {\n                    this._openerService.open(code.target, { allowCommands: true });\n                    e.preventDefault();\n                    e.stopPropagation();\n                }));\n                const codeElement = dom.append(codeLink, $('span'));\n                codeElement.innerText = code.value;\n                const detailsElement = dom.append(markerElement, sourceAndCodeElement);\n                detailsElement.style.opacity = '0.6';\n                detailsElement.style.paddingLeft = '6px';\n            }\n            else {\n                const detailsElement = dom.append(markerElement, $('span'));\n                detailsElement.style.opacity = '0.6';\n                detailsElement.style.paddingLeft = '6px';\n                detailsElement.innerText = source && code ? `${source}(${code})` : source ? source : `(${code})`;\n            }\n        }\n        if (isNonEmptyArray(relatedInformation)) {\n            for (const { message, resource, startLineNumber, startColumn } of relatedInformation) {\n                const relatedInfoContainer = dom.append(markerElement, $('div'));\n                relatedInfoContainer.style.marginTop = '8px';\n                const a = dom.append(relatedInfoContainer, $('a'));\n                a.innerText = `${basename(resource)}(${startLineNumber}, ${startColumn}): `;\n                a.style.cursor = 'pointer';\n                disposables.add(dom.addDisposableListener(a, 'click', (e) => {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    if (this._openerService) {\n                        this._openerService.open(resource, {\n                            fromUserGesture: true,\n                            editorOptions: { selection: { startLineNumber, startColumn } }\n                        }).catch(onUnexpectedError);\n                    }\n                }));\n                const messageElement = dom.append(relatedInfoContainer, $('span'));\n                messageElement.innerText = message;\n                this._editor.applyFontInfo(messageElement);\n            }\n        }\n        return hoverElement;\n    }\n    renderMarkerStatusbar(context, markerHover, disposables) {\n        if (markerHover.marker.severity === MarkerSeverity.Error || markerHover.marker.severity === MarkerSeverity.Warning || markerHover.marker.severity === MarkerSeverity.Info) {\n            context.statusBar.addAction({\n                label: nls.localize('view problem', \"View Problem\"),\n                commandId: NextMarkerAction.ID,\n                run: () => {\n                    var _a;\n                    context.hide();\n                    (_a = MarkerController.get(this._editor)) === null || _a === void 0 ? void 0 : _a.showAtMarker(markerHover.marker);\n                    this._editor.focus();\n                }\n            });\n        }\n        if (!this._editor.getOption(83 /* EditorOption.readOnly */)) {\n            const quickfixPlaceholderElement = context.statusBar.append($('div'));\n            if (this.recentMarkerCodeActionsInfo) {\n                if (IMarkerData.makeKey(this.recentMarkerCodeActionsInfo.marker) === IMarkerData.makeKey(markerHover.marker)) {\n                    if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\n                        quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\n                    }\n                }\n                else {\n                    this.recentMarkerCodeActionsInfo = undefined;\n                }\n            }\n            const updatePlaceholderDisposable = this.recentMarkerCodeActionsInfo && !this.recentMarkerCodeActionsInfo.hasCodeActions ? Disposable.None : disposables.add(disposableTimeout(() => quickfixPlaceholderElement.textContent = nls.localize('checkingForQuickFixes', \"Checking for quick fixes...\"), 200));\n            if (!quickfixPlaceholderElement.textContent) {\n                // Have some content in here to avoid flickering\n                quickfixPlaceholderElement.textContent = String.fromCharCode(0xA0); // &nbsp;\n            }\n            const codeActionsPromise = this.getCodeActions(markerHover.marker);\n            disposables.add(toDisposable(() => codeActionsPromise.cancel()));\n            codeActionsPromise.then(actions => {\n                updatePlaceholderDisposable.dispose();\n                this.recentMarkerCodeActionsInfo = { marker: markerHover.marker, hasCodeActions: actions.validActions.length > 0 };\n                if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\n                    actions.dispose();\n                    quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\n                    return;\n                }\n                quickfixPlaceholderElement.style.display = 'none';\n                let showing = false;\n                disposables.add(toDisposable(() => {\n                    if (!showing) {\n                        actions.dispose();\n                    }\n                }));\n                context.statusBar.addAction({\n                    label: nls.localize('quick fixes', \"Quick Fix...\"),\n                    commandId: QuickFixAction.Id,\n                    run: (target) => {\n                        showing = true;\n                        const controller = QuickFixController.get(this._editor);\n                        const elementPosition = dom.getDomNodePagePosition(target);\n                        // Hide the hover pre-emptively, otherwise the editor can close the code actions\n                        // context menu as well when using keyboard navigation\n                        context.hide();\n                        controller === null || controller === void 0 ? void 0 : controller.showCodeActions(markerCodeActionTrigger, actions, {\n                            x: elementPosition.left + 6,\n                            y: elementPosition.top + elementPosition.height + 6,\n                            width: elementPosition.width,\n                            height: elementPosition.height\n                        });\n                    }\n                });\n            }, onUnexpectedError);\n        }\n    }\n    getCodeActions(marker) {\n        return createCancelablePromise(cancellationToken => {\n            return getCodeActions(this._languageFeaturesService.codeActionProvider, this._editor.getModel(), new Range(marker.startLineNumber, marker.startColumn, marker.endLineNumber, marker.endColumn), markerCodeActionTrigger, Progress.None, cancellationToken);\n        });\n    }\n};\nMarkerHoverParticipant = __decorate([\n    __param(1, IMarkerDecorationsService),\n    __param(2, IOpenerService),\n    __param(3, ILanguageFeaturesService)\n], MarkerHoverParticipant);\nexport { MarkerHoverParticipant };\nregisterThemingParticipant((theme, collector) => {\n    const linkFg = theme.getColor(textLinkForeground);\n    if (linkFg) {\n        collector.addRule(`.monaco-hover .hover-contents a.code-link span { color: ${linkFg}; }`);\n    }\n    const activeLinkFg = theme.getColor(textLinkActiveForeground);\n    if (activeLinkFg) {\n        collector.addRule(`.monaco-hover .hover-contents a.code-link span:hover { color: ${activeLinkFg}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { GotoDefinitionAtPositionEditorContribution } from '../../gotoSymbol/browser/link/goToDefinitionAtPosition.js';\nimport { ContentHoverWidget, ContentHoverController } from './contentHover.js';\nimport { MarginHoverWidget } from './marginHover.js';\nimport * as nls from '../../../../nls.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { editorHoverBackground, editorHoverBorder, editorHoverForeground, editorHoverHighlight, editorHoverStatusBarBackground, textCodeBlockBackground, textLinkActiveForeground, textLinkForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { HoverParticipantRegistry } from './hoverTypes.js';\nimport { MarkdownHoverParticipant } from './markdownHoverParticipant.js';\nimport { MarkerHoverParticipant } from './markerHoverParticipant.js';\nlet ModesHoverController = class ModesHoverController {\n    constructor(_editor, _instantiationService, _openerService, _languageService, _contextKeyService) {\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._openerService = _openerService;\n        this._languageService = _languageService;\n        this._toUnhook = new DisposableStore();\n        this._isMouseDown = false;\n        this._hoverClicked = false;\n        this._contentWidget = null;\n        this._glyphWidget = null;\n        this._hookEvents();\n        this._didChangeConfigurationHandler = this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(55 /* EditorOption.hover */)) {\n                this._unhookEvents();\n                this._hookEvents();\n            }\n        });\n    }\n    static get(editor) {\n        return editor.getContribution(ModesHoverController.ID);\n    }\n    _hookEvents() {\n        const hideWidgetsEventHandler = () => this._hideWidgets();\n        const hoverOpts = this._editor.getOption(55 /* EditorOption.hover */);\n        this._isHoverEnabled = hoverOpts.enabled;\n        this._isHoverSticky = hoverOpts.sticky;\n        if (this._isHoverEnabled) {\n            this._toUnhook.add(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\n            this._toUnhook.add(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\n        }\n        else {\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\n        }\n        this._toUnhook.add(this._editor.onMouseLeave((e) => this._onEditorMouseLeave(e)));\n        this._toUnhook.add(this._editor.onDidChangeModel(hideWidgetsEventHandler));\n        this._toUnhook.add(this._editor.onDidScrollChange((e) => this._onEditorScrollChanged(e)));\n    }\n    _unhookEvents() {\n        this._toUnhook.clear();\n    }\n    _onEditorScrollChanged(e) {\n        if (e.scrollTopChanged || e.scrollLeftChanged) {\n            this._hideWidgets();\n        }\n    }\n    _onEditorMouseDown(mouseEvent) {\n        this._isMouseDown = true;\n        const target = mouseEvent.target;\n        if (target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID) {\n            this._hoverClicked = true;\n            // mouse down on top of content hover widget\n            return;\n        }\n        if (target.type === 12 /* MouseTargetType.OVERLAY_WIDGET */ && target.detail === MarginHoverWidget.ID) {\n            // mouse down on top of overlay hover widget\n            return;\n        }\n        if (target.type !== 12 /* MouseTargetType.OVERLAY_WIDGET */) {\n            this._hoverClicked = false;\n        }\n        this._hideWidgets();\n    }\n    _onEditorMouseUp(mouseEvent) {\n        this._isMouseDown = false;\n    }\n    _onEditorMouseLeave(mouseEvent) {\n        var _a;\n        const targetEm = (mouseEvent.event.browserEvent.relatedTarget);\n        if ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.containsNode(targetEm)) {\n            // when the mouse is inside hover widget\n            return;\n        }\n        this._hideWidgets();\n    }\n    _onEditorMouseMove(mouseEvent) {\n        var _a, _b, _c, _d, _e;\n        const target = mouseEvent.target;\n        if (this._isMouseDown && this._hoverClicked) {\n            return;\n        }\n        if (this._isHoverSticky && target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID) {\n            // mouse moved on top of content hover widget\n            return;\n        }\n        if (this._isHoverSticky && !((_b = (_a = mouseEvent.event.browserEvent.view) === null || _a === void 0 ? void 0 : _a.getSelection()) === null || _b === void 0 ? void 0 : _b.isCollapsed)) {\n            // selected text within content hover widget\n            return;\n        }\n        if (!this._isHoverSticky && target.type === 9 /* MouseTargetType.CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID\n            && ((_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.isColorPickerVisible())) {\n            // though the hover is not sticky, the color picker needs to.\n            return;\n        }\n        if (this._isHoverSticky && target.type === 12 /* MouseTargetType.OVERLAY_WIDGET */ && target.detail === MarginHoverWidget.ID) {\n            // mouse moved on top of overlay hover widget\n            return;\n        }\n        if (!this._isHoverEnabled) {\n            this._hideWidgets();\n            return;\n        }\n        const contentWidget = this._getOrCreateContentWidget();\n        if (contentWidget.maybeShowAt(mouseEvent)) {\n            (_d = this._glyphWidget) === null || _d === void 0 ? void 0 : _d.hide();\n            return;\n        }\n        if (target.type === 2 /* MouseTargetType.GUTTER_GLYPH_MARGIN */ && target.position) {\n            (_e = this._contentWidget) === null || _e === void 0 ? void 0 : _e.hide();\n            if (!this._glyphWidget) {\n                this._glyphWidget = new MarginHoverWidget(this._editor, this._languageService, this._openerService);\n            }\n            this._glyphWidget.startShowingAt(target.position.lineNumber);\n            return;\n        }\n        this._hideWidgets();\n    }\n    _onKeyDown(e) {\n        if (e.keyCode !== 5 /* KeyCode.Ctrl */ && e.keyCode !== 6 /* KeyCode.Alt */ && e.keyCode !== 57 /* KeyCode.Meta */ && e.keyCode !== 4 /* KeyCode.Shift */) {\n            // Do not hide hover when a modifier key is pressed\n            this._hideWidgets();\n        }\n    }\n    _hideWidgets() {\n        var _a, _b, _c;\n        if ((this._isMouseDown && this._hoverClicked && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible()))) {\n            return;\n        }\n        this._hoverClicked = false;\n        (_b = this._glyphWidget) === null || _b === void 0 ? void 0 : _b.hide();\n        (_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.hide();\n    }\n    _getOrCreateContentWidget() {\n        if (!this._contentWidget) {\n            this._contentWidget = this._instantiationService.createInstance(ContentHoverController, this._editor);\n        }\n        return this._contentWidget;\n    }\n    isColorPickerVisible() {\n        var _a;\n        return ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible()) || false;\n    }\n    showContentHover(range, mode, focus) {\n        this._getOrCreateContentWidget().startShowingAtRange(range, mode, focus);\n    }\n    dispose() {\n        var _a, _b;\n        this._unhookEvents();\n        this._toUnhook.dispose();\n        this._didChangeConfigurationHandler.dispose();\n        (_a = this._glyphWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n        (_b = this._contentWidget) === null || _b === void 0 ? void 0 : _b.dispose();\n    }\n};\nModesHoverController.ID = 'editor.contrib.hover';\nModesHoverController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IOpenerService),\n    __param(3, ILanguageService),\n    __param(4, IContextKeyService)\n], ModesHoverController);\nexport { ModesHoverController };\nclass ShowHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.showHover',\n            label: nls.localize({\n                key: 'showHover',\n                comment: [\n                    'Label for action that will trigger the showing of a hover in the editor.',\n                    'This allows for users to show the hover without using the mouse.'\n                ]\n            }, \"Show Hover\"),\n            alias: 'Show Hover',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* KeyMod.CtrlCmd */ | 41 /* KeyCode.KeyK */, 2048 /* KeyMod.CtrlCmd */ | 39 /* KeyCode.KeyI */),\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const position = editor.getPosition();\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const focus = editor.getOption(2 /* EditorOption.accessibilitySupport */) === 2 /* AccessibilitySupport.Enabled */;\n        controller.showContentHover(range, 1 /* HoverStartMode.Immediate */, focus);\n    }\n}\nclass ShowDefinitionPreviewHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.showDefinitionPreviewHover',\n            label: nls.localize({\n                key: 'showDefinitionPreviewHover',\n                comment: [\n                    'Label for action that will trigger the showing of definition preview hover in the editor.',\n                    'This allows for users to show the definition preview hover without using the mouse.'\n                ]\n            }, \"Show Definition Preview Hover\"),\n            alias: 'Show Definition Preview Hover',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const position = editor.getPosition();\n        if (!position) {\n            return;\n        }\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const goto = GotoDefinitionAtPositionEditorContribution.get(editor);\n        if (!goto) {\n            return;\n        }\n        const promise = goto.startFindDefinitionFromCursor(position);\n        promise.then(() => {\n            controller.showContentHover(range, 1 /* HoverStartMode.Immediate */, true);\n        });\n    }\n}\nregisterEditorContribution(ModesHoverController.ID, ModesHoverController);\nregisterEditorAction(ShowHoverAction);\nregisterEditorAction(ShowDefinitionPreviewHoverAction);\nHoverParticipantRegistry.register(MarkdownHoverParticipant);\nHoverParticipantRegistry.register(MarkerHoverParticipant);\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const editorHoverHighlightColor = theme.getColor(editorHoverHighlight);\n    if (editorHoverHighlightColor) {\n        collector.addRule(`.monaco-editor .hoverHighlight { background-color: ${editorHoverHighlightColor}; }`);\n    }\n    const hoverBackground = theme.getColor(editorHoverBackground);\n    if (hoverBackground) {\n        collector.addRule(`.monaco-editor .monaco-hover { background-color: ${hoverBackground}; }`);\n    }\n    const hoverBorder = theme.getColor(editorHoverBorder);\n    if (hoverBorder) {\n        collector.addRule(`.monaco-editor .monaco-hover { border: 1px solid ${hoverBorder}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-bottom: 0px solid ${hoverBorder.transparent(0.5)}; }`);\n    }\n    const link = theme.getColor(textLinkForeground);\n    if (link) {\n        collector.addRule(`.monaco-editor .monaco-hover a { color: ${link}; }`);\n    }\n    const linkHover = theme.getColor(textLinkActiveForeground);\n    if (linkHover) {\n        collector.addRule(`.monaco-editor .monaco-hover a:hover { color: ${linkHover}; }`);\n    }\n    const hoverForeground = theme.getColor(editorHoverForeground);\n    if (hoverForeground) {\n        collector.addRule(`.monaco-editor .monaco-hover { color: ${hoverForeground}; }`);\n    }\n    const actionsBackground = theme.getColor(editorHoverStatusBarBackground);\n    if (actionsBackground) {\n        collector.addRule(`.monaco-editor .monaco-hover .hover-row .actions { background-color: ${actionsBackground}; }`);\n    }\n    const codeBackground = theme.getColor(textCodeBlockBackground);\n    if (codeBackground) {\n        collector.addRule(`.monaco-editor .monaco-hover code { background-color: ${codeBackground}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class HoverRangeAnchor {\n    constructor(priority, range) {\n        this.priority = priority;\n        this.range = range;\n        this.type = 1 /* HoverAnchorType.Range */;\n    }\n    equals(other) {\n        return (other.type === 1 /* HoverAnchorType.Range */ && this.range.equalsRange(other.range));\n    }\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\n        return (lastAnchor.type === 1 /* HoverAnchorType.Range */ && showAtPosition.lineNumber === this.range.startLineNumber);\n    }\n}\nexport class HoverForeignElementAnchor {\n    constructor(priority, owner, range) {\n        this.priority = priority;\n        this.owner = owner;\n        this.range = range;\n        this.type = 2 /* HoverAnchorType.ForeignElement */;\n    }\n    equals(other) {\n        return (other.type === 2 /* HoverAnchorType.ForeignElement */ && this.owner === other.owner);\n    }\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\n        return (lastAnchor.type === 2 /* HoverAnchorType.ForeignElement */ && this.owner === lastAnchor.owner);\n    }\n}\nexport const HoverParticipantRegistry = (new class HoverParticipantRegistry {\n    constructor() {\n        this._participants = [];\n    }\n    register(ctor) {\n        this._participants.push(ctor);\n    }\n    getAll() {\n        return this._participants;\n    }\n}());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { getHover } from './getHover.js';\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nconst $ = dom.$;\nexport class MarkdownHover {\n    constructor(owner, range, contents, ordinal) {\n        this.owner = owner;\n        this.range = range;\n        this.contents = contents;\n        this.ordinal = ordinal;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* HoverAnchorType.Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nlet MarkdownHoverParticipant = class MarkdownHoverParticipant {\n    constructor(_editor, _languageService, _openerService, _configurationService, _languageFeaturesService) {\n        this._editor = _editor;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this._configurationService = _configurationService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this.hoverOrdinal = 2;\n    }\n    createLoadingMessage(anchor) {\n        return new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(nls.localize('modesContentHover.loading', \"Loading...\"))], 2000);\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        let index = 1000;\n        const lineLength = model.getLineLength(lineNumber);\n        const languageId = model.getLanguageIdAtPosition(anchor.range.startLineNumber, anchor.range.startColumn);\n        const maxTokenizationLineLength = this._configurationService.getValue('editor.maxTokenizationLineLength', {\n            overrideIdentifier: languageId\n        });\n        if (typeof maxTokenizationLineLength === 'number' && lineLength >= maxTokenizationLineLength) {\n            result.push(new MarkdownHover(this, anchor.range, [{\n                    value: nls.localize('too many characters', \"Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.\")\n                }], index++));\n        }\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const hoverMessage = d.options.hoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkdownHover(this, range, asArray(hoverMessage), index++));\n        }\n        return result;\n    }\n    computeAsync(anchor, lineDecorations, token) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* HoverAnchorType.Range */) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const model = this._editor.getModel();\n        if (!this._languageFeaturesService.hoverProvider.has(model)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const position = new Position(anchor.range.startLineNumber, anchor.range.startColumn);\n        return getHover(this._languageFeaturesService.hoverProvider, model, position, token)\n            .filter(item => !isEmptyMarkdownString(item.hover.contents))\n            .map(item => {\n            const rng = item.hover.range ? Range.lift(item.hover.range) : anchor.range;\n            return new MarkdownHover(this, rng, item.hover.contents, item.ordinal);\n        });\n    }\n    renderHoverParts(context, hoverParts) {\n        return renderMarkdownHovers(context, hoverParts, this._editor, this._languageService, this._openerService);\n    }\n};\nMarkdownHoverParticipant = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService),\n    __param(4, ILanguageFeaturesService)\n], MarkdownHoverParticipant);\nexport { MarkdownHoverParticipant };\nexport function renderMarkdownHovers(context, hoverParts, editor, languageService, openerService) {\n    // Sort hover parts to keep them stable since they might come in async, out-of-order\n    hoverParts.sort((a, b) => a.ordinal - b.ordinal);\n    const disposables = new DisposableStore();\n    for (const hoverPart of hoverParts) {\n        for (const contents of hoverPart.contents) {\n            if (isEmptyMarkdownString(contents)) {\n                continue;\n            }\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderer = disposables.add(new MarkdownRenderer({ editor }, languageService, openerService));\n            disposables.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const renderedContents = disposables.add(renderer.render(contents));\n            hoverContentsElement.appendChild(renderedContents.element);\n            context.fragment.appendChild(markdownHoverElement);\n        }\n    }\n    return disposables;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../../../common/core/selection.js';\nexport class InPlaceReplaceCommand {\n    constructor(editRange, originalSelection, text) {\n        this._editRange = editRange;\n        this._originalSelection = originalSelection;\n        this._text = text;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._editRange, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        if (!this._originalSelection.isEmpty()) {\n            // Preserve selection and extends to typed text\n            return new Selection(srcRange.endLineNumber, srcRange.endColumn - this._text.length, srcRange.endLineNumber, srcRange.endColumn);\n        }\n        return new Selection(srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn), srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createCancelablePromise, timeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { EditorState } from '../../editorState/browser/editorState.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport { editorBracketMatchBorder } from '../../../common/core/editorColorRegistry.js';\nimport * as nls from '../../../../nls.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { InPlaceReplaceCommand } from './inPlaceReplaceCommand.js';\nlet InPlaceReplaceController = class InPlaceReplaceController {\n    constructor(editor, editorWorkerService) {\n        this.editor = editor;\n        this.editorWorkerService = editorWorkerService;\n        this.decorations = this.editor.createDecorationsCollection();\n    }\n    static get(editor) {\n        return editor.getContribution(InPlaceReplaceController.ID);\n    }\n    dispose() {\n    }\n    run(source, up) {\n        // cancel any pending request\n        if (this.currentRequest) {\n            this.currentRequest.cancel();\n        }\n        const editorSelection = this.editor.getSelection();\n        const model = this.editor.getModel();\n        if (!model || !editorSelection) {\n            return undefined;\n        }\n        let selection = editorSelection;\n        if (selection.startLineNumber !== selection.endLineNumber) {\n            // Can't accept multiline selection\n            return undefined;\n        }\n        const state = new EditorState(this.editor, 1 /* CodeEditorStateFlag.Value */ | 4 /* CodeEditorStateFlag.Position */);\n        const modelURI = model.uri;\n        if (!this.editorWorkerService.canNavigateValueSet(modelURI)) {\n            return Promise.resolve(undefined);\n        }\n        this.currentRequest = createCancelablePromise(token => this.editorWorkerService.navigateValueSet(modelURI, selection, up));\n        return this.currentRequest.then(result => {\n            if (!result || !result.range || !result.value) {\n                // No proper result\n                return;\n            }\n            if (!state.validate(this.editor)) {\n                // state has changed\n                return;\n            }\n            // Selection\n            const editRange = Range.lift(result.range);\n            let highlightRange = result.range;\n            const diff = result.value.length - (selection.endColumn - selection.startColumn);\n            // highlight\n            highlightRange = {\n                startLineNumber: highlightRange.startLineNumber,\n                startColumn: highlightRange.startColumn,\n                endLineNumber: highlightRange.endLineNumber,\n                endColumn: highlightRange.startColumn + result.value.length\n            };\n            if (diff > 1) {\n                selection = new Selection(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn + diff - 1);\n            }\n            // Insert new text\n            const command = new InPlaceReplaceCommand(editRange, selection, result.value);\n            this.editor.pushUndoStop();\n            this.editor.executeCommand(source, command);\n            this.editor.pushUndoStop();\n            // add decoration\n            this.decorations.set([{\n                    range: highlightRange,\n                    options: InPlaceReplaceController.DECORATION\n                }]);\n            // remove decoration after delay\n            if (this.decorationRemover) {\n                this.decorationRemover.cancel();\n            }\n            this.decorationRemover = timeout(350);\n            this.decorationRemover.then(() => this.decorations.clear()).catch(onUnexpectedError);\n        }).catch(onUnexpectedError);\n    }\n};\nInPlaceReplaceController.ID = 'editor.contrib.inPlaceReplaceController';\nInPlaceReplaceController.DECORATION = ModelDecorationOptions.register({\n    description: 'in-place-replace',\n    className: 'valueSetReplacement'\n});\nInPlaceReplaceController = __decorate([\n    __param(1, IEditorWorkerService)\n], InPlaceReplaceController);\nclass InPlaceReplaceUp extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.up',\n            label: nls.localize('InPlaceReplaceAction.previous.label', \"Replace with Previous Value\"),\n            alias: 'Replace with Previous Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 82 /* KeyCode.Comma */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, true);\n    }\n}\nclass InPlaceReplaceDown extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.down',\n            label: nls.localize('InPlaceReplaceAction.next.label', \"Replace with Next Value\"),\n            alias: 'Replace with Next Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* KeyMod.CtrlCmd */ | 1024 /* KeyMod.Shift */ | 84 /* KeyCode.Period */,\n                weight: 100 /* KeybindingWeight.EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, false);\n    }\n}\nregisterEditorContribution(InPlaceReplaceController.ID, InPlaceReplaceController);\nregisterEditorAction(InPlaceReplaceUp);\nregisterEditorAction(InPlaceReplaceDown);\nregisterThemingParticipant((theme, collector) => {\n    const border = theme.getColor(editorBracketMatchBorder);\n    if (border) {\n        collector.addRule(`.monaco-editor.vs .valueSetReplacement { outline: solid 2px ${border}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function getSpaceCnt(str, tabSize) {\n    let spacesCnt = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) === '\\t') {\n            spacesCnt += tabSize;\n        }\n        else {\n            spacesCnt++;\n        }\n    }\n    return spacesCnt;\n}\nexport function generateIndent(spacesCnt, tabSize, insertSpaces) {\n    spacesCnt = spacesCnt < 0 ? 0 : spacesCnt;\n    let result = '';\n    if (!insertSpaces) {\n        const tabsCnt = Math.floor(spacesCnt / tabSize);\n        spacesCnt = spacesCnt % tabSize;\n        for (let i = 0; i < tabsCnt; i++) {\n            result += '\\t';\n        }\n    }\n    for (let i = 0; i < spacesCnt; i++) {\n        result += ' ';\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ShiftCommand } from '../../../common/commands/shiftCommand.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport * as indentUtils from './indentUtils.js';\nimport * as nls from '../../../../nls.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { normalizeIndentation } from '../../../common/core/indentation.js';\nimport { getGoodIndentForLine, getIndentMetadata } from '../../../common/languages/autoIndent.js';\nexport function getReindentEditOperations(model, languageConfigurationService, startLineNumber, endLineNumber, inheritedIndent) {\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n        // Model is empty\n        return [];\n    }\n    const indentationRules = languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).indentationRules;\n    if (!indentationRules) {\n        return [];\n    }\n    endLineNumber = Math.min(endLineNumber, model.getLineCount());\n    // Skip `unIndentedLinePattern` lines\n    while (startLineNumber <= endLineNumber) {\n        if (!indentationRules.unIndentedLinePattern) {\n            break;\n        }\n        const text = model.getLineContent(startLineNumber);\n        if (!indentationRules.unIndentedLinePattern.test(text)) {\n            break;\n        }\n        startLineNumber++;\n    }\n    if (startLineNumber > endLineNumber - 1) {\n        return [];\n    }\n    const { tabSize, indentSize, insertSpaces } = model.getOptions();\n    const shiftIndent = (indentation, count) => {\n        count = count || 1;\n        return ShiftCommand.shiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\n    };\n    const unshiftIndent = (indentation, count) => {\n        count = count || 1;\n        return ShiftCommand.unshiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\n    };\n    const indentEdits = [];\n    // indentation being passed to lines below\n    let globalIndent;\n    // Calculate indentation for the first line\n    // If there is no passed-in indentation, we use the indentation of the first line as base.\n    const currentLineText = model.getLineContent(startLineNumber);\n    let adjustedLineContent = currentLineText;\n    if (inheritedIndent !== undefined && inheritedIndent !== null) {\n        globalIndent = inheritedIndent;\n        const oldIndentation = strings.getLeadingWhitespace(currentLineText);\n        adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\n            globalIndent = unshiftIndent(globalIndent);\n            adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\n        }\n        if (currentLineText !== adjustedLineContent) {\n            indentEdits.push(EditOperation.replaceMove(new Selection(startLineNumber, 1, startLineNumber, oldIndentation.length + 1), normalizeIndentation(globalIndent, indentSize, insertSpaces)));\n        }\n    }\n    else {\n        globalIndent = strings.getLeadingWhitespace(currentLineText);\n    }\n    // idealIndentForNextLine doesn't equal globalIndent when there is a line matching `indentNextLinePattern`.\n    let idealIndentForNextLine = globalIndent;\n    if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n        globalIndent = shiftIndent(globalIndent);\n    }\n    else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n    }\n    startLineNumber++;\n    // Calculate indentation adjustment for all following lines\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        const text = model.getLineContent(lineNumber);\n        const oldIndentation = strings.getLeadingWhitespace(text);\n        const adjustedLineContent = idealIndentForNextLine + text.substring(oldIndentation.length);\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\n            idealIndentForNextLine = unshiftIndent(idealIndentForNextLine);\n            globalIndent = unshiftIndent(globalIndent);\n        }\n        if (oldIndentation !== idealIndentForNextLine) {\n            indentEdits.push(EditOperation.replaceMove(new Selection(lineNumber, 1, lineNumber, oldIndentation.length + 1), normalizeIndentation(idealIndentForNextLine, indentSize, insertSpaces)));\n        }\n        // calculate idealIndentForNextLine\n        if (indentationRules.unIndentedLinePattern && indentationRules.unIndentedLinePattern.test(text)) {\n            // In reindent phase, if the line matches `unIndentedLinePattern` we inherit indentation from above lines\n            // but don't change globalIndent and idealIndentForNextLine.\n            continue;\n        }\n        else if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\n            globalIndent = shiftIndent(globalIndent);\n            idealIndentForNextLine = globalIndent;\n        }\n        else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\n            idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n        }\n        else {\n            idealIndentForNextLine = globalIndent;\n        }\n    }\n    return indentEdits;\n}\nexport class IndentationToSpacesAction extends EditorAction {\n    constructor() {\n        super({\n            id: IndentationToSpacesAction.ID,\n            label: nls.localize('indentationToSpaces', \"Convert Indentation to Spaces\"),\n            alias: 'Convert Indentation to Spaces',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const modelOpts = model.getOptions();\n        const selection = editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        const command = new IndentationToSpacesCommand(selection, modelOpts.tabSize);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n        model.updateOptions({\n            insertSpaces: true\n        });\n    }\n}\nIndentationToSpacesAction.ID = 'editor.action.indentationToSpaces';\nexport class IndentationToTabsAction extends EditorAction {\n    constructor() {\n        super({\n            id: IndentationToTabsAction.ID,\n            label: nls.localize('indentationToTabs', \"Convert Indentation to Tabs\"),\n            alias: 'Convert Indentation to Tabs',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const modelOpts = model.getOptions();\n        const selection = editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        const command = new IndentationToTabsCommand(selection, modelOpts.tabSize);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n        model.updateOptions({\n            insertSpaces: false\n        });\n    }\n}\nIndentationToTabsAction.ID = 'editor.action.indentationToTabs';\nexport class ChangeIndentationSizeAction extends EditorAction {\n    constructor(insertSpaces, opts) {\n        super(opts);\n        this.insertSpaces = insertSpaces;\n    }\n    run(accessor, editor) {\n        const quickInputService = accessor.get(IQuickInputService);\n        const modelService = accessor.get(IModelService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n        const picks = [1, 2, 3, 4, 5, 6, 7, 8].map(n => ({\n            id: n.toString(),\n            label: n.toString(),\n            // add description for tabSize value set in the configuration\n            description: n === creationOpts.tabSize ? nls.localize('configuredTabSize', \"Configured Tab Size\") : undefined\n        }));\n        // auto focus the tabSize set for the current editor\n        const autoFocusIndex = Math.min(model.getOptions().tabSize - 1, 7);\n        setTimeout(() => {\n            quickInputService.pick(picks, { placeHolder: nls.localize({ key: 'selectTabWidth', comment: ['Tab corresponds to the tab key'] }, \"Select Tab Size for Current File\"), activeItem: picks[autoFocusIndex] }).then(pick => {\n                if (pick) {\n                    if (model && !model.isDisposed()) {\n                        model.updateOptions({\n                            tabSize: parseInt(pick.label, 10),\n                            insertSpaces: this.insertSpaces\n                        });\n                    }\n                }\n            });\n        }, 50 /* quick input is sensitive to being opened so soon after another */);\n    }\n}\nexport class IndentUsingTabs extends ChangeIndentationSizeAction {\n    constructor() {\n        super(false, {\n            id: IndentUsingTabs.ID,\n            label: nls.localize('indentUsingTabs', \"Indent Using Tabs\"),\n            alias: 'Indent Using Tabs',\n            precondition: undefined\n        });\n    }\n}\nIndentUsingTabs.ID = 'editor.action.indentUsingTabs';\nexport class IndentUsingSpaces extends ChangeIndentationSizeAction {\n    constructor() {\n        super(true, {\n            id: IndentUsingSpaces.ID,\n            label: nls.localize('indentUsingSpaces', \"Indent Using Spaces\"),\n            alias: 'Indent Using Spaces',\n            precondition: undefined\n        });\n    }\n}\nIndentUsingSpaces.ID = 'editor.action.indentUsingSpaces';\nexport class DetectIndentation extends EditorAction {\n    constructor() {\n        super({\n            id: DetectIndentation.ID,\n            label: nls.localize('detectIndentation', \"Detect Indentation from Content\"),\n            alias: 'Detect Indentation from Content',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const modelService = accessor.get(IModelService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n        model.detectIndentation(creationOpts.insertSpaces, creationOpts.tabSize);\n    }\n}\nDetectIndentation.ID = 'editor.action.detectIndentation';\nexport class ReindentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.reindentlines',\n            label: nls.localize('editor.reindentlines', \"Reindent Lines\"),\n            alias: 'Reindent Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const edits = getReindentEditOperations(model, languageConfigurationService, 1, model.getLineCount());\n        if (edits.length > 0) {\n            editor.pushUndoStop();\n            editor.executeEdits(this.id, edits);\n            editor.pushUndoStop();\n        }\n    }\n}\nexport class ReindentSelectedLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.reindentselectedlines',\n            label: nls.localize('editor.reindentselectedlines', \"Reindent Selected Lines\"),\n            alias: 'Reindent Selected Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        const model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const edits = [];\n        for (const selection of selections) {\n            let startLineNumber = selection.startLineNumber;\n            let endLineNumber = selection.endLineNumber;\n            if (startLineNumber !== endLineNumber && selection.endColumn === 1) {\n                endLineNumber--;\n            }\n            if (startLineNumber === 1) {\n                if (startLineNumber === endLineNumber) {\n                    continue;\n                }\n            }\n            else {\n                startLineNumber--;\n            }\n            const editOperations = getReindentEditOperations(model, languageConfigurationService, startLineNumber, endLineNumber);\n            edits.push(...editOperations);\n        }\n        if (edits.length > 0) {\n            editor.pushUndoStop();\n            editor.executeEdits(this.id, edits);\n            editor.pushUndoStop();\n        }\n    }\n}\nexport class AutoIndentOnPasteCommand {\n    constructor(edits, initialSelection) {\n        this._initialSelection = initialSelection;\n        this._edits = [];\n        this._selectionId = null;\n        for (const edit of edits) {\n            if (edit.range && typeof edit.text === 'string') {\n                this._edits.push(edit);\n            }\n        }\n    }\n    getEditOperations(model, builder) {\n        for (const edit of this._edits) {\n            builder.addEditOperation(Range.lift(edit.range), edit.text);\n        }\n        let selectionIsSet = false;\n        if (Array.isArray(this._edits) && this._edits.length === 1 && this._initialSelection.isEmpty()) {\n            if (this._edits[0].range.startColumn === this._initialSelection.endColumn &&\n                this._edits[0].range.startLineNumber === this._initialSelection.endLineNumber) {\n                selectionIsSet = true;\n                this._selectionId = builder.trackSelection(this._initialSelection, true);\n            }\n            else if (this._edits[0].range.endColumn === this._initialSelection.startColumn &&\n                this._edits[0].range.endLineNumber === this._initialSelection.startLineNumber) {\n                selectionIsSet = true;\n                this._selectionId = builder.trackSelection(this._initialSelection, false);\n            }\n        }\n        if (!selectionIsSet) {\n            this._selectionId = builder.trackSelection(this._initialSelection);\n        }\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._selectionId);\n    }\n}\nlet AutoIndentOnPaste = class AutoIndentOnPaste {\n    constructor(editor, _languageConfigurationService) {\n        this.editor = editor;\n        this._languageConfigurationService = _languageConfigurationService;\n        this.callOnDispose = new DisposableStore();\n        this.callOnModel = new DisposableStore();\n        this.callOnDispose.add(editor.onDidChangeConfiguration(() => this.update()));\n        this.callOnDispose.add(editor.onDidChangeModel(() => this.update()));\n        this.callOnDispose.add(editor.onDidChangeModelLanguage(() => this.update()));\n    }\n    update() {\n        // clean up\n        this.callOnModel.clear();\n        // we are disabled\n        if (this.editor.getOption(9 /* EditorOption.autoIndent */) < 4 /* EditorAutoIndentStrategy.Full */ || this.editor.getOption(50 /* EditorOption.formatOnPaste */)) {\n            return;\n        }\n        // no model\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        this.callOnModel.add(this.editor.onDidPaste(({ range }) => {\n            this.trigger(range);\n        }));\n    }\n    trigger(range) {\n        const selections = this.editor.getSelections();\n        if (selections === null || selections.length > 1) {\n            return;\n        }\n        const model = this.editor.getModel();\n        if (!model) {\n            return;\n        }\n        if (!model.tokenization.isCheapToTokenize(range.getStartPosition().lineNumber)) {\n            return;\n        }\n        const autoIndent = this.editor.getOption(9 /* EditorOption.autoIndent */);\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\n        const textEdits = [];\n        const indentConverter = {\n            shiftIndent: (indentation) => {\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            },\n            unshiftIndent: (indentation) => {\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            }\n        };\n        let startLineNumber = range.startLineNumber;\n        while (startLineNumber <= range.endLineNumber) {\n            if (this.shouldIgnoreLine(model, startLineNumber)) {\n                startLineNumber++;\n                continue;\n            }\n            break;\n        }\n        if (startLineNumber > range.endLineNumber) {\n            return;\n        }\n        let firstLineText = model.getLineContent(startLineNumber);\n        if (!/\\S/.test(firstLineText.substring(0, range.startColumn - 1))) {\n            const indentOfFirstLine = getGoodIndentForLine(autoIndent, model, model.getLanguageId(), startLineNumber, indentConverter, this._languageConfigurationService);\n            if (indentOfFirstLine !== null) {\n                const oldIndentation = strings.getLeadingWhitespace(firstLineText);\n                const newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\n                const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                if (newSpaceCnt !== oldSpaceCnt) {\n                    const newIndent = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                    textEdits.push({\n                        range: new Range(startLineNumber, 1, startLineNumber, oldIndentation.length + 1),\n                        text: newIndent\n                    });\n                    firstLineText = newIndent + firstLineText.substr(oldIndentation.length);\n                }\n                else {\n                    const indentMetadata = getIndentMetadata(model, startLineNumber, this._languageConfigurationService);\n                    if (indentMetadata === 0 || indentMetadata === 8 /* IndentConsts.UNINDENT_MASK */) {\n                        // we paste content into a line where only contains whitespaces\n                        // after pasting, the indentation of the first line is already correct\n                        // the first line doesn't match any indentation rule\n                        // then no-op.\n                        return;\n                    }\n                }\n            }\n        }\n        const firstLineNumber = startLineNumber;\n        // ignore empty or ignored lines\n        while (startLineNumber < range.endLineNumber) {\n            if (!/\\S/.test(model.getLineContent(startLineNumber + 1))) {\n                startLineNumber++;\n                continue;\n            }\n            break;\n        }\n        if (startLineNumber !== range.endLineNumber) {\n            const virtualModel = {\n                tokenization: {\n                    getLineTokens: (lineNumber) => {\n                        return model.tokenization.getLineTokens(lineNumber);\n                    },\n                    getLanguageId: () => {\n                        return model.getLanguageId();\n                    },\n                    getLanguageIdAtPosition: (lineNumber, column) => {\n                        return model.getLanguageIdAtPosition(lineNumber, column);\n                    },\n                },\n                getLineContent: (lineNumber) => {\n                    if (lineNumber === firstLineNumber) {\n                        return firstLineText;\n                    }\n                    else {\n                        return model.getLineContent(lineNumber);\n                    }\n                }\n            };\n            const indentOfSecondLine = getGoodIndentForLine(autoIndent, virtualModel, model.getLanguageId(), startLineNumber + 1, indentConverter, this._languageConfigurationService);\n            if (indentOfSecondLine !== null) {\n                const newSpaceCntOfSecondLine = indentUtils.getSpaceCnt(indentOfSecondLine, tabSize);\n                const oldSpaceCntOfSecondLine = indentUtils.getSpaceCnt(strings.getLeadingWhitespace(model.getLineContent(startLineNumber + 1)), tabSize);\n                if (newSpaceCntOfSecondLine !== oldSpaceCntOfSecondLine) {\n                    const spaceCntOffset = newSpaceCntOfSecondLine - oldSpaceCntOfSecondLine;\n                    for (let i = startLineNumber + 1; i <= range.endLineNumber; i++) {\n                        const lineContent = model.getLineContent(i);\n                        const originalIndent = strings.getLeadingWhitespace(lineContent);\n                        const originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\n                        const newSpacesCnt = originalSpacesCnt + spaceCntOffset;\n                        const newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\n                        if (newIndent !== originalIndent) {\n                            textEdits.push({\n                                range: new Range(i, 1, i, originalIndent.length + 1),\n                                text: newIndent\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        if (textEdits.length > 0) {\n            this.editor.pushUndoStop();\n            const cmd = new AutoIndentOnPasteCommand(textEdits, this.editor.getSelection());\n            this.editor.executeCommand('autoIndentOnPaste', cmd);\n            this.editor.pushUndoStop();\n        }\n    }\n    shouldIgnoreLine(model, lineNumber) {\n        model.tokenization.forceTokenization(lineNumber);\n        const nonWhitespaceColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        if (nonWhitespaceColumn === 0) {\n            return true;\n        }\n        const tokens = model.tokenization.getLineTokens(lineNumber);\n        if (tokens.getCount() > 0) {\n            const firstNonWhitespaceTokenIndex = tokens.findTokenIndexAtOffset(nonWhitespaceColumn);\n            if (firstNonWhitespaceTokenIndex >= 0 && tokens.getStandardTokenType(firstNonWhitespaceTokenIndex) === 1 /* StandardTokenType.Comment */) {\n                return true;\n            }\n        }\n        return false;\n    }\n    dispose() {\n        this.callOnDispose.dispose();\n        this.callOnModel.dispose();\n    }\n};\nAutoIndentOnPaste.ID = 'editor.contrib.autoIndentOnPaste';\nAutoIndentOnPaste = __decorate([\n    __param(1, ILanguageConfigurationService)\n], AutoIndentOnPaste);\nexport { AutoIndentOnPaste };\nfunction getIndentationEditOperations(model, builder, tabSize, tabsToSpaces) {\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n        // Model is empty\n        return;\n    }\n    let spaces = '';\n    for (let i = 0; i < tabSize; i++) {\n        spaces += ' ';\n    }\n    const spacesRegExp = new RegExp(spaces, 'gi');\n    for (let lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++) {\n        let lastIndentationColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        if (lastIndentationColumn === 0) {\n            lastIndentationColumn = model.getLineMaxColumn(lineNumber);\n        }\n        if (lastIndentationColumn === 1) {\n            continue;\n        }\n        const originalIndentationRange = new Range(lineNumber, 1, lineNumber, lastIndentationColumn);\n        const originalIndentation = model.getValueInRange(originalIndentationRange);\n        const newIndentation = (tabsToSpaces\n            ? originalIndentation.replace(/\\t/ig, spaces)\n            : originalIndentation.replace(spacesRegExp, '\\t'));\n        builder.addEditOperation(originalIndentationRange, newIndentation);\n    }\n}\nexport class IndentationToSpacesCommand {\n    constructor(selection, tabSize) {\n        this.selection = selection;\n        this.tabSize = tabSize;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        this.selectionId = builder.trackSelection(this.selection);\n        getIndentationEditOperations(model, builder, this.tabSize, true);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n}\nexport class IndentationToTabsCommand {\n    constructor(selection, tabSize) {\n        this.selection = selection;\n        this.tabSize = tabSize;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        this.selectionId = builder.trackSelection(this.selection);\n        getIndentationEditOperations(model, builder, this.tabSize, false);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n}\nregisterEditorContribution(AutoIndentOnPaste.ID, AutoIndentOnPaste);\nregisterEditorAction(IndentationToSpacesAction);\nregisterEditorAction(IndentationToTabsAction);\nregisterEditorAction(IndentUsingTabs);\nregisterEditorAction(IndentUsingSpaces);\nregisterEditorAction(DetectIndentation);\nregisterEditorAction(ReindentLinesAction);\nregisterEditorAction(ReindentSelectedLinesAction);\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","HoverProviderResult","provider","hover","ordinal","this","getHover","registry","model","position","token","promises","ordered","map","index","provideHover","isValid","onUnexpectedExternalError","undefined","executeProvider","AsyncIterableObject","coalesce","hasRange","range","hasHtmlContent","contents","length","registerModelAndPositionCommand","accessor","item","toPromise","getHoverPromise","get","ILanguageFeaturesService","hoverProvider","CancellationToken","__asyncValues","o","Symbol","asyncIterator","TypeError","i","m","call","__values","iterator","verb","n","v","d","settle","HoverResult","isComplete","hasLoadingMessage","HoverOperation","_editor","_computer","_onResult","_register","Emitter","onResult","event","_firstWaitScheduler","RunOnceScheduler","_triggerAsyncComputation","_secondWaitScheduler","_triggerSyncComputation","_loadingMessageScheduler","_triggerLoadingMessage","_state","_asyncIterable","_asyncIterableDone","_result","cancel","getOption","delay","_hoverTime","_firstWaitTime","state","fireResult","_fireResult","_setState","schedule","_secondWaitTime","computeAsync","createCancelableAsyncIterable","_b","_c","push","e_1","error","_a","return","onUnexpectedError","computeSync","concat","fire","slice","mode","_loadingMessageTime","Disposable","__decorate","decorators","target","key","desc","c","arguments","r","Object","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","$","dom","ContentHoverController","_instantiationService","_keybindingService","_widget","createInstance","ContentHoverWidget","_isChangingDecorations","_messages","_messagesAreComplete","_participants","HoverParticipantRegistry","participant","sort","p1","p2","hoverOrdinal","ContentHoverComputer","_hoverOperation","_withResult","onDidChangeModelDecorations","_onModelDecorationsChanged","addStandardDisposableListener","getDomNode","equals","hide","TokenizationRegistry","anchor","clear","_renderMessages","isColorPickerVisible","start","mouseEvent","anchorCandidates","suggestHoverAnchor","type","HoverRangeAnchor","epsilon","typicalHalfwidthCharacterWidth","detail","isAfterLines","horizontalDistanceToText","a","b","priority","_startShowingAt","focus","canAdoptVisibleHover","filteredMessages","filter","isValidForHoverAnchor","shouldFocus","node","contains","createLoadingMessage","loadingMessage","_addLoadingMessage","messages","computeHoverRanges","showAtPosition","showAtRange","highlightRange","disposables","DisposableStore","statusBar","add","EditorHoverStatusBar","fragment","document","createDocumentFragment","colorPicker","context","setColorPicker","widget","onContentsChanged","hoverParts","msg","owner","renderHoverParts","hasContent","appendChild","hoverElement","hasChildNodes","highlightDecoration","createDecorationsCollection","set","options","_DECORATION_OPTIONS","toDisposable","showAt","ContentHoverVisibleData","above","dispose","anchorRange","anchorLineNumber","startLineNumber","renderStartColumn","startColumn","renderEndColumn","endColumn","forceShowAtRange","Range","endLineNumber","Math","min","max","getStartPosition","Position","ModelDecorationOptions","description","className","IInstantiationService","IKeybindingService","preferAbove","stoleFocus","_contextKeyService","allowEditorOverflow","_hoverVisibleKey","EditorContextKeys","_hover","HoverWidget","_visibleData","onDidLayoutChange","_layout","onDidChangeConfiguration","hasChanged","_updateFont","_setVisibleData","addContentWidget","Boolean","removeContentWidget","ID","containerDomNode","getContextKeyValue","SuggestContext","preference","visibleData","classList","toggle","height","getLayoutInfo","fontSize","lineHeight","contentsDomNode","style","maxHeight","maxWidth","width","Array","prototype","getElementsByClassName","forEach","applyFontInfo","textContent","paddingBottom","render","layout","layoutContentWidget","scrollDimensions","scrollbar","getScrollDimensions","scrollWidth","extraBottomPadding","horizontalScrollbarSize","IContextKeyService","_hasContent","actionsElement","append","actionOptions","keybinding","lookupKeybinding","commandId","keybindingLabel","getLabel","HoverAction","element","_anchor","_shouldFocus","hasModel","lineDecorations","_getLineDecorations","editor","getModel","lineNumber","getLineCount","maxColumn","getLineMaxColumn","getLineDecorations","isWholeLine","showIfCollapsed","MarginHoverWidget","languageService","openerService","NullOpenerService","_renderDisposeables","_isVisible","_markdownRenderer","MarkdownRenderer","MarginHoverComputer","addOverlayWidget","removeOverlayWidget","markdownHoverElement","hoverContentsElement","renderedContents","_updateContents","_showAt","editorLayout","topForLineNumber","getTopForLineNumber","editorScrollTop","getScrollTop","top","clientHeight","left","glyphMarginLeft","glyphMarginWidth","round","_lineNumber","toHoverMessage","glyphMarginClassName","hoverMessage","glyphMarginHoverMessage","isEmptyMarkdownString","asArray","MarkerHover","marker","markerCodeActionTrigger","include","CodeActionKind","triggerAction","CodeActionTriggerSource","MarkerHoverParticipant","_markerDecorationsService","_openerService","_languageFeaturesService","recentMarkerCodeActionsInfo","getMarker","uri","renderMarkerHover","markerHoverForStatusbar","MarkerSeverity","severity","renderMarkerStatusbar","markerHover","markerElement","source","message","code","relatedInformation","messageElement","whiteSpace","innerText","sourceAndCodeElement","codeLink","setAttribute","toString","addDisposableListener","open","allowCommands","preventDefault","stopPropagation","detailsElement","opacity","paddingLeft","isNonEmptyArray","resource","relatedInfoContainer","marginTop","basename","cursor","fromUserGesture","editorOptions","selection","catch","addAction","label","nls","NextMarkerAction","run","MarkerController","showAtMarker","quickfixPlaceholderElement","IMarkerData","hasCodeActions","updatePlaceholderDisposable","disposableTimeout","String","fromCharCode","codeActionsPromise","getCodeActions","actions","validActions","display","showing","QuickFixAction","controller","QuickFixController","elementPosition","getDomNodePagePosition","showCodeActions","x","y","createCancelablePromise","cancellationToken","codeActionProvider","Progress","IMarkerDecorationsService","IOpenerService","registerThemingParticipant","theme","collector","linkFg","getColor","textLinkForeground","addRule","activeLinkFg","textLinkActiveForeground","ModesHoverController","_languageService","_toUnhook","_isMouseDown","_hoverClicked","_contentWidget","_glyphWidget","_hookEvents","_didChangeConfigurationHandler","_unhookEvents","hoverOpts","_isHoverEnabled","enabled","_isHoverSticky","sticky","onMouseDown","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onMouseMove","_onEditorMouseMove","onKeyDown","_onKeyDown","onMouseLeave","_onEditorMouseLeave","onDidChangeModel","_hideWidgets","onDidScrollChange","_onEditorScrollChanged","scrollTopChanged","scrollLeftChanged","targetEm","browserEvent","relatedTarget","containsNode","_d","_e","view","getSelection","isCollapsed","_getOrCreateContentWidget","maybeShowAt","startShowingAt","keyCode","startShowingAtRange","getContribution","ILanguageService","ShowHoverAction","id","comment","alias","precondition","kbOpts","kbExpr","primary","KeyChord","weight","getPosition","column","showContentHover","EditorAction","ShowDefinitionPreviewHoverAction","goto","GotoDefinitionAtPositionEditorContribution","startFindDefinitionFromCursor","registerEditorContribution","registerEditorAction","MarkdownHoverParticipant","editorHoverHighlightColor","editorHoverHighlight","hoverBackground","editorHoverBackground","hoverBorder","editorHoverBorder","transparent","link","linkHover","hoverForeground","editorHoverForeground","actionsBackground","editorHoverStatusBarBackground","codeBackground","textCodeBlockBackground","other","equalsRange","lastAnchor","HoverForeignElementAnchor","ctor","MarkdownHover","_configurationService","MarkdownString","appendText","lineLength","getLineLength","languageId","getLanguageIdAtPosition","maxTokenizationLineLength","getValue","overrideIdentifier","has","rng","renderMarkdownHovers","hoverPart","renderer","onDidRenderAsync","IConfigurationService","InPlaceReplaceCommand","editRange","originalSelection","text","_editRange","_originalSelection","_text","builder","addTrackedEditOperation","helper","srcRange","getInverseEditOperations","isEmpty","Selection","positionColumn","InPlaceReplaceController","editorWorkerService","decorations","up","currentRequest","editorSelection","EditorState","modelURI","canNavigateValueSet","navigateValueSet","validate","diff","command","pushUndoStop","executeCommand","DECORATION","decorationRemover","timeout","IEditorWorkerService","InPlaceReplaceUp","InPlaceReplaceDown","border","editorBracketMatchBorder","getSpaceCnt","str","tabSize","spacesCnt","charAt","generateIndent","insertSpaces","tabsCnt","floor","getReindentEditOperations","languageConfigurationService","inheritedIndent","indentationRules","getLanguageConfiguration","getLanguageId","unIndentedLinePattern","getLineContent","test","globalIndent","getOptions","indentSize","shiftIndent","indentation","count","ShiftCommand","unshiftIndent","indentEdits","currentLineText","adjustedLineContent","oldIndentation","strings","substring","decreaseIndentPattern","EditOperation","normalizeIndentation","idealIndentForNextLine","increaseIndentPattern","indentNextLinePattern","IndentationToSpacesAction","modelOpts","IndentationToSpacesCommand","executeCommands","updateOptions","IndentationToTabsAction","IndentationToTabsCommand","ChangeIndentationSizeAction","opts","quickInputService","IQuickInputService","modelService","IModelService","creationOpts","getCreationOptions","isForSimpleWidget","picks","autoFocusIndex","setTimeout","pick","placeHolder","activeItem","isDisposed","parseInt","IndentUsingTabs","IndentUsingSpaces","DetectIndentation","detectIndentation","ReindentLinesAction","ILanguageConfigurationService","edits","executeEdits","ReindentSelectedLinesAction","selections","getSelections","editOperations","AutoIndentOnPasteCommand","initialSelection","_initialSelection","_edits","_selectionId","edit","addEditOperation","selectionIsSet","isArray","trackSelection","getTrackedSelection","AutoIndentOnPaste","_languageConfigurationService","callOnDispose","callOnModel","update","onDidChangeModelLanguage","onDidPaste","trigger","tokenization","isCheapToTokenize","autoIndent","textEdits","indentConverter","shouldIgnoreLine","firstLineText","indentOfFirstLine","getGoodIndentForLine","newSpaceCnt","indentUtils","newIndent","substr","indentMetadata","getIndentMetadata","firstLineNumber","virtualModel","getLineTokens","indentOfSecondLine","newSpaceCntOfSecondLine","oldSpaceCntOfSecondLine","spaceCntOffset","lineContent","originalIndent","newSpacesCnt","cmd","forceTokenization","nonWhitespaceColumn","getLineFirstNonWhitespaceColumn","tokens","getCount","firstNonWhitespaceTokenIndex","findTokenIndexAtOffset","getStandardTokenType","getIndentationEditOperations","tabsToSpaces","spaces","spacesRegExp","RegExp","lineCount","lastIndentationColumn","originalIndentationRange","originalIndentation","getValueInRange","newIndentation","replace","selectionId"],"sourceRoot":""}