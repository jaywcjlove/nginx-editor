{"version":3,"file":"static/js/monaco-editor-vendor.e47de38b.977b39c7.js","mappings":"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OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OAAQ,GAAe,IAAK,GAAI,OAAQA,EAAOA,GACtE,CAAC,GAAI,EAAG,GAAe,OA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","sources":["../node_modules/monaco-editor/esm/vs/base/common/glob.js","../node_modules/monaco-editor/esm/vs/base/common/hash.js","../node_modules/monaco-editor/esm/vs/base/common/navigator.js","../node_modules/monaco-editor/esm/vs/base/common/history.js","../node_modules/monaco-editor/esm/vs/base/common/htmlContent.js","../node_modules/monaco-editor/esm/vs/base/common/iconLabels.js","../node_modules/monaco-editor/esm/vs/base/common/idGenerator.js","../node_modules/monaco-editor/esm/vs/base/common/iterator.js","../node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","../node_modules/monaco-editor/esm/vs/base/common/keybindingLabels.js","../node_modules/monaco-editor/esm/vs/base/common/keybindings.js","../node_modules/monaco-editor/esm/vs/base/common/labels.js","../node_modules/monaco-editor/esm/vs/base/common/lazy.js","../node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","../node_modules/monaco-editor/esm/vs/base/common/linkedList.js","../node_modules/monaco-editor/esm/vs/base/common/map.js","../node_modules/monaco-editor/esm/vs/base/common/marked/marked.js","../node_modules/monaco-editor/esm/vs/base/common/marshalling.js","../node_modules/monaco-editor/esm/vs/base/common/mime.js","../node_modules/monaco-editor/esm/vs/base/common/network.js","../node_modules/monaco-editor/esm/vs/base/common/numbers.js","../node_modules/monaco-editor/esm/vs/base/common/objects.js","../node_modules/monaco-editor/esm/vs/base/common/process.js","../node_modules/monaco-editor/esm/vs/base/common/path.js","../node_modules/monaco-editor/esm/vs/base/common/platform.js","../node_modules/monaco-editor/esm/vs/base/common/range.js","../node_modules/monaco-editor/esm/vs/base/common/resources.js","../node_modules/monaco-editor/esm/vs/base/common/scrollable.js","../node_modules/monaco-editor/esm/vs/base/common/search.js","../node_modules/monaco-editor/esm/vs/base/common/severity.js","../node_modules/monaco-editor/esm/vs/base/common/stopwatch.js","../node_modules/monaco-editor/esm/vs/base/common/strings.js","../node_modules/monaco-editor/esm/vs/base/common/types.js","../node_modules/monaco-editor/esm/vs/base/common/uint.js","../node_modules/monaco-editor/esm/vs/base/common/uri.js","../node_modules/monaco-editor/esm/vs/base/common/uuid.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isThenable } from './async.js';\nimport { isEqualOrParent } from './extpath.js';\nimport { LRUCache } from './map.js';\nimport { basename, extname, posix, sep } from './path.js';\nimport { isLinux } from './platform.js';\nimport { escapeRegExpCharacters } from './strings.js';\nexport const GLOBSTAR = '**';\nexport const GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]'; // any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]'; // any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\nfunction starsToRegExp(starCount) {\n    switch (starCount) {\n        case 0:\n            return '';\n        case 1:\n            return `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n        default:\n            // Matches:  (Path Sep OR Path Val followed by Path Sep OR Path Sep followed by Path Val) 0-many times\n            // Group is non capturing because we don't need to capture at all (?:...)\n            // Overall we use non-greedy matching because it could be that we match too much\n            return `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}|${PATH_REGEX}${NO_PATH_REGEX}+)*?`;\n    }\n}\nexport function splitGlobAware(pattern, splitChar) {\n    if (!pattern) {\n        return [];\n    }\n    const segments = [];\n    let inBraces = false;\n    let inBrackets = false;\n    let curVal = '';\n    for (const char of pattern) {\n        switch (char) {\n            case splitChar:\n                if (!inBraces && !inBrackets) {\n                    segments.push(curVal);\n                    curVal = '';\n                    continue;\n                }\n                break;\n            case '{':\n                inBraces = true;\n                break;\n            case '}':\n                inBraces = false;\n                break;\n            case '[':\n                inBrackets = true;\n                break;\n            case ']':\n                inBrackets = false;\n                break;\n        }\n        curVal += char;\n    }\n    // Tail\n    if (curVal) {\n        segments.push(curVal);\n    }\n    return segments;\n}\nfunction parseRegExp(pattern) {\n    if (!pattern) {\n        return '';\n    }\n    let regEx = '';\n    // Split up into segments for each slash found\n    const segments = splitGlobAware(pattern, GLOB_SPLIT);\n    // Special case where we only have globstars\n    if (segments.every(s => s === GLOBSTAR)) {\n        regEx = '.*';\n    }\n    // Build regex over segments\n    else {\n        let previousSegmentWasGlobStar = false;\n        segments.forEach((segment, index) => {\n            // Globstar is special\n            if (segment === GLOBSTAR) {\n                // if we have more than one globstar after another, just ignore it\n                if (!previousSegmentWasGlobStar) {\n                    regEx += starsToRegExp(2);\n                    previousSegmentWasGlobStar = true;\n                }\n                return;\n            }\n            // States\n            let inBraces = false;\n            let braceVal = '';\n            let inBrackets = false;\n            let bracketVal = '';\n            for (const char of segment) {\n                // Support brace expansion\n                if (char !== '}' && inBraces) {\n                    braceVal += char;\n                    continue;\n                }\n                // Support brackets\n                if (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n                    let res;\n                    // range operator\n                    if (char === '-') {\n                        res = char;\n                    }\n                    // negation operator (only valid on first index in bracket)\n                    else if ((char === '^' || char === '!') && !bracketVal) {\n                        res = '^';\n                    }\n                    // glob split matching is not allowed within character ranges\n                    // see http://man7.org/linux/man-pages/man7/glob.7.html\n                    else if (char === GLOB_SPLIT) {\n                        res = '';\n                    }\n                    // anything else gets escaped\n                    else {\n                        res = escapeRegExpCharacters(char);\n                    }\n                    bracketVal += res;\n                    continue;\n                }\n                switch (char) {\n                    case '{':\n                        inBraces = true;\n                        continue;\n                    case '[':\n                        inBrackets = true;\n                        continue;\n                    case '}': {\n                        const choices = splitGlobAware(braceVal, ',');\n                        // Converts {foo,bar} => [foo|bar]\n                        const braceRegExp = `(?:${choices.map(c => parseRegExp(c)).join('|')})`;\n                        regEx += braceRegExp;\n                        inBraces = false;\n                        braceVal = '';\n                        break;\n                    }\n                    case ']':\n                        regEx += ('[' + bracketVal + ']');\n                        inBrackets = false;\n                        bracketVal = '';\n                        break;\n                    case '?':\n                        regEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n                        continue;\n                    case '*':\n                        regEx += starsToRegExp(1);\n                        continue;\n                    default:\n                        regEx += escapeRegExpCharacters(char);\n                }\n            }\n            // Tail: Add the slash we had split on if there is more to come and the remaining pattern is not a globstar\n            // For example if pattern: some/**/*.js we want the \"/\" after some to be included in the RegEx to prevent\n            // a folder called \"something\" to match as well.\n            // However, if pattern: some/**, we tolerate that we also match on \"something\" because our globstar behaviour\n            // is to match 0-N segments.\n            if (index < segments.length - 1 && (segments[index + 1] !== GLOBSTAR || index + 2 < segments.length)) {\n                regEx += PATH_REGEX;\n            }\n            // reset state\n            previousSegmentWasGlobStar = false;\n        });\n    }\n    return regEx;\n}\n// regexes to check for trivial glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; // **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; // **/something\nconst T3 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+\\/?)*}$/; // {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/[\\*\\.]?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; // Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; // **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; // something/else\nconst CACHE = new LRUCache(10000); // bounded to 10000 elements\nconst FALSE = function () {\n    return false;\n};\nconst NULL = function () {\n    return null;\n};\nfunction parsePattern(arg1, options) {\n    if (!arg1) {\n        return NULL;\n    }\n    // Handle IRelativePattern\n    let pattern;\n    if (typeof arg1 !== 'string') {\n        pattern = arg1.pattern;\n    }\n    else {\n        pattern = arg1;\n    }\n    // Whitespace trimming\n    pattern = pattern.trim();\n    // Check cache\n    const patternKey = `${pattern}_${!!options.trimForExclusions}`;\n    let parsedPattern = CACHE.get(patternKey);\n    if (parsedPattern) {\n        return wrapRelativePattern(parsedPattern, arg1);\n    }\n    // Check for Trivials\n    let match;\n    if (T1.test(pattern)) { // common pattern: **/*.txt just need endsWith check\n        const base = pattern.substr(4); // '**/*'.length === 4\n        parsedPattern = function (path, basename) {\n            return typeof path === 'string' && path.endsWith(base) ? pattern : null;\n        };\n    }\n    else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n        parsedPattern = trivia2(match[1], pattern);\n    }\n    else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n        parsedPattern = trivia3(pattern, options);\n    }\n    else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n        parsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n    }\n    else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n        parsedPattern = trivia4and5(match[1], pattern, false);\n    }\n    // Otherwise convert to pattern\n    else {\n        parsedPattern = toRegExp(pattern);\n    }\n    // Cache\n    CACHE.set(patternKey, parsedPattern);\n    return wrapRelativePattern(parsedPattern, arg1);\n}\nfunction wrapRelativePattern(parsedPattern, arg2) {\n    if (typeof arg2 === 'string') {\n        return parsedPattern;\n    }\n    return function (path, basename) {\n        if (!isEqualOrParent(path, arg2.base, !isLinux)) {\n            // skip glob matching if `base` is not a parent of `path`\n            return null;\n        }\n        // Given we have checked `base` being a parent of `path`,\n        // we can now remove the `base` portion of the `path`\n        // and only match on the remaining path components\n        return parsedPattern(path.substr(arg2.base.length + 1), basename);\n    };\n}\nfunction trimForExclusions(pattern, options) {\n    return options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base, originalPattern) {\n    const slashBase = `/${base}`;\n    const backslashBase = `\\\\${base}`;\n    const parsedPattern = function (path, basename) {\n        if (typeof path !== 'string') {\n            return null;\n        }\n        if (basename) {\n            return basename === base ? originalPattern : null;\n        }\n        return path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? originalPattern : null;\n    };\n    const basenames = [base];\n    parsedPattern.basenames = basenames;\n    parsedPattern.patterns = [originalPattern];\n    parsedPattern.allBasenames = basenames;\n    return parsedPattern;\n}\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern, options) {\n    const parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1).split(',')\n        .map(pattern => parsePattern(pattern, options))\n        .filter(pattern => pattern !== NULL), pattern);\n    const n = parsedPatterns.length;\n    if (!n) {\n        return NULL;\n    }\n    if (n === 1) {\n        return parsedPatterns[0];\n    }\n    const parsedPattern = function (path, basename) {\n        for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n            if (parsedPatterns[i](path, basename)) {\n                return pattern;\n            }\n        }\n        return null;\n    };\n    const withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n    if (withBasenames) {\n        parsedPattern.allBasenames = withBasenames.allBasenames;\n    }\n    const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, []);\n    if (allPaths.length) {\n        parsedPattern.allPaths = allPaths;\n    }\n    return parsedPattern;\n}\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(targetPath, pattern, matchPathEnds) {\n    const usingPosixSep = sep === posix.sep;\n    const nativePath = usingPosixSep ? targetPath : targetPath.replace(ALL_FORWARD_SLASHES, sep);\n    const nativePathEnd = sep + nativePath;\n    const targetPathEnd = posix.sep + targetPath;\n    const parsedPattern = matchPathEnds ? function (testPath, basename) {\n        return typeof testPath === 'string' &&\n            ((testPath === nativePath || testPath.endsWith(nativePathEnd))\n                || !usingPosixSep && (testPath === targetPath || testPath.endsWith(targetPathEnd)))\n            ? pattern : null;\n    } : function (testPath, basename) {\n        return typeof testPath === 'string' &&\n            (testPath === nativePath\n                || (!usingPosixSep && testPath === targetPath))\n            ? pattern : null;\n    };\n    parsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + targetPath];\n    return parsedPattern;\n}\nfunction toRegExp(pattern) {\n    try {\n        const regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n        return function (path) {\n            regExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n            return typeof path === 'string' && regExp.test(path) ? pattern : null;\n        };\n    }\n    catch (error) {\n        return NULL;\n    }\n}\nexport function match(arg1, path, hasSibling) {\n    if (!arg1 || typeof path !== 'string') {\n        return false;\n    }\n    return parse(arg1)(path, undefined, hasSibling);\n}\nexport function parse(arg1, options = {}) {\n    if (!arg1) {\n        return FALSE;\n    }\n    // Glob with String\n    if (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n        const parsedPattern = parsePattern(arg1, options);\n        if (parsedPattern === NULL) {\n            return FALSE;\n        }\n        const resultPattern = function (path, basename) {\n            return !!parsedPattern(path, basename);\n        };\n        if (parsedPattern.allBasenames) {\n            resultPattern.allBasenames = parsedPattern.allBasenames;\n        }\n        if (parsedPattern.allPaths) {\n            resultPattern.allPaths = parsedPattern.allPaths;\n        }\n        return resultPattern;\n    }\n    // Glob with Expression\n    return parsedExpression(arg1, options);\n}\nexport function isRelativePattern(obj) {\n    const rp = obj;\n    if (!rp) {\n        return false;\n    }\n    return typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\nfunction parsedExpression(expression, options) {\n    const parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n        .map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n        .filter(pattern => pattern !== NULL));\n    const n = parsedPatterns.length;\n    if (!n) {\n        return NULL;\n    }\n    if (!parsedPatterns.some(parsedPattern => !!parsedPattern.requiresSiblings)) {\n        if (n === 1) {\n            return parsedPatterns[0];\n        }\n        const resultExpression = function (path, basename) {\n            for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n                // Pattern matches path\n                const result = parsedPatterns[i](path, basename);\n                if (result) {\n                    return result;\n                }\n            }\n            return null;\n        };\n        const withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n        if (withBasenames) {\n            resultExpression.allBasenames = withBasenames.allBasenames;\n        }\n        const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, []);\n        if (allPaths.length) {\n            resultExpression.allPaths = allPaths;\n        }\n        return resultExpression;\n    }\n    const resultExpression = function (path, base, hasSibling) {\n        let name = undefined;\n        for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n            // Pattern matches path\n            const parsedPattern = parsedPatterns[i];\n            if (parsedPattern.requiresSiblings && hasSibling) {\n                if (!base) {\n                    base = basename(path);\n                }\n                if (!name) {\n                    name = base.substr(0, base.length - extname(path).length);\n                }\n            }\n            const result = parsedPattern(path, base, name, hasSibling);\n            if (result) {\n                return result;\n            }\n        }\n        return null;\n    };\n    const withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n    if (withBasenames) {\n        resultExpression.allBasenames = withBasenames.allBasenames;\n    }\n    const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, []);\n    if (allPaths.length) {\n        resultExpression.allPaths = allPaths;\n    }\n    return resultExpression;\n}\nfunction parseExpressionPattern(pattern, value, options) {\n    if (value === false) {\n        return NULL; // pattern is disabled\n    }\n    const parsedPattern = parsePattern(pattern, options);\n    if (parsedPattern === NULL) {\n        return NULL;\n    }\n    // Expression Pattern is <boolean>\n    if (typeof value === 'boolean') {\n        return parsedPattern;\n    }\n    // Expression Pattern is <SiblingClause>\n    if (value) {\n        const when = value.when;\n        if (typeof when === 'string') {\n            const result = (path, basename, name, hasSibling) => {\n                if (!hasSibling || !parsedPattern(path, basename)) {\n                    return null;\n                }\n                const clausePattern = when.replace('$(basename)', name);\n                const matched = hasSibling(clausePattern);\n                return isThenable(matched) ?\n                    matched.then(m => m ? pattern : null) :\n                    matched ? pattern : null;\n            };\n            result.requiresSiblings = true;\n            return result;\n        }\n    }\n    // Expression is Anything\n    return parsedPattern;\n}\nfunction aggregateBasenameMatches(parsedPatterns, result) {\n    const basenamePatterns = parsedPatterns.filter(parsedPattern => !!parsedPattern.basenames);\n    if (basenamePatterns.length < 2) {\n        return parsedPatterns;\n    }\n    const basenames = basenamePatterns.reduce((all, current) => {\n        const basenames = current.basenames;\n        return basenames ? all.concat(basenames) : all;\n    }, []);\n    let patterns;\n    if (result) {\n        patterns = [];\n        for (let i = 0, n = basenames.length; i < n; i++) {\n            patterns.push(result);\n        }\n    }\n    else {\n        patterns = basenamePatterns.reduce((all, current) => {\n            const patterns = current.patterns;\n            return patterns ? all.concat(patterns) : all;\n        }, []);\n    }\n    const aggregate = function (path, basename) {\n        if (typeof path !== 'string') {\n            return null;\n        }\n        if (!basename) {\n            let i;\n            for (i = path.length; i > 0; i--) {\n                const ch = path.charCodeAt(i - 1);\n                if (ch === 47 /* Slash */ || ch === 92 /* Backslash */) {\n                    break;\n                }\n            }\n            basename = path.substr(i);\n        }\n        const index = basenames.indexOf(basename);\n        return index !== -1 ? patterns[index] : null;\n    };\n    aggregate.basenames = basenames;\n    aggregate.patterns = patterns;\n    aggregate.allBasenames = basenames;\n    const aggregatedPatterns = parsedPatterns.filter(parsedPattern => !parsedPattern.basenames);\n    aggregatedPatterns.push(aggregate);\n    return aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj) {\n    return doHash(obj, 0);\n}\nexport function doHash(obj, hashVal) {\n    switch (typeof obj) {\n        case 'object':\n            if (obj === null) {\n                return numberHash(349, hashVal);\n            }\n            else if (Array.isArray(obj)) {\n                return arrayHash(obj, hashVal);\n            }\n            return objectHash(obj, hashVal);\n        case 'string':\n            return stringHash(obj, hashVal);\n        case 'boolean':\n            return booleanHash(obj, hashVal);\n        case 'number':\n            return numberHash(obj, hashVal);\n        case 'undefined':\n            return numberHash(937, hashVal);\n        default:\n            return numberHash(617, hashVal);\n    }\n}\nexport function numberHash(val, initialHashVal) {\n    return (((initialHashVal << 5) - initialHashVal) + val) | 0; // hashVal * 31 + ch, keep as int32\n}\nfunction booleanHash(b, initialHashVal) {\n    return numberHash(b ? 433 : 863, initialHashVal);\n}\nexport function stringHash(s, hashVal) {\n    hashVal = numberHash(149417, hashVal);\n    for (let i = 0, length = s.length; i < length; i++) {\n        hashVal = numberHash(s.charCodeAt(i), hashVal);\n    }\n    return hashVal;\n}\nfunction arrayHash(arr, initialHashVal) {\n    initialHashVal = numberHash(104579, initialHashVal);\n    return arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\nfunction objectHash(obj, initialHashVal) {\n    initialHashVal = numberHash(181387, initialHashVal);\n    return Object.keys(obj).sort().reduce((hashVal, key) => {\n        hashVal = stringHash(key, hashVal);\n        return doHash(obj[key], hashVal);\n    }, initialHashVal);\n}\nfunction leftRotate(value, bits, totalBits = 32) {\n    // delta + bits = totalBits\n    const delta = totalBits - bits;\n    // All ones, expect `delta` zeros aligned to the right\n    const mask = ~((1 << delta) - 1);\n    // Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n    return ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\nfunction fill(dest, index = 0, count = dest.byteLength, value = 0) {\n    for (let i = 0; i < count; i++) {\n        dest[index + i] = value;\n    }\n}\nfunction leftPad(value, length, char = '0') {\n    while (value.length < length) {\n        value = char + value;\n    }\n    return value;\n}\nexport function toHexString(bufferOrValue, bitsize = 32) {\n    if (bufferOrValue instanceof ArrayBuffer) {\n        return Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n    }\n    return leftPad((bufferOrValue >>> 0).toString(16), bitsize / 4);\n}\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nexport class StringSHA1 {\n    constructor() {\n        this._h0 = 0x67452301;\n        this._h1 = 0xEFCDAB89;\n        this._h2 = 0x98BADCFE;\n        this._h3 = 0x10325476;\n        this._h4 = 0xC3D2E1F0;\n        this._buff = new Uint8Array(64 /* BLOCK_SIZE */ + 3 /* to fit any utf-8 */);\n        this._buffDV = new DataView(this._buff.buffer);\n        this._buffLen = 0;\n        this._totalLen = 0;\n        this._leftoverHighSurrogate = 0;\n        this._finished = false;\n    }\n    update(str) {\n        const strLen = str.length;\n        if (strLen === 0) {\n            return;\n        }\n        const buff = this._buff;\n        let buffLen = this._buffLen;\n        let leftoverHighSurrogate = this._leftoverHighSurrogate;\n        let charCode;\n        let offset;\n        if (leftoverHighSurrogate !== 0) {\n            charCode = leftoverHighSurrogate;\n            offset = -1;\n            leftoverHighSurrogate = 0;\n        }\n        else {\n            charCode = str.charCodeAt(0);\n            offset = 0;\n        }\n        while (true) {\n            let codePoint = charCode;\n            if (strings.isHighSurrogate(charCode)) {\n                if (offset + 1 < strLen) {\n                    const nextCharCode = str.charCodeAt(offset + 1);\n                    if (strings.isLowSurrogate(nextCharCode)) {\n                        offset++;\n                        codePoint = strings.computeCodePoint(charCode, nextCharCode);\n                    }\n                    else {\n                        // illegal => unicode replacement character\n                        codePoint = 65533 /* UNICODE_REPLACEMENT */;\n                    }\n                }\n                else {\n                    // last character is a surrogate pair\n                    leftoverHighSurrogate = charCode;\n                    break;\n                }\n            }\n            else if (strings.isLowSurrogate(charCode)) {\n                // illegal => unicode replacement character\n                codePoint = 65533 /* UNICODE_REPLACEMENT */;\n            }\n            buffLen = this._push(buff, buffLen, codePoint);\n            offset++;\n            if (offset < strLen) {\n                charCode = str.charCodeAt(offset);\n            }\n            else {\n                break;\n            }\n        }\n        this._buffLen = buffLen;\n        this._leftoverHighSurrogate = leftoverHighSurrogate;\n    }\n    _push(buff, buffLen, codePoint) {\n        if (codePoint < 0x0080) {\n            buff[buffLen++] = codePoint;\n        }\n        else if (codePoint < 0x0800) {\n            buff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else if (codePoint < 0x10000) {\n            buff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else {\n            buff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        if (buffLen >= 64 /* BLOCK_SIZE */) {\n            this._step();\n            buffLen -= 64 /* BLOCK_SIZE */;\n            this._totalLen += 64 /* BLOCK_SIZE */;\n            // take last 3 in case of UTF8 overflow\n            buff[0] = buff[64 /* BLOCK_SIZE */ + 0];\n            buff[1] = buff[64 /* BLOCK_SIZE */ + 1];\n            buff[2] = buff[64 /* BLOCK_SIZE */ + 2];\n        }\n        return buffLen;\n    }\n    digest() {\n        if (!this._finished) {\n            this._finished = true;\n            if (this._leftoverHighSurrogate) {\n                // illegal => unicode replacement character\n                this._leftoverHighSurrogate = 0;\n                this._buffLen = this._push(this._buff, this._buffLen, 65533 /* UNICODE_REPLACEMENT */);\n            }\n            this._totalLen += this._buffLen;\n            this._wrapUp();\n        }\n        return toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n    }\n    _wrapUp() {\n        this._buff[this._buffLen++] = 0x80;\n        fill(this._buff, this._buffLen);\n        if (this._buffLen > 56) {\n            this._step();\n            fill(this._buff);\n        }\n        // this will fit because the mantissa can cover up to 52 bits\n        const ml = 8 * this._totalLen;\n        this._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n        this._buffDV.setUint32(60, ml % 4294967296, false);\n        this._step();\n    }\n    _step() {\n        const bigBlock32 = StringSHA1._bigBlock32;\n        const data = this._buffDV;\n        for (let j = 0; j < 64 /* 16*4 */; j += 4) {\n            bigBlock32.setUint32(j, data.getUint32(j, false), false);\n        }\n        for (let j = 64; j < 320 /* 80*4 */; j += 4) {\n            bigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n        }\n        let a = this._h0;\n        let b = this._h1;\n        let c = this._h2;\n        let d = this._h3;\n        let e = this._h4;\n        let f, k;\n        let temp;\n        for (let j = 0; j < 80; j++) {\n            if (j < 20) {\n                f = (b & c) | ((~b) & d);\n                k = 0x5A827999;\n            }\n            else if (j < 40) {\n                f = b ^ c ^ d;\n                k = 0x6ED9EBA1;\n            }\n            else if (j < 60) {\n                f = (b & c) | (b & d) | (c & d);\n                k = 0x8F1BBCDC;\n            }\n            else {\n                f = b ^ c ^ d;\n                k = 0xCA62C1D6;\n            }\n            temp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n            e = d;\n            d = c;\n            c = leftRotate(b, 30);\n            b = a;\n            a = temp;\n        }\n        this._h0 = (this._h0 + a) & 0xffffffff;\n        this._h1 = (this._h1 + b) & 0xffffffff;\n        this._h2 = (this._h2 + c) & 0xffffffff;\n        this._h3 = (this._h3 + d) & 0xffffffff;\n        this._h4 = (this._h4 + e) & 0xffffffff;\n    }\n}\nStringSHA1._bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class ArrayNavigator {\n    constructor(items, start = 0, end = items.length, index = start - 1) {\n        this.items = items;\n        this.start = start;\n        this.end = end;\n        this.index = index;\n    }\n    current() {\n        if (this.index === this.start - 1 || this.index === this.end) {\n            return null;\n        }\n        return this.items[this.index];\n    }\n    next() {\n        this.index = Math.min(this.index + 1, this.end);\n        return this.current();\n    }\n    previous() {\n        this.index = Math.max(this.index - 1, this.start - 1);\n        return this.current();\n    }\n    first() {\n        this.index = this.start;\n        return this.current();\n    }\n    last() {\n        this.index = this.end - 1;\n        return this.current();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ArrayNavigator } from './navigator.js';\nexport class HistoryNavigator {\n    constructor(history = [], limit = 10) {\n        this._initialize(history);\n        this._limit = limit;\n        this._onChange();\n    }\n    getHistory() {\n        return this._elements;\n    }\n    add(t) {\n        this._history.delete(t);\n        this._history.add(t);\n        this._onChange();\n    }\n    next() {\n        if (this._currentPosition() !== this._elements.length - 1) {\n            return this._navigator.next();\n        }\n        return null;\n    }\n    previous() {\n        if (this._currentPosition() !== 0) {\n            return this._navigator.previous();\n        }\n        return null;\n    }\n    current() {\n        return this._navigator.current();\n    }\n    first() {\n        return this._navigator.first();\n    }\n    last() {\n        return this._navigator.last();\n    }\n    has(t) {\n        return this._history.has(t);\n    }\n    _onChange() {\n        this._reduceToLimit();\n        const elements = this._elements;\n        this._navigator = new ArrayNavigator(elements, 0, elements.length, elements.length);\n    }\n    _reduceToLimit() {\n        const data = this._elements;\n        if (data.length > this._limit) {\n            this._initialize(data.slice(data.length - this._limit));\n        }\n    }\n    _currentPosition() {\n        const currentElement = this._navigator.current();\n        if (!currentElement) {\n            return -1;\n        }\n        return this._elements.indexOf(currentElement);\n    }\n    _initialize(history) {\n        this._history = new Set();\n        for (const entry of history) {\n            this._history.add(entry);\n        }\n    }\n    get _elements() {\n        const elements = [];\n        this._history.forEach(e => elements.push(e));\n        return elements;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nimport { escapeIcons } from './iconLabels.js';\nexport class MarkdownString {\n    constructor(value = '', isTrustedOrOptions = false) {\n        var _a, _b, _c;\n        this.value = value;\n        if (typeof this.value !== 'string') {\n            throw illegalArgument('value');\n        }\n        if (typeof isTrustedOrOptions === 'boolean') {\n            this.isTrusted = isTrustedOrOptions;\n            this.supportThemeIcons = false;\n            this.supportHtml = false;\n        }\n        else {\n            this.isTrusted = (_a = isTrustedOrOptions.isTrusted) !== null && _a !== void 0 ? _a : undefined;\n            this.supportThemeIcons = (_b = isTrustedOrOptions.supportThemeIcons) !== null && _b !== void 0 ? _b : false;\n            this.supportHtml = (_c = isTrustedOrOptions.supportHtml) !== null && _c !== void 0 ? _c : false;\n        }\n    }\n    appendText(value, newlineStyle = 0 /* Paragraph */) {\n        this.value += escapeMarkdownSyntaxTokens(this.supportThemeIcons ? escapeIcons(value) : value)\n            .replace(/([ \\t]+)/g, (_match, g1) => '&nbsp;'.repeat(g1.length))\n            .replace(/\\>/gm, '\\\\>')\n            .replace(/\\n/g, newlineStyle === 1 /* Break */ ? '\\\\\\n' : '\\n\\n');\n        return this;\n    }\n    appendMarkdown(value) {\n        this.value += value;\n        return this;\n    }\n    appendCodeblock(langId, code) {\n        this.value += '\\n```';\n        this.value += langId;\n        this.value += '\\n';\n        this.value += code;\n        this.value += '\\n```\\n';\n        return this;\n    }\n}\nexport function isEmptyMarkdownString(oneOrMany) {\n    if (isMarkdownString(oneOrMany)) {\n        return !oneOrMany.value;\n    }\n    else if (Array.isArray(oneOrMany)) {\n        return oneOrMany.every(isEmptyMarkdownString);\n    }\n    else {\n        return true;\n    }\n}\nexport function isMarkdownString(thing) {\n    if (thing instanceof MarkdownString) {\n        return true;\n    }\n    else if (thing && typeof thing === 'object') {\n        return typeof thing.value === 'string'\n            && (typeof thing.isTrusted === 'boolean' || thing.isTrusted === undefined)\n            && (typeof thing.supportThemeIcons === 'boolean' || thing.supportThemeIcons === undefined);\n    }\n    return false;\n}\nexport function escapeMarkdownSyntaxTokens(text) {\n    // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    return text.replace(/[\\\\`*_{}[\\]()#+\\-!]/g, '\\\\$&');\n}\nexport function removeMarkdownEscapes(text) {\n    if (!text) {\n        return text;\n    }\n    return text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!])/g, '$1');\n}\nexport function parseHrefAndDimensions(href) {\n    const dimensions = [];\n    const splitted = href.split('|').map(s => s.trim());\n    href = splitted[0];\n    const parameters = splitted[1];\n    if (parameters) {\n        const heightFromParams = /height=(\\d+)/.exec(parameters);\n        const widthFromParams = /width=(\\d+)/.exec(parameters);\n        const height = heightFromParams ? heightFromParams[1] : '';\n        const width = widthFromParams ? widthFromParams[1] : '';\n        const widthIsFinite = isFinite(parseInt(width));\n        const heightIsFinite = isFinite(parseInt(height));\n        if (widthIsFinite) {\n            dimensions.push(`width=\"${width}\"`);\n        }\n        if (heightIsFinite) {\n            dimensions.push(`height=\"${height}\"`);\n        }\n    }\n    return { href, dimensions };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { CSSIcon } from './codicons.js';\nimport { matchesFuzzy } from './filters.js';\nimport { ltrim } from './strings.js';\nexport const iconStartMarker = '$(';\nconst iconsRegex = new RegExp(`\\\\$\\\\(${CSSIcon.iconNameExpression}(?:${CSSIcon.iconModifierExpression})?\\\\)`, 'g'); // no capturing groups\nconst iconNameCharacterRegexp = new RegExp(CSSIcon.iconNameCharacter);\nconst escapeIconsRegex = new RegExp(`(\\\\\\\\)?${iconsRegex.source}`, 'g');\nexport function escapeIcons(text) {\n    return text.replace(escapeIconsRegex, (match, escaped) => escaped ? match : `\\\\${match}`);\n}\nconst markdownEscapedIconsRegex = new RegExp(`\\\\\\\\${iconsRegex.source}`, 'g');\nexport function markdownEscapeEscapedIcons(text) {\n    // Need to add an extra \\ for escaping in markdown\n    return text.replace(markdownEscapedIconsRegex, match => `\\\\${match}`);\n}\nconst stripIconsRegex = new RegExp(`(\\\\s)?(\\\\\\\\)?${iconsRegex.source}(\\\\s)?`, 'g');\nexport function stripIcons(text) {\n    if (text.indexOf(iconStartMarker) === -1) {\n        return text;\n    }\n    return text.replace(stripIconsRegex, (match, preWhitespace, escaped, postWhitespace) => escaped ? match : preWhitespace || postWhitespace || '');\n}\nexport function parseLabelWithIcons(text) {\n    const firstIconIndex = text.indexOf(iconStartMarker);\n    if (firstIconIndex === -1) {\n        return { text }; // return early if the word does not include an icon\n    }\n    return doParseLabelWithIcons(text, firstIconIndex);\n}\nfunction doParseLabelWithIcons(text, firstIconIndex) {\n    const iconOffsets = [];\n    let textWithoutIcons = '';\n    function appendChars(chars) {\n        if (chars) {\n            textWithoutIcons += chars;\n            for (const _ of chars) {\n                iconOffsets.push(iconsOffset); // make sure to fill in icon offsets\n            }\n        }\n    }\n    let currentIconStart = -1;\n    let currentIconValue = '';\n    let iconsOffset = 0;\n    let char;\n    let nextChar;\n    let offset = firstIconIndex;\n    const length = text.length;\n    // Append all characters until the first icon\n    appendChars(text.substr(0, firstIconIndex));\n    // example: $(file-symlink-file) my cool $(other-icon) entry\n    while (offset < length) {\n        char = text[offset];\n        nextChar = text[offset + 1];\n        // beginning of icon: some value $( <--\n        if (char === iconStartMarker[0] && nextChar === iconStartMarker[1]) {\n            currentIconStart = offset;\n            // if we had a previous potential icon value without\n            // the closing ')', it was actually not an icon and\n            // so we have to add it to the actual value\n            appendChars(currentIconValue);\n            currentIconValue = iconStartMarker;\n            offset++; // jump over '('\n        }\n        // end of icon: some value $(some-icon) <--\n        else if (char === ')' && currentIconStart !== -1) {\n            const currentIconLength = offset - currentIconStart + 1; // +1 to include the closing ')'\n            iconsOffset += currentIconLength;\n            currentIconStart = -1;\n            currentIconValue = '';\n        }\n        // within icon\n        else if (currentIconStart !== -1) {\n            // Make sure this is a real icon name\n            if (iconNameCharacterRegexp.test(char)) {\n                currentIconValue += char;\n            }\n            else {\n                // This is not a real icon, treat it as text\n                appendChars(currentIconValue);\n                currentIconStart = -1;\n                currentIconValue = '';\n            }\n        }\n        // any value outside of icon\n        else {\n            appendChars(char);\n        }\n        offset++;\n    }\n    // if we had a previous potential icon value without\n    // the closing ')', it was actually not an icon and\n    // so we have to add it to the actual value\n    appendChars(currentIconValue);\n    return { text: textWithoutIcons, iconOffsets };\n}\nexport function matchesFuzzyIconAware(query, target, enableSeparateSubstringMatching = false) {\n    const { text, iconOffsets } = target;\n    // Return early if there are no icon markers in the word to match against\n    if (!iconOffsets || iconOffsets.length === 0) {\n        return matchesFuzzy(query, text, enableSeparateSubstringMatching);\n    }\n    // Trim the word to match against because it could have leading\n    // whitespace now if the word started with an icon\n    const wordToMatchAgainstWithoutIconsTrimmed = ltrim(text, ' ');\n    const leadingWhitespaceOffset = text.length - wordToMatchAgainstWithoutIconsTrimmed.length;\n    // match on value without icon\n    const matches = matchesFuzzy(query, wordToMatchAgainstWithoutIconsTrimmed, enableSeparateSubstringMatching);\n    // Map matches back to offsets with icon and trimming\n    if (matches) {\n        for (const match of matches) {\n            const iconOffset = iconOffsets[match.start + leadingWhitespaceOffset] /* icon offsets at index */ + leadingWhitespaceOffset /* overall leading whitespace offset */;\n            match.start += iconOffset;\n            match.end += iconOffset;\n        }\n    }\n    return matches;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class IdGenerator {\n    constructor(prefix) {\n        this._prefix = prefix;\n        this._lastId = 0;\n    }\n    nextId() {\n        return this._prefix + (++this._lastId);\n    }\n}\nexport const defaultGenerator = new IdGenerator('id#');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var Iterable;\n(function (Iterable) {\n    function is(thing) {\n        return thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n    }\n    Iterable.is = is;\n    const _empty = Object.freeze([]);\n    function empty() {\n        return _empty;\n    }\n    Iterable.empty = empty;\n    function* single(element) {\n        yield element;\n    }\n    Iterable.single = single;\n    function from(iterable) {\n        return iterable || _empty;\n    }\n    Iterable.from = from;\n    function isEmpty(iterable) {\n        return !iterable || iterable[Symbol.iterator]().next().done === true;\n    }\n    Iterable.isEmpty = isEmpty;\n    function first(iterable) {\n        return iterable[Symbol.iterator]().next().value;\n    }\n    Iterable.first = first;\n    function some(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    Iterable.some = some;\n    function find(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return undefined;\n    }\n    Iterable.find = find;\n    function* filter(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                yield element;\n            }\n        }\n    }\n    Iterable.filter = filter;\n    function* map(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield fn(element, index++);\n        }\n    }\n    Iterable.map = map;\n    function* concat(...iterables) {\n        for (const iterable of iterables) {\n            for (const element of iterable) {\n                yield element;\n            }\n        }\n    }\n    Iterable.concat = concat;\n    function* concatNested(iterables) {\n        for (const iterable of iterables) {\n            for (const element of iterable) {\n                yield element;\n            }\n        }\n    }\n    Iterable.concatNested = concatNested;\n    function reduce(iterable, reducer, initialValue) {\n        let value = initialValue;\n        for (const element of iterable) {\n            value = reducer(value, element);\n        }\n        return value;\n    }\n    Iterable.reduce = reduce;\n    /**\n     * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n     */\n    function* slice(arr, from, to = arr.length) {\n        if (from < 0) {\n            from += arr.length;\n        }\n        if (to < 0) {\n            to += arr.length;\n        }\n        else if (to > arr.length) {\n            to = arr.length;\n        }\n        for (; from < to; from++) {\n            yield arr[from];\n        }\n    }\n    Iterable.slice = slice;\n    /**\n     * Consumes `atMost` elements from iterable and returns the consumed elements,\n     * and an iterable for the rest of the elements.\n     */\n    function consume(iterable, atMost = Number.POSITIVE_INFINITY) {\n        const consumed = [];\n        if (atMost === 0) {\n            return [consumed, iterable];\n        }\n        const iterator = iterable[Symbol.iterator]();\n        for (let i = 0; i < atMost; i++) {\n            const next = iterator.next();\n            if (next.done) {\n                return [consumed, Iterable.empty()];\n            }\n            consumed.push(next.value);\n        }\n        return [consumed, { [Symbol.iterator]() { return iterator; } }];\n    }\n    Iterable.consume = consume;\n    /**\n     * Returns whether the iterables are the same length and all items are\n     * equal using the comparator function.\n     */\n    function equals(a, b, comparator = (at, bt) => at === bt) {\n        const ai = a[Symbol.iterator]();\n        const bi = b[Symbol.iterator]();\n        while (true) {\n            const an = ai.next();\n            const bn = bi.next();\n            if (an.done !== bn.done) {\n                return false;\n            }\n            else if (an.done) {\n                return true;\n            }\n            else if (!comparator(an.value, bn.value)) {\n                return false;\n            }\n        }\n    }\n    Iterable.equals = equals;\n})(Iterable || (Iterable = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass KeyCodeStrMap {\n    constructor() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    define(keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    }\n    keyCodeToStr(keyCode) {\n        return this._keyCodeToStr[keyCode];\n    }\n    strToKeyCode(str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* Unknown */;\n    }\n}\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\nexport const EVENT_KEY_CODE_MAP = new Array(230);\nexport const NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE = {};\nconst scanCodeIntToStr = [];\nconst scanCodeStrToInt = Object.create(null);\nconst scanCodeLowerCaseStrToInt = Object.create(null);\n/**\n * -1 if a ScanCode => KeyCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_CODE_TO_KEY_CODE = [];\n/**\n * -1 if a KeyCode => ScanCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_KEY_CODE_TO_CODE = [];\nfor (let i = 0; i <= 193 /* MAX_VALUE */; i++) {\n    IMMUTABLE_CODE_TO_KEY_CODE[i] = -1 /* DependsOnKbLayout */;\n}\nfor (let i = 0; i <= 126 /* MAX_VALUE */; i++) {\n    IMMUTABLE_KEY_CODE_TO_CODE[i] = -1 /* DependsOnKbLayout */;\n}\n(function () {\n    // See https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n    // See https://github.com/microsoft/node-native-keymap/blob/master/deps/chromium/keyboard_codes_win.h\n    const empty = '';\n    const mappings = [\n        // keyCodeOrd, immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel\n        [0, 1, 0 /* None */, 'None', 0 /* Unknown */, 'unknown', 0, 'VK_UNKNOWN', empty, empty],\n        [0, 1, 1 /* Hyper */, 'Hyper', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 2 /* Super */, 'Super', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 3 /* Fn */, 'Fn', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 4 /* FnLock */, 'FnLock', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 5 /* Suspend */, 'Suspend', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 6 /* Resume */, 'Resume', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 7 /* Turbo */, 'Turbo', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 8 /* Sleep */, 'Sleep', 0 /* Unknown */, empty, 0, 'VK_SLEEP', empty, empty],\n        [0, 1, 9 /* WakeUp */, 'WakeUp', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [31, 0, 10 /* KeyA */, 'KeyA', 31 /* KeyA */, 'A', 65, 'VK_A', empty, empty],\n        [32, 0, 11 /* KeyB */, 'KeyB', 32 /* KeyB */, 'B', 66, 'VK_B', empty, empty],\n        [33, 0, 12 /* KeyC */, 'KeyC', 33 /* KeyC */, 'C', 67, 'VK_C', empty, empty],\n        [34, 0, 13 /* KeyD */, 'KeyD', 34 /* KeyD */, 'D', 68, 'VK_D', empty, empty],\n        [35, 0, 14 /* KeyE */, 'KeyE', 35 /* KeyE */, 'E', 69, 'VK_E', empty, empty],\n        [36, 0, 15 /* KeyF */, 'KeyF', 36 /* KeyF */, 'F', 70, 'VK_F', empty, empty],\n        [37, 0, 16 /* KeyG */, 'KeyG', 37 /* KeyG */, 'G', 71, 'VK_G', empty, empty],\n        [38, 0, 17 /* KeyH */, 'KeyH', 38 /* KeyH */, 'H', 72, 'VK_H', empty, empty],\n        [39, 0, 18 /* KeyI */, 'KeyI', 39 /* KeyI */, 'I', 73, 'VK_I', empty, empty],\n        [40, 0, 19 /* KeyJ */, 'KeyJ', 40 /* KeyJ */, 'J', 74, 'VK_J', empty, empty],\n        [41, 0, 20 /* KeyK */, 'KeyK', 41 /* KeyK */, 'K', 75, 'VK_K', empty, empty],\n        [42, 0, 21 /* KeyL */, 'KeyL', 42 /* KeyL */, 'L', 76, 'VK_L', empty, empty],\n        [43, 0, 22 /* KeyM */, 'KeyM', 43 /* KeyM */, 'M', 77, 'VK_M', empty, empty],\n        [44, 0, 23 /* KeyN */, 'KeyN', 44 /* KeyN */, 'N', 78, 'VK_N', empty, empty],\n        [45, 0, 24 /* KeyO */, 'KeyO', 45 /* KeyO */, 'O', 79, 'VK_O', empty, empty],\n        [46, 0, 25 /* KeyP */, 'KeyP', 46 /* KeyP */, 'P', 80, 'VK_P', empty, empty],\n        [47, 0, 26 /* KeyQ */, 'KeyQ', 47 /* KeyQ */, 'Q', 81, 'VK_Q', empty, empty],\n        [48, 0, 27 /* KeyR */, 'KeyR', 48 /* KeyR */, 'R', 82, 'VK_R', empty, empty],\n        [49, 0, 28 /* KeyS */, 'KeyS', 49 /* KeyS */, 'S', 83, 'VK_S', empty, empty],\n        [50, 0, 29 /* KeyT */, 'KeyT', 50 /* KeyT */, 'T', 84, 'VK_T', empty, empty],\n        [51, 0, 30 /* KeyU */, 'KeyU', 51 /* KeyU */, 'U', 85, 'VK_U', empty, empty],\n        [52, 0, 31 /* KeyV */, 'KeyV', 52 /* KeyV */, 'V', 86, 'VK_V', empty, empty],\n        [53, 0, 32 /* KeyW */, 'KeyW', 53 /* KeyW */, 'W', 87, 'VK_W', empty, empty],\n        [54, 0, 33 /* KeyX */, 'KeyX', 54 /* KeyX */, 'X', 88, 'VK_X', empty, empty],\n        [55, 0, 34 /* KeyY */, 'KeyY', 55 /* KeyY */, 'Y', 89, 'VK_Y', empty, empty],\n        [56, 0, 35 /* KeyZ */, 'KeyZ', 56 /* KeyZ */, 'Z', 90, 'VK_Z', empty, empty],\n        [22, 0, 36 /* Digit1 */, 'Digit1', 22 /* Digit1 */, '1', 49, 'VK_1', empty, empty],\n        [23, 0, 37 /* Digit2 */, 'Digit2', 23 /* Digit2 */, '2', 50, 'VK_2', empty, empty],\n        [24, 0, 38 /* Digit3 */, 'Digit3', 24 /* Digit3 */, '3', 51, 'VK_3', empty, empty],\n        [25, 0, 39 /* Digit4 */, 'Digit4', 25 /* Digit4 */, '4', 52, 'VK_4', empty, empty],\n        [26, 0, 40 /* Digit5 */, 'Digit5', 26 /* Digit5 */, '5', 53, 'VK_5', empty, empty],\n        [27, 0, 41 /* Digit6 */, 'Digit6', 27 /* Digit6 */, '6', 54, 'VK_6', empty, empty],\n        [28, 0, 42 /* Digit7 */, 'Digit7', 28 /* Digit7 */, '7', 55, 'VK_7', empty, empty],\n        [29, 0, 43 /* Digit8 */, 'Digit8', 29 /* Digit8 */, '8', 56, 'VK_8', empty, empty],\n        [30, 0, 44 /* Digit9 */, 'Digit9', 30 /* Digit9 */, '9', 57, 'VK_9', empty, empty],\n        [21, 0, 45 /* Digit0 */, 'Digit0', 21 /* Digit0 */, '0', 48, 'VK_0', empty, empty],\n        [3, 1, 46 /* Enter */, 'Enter', 3 /* Enter */, 'Enter', 13, 'VK_RETURN', empty, empty],\n        [9, 1, 47 /* Escape */, 'Escape', 9 /* Escape */, 'Escape', 27, 'VK_ESCAPE', empty, empty],\n        [1, 1, 48 /* Backspace */, 'Backspace', 1 /* Backspace */, 'Backspace', 8, 'VK_BACK', empty, empty],\n        [2, 1, 49 /* Tab */, 'Tab', 2 /* Tab */, 'Tab', 9, 'VK_TAB', empty, empty],\n        [10, 1, 50 /* Space */, 'Space', 10 /* Space */, 'Space', 32, 'VK_SPACE', empty, empty],\n        [83, 0, 51 /* Minus */, 'Minus', 83 /* Minus */, '-', 189, 'VK_OEM_MINUS', '-', 'OEM_MINUS'],\n        [81, 0, 52 /* Equal */, 'Equal', 81 /* Equal */, '=', 187, 'VK_OEM_PLUS', '=', 'OEM_PLUS'],\n        [87, 0, 53 /* BracketLeft */, 'BracketLeft', 87 /* BracketLeft */, '[', 219, 'VK_OEM_4', '[', 'OEM_4'],\n        [89, 0, 54 /* BracketRight */, 'BracketRight', 89 /* BracketRight */, ']', 221, 'VK_OEM_6', ']', 'OEM_6'],\n        [88, 0, 55 /* Backslash */, 'Backslash', 88 /* Backslash */, '\\\\', 220, 'VK_OEM_5', '\\\\', 'OEM_5'],\n        [0, 0, 56 /* IntlHash */, 'IntlHash', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [80, 0, 57 /* Semicolon */, 'Semicolon', 80 /* Semicolon */, ';', 186, 'VK_OEM_1', ';', 'OEM_1'],\n        [90, 0, 58 /* Quote */, 'Quote', 90 /* Quote */, '\\'', 222, 'VK_OEM_7', '\\'', 'OEM_7'],\n        [86, 0, 59 /* Backquote */, 'Backquote', 86 /* Backquote */, '`', 192, 'VK_OEM_3', '`', 'OEM_3'],\n        [82, 0, 60 /* Comma */, 'Comma', 82 /* Comma */, ',', 188, 'VK_OEM_COMMA', ',', 'OEM_COMMA'],\n        [84, 0, 61 /* Period */, 'Period', 84 /* Period */, '.', 190, 'VK_OEM_PERIOD', '.', 'OEM_PERIOD'],\n        [85, 0, 62 /* Slash */, 'Slash', 85 /* Slash */, '/', 191, 'VK_OEM_2', '/', 'OEM_2'],\n        [8, 1, 63 /* CapsLock */, 'CapsLock', 8 /* CapsLock */, 'CapsLock', 20, 'VK_CAPITAL', empty, empty],\n        [59, 1, 64 /* F1 */, 'F1', 59 /* F1 */, 'F1', 112, 'VK_F1', empty, empty],\n        [60, 1, 65 /* F2 */, 'F2', 60 /* F2 */, 'F2', 113, 'VK_F2', empty, empty],\n        [61, 1, 66 /* F3 */, 'F3', 61 /* F3 */, 'F3', 114, 'VK_F3', empty, empty],\n        [62, 1, 67 /* F4 */, 'F4', 62 /* F4 */, 'F4', 115, 'VK_F4', empty, empty],\n        [63, 1, 68 /* F5 */, 'F5', 63 /* F5 */, 'F5', 116, 'VK_F5', empty, empty],\n        [64, 1, 69 /* F6 */, 'F6', 64 /* F6 */, 'F6', 117, 'VK_F6', empty, empty],\n        [65, 1, 70 /* F7 */, 'F7', 65 /* F7 */, 'F7', 118, 'VK_F7', empty, empty],\n        [66, 1, 71 /* F8 */, 'F8', 66 /* F8 */, 'F8', 119, 'VK_F8', empty, empty],\n        [67, 1, 72 /* F9 */, 'F9', 67 /* F9 */, 'F9', 120, 'VK_F9', empty, empty],\n        [68, 1, 73 /* F10 */, 'F10', 68 /* F10 */, 'F10', 121, 'VK_F10', empty, empty],\n        [69, 1, 74 /* F11 */, 'F11', 69 /* F11 */, 'F11', 122, 'VK_F11', empty, empty],\n        [70, 1, 75 /* F12 */, 'F12', 70 /* F12 */, 'F12', 123, 'VK_F12', empty, empty],\n        [0, 1, 76 /* PrintScreen */, 'PrintScreen', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [79, 1, 77 /* ScrollLock */, 'ScrollLock', 79 /* ScrollLock */, 'ScrollLock', 145, 'VK_SCROLL', empty, empty],\n        [7, 1, 78 /* Pause */, 'Pause', 7 /* PauseBreak */, 'PauseBreak', 19, 'VK_PAUSE', empty, empty],\n        [19, 1, 79 /* Insert */, 'Insert', 19 /* Insert */, 'Insert', 45, 'VK_INSERT', empty, empty],\n        [14, 1, 80 /* Home */, 'Home', 14 /* Home */, 'Home', 36, 'VK_HOME', empty, empty],\n        [11, 1, 81 /* PageUp */, 'PageUp', 11 /* PageUp */, 'PageUp', 33, 'VK_PRIOR', empty, empty],\n        [20, 1, 82 /* Delete */, 'Delete', 20 /* Delete */, 'Delete', 46, 'VK_DELETE', empty, empty],\n        [13, 1, 83 /* End */, 'End', 13 /* End */, 'End', 35, 'VK_END', empty, empty],\n        [12, 1, 84 /* PageDown */, 'PageDown', 12 /* PageDown */, 'PageDown', 34, 'VK_NEXT', empty, empty],\n        [17, 1, 85 /* ArrowRight */, 'ArrowRight', 17 /* RightArrow */, 'RightArrow', 39, 'VK_RIGHT', 'Right', empty],\n        [15, 1, 86 /* ArrowLeft */, 'ArrowLeft', 15 /* LeftArrow */, 'LeftArrow', 37, 'VK_LEFT', 'Left', empty],\n        [18, 1, 87 /* ArrowDown */, 'ArrowDown', 18 /* DownArrow */, 'DownArrow', 40, 'VK_DOWN', 'Down', empty],\n        [16, 1, 88 /* ArrowUp */, 'ArrowUp', 16 /* UpArrow */, 'UpArrow', 38, 'VK_UP', 'Up', empty],\n        [78, 1, 89 /* NumLock */, 'NumLock', 78 /* NumLock */, 'NumLock', 144, 'VK_NUMLOCK', empty, empty],\n        [108, 1, 90 /* NumpadDivide */, 'NumpadDivide', 108 /* NumpadDivide */, 'NumPad_Divide', 111, 'VK_DIVIDE', empty, empty],\n        [103, 1, 91 /* NumpadMultiply */, 'NumpadMultiply', 103 /* NumpadMultiply */, 'NumPad_Multiply', 106, 'VK_MULTIPLY', empty, empty],\n        [106, 1, 92 /* NumpadSubtract */, 'NumpadSubtract', 106 /* NumpadSubtract */, 'NumPad_Subtract', 109, 'VK_SUBTRACT', empty, empty],\n        [104, 1, 93 /* NumpadAdd */, 'NumpadAdd', 104 /* NumpadAdd */, 'NumPad_Add', 107, 'VK_ADD', empty, empty],\n        [3, 1, 94 /* NumpadEnter */, 'NumpadEnter', 3 /* Enter */, empty, 0, empty, empty, empty],\n        [94, 1, 95 /* Numpad1 */, 'Numpad1', 94 /* Numpad1 */, 'NumPad1', 97, 'VK_NUMPAD1', empty, empty],\n        [95, 1, 96 /* Numpad2 */, 'Numpad2', 95 /* Numpad2 */, 'NumPad2', 98, 'VK_NUMPAD2', empty, empty],\n        [96, 1, 97 /* Numpad3 */, 'Numpad3', 96 /* Numpad3 */, 'NumPad3', 99, 'VK_NUMPAD3', empty, empty],\n        [97, 1, 98 /* Numpad4 */, 'Numpad4', 97 /* Numpad4 */, 'NumPad4', 100, 'VK_NUMPAD4', empty, empty],\n        [98, 1, 99 /* Numpad5 */, 'Numpad5', 98 /* Numpad5 */, 'NumPad5', 101, 'VK_NUMPAD5', empty, empty],\n        [99, 1, 100 /* Numpad6 */, 'Numpad6', 99 /* Numpad6 */, 'NumPad6', 102, 'VK_NUMPAD6', empty, empty],\n        [100, 1, 101 /* Numpad7 */, 'Numpad7', 100 /* Numpad7 */, 'NumPad7', 103, 'VK_NUMPAD7', empty, empty],\n        [101, 1, 102 /* Numpad8 */, 'Numpad8', 101 /* Numpad8 */, 'NumPad8', 104, 'VK_NUMPAD8', empty, empty],\n        [102, 1, 103 /* Numpad9 */, 'Numpad9', 102 /* Numpad9 */, 'NumPad9', 105, 'VK_NUMPAD9', empty, empty],\n        [93, 1, 104 /* Numpad0 */, 'Numpad0', 93 /* Numpad0 */, 'NumPad0', 96, 'VK_NUMPAD0', empty, empty],\n        [107, 1, 105 /* NumpadDecimal */, 'NumpadDecimal', 107 /* NumpadDecimal */, 'NumPad_Decimal', 110, 'VK_DECIMAL', empty, empty],\n        [92, 0, 106 /* IntlBackslash */, 'IntlBackslash', 92 /* IntlBackslash */, 'OEM_102', 226, 'VK_OEM_102', empty, empty],\n        [58, 1, 107 /* ContextMenu */, 'ContextMenu', 58 /* ContextMenu */, 'ContextMenu', 93, empty, empty, empty],\n        [0, 1, 108 /* Power */, 'Power', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 109 /* NumpadEqual */, 'NumpadEqual', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [71, 1, 110 /* F13 */, 'F13', 71 /* F13 */, 'F13', 124, 'VK_F13', empty, empty],\n        [72, 1, 111 /* F14 */, 'F14', 72 /* F14 */, 'F14', 125, 'VK_F14', empty, empty],\n        [73, 1, 112 /* F15 */, 'F15', 73 /* F15 */, 'F15', 126, 'VK_F15', empty, empty],\n        [74, 1, 113 /* F16 */, 'F16', 74 /* F16 */, 'F16', 127, 'VK_F16', empty, empty],\n        [75, 1, 114 /* F17 */, 'F17', 75 /* F17 */, 'F17', 128, 'VK_F17', empty, empty],\n        [76, 1, 115 /* F18 */, 'F18', 76 /* F18 */, 'F18', 129, 'VK_F18', empty, empty],\n        [77, 1, 116 /* F19 */, 'F19', 77 /* F19 */, 'F19', 130, 'VK_F19', empty, empty],\n        [0, 1, 117 /* F20 */, 'F20', 0 /* Unknown */, empty, 0, 'VK_F20', empty, empty],\n        [0, 1, 118 /* F21 */, 'F21', 0 /* Unknown */, empty, 0, 'VK_F21', empty, empty],\n        [0, 1, 119 /* F22 */, 'F22', 0 /* Unknown */, empty, 0, 'VK_F22', empty, empty],\n        [0, 1, 120 /* F23 */, 'F23', 0 /* Unknown */, empty, 0, 'VK_F23', empty, empty],\n        [0, 1, 121 /* F24 */, 'F24', 0 /* Unknown */, empty, 0, 'VK_F24', empty, empty],\n        [0, 1, 122 /* Open */, 'Open', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 123 /* Help */, 'Help', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 124 /* Select */, 'Select', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 125 /* Again */, 'Again', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 126 /* Undo */, 'Undo', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 127 /* Cut */, 'Cut', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 128 /* Copy */, 'Copy', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 129 /* Paste */, 'Paste', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 130 /* Find */, 'Find', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 131 /* AudioVolumeMute */, 'AudioVolumeMute', 112 /* AudioVolumeMute */, 'AudioVolumeMute', 173, 'VK_VOLUME_MUTE', empty, empty],\n        [0, 1, 132 /* AudioVolumeUp */, 'AudioVolumeUp', 113 /* AudioVolumeUp */, 'AudioVolumeUp', 175, 'VK_VOLUME_UP', empty, empty],\n        [0, 1, 133 /* AudioVolumeDown */, 'AudioVolumeDown', 114 /* AudioVolumeDown */, 'AudioVolumeDown', 174, 'VK_VOLUME_DOWN', empty, empty],\n        [105, 1, 134 /* NumpadComma */, 'NumpadComma', 105 /* NUMPAD_SEPARATOR */, 'NumPad_Separator', 108, 'VK_SEPARATOR', empty, empty],\n        [110, 0, 135 /* IntlRo */, 'IntlRo', 110 /* ABNT_C1 */, 'ABNT_C1', 193, 'VK_ABNT_C1', empty, empty],\n        [0, 1, 136 /* KanaMode */, 'KanaMode', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 0, 137 /* IntlYen */, 'IntlYen', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 138 /* Convert */, 'Convert', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 139 /* NonConvert */, 'NonConvert', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 140 /* Lang1 */, 'Lang1', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 141 /* Lang2 */, 'Lang2', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 142 /* Lang3 */, 'Lang3', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 143 /* Lang4 */, 'Lang4', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 144 /* Lang5 */, 'Lang5', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 145 /* Abort */, 'Abort', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 146 /* Props */, 'Props', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 147 /* NumpadParenLeft */, 'NumpadParenLeft', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 148 /* NumpadParenRight */, 'NumpadParenRight', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 149 /* NumpadBackspace */, 'NumpadBackspace', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 150 /* NumpadMemoryStore */, 'NumpadMemoryStore', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 151 /* NumpadMemoryRecall */, 'NumpadMemoryRecall', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 152 /* NumpadMemoryClear */, 'NumpadMemoryClear', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 153 /* NumpadMemoryAdd */, 'NumpadMemoryAdd', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 154 /* NumpadMemorySubtract */, 'NumpadMemorySubtract', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 155 /* NumpadClear */, 'NumpadClear', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 156 /* NumpadClearEntry */, 'NumpadClearEntry', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [5, 1, 0 /* None */, empty, 5 /* Ctrl */, 'Ctrl', 17, 'VK_CONTROL', empty, empty],\n        [4, 1, 0 /* None */, empty, 4 /* Shift */, 'Shift', 16, 'VK_SHIFT', empty, empty],\n        [6, 1, 0 /* None */, empty, 6 /* Alt */, 'Alt', 18, 'VK_MENU', empty, empty],\n        [57, 1, 0 /* None */, empty, 57 /* Meta */, 'Meta', 0, 'VK_COMMAND', empty, empty],\n        [5, 1, 157 /* ControlLeft */, 'ControlLeft', 5 /* Ctrl */, empty, 0, 'VK_LCONTROL', empty, empty],\n        [4, 1, 158 /* ShiftLeft */, 'ShiftLeft', 4 /* Shift */, empty, 0, 'VK_LSHIFT', empty, empty],\n        [6, 1, 159 /* AltLeft */, 'AltLeft', 6 /* Alt */, empty, 0, 'VK_LMENU', empty, empty],\n        [57, 1, 160 /* MetaLeft */, 'MetaLeft', 57 /* Meta */, empty, 0, 'VK_LWIN', empty, empty],\n        [5, 1, 161 /* ControlRight */, 'ControlRight', 5 /* Ctrl */, empty, 0, 'VK_RCONTROL', empty, empty],\n        [4, 1, 162 /* ShiftRight */, 'ShiftRight', 4 /* Shift */, empty, 0, 'VK_RSHIFT', empty, empty],\n        [6, 1, 163 /* AltRight */, 'AltRight', 6 /* Alt */, empty, 0, 'VK_RMENU', empty, empty],\n        [57, 1, 164 /* MetaRight */, 'MetaRight', 57 /* Meta */, empty, 0, 'VK_RWIN', empty, empty],\n        [0, 1, 165 /* BrightnessUp */, 'BrightnessUp', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 166 /* BrightnessDown */, 'BrightnessDown', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 167 /* MediaPlay */, 'MediaPlay', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 168 /* MediaRecord */, 'MediaRecord', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 169 /* MediaFastForward */, 'MediaFastForward', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 170 /* MediaRewind */, 'MediaRewind', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [114, 1, 171 /* MediaTrackNext */, 'MediaTrackNext', 119 /* MediaTrackNext */, 'MediaTrackNext', 176, 'VK_MEDIA_NEXT_TRACK', empty, empty],\n        [115, 1, 172 /* MediaTrackPrevious */, 'MediaTrackPrevious', 120 /* MediaTrackPrevious */, 'MediaTrackPrevious', 177, 'VK_MEDIA_PREV_TRACK', empty, empty],\n        [116, 1, 173 /* MediaStop */, 'MediaStop', 121 /* MediaStop */, 'MediaStop', 178, 'VK_MEDIA_STOP', empty, empty],\n        [0, 1, 174 /* Eject */, 'Eject', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [117, 1, 175 /* MediaPlayPause */, 'MediaPlayPause', 122 /* MediaPlayPause */, 'MediaPlayPause', 179, 'VK_MEDIA_PLAY_PAUSE', empty, empty],\n        [0, 1, 176 /* MediaSelect */, 'MediaSelect', 123 /* LaunchMediaPlayer */, 'LaunchMediaPlayer', 181, 'VK_MEDIA_LAUNCH_MEDIA_SELECT', empty, empty],\n        [0, 1, 177 /* LaunchMail */, 'LaunchMail', 124 /* LaunchMail */, 'LaunchMail', 180, 'VK_MEDIA_LAUNCH_MAIL', empty, empty],\n        [0, 1, 178 /* LaunchApp2 */, 'LaunchApp2', 125 /* LaunchApp2 */, 'LaunchApp2', 183, 'VK_MEDIA_LAUNCH_APP2', empty, empty],\n        [0, 1, 179 /* LaunchApp1 */, 'LaunchApp1', 0 /* Unknown */, empty, 0, 'VK_MEDIA_LAUNCH_APP1', empty, empty],\n        [0, 1, 180 /* SelectTask */, 'SelectTask', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 181 /* LaunchScreenSaver */, 'LaunchScreenSaver', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 182 /* BrowserSearch */, 'BrowserSearch', 115 /* BrowserSearch */, 'BrowserSearch', 170, 'VK_BROWSER_SEARCH', empty, empty],\n        [0, 1, 183 /* BrowserHome */, 'BrowserHome', 116 /* BrowserHome */, 'BrowserHome', 172, 'VK_BROWSER_HOME', empty, empty],\n        [112, 1, 184 /* BrowserBack */, 'BrowserBack', 117 /* BrowserBack */, 'BrowserBack', 166, 'VK_BROWSER_BACK', empty, empty],\n        [113, 1, 185 /* BrowserForward */, 'BrowserForward', 118 /* BrowserForward */, 'BrowserForward', 167, 'VK_BROWSER_FORWARD', empty, empty],\n        [0, 1, 186 /* BrowserStop */, 'BrowserStop', 0 /* Unknown */, empty, 0, 'VK_BROWSER_STOP', empty, empty],\n        [0, 1, 187 /* BrowserRefresh */, 'BrowserRefresh', 0 /* Unknown */, empty, 0, 'VK_BROWSER_REFRESH', empty, empty],\n        [0, 1, 188 /* BrowserFavorites */, 'BrowserFavorites', 0 /* Unknown */, empty, 0, 'VK_BROWSER_FAVORITES', empty, empty],\n        [0, 1, 189 /* ZoomToggle */, 'ZoomToggle', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 190 /* MailReply */, 'MailReply', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 191 /* MailForward */, 'MailForward', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        [0, 1, 192 /* MailSend */, 'MailSend', 0 /* Unknown */, empty, 0, empty, empty, empty],\n        // See https://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n        // If an Input Method Editor is processing key input and the event is keydown, return 229.\n        [109, 1, 0 /* None */, empty, 109 /* KEY_IN_COMPOSITION */, 'KeyInComposition', 229, empty, empty, empty],\n        [111, 1, 0 /* None */, empty, 111 /* ABNT_C2 */, 'ABNT_C2', 194, 'VK_ABNT_C2', empty, empty],\n        [91, 1, 0 /* None */, empty, 91 /* OEM_8 */, 'OEM_8', 223, 'VK_OEM_8', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_CLEAR', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_KANA', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_HANGUL', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_JUNJA', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_FINAL', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_HANJA', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_KANJI', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_CONVERT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_NONCONVERT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_ACCEPT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_MODECHANGE', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_SELECT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PRINT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_EXECUTE', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_SNAPSHOT', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_HELP', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_APPS', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PROCESSKEY', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PACKET', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_DBE_SBCSCHAR', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_DBE_DBCSCHAR', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_ATTN', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_CRSEL', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_EXSEL', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_EREOF', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PLAY', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_ZOOM', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_NONAME', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_PA1', empty, empty],\n        [0, 1, 0 /* None */, empty, 0 /* Unknown */, empty, 0, 'VK_OEM_CLEAR', empty, empty],\n    ];\n    let seenKeyCode = [];\n    let seenScanCode = [];\n    for (const mapping of mappings) {\n        const [_keyCodeOrd, immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel] = mapping;\n        if (!seenScanCode[scanCode]) {\n            seenScanCode[scanCode] = true;\n            scanCodeIntToStr[scanCode] = scanCodeStr;\n            scanCodeStrToInt[scanCodeStr] = scanCode;\n            scanCodeLowerCaseStrToInt[scanCodeStr.toLowerCase()] = scanCode;\n            if (immutable) {\n                IMMUTABLE_CODE_TO_KEY_CODE[scanCode] = keyCode;\n                if ((keyCode !== 0 /* Unknown */)\n                    && (keyCode !== 3 /* Enter */)\n                    && (keyCode !== 5 /* Ctrl */)\n                    && (keyCode !== 4 /* Shift */)\n                    && (keyCode !== 6 /* Alt */)\n                    && (keyCode !== 57 /* Meta */)) {\n                    IMMUTABLE_KEY_CODE_TO_CODE[keyCode] = scanCode;\n                }\n            }\n        }\n        if (!seenKeyCode[keyCode]) {\n            seenKeyCode[keyCode] = true;\n            if (!keyCodeStr) {\n                throw new Error(`String representation missing for key code ${keyCode} around scan code ${scanCodeStr}`);\n            }\n            uiMap.define(keyCode, keyCodeStr);\n            userSettingsUSMap.define(keyCode, usUserSettingsLabel || keyCodeStr);\n            userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel || usUserSettingsLabel || keyCodeStr);\n        }\n        if (eventKeyCode) {\n            EVENT_KEY_CODE_MAP[eventKeyCode] = keyCode;\n        }\n        if (vkey) {\n            NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE[vkey] = keyCode;\n        }\n    }\n    // Manually added due to the exclusion above (due to duplication with NumpadEnter)\n    IMMUTABLE_KEY_CODE_TO_CODE[3 /* Enter */] = 46 /* Enter */;\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n    function toElectronAccelerator(keyCode) {\n        if (keyCode >= 93 /* Numpad0 */ && keyCode <= 108 /* NumpadDivide */) {\n            // [Electron Accelerators] Electron is able to parse numpad keys, but unfortunately it\n            // renders them just as regular keys in menus. For example, num0 is rendered as \"0\",\n            // numdiv is rendered as \"/\", numsub is rendered as \"-\".\n            //\n            // This can lead to incredible confusion, as it makes numpad based keybindings indistinguishable\n            // from keybindings based on regular keys.\n            //\n            // We therefore need to fall back to custom rendering for numpad keys.\n            return null;\n        }\n        switch (keyCode) {\n            case 16 /* UpArrow */:\n                return 'Up';\n            case 18 /* DownArrow */:\n                return 'Down';\n            case 15 /* LeftArrow */:\n                return 'Left';\n            case 17 /* RightArrow */:\n                return 'Right';\n        }\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toElectronAccelerator = toElectronAccelerator;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    const chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nexport class ModifierLabelProvider {\n    constructor(mac, windows, linux = windows) {\n        this.modifierLabels = [null]; // index 0 will never me accessed.\n        this.modifierLabels[2 /* Macintosh */] = mac;\n        this.modifierLabels[1 /* Windows */] = windows;\n        this.modifierLabels[3 /* Linux */] = linux;\n    }\n    toLabel(OS, parts, keyLabelProvider) {\n        if (parts.length === 0) {\n            return null;\n        }\n        const result = [];\n        for (let i = 0, len = parts.length; i < len; i++) {\n            const part = parts[i];\n            const keyLabel = keyLabelProvider(part);\n            if (keyLabel === null) {\n                // this keybinding cannot be expressed...\n                return null;\n            }\n            result[i] = _simpleAsString(part, keyLabel, this.modifierLabels[OS]);\n        }\n        return result.join(' ');\n    }\n}\n/**\n * A label provider that prints modifiers in a suitable format for displaying in the UI.\n */\nexport const UILabelProvider = new ModifierLabelProvider({\n    ctrlKey: '\\u2303',\n    shiftKey: '⇧',\n    altKey: '⌥',\n    metaKey: '⌘',\n    separator: '',\n}, {\n    ctrlKey: nls.localize({ key: 'ctrlKey', comment: ['This is the short form for the Control key on the keyboard'] }, \"Ctrl\"),\n    shiftKey: nls.localize({ key: 'shiftKey', comment: ['This is the short form for the Shift key on the keyboard'] }, \"Shift\"),\n    altKey: nls.localize({ key: 'altKey', comment: ['This is the short form for the Alt key on the keyboard'] }, \"Alt\"),\n    metaKey: nls.localize({ key: 'windowsKey', comment: ['This is the short form for the Windows key on the keyboard'] }, \"Windows\"),\n    separator: '+',\n}, {\n    ctrlKey: nls.localize({ key: 'ctrlKey', comment: ['This is the short form for the Control key on the keyboard'] }, \"Ctrl\"),\n    shiftKey: nls.localize({ key: 'shiftKey', comment: ['This is the short form for the Shift key on the keyboard'] }, \"Shift\"),\n    altKey: nls.localize({ key: 'altKey', comment: ['This is the short form for the Alt key on the keyboard'] }, \"Alt\"),\n    metaKey: nls.localize({ key: 'superKey', comment: ['This is the short form for the Super key on the keyboard'] }, \"Super\"),\n    separator: '+',\n});\n/**\n * A label provider that prints modifiers in a suitable format for ARIA.\n */\nexport const AriaLabelProvider = new ModifierLabelProvider({\n    ctrlKey: nls.localize({ key: 'ctrlKey.long', comment: ['This is the long form for the Control key on the keyboard'] }, \"Control\"),\n    shiftKey: nls.localize({ key: 'shiftKey.long', comment: ['This is the long form for the Shift key on the keyboard'] }, \"Shift\"),\n    altKey: nls.localize({ key: 'optKey.long', comment: ['This is the long form for the Alt/Option key on the keyboard'] }, \"Option\"),\n    metaKey: nls.localize({ key: 'cmdKey.long', comment: ['This is the long form for the Command key on the keyboard'] }, \"Command\"),\n    separator: '+',\n}, {\n    ctrlKey: nls.localize({ key: 'ctrlKey.long', comment: ['This is the long form for the Control key on the keyboard'] }, \"Control\"),\n    shiftKey: nls.localize({ key: 'shiftKey.long', comment: ['This is the long form for the Shift key on the keyboard'] }, \"Shift\"),\n    altKey: nls.localize({ key: 'altKey.long', comment: ['This is the long form for the Alt key on the keyboard'] }, \"Alt\"),\n    metaKey: nls.localize({ key: 'windowsKey.long', comment: ['This is the long form for the Windows key on the keyboard'] }, \"Windows\"),\n    separator: '+',\n}, {\n    ctrlKey: nls.localize({ key: 'ctrlKey.long', comment: ['This is the long form for the Control key on the keyboard'] }, \"Control\"),\n    shiftKey: nls.localize({ key: 'shiftKey.long', comment: ['This is the long form for the Shift key on the keyboard'] }, \"Shift\"),\n    altKey: nls.localize({ key: 'altKey.long', comment: ['This is the long form for the Alt key on the keyboard'] }, \"Alt\"),\n    metaKey: nls.localize({ key: 'superKey.long', comment: ['This is the long form for the Super key on the keyboard'] }, \"Super\"),\n    separator: '+',\n});\n/**\n * A label provider that prints modifiers in a suitable format for Electron Accelerators.\n * See https://github.com/electron/electron/blob/master/docs/api/accelerator.md\n */\nexport const ElectronAcceleratorLabelProvider = new ModifierLabelProvider({\n    ctrlKey: 'Ctrl',\n    shiftKey: 'Shift',\n    altKey: 'Alt',\n    metaKey: 'Cmd',\n    separator: '+',\n}, {\n    ctrlKey: 'Ctrl',\n    shiftKey: 'Shift',\n    altKey: 'Alt',\n    metaKey: 'Super',\n    separator: '+',\n});\n/**\n * A label provider that prints modifiers in a suitable format for user settings.\n */\nexport const UserSettingsLabelProvider = new ModifierLabelProvider({\n    ctrlKey: 'ctrl',\n    shiftKey: 'shift',\n    altKey: 'alt',\n    metaKey: 'cmd',\n    separator: '+',\n}, {\n    ctrlKey: 'ctrl',\n    shiftKey: 'shift',\n    altKey: 'alt',\n    metaKey: 'win',\n    separator: '+',\n}, {\n    ctrlKey: 'ctrl',\n    shiftKey: 'shift',\n    altKey: 'alt',\n    metaKey: 'meta',\n    separator: '+',\n});\nfunction _simpleAsString(modifiers, key, labels) {\n    if (key === null) {\n        return '';\n    }\n    const result = [];\n    // translate modifier keys: Ctrl-Shift-Alt-Meta\n    if (modifiers.ctrlKey) {\n        result.push(labels.ctrlKey);\n    }\n    if (modifiers.shiftKey) {\n        result.push(labels.shiftKey);\n    }\n    if (modifiers.altKey) {\n        result.push(labels.altKey);\n    }\n    if (modifiers.metaKey) {\n        result.push(labels.metaKey);\n    }\n    // the actual key\n    if (key !== '') {\n        result.push(key);\n    }\n    return result.join(labels.separator);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nexport function createKeybinding(keybinding, OS) {\n    if (keybinding === 0) {\n        return null;\n    }\n    const firstPart = (keybinding & 0x0000FFFF) >>> 0;\n    const chordPart = (keybinding & 0xFFFF0000) >>> 16;\n    if (chordPart !== 0) {\n        return new ChordKeybinding([\n            createSimpleKeybinding(firstPart, OS),\n            createSimpleKeybinding(chordPart, OS)\n        ]);\n    }\n    return new ChordKeybinding([createSimpleKeybinding(firstPart, OS)]);\n}\nexport function createSimpleKeybinding(keybinding, OS) {\n    const ctrlCmd = (keybinding & 2048 /* CtrlCmd */ ? true : false);\n    const winCtrl = (keybinding & 256 /* WinCtrl */ ? true : false);\n    const ctrlKey = (OS === 2 /* Macintosh */ ? winCtrl : ctrlCmd);\n    const shiftKey = (keybinding & 1024 /* Shift */ ? true : false);\n    const altKey = (keybinding & 512 /* Alt */ ? true : false);\n    const metaKey = (OS === 2 /* Macintosh */ ? ctrlCmd : winCtrl);\n    const keyCode = (keybinding & 255 /* KeyCode */);\n    return new SimpleKeybinding(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\nexport class SimpleKeybinding {\n    constructor(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyCode = keyCode;\n    }\n    equals(other) {\n        return (this.ctrlKey === other.ctrlKey\n            && this.shiftKey === other.shiftKey\n            && this.altKey === other.altKey\n            && this.metaKey === other.metaKey\n            && this.keyCode === other.keyCode);\n    }\n    isModifierKey() {\n        return (this.keyCode === 0 /* Unknown */\n            || this.keyCode === 5 /* Ctrl */\n            || this.keyCode === 57 /* Meta */\n            || this.keyCode === 6 /* Alt */\n            || this.keyCode === 4 /* Shift */);\n    }\n    toChord() {\n        return new ChordKeybinding([this]);\n    }\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    isDuplicateModifierCase() {\n        return ((this.ctrlKey && this.keyCode === 5 /* Ctrl */)\n            || (this.shiftKey && this.keyCode === 4 /* Shift */)\n            || (this.altKey && this.keyCode === 6 /* Alt */)\n            || (this.metaKey && this.keyCode === 57 /* Meta */));\n    }\n}\nexport class ChordKeybinding {\n    constructor(parts) {\n        if (parts.length === 0) {\n            throw illegalArgument(`parts`);\n        }\n        this.parts = parts;\n    }\n}\nexport class ScanCodeBinding {\n    constructor(ctrlKey, shiftKey, altKey, metaKey, scanCode) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.scanCode = scanCode;\n    }\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    isDuplicateModifierCase() {\n        return ((this.ctrlKey && (this.scanCode === 157 /* ControlLeft */ || this.scanCode === 161 /* ControlRight */))\n            || (this.shiftKey && (this.scanCode === 158 /* ShiftLeft */ || this.scanCode === 162 /* ShiftRight */))\n            || (this.altKey && (this.scanCode === 159 /* AltLeft */ || this.scanCode === 163 /* AltRight */))\n            || (this.metaKey && (this.scanCode === 160 /* MetaLeft */ || this.scanCode === 164 /* MetaRight */)));\n    }\n}\nexport class ResolvedKeybindingPart {\n    constructor(ctrlKey, shiftKey, altKey, metaKey, kbLabel, kbAriaLabel) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyLabel = kbLabel;\n        this.keyAriaLabel = kbAriaLabel;\n    }\n}\n/**\n * A resolved keybinding. Can be a simple keybinding or a chord keybinding.\n */\nexport class ResolvedKeybinding {\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { hasDriveLetter, isRootOrDriveLetter } from './extpath.js';\nimport { Schemas } from './network.js';\nimport { isWindows } from './platform.js';\nimport { basename } from './resources.js';\nimport { URI } from './uri.js';\nexport function getBaseLabel(resource) {\n    if (!resource) {\n        return undefined;\n    }\n    if (typeof resource === 'string') {\n        resource = URI.file(resource);\n    }\n    const base = basename(resource) || (resource.scheme === Schemas.file ? resource.fsPath : resource.path) /* can be empty string if '/' is passed in */;\n    // convert c: => C:\n    if (isWindows && isRootOrDriveLetter(base)) {\n        return normalizeDriveLetter(base);\n    }\n    return base;\n}\nexport function normalizeDriveLetter(path, continueAsWindows) {\n    if (hasDriveLetter(path, continueAsWindows)) {\n        return path.charAt(0).toUpperCase() + path.slice(1);\n    }\n    return path;\n}\nlet normalizedUserHomeCached = Object.create(null);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Lazy {\n    constructor(executor) {\n        this.executor = executor;\n        this._didRun = false;\n    }\n    /**\n     * Get the wrapped value.\n     *\n     * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only\n     * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value\n     */\n    getValue() {\n        if (!this._didRun) {\n            try {\n                this._value = this.executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    /**\n     * Get the wrapped value without forcing evaluation.\n     */\n    get rawValue() { return this._value; }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { once } from './functional.js';\nimport { Iterable } from './iterator.js';\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker = null;\nexport function setDisposableTracker(tracker) {\n    disposableTracker = tracker;\n}\nif (TRACK_DISPOSABLES) {\n    const __is_disposable_tracked__ = '__is_disposable_tracked__';\n    setDisposableTracker(new class {\n        trackDisposable(x) {\n            const stack = new Error('Potentially leaked disposable').stack;\n            setTimeout(() => {\n                if (!x[__is_disposable_tracked__]) {\n                    console.log(stack);\n                }\n            }, 3000);\n        }\n        setParent(child, parent) {\n            if (child && child !== Disposable.None) {\n                try {\n                    child[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n        markAsDisposed(disposable) {\n            if (disposable && disposable !== Disposable.None) {\n                try {\n                    disposable[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n        markAsSingleton(disposable) { }\n    });\n}\nfunction trackDisposable(x) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.trackDisposable(x);\n    return x;\n}\nfunction markAsDisposed(disposable) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsDisposed(disposable);\n}\nfunction setParentOfDisposable(child, parent) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.setParent(child, parent);\n}\nfunction setParentOfDisposables(children, parent) {\n    if (!disposableTracker) {\n        return;\n    }\n    for (const child of children) {\n        disposableTracker.setParent(child, parent);\n    }\n}\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton(singleton) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsSingleton(singleton);\n    return singleton;\n}\nexport class MultiDisposeError extends Error {\n    constructor(errors) {\n        super(`Encountered errors while disposing of store. Errors: [${errors.join(', ')}]`);\n        this.errors = errors;\n    }\n}\nexport function isDisposable(thing) {\n    return typeof thing.dispose === 'function' && thing.dispose.length === 0;\n}\nexport function dispose(arg) {\n    if (Iterable.is(arg)) {\n        let errors = [];\n        for (const d of arg) {\n            if (d) {\n                try {\n                    d.dispose();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            }\n        }\n        if (errors.length === 1) {\n            throw errors[0];\n        }\n        else if (errors.length > 1) {\n            throw new MultiDisposeError(errors);\n        }\n        return Array.isArray(arg) ? [] : arg;\n    }\n    else if (arg) {\n        arg.dispose();\n        return arg;\n    }\n}\nexport function combinedDisposable(...disposables) {\n    const parent = toDisposable(() => dispose(disposables));\n    setParentOfDisposables(disposables, parent);\n    return parent;\n}\nexport function toDisposable(fn) {\n    const self = trackDisposable({\n        dispose: once(() => {\n            markAsDisposed(self);\n            fn();\n        })\n    });\n    return self;\n}\nexport class DisposableStore {\n    constructor() {\n        this._toDispose = new Set();\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    /**\n     * Dispose of all registered disposables and mark this object as disposed.\n     *\n     * Any future disposables added to this object will be disposed of on `add`.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clear();\n    }\n    /**\n     * Returns `true` if this object has been disposed\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Dispose of all registered disposables but do not mark this object as disposed.\n     */\n    clear() {\n        try {\n            dispose(this._toDispose.values());\n        }\n        finally {\n            this._toDispose.clear();\n        }\n    }\n    add(o) {\n        if (!o) {\n            return o;\n        }\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        setParentOfDisposable(o, this);\n        if (this._isDisposed) {\n            if (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n                console.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n            }\n        }\n        else {\n            this._toDispose.add(o);\n        }\n        return o;\n    }\n}\nDisposableStore.DISABLE_DISPOSED_WARNING = false;\nexport class Disposable {\n    constructor() {\n        this._store = new DisposableStore();\n        trackDisposable(this);\n        setParentOfDisposable(this._store, this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._store.dispose();\n    }\n    _register(o) {\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        return this._store.add(o);\n    }\n}\nDisposable.None = Object.freeze({ dispose() { } });\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable {\n    constructor() {\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    get value() {\n        return this._isDisposed ? undefined : this._value;\n    }\n    set value(value) {\n        var _a;\n        if (this._isDisposed || value === this._value) {\n            return;\n        }\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        if (value) {\n            setParentOfDisposable(value, this);\n        }\n        this._value = value;\n    }\n    clear() {\n        this.value = undefined;\n    }\n    dispose() {\n        var _a;\n        this._isDisposed = true;\n        markAsDisposed(this);\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._value = undefined;\n    }\n    /**\n     * Clears the value, but does not dispose it.\n     * The old value is returned.\n    */\n    clearAndLeak() {\n        const oldValue = this._value;\n        this._value = undefined;\n        if (oldValue) {\n            setParentOfDisposable(oldValue, null);\n        }\n        return oldValue;\n    }\n}\nexport class ImmortalReference {\n    constructor(object) {\n        this.object = object;\n    }\n    dispose() { }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass Node {\n    constructor(element) {\n        this.element = element;\n        this.next = Node.Undefined;\n        this.prev = Node.Undefined;\n    }\n}\nNode.Undefined = new Node(undefined);\nexport class LinkedList {\n    constructor() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    get size() {\n        return this._size;\n    }\n    isEmpty() {\n        return this._first === Node.Undefined;\n    }\n    clear() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            const next = node.next;\n            node.prev = Node.Undefined;\n            node.next = Node.Undefined;\n            node = next;\n        }\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    unshift(element) {\n        return this._insert(element, false);\n    }\n    push(element) {\n        return this._insert(element, true);\n    }\n    _insert(element, atTheEnd) {\n        const newNode = new Node(element);\n        if (this._first === Node.Undefined) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            const oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            const oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        let didRemove = false;\n        return () => {\n            if (!didRemove) {\n                didRemove = true;\n                this._remove(newNode);\n            }\n        };\n    }\n    shift() {\n        if (this._first === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    }\n    pop() {\n        if (this._last === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._last.element;\n            this._remove(this._last);\n            return res;\n        }\n    }\n    _remove(node) {\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n            // middle\n            const anchor = node.prev;\n            anchor.next = node.next;\n            node.next.prev = anchor;\n        }\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n            // only node\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n        }\n        else if (node.next === Node.Undefined) {\n            // last\n            this._last = this._last.prev;\n            this._last.next = Node.Undefined;\n        }\n        else if (node.prev === Node.Undefined) {\n            // first\n            this._first = this._first.next;\n            this._first.prev = Node.Undefined;\n        }\n        // done\n        this._size -= 1;\n    }\n    *[Symbol.iterator]() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            yield node.element;\n            node = node.next;\n        }\n    }\n}\n","var _a, _b;\nimport { compare, compareIgnoreCase, compareSubstring, compareSubstringIgnoreCase } from './strings.js';\nexport class StringIterator {\n    constructor() {\n        this._value = '';\n        this._pos = 0;\n    }\n    reset(key) {\n        this._value = key;\n        this._pos = 0;\n        return this;\n    }\n    next() {\n        this._pos += 1;\n        return this;\n    }\n    hasNext() {\n        return this._pos < this._value.length - 1;\n    }\n    cmp(a) {\n        const aCode = a.charCodeAt(0);\n        const thisCode = this._value.charCodeAt(this._pos);\n        return aCode - thisCode;\n    }\n    value() {\n        return this._value[this._pos];\n    }\n}\nexport class ConfigKeysIterator {\n    constructor(_caseSensitive = true) {\n        this._caseSensitive = _caseSensitive;\n    }\n    reset(key) {\n        this._value = key;\n        this._from = 0;\n        this._to = 0;\n        return this.next();\n    }\n    hasNext() {\n        return this._to < this._value.length;\n    }\n    next() {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        let justSeps = true;\n        for (; this._to < this._value.length; this._to++) {\n            const ch = this._value.charCodeAt(this._to);\n            if (ch === 46 /* Period */) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    }\n    cmp(a) {\n        return this._caseSensitive\n            ? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n            : compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n    }\n    value() {\n        return this._value.substring(this._from, this._to);\n    }\n}\nexport class PathIterator {\n    constructor(_splitOnBackslash = true, _caseSensitive = true) {\n        this._splitOnBackslash = _splitOnBackslash;\n        this._caseSensitive = _caseSensitive;\n    }\n    reset(key) {\n        this._from = 0;\n        this._to = 0;\n        this._value = key;\n        this._valueLen = key.length;\n        for (let pos = key.length - 1; pos >= 0; pos--, this._valueLen--) {\n            const ch = this._value.charCodeAt(pos);\n            if (!(ch === 47 /* Slash */ || this._splitOnBackslash && ch === 92 /* Backslash */)) {\n                break;\n            }\n        }\n        return this.next();\n    }\n    hasNext() {\n        return this._to < this._valueLen;\n    }\n    next() {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        let justSeps = true;\n        for (; this._to < this._valueLen; this._to++) {\n            const ch = this._value.charCodeAt(this._to);\n            if (ch === 47 /* Slash */ || this._splitOnBackslash && ch === 92 /* Backslash */) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    }\n    cmp(a) {\n        return this._caseSensitive\n            ? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n            : compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n    }\n    value() {\n        return this._value.substring(this._from, this._to);\n    }\n}\nexport class UriIterator {\n    constructor(_ignorePathCasing) {\n        this._ignorePathCasing = _ignorePathCasing;\n        this._states = [];\n        this._stateIdx = 0;\n    }\n    reset(key) {\n        this._value = key;\n        this._states = [];\n        if (this._value.scheme) {\n            this._states.push(1 /* Scheme */);\n        }\n        if (this._value.authority) {\n            this._states.push(2 /* Authority */);\n        }\n        if (this._value.path) {\n            this._pathIterator = new PathIterator(false, !this._ignorePathCasing(key));\n            this._pathIterator.reset(key.path);\n            if (this._pathIterator.value()) {\n                this._states.push(3 /* Path */);\n            }\n        }\n        if (this._value.query) {\n            this._states.push(4 /* Query */);\n        }\n        if (this._value.fragment) {\n            this._states.push(5 /* Fragment */);\n        }\n        this._stateIdx = 0;\n        return this;\n    }\n    next() {\n        if (this._states[this._stateIdx] === 3 /* Path */ && this._pathIterator.hasNext()) {\n            this._pathIterator.next();\n        }\n        else {\n            this._stateIdx += 1;\n        }\n        return this;\n    }\n    hasNext() {\n        return (this._states[this._stateIdx] === 3 /* Path */ && this._pathIterator.hasNext())\n            || this._stateIdx < this._states.length - 1;\n    }\n    cmp(a) {\n        if (this._states[this._stateIdx] === 1 /* Scheme */) {\n            return compareIgnoreCase(a, this._value.scheme);\n        }\n        else if (this._states[this._stateIdx] === 2 /* Authority */) {\n            return compareIgnoreCase(a, this._value.authority);\n        }\n        else if (this._states[this._stateIdx] === 3 /* Path */) {\n            return this._pathIterator.cmp(a);\n        }\n        else if (this._states[this._stateIdx] === 4 /* Query */) {\n            return compare(a, this._value.query);\n        }\n        else if (this._states[this._stateIdx] === 5 /* Fragment */) {\n            return compare(a, this._value.fragment);\n        }\n        throw new Error();\n    }\n    value() {\n        if (this._states[this._stateIdx] === 1 /* Scheme */) {\n            return this._value.scheme;\n        }\n        else if (this._states[this._stateIdx] === 2 /* Authority */) {\n            return this._value.authority;\n        }\n        else if (this._states[this._stateIdx] === 3 /* Path */) {\n            return this._pathIterator.value();\n        }\n        else if (this._states[this._stateIdx] === 4 /* Query */) {\n            return this._value.query;\n        }\n        else if (this._states[this._stateIdx] === 5 /* Fragment */) {\n            return this._value.fragment;\n        }\n        throw new Error();\n    }\n}\nclass TernarySearchTreeNode {\n    constructor() {\n        this.height = 1;\n    }\n    rotateLeft() {\n        const tmp = this.right;\n        this.right = tmp.left;\n        tmp.left = this;\n        this.updateHeight();\n        tmp.updateHeight();\n        return tmp;\n    }\n    rotateRight() {\n        const tmp = this.left;\n        this.left = tmp.right;\n        tmp.right = this;\n        this.updateHeight();\n        tmp.updateHeight();\n        return tmp;\n    }\n    updateHeight() {\n        this.height = 1 + Math.max(this.heightLeft, this.heightRight);\n    }\n    balanceFactor() {\n        return this.heightRight - this.heightLeft;\n    }\n    get heightLeft() {\n        var _c, _d;\n        return (_d = (_c = this.left) === null || _c === void 0 ? void 0 : _c.height) !== null && _d !== void 0 ? _d : 0;\n    }\n    get heightRight() {\n        var _c, _d;\n        return (_d = (_c = this.right) === null || _c === void 0 ? void 0 : _c.height) !== null && _d !== void 0 ? _d : 0;\n    }\n}\nexport class TernarySearchTree {\n    constructor(segments) {\n        this._iter = segments;\n    }\n    static forUris(ignorePathCasing = () => false) {\n        return new TernarySearchTree(new UriIterator(ignorePathCasing));\n    }\n    static forStrings() {\n        return new TernarySearchTree(new StringIterator());\n    }\n    static forConfigKeys() {\n        return new TernarySearchTree(new ConfigKeysIterator());\n    }\n    clear() {\n        this._root = undefined;\n    }\n    set(key, element) {\n        const iter = this._iter.reset(key);\n        let node;\n        if (!this._root) {\n            this._root = new TernarySearchTreeNode();\n            this._root.segment = iter.value();\n        }\n        const stack = [];\n        // find insert_node\n        node = this._root;\n        while (true) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                if (!node.left) {\n                    node.left = new TernarySearchTreeNode();\n                    node.left.segment = iter.value();\n                }\n                stack.push([-1 /* Left */, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                if (!node.right) {\n                    node.right = new TernarySearchTreeNode();\n                    node.right.segment = iter.value();\n                }\n                stack.push([1 /* Right */, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                if (!node.mid) {\n                    node.mid = new TernarySearchTreeNode();\n                    node.mid.segment = iter.value();\n                }\n                stack.push([0 /* Mid */, node]);\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        // set value\n        const oldElement = node.value;\n        node.value = element;\n        node.key = key;\n        // balance\n        for (let i = stack.length - 1; i >= 0; i--) {\n            const node = stack[i][1];\n            node.updateHeight();\n            const bf = node.balanceFactor();\n            if (bf < -1 || bf > 1) {\n                // needs rotate\n                const d1 = stack[i][0];\n                const d2 = stack[i + 1][0];\n                if (d1 === 1 /* Right */ && d2 === 1 /* Right */) {\n                    //right, right -> rotate left\n                    stack[i][1] = node.rotateLeft();\n                }\n                else if (d1 === -1 /* Left */ && d2 === -1 /* Left */) {\n                    // left, left -> rotate right\n                    stack[i][1] = node.rotateRight();\n                }\n                else if (d1 === 1 /* Right */ && d2 === -1 /* Left */) {\n                    // right, left -> double rotate right, left\n                    node.right = stack[i + 1][1] = stack[i + 1][1].rotateRight();\n                    stack[i][1] = node.rotateLeft();\n                }\n                else if (d1 === -1 /* Left */ && d2 === 1 /* Right */) {\n                    // left, right -> double rotate left, right\n                    node.left = stack[i + 1][1] = stack[i + 1][1].rotateLeft();\n                    stack[i][1] = node.rotateRight();\n                }\n                else {\n                    throw new Error();\n                }\n                // patch path to parent\n                if (i > 0) {\n                    switch (stack[i - 1][0]) {\n                        case -1 /* Left */:\n                            stack[i - 1][1].left = stack[i][1];\n                            break;\n                        case 1 /* Right */:\n                            stack[i - 1][1].right = stack[i][1];\n                            break;\n                        case 0 /* Mid */:\n                            stack[i - 1][1].mid = stack[i][1];\n                            break;\n                    }\n                }\n                else {\n                    this._root = stack[0][1];\n                }\n            }\n        }\n        return oldElement;\n    }\n    get(key) {\n        var _c;\n        return (_c = this._getNode(key)) === null || _c === void 0 ? void 0 : _c.value;\n    }\n    _getNode(key) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node;\n    }\n    has(key) {\n        const node = this._getNode(key);\n        return !((node === null || node === void 0 ? void 0 : node.value) === undefined && (node === null || node === void 0 ? void 0 : node.mid) === undefined);\n    }\n    delete(key) {\n        return this._delete(key, false);\n    }\n    deleteSuperstr(key) {\n        return this._delete(key, true);\n    }\n    _delete(key, superStr) {\n        var _c;\n        const iter = this._iter.reset(key);\n        const stack = [];\n        let node = this._root;\n        // find node\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                stack.push([-1 /* Left */, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                stack.push([1 /* Right */, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                stack.push([0 /* Mid */, node]);\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        if (!node) {\n            // node not found\n            return;\n        }\n        if (superStr) {\n            // removing children, reset height\n            node.left = undefined;\n            node.mid = undefined;\n            node.right = undefined;\n            node.height = 1;\n        }\n        else {\n            // removing element\n            node.key = undefined;\n            node.value = undefined;\n        }\n        // BST node removal\n        if (!node.mid && !node.value) {\n            if (node.left && node.right) {\n                // full node\n                const min = this._min(node.right);\n                const { key, value, segment } = min;\n                this._delete(min.key, false);\n                node.key = key;\n                node.value = value;\n                node.segment = segment;\n            }\n            else {\n                // empty or half empty\n                const newChild = (_c = node.left) !== null && _c !== void 0 ? _c : node.right;\n                if (stack.length > 0) {\n                    const [dir, parent] = stack[stack.length - 1];\n                    switch (dir) {\n                        case -1 /* Left */:\n                            parent.left = newChild;\n                            break;\n                        case 0 /* Mid */:\n                            parent.mid = newChild;\n                            break;\n                        case 1 /* Right */:\n                            parent.right = newChild;\n                            break;\n                    }\n                }\n                else {\n                    this._root = newChild;\n                }\n            }\n        }\n        // AVL balance\n        for (let i = stack.length - 1; i >= 0; i--) {\n            const node = stack[i][1];\n            node.updateHeight();\n            const bf = node.balanceFactor();\n            if (bf > 1) {\n                // right heavy\n                if (node.right.balanceFactor() >= 0) {\n                    // right, right -> rotate left\n                    stack[i][1] = node.rotateLeft();\n                }\n                else {\n                    // right, left -> double rotate\n                    node.right = node.right.rotateRight();\n                    stack[i][1] = node.rotateLeft();\n                }\n            }\n            else if (bf < -1) {\n                // left heavy\n                if (node.left.balanceFactor() <= 0) {\n                    // left, left -> rotate right\n                    stack[i][1] = node.rotateRight();\n                }\n                else {\n                    // left, right -> double rotate\n                    node.left = node.left.rotateLeft();\n                    stack[i][1] = node.rotateRight();\n                }\n            }\n            // patch path to parent\n            if (i > 0) {\n                switch (stack[i - 1][0]) {\n                    case -1 /* Left */:\n                        stack[i - 1][1].left = stack[i][1];\n                        break;\n                    case 1 /* Right */:\n                        stack[i - 1][1].right = stack[i][1];\n                        break;\n                    case 0 /* Mid */:\n                        stack[i - 1][1].mid = stack[i][1];\n                        break;\n                }\n            }\n            else {\n                this._root = stack[0][1];\n            }\n        }\n    }\n    _min(node) {\n        while (node.left) {\n            node = node.left;\n        }\n        return node;\n    }\n    findSubstr(key) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        let candidate = undefined;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                candidate = node.value || candidate;\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node && node.value || candidate;\n    }\n    findSuperstr(key) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                // collect\n                if (!node.mid) {\n                    return undefined;\n                }\n                else {\n                    return this._entries(node.mid);\n                }\n            }\n        }\n        return undefined;\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key);\n        }\n    }\n    *[Symbol.iterator]() {\n        yield* this._entries(this._root);\n    }\n    *_entries(node) {\n        // DFS\n        if (!node) {\n            return;\n        }\n        if (node.left) {\n            yield* this._entries(node.left);\n        }\n        if (node.value) {\n            yield [node.key, node.value];\n        }\n        if (node.mid) {\n            yield* this._entries(node.mid);\n        }\n        if (node.right) {\n            yield* this._entries(node.right);\n        }\n    }\n}\nclass ResourceMapEntry {\n    constructor(uri, value) {\n        this.uri = uri;\n        this.value = value;\n    }\n}\nexport class ResourceMap {\n    constructor(mapOrKeyFn, toKey) {\n        this[_a] = 'ResourceMap';\n        if (mapOrKeyFn instanceof ResourceMap) {\n            this.map = new Map(mapOrKeyFn.map);\n            this.toKey = toKey !== null && toKey !== void 0 ? toKey : ResourceMap.defaultToKey;\n        }\n        else {\n            this.map = new Map();\n            this.toKey = mapOrKeyFn !== null && mapOrKeyFn !== void 0 ? mapOrKeyFn : ResourceMap.defaultToKey;\n        }\n    }\n    set(resource, value) {\n        this.map.set(this.toKey(resource), new ResourceMapEntry(resource, value));\n        return this;\n    }\n    get(resource) {\n        var _c;\n        return (_c = this.map.get(this.toKey(resource))) === null || _c === void 0 ? void 0 : _c.value;\n    }\n    has(resource) {\n        return this.map.has(this.toKey(resource));\n    }\n    get size() {\n        return this.map.size;\n    }\n    clear() {\n        this.map.clear();\n    }\n    delete(resource) {\n        return this.map.delete(this.toKey(resource));\n    }\n    forEach(clb, thisArg) {\n        if (typeof thisArg !== 'undefined') {\n            clb = clb.bind(thisArg);\n        }\n        for (let [_, entry] of this.map) {\n            clb(entry.value, entry.uri, this);\n        }\n    }\n    *values() {\n        for (let entry of this.map.values()) {\n            yield entry.value;\n        }\n    }\n    *keys() {\n        for (let entry of this.map.values()) {\n            yield entry.uri;\n        }\n    }\n    *entries() {\n        for (let entry of this.map.values()) {\n            yield [entry.uri, entry.value];\n        }\n    }\n    *[(_a = Symbol.toStringTag, Symbol.iterator)]() {\n        for (let [, entry] of this.map) {\n            yield [entry.uri, entry.value];\n        }\n    }\n}\nResourceMap.defaultToKey = (resource) => resource.toString();\nexport class LinkedMap {\n    constructor() {\n        this[_b] = 'LinkedMap';\n        this._map = new Map();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state = 0;\n    }\n    clear() {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state++;\n    }\n    isEmpty() {\n        return !this._head && !this._tail;\n    }\n    get size() {\n        return this._size;\n    }\n    get first() {\n        var _c;\n        return (_c = this._head) === null || _c === void 0 ? void 0 : _c.value;\n    }\n    get last() {\n        var _c;\n        return (_c = this._tail) === null || _c === void 0 ? void 0 : _c.value;\n    }\n    has(key) {\n        return this._map.has(key);\n    }\n    get(key, touch = 0 /* None */) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== 0 /* None */) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    }\n    set(key, value, touch = 0 /* None */) {\n        let item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== 0 /* None */) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key, value, next: undefined, previous: undefined };\n            switch (touch) {\n                case 0 /* None */:\n                    this.addItemLast(item);\n                    break;\n                case 1 /* AsOld */:\n                    this.addItemFirst(item);\n                    break;\n                case 2 /* AsNew */:\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n        return this;\n    }\n    delete(key) {\n        return !!this.remove(key);\n    }\n    remove(key) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    shift() {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        const item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    forEach(callbackfn, thisArg) {\n        const state = this._state;\n        let current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            if (this._state !== state) {\n                throw new Error(`LinkedMap got modified during iteration.`);\n            }\n            current = current.next;\n        }\n    }\n    keys() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    values() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    entries() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: [current.key, current.value], done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    [(_b = Symbol.toStringTag, Symbol.iterator)]() {\n        return this.entries();\n    }\n    trimOld(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._head;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        if (current) {\n            current.previous = undefined;\n        }\n        this._state++;\n    }\n    addItemFirst(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n        this._state++;\n    }\n    addItemLast(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n        this._state++;\n    }\n    removeItem(item) {\n        if (item === this._head && item === this._tail) {\n            this._head = undefined;\n            this._tail = undefined;\n        }\n        else if (item === this._head) {\n            // This can only happen if size === 1 which is handled\n            // by the case above.\n            if (!item.next) {\n                throw new Error('Invalid list');\n            }\n            item.next.previous = undefined;\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            // This can only happen if size === 1 which is handled\n            // by the case above.\n            if (!item.previous) {\n                throw new Error('Invalid list');\n            }\n            item.previous.next = undefined;\n            this._tail = item.previous;\n        }\n        else {\n            const next = item.next;\n            const previous = item.previous;\n            if (!next || !previous) {\n                throw new Error('Invalid list');\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n        item.next = undefined;\n        item.previous = undefined;\n        this._state++;\n    }\n    touch(item, touch) {\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        if ((touch !== 1 /* AsOld */ && touch !== 2 /* AsNew */)) {\n            return;\n        }\n        if (touch === 1 /* AsOld */) {\n            if (item === this._head) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item\n            if (item === this._tail) {\n                // previous must be defined since item was not head but is tail\n                // So there are more than on item in the map\n                previous.next = undefined;\n                this._tail = previous;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            // Insert the node at head\n            item.previous = undefined;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n            this._state++;\n        }\n        else if (touch === 2 /* AsNew */) {\n            if (item === this._tail) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item.\n            if (item === this._head) {\n                // next must be defined since item was not tail but is head\n                // So there are more than on item in the map\n                next.previous = undefined;\n                this._head = next;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = undefined;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n            this._state++;\n        }\n    }\n    toJSON() {\n        const data = [];\n        this.forEach((value, key) => {\n            data.push([key, value]);\n        });\n        return data;\n    }\n    fromJSON(data) {\n        this.clear();\n        for (const [key, value] of data) {\n            this.set(key, value);\n        }\n    }\n}\nexport class LRUCache extends LinkedMap {\n    constructor(limit, ratio = 1) {\n        super();\n        this._limit = limit;\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(limit) {\n        this._limit = limit;\n        this.checkTrim();\n    }\n    get(key, touch = 2 /* AsNew */) {\n        return super.get(key, touch);\n    }\n    peek(key) {\n        return super.get(key, 0 /* None */);\n    }\n    set(key, value) {\n        super.set(key, value, 2 /* AsNew */);\n        this.checkTrim();\n        return this;\n    }\n    checkTrim() {\n        if (this.size > this._limit) {\n            this.trimOld(Math.round(this._limit * this._ratio));\n        }\n    }\n}\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n// ESM-uncomment-begin\nlet __marked_exports = {};\n(function() {\n  function define(deps, factory) {\n    factory(__marked_exports);\n  }\n  define.amd = true;\n// ESM-uncomment-end\n\n (function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.marked = {}));\n})(this, (function (exports) { 'use strict';\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  function getDefaults() {\n    return {\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n  exports.defaults = getDefaults();\n  function changeDefaults(newDefaults) {\n    exports.defaults = newDefaults;\n  }\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n  var caret = /(^|[^\\[])\\^/g;\n  function edit(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0; // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n\n    if (!cells[0].trim()) {\n      cells.shift();\n    }\n\n    if (!cells[cells.length - 1].trim()) {\n      cells.pop();\n    }\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  function outputLink(cap, link, raw, lexer) {\n    var href = link.href;\n    var title = link.title ? escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      lexer.state.inLink = true;\n      var token = {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text,\n        tokens: lexer.inlineTokens(text, [])\n      };\n      lexer.state.inLink = false;\n      return token;\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap && cap[0].length > 0) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text,\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          tokens: this.lexer.blockTokens(text, []),\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly;\n        var bull = cap[1].trim();\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: '',\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        };\n        bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n\n        if (this.options.pedantic) {\n          bull = isordered ? bull : '[*+-]';\n        } // Get next list item\n\n\n        var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?: [^\\\\n]*)?(?:\\\\n|$))\"); // Check if current bullet point can start a new List Item\n\n        while (src) {\n          endEarly = false;\n\n          if (!(cap = itemRegex.exec(src))) {\n            break;\n          }\n\n          if (this.rules.block.hr.test(src)) {\n            // End list if bullet was actually HR (possibly move into itemRegex?)\n            break;\n          }\n\n          raw = cap[0];\n          src = src.substring(raw.length);\n          line = cap[2].split('\\n', 1)[0];\n          nextLine = src.split('\\n', 1)[0];\n\n          if (this.options.pedantic) {\n            indent = 2;\n            itemContents = line.trimLeft();\n          } else {\n            indent = cap[2].search(/[^ ]/); // Find first non-space char\n\n            indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n\n            itemContents = line.slice(indent);\n            indent += cap[1].length;\n          }\n\n          blankLine = false;\n\n          if (!line && /^ *$/.test(nextLine)) {\n            // Items begin with at most one blank line\n            raw += nextLine + '\\n';\n            src = src.substring(nextLine.length + 1);\n            endEarly = true;\n          }\n\n          if (!endEarly) {\n            var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])\"); // Check if following lines should be included in List Item\n\n            while (src) {\n              rawLine = src.split('\\n', 1)[0];\n              line = rawLine; // Re-align to follow commonmark nesting rules\n\n            if (this.options.pedantic) {\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            } // End list item if found start of new bullet\n\n\n            if (nextBulletRegex.test(line)) {\n              break;\n              }\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) {\n                // Dedent if possible\n              itemContents += '\\n' + line.slice(indent);\n              } else if (!blankLine) {\n                // Until blank line, item doesn't need indentation\n                itemContents += '\\n' + line;\n            } else {\n                // Otherwise, improper indentation ends this item\n              break;\n            }\n\n              if (!blankLine && !line.trim()) {\n                // Check if current line is blank\n                blankLine = true;\n              }\n\n              raw += rawLine + '\\n';\n              src = src.substring(rawLine.length + 1);\n            }\n          }\n\n          if (!list.loose) {\n            // If the previous item ended with a blank line, the list is loose\n            if (endsWithBlankLine) {\n              list.loose = true;\n            } else if (/\\n *\\n *$/.test(raw)) {\n              endsWithBlankLine = true;\n            }\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.exec(itemContents);\n\n            if (istask) {\n              ischecked = istask[0] !== '[ ] ';\n              itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: !!istask,\n            checked: ischecked,\n            loose: false,\n            text: itemContents\n          });\n          list.raw += raw;\n        } // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n\n\n        list.items[list.items.length - 1].raw = raw.trimRight();\n        list.items[list.items.length - 1].text = itemContents.trimRight();\n        list.raw = list.raw.trimRight();\n        var l = list.items.length; // Item child tokens handled here at end because we needed to have the final item to trim it first\n\n        for (i = 0; i < l; i++) {\n          this.lexer.state.top = false;\n          list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n          var spacers = list.items[i].tokens.filter(function (t) {\n            return t.type === 'space';\n          });\n          var hasMultipleLineBreaks = spacers.every(function (t) {\n            var chars = t.raw.split('');\n            var lineBreaks = 0;\n\n            for (var _iterator = _createForOfIteratorHelperLoose(chars), _step; !(_step = _iterator()).done;) {\n              var _char = _step.value;\n\n              if (_char === '\\n') {\n                lineBreaks += 1;\n              }\n\n              if (lineBreaks > 1) {\n                return true;\n              }\n            }\n\n            return false;\n          });\n\n          if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n            // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n            list.loose = true;\n            list.items[i].loose = true;\n          }\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        };\n\n        if (this.options.sanitize) {\n          token.type = 'paragraph';\n          token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n          token.tokens = [];\n          this.lexer.inline(token.text, token.tokens);\n        }\n\n        return token;\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1]).map(function (c) {\n            return {\n              text: c\n            };\n          }),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          rows: cap[3] ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i, j, k, row;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.rows.length;\n\n          for (i = 0; i < l; i++) {\n            item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n              return {\n                text: c\n              };\n            });\n          } // parse child tokens inside headers and cells\n          // header child tokens\n\n\n          l = item.header.length;\n\n          for (j = 0; j < l; j++) {\n            item.header[j].tokens = [];\n            this.lexer.inlineTokens(item.header[j].text, item.header[j].tokens);\n          } // cell child tokens\n\n\n          l = item.rows.length;\n\n          for (j = 0; j < l; j++) {\n            row = item.rows[j];\n\n            for (k = 0; k < row.length; k++) {\n              row[k].tokens = [];\n              this.lexer.inlineTokens(row[k].text, row[k].tokens);\n            }\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.escape = function escape$1(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n          this.lexer.state.inLink = true;\n        } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.lexer.state.inLink = false;\n        }\n\n        if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = true;\n        } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: this.lexer.state.inLink,\n          inRawBlock: this.lexer.state.inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0], this.lexer);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0], this.lexer);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDF70-\\uDF81\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE70-\\uDEBE\\uDEC0-\\uDEC9\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)\n\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // Remove extra characters. *a*** -> *a*\n\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***\n\n          if (Math.min(lLength, rLength) % 2) {\n            var _text = src.slice(1, lLength + match.index + rLength);\n\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: _text,\n              tokens: this.lexer.inlineTokens(_text, [])\n            };\n          } // Create 'strong' if smallest delimiter has even char count. **a***\n\n\n          var text = src.slice(2, lLength + match.index + rLength - 1);\n          return {\n            type: 'strong',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text: text,\n            tokens: this.lexer.inlineTokens(text, [])\n          };\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2],\n          tokens: this.lexer.inlineTokens(cap[2], [])\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (this.lexer.state.inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        } else {\n          text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)( [^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.listItemStart = edit(/^( *)(bull) */).replace('bull', block.bullet).getRegex();\n  block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '').replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.table = edit(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge({}, block.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n    nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //        () Skip orphan delim inside strong    (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit(inline.reflink).replace('label', inline._label).replace('ref', block._label).getRegex();\n  inline.nolink = edit(inline.nolink).replace('ref', block._label).getRegex();\n  inline.reflinkSearch = edit(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || exports.defaults;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      this.tokenizer.lexer = this;\n      this.inlineQueue = [];\n      this.state = {\n        inLink: false,\n        inRawBlock: false,\n        top: true\n      };\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens);\n      var next;\n\n      while (next = this.inlineQueue.shift()) {\n        this.inlineTokens(next.src, next.tokens);\n      }\n\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens) {\n      var _this = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/^ +$/gm, '');\n      }\n\n      var token, lastToken, cutSrc, lastParagraphClipped;\n\n      while (src) {\n        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // newline\n\n\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.length === 1 && tokens.length > 0) {\n            // if there's a single \\n as a spacer, it's terminating the last line,\n            // so move it there so that we don't get unecessary paragraph tags\n            tokens[tokens.length - 1].raw += '\\n';\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (token = this.tokenizer.def(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.raw;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startBlock) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      this.state.top = true;\n      return tokens;\n    };\n\n    _proto.inline = function inline(src, tokens) {\n      this.inlineQueue.push({\n        src: src,\n        tokens: tokens\n      });\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens) {\n      var _this2 = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // extensions\n\n        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this2\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // escape\n\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startInline) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  /**\n   * Renderer\n   */\n\n  var Renderer = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} options\n     * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || exports.defaults;\n      this.options.renderer = this.options.renderer || new Renderer();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer();\n      this.slugger = new Slugger();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.rows.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.rows[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = exports.defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var opts = merge.apply(void 0, [{}].concat(args));\n    var extensions = marked.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    var hasExtensions;\n    args.forEach(function (pack) {\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        hasExtensions = true;\n        pack.extensions.forEach(function (ext) {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n\n          if (ext.renderer) {\n            // Renderer extensions\n            var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function () {\n                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n\n                var ret = ext.renderer.apply(this, args);\n\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n\n          if (ext.tokenizer) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n\n          if (ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n      } // ==-- Parse \"overwrite\" extensions --== //\n\n\n      if (pack.renderer) {\n        (function () {\n          var renderer = marked.defaults.renderer || new Renderer();\n\n          var _loop = function _loop(prop) {\n            var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false\n\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n\n              var ret = pack.renderer[prop].apply(renderer, args);\n\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.renderer) {\n            _loop(prop);\n          }\n\n          opts.renderer = renderer;\n        })();\n      }\n\n      if (pack.tokenizer) {\n        (function () {\n          var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n          var _loop2 = function _loop2(prop) {\n            var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false\n\n            tokenizer[prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n\n              var ret = pack.tokenizer[prop].apply(tokenizer, args);\n\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.tokenizer) {\n            _loop2(prop);\n          }\n\n          opts.tokenizer = tokenizer;\n        })();\n      } // ==-- Parse WalkTokens extensions --== //\n\n\n      if (pack.walkTokens) {\n        var _walkTokens = marked.defaults.walkTokens;\n\n        opts.walkTokens = function (token) {\n          pack.walkTokens.call(this, token);\n\n          if (_walkTokens) {\n            _walkTokens.call(this, token);\n          }\n        };\n      }\n\n      if (hasExtensions) {\n        opts.extensions = extensions;\n      }\n\n      marked.setOptions(opts);\n    });\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    var _loop3 = function _loop3() {\n      var token = _step.value;\n      callback.call(marked, token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell.tokens, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell.tokens, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n              // Walk any extensions\n              marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                marked.walkTokens(token[childTokens], callback);\n              });\n            } else if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      _loop3();\n    }\n  };\n  /**\n   * Parse Inline\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var options = marked.options;\n  var setOptions = marked.setOptions;\n  var use = marked.use;\n  var walkTokens = marked.walkTokens;\n  var parseInline = marked.parseInline;\n  var parse = marked;\n  var parser = Parser.parse;\n  var lexer = Lexer.lex;\n\n  exports.Lexer = Lexer;\n  exports.Parser = Parser;\n  exports.Renderer = Renderer;\n  exports.Slugger = Slugger;\n  exports.TextRenderer = TextRenderer;\n  exports.Tokenizer = Tokenizer;\n  exports.getDefaults = getDefaults;\n  exports.lexer = lexer;\n  exports.marked = marked;\n  exports.options = options;\n  exports.parse = parse;\n  exports.parseInline = parseInline;\n  exports.parser = parser;\n  exports.setOptions = setOptions;\n  exports.use = use;\n  exports.walkTokens = walkTokens;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n}));\n\n// ESM-uncomment-begin\n})();\nexport var marked = (__marked_exports || exports);\n// ESM-uncomment-end\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { VSBuffer } from './buffer.js';\nimport { URI } from './uri.js';\nexport function parse(text) {\n    let data = JSON.parse(text);\n    data = revive(data);\n    return data;\n}\nexport function revive(obj, depth = 0) {\n    if (!obj || depth > 200) {\n        return obj;\n    }\n    if (typeof obj === 'object') {\n        switch (obj.$mid) {\n            case 1 /* Uri */: return URI.revive(obj);\n            case 2 /* Regexp */: return new RegExp(obj.source, obj.flags);\n            case 14 /* Date */: return new Date(obj.source);\n        }\n        if (obj instanceof VSBuffer\n            || obj instanceof Uint8Array) {\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            for (let i = 0; i < obj.length; ++i) {\n                obj[i] = revive(obj[i], depth + 1);\n            }\n        }\n        else {\n            // walk object\n            for (const key in obj) {\n                if (Object.hasOwnProperty.call(obj, key)) {\n                    obj[key] = revive(obj[key], depth + 1);\n                }\n            }\n        }\n    }\n    return obj;\n}\n","export var Mimes;\n(function (Mimes) {\n    Mimes.text = 'text/plain';\n    Mimes.binary = 'application/octet-stream';\n    Mimes.unknown = 'application/unknown';\n    Mimes.markdown = 'text/markdown';\n    Mimes.latex = 'text/latex';\n})(Mimes || (Mimes = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as platform from './platform.js';\nimport { URI } from './uri.js';\nexport var Schemas;\n(function (Schemas) {\n    /**\n     * A schema that is used for models that exist in memory\n     * only and that have no correspondence on a server or such.\n     */\n    Schemas.inMemory = 'inmemory';\n    /**\n     * A schema that is used for setting files\n     */\n    Schemas.vscode = 'vscode';\n    /**\n     * A schema that is used for internal private files\n     */\n    Schemas.internal = 'private';\n    /**\n     * A walk-through document.\n     */\n    Schemas.walkThrough = 'walkThrough';\n    /**\n     * An embedded code snippet.\n     */\n    Schemas.walkThroughSnippet = 'walkThroughSnippet';\n    Schemas.http = 'http';\n    Schemas.https = 'https';\n    Schemas.file = 'file';\n    Schemas.mailto = 'mailto';\n    Schemas.untitled = 'untitled';\n    Schemas.data = 'data';\n    Schemas.command = 'command';\n    Schemas.vscodeRemote = 'vscode-remote';\n    Schemas.vscodeRemoteResource = 'vscode-remote-resource';\n    Schemas.userData = 'vscode-userdata';\n    Schemas.vscodeCustomEditor = 'vscode-custom-editor';\n    Schemas.vscodeNotebook = 'vscode-notebook';\n    Schemas.vscodeNotebookCell = 'vscode-notebook-cell';\n    Schemas.vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n    Schemas.vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n    Schemas.vscodeInteractive = 'vscode-interactive';\n    Schemas.vscodeInteractiveInput = 'vscode-interactive-input';\n    Schemas.vscodeSettings = 'vscode-settings';\n    Schemas.vscodeWorkspaceTrust = 'vscode-workspace-trust';\n    Schemas.vscodeTerminal = 'vscode-terminal';\n    /**\n     * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n     */\n    Schemas.webviewPanel = 'webview-panel';\n    /**\n     * Scheme used for loading the wrapper html and script in webviews.\n     */\n    Schemas.vscodeWebview = 'vscode-webview';\n    /**\n     * Scheme used for extension pages\n     */\n    Schemas.extension = 'extension';\n    /**\n     * Scheme used as a replacement of `file` scheme to load\n     * files with our custom protocol handler (desktop only).\n     */\n    Schemas.vscodeFileResource = 'vscode-file';\n    /**\n     * Scheme used for temporary resources\n     */\n    Schemas.tmp = 'tmp';\n    /**\n     * Scheme used vs live share\n     */\n    Schemas.vsls = 'vsls';\n})(Schemas || (Schemas = {}));\nexport const connectionTokenQueryName = 'tkn';\nclass RemoteAuthoritiesImpl {\n    constructor() {\n        this._hosts = Object.create(null);\n        this._ports = Object.create(null);\n        this._connectionTokens = Object.create(null);\n        this._preferredWebSchema = 'http';\n        this._delegate = null;\n    }\n    setPreferredWebSchema(schema) {\n        this._preferredWebSchema = schema;\n    }\n    rewrite(uri) {\n        if (this._delegate) {\n            return this._delegate(uri);\n        }\n        const authority = uri.authority;\n        let host = this._hosts[authority];\n        if (host && host.indexOf(':') !== -1) {\n            host = `[${host}]`;\n        }\n        const port = this._ports[authority];\n        const connectionToken = this._connectionTokens[authority];\n        let query = `path=${encodeURIComponent(uri.path)}`;\n        if (typeof connectionToken === 'string') {\n            query += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n        }\n        return URI.from({\n            scheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n            authority: `${host}:${port}`,\n            path: `/vscode-remote-resource`,\n            query\n        });\n    }\n}\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\nclass FileAccessImpl {\n    asBrowserUri(uriOrModule, moduleIdToUrl) {\n        const uri = this.toUri(uriOrModule, moduleIdToUrl);\n        // Handle remote URIs via `RemoteAuthorities`\n        if (uri.scheme === Schemas.vscodeRemote) {\n            return RemoteAuthorities.rewrite(uri);\n        }\n        // Convert to `vscode-file` resource..\n        if (\n        // ...only ever for `file` resources\n        uri.scheme === Schemas.file &&\n            (\n            // ...and we run in native environments\n            platform.isNative ||\n                // ...or web worker extensions on desktop\n                (typeof platform.globals.importScripts === 'function' && platform.globals.origin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`))) {\n            return uri.with({\n                scheme: Schemas.vscodeFileResource,\n                // We need to provide an authority here so that it can serve\n                // as origin for network and loading matters in chromium.\n                // If the URI is not coming with an authority already, we\n                // add our own\n                authority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n                query: null,\n                fragment: null\n            });\n        }\n        return uri;\n    }\n    toUri(uriOrModule, moduleIdToUrl) {\n        if (URI.isUri(uriOrModule)) {\n            return uriOrModule;\n        }\n        return URI.parse(moduleIdToUrl.toUrl(uriOrModule));\n    }\n}\nFileAccessImpl.FALLBACK_AUTHORITY = 'vscode-app';\nexport const FileAccess = new FileAccessImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\nexport class MovingAverage {\n    constructor() {\n        this._n = 1;\n        this._val = 0;\n    }\n    update(value) {\n        this._val = this._val + (value - this._val) / this._n;\n        this._n += 1;\n        return this._val;\n    }\n    get value() {\n        return this._val;\n    }\n}\nexport class SlidingWindowAverage {\n    constructor(size) {\n        this._n = 0;\n        this._val = 0;\n        this._values = [];\n        this._index = 0;\n        this._sum = 0;\n        this._values = new Array(size);\n        this._values.fill(0, 0, size);\n    }\n    update(value) {\n        const oldValue = this._values[this._index];\n        this._values[this._index] = value;\n        this._index = (this._index + 1) % this._values.length;\n        this._sum -= oldValue;\n        this._sum += value;\n        if (this._n < this._values.length) {\n            this._n += 1;\n        }\n        this._val = this._sum / this._n;\n        return this._val;\n    }\n    get value() {\n        return this._val;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isArray, isObject, isUndefinedOrNull } from './types.js';\nexport function deepClone(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    if (obj instanceof RegExp) {\n        // See https://github.com/microsoft/TypeScript/issues/10990\n        return obj;\n    }\n    const result = Array.isArray(obj) ? [] : {};\n    Object.keys(obj).forEach((key) => {\n        if (obj[key] && typeof obj[key] === 'object') {\n            result[key] = deepClone(obj[key]);\n        }\n        else {\n            result[key] = obj[key];\n        }\n    });\n    return result;\n}\nexport function deepFreeze(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    const stack = [obj];\n    while (stack.length > 0) {\n        const obj = stack.shift();\n        Object.freeze(obj);\n        for (const key in obj) {\n            if (_hasOwnProperty.call(obj, key)) {\n                const prop = obj[key];\n                if (typeof prop === 'object' && !Object.isFrozen(prop)) {\n                    stack.push(prop);\n                }\n            }\n        }\n    }\n    return obj;\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function cloneAndChange(obj, changer) {\n    return _cloneAndChange(obj, changer, new Set());\n}\nfunction _cloneAndChange(obj, changer, seen) {\n    if (isUndefinedOrNull(obj)) {\n        return obj;\n    }\n    const changed = changer(obj);\n    if (typeof changed !== 'undefined') {\n        return changed;\n    }\n    if (isArray(obj)) {\n        const r1 = [];\n        for (const e of obj) {\n            r1.push(_cloneAndChange(e, changer, seen));\n        }\n        return r1;\n    }\n    if (isObject(obj)) {\n        if (seen.has(obj)) {\n            throw new Error('Cannot clone recursive data-structure');\n        }\n        seen.add(obj);\n        const r2 = {};\n        for (let i2 in obj) {\n            if (_hasOwnProperty.call(obj, i2)) {\n                r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n            }\n        }\n        seen.delete(obj);\n        return r2;\n    }\n    return obj;\n}\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination, source, overwrite = true) {\n    if (!isObject(destination)) {\n        return source;\n    }\n    if (isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (key in destination) {\n                if (overwrite) {\n                    if (isObject(destination[key]) && isObject(source[key])) {\n                        mixin(destination[key], source[key], overwrite);\n                    }\n                    else {\n                        destination[key] = source[key];\n                    }\n                }\n            }\n            else {\n                destination[key] = source[key];\n            }\n        });\n    }\n    return destination;\n}\nexport function equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    let i;\n    let key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        const oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        const otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function getOrDefault(obj, fn, defaultValue) {\n    const result = fn(obj);\n    return typeof result === 'undefined' ? defaultValue : result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals, isMacintosh, isWindows } from './platform.js';\nlet safeProcess;\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    const sandboxProcess = globals.vscode.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get arch() { return sandboxProcess.arch; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); }\n    };\n}\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get arch() { return process.arch; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n    };\n}\n// Web environment\nelse {\n    safeProcess = {\n        // Supported\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        get arch() { return undefined; /* arch is undefined in web */ },\n        // Unsupported\n        get env() { return {}; },\n        cwd() { return '/'; }\n    };\n}\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n */\nexport const cwd = safeProcess.cwd;\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v14.16.0/lib/path.js\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nimport * as process from './process.js';\nconst CHAR_UPPERCASE_A = 65; /* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\nclass ErrorInvalidArgType extends Error {\n    constructor(name, expected, actual) {\n        // determiner: 'must be' or 'must not be'\n        let determiner;\n        if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n            determiner = 'must not be';\n            expected = expected.replace(/^not /, '');\n        }\n        else {\n            determiner = 'must be';\n        }\n        const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n        let msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n        msg += `. Received type ${typeof actual}`;\n        super(msg);\n        this.code = 'ERR_INVALID_ARG_TYPE';\n    }\n}\nfunction validateString(value, name) {\n    if (typeof value !== 'string') {\n        throw new ErrorInvalidArgType(name, 'string', value);\n    }\n}\nfunction isPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\nfunction isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\nfunction isWindowsDeviceRoot(code) {\n    return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n        (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code = 0;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (isPathSeparator(code)) {\n            break;\n        }\n        else {\n            code = CHAR_FORWARD_SLASH;\n        }\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) {\n                // NOOP\n            }\n            else if (dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = '';\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0, lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length !== 0) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    res += res.length > 0 ? `${separator}..` : '..';\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0) {\n                    res += `${separator}${path.slice(lastSlash + 1, i)}`;\n                }\n                else {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nfunction _format(sep, pathObject) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n        throw new ErrorInvalidArgType('pathObject', 'Object', pathObject);\n    }\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base ||\n        `${pathObject.name || ''}${pathObject.ext || ''}`;\n    if (!dir) {\n        return base;\n    }\n    return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\nexport const win32 = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedDevice = '';\n        let resolvedTail = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1; i--) {\n            let path;\n            if (i >= 0) {\n                path = pathSegments[i];\n                validateString(path, 'path');\n                // Skip empty entries\n                if (path.length === 0) {\n                    continue;\n                }\n            }\n            else if (resolvedDevice.length === 0) {\n                path = process.cwd();\n            }\n            else {\n                // Windows has the concept of drive-specific current working\n                // directories. If we've resolved a drive letter but not yet an\n                // absolute path, get cwd for that drive, or the process cwd if\n                // the drive cwd is not available. We're sure the device is not\n                // a UNC path at this points, because UNC paths are always absolute.\n                path = process.env[`=${resolvedDevice}`] || process.cwd();\n                // Verify that a cwd was found and that it actually points\n                // to our drive. If not, default to the drive's root.\n                if (path === undefined ||\n                    (path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n                        path.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n                    path = `${resolvedDevice}\\\\`;\n                }\n            }\n            const len = path.length;\n            let rootEnd = 0;\n            let device = '';\n            let isAbsolute = false;\n            const code = path.charCodeAt(0);\n            // Try to match a root\n            if (len === 1) {\n                if (isPathSeparator(code)) {\n                    // `path` contains just a path separator\n                    rootEnd = 1;\n                    isAbsolute = true;\n                }\n            }\n            else if (isPathSeparator(code)) {\n                // Possible UNC root\n                // If we started with a separator, we know we at least have an\n                // absolute path of some kind (UNC or otherwise)\n                isAbsolute = true;\n                if (isPathSeparator(path.charCodeAt(1))) {\n                    // Matched double path separator at beginning\n                    let j = 2;\n                    let last = j;\n                    // Match 1 or more non-path separators\n                    while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        const firstPart = path.slice(last, j);\n                        // Matched!\n                        last = j;\n                        // Match 1 or more path separators\n                        while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j < len && j !== last) {\n                            // Matched!\n                            last = j;\n                            // Match 1 or more non-path separators\n                            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                                j++;\n                            }\n                            if (j === len || j !== last) {\n                                // We matched a UNC root\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                                rootEnd = j;\n                            }\n                        }\n                    }\n                }\n                else {\n                    rootEnd = 1;\n                }\n            }\n            else if (isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON) {\n                // Possible device root\n                device = path.slice(0, 2);\n                rootEnd = 2;\n                if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                    // Treat separator following drive name as an absolute path\n                    // indicator\n                    isAbsolute = true;\n                    rootEnd = 3;\n                }\n            }\n            if (device.length > 0) {\n                if (resolvedDevice.length > 0) {\n                    if (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n                        // This path points to another device so it is not applicable\n                        continue;\n                    }\n                }\n                else {\n                    resolvedDevice = device;\n                }\n            }\n            if (resolvedAbsolute) {\n                if (resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n            else {\n                resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n                resolvedAbsolute = isAbsolute;\n                if (isAbsolute && resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n        }\n        // At this point the path should be resolved to a full absolute path,\n        // but handle relative paths to be safe (might happen when process.cwd()\n        // fails)\n        // Normalize the tail path\n        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n        return resolvedAbsolute ?\n            `${resolvedDevice}\\\\${resolvedTail}` :\n            `${resolvedDevice}${resolvedTail}` || '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = 0;\n        let device;\n        let isAbsolute = false;\n        const code = path.charCodeAt(0);\n        // Try to match a root\n        if (len === 1) {\n            // `path` contains just a single char, exit early to avoid\n            // unnecessary work\n            return isPosixPathSeparator(code) ? '\\\\' : path;\n        }\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            // If we started with a separator, we know we at least have an absolute\n            // path of some kind (UNC or otherwise)\n            isAbsolute = true;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    const firstPart = path.slice(last, j);\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            // Return the normalized version of the UNC root since there\n                            // is nothing left to process\n                            return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                            rootEnd = j;\n                        }\n                    }\n                }\n            }\n            else {\n                rootEnd = 1;\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            device = path.slice(0, 2);\n            rootEnd = 2;\n            if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                // Treat separator following drive name as an absolute path\n                // indicator\n                isAbsolute = true;\n                rootEnd = 3;\n            }\n        }\n        let tail = rootEnd < len ?\n            normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n            '';\n        if (tail.length === 0 && !isAbsolute) {\n            tail = '.';\n        }\n        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n            tail += '\\\\';\n        }\n        if (device === undefined) {\n            return isAbsolute ? `\\\\${tail}` : tail;\n        }\n        return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return false;\n        }\n        const code = path.charCodeAt(0);\n        return isPathSeparator(code) ||\n            // Possible device root\n            (len > 2 &&\n                isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON &&\n                isPathSeparator(path.charCodeAt(2)));\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        let firstPart;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = firstPart = arg;\n                }\n                else {\n                    joined += `\\\\${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        // Make sure that the joined path doesn't start with two slashes, because\n        // normalize() will mistake it for a UNC path then.\n        //\n        // This step is skipped when it is very clear that the user actually\n        // intended to point at a UNC path. This is assumed when the first\n        // non-empty string arguments starts with exactly two slashes followed by\n        // at least one more non-slash character.\n        //\n        // Note that for normalize() to treat a path as a UNC path it needs to\n        // have at least 2 components, so we don't filter for that here.\n        // This means that the user can use join to construct UNC paths from\n        // a server name and a share name; for example:\n        //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n        let needsReplace = true;\n        let slashCount = 0;\n        if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n            ++slashCount;\n            const firstLen = firstPart.length;\n            if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n                ++slashCount;\n                if (firstLen > 2) {\n                    if (isPathSeparator(firstPart.charCodeAt(2))) {\n                        ++slashCount;\n                    }\n                    else {\n                        // We matched a UNC path in the first part\n                        needsReplace = false;\n                    }\n                }\n            }\n        }\n        if (needsReplace) {\n            // Find any more consecutive slashes we need to replace\n            while (slashCount < joined.length &&\n                isPathSeparator(joined.charCodeAt(slashCount))) {\n                slashCount++;\n            }\n            // Replace the slashes if needed\n            if (slashCount >= 2) {\n                joined = `\\\\${joined.slice(slashCount)}`;\n            }\n        }\n        return win32.normalize(joined);\n    },\n    // It will solve the relative path from `from` to `to`, for instance:\n    //  from = 'C:\\\\orandea\\\\test\\\\aaa'\n    //  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n    // The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        const fromOrig = win32.resolve(from);\n        const toOrig = win32.resolve(to);\n        if (fromOrig === toOrig) {\n            return '';\n        }\n        from = fromOrig.toLowerCase();\n        to = toOrig.toLowerCase();\n        if (from === to) {\n            return '';\n        }\n        // Trim any leading backslashes\n        let fromStart = 0;\n        while (fromStart < from.length &&\n            from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n            fromStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let fromEnd = from.length;\n        while (fromEnd - 1 > fromStart &&\n            from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n            fromEnd--;\n        }\n        const fromLen = fromEnd - fromStart;\n        // Trim any leading backslashes\n        let toStart = 0;\n        while (toStart < to.length &&\n            to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            toStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let toEnd = to.length;\n        while (toEnd - 1 > toStart &&\n            to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n            toEnd--;\n        }\n        const toLen = toEnd - toStart;\n        // Compare paths to find the longest common path from root\n        const length = fromLen < toLen ? fromLen : toLen;\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_BACKWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        // We found a mismatch before the first common path separator was seen, so\n        // return the original `to`.\n        if (i !== length) {\n            if (lastCommonSep === -1) {\n                return toOrig;\n            }\n        }\n        else {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n                    return toOrig.slice(toStart + i + 1);\n                }\n                if (i === 2) {\n                    // We get here if `from` is the device root.\n                    // For example: from='C:\\\\'; to='C:\\\\foo'\n                    return toOrig.slice(toStart + i);\n                }\n            }\n            if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n                    lastCommonSep = i;\n                }\n                else if (i === 2) {\n                    // We get here if `to` is the device root.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n                    lastCommonSep = 3;\n                }\n            }\n            if (lastCommonSep === -1) {\n                lastCommonSep = 0;\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to` and\n        // `from`\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n                out += out.length === 0 ? '..' : '\\\\..';\n            }\n        }\n        toStart += lastCommonSep;\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts\n        if (out.length > 0) {\n            return `${out}${toOrig.slice(toStart, toEnd)}`;\n        }\n        if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            ++toStart;\n        }\n        return toOrig.slice(toStart, toEnd);\n    },\n    toNamespacedPath(path) {\n        // Note: this will *probably* throw somewhere.\n        if (typeof path !== 'string') {\n            return path;\n        }\n        if (path.length === 0) {\n            return '';\n        }\n        const resolvedPath = win32.resolve(path);\n        if (resolvedPath.length <= 2) {\n            return path;\n        }\n        if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n            // Possible UNC root\n            if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n                const code = resolvedPath.charCodeAt(2);\n                if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n                    // Matched non-long UNC root, convert the path to a long UNC path\n                    return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n            resolvedPath.charCodeAt(1) === CHAR_COLON &&\n            resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n            // Matched device root, convert the path to a long UNC path\n            return `\\\\\\\\?\\\\${resolvedPath}`;\n        }\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = -1;\n        let offset = 0;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            // `path` contains just a path separator, exit early to avoid\n            // unnecessary work or a dot.\n            return isPathSeparator(code) ? path : '.';\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = offset = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            return path;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            // Offset by 1 to include the separator after the UNC root to\n                            // treat it as a \"normal root\" on top of a (UNC) root\n                            rootEnd = offset = j + 1;\n                        }\n                    }\n                }\n            }\n            // Possible device root\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n            offset = rootEnd;\n        }\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = len - 1; i >= offset; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            if (rootEnd === -1) {\n                return '.';\n            }\n            end = rootEnd;\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            isWindowsDeviceRoot(path.charCodeAt(0)) &&\n            path.charCodeAt(1) === CHAR_COLON) {\n            start = 2;\n        }\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= start; --i) {\n                const code = path.charCodeAt(i);\n                if (isPathSeparator(code)) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= start; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let start = 0;\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            path.charCodeAt(1) === CHAR_COLON &&\n            isWindowsDeviceRoot(path.charCodeAt(0))) {\n            start = startPart = 2;\n        }\n        for (let i = path.length - 1; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '\\\\'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const len = path.length;\n        let rootEnd = 0;\n        let code = path.charCodeAt(0);\n        if (len === 1) {\n            if (isPathSeparator(code)) {\n                // `path` contains just a path separator, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            ret.base = ret.name = path;\n            return ret;\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            rootEnd = j;\n                        }\n                        else if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            rootEnd = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            if (len <= 2) {\n                // `path` contains just a drive root, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            rootEnd = 2;\n            if (isPathSeparator(path.charCodeAt(2))) {\n                if (len === 3) {\n                    // `path` contains just a drive root, exit early to avoid\n                    // unnecessary work\n                    ret.root = ret.dir = path;\n                    return ret;\n                }\n                rootEnd = 3;\n            }\n        }\n        if (rootEnd > 0) {\n            ret.root = path.slice(0, rootEnd);\n        }\n        let startDot = -1;\n        let startPart = rootEnd;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= rootEnd; --i) {\n            code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(startPart, end);\n            }\n            else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        // If the directory is the root, use the entire root as the `dir` including\n        // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n        // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n        if (startPart > 0 && startPart !== rootEnd) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else {\n            ret.dir = ret.root;\n        }\n        return ret;\n    },\n    sep: '\\\\',\n    delimiter: ';',\n    win32: null,\n    posix: null\n};\nexport const posix = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedPath = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            const path = i >= 0 ? pathSegments[i] : process.cwd();\n            validateString(path, 'path');\n            // Skip empty entries\n            if (path.length === 0) {\n                continue;\n            }\n            resolvedPath = `${path}/${resolvedPath}`;\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        // Normalize the path\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n        if (resolvedAbsolute) {\n            return `/${resolvedPath}`;\n        }\n        return resolvedPath.length > 0 ? resolvedPath : '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n        // Normalize the path\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n        if (path.length === 0) {\n            if (isAbsolute) {\n                return '/';\n            }\n            return trailingSeparator ? './' : '.';\n        }\n        if (trailingSeparator) {\n            path += '/';\n        }\n        return isAbsolute ? `/${path}` : path;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = arg;\n                }\n                else {\n                    joined += `/${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        return posix.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        // Trim leading forward slashes.\n        from = posix.resolve(from);\n        to = posix.resolve(to);\n        if (from === to) {\n            return '';\n        }\n        const fromStart = 1;\n        const fromEnd = from.length;\n        const fromLen = fromEnd - fromStart;\n        const toStart = 1;\n        const toLen = to.length - toStart;\n        // Compare paths to find the longest common path from root\n        const length = (fromLen < toLen ? fromLen : toLen);\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_FORWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='/foo/bar'; to='/foo/bar/baz'\n                    return to.slice(toStart + i + 1);\n                }\n                if (i === 0) {\n                    // We get here if `from` is the root\n                    // For example: from='/'; to='/foo'\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='/foo/bar/baz'; to='/foo/bar'\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    // We get here if `to` is the root.\n                    // For example: from='/foo/bar'; to='/'\n                    lastCommonSep = 0;\n                }\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to`\n        // and `from`.\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                out += out.length === 0 ? '..' : '/..';\n            }\n        }\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts.\n        return `${out}${to.slice(toStart + lastCommonSep)}`;\n    },\n    toNamespacedPath(path) {\n        // Non-op on posix systems\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = path.length - 1; i >= 1; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            return hasRoot ? '/' : '.';\n        }\n        if (hasRoot && end === 1) {\n            return '//';\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= 0; --i) {\n                const code = path.charCodeAt(i);\n                if (code === CHAR_FORWARD_SLASH) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        for (let i = path.length - 1; i >= 0; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '/'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let start;\n        if (isAbsolute) {\n            ret.root = '/';\n            start = 1;\n        }\n        else {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            const start = startPart === 0 && isAbsolute ? 1 : startPart;\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(start, end);\n            }\n            else {\n                ret.name = path.slice(start, startDot);\n                ret.base = path.slice(start, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else if (isAbsolute) {\n            ret.dir = '/';\n        }\n        return ret;\n    },\n    sep: '/',\n    delimiter: ':',\n    win32: null,\n    posix: null\n};\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\nexport const normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\nexport const resolve = (process.platform === 'win32' ? win32.resolve : posix.resolve);\nexport const relative = (process.platform === 'win32' ? win32.relative : posix.relative);\nexport const dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\nexport const basename = (process.platform === 'win32' ? win32.basename : posix.basename);\nexport const extname = (process.platform === 'win32' ? win32.extname : posix.extname);\nexport const sep = (process.platform === 'win32' ? win32.sep : posix.sep);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nconst LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isElectron = false;\nlet _isIOS = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _translationsConfigFile = undefined;\nlet _userAgent = undefined;\nexport const globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nlet nodeProcess = undefined;\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    // Native environment (sandboxed)\n    nodeProcess = globals.vscode.process;\n}\nelse if (typeof process !== 'undefined') {\n    // Native environment (non-sandboxed)\n    nodeProcess = process;\n}\nconst isElectronProcess = typeof ((_a = nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.versions) === null || _a === void 0 ? void 0 : _a.electron) === 'string';\nconst isElectronRenderer = isElectronProcess && (nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.type) === 'renderer';\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n    _userAgent = navigator.userAgent;\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n    _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\n    _isWeb = true;\n    _locale = navigator.language;\n    _language = _locale;\n}\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n    _isWindows = (nodeProcess.platform === 'win32');\n    _isMacintosh = (nodeProcess.platform === 'darwin');\n    _isLinux = (nodeProcess.platform === 'linux');\n    _isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n    _isElectron = isElectronProcess;\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            const nlsConfig = JSON.parse(rawNlsConfig);\n            const resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\n// Unknown environment\nelse {\n    console.error('Unable to resolve platform.');\n}\nlet _platform = 0 /* Web */;\nif (_isMacintosh) {\n    _platform = 1 /* Mac */;\n}\nelse if (_isWindows) {\n    _platform = 3 /* Windows */;\n}\nelse if (_isLinux) {\n    _platform = 2 /* Linux */;\n}\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isIOS = _isIOS;\nexport const userAgent = _userAgent;\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\n/**\n * See https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#:~:text=than%204%2C%20then-,set%20timeout%20to%204,-.\n *\n * Works similarly to `setTimeout(0)` but doesn't suffer from the 4ms artificial delay\n * that browsers set when the nesting level is > 5.\n */\nexport const setTimeout0 = (() => {\n    if (typeof globals.postMessage === 'function' && !globals.importScripts) {\n        let pending = [];\n        globals.addEventListener('message', (e) => {\n            if (e.data && e.data.vscodeScheduleAsyncWork) {\n                for (let i = 0, len = pending.length; i < len; i++) {\n                    const candidate = pending[i];\n                    if (candidate.id === e.data.vscodeScheduleAsyncWork) {\n                        pending.splice(i, 1);\n                        candidate.callback();\n                        return;\n                    }\n                }\n            }\n        });\n        let lastId = 0;\n        return (callback) => {\n            const myId = ++lastId;\n            pending.push({\n                id: myId,\n                callback: callback\n            });\n            globals.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n        };\n    }\n    return (callback) => setTimeout(callback);\n})();\nexport const OS = (_isMacintosh || _isIOS ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian() {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = new Uint8Array(2);\n        test[0] = 1;\n        test[1] = 2;\n        const view = new Uint16Array(test.buffer);\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\nexport const isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nexport const isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nexport const isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nexport const isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nexport const isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var Range;\n(function (Range) {\n    /**\n     * Returns the intersection between two ranges as a range itself.\n     * Returns `{ start: 0, end: 0 }` if the intersection is empty.\n     */\n    function intersect(one, other) {\n        if (one.start >= other.end || other.start >= one.end) {\n            return { start: 0, end: 0 };\n        }\n        const start = Math.max(one.start, other.start);\n        const end = Math.min(one.end, other.end);\n        if (end - start <= 0) {\n            return { start: 0, end: 0 };\n        }\n        return { start, end };\n    }\n    Range.intersect = intersect;\n    function isEmpty(range) {\n        return range.end - range.start <= 0;\n    }\n    Range.isEmpty = isEmpty;\n    function intersects(one, other) {\n        return !isEmpty(intersect(one, other));\n    }\n    Range.intersects = intersects;\n    function relativeComplement(one, other) {\n        const result = [];\n        const first = { start: one.start, end: Math.min(other.start, one.end) };\n        const second = { start: Math.max(other.end, one.start), end: one.end };\n        if (!isEmpty(first)) {\n            result.push(first);\n        }\n        if (!isEmpty(second)) {\n            result.push(second);\n        }\n        return result;\n    }\n    Range.relativeComplement = relativeComplement;\n})(Range || (Range = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as extpath from './extpath.js';\nimport { Schemas } from './network.js';\nimport * as paths from './path.js';\nimport { isLinux, isWindows } from './platform.js';\nimport { compare as strCompare, equalsIgnoreCase } from './strings.js';\nimport { URI, uriToFsPath } from './uri.js';\nexport function originalFSPath(uri) {\n    return uriToFsPath(uri, true);\n}\nexport class ExtUri {\n    constructor(_ignorePathCasing) {\n        this._ignorePathCasing = _ignorePathCasing;\n    }\n    compare(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return 0;\n        }\n        return strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n    }\n    isEqual(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return true;\n        }\n        if (!uri1 || !uri2) {\n            return false;\n        }\n        return this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n    }\n    getComparisonKey(uri, ignoreFragment = false) {\n        return uri.with({\n            path: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n            fragment: ignoreFragment ? null : undefined\n        }).toString();\n    }\n    isEqualOrParent(base, parentCandidate, ignoreFragment = false) {\n        if (base.scheme === parentCandidate.scheme) {\n            if (base.scheme === Schemas.file) {\n                return extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n            if (isEqualAuthority(base.authority, parentCandidate.authority)) {\n                return extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n        }\n        return false;\n    }\n    // --- path math\n    joinPath(resource, ...pathFragment) {\n        return URI.joinPath(resource, ...pathFragment);\n    }\n    basenameOrAuthority(resource) {\n        return basename(resource) || resource.authority;\n    }\n    basename(resource) {\n        return paths.posix.basename(resource.path);\n    }\n    extname(resource) {\n        return paths.posix.extname(resource.path);\n    }\n    dirname(resource) {\n        if (resource.path.length === 0) {\n            return resource;\n        }\n        let dirname;\n        if (resource.scheme === Schemas.file) {\n            dirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n        }\n        else {\n            dirname = paths.posix.dirname(resource.path);\n            if (resource.authority && dirname.length && dirname.charCodeAt(0) !== 47 /* Slash */) {\n                console.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n                dirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n            }\n        }\n        return resource.with({\n            path: dirname\n        });\n    }\n    normalizePath(resource) {\n        if (!resource.path.length) {\n            return resource;\n        }\n        let normalizedPath;\n        if (resource.scheme === Schemas.file) {\n            normalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n        }\n        else {\n            normalizedPath = paths.posix.normalize(resource.path);\n        }\n        return resource.with({\n            path: normalizedPath\n        });\n    }\n    relativePath(from, to) {\n        if (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n            return undefined;\n        }\n        if (from.scheme === Schemas.file) {\n            const relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n            return isWindows ? extpath.toSlashes(relativePath) : relativePath;\n        }\n        let fromPath = from.path || '/', toPath = to.path || '/';\n        if (this._ignorePathCasing(from)) {\n            // make casing of fromPath match toPath\n            let i = 0;\n            for (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n                if (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n                    if (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n                        break;\n                    }\n                }\n            }\n            fromPath = toPath.substr(0, i) + fromPath.substr(i);\n        }\n        return paths.posix.relative(fromPath, toPath);\n    }\n    resolvePath(base, path) {\n        if (base.scheme === Schemas.file) {\n            const newURI = URI.file(paths.resolve(originalFSPath(base), path));\n            return base.with({\n                authority: newURI.authority,\n                path: newURI.path\n            });\n        }\n        path = extpath.toPosixPath(path); // we allow path to be a windows path\n        return base.with({\n            path: paths.posix.resolve(base.path, path)\n        });\n    }\n    // --- misc\n    isAbsolutePath(resource) {\n        return !!resource.path && resource.path[0] === '/';\n    }\n    isEqualAuthority(a1, a2) {\n        return a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n    }\n    hasTrailingPathSeparator(resource, sep = paths.sep) {\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            return fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n        }\n        else {\n            const p = resource.path;\n            return (p.length > 1 && p.charCodeAt(p.length - 1) === 47 /* Slash */) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n        }\n    }\n    removeTrailingPathSeparator(resource, sep = paths.sep) {\n        // Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n        if (hasTrailingPathSeparator(resource, sep)) {\n            return resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n        }\n        return resource;\n    }\n    addTrailingPathSeparator(resource, sep = paths.sep) {\n        let isRootSep = false;\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            isRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n        }\n        else {\n            sep = '/';\n            const p = resource.path;\n            isRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === 47 /* Slash */;\n        }\n        if (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n            return resource.with({ path: resource.path + '/' });\n        }\n        return resource;\n    }\n}\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n    // A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n    // Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n    return uri.scheme === Schemas.file ? !isLinux : true;\n});\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n/**\n * Data URI related helpers.\n */\nexport var DataUri;\n(function (DataUri) {\n    DataUri.META_DATA_LABEL = 'label';\n    DataUri.META_DATA_DESCRIPTION = 'description';\n    DataUri.META_DATA_SIZE = 'size';\n    DataUri.META_DATA_MIME = 'mime';\n    function parseMetaData(dataUri) {\n        const metadata = new Map();\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n        // the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n        const meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n        meta.split(';').forEach(property => {\n            const [key, value] = property.split(':');\n            if (key && value) {\n                metadata.set(key, value);\n            }\n        });\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n        // the mime is: image/png\n        const mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n        if (mime) {\n            metadata.set(DataUri.META_DATA_MIME, mime);\n        }\n        return metadata;\n    }\n    DataUri.parseMetaData = parseMetaData;\n})(DataUri || (DataUri = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from './event.js';\nimport { Disposable } from './lifecycle.js';\nexport class ScrollState {\n    constructor(_forceIntegerValues, width, scrollWidth, scrollLeft, height, scrollHeight, scrollTop) {\n        this._forceIntegerValues = _forceIntegerValues;\n        this._scrollStateBrand = undefined;\n        if (this._forceIntegerValues) {\n            width = width | 0;\n            scrollWidth = scrollWidth | 0;\n            scrollLeft = scrollLeft | 0;\n            height = height | 0;\n            scrollHeight = scrollHeight | 0;\n            scrollTop = scrollTop | 0;\n        }\n        this.rawScrollLeft = scrollLeft; // before validation\n        this.rawScrollTop = scrollTop; // before validation\n        if (width < 0) {\n            width = 0;\n        }\n        if (scrollLeft + width > scrollWidth) {\n            scrollLeft = scrollWidth - width;\n        }\n        if (scrollLeft < 0) {\n            scrollLeft = 0;\n        }\n        if (height < 0) {\n            height = 0;\n        }\n        if (scrollTop + height > scrollHeight) {\n            scrollTop = scrollHeight - height;\n        }\n        if (scrollTop < 0) {\n            scrollTop = 0;\n        }\n        this.width = width;\n        this.scrollWidth = scrollWidth;\n        this.scrollLeft = scrollLeft;\n        this.height = height;\n        this.scrollHeight = scrollHeight;\n        this.scrollTop = scrollTop;\n    }\n    equals(other) {\n        return (this.rawScrollLeft === other.rawScrollLeft\n            && this.rawScrollTop === other.rawScrollTop\n            && this.width === other.width\n            && this.scrollWidth === other.scrollWidth\n            && this.scrollLeft === other.scrollLeft\n            && this.height === other.height\n            && this.scrollHeight === other.scrollHeight\n            && this.scrollTop === other.scrollTop);\n    }\n    withScrollDimensions(update, useRawScrollPositions) {\n        return new ScrollState(this._forceIntegerValues, (typeof update.width !== 'undefined' ? update.width : this.width), (typeof update.scrollWidth !== 'undefined' ? update.scrollWidth : this.scrollWidth), useRawScrollPositions ? this.rawScrollLeft : this.scrollLeft, (typeof update.height !== 'undefined' ? update.height : this.height), (typeof update.scrollHeight !== 'undefined' ? update.scrollHeight : this.scrollHeight), useRawScrollPositions ? this.rawScrollTop : this.scrollTop);\n    }\n    withScrollPosition(update) {\n        return new ScrollState(this._forceIntegerValues, this.width, this.scrollWidth, (typeof update.scrollLeft !== 'undefined' ? update.scrollLeft : this.rawScrollLeft), this.height, this.scrollHeight, (typeof update.scrollTop !== 'undefined' ? update.scrollTop : this.rawScrollTop));\n    }\n    createScrollEvent(previous, inSmoothScrolling) {\n        const widthChanged = (this.width !== previous.width);\n        const scrollWidthChanged = (this.scrollWidth !== previous.scrollWidth);\n        const scrollLeftChanged = (this.scrollLeft !== previous.scrollLeft);\n        const heightChanged = (this.height !== previous.height);\n        const scrollHeightChanged = (this.scrollHeight !== previous.scrollHeight);\n        const scrollTopChanged = (this.scrollTop !== previous.scrollTop);\n        return {\n            inSmoothScrolling: inSmoothScrolling,\n            oldWidth: previous.width,\n            oldScrollWidth: previous.scrollWidth,\n            oldScrollLeft: previous.scrollLeft,\n            width: this.width,\n            scrollWidth: this.scrollWidth,\n            scrollLeft: this.scrollLeft,\n            oldHeight: previous.height,\n            oldScrollHeight: previous.scrollHeight,\n            oldScrollTop: previous.scrollTop,\n            height: this.height,\n            scrollHeight: this.scrollHeight,\n            scrollTop: this.scrollTop,\n            widthChanged: widthChanged,\n            scrollWidthChanged: scrollWidthChanged,\n            scrollLeftChanged: scrollLeftChanged,\n            heightChanged: heightChanged,\n            scrollHeightChanged: scrollHeightChanged,\n            scrollTopChanged: scrollTopChanged,\n        };\n    }\n}\nexport class Scrollable extends Disposable {\n    constructor(options) {\n        super();\n        this._scrollableBrand = undefined;\n        this._onScroll = this._register(new Emitter());\n        this.onScroll = this._onScroll.event;\n        this._smoothScrollDuration = options.smoothScrollDuration;\n        this._scheduleAtNextAnimationFrame = options.scheduleAtNextAnimationFrame;\n        this._state = new ScrollState(options.forceIntegerValues, 0, 0, 0, 0, 0, 0);\n        this._smoothScrolling = null;\n    }\n    dispose() {\n        if (this._smoothScrolling) {\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = null;\n        }\n        super.dispose();\n    }\n    setSmoothScrollDuration(smoothScrollDuration) {\n        this._smoothScrollDuration = smoothScrollDuration;\n    }\n    validateScrollPosition(scrollPosition) {\n        return this._state.withScrollPosition(scrollPosition);\n    }\n    getScrollDimensions() {\n        return this._state;\n    }\n    setScrollDimensions(dimensions, useRawScrollPositions) {\n        const newState = this._state.withScrollDimensions(dimensions, useRawScrollPositions);\n        this._setState(newState, Boolean(this._smoothScrolling));\n        // Validate outstanding animated scroll position target\n        if (this._smoothScrolling) {\n            this._smoothScrolling.acceptScrollDimensions(this._state);\n        }\n    }\n    /**\n     * Returns the final scroll position that the instance will have once the smooth scroll animation concludes.\n     * If no scroll animation is occurring, it will return the current scroll position instead.\n     */\n    getFutureScrollPosition() {\n        if (this._smoothScrolling) {\n            return this._smoothScrolling.to;\n        }\n        return this._state;\n    }\n    /**\n     * Returns the current scroll position.\n     * Note: This result might be an intermediate scroll position, as there might be an ongoing smooth scroll animation.\n     */\n    getCurrentScrollPosition() {\n        return this._state;\n    }\n    setScrollPositionNow(update) {\n        // no smooth scrolling requested\n        const newState = this._state.withScrollPosition(update);\n        // Terminate any outstanding smooth scrolling\n        if (this._smoothScrolling) {\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = null;\n        }\n        this._setState(newState, false);\n    }\n    setScrollPositionSmooth(update, reuseAnimation) {\n        if (this._smoothScrollDuration === 0) {\n            // Smooth scrolling not supported.\n            return this.setScrollPositionNow(update);\n        }\n        if (this._smoothScrolling) {\n            // Combine our pending scrollLeft/scrollTop with incoming scrollLeft/scrollTop\n            update = {\n                scrollLeft: (typeof update.scrollLeft === 'undefined' ? this._smoothScrolling.to.scrollLeft : update.scrollLeft),\n                scrollTop: (typeof update.scrollTop === 'undefined' ? this._smoothScrolling.to.scrollTop : update.scrollTop)\n            };\n            // Validate `update`\n            const validTarget = this._state.withScrollPosition(update);\n            if (this._smoothScrolling.to.scrollLeft === validTarget.scrollLeft && this._smoothScrolling.to.scrollTop === validTarget.scrollTop) {\n                // No need to interrupt or extend the current animation since we're going to the same place\n                return;\n            }\n            let newSmoothScrolling;\n            if (reuseAnimation) {\n                newSmoothScrolling = new SmoothScrollingOperation(this._smoothScrolling.from, validTarget, this._smoothScrolling.startTime, this._smoothScrolling.duration);\n            }\n            else {\n                newSmoothScrolling = this._smoothScrolling.combine(this._state, validTarget, this._smoothScrollDuration);\n            }\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = newSmoothScrolling;\n        }\n        else {\n            // Validate `update`\n            const validTarget = this._state.withScrollPosition(update);\n            this._smoothScrolling = SmoothScrollingOperation.start(this._state, validTarget, this._smoothScrollDuration);\n        }\n        // Begin smooth scrolling animation\n        this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(() => {\n            if (!this._smoothScrolling) {\n                return;\n            }\n            this._smoothScrolling.animationFrameDisposable = null;\n            this._performSmoothScrolling();\n        });\n    }\n    _performSmoothScrolling() {\n        if (!this._smoothScrolling) {\n            return;\n        }\n        const update = this._smoothScrolling.tick();\n        const newState = this._state.withScrollPosition(update);\n        this._setState(newState, true);\n        if (!this._smoothScrolling) {\n            // Looks like someone canceled the smooth scrolling\n            // from the scroll event handler\n            return;\n        }\n        if (update.isDone) {\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = null;\n            return;\n        }\n        // Continue smooth scrolling animation\n        this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(() => {\n            if (!this._smoothScrolling) {\n                return;\n            }\n            this._smoothScrolling.animationFrameDisposable = null;\n            this._performSmoothScrolling();\n        });\n    }\n    _setState(newState, inSmoothScrolling) {\n        const oldState = this._state;\n        if (oldState.equals(newState)) {\n            // no change\n            return;\n        }\n        this._state = newState;\n        this._onScroll.fire(this._state.createScrollEvent(oldState, inSmoothScrolling));\n    }\n}\nexport class SmoothScrollingUpdate {\n    constructor(scrollLeft, scrollTop, isDone) {\n        this.scrollLeft = scrollLeft;\n        this.scrollTop = scrollTop;\n        this.isDone = isDone;\n    }\n}\nfunction createEaseOutCubic(from, to) {\n    const delta = to - from;\n    return function (completion) {\n        return from + delta * easeOutCubic(completion);\n    };\n}\nfunction createComposed(a, b, cut) {\n    return function (completion) {\n        if (completion < cut) {\n            return a(completion / cut);\n        }\n        return b((completion - cut) / (1 - cut));\n    };\n}\nexport class SmoothScrollingOperation {\n    constructor(from, to, startTime, duration) {\n        this.from = from;\n        this.to = to;\n        this.duration = duration;\n        this.startTime = startTime;\n        this.animationFrameDisposable = null;\n        this._initAnimations();\n    }\n    _initAnimations() {\n        this.scrollLeft = this._initAnimation(this.from.scrollLeft, this.to.scrollLeft, this.to.width);\n        this.scrollTop = this._initAnimation(this.from.scrollTop, this.to.scrollTop, this.to.height);\n    }\n    _initAnimation(from, to, viewportSize) {\n        const delta = Math.abs(from - to);\n        if (delta > 2.5 * viewportSize) {\n            let stop1, stop2;\n            if (from < to) {\n                // scroll to 75% of the viewportSize\n                stop1 = from + 0.75 * viewportSize;\n                stop2 = to - 0.75 * viewportSize;\n            }\n            else {\n                stop1 = from - 0.75 * viewportSize;\n                stop2 = to + 0.75 * viewportSize;\n            }\n            return createComposed(createEaseOutCubic(from, stop1), createEaseOutCubic(stop2, to), 0.33);\n        }\n        return createEaseOutCubic(from, to);\n    }\n    dispose() {\n        if (this.animationFrameDisposable !== null) {\n            this.animationFrameDisposable.dispose();\n            this.animationFrameDisposable = null;\n        }\n    }\n    acceptScrollDimensions(state) {\n        this.to = state.withScrollPosition(this.to);\n        this._initAnimations();\n    }\n    tick() {\n        return this._tick(Date.now());\n    }\n    _tick(now) {\n        const completion = (now - this.startTime) / this.duration;\n        if (completion < 1) {\n            const newScrollLeft = this.scrollLeft(completion);\n            const newScrollTop = this.scrollTop(completion);\n            return new SmoothScrollingUpdate(newScrollLeft, newScrollTop, false);\n        }\n        return new SmoothScrollingUpdate(this.to.scrollLeft, this.to.scrollTop, true);\n    }\n    combine(from, to, duration) {\n        return SmoothScrollingOperation.start(from, to, duration);\n    }\n    static start(from, to, duration) {\n        // +10 / -10 : pretend the animation already started for a quicker response to a scroll request\n        duration = duration + 10;\n        const startTime = Date.now() - 10;\n        return new SmoothScrollingOperation(from, to, startTime, duration);\n    }\n}\nfunction easeInCubic(t) {\n    return Math.pow(t, 3);\n}\nfunction easeOutCubic(t) {\n    return 1 - easeInCubic(1 - t);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\nexport function buildReplaceStringWithCasePreserved(matches, pattern) {\n    if (matches && (matches[0] !== '')) {\n        const containsHyphens = validateSpecificSpecialCharacter(matches, pattern, '-');\n        const containsUnderscores = validateSpecificSpecialCharacter(matches, pattern, '_');\n        if (containsHyphens && !containsUnderscores) {\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '-');\n        }\n        else if (!containsHyphens && containsUnderscores) {\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '_');\n        }\n        if (matches[0].toUpperCase() === matches[0]) {\n            return pattern.toUpperCase();\n        }\n        else if (matches[0].toLowerCase() === matches[0]) {\n            return pattern.toLowerCase();\n        }\n        else if (strings.containsUppercaseCharacter(matches[0][0]) && pattern.length > 0) {\n            return pattern[0].toUpperCase() + pattern.substr(1);\n        }\n        else if (matches[0][0].toUpperCase() !== matches[0][0] && pattern.length > 0) {\n            return pattern[0].toLowerCase() + pattern.substr(1);\n        }\n        else {\n            // we don't understand its pattern yet.\n            return pattern;\n        }\n    }\n    else {\n        return pattern;\n    }\n}\nfunction validateSpecificSpecialCharacter(matches, pattern, specialCharacter) {\n    const doesContainSpecialCharacter = matches[0].indexOf(specialCharacter) !== -1 && pattern.indexOf(specialCharacter) !== -1;\n    return doesContainSpecialCharacter && matches[0].split(specialCharacter).length === pattern.split(specialCharacter).length;\n}\nfunction buildReplaceStringForSpecificSpecialCharacter(matches, pattern, specialCharacter) {\n    const splitPatternAtSpecialCharacter = pattern.split(specialCharacter);\n    const splitMatchAtSpecialCharacter = matches[0].split(specialCharacter);\n    let replaceString = '';\n    splitPatternAtSpecialCharacter.forEach((splitValue, index) => {\n        replaceString += buildReplaceStringWithCasePreserved([splitMatchAtSpecialCharacter[index]], splitValue) + specialCharacter;\n    });\n    return replaceString.slice(0, -1);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\nvar Severity;\n(function (Severity) {\n    Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\n    Severity[Severity[\"Info\"] = 1] = \"Info\";\n    Severity[Severity[\"Warning\"] = 2] = \"Warning\";\n    Severity[Severity[\"Error\"] = 3] = \"Error\";\n})(Severity || (Severity = {}));\n(function (Severity) {\n    const _error = 'error';\n    const _warning = 'warning';\n    const _warn = 'warn';\n    const _info = 'info';\n    const _ignore = 'ignore';\n    /**\n     * Parses 'error', 'warning', 'warn', 'info' in call casings\n     * and falls back to ignore.\n     */\n    function fromValue(value) {\n        if (!value) {\n            return Severity.Ignore;\n        }\n        if (strings.equalsIgnoreCase(_error, value)) {\n            return Severity.Error;\n        }\n        if (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n            return Severity.Warning;\n        }\n        if (strings.equalsIgnoreCase(_info, value)) {\n            return Severity.Info;\n        }\n        return Severity.Ignore;\n    }\n    Severity.fromValue = fromValue;\n    function toString(severity) {\n        switch (severity) {\n            case Severity.Error: return _error;\n            case Severity.Warning: return _warning;\n            case Severity.Info: return _info;\n            default: return _ignore;\n        }\n    }\n    Severity.toString = toString;\n})(Severity || (Severity = {}));\nexport default Severity;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals } from './platform.js';\nconst hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\nexport class StopWatch {\n    constructor(highResolution) {\n        this._highResolution = hasPerformanceNow && highResolution;\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    static create(highResolution = true) {\n        return new StopWatch(highResolution);\n    }\n    stop() {\n        this._stopTime = this._now();\n    }\n    elapsed() {\n        if (this._stopTime !== -1) {\n            return this._stopTime - this._startTime;\n        }\n        return this._now() - this._startTime;\n    }\n    _now() {\n        return this._highResolution ? globals.performance.now() : Date.now();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nimport { LRUCachedComputed } from './cache.js';\nimport { Lazy } from './lazy.js';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value, ...args) {\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        const idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle = ' ') {\n    const trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    let offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    let offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\nexport function createRegExp(searchString, isRegex, options = {}) {\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    let modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    const match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function regExpFlags(regexp) {\n    return (regexp.global ? 'g' : '')\n        + (regexp.ignoreCase ? 'i' : '')\n        + (regexp.multiline ? 'm' : '')\n        + (regexp /* standalone editor compilation */.unicode ? 'u' : '');\n}\nexport function splitLines(str) {\n    return str.split(/\\r\\n|\\r|\\n/);\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start = 0, end = str.length) {\n    for (let i = start; i < end; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n    for (let i = startIndex; i >= 0; i--) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        }\n        else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function compareIgnoreCase(a, b) {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nexport function compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n        if (codeA >= 128 || codeB >= 128) {\n            // not ASCII letters -> fallback to lower-casing strings\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n        // mapper lower-case ascii letter onto upper-case varinats\n        // [97-122] (lower ascii) --> [65-90] (upper ascii)\n        if (isLowerAsciiLetter(codeA)) {\n            codeA -= 32;\n        }\n        if (isLowerAsciiLetter(codeB)) {\n            codeB -= 32;\n        }\n        // compare both code points\n        const diff = codeA - codeB;\n        if (diff === 0) {\n            continue;\n        }\n        return diff;\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* a */ && code <= 122 /* z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* A */ && code <= 90 /* Z */;\n}\nexport function equalsIgnoreCase(a, b) {\n    return a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    let i, len = Math.min(a.length, b.length);\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    let i, len = Math.min(a.length, b.length);\n    const aLastIndex = a.length - 1;\n    const bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str, len, offset) {\n    const charCode = str.charCodeAt(offset);\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\n        const nextCharCode = str.charCodeAt(offset + 1);\n        if (isLowSurrogate(nextCharCode)) {\n            return computeCodePoint(charCode, nextCharCode);\n        }\n    }\n    return charCode;\n}\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str, offset) {\n    const charCode = str.charCodeAt(offset - 1);\n    if (isLowSurrogate(charCode) && offset > 1) {\n        const prevCharCode = str.charCodeAt(offset - 2);\n        if (isHighSurrogate(prevCharCode)) {\n            return computeCodePoint(prevCharCode, charCode);\n        }\n    }\n    return charCode;\n}\nexport class CodePointIterator {\n    constructor(str, offset = 0) {\n        this._str = str;\n        this._len = str.length;\n        this._offset = offset;\n    }\n    get offset() {\n        return this._offset;\n    }\n    setOffset(offset) {\n        this._offset = offset;\n    }\n    prevCodePoint() {\n        const codePoint = getPrevCodePoint(this._str, this._offset);\n        this._offset -= (codePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    nextCodePoint() {\n        const codePoint = getNextCodePoint(this._str, this._len, this._offset);\n        this._offset += (codePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    eol() {\n        return (this._offset >= this._len);\n    }\n}\nexport class GraphemeIterator {\n    constructor(str, offset = 0) {\n        this._iterator = new CodePointIterator(str, offset);\n    }\n    get offset() {\n        return this._iterator.offset;\n    }\n    nextGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n        while (!iterator.eol()) {\n            const offset = iterator.offset;\n            const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n            if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = nextGraphemeBreakType;\n        }\n        return (iterator.offset - initialOffset);\n    }\n    prevGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n        while (iterator.offset > 0) {\n            const offset = iterator.offset;\n            const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n            if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = prevGraphemeBreakType;\n        }\n        return (initialOffset - iterator.offset);\n    }\n    eol() {\n        return this._iterator.eol();\n    }\n}\nexport function nextCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.nextGraphemeLength();\n}\nexport function prevCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.prevGraphemeLength();\n}\nexport function getCharContainingOffset(str, offset) {\n    if (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n        offset--;\n    }\n    const endOffset = offset + nextCharLength(str, offset);\n    const startOffset = endOffset - prevCharLength(str, endOffset);\n    return [startOffset, endOffset];\n}\n/**\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js\n */\nconst CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    return CONTAINS_RTL.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str) {\n    return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 - 2EFF   CJK Radicals Supplement\n    //          2F00 - 2FDF   Kangxi Radicals\n    //          2FF0 - 2FFF   Ideographic Description Characters\n    //          3000 - 303F   CJK Symbols and Punctuation\n    //          3040 - 309F   Hiragana\n    //          30A0 - 30FF   Katakana\n    //          3100 - 312F   Bopomofo\n    //          3130 - 318F   Hangul Compatibility Jamo\n    //          3190 - 319F   Kanbun\n    //          31A0 - 31BF   Bopomofo Extended\n    //          31F0 - 31FF   Katakana Phonetic Extensions\n    //          3200 - 32FF   Enclosed CJK Letters and Months\n    //          3300 - 33FF   CJK Compatibility\n    //          3400 - 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 - 4DFF   Yijing Hexagram Symbols\n    //          4E00 - 9FFF   CJK Unified Ideographs\n    //          A000 - A48F   Yi Syllables\n    //          A490 - A4CF   Yi Radicals\n    //          AC00 - D7AF   Hangul Syllables\n    // [IGNORE] D800 - DB7F   High Surrogates\n    // [IGNORE] DB80 - DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 - DFFF   Low Surrogates\n    // [IGNORE] E000 - F8FF   Private Use Area\n    //          F900 - FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 - FE0F   Variation Selectors\n    // [IGNORE] FE20 - FE2F   Combining Half Marks\n    // [IGNORE] FE30 - FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 - FE6F   Small Form Variants\n    // [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B\n    //          FF00 - FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 - FFFF   Specials\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nexport function isEmojiImprecise(x) {\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n        || (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n        || (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n        || (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n        || (x >= 129648 && x <= 129782));\n}\n// -- UTF-8 BOM\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\n}\nexport function containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n) {\n    const LETTERS_CNT = (90 /* Z */ - 65 /* A */ + 1);\n    n = n % (2 * LETTERS_CNT);\n    if (n < LETTERS_CNT) {\n        return String.fromCharCode(97 /* a */ + n);\n    }\n    return String.fromCharCode(65 /* A */ + n - LETTERS_CNT);\n}\nfunction breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n    // http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n    // !!! Let's make the common case a bit faster\n    if (breakTypeA === 0 /* Other */) {\n        // see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n        return (breakTypeB !== 5 /* Extend */ && breakTypeB !== 7 /* SpacingMark */);\n    }\n    // Do not break between a CR and LF. Otherwise, break before and after controls.\n    // GB3                                        CR × LF\n    // GB4                       (Control | CR | LF) ÷\n    // GB5                                           ÷ (Control | CR | LF)\n    if (breakTypeA === 2 /* CR */) {\n        if (breakTypeB === 3 /* LF */) {\n            return false; // GB3\n        }\n    }\n    if (breakTypeA === 4 /* Control */ || breakTypeA === 2 /* CR */ || breakTypeA === 3 /* LF */) {\n        return true; // GB4\n    }\n    if (breakTypeB === 4 /* Control */ || breakTypeB === 2 /* CR */ || breakTypeB === 3 /* LF */) {\n        return true; // GB5\n    }\n    // Do not break Hangul syllable sequences.\n    // GB6                                         L × (L | V | LV | LVT)\n    // GB7                                  (LV | V) × (V | T)\n    // GB8                                 (LVT | T) × T\n    if (breakTypeA === 8 /* L */) {\n        if (breakTypeB === 8 /* L */ || breakTypeB === 9 /* V */ || breakTypeB === 11 /* LV */ || breakTypeB === 12 /* LVT */) {\n            return false; // GB6\n        }\n    }\n    if (breakTypeA === 11 /* LV */ || breakTypeA === 9 /* V */) {\n        if (breakTypeB === 9 /* V */ || breakTypeB === 10 /* T */) {\n            return false; // GB7\n        }\n    }\n    if (breakTypeA === 12 /* LVT */ || breakTypeA === 10 /* T */) {\n        if (breakTypeB === 10 /* T */) {\n            return false; // GB8\n        }\n    }\n    // Do not break before extending characters or ZWJ.\n    // GB9                                           × (Extend | ZWJ)\n    if (breakTypeB === 5 /* Extend */ || breakTypeB === 13 /* ZWJ */) {\n        return false; // GB9\n    }\n    // The GB9a and GB9b rules only apply to extended grapheme clusters:\n    // Do not break before SpacingMarks, or after Prepend characters.\n    // GB9a                                          × SpacingMark\n    // GB9b                                  Prepend ×\n    if (breakTypeB === 7 /* SpacingMark */) {\n        return false; // GB9a\n    }\n    if (breakTypeA === 1 /* Prepend */) {\n        return false; // GB9b\n    }\n    // Do not break within emoji modifier sequences or emoji zwj sequences.\n    // GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n    if (breakTypeA === 13 /* ZWJ */ && breakTypeB === 14 /* Extended_Pictographic */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB11\n    }\n    // GB12                          sot (RI RI)* RI × RI\n    // GB13                        [^RI] (RI RI)* RI × RI\n    if (breakTypeA === 6 /* Regional_Indicator */ && breakTypeB === 6 /* Regional_Indicator */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB12 & GB13\n    }\n    // GB999                                     Any ÷ Any\n    return true;\n}\nclass GraphemeBreakTree {\n    constructor() {\n        this._data = getGraphemeBreakRawData();\n    }\n    static getInstance() {\n        if (!GraphemeBreakTree._INSTANCE) {\n            GraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n        }\n        return GraphemeBreakTree._INSTANCE;\n    }\n    getGraphemeBreakType(codePoint) {\n        // !!! Let's make 7bit ASCII a bit faster: 0..31\n        if (codePoint < 32) {\n            if (codePoint === 10 /* LineFeed */) {\n                return 3 /* LF */;\n            }\n            if (codePoint === 13 /* CarriageReturn */) {\n                return 2 /* CR */;\n            }\n            return 4 /* Control */;\n        }\n        // !!! Let's make 7bit ASCII a bit faster: 32..126\n        if (codePoint < 127) {\n            return 0 /* Other */;\n        }\n        const data = this._data;\n        const nodeCount = data.length / 3;\n        let nodeIndex = 1;\n        while (nodeIndex <= nodeCount) {\n            if (codePoint < data[3 * nodeIndex]) {\n                // go left\n                nodeIndex = 2 * nodeIndex;\n            }\n            else if (codePoint > data[3 * nodeIndex + 1]) {\n                // go right\n                nodeIndex = 2 * nodeIndex + 1;\n            }\n            else {\n                // hit\n                return data[3 * nodeIndex + 2];\n            }\n        }\n        return 0 /* Other */;\n    }\n}\nGraphemeBreakTree._INSTANCE = null;\nfunction getGraphemeBreakRawData() {\n    // generated using https://github.com/alexdima/unicode-utils/blob/main/grapheme-break.js\n    return JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\n//#endregion\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset, str) {\n    if (offset === 0) {\n        return 0;\n    }\n    // Try to delete emoji part.\n    const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n    if (emojiOffset !== undefined) {\n        return emojiOffset;\n    }\n    // Otherwise, just skip a single code point.\n    const iterator = new CodePointIterator(str, offset);\n    iterator.prevCodePoint();\n    return iterator.offset;\n}\nfunction getOffsetBeforeLastEmojiComponent(initialOffset, str) {\n    // See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n    // structure of emojis.\n    const iterator = new CodePointIterator(str, initialOffset);\n    let codePoint = iterator.prevCodePoint();\n    // Skip modifiers\n    while ((isEmojiModifier(codePoint) || codePoint === 65039 /* emojiVariantSelector */ || codePoint === 8419 /* enclosingKeyCap */)) {\n        if (iterator.offset === 0) {\n            // Cannot skip modifier, no preceding emoji base.\n            return undefined;\n        }\n        codePoint = iterator.prevCodePoint();\n    }\n    // Expect base emoji\n    if (!isEmojiImprecise(codePoint)) {\n        // Unexpected code point, not a valid emoji.\n        return undefined;\n    }\n    let resultOffset = iterator.offset;\n    if (resultOffset > 0) {\n        // Skip optional ZWJ code points that combine multiple emojis.\n        // In theory, we should check if that ZWJ actually combines multiple emojis\n        // to prevent deleting ZWJs in situations we didn't account for.\n        const optionalZwjCodePoint = iterator.prevCodePoint();\n        if (optionalZwjCodePoint === 8205 /* zwj */) {\n            resultOffset = iterator.offset;\n        }\n    }\n    return resultOffset;\n}\nfunction isEmojiModifier(codePoint) {\n    return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\nexport const noBreakWhitespace = '\\xa0';\nexport class AmbiguousCharacters {\n    constructor(confusableDictionary) {\n        this.confusableDictionary = confusableDictionary;\n    }\n    static getInstance(locales) {\n        return AmbiguousCharacters.cache.get(Array.from(locales));\n    }\n    static getLocales() {\n        return AmbiguousCharacters._locales.getValue();\n    }\n    isAmbiguous(codePoint) {\n        return this.confusableDictionary.has(codePoint);\n    }\n    /**\n     * Returns the non basic ASCII code point that the given code point can be confused,\n     * or undefined if such code point does note exist.\n     */\n    getPrimaryConfusable(codePoint) {\n        return this.confusableDictionary.get(codePoint);\n    }\n    getConfusableCodePoints() {\n        return new Set(this.confusableDictionary.keys());\n    }\n}\n_a = AmbiguousCharacters;\nAmbiguousCharacters.ambiguousCharacterData = new Lazy(() => {\n    // Generated using https://github.com/hediet/vscode-unicode-data\n    // Stored as key1, value1, key2, value2, ...\n    return JSON.parse('{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}');\n});\nAmbiguousCharacters.cache = new LRUCachedComputed((locales) => {\n    function arrayToMap(arr) {\n        const result = new Map();\n        for (let i = 0; i < arr.length; i += 2) {\n            result.set(arr[i], arr[i + 1]);\n        }\n        return result;\n    }\n    function mergeMaps(map1, map2) {\n        const result = new Map(map1);\n        for (const [key, value] of map2) {\n            result.set(key, value);\n        }\n        return result;\n    }\n    function intersectMaps(map1, map2) {\n        if (!map1) {\n            return map2;\n        }\n        const result = new Map();\n        for (const [key, value] of map1) {\n            if (map2.has(key)) {\n                result.set(key, value);\n            }\n        }\n        return result;\n    }\n    const data = _a.ambiguousCharacterData.getValue();\n    let filteredLocales = locales.filter((l) => !l.startsWith('_') && l in data);\n    if (filteredLocales.length === 0) {\n        filteredLocales = ['_default'];\n    }\n    let languageSpecificMap = undefined;\n    for (const locale of filteredLocales) {\n        const map = arrayToMap(data[locale]);\n        languageSpecificMap = intersectMaps(languageSpecificMap, map);\n    }\n    const commonMap = arrayToMap(data['_common']);\n    const map = mergeMaps(commonMap, languageSpecificMap);\n    return new AmbiguousCharacters(map);\n});\nAmbiguousCharacters._locales = new Lazy(() => Object.keys(AmbiguousCharacters.ambiguousCharacterData.getValue()).filter((k) => !k.startsWith('_')));\nexport class InvisibleCharacters {\n    static getRawData() {\n        // Generated using https://github.com/hediet/vscode-unicode-data\n        return JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n    }\n    static getData() {\n        if (!this._data) {\n            this._data = new Set(InvisibleCharacters.getRawData());\n        }\n        return this._data;\n    }\n    static isInvisibleCharacter(codePoint) {\n        return InvisibleCharacters.getData().has(codePoint);\n    }\n    static get codePoints() {\n        return InvisibleCharacters.getData();\n    }\n}\nInvisibleCharacters._data = undefined;\n","/**\n * @returns whether the provided parameter is a JavaScript Array or not.\n */\nexport function isArray(array) {\n    return Array.isArray(array);\n}\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    return (typeof str === 'string');\n}\n/**\n *\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return (obj === true || obj === false);\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined(arg) {\n    return !isUndefinedOrNull(arg);\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nexport function assertType(condition, type) {\n    if (!condition) {\n        throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n    }\n}\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined(arg) {\n    if (isUndefinedOrNull(arg)) {\n        throw new Error('Assertion Failed: argument is undefined or null');\n    }\n    return arg;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return (typeof obj === 'function');\n}\nexport function validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(`argument does not match constraint: typeof ${constraint}`);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n    }\n}\nexport function getAllPropertyNames(obj) {\n    let res = [];\n    let proto = Object.getPrototypeOf(obj);\n    while (Object.prototype !== proto) {\n        res = res.concat(Object.getOwnPropertyNames(proto));\n        proto = Object.getPrototypeOf(proto);\n    }\n    return res;\n}\nexport function getAllMethodNames(obj) {\n    const methods = [];\n    for (const prop of getAllPropertyNames(obj)) {\n        if (typeof obj[prop] === 'function') {\n            methods.push(prop);\n        }\n    }\n    return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    let result = {};\n    for (const methodName of methodNames) {\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\n/**\n * Converts null to undefined, passes all other values through.\n */\nexport function withNullAsUndefined(x) {\n    return x === null ? undefined : x;\n}\nexport function assertNever(value, message = 'Unreachable') {\n    throw new Error(message);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* MAX_UINT_8 */) {\n        return 255 /* MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* MAX_UINT_32 */) {\n        return 4294967295 /* MAX_UINT_32 */;\n    }\n    return v | 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as paths from './path.js';\nimport { isWindows } from './platform.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI {\n    /**\n     * @internal\n     */\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    static isUri(thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'string'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    }\n    // ---- filesystem path -----------------------\n    /**\n     * Returns a string representing the corresponding file system path of this URI.\n     * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n     * platform specific path separator.\n     *\n     * * Will *not* validate the path for invalid characters and semantics.\n     * * Will *not* look at the scheme of this URI.\n     * * The result shall *not* be used for display purposes but for accessing a file on disk.\n     *\n     *\n     * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n     * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n     *\n     * ```ts\n        const u = URI.parse('file://server/c$/folder/file.txt')\n        u.authority === 'server'\n        u.path === '/shares/c$/file.txt'\n        u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n    ```\n     *\n     * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n     * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n     * with URIs that represent files on disk (`file` scheme).\n     */\n    get fsPath() {\n        // if (this.scheme !== 'file') {\n        // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n        // }\n        return uriToFsPath(this, false);\n    }\n    // ---- modify to new -------------------------\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new Uri(scheme, authority, path, query, fragment);\n    }\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.example.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return new Uri(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new Uri(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n    }\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    static file(path) {\n        let authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new Uri('file', authority, path, _empty, _empty);\n    }\n    static from(components) {\n        const result = new Uri(components.scheme, components.authority, components.path, components.query, components.fragment);\n        _validateUri(result, true);\n        return result;\n    }\n    /**\n     * Join a URI path with path fragments and normalizes the resulting path.\n     *\n     * @param uri The input URI.\n     * @param pathFragment The path fragment to add to the URI path.\n     * @returns The resulting URI.\n     */\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw new Error(`[UriError]: cannot call joinPath on URI without path`);\n        }\n        let newPath;\n        if (isWindows && uri.scheme === 'file') {\n            newPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n        }\n        else {\n            newPath = paths.posix.join(uri.path, ...pathFragment);\n        }\n        return uri.with({ path: newPath });\n    }\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    toString(skipEncoding = false) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            const result = new Uri(data);\n            result._formatted = data.external;\n            result._fsPath = data._sep === _pathSepMarker ? data.fsPath : null;\n            return result;\n        }\n    }\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = false) {\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: 1 /* Uri */\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        // uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable = {\n    [58 /* Colon */]: '%3A',\n    [47 /* Slash */]: '%2F',\n    [63 /* QuestionMark */]: '%3F',\n    [35 /* Hash */]: '%23',\n    [91 /* OpenSquareBracket */]: '%5B',\n    [93 /* CloseSquareBracket */]: '%5D',\n    [64 /* AtSign */]: '%40',\n    [33 /* ExclamationMark */]: '%21',\n    [36 /* DollarSign */]: '%24',\n    [38 /* Ampersand */]: '%26',\n    [39 /* SingleQuote */]: '%27',\n    [40 /* OpenParen */]: '%28',\n    [41 /* CloseParen */]: '%29',\n    [42 /* Asterisk */]: '%2A',\n    [43 /* Plus */]: '%2B',\n    [44 /* Comma */]: '%2C',\n    [59 /* Semicolon */]: '%3B',\n    [61 /* Equals */]: '%3D',\n    [32 /* Space */]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, allowSlash) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* a */ && code <= 122 /* z */)\n            || (code >= 65 /* A */ && code <= 90 /* Z */)\n            || (code >= 48 /* Digit0 */ && code <= 57 /* Digit9 */)\n            || code === 45 /* Dash */\n            || code === 46 /* Period */\n            || code === 95 /* Underline */\n            || code === 126 /* Tilde */\n            || (allowSlash && code === 47 /* Slash */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === 35 /* Hash */ || code === 63 /* QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* A */ && uri.path.charCodeAt(1) <= 90 /* Z */ || uri.path.charCodeAt(1) >= 97 /* a */ && uri.path.charCodeAt(1) <= 122 /* z */)\n        && uri.path.charCodeAt(2) === 58 /* Colon */) {\n        if (!keepDriveLetterCasing) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.indexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.indexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* Slash */ && path.charCodeAt(2) === 58 /* Colon */) {\n            const code = path.charCodeAt(1);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* Colon */) {\n            const code = path.charCodeAt(0);\n            if (code >= 65 /* A */ && code <= 90 /* Z */) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false) : fragment;\n    }\n    return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (_a) {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","// prep-work\nconst _data = new Uint8Array(16);\nconst _hex = [];\nfor (let i = 0; i < 256; i++) {\n    _hex.push(i.toString(16).padStart(2, '0'));\n}\n// todo@jrieken - with node@15 crypto#getRandomBytes is available everywhere, https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues#browser_compatibility\nlet _fillRandomValues;\nif (typeof crypto === 'object' && typeof crypto.getRandomValues === 'function') {\n    // browser\n    _fillRandomValues = crypto.getRandomValues.bind(crypto);\n}\nelse {\n    _fillRandomValues = function (bucket) {\n        for (let i = 0; i < bucket.length; i++) {\n            bucket[i] = Math.floor(Math.random() * 256);\n        }\n        return bucket;\n    };\n}\nexport function generateUuid() {\n    // get data\n    _fillRandomValues(_data);\n    // set version bits\n    _data[6] = (_data[6] & 0x0f) | 0x40;\n    _data[8] = (_data[8] & 0x3f) | 0x80;\n    // print as string\n    let i = 0;\n    let result = '';\n    result += _hex[_data[i++]];\n    result += _hex[_data[i++]];\n    result += _hex[_data[i++]];\n    result += _hex[_data[i++]];\n    result += '-';\n    result += _hex[_data[i++]];\n    result += _hex[_data[i++]];\n    result += '-';\n    result += _hex[_data[i++]];\n    result += _hex[_data[i++]];\n    result += '-';\n    result += _hex[_data[i++]];\n    result += _hex[_data[i++]];\n    result += '-';\n    result += _hex[_data[i++]];\n    result += _hex[_data[i++]];\n    result += _hex[_data[i++]];\n    result += _hex[_data[i++]];\n    result += _hex[_data[i++]];\n    result += _hex[_data[i++]];\n    return result;\n}\n"],"names":["GLOBSTAR","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","splitGlobAware","pattern","splitChar","segments","inBraces","inBrackets","curVal","char","push","parseRegExp","regEx","every","s","previousSegmentWasGlobStar","forEach","segment","index","braceVal","bracketVal","choices","braceRegExp","map","c","join","escapeRegExpCharacters","length","T1","T2","T3","T3_2","T4","T5","CACHE","LRUCache","FALSE","NULL","parsePattern","arg1","options","trim","match","patternKey","trimForExclusions","parsedPattern","get","wrapRelativePattern","test","base","substr","path","basename","endsWith","exec","originalPattern","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","slice","split","filter","n","i","withBasenames","find","allPaths","reduce","all","current","concat","trivia3","trivia4and5","regExp","RegExp","lastIndex","error","toRegExp","set","arg2","isEqualOrParent","isLinux","targetPath","matchPathEnds","usingPosixSep","sep","posix","nativePath","replace","nativePathEnd","targetPathEnd","testPath","hasSibling","parse","undefined","isRelativePattern","resultPattern","parsedExpression","obj","rp","expression","Object","getOwnPropertyNames","value","when","result","name","matched","isThenable","then","m","requiresSiblings","parseExpressionPattern","some","resultExpression","extname","basenamePatterns","aggregate","ch","charCodeAt","indexOf","aggregatedPatterns","hash","doHash","hashVal","numberHash","Array","isArray","arr","initialHashVal","item","keys","sort","key","stringHash","objectHash","b","booleanHash","val","leftRotate","bits","totalBits","delta","mask","fill","dest","count","byteLength","leftPad","toHexString","bufferOrValue","bitsize","ArrayBuffer","from","Uint8Array","toString","padStart","StringSHA1","this","_h0","_h1","_h2","_h3","_h4","_buff","_buffDV","DataView","buffer","_buffLen","_totalLen","_leftoverHighSurrogate","_finished","str","strLen","charCode","offset","buff","buffLen","leftoverHighSurrogate","codePoint","strings","nextCharCode","_push","_step","_wrapUp","ml","setUint32","Math","floor","bigBlock32","_bigBlock32","data","j","getUint32","f","k","temp","a","d","e","ArrayNavigator","items","start","end","min","max","HistoryNavigator","history","limit","_initialize","_limit","_onChange","_elements","t","_history","delete","add","_currentPosition","_navigator","next","previous","first","last","has","_reduceToLimit","elements","currentElement","Set","entry","MarkdownString","_a","_b","_c","isTrustedOrOptions","illegalArgument","isTrusted","supportThemeIcons","supportHtml","newlineStyle","escapeMarkdownSyntaxTokens","escapeIcons","_match","g1","repeat","langId","code","isEmptyMarkdownString","oneOrMany","isMarkdownString","thing","text","removeMarkdownEscapes","parseHrefAndDimensions","href","dimensions","splitted","parameters","heightFromParams","widthFromParams","height","width","widthIsFinite","isFinite","parseInt","heightIsFinite","iconStartMarker","iconsRegex","CSSIcon","iconNameCharacterRegexp","escapeIconsRegex","source","escaped","markdownEscapedIconsRegex","markdownEscapeEscapedIcons","stripIconsRegex","stripIcons","preWhitespace","postWhitespace","parseLabelWithIcons","firstIconIndex","iconOffsets","textWithoutIcons","appendChars","chars","iconsOffset","nextChar","currentIconStart","currentIconValue","doParseLabelWithIcons","matchesFuzzyIconAware","query","target","enableSeparateSubstringMatching","matchesFuzzy","wordToMatchAgainstWithoutIconsTrimmed","ltrim","leadingWhitespaceOffset","matches","iconOffset","IdGenerator","prefix","_prefix","_lastId","defaultGenerator","Iterable","single","concatNested","is","Symbol","iterator","_empty","freeze","element","iterable","predicate","fn","iterables","to","empty","isEmpty","done","reducer","initialValue","consume","atMost","Number","POSITIVE_INFINITY","consumed","equals","comparator","at","bt","ai","bi","an","bn","KeyCodeUtils","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","create","keyCode","toLowerCase","uiMap","userSettingsUSMap","userSettingsGeneralMap","EVENT_KEY_CODE_MAP","NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE","scanCodeIntToStr","scanCodeStrToInt","scanCodeLowerCaseStrToInt","IMMUTABLE_CODE_TO_KEY_CODE","IMMUTABLE_KEY_CODE_TO_CODE","KeyChord","firstPart","secondPart","seenKeyCode","seenScanCode","mapping","immutable","scanCode","scanCodeStr","keyCodeStr","eventKeyCode","vkey","usUserSettingsLabel","generalUserSettingsLabel","Error","define","keyCodeToStr","fromString","strToKeyCode","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","toElectronAccelerator","ModifierLabelProvider","mac","windows","linux","modifierLabels","OS","parts","keyLabelProvider","len","part","keyLabel","_simpleAsString","UILabelProvider","ctrlKey","shiftKey","altKey","metaKey","separator","nls","comment","AriaLabelProvider","ElectronAcceleratorLabelProvider","modifiers","labels","createKeybinding","keybinding","chordPart","ChordKeybinding","createSimpleKeybinding","ctrlCmd","winCtrl","SimpleKeybinding","other","ResolvedKeybindingPart","kbLabel","kbAriaLabel","keyAriaLabel","ResolvedKeybinding","getBaseLabel","resource","URI","scheme","Schemas","fsPath","isWindows","isRootOrDriveLetter","normalizeDriveLetter","continueAsWindows","hasDriveLetter","charAt","toUpperCase","Lazy","executor","_didRun","_value","err","_error","disposableTracker","trackDisposable","x","markAsDisposed","disposable","setParentOfDisposable","child","parent","setParent","setParentOfDisposables","children","markAsSingleton","singleton","MultiDisposeError","errors","isDisposable","dispose","arg","combinedDisposable","disposables","toDisposable","self","once","DisposableStore","_toDispose","_isDisposed","clear","values","o","DISABLE_DISPOSED_WARNING","console","warn","stack","Disposable","_store","None","MutableDisposable","oldValue","ImmortalReference","object","Node","Undefined","prev","LinkedList","_first","_last","_size","node","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","res","anchor","StringIterator","_pos","ConfigKeysIterator","_caseSensitive","_from","_to","justSeps","compareSubstring","compareSubstringIgnoreCase","substring","PathIterator","_splitOnBackslash","_valueLen","pos","UriIterator","_ignorePathCasing","_states","_stateIdx","authority","_pathIterator","reset","fragment","hasNext","compareIgnoreCase","cmp","compare","TernarySearchTreeNode","tmp","right","left","updateHeight","heightLeft","heightRight","_d","TernarySearchTree","_iter","_root","iter","mid","oldElement","bf","balanceFactor","d1","d2","rotateLeft","rotateRight","_getNode","_delete","superStr","_min","newChild","dir","candidate","_entries","callback","ignorePathCasing","ResourceMapEntry","uri","ResourceMap","mapOrKeyFn","toKey","Map","defaultToKey","size","clb","thisArg","bind","toStringTag","LinkedMap","_map","_head","_tail","_state","touch","addItemLast","addItemFirst","remove","removeItem","callbackfn","state","entries","newSize","currentSize","ratio","_ratio","checkTrim","trimOld","round","__marked_exports","deps","factory","global","amd","exports","_defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","_arrayLikeToArray","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","call","minLen","prototype","constructor","_unsupportedIterableToArray","TypeError","getDefaults","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","defaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","escape","html","encode","unescapeTest","unescape","_","String","fromCharCode","caret","edit","regex","opt","getRegex","nonWordAndColonTest","originIndependentUrl","cleanUrl","prot","decodeURIComponent","baseUrls","justDomain","rtrim","relativeBase","protocol","domain","resolveUrl","encodeURI","noopTest","merge","arguments","hasOwnProperty","splitCells","tableRow","cells","curr","shift","pop","splice","invert","l","suffLen","currChar","checkSanitizeDeprecation","repeatString","outputLink","cap","link","raw","lexer","title","inLink","token","type","tokens","inlineTokens","Tokenizer","_proto","space","src","rules","block","newline","codeBlockStyle","fences","matchIndentToCode","indentToCode","matchIndentInNode","indentCodeCompensation","lang","heading","trimmed","depth","inline","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","loose","itemRegex","trimLeft","search","nextBulletRegex","task","checked","trimRight","top","spacers","hasMultipleLineBreaks","lineBreaks","_iterator","pre","def","tag","table","header","align","rows","row","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","level","findClosingBracket","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","punctuation","rDelim","rLength","lLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","_text","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","random","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","inlineQueue","lex","lexInline","Constructor","protoProps","staticProps","lastToken","cutSrc","lastParagraphClipped","_this","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","_this2","keepPrevChar","includes","lastIndexOf","startInline","Renderer","_code","infostring","quote","_html","slugger","slug","body","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parseInline","l2","l3","cell","itemBody","ret","renderers","parser","unshift","marked","pending","setTimeout","_tokens","message","setOptions","newDefaults","use","_len","args","_key","hasExtensions","opts","apply","childTokens","pack","ext","prevRenderer","_len2","_key2","_loop","prop","_len3","_key3","_loop2","prevTokenizer","_len4","_key4","_walkTokens","_loop3","_step2","_iterator2","_step3","_iterator3","_step4","_iterator4","_cell","globalThis","JSON","revive","$mid","Date","VSBuffer","Mimes","binary","unknown","markdown","latex","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","file","mailto","untitled","command","vscodeRemote","vscodeRemoteResource","userData","vscodeCustomEditor","vscodeNotebook","vscodeNotebookCell","vscodeNotebookCellMetadata","vscodeNotebookCellOutput","vscodeInteractive","vscodeInteractiveInput","vscodeSettings","vscodeWorkspaceTrust","vscodeTerminal","webviewPanel","vscodeWebview","extension","vscodeFileResource","vsls","RemoteAuthorities","RemoteAuthoritiesImpl","_hosts","_ports","_connectionTokens","_preferredWebSchema","_delegate","schema","host","port","connectionToken","encodeURIComponent","platform","FileAccessImpl","uriOrModule","moduleIdToUrl","toUri","rewrite","FALLBACK_AUTHORITY","with","toUrl","FileAccess","clamp","MovingAverage","_n","_val","SlidingWindowAverage","_values","_index","_sum","deepClone","deepFreeze","_hasOwnProperty","isFrozen","cloneAndChange","changer","_cloneAndChange","isUndefinedOrNull","changed","r1","isObject","r2","i2","mixin","destination","overwrite","one","oneKeys","otherKeys","getOrDefault","defaultValue","safeProcess","globals","sandboxProcess","arch","env","cwd","process","isMacintosh","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","ErrorInvalidArgType","expected","actual","determiner","msg","validateString","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","_format","pathObject","root","win32","resolve","resolvedDevice","resolvedTail","resolvedAbsolute","rootEnd","device","isAbsolute","normalize","tail","joined","needsReplace","slashCount","firstLen","relative","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","toNamespacedPath","resolvedPath","dirname","matchedSlash","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","format","delimiter","trailingSeparator","hasRoot","LANGUAGE_DEFAULT","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_language","_userAgent","nodeProcess","isElectronProcess","versions","electron","isElectronRenderer","navigator","rawNlsConfig","nlsConfig","resolved","availableLanguages","locale","_translationsConfigFile","userAgent","maxTouchPoints","language","isNative","isWeb","isIOS","setTimeout0","postMessage","importScripts","addEventListener","vscodeScheduleAsyncWork","id","lastId","myId","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","view","Uint16Array","isChrome","isFirefox","isSafari","isEdge","Range","intersect","range","intersects","relativeComplement","second","originalFSPath","uriToFsPath","DataUri","ExtUri","uri1","uri2","ignoreFragment","strCompare","getComparisonKey","parentCandidate","extpath","isEqualAuthority","pathFragment","paths","normalizedPath","relativePath","fromPath","toPath","newURI","a1","a2","equalsIgnoreCase","fsp","p","hasTrailingPathSeparator","isRootSep","extUri","isEqual","basenameOrAuthority","joinPath","normalizePath","resolvePath","isAbsolutePath","removeTrailingPathSeparator","addTrailingPathSeparator","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","metadata","property","mime","ScrollState","_forceIntegerValues","scrollWidth","scrollLeft","scrollHeight","scrollTop","_scrollStateBrand","rawScrollLeft","rawScrollTop","update","useRawScrollPositions","inSmoothScrolling","widthChanged","scrollWidthChanged","scrollLeftChanged","heightChanged","scrollHeightChanged","scrollTopChanged","oldWidth","oldScrollWidth","oldScrollLeft","oldHeight","oldScrollHeight","oldScrollTop","Scrollable","_scrollableBrand","_onScroll","_register","Emitter","onScroll","event","_smoothScrollDuration","smoothScrollDuration","_scheduleAtNextAnimationFrame","scheduleAtNextAnimationFrame","forceIntegerValues","_smoothScrolling","scrollPosition","withScrollPosition","newState","withScrollDimensions","_setState","Boolean","acceptScrollDimensions","reuseAnimation","setScrollPositionNow","newSmoothScrolling","validTarget","SmoothScrollingOperation","startTime","duration","combine","animationFrameDisposable","_performSmoothScrolling","tick","isDone","oldState","fire","createScrollEvent","SmoothScrollingUpdate","createEaseOutCubic","completion","pow","easeInCubic","_initAnimations","_initAnimation","viewportSize","stop1","stop2","cut","abs","_tick","now","newScrollLeft","newScrollTop","buildReplaceStringWithCasePreserved","containsHyphens","validateSpecificSpecialCharacter","containsUnderscores","buildReplaceStringForSpecificSpecialCharacter","specialCharacter","splitPatternAtSpecialCharacter","splitMatchAtSpecialCharacter","replaceString","splitValue","Severity","_warning","_info","fromValue","Warning","Info","Ignore","severity","hasPerformanceNow","StopWatch","highResolution","_highResolution","_startTime","_now","_stopTime","isFalsyOrWhitespace","_formatRegexp","group","idx","isNaN","haystack","needle","needleLen","haystackLen","convertSimple2RegExpPattern","stripWildcards","createRegExp","searchString","isRegex","wholeWord","matchCase","multiline","unicode","regExpLeadsToEndlessLoop","regexp","regExpFlags","ignoreCase","splitLines","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","isLowerAsciiLetter","diff","isUpperAsciiLetter","startsWithIgnoreCase","candidateLength","commonPrefixLength","commonSuffixLength","aLastIndex","bLastIndex","isHighSurrogate","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","CodePointIterator","_str","_offset","prevCharCode","getPrevCodePoint","GraphemeIterator","graphemeBreakTree","GraphemeBreakTree","getInstance","initialOffset","graphemeBreakType","getGraphemeBreakType","nextCodePoint","eol","nextGraphemeBreakType","breakBetweenGraphemeBreakType","setOffset","prevCodePoint","prevGraphemeBreakType","nextCharLength","nextGraphemeLength","prevCharLength","prevGraphemeLength","getCharContainingOffset","endOffset","CONTAINS_RTL","containsRTL","IS_BASIC_ASCII","isBasicASCII","UNUSUAL_LINE_TERMINATORS","containsUnusualLineTerminators","isFullWidthCharacter","isEmojiImprecise","UTF8_BOM_CHARACTER","startsWithUTF8BOM","containsUppercaseCharacter","ignoreEscapedChars","singleLetterHash","breakTypeA","breakTypeB","_data","nodeCount","nodeIndex","_INSTANCE","getLeftDeleteOffset","emojiOffset","isEmojiModifier","resultOffset","getOffsetBeforeLastEmojiComponent","noBreakWhitespace","AmbiguousCharacters","confusableDictionary","locales","cache","_locales","getValue","ambiguousCharacterData","LRUCachedComputed","arrayToMap","intersectMaps","map1","map2","filteredLocales","startsWith","languageSpecificMap","mergeMaps","InvisibleCharacters","getRawData","getData","array","isString","isNumber","isBoolean","isUndefined","isDefined","assertType","condition","assertIsDefined","isFunction","validateConstraints","constraints","validateConstraint","constraint","getAllMethodNames","methods","proto","getPrototypeOf","getAllPropertyNames","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","withNullAsUndefined","assertNever","toUint8","v","toUint32","_schemePattern","_singleSlashStart","_doubleSlashStart","_validateUri","_strict","_schemeFix","_referenceResolution","_slash","_regexp","schemeOrData","change","Uri","skipEncoding","_asFormatted","percentDecode","components","newPath","_formatted","external","_fsPath","_sep","_pathSepMarker","encodeTable","encodeURIComponentFast","uriComponent","allowSlash","nativeEncodePos","encodeURIComponentMinimal","keepDriveLetterCasing","encoder","userinfo","decodeURIComponentGraceful","_rEncodedAsHex","_fillRandomValues","_hex","generateUuid","crypto","getRandomValues","bucket"],"sourceRoot":""}