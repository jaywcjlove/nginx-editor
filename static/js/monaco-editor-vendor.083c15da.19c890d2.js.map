{"version":3,"file":"static/js/monaco-editor-vendor.083c15da.19c890d2.js","mappings":"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","sources":["../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/storage/common/storage.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/telemetry/common/telemetry.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/theme/browser/defaultStyles.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/theme/browser/iconsStyleSheet.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/theme/common/colorRegistry.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/theme/common/iconRegistry.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/theme/common/theme.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/theme/common/themeService.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/undoRedo/common/undoRedo.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/undoRedo/common/undoRedoService.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/workspace/common/workspace.js","../node_modules/@uiw/react-monacoeditor/node_modules/monaco-editor/esm/vs/platform/workspace/common/workspaceTrust.js"],"sourcesContent":["import { Emitter, PauseableEmitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { isUndefinedOrNull } from '../../../base/common/types.js';\nimport { InMemoryStorageDatabase, Storage, StorageHint } from '../../../base/parts/storage/common/storage.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const TARGET_KEY = '__$__targetStorageMarker';\nexport const IStorageService = createDecorator('storageService');\nexport var WillSaveStateReason;\n(function (WillSaveStateReason) {\n    /**\n     * No specific reason to save state.\n     */\n    WillSaveStateReason[WillSaveStateReason[\"NONE\"] = 0] = \"NONE\";\n    /**\n     * A hint that the workbench is about to shutdown.\n     */\n    WillSaveStateReason[WillSaveStateReason[\"SHUTDOWN\"] = 1] = \"SHUTDOWN\";\n})(WillSaveStateReason || (WillSaveStateReason = {}));\nexport function loadKeyTargets(storage) {\n    const keysRaw = storage.get(TARGET_KEY);\n    if (keysRaw) {\n        try {\n            return JSON.parse(keysRaw);\n        }\n        catch (error) {\n            // Fail gracefully\n        }\n    }\n    return Object.create(null);\n}\nclass AbstractStorageService extends Disposable {\n    constructor(options = { flushInterval: AbstractStorageService.DEFAULT_FLUSH_INTERVAL }) {\n        super();\n        this.options = options;\n        this._onDidChangeValue = this._register(new PauseableEmitter());\n        this.onDidChangeValue = this._onDidChangeValue.event;\n        this._onDidChangeTarget = this._register(new PauseableEmitter());\n        this._onWillSaveState = this._register(new Emitter());\n        this.onWillSaveState = this._onWillSaveState.event;\n        this._workspaceKeyTargets = undefined;\n        this._profileKeyTargets = undefined;\n        this._applicationKeyTargets = undefined;\n    }\n    emitDidChangeValue(scope, key) {\n        // Specially handle `TARGET_KEY`\n        if (key === TARGET_KEY) {\n            // Clear our cached version which is now out of date\n            switch (scope) {\n                case -1 /* StorageScope.APPLICATION */:\n                    this._applicationKeyTargets = undefined;\n                    break;\n                case 0 /* StorageScope.PROFILE */:\n                    this._profileKeyTargets = undefined;\n                    break;\n                case 1 /* StorageScope.WORKSPACE */:\n                    this._workspaceKeyTargets = undefined;\n                    break;\n            }\n            // Emit as `didChangeTarget` event\n            this._onDidChangeTarget.fire({ scope });\n        }\n        // Emit any other key to outside\n        else {\n            this._onDidChangeValue.fire({ scope, key, target: this.getKeyTargets(scope)[key] });\n        }\n    }\n    get(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.get(key, fallbackValue);\n    }\n    getBoolean(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.getBoolean(key, fallbackValue);\n    }\n    getNumber(key, scope, fallbackValue) {\n        var _a;\n        return (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.getNumber(key, fallbackValue);\n    }\n    store(key, value, scope, target) {\n        // We remove the key for undefined/null values\n        if (isUndefinedOrNull(value)) {\n            this.remove(key, scope);\n            return;\n        }\n        // Update our datastructures but send events only after\n        this.withPausedEmitters(() => {\n            var _a;\n            // Update key-target map\n            this.updateKeyTarget(key, scope, target);\n            // Store actual value\n            (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.set(key, value);\n        });\n    }\n    remove(key, scope) {\n        // Update our datastructures but send events only after\n        this.withPausedEmitters(() => {\n            var _a;\n            // Update key-target map\n            this.updateKeyTarget(key, scope, undefined);\n            // Remove actual key\n            (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.delete(key);\n        });\n    }\n    withPausedEmitters(fn) {\n        // Pause emitters\n        this._onDidChangeValue.pause();\n        this._onDidChangeTarget.pause();\n        try {\n            fn();\n        }\n        finally {\n            // Resume emitters\n            this._onDidChangeValue.resume();\n            this._onDidChangeTarget.resume();\n        }\n    }\n    updateKeyTarget(key, scope, target) {\n        var _a, _b;\n        // Add\n        const keyTargets = this.getKeyTargets(scope);\n        if (typeof target === 'number') {\n            if (keyTargets[key] !== target) {\n                keyTargets[key] = target;\n                (_a = this.getStorage(scope)) === null || _a === void 0 ? void 0 : _a.set(TARGET_KEY, JSON.stringify(keyTargets));\n            }\n        }\n        // Remove\n        else {\n            if (typeof keyTargets[key] === 'number') {\n                delete keyTargets[key];\n                (_b = this.getStorage(scope)) === null || _b === void 0 ? void 0 : _b.set(TARGET_KEY, JSON.stringify(keyTargets));\n            }\n        }\n    }\n    get workspaceKeyTargets() {\n        if (!this._workspaceKeyTargets) {\n            this._workspaceKeyTargets = this.loadKeyTargets(1 /* StorageScope.WORKSPACE */);\n        }\n        return this._workspaceKeyTargets;\n    }\n    get profileKeyTargets() {\n        if (!this._profileKeyTargets) {\n            this._profileKeyTargets = this.loadKeyTargets(0 /* StorageScope.PROFILE */);\n        }\n        return this._profileKeyTargets;\n    }\n    get applicationKeyTargets() {\n        if (!this._applicationKeyTargets) {\n            this._applicationKeyTargets = this.loadKeyTargets(-1 /* StorageScope.APPLICATION */);\n        }\n        return this._applicationKeyTargets;\n    }\n    getKeyTargets(scope) {\n        switch (scope) {\n            case -1 /* StorageScope.APPLICATION */:\n                return this.applicationKeyTargets;\n            case 0 /* StorageScope.PROFILE */:\n                return this.profileKeyTargets;\n            default:\n                return this.workspaceKeyTargets;\n        }\n    }\n    loadKeyTargets(scope) {\n        const storage = this.getStorage(scope);\n        return storage ? loadKeyTargets(storage) : Object.create(null);\n    }\n}\nAbstractStorageService.DEFAULT_FLUSH_INTERVAL = 60 * 1000; // every minute\nexport { AbstractStorageService };\nexport class InMemoryStorageService extends AbstractStorageService {\n    constructor() {\n        super();\n        this.applicationStorage = this._register(new Storage(new InMemoryStorageDatabase(), { hint: StorageHint.STORAGE_IN_MEMORY }));\n        this.profileStorage = this._register(new Storage(new InMemoryStorageDatabase(), { hint: StorageHint.STORAGE_IN_MEMORY }));\n        this.workspaceStorage = this._register(new Storage(new InMemoryStorageDatabase(), { hint: StorageHint.STORAGE_IN_MEMORY }));\n        this._register(this.workspaceStorage.onDidChangeStorage(key => this.emitDidChangeValue(1 /* StorageScope.WORKSPACE */, key)));\n        this._register(this.profileStorage.onDidChangeStorage(key => this.emitDidChangeValue(0 /* StorageScope.PROFILE */, key)));\n        this._register(this.applicationStorage.onDidChangeStorage(key => this.emitDidChangeValue(-1 /* StorageScope.APPLICATION */, key)));\n    }\n    getStorage(scope) {\n        switch (scope) {\n            case -1 /* StorageScope.APPLICATION */:\n                return this.applicationStorage;\n            case 0 /* StorageScope.PROFILE */:\n                return this.profileStorage;\n            default:\n                return this.workspaceStorage;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const ITelemetryService = createDecorator('telemetryService');\n","import { keybindingLabelBackground, keybindingLabelBorder, keybindingLabelBottomBorder, keybindingLabelForeground, asCssVariable, widgetShadow, buttonForeground, buttonSeparator, buttonBackground, buttonHoverBackground, buttonSecondaryForeground, buttonSecondaryBackground, buttonSecondaryHoverBackground, buttonBorder, progressBarBackground, inputActiveOptionBorder, inputActiveOptionForeground, inputActiveOptionBackground, editorWidgetBackground, editorWidgetForeground, contrastBorder, checkboxBorder, checkboxBackground, checkboxForeground, problemsErrorIconForeground, problemsWarningIconForeground, problemsInfoIconForeground, inputBackground, inputForeground, inputBorder, textLinkForeground, inputValidationInfoBorder, inputValidationInfoBackground, inputValidationInfoForeground, inputValidationWarningBorder, inputValidationWarningBackground, inputValidationWarningForeground, inputValidationErrorBorder, inputValidationErrorBackground, inputValidationErrorForeground, listFilterWidgetBackground, listFilterWidgetNoMatchesOutline, listFilterWidgetOutline, listFilterWidgetShadow, badgeBackground, badgeForeground, breadcrumbsBackground, breadcrumbsForeground, breadcrumbsFocusForeground, breadcrumbsActiveSelectionForeground, activeContrastBorder, listActiveSelectionBackground, listActiveSelectionForeground, listActiveSelectionIconForeground, listDropBackground, listFocusAndSelectionOutline, listFocusBackground, listFocusForeground, listFocusOutline, listHoverBackground, listHoverForeground, listInactiveFocusBackground, listInactiveFocusOutline, listInactiveSelectionBackground, listInactiveSelectionForeground, listInactiveSelectionIconForeground, tableColumnsBorder, tableOddRowsBackgroundColor, treeIndentGuidesStroke, asCssVariableWithDefault, editorWidgetBorder, focusBorder, pickerGroupForeground, quickInputListFocusBackground, quickInputListFocusForeground, quickInputListFocusIconForeground, selectBackground, selectBorder, selectForeground, selectListBackground, treeInactiveIndentGuidesStroke, menuBorder, menuForeground, menuBackground, menuSelectionForeground, menuSelectionBackground, menuSelectionBorder, menuSeparatorBackground, scrollbarShadow, scrollbarSliderActiveBackground, scrollbarSliderBackground, scrollbarSliderHoverBackground } from '../common/colorRegistry.js';\nimport { Color } from '../../../base/common/color.js';\nfunction overrideStyles(override, styles) {\n    const result = Object.assign({}, styles);\n    for (const key in override) {\n        const val = override[key];\n        result[key] = val !== undefined ? asCssVariable(val) : undefined;\n    }\n    return result;\n}\nexport const defaultKeybindingLabelStyles = {\n    keybindingLabelBackground: asCssVariable(keybindingLabelBackground),\n    keybindingLabelForeground: asCssVariable(keybindingLabelForeground),\n    keybindingLabelBorder: asCssVariable(keybindingLabelBorder),\n    keybindingLabelBottomBorder: asCssVariable(keybindingLabelBottomBorder),\n    keybindingLabelShadow: asCssVariable(widgetShadow)\n};\nexport const defaultButtonStyles = {\n    buttonForeground: asCssVariable(buttonForeground),\n    buttonSeparator: asCssVariable(buttonSeparator),\n    buttonBackground: asCssVariable(buttonBackground),\n    buttonHoverBackground: asCssVariable(buttonHoverBackground),\n    buttonSecondaryForeground: asCssVariable(buttonSecondaryForeground),\n    buttonSecondaryBackground: asCssVariable(buttonSecondaryBackground),\n    buttonSecondaryHoverBackground: asCssVariable(buttonSecondaryHoverBackground),\n    buttonBorder: asCssVariable(buttonBorder),\n};\nexport const defaultProgressBarStyles = {\n    progressBarBackground: asCssVariable(progressBarBackground)\n};\nexport const defaultToggleStyles = {\n    inputActiveOptionBorder: asCssVariable(inputActiveOptionBorder),\n    inputActiveOptionForeground: asCssVariable(inputActiveOptionForeground),\n    inputActiveOptionBackground: asCssVariable(inputActiveOptionBackground)\n};\nexport const defaultCheckboxStyles = {\n    checkboxBackground: asCssVariable(checkboxBackground),\n    checkboxBorder: asCssVariable(checkboxBorder),\n    checkboxForeground: asCssVariable(checkboxForeground)\n};\nexport const defaultDialogStyles = {\n    dialogBackground: asCssVariable(editorWidgetBackground),\n    dialogForeground: asCssVariable(editorWidgetForeground),\n    dialogShadow: asCssVariable(widgetShadow),\n    dialogBorder: asCssVariable(contrastBorder),\n    errorIconForeground: asCssVariable(problemsErrorIconForeground),\n    warningIconForeground: asCssVariable(problemsWarningIconForeground),\n    infoIconForeground: asCssVariable(problemsInfoIconForeground),\n    textLinkForeground: asCssVariable(textLinkForeground)\n};\nexport const defaultInputBoxStyles = {\n    inputBackground: asCssVariable(inputBackground),\n    inputForeground: asCssVariable(inputForeground),\n    inputBorder: asCssVariable(inputBorder),\n    inputValidationInfoBorder: asCssVariable(inputValidationInfoBorder),\n    inputValidationInfoBackground: asCssVariable(inputValidationInfoBackground),\n    inputValidationInfoForeground: asCssVariable(inputValidationInfoForeground),\n    inputValidationWarningBorder: asCssVariable(inputValidationWarningBorder),\n    inputValidationWarningBackground: asCssVariable(inputValidationWarningBackground),\n    inputValidationWarningForeground: asCssVariable(inputValidationWarningForeground),\n    inputValidationErrorBorder: asCssVariable(inputValidationErrorBorder),\n    inputValidationErrorBackground: asCssVariable(inputValidationErrorBackground),\n    inputValidationErrorForeground: asCssVariable(inputValidationErrorForeground)\n};\nexport const defaultFindWidgetStyles = {\n    listFilterWidgetBackground: asCssVariable(listFilterWidgetBackground),\n    listFilterWidgetOutline: asCssVariable(listFilterWidgetOutline),\n    listFilterWidgetNoMatchesOutline: asCssVariable(listFilterWidgetNoMatchesOutline),\n    listFilterWidgetShadow: asCssVariable(listFilterWidgetShadow),\n    inputBoxStyles: defaultInputBoxStyles,\n    toggleStyles: defaultToggleStyles\n};\nexport const defaultCountBadgeStyles = {\n    badgeBackground: asCssVariable(badgeBackground),\n    badgeForeground: asCssVariable(badgeForeground),\n    badgeBorder: asCssVariable(contrastBorder)\n};\nexport const defaultBreadcrumbsWidgetStyles = {\n    breadcrumbsBackground: asCssVariable(breadcrumbsBackground),\n    breadcrumbsForeground: asCssVariable(breadcrumbsForeground),\n    breadcrumbsHoverForeground: asCssVariable(breadcrumbsFocusForeground),\n    breadcrumbsFocusForeground: asCssVariable(breadcrumbsFocusForeground),\n    breadcrumbsFocusAndSelectionForeground: asCssVariable(breadcrumbsActiveSelectionForeground)\n};\nexport const defaultListStyles = {\n    listBackground: undefined,\n    listInactiveFocusForeground: undefined,\n    listFocusBackground: asCssVariable(listFocusBackground),\n    listFocusForeground: asCssVariable(listFocusForeground),\n    listFocusOutline: asCssVariable(listFocusOutline),\n    listActiveSelectionBackground: asCssVariable(listActiveSelectionBackground),\n    listActiveSelectionForeground: asCssVariable(listActiveSelectionForeground),\n    listActiveSelectionIconForeground: asCssVariable(listActiveSelectionIconForeground),\n    listFocusAndSelectionOutline: asCssVariable(listFocusAndSelectionOutline),\n    listFocusAndSelectionBackground: asCssVariable(listActiveSelectionBackground),\n    listFocusAndSelectionForeground: asCssVariable(listActiveSelectionForeground),\n    listInactiveSelectionBackground: asCssVariable(listInactiveSelectionBackground),\n    listInactiveSelectionIconForeground: asCssVariable(listInactiveSelectionIconForeground),\n    listInactiveSelectionForeground: asCssVariable(listInactiveSelectionForeground),\n    listInactiveFocusBackground: asCssVariable(listInactiveFocusBackground),\n    listInactiveFocusOutline: asCssVariable(listInactiveFocusOutline),\n    listHoverBackground: asCssVariable(listHoverBackground),\n    listHoverForeground: asCssVariable(listHoverForeground),\n    listDropBackground: asCssVariable(listDropBackground),\n    listSelectionOutline: asCssVariable(activeContrastBorder),\n    listHoverOutline: asCssVariable(activeContrastBorder),\n    treeIndentGuidesStroke: asCssVariable(treeIndentGuidesStroke),\n    treeInactiveIndentGuidesStroke: asCssVariable(treeInactiveIndentGuidesStroke),\n    tableColumnsBorder: asCssVariable(tableColumnsBorder),\n    tableOddRowsBackgroundColor: asCssVariable(tableOddRowsBackgroundColor),\n};\nexport function getListStyles(override) {\n    return overrideStyles(override, defaultListStyles);\n}\nexport const defaultSelectBoxStyles = {\n    selectBackground: asCssVariable(selectBackground),\n    selectListBackground: asCssVariable(selectListBackground),\n    selectForeground: asCssVariable(selectForeground),\n    decoratorRightForeground: asCssVariable(pickerGroupForeground),\n    selectBorder: asCssVariable(selectBorder),\n    focusBorder: asCssVariable(focusBorder),\n    listFocusBackground: asCssVariable(quickInputListFocusBackground),\n    listInactiveSelectionIconForeground: asCssVariable(quickInputListFocusIconForeground),\n    listFocusForeground: asCssVariable(quickInputListFocusForeground),\n    listFocusOutline: asCssVariableWithDefault(activeContrastBorder, Color.transparent.toString()),\n    listHoverBackground: asCssVariable(listHoverBackground),\n    listHoverForeground: asCssVariable(listHoverForeground),\n    listHoverOutline: asCssVariable(activeContrastBorder),\n    selectListBorder: asCssVariable(editorWidgetBorder),\n    listBackground: undefined,\n    listActiveSelectionBackground: undefined,\n    listActiveSelectionForeground: undefined,\n    listActiveSelectionIconForeground: undefined,\n    listFocusAndSelectionBackground: undefined,\n    listDropBackground: undefined,\n    listInactiveSelectionBackground: undefined,\n    listInactiveSelectionForeground: undefined,\n    listInactiveFocusBackground: undefined,\n    listInactiveFocusOutline: undefined,\n    listSelectionOutline: undefined,\n    listFocusAndSelectionForeground: undefined,\n    listFocusAndSelectionOutline: undefined,\n    listInactiveFocusForeground: undefined,\n    tableColumnsBorder: undefined,\n    tableOddRowsBackgroundColor: undefined,\n    treeIndentGuidesStroke: undefined,\n    treeInactiveIndentGuidesStroke: undefined,\n};\nexport const defaultMenuStyles = {\n    shadowColor: asCssVariable(widgetShadow),\n    borderColor: asCssVariable(menuBorder),\n    foregroundColor: asCssVariable(menuForeground),\n    backgroundColor: asCssVariable(menuBackground),\n    selectionForegroundColor: asCssVariable(menuSelectionForeground),\n    selectionBackgroundColor: asCssVariable(menuSelectionBackground),\n    selectionBorderColor: asCssVariable(menuSelectionBorder),\n    separatorColor: asCssVariable(menuSeparatorBackground),\n    scrollbarShadow: asCssVariable(scrollbarShadow),\n    scrollbarSliderBackground: asCssVariable(scrollbarSliderBackground),\n    scrollbarSliderHoverBackground: asCssVariable(scrollbarSliderHoverBackground),\n    scrollbarSliderActiveBackground: asCssVariable(scrollbarSliderActiveBackground)\n};\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { asCSSPropertyValue, asCSSUrl } from '../../../base/browser/dom.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { getIconRegistry } from '../common/iconRegistry.js';\nexport function getIconsStyleSheet(themeService) {\n    const onDidChangeEmmiter = new Emitter();\n    const iconRegistry = getIconRegistry();\n    iconRegistry.onDidChange(() => onDidChangeEmmiter.fire());\n    themeService === null || themeService === void 0 ? void 0 : themeService.onDidProductIconThemeChange(() => onDidChangeEmmiter.fire());\n    return {\n        onDidChange: onDidChangeEmmiter.event,\n        getCSS() {\n            const productIconTheme = themeService ? themeService.getProductIconTheme() : new UnthemedProductIconTheme();\n            const usedFontIds = {};\n            const formatIconRule = (contribution) => {\n                const definition = productIconTheme.getIcon(contribution);\n                if (!definition) {\n                    return undefined;\n                }\n                const fontContribution = definition.font;\n                if (fontContribution) {\n                    usedFontIds[fontContribution.id] = fontContribution.definition;\n                    return `.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; font-family: ${asCSSPropertyValue(fontContribution.id)}; }`;\n                }\n                // default font (codicon)\n                return `.codicon-${contribution.id}:before { content: '${definition.fontCharacter}'; }`;\n            };\n            const rules = [];\n            for (const contribution of iconRegistry.getIcons()) {\n                const rule = formatIconRule(contribution);\n                if (rule) {\n                    rules.push(rule);\n                }\n            }\n            for (const id in usedFontIds) {\n                const definition = usedFontIds[id];\n                const fontWeight = definition.weight ? `font-weight: ${definition.weight};` : '';\n                const fontStyle = definition.style ? `font-style: ${definition.style};` : '';\n                const src = definition.src.map(l => `${asCSSUrl(l.location)} format('${l.format}')`).join(', ');\n                rules.push(`@font-face { src: ${src}; font-family: ${asCSSPropertyValue(id)};${fontWeight}${fontStyle} font-display: block; }`);\n            }\n            return rules.join('\\n');\n        }\n    };\n}\nexport class UnthemedProductIconTheme {\n    getIcon(contribution) {\n        const iconRegistry = getIconRegistry();\n        let definition = contribution.defaults;\n        while (ThemeIcon.isThemeIcon(definition)) {\n            const c = iconRegistry.getIcon(definition.id);\n            if (!c) {\n                return undefined;\n            }\n            definition = c.defaults;\n        }\n        return definition;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Color, RGBA } from '../../../base/common/color.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { assertNever } from '../../../base/common/assert.js';\nimport * as nls from '../../../nls.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport * as platform from '../../registry/common/platform.js';\n/**\n * Returns the css variable name for the given color identifier. Dots (`.`) are replaced with hyphens (`-`) and\n * everything is prefixed with `--vscode-`.\n *\n * @sample `editorSuggestWidget.background` is `--vscode-editorSuggestWidget-background`.\n */\nexport function asCssVariableName(colorIdent) {\n    return `--vscode-${colorIdent.replace(/\\./g, '-')}`;\n}\nexport function asCssVariable(color) {\n    return `var(${asCssVariableName(color)})`;\n}\nexport function asCssVariableWithDefault(color, defaultCssValue) {\n    return `var(${asCssVariableName(color)}, ${defaultCssValue})`;\n}\n// color registry\nexport const Extensions = {\n    ColorContribution: 'base.contributions.colors'\n};\nclass ColorRegistry {\n    constructor() {\n        this._onDidChangeSchema = new Emitter();\n        this.onDidChangeSchema = this._onDidChangeSchema.event;\n        this.colorSchema = { type: 'object', properties: {} };\n        this.colorReferenceSchema = { type: 'string', enum: [], enumDescriptions: [] };\n        this.colorsById = {};\n    }\n    registerColor(id, defaults, description, needsTransparency = false, deprecationMessage) {\n        const colorContribution = { id, description, defaults, needsTransparency, deprecationMessage };\n        this.colorsById[id] = colorContribution;\n        const propertySchema = { type: 'string', description, format: 'color-hex', defaultSnippets: [{ body: '${1:#ff0000}' }] };\n        if (deprecationMessage) {\n            propertySchema.deprecationMessage = deprecationMessage;\n        }\n        this.colorSchema.properties[id] = propertySchema;\n        this.colorReferenceSchema.enum.push(id);\n        this.colorReferenceSchema.enumDescriptions.push(description);\n        this._onDidChangeSchema.fire();\n        return id;\n    }\n    getColors() {\n        return Object.keys(this.colorsById).map(id => this.colorsById[id]);\n    }\n    resolveDefaultColor(id, theme) {\n        const colorDesc = this.colorsById[id];\n        if (colorDesc && colorDesc.defaults) {\n            const colorValue = colorDesc.defaults[theme.type];\n            return resolveColorValue(colorValue, theme);\n        }\n        return undefined;\n    }\n    getColorSchema() {\n        return this.colorSchema;\n    }\n    toString() {\n        const sorter = (a, b) => {\n            const cat1 = a.indexOf('.') === -1 ? 0 : 1;\n            const cat2 = b.indexOf('.') === -1 ? 0 : 1;\n            if (cat1 !== cat2) {\n                return cat1 - cat2;\n            }\n            return a.localeCompare(b);\n        };\n        return Object.keys(this.colorsById).sort(sorter).map(k => `- \\`${k}\\`: ${this.colorsById[k].description}`).join('\\n');\n    }\n}\nconst colorRegistry = new ColorRegistry();\nplatform.Registry.add(Extensions.ColorContribution, colorRegistry);\nfunction migrateColorDefaults(o) {\n    if (o === null) {\n        return o;\n    }\n    if (typeof o.hcLight === 'undefined') {\n        if (o.hcDark === null || typeof o.hcDark === 'string') {\n            o.hcLight = o.hcDark;\n        }\n        else {\n            o.hcLight = o.light;\n        }\n    }\n    return o;\n}\nexport function registerColor(id, defaults, description, needsTransparency, deprecationMessage) {\n    return colorRegistry.registerColor(id, migrateColorDefaults(defaults), description, needsTransparency, deprecationMessage);\n}\n// ----- base colors\nexport const foreground = registerColor('foreground', { dark: '#CCCCCC', light: '#616161', hcDark: '#FFFFFF', hcLight: '#292929' }, nls.localize('foreground', \"Overall foreground color. This color is only used if not overridden by a component.\"));\nexport const disabledForeground = registerColor('disabledForeground', { dark: '#CCCCCC80', light: '#61616180', hcDark: '#A5A5A5', hcLight: '#7F7F7F' }, nls.localize('disabledForeground', \"Overall foreground for disabled elements. This color is only used if not overridden by a component.\"));\nexport const errorForeground = registerColor('errorForeground', { dark: '#F48771', light: '#A1260D', hcDark: '#F48771', hcLight: '#B5200D' }, nls.localize('errorForeground', \"Overall foreground color for error messages. This color is only used if not overridden by a component.\"));\nexport const descriptionForeground = registerColor('descriptionForeground', { light: '#717171', dark: transparent(foreground, 0.7), hcDark: transparent(foreground, 0.7), hcLight: transparent(foreground, 0.7) }, nls.localize('descriptionForeground', \"Foreground color for description text providing additional information, for example for a label.\"));\nexport const iconForeground = registerColor('icon.foreground', { dark: '#C5C5C5', light: '#424242', hcDark: '#FFFFFF', hcLight: '#292929' }, nls.localize('iconForeground', \"The default color for icons in the workbench.\"));\nexport const focusBorder = registerColor('focusBorder', { dark: '#007FD4', light: '#0090F1', hcDark: '#F38518', hcLight: '#006BBD' }, nls.localize('focusBorder', \"Overall border color for focused elements. This color is only used if not overridden by a component.\"));\nexport const contrastBorder = registerColor('contrastBorder', { light: null, dark: null, hcDark: '#6FC3DF', hcLight: '#0F4A85' }, nls.localize('contrastBorder', \"An extra border around elements to separate them from others for greater contrast.\"));\nexport const activeContrastBorder = registerColor('contrastActiveBorder', { light: null, dark: null, hcDark: focusBorder, hcLight: focusBorder }, nls.localize('activeContrastBorder', \"An extra border around active elements to separate them from others for greater contrast.\"));\nexport const selectionBackground = registerColor('selection.background', { light: null, dark: null, hcDark: null, hcLight: null }, nls.localize('selectionBackground', \"The background color of text selections in the workbench (e.g. for input fields or text areas). Note that this does not apply to selections within the editor.\"));\n// ------ text colors\nexport const textSeparatorForeground = registerColor('textSeparator.foreground', { light: '#0000002e', dark: '#ffffff2e', hcDark: Color.black, hcLight: '#292929' }, nls.localize('textSeparatorForeground', \"Color for text separators.\"));\nexport const textLinkForeground = registerColor('textLink.foreground', { light: '#006AB1', dark: '#3794FF', hcDark: '#3794FF', hcLight: '#0F4A85' }, nls.localize('textLinkForeground', \"Foreground color for links in text.\"));\nexport const textLinkActiveForeground = registerColor('textLink.activeForeground', { light: '#006AB1', dark: '#3794FF', hcDark: '#3794FF', hcLight: '#0F4A85' }, nls.localize('textLinkActiveForeground', \"Foreground color for links in text when clicked on and on mouse hover.\"));\nexport const textPreformatForeground = registerColor('textPreformat.foreground', { light: '#A31515', dark: '#D7BA7D', hcDark: '#D7BA7D', hcLight: '#292929' }, nls.localize('textPreformatForeground', \"Foreground color for preformatted text segments.\"));\nexport const textBlockQuoteBackground = registerColor('textBlockQuote.background', { light: '#7f7f7f1a', dark: '#7f7f7f1a', hcDark: null, hcLight: '#F2F2F2' }, nls.localize('textBlockQuoteBackground', \"Background color for block quotes in text.\"));\nexport const textBlockQuoteBorder = registerColor('textBlockQuote.border', { light: '#007acc80', dark: '#007acc80', hcDark: Color.white, hcLight: '#292929' }, nls.localize('textBlockQuoteBorder', \"Border color for block quotes in text.\"));\nexport const textCodeBlockBackground = registerColor('textCodeBlock.background', { light: '#dcdcdc66', dark: '#0a0a0a66', hcDark: Color.black, hcLight: '#F2F2F2' }, nls.localize('textCodeBlockBackground', \"Background color for code blocks in text.\"));\n// ----- widgets\nexport const widgetShadow = registerColor('widget.shadow', { dark: transparent(Color.black, .36), light: transparent(Color.black, .16), hcDark: null, hcLight: null }, nls.localize('widgetShadow', 'Shadow color of widgets such as find/replace inside the editor.'));\nexport const widgetBorder = registerColor('widget.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('widgetBorder', 'Border color of widgets such as find/replace inside the editor.'));\nexport const inputBackground = registerColor('input.background', { dark: '#3C3C3C', light: Color.white, hcDark: Color.black, hcLight: Color.white }, nls.localize('inputBoxBackground', \"Input box background.\"));\nexport const inputForeground = registerColor('input.foreground', { dark: foreground, light: foreground, hcDark: foreground, hcLight: foreground }, nls.localize('inputBoxForeground', \"Input box foreground.\"));\nexport const inputBorder = registerColor('input.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputBoxBorder', \"Input box border.\"));\nexport const inputActiveOptionBorder = registerColor('inputOption.activeBorder', { dark: '#007ACC', light: '#007ACC', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputBoxActiveOptionBorder', \"Border color of activated options in input fields.\"));\nexport const inputActiveOptionHoverBackground = registerColor('inputOption.hoverBackground', { dark: '#5a5d5e80', light: '#b8b8b850', hcDark: null, hcLight: null }, nls.localize('inputOption.hoverBackground', \"Background color of activated options in input fields.\"));\nexport const inputActiveOptionBackground = registerColor('inputOption.activeBackground', { dark: transparent(focusBorder, 0.4), light: transparent(focusBorder, 0.2), hcDark: Color.transparent, hcLight: Color.transparent }, nls.localize('inputOption.activeBackground', \"Background hover color of options in input fields.\"));\nexport const inputActiveOptionForeground = registerColor('inputOption.activeForeground', { dark: Color.white, light: Color.black, hcDark: foreground, hcLight: foreground }, nls.localize('inputOption.activeForeground', \"Foreground color of activated options in input fields.\"));\nexport const inputPlaceholderForeground = registerColor('input.placeholderForeground', { light: transparent(foreground, 0.5), dark: transparent(foreground, 0.5), hcDark: transparent(foreground, 0.7), hcLight: transparent(foreground, 0.7) }, nls.localize('inputPlaceholderForeground', \"Input box foreground color for placeholder text.\"));\nexport const inputValidationInfoBackground = registerColor('inputValidation.infoBackground', { dark: '#063B49', light: '#D6ECF2', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationInfoBackground', \"Input validation background color for information severity.\"));\nexport const inputValidationInfoForeground = registerColor('inputValidation.infoForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationInfoForeground', \"Input validation foreground color for information severity.\"));\nexport const inputValidationInfoBorder = registerColor('inputValidation.infoBorder', { dark: '#007acc', light: '#007acc', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationInfoBorder', \"Input validation border color for information severity.\"));\nexport const inputValidationWarningBackground = registerColor('inputValidation.warningBackground', { dark: '#352A05', light: '#F6F5D2', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationWarningBackground', \"Input validation background color for warning severity.\"));\nexport const inputValidationWarningForeground = registerColor('inputValidation.warningForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationWarningForeground', \"Input validation foreground color for warning severity.\"));\nexport const inputValidationWarningBorder = registerColor('inputValidation.warningBorder', { dark: '#B89500', light: '#B89500', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationWarningBorder', \"Input validation border color for warning severity.\"));\nexport const inputValidationErrorBackground = registerColor('inputValidation.errorBackground', { dark: '#5A1D1D', light: '#F2DEDE', hcDark: Color.black, hcLight: Color.white }, nls.localize('inputValidationErrorBackground', \"Input validation background color for error severity.\"));\nexport const inputValidationErrorForeground = registerColor('inputValidation.errorForeground', { dark: null, light: null, hcDark: null, hcLight: foreground }, nls.localize('inputValidationErrorForeground', \"Input validation foreground color for error severity.\"));\nexport const inputValidationErrorBorder = registerColor('inputValidation.errorBorder', { dark: '#BE1100', light: '#BE1100', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('inputValidationErrorBorder', \"Input validation border color for error severity.\"));\nexport const selectBackground = registerColor('dropdown.background', { dark: '#3C3C3C', light: Color.white, hcDark: Color.black, hcLight: Color.white }, nls.localize('dropdownBackground', \"Dropdown background.\"));\nexport const selectListBackground = registerColor('dropdown.listBackground', { dark: null, light: null, hcDark: Color.black, hcLight: Color.white }, nls.localize('dropdownListBackground', \"Dropdown list background.\"));\nexport const selectForeground = registerColor('dropdown.foreground', { dark: '#F0F0F0', light: foreground, hcDark: Color.white, hcLight: foreground }, nls.localize('dropdownForeground', \"Dropdown foreground.\"));\nexport const selectBorder = registerColor('dropdown.border', { dark: selectBackground, light: '#CECECE', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('dropdownBorder', \"Dropdown border.\"));\nexport const buttonForeground = registerColor('button.foreground', { dark: Color.white, light: Color.white, hcDark: Color.white, hcLight: Color.white }, nls.localize('buttonForeground', \"Button foreground color.\"));\nexport const buttonSeparator = registerColor('button.separator', { dark: transparent(buttonForeground, .4), light: transparent(buttonForeground, .4), hcDark: transparent(buttonForeground, .4), hcLight: transparent(buttonForeground, .4) }, nls.localize('buttonSeparator', \"Button separator color.\"));\nexport const buttonBackground = registerColor('button.background', { dark: '#0E639C', light: '#007ACC', hcDark: null, hcLight: '#0F4A85' }, nls.localize('buttonBackground', \"Button background color.\"));\nexport const buttonHoverBackground = registerColor('button.hoverBackground', { dark: lighten(buttonBackground, 0.2), light: darken(buttonBackground, 0.2), hcDark: buttonBackground, hcLight: buttonBackground }, nls.localize('buttonHoverBackground', \"Button background color when hovering.\"));\nexport const buttonBorder = registerColor('button.border', { dark: contrastBorder, light: contrastBorder, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('buttonBorder', \"Button border color.\"));\nexport const buttonSecondaryForeground = registerColor('button.secondaryForeground', { dark: Color.white, light: Color.white, hcDark: Color.white, hcLight: foreground }, nls.localize('buttonSecondaryForeground', \"Secondary button foreground color.\"));\nexport const buttonSecondaryBackground = registerColor('button.secondaryBackground', { dark: '#3A3D41', light: '#5F6A79', hcDark: null, hcLight: Color.white }, nls.localize('buttonSecondaryBackground', \"Secondary button background color.\"));\nexport const buttonSecondaryHoverBackground = registerColor('button.secondaryHoverBackground', { dark: lighten(buttonSecondaryBackground, 0.2), light: darken(buttonSecondaryBackground, 0.2), hcDark: null, hcLight: null }, nls.localize('buttonSecondaryHoverBackground', \"Secondary button background color when hovering.\"));\nexport const badgeBackground = registerColor('badge.background', { dark: '#4D4D4D', light: '#C4C4C4', hcDark: Color.black, hcLight: '#0F4A85' }, nls.localize('badgeBackground', \"Badge background color. Badges are small information labels, e.g. for search results count.\"));\nexport const badgeForeground = registerColor('badge.foreground', { dark: Color.white, light: '#333', hcDark: Color.white, hcLight: Color.white }, nls.localize('badgeForeground', \"Badge foreground color. Badges are small information labels, e.g. for search results count.\"));\nexport const scrollbarShadow = registerColor('scrollbar.shadow', { dark: '#000000', light: '#DDDDDD', hcDark: null, hcLight: null }, nls.localize('scrollbarShadow', \"Scrollbar shadow to indicate that the view is scrolled.\"));\nexport const scrollbarSliderBackground = registerColor('scrollbarSlider.background', { dark: Color.fromHex('#797979').transparent(0.4), light: Color.fromHex('#646464').transparent(0.4), hcDark: transparent(contrastBorder, 0.6), hcLight: transparent(contrastBorder, 0.4) }, nls.localize('scrollbarSliderBackground', \"Scrollbar slider background color.\"));\nexport const scrollbarSliderHoverBackground = registerColor('scrollbarSlider.hoverBackground', { dark: Color.fromHex('#646464').transparent(0.7), light: Color.fromHex('#646464').transparent(0.7), hcDark: transparent(contrastBorder, 0.8), hcLight: transparent(contrastBorder, 0.8) }, nls.localize('scrollbarSliderHoverBackground', \"Scrollbar slider background color when hovering.\"));\nexport const scrollbarSliderActiveBackground = registerColor('scrollbarSlider.activeBackground', { dark: Color.fromHex('#BFBFBF').transparent(0.4), light: Color.fromHex('#000000').transparent(0.6), hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('scrollbarSliderActiveBackground', \"Scrollbar slider background color when clicked on.\"));\nexport const progressBarBackground = registerColor('progressBar.background', { dark: Color.fromHex('#0E70C0'), light: Color.fromHex('#0E70C0'), hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('progressBarBackground', \"Background color of the progress bar that can show for long running operations.\"));\nexport const editorErrorBackground = registerColor('editorError.background', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('editorError.background', 'Background color of error text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorErrorForeground = registerColor('editorError.foreground', { dark: '#F14C4C', light: '#E51400', hcDark: '#F48771', hcLight: '#B5200D' }, nls.localize('editorError.foreground', 'Foreground color of error squigglies in the editor.'));\nexport const editorErrorBorder = registerColor('editorError.border', { dark: null, light: null, hcDark: Color.fromHex('#E47777').transparent(0.8), hcLight: '#B5200D' }, nls.localize('errorBorder', 'Border color of error boxes in the editor.'));\nexport const editorWarningBackground = registerColor('editorWarning.background', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('editorWarning.background', 'Background color of warning text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorWarningForeground = registerColor('editorWarning.foreground', { dark: '#CCA700', light: '#BF8803', hcDark: '#FFD37', hcLight: '#895503' }, nls.localize('editorWarning.foreground', 'Foreground color of warning squigglies in the editor.'));\nexport const editorWarningBorder = registerColor('editorWarning.border', { dark: null, light: null, hcDark: Color.fromHex('#FFCC00').transparent(0.8), hcLight: '#' }, nls.localize('warningBorder', 'Border color of warning boxes in the editor.'));\nexport const editorInfoBackground = registerColor('editorInfo.background', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('editorInfo.background', 'Background color of info text in the editor. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorInfoForeground = registerColor('editorInfo.foreground', { dark: '#3794FF', light: '#1a85ff', hcDark: '#3794FF', hcLight: '#1a85ff' }, nls.localize('editorInfo.foreground', 'Foreground color of info squigglies in the editor.'));\nexport const editorInfoBorder = registerColor('editorInfo.border', { dark: null, light: null, hcDark: Color.fromHex('#3794FF').transparent(0.8), hcLight: '#292929' }, nls.localize('infoBorder', 'Border color of info boxes in the editor.'));\nexport const editorHintForeground = registerColor('editorHint.foreground', { dark: Color.fromHex('#eeeeee').transparent(0.7), light: '#6c6c6c', hcDark: null, hcLight: null }, nls.localize('editorHint.foreground', 'Foreground color of hint squigglies in the editor.'));\nexport const editorHintBorder = registerColor('editorHint.border', { dark: null, light: null, hcDark: Color.fromHex('#eeeeee').transparent(0.8), hcLight: '#292929' }, nls.localize('hintBorder', 'Border color of hint boxes in the editor.'));\nexport const sashHoverBorder = registerColor('sash.hoverBorder', { dark: focusBorder, light: focusBorder, hcDark: focusBorder, hcLight: focusBorder }, nls.localize('sashActiveBorder', \"Border color of active sashes.\"));\n/**\n * Editor background color.\n */\nexport const editorBackground = registerColor('editor.background', { light: '#ffffff', dark: '#1E1E1E', hcDark: Color.black, hcLight: Color.white }, nls.localize('editorBackground', \"Editor background color.\"));\n/**\n * Editor foreground color.\n */\nexport const editorForeground = registerColor('editor.foreground', { light: '#333333', dark: '#BBBBBB', hcDark: Color.white, hcLight: foreground }, nls.localize('editorForeground', \"Editor default foreground color.\"));\n/**\n * Sticky scroll\n */\nexport const editorStickyScrollBackground = registerColor('editorStickyScroll.background', { light: editorBackground, dark: editorBackground, hcDark: editorBackground, hcLight: editorBackground }, nls.localize('editorStickyScrollBackground', \"Sticky scroll background color for the editor\"));\nexport const editorStickyScrollHoverBackground = registerColor('editorStickyScrollHover.background', { dark: '#2A2D2E', light: '#F0F0F0', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('editorStickyScrollHoverBackground', \"Sticky scroll on hover background color for the editor\"));\n/**\n * Editor widgets\n */\nexport const editorWidgetBackground = registerColor('editorWidget.background', { dark: '#252526', light: '#F3F3F3', hcDark: '#0C141F', hcLight: Color.white }, nls.localize('editorWidgetBackground', 'Background color of editor widgets, such as find/replace.'));\nexport const editorWidgetForeground = registerColor('editorWidget.foreground', { dark: foreground, light: foreground, hcDark: foreground, hcLight: foreground }, nls.localize('editorWidgetForeground', 'Foreground color of editor widgets, such as find/replace.'));\nexport const editorWidgetBorder = registerColor('editorWidget.border', { dark: '#454545', light: '#C8C8C8', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('editorWidgetBorder', 'Border color of editor widgets. The color is only used if the widget chooses to have a border and if the color is not overridden by a widget.'));\nexport const editorWidgetResizeBorder = registerColor('editorWidget.resizeBorder', { light: null, dark: null, hcDark: null, hcLight: null }, nls.localize('editorWidgetResizeBorder', \"Border color of the resize bar of editor widgets. The color is only used if the widget chooses to have a resize border and if the color is not overridden by a widget.\"));\n/**\n * Quick pick widget\n */\nexport const quickInputBackground = registerColor('quickInput.background', { dark: editorWidgetBackground, light: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('pickerBackground', \"Quick picker background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputForeground = registerColor('quickInput.foreground', { dark: editorWidgetForeground, light: editorWidgetForeground, hcDark: editorWidgetForeground, hcLight: editorWidgetForeground }, nls.localize('pickerForeground', \"Quick picker foreground color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const quickInputTitleBackground = registerColor('quickInputTitle.background', { dark: new Color(new RGBA(255, 255, 255, 0.105)), light: new Color(new RGBA(0, 0, 0, 0.06)), hcDark: '#000000', hcLight: Color.white }, nls.localize('pickerTitleBackground', \"Quick picker title background color. The quick picker widget is the container for pickers like the command palette.\"));\nexport const pickerGroupForeground = registerColor('pickerGroup.foreground', { dark: '#3794FF', light: '#0066BF', hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('pickerGroupForeground', \"Quick picker color for grouping labels.\"));\nexport const pickerGroupBorder = registerColor('pickerGroup.border', { dark: '#3F3F46', light: '#CCCEDB', hcDark: Color.white, hcLight: '#0F4A85' }, nls.localize('pickerGroupBorder', \"Quick picker color for grouping borders.\"));\n/**\n * Keybinding label\n */\nexport const keybindingLabelBackground = registerColor('keybindingLabel.background', { dark: new Color(new RGBA(128, 128, 128, 0.17)), light: new Color(new RGBA(221, 221, 221, 0.4)), hcDark: Color.transparent, hcLight: Color.transparent }, nls.localize('keybindingLabelBackground', \"Keybinding label background color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelForeground = registerColor('keybindingLabel.foreground', { dark: Color.fromHex('#CCCCCC'), light: Color.fromHex('#555555'), hcDark: Color.white, hcLight: foreground }, nls.localize('keybindingLabelForeground', \"Keybinding label foreground color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBorder = registerColor('keybindingLabel.border', { dark: new Color(new RGBA(51, 51, 51, 0.6)), light: new Color(new RGBA(204, 204, 204, 0.4)), hcDark: new Color(new RGBA(111, 195, 223)), hcLight: contrastBorder }, nls.localize('keybindingLabelBorder', \"Keybinding label border color. The keybinding label is used to represent a keyboard shortcut.\"));\nexport const keybindingLabelBottomBorder = registerColor('keybindingLabel.bottomBorder', { dark: new Color(new RGBA(68, 68, 68, 0.6)), light: new Color(new RGBA(187, 187, 187, 0.4)), hcDark: new Color(new RGBA(111, 195, 223)), hcLight: foreground }, nls.localize('keybindingLabelBottomBorder', \"Keybinding label border bottom color. The keybinding label is used to represent a keyboard shortcut.\"));\n/**\n * Editor selection colors.\n */\nexport const editorSelectionBackground = registerColor('editor.selectionBackground', { light: '#ADD6FF', dark: '#264F78', hcDark: '#f3f518', hcLight: '#0F4A85' }, nls.localize('editorSelectionBackground', \"Color of the editor selection.\"));\nexport const editorSelectionForeground = registerColor('editor.selectionForeground', { light: null, dark: null, hcDark: '#000000', hcLight: Color.white }, nls.localize('editorSelectionForeground', \"Color of the selected text for high contrast.\"));\nexport const editorInactiveSelection = registerColor('editor.inactiveSelectionBackground', { light: transparent(editorSelectionBackground, 0.5), dark: transparent(editorSelectionBackground, 0.5), hcDark: transparent(editorSelectionBackground, 0.7), hcLight: transparent(editorSelectionBackground, 0.5) }, nls.localize('editorInactiveSelection', \"Color of the selection in an inactive editor. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorSelectionHighlight = registerColor('editor.selectionHighlightBackground', { light: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), dark: lessProminent(editorSelectionBackground, editorBackground, 0.3, 0.6), hcDark: null, hcLight: null }, nls.localize('editorSelectionHighlight', 'Color for regions with the same content as the selection. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorSelectionHighlightBorder = registerColor('editor.selectionHighlightBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorSelectionHighlightBorder', \"Border color for regions with the same content as the selection.\"));\n/**\n * Editor find match colors.\n */\nexport const editorFindMatch = registerColor('editor.findMatchBackground', { light: '#A8AC94', dark: '#515C6A', hcDark: null, hcLight: null }, nls.localize('editorFindMatch', \"Color of the current search match.\"));\nexport const editorFindMatchHighlight = registerColor('editor.findMatchHighlightBackground', { light: '#EA5C0055', dark: '#EA5C0055', hcDark: null, hcLight: null }, nls.localize('findMatchHighlight', \"Color of the other search matches. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFindRangeHighlight = registerColor('editor.findRangeHighlightBackground', { dark: '#3a3d4166', light: '#b4b4b44d', hcDark: null, hcLight: null }, nls.localize('findRangeHighlight', \"Color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\nexport const editorFindMatchBorder = registerColor('editor.findMatchBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('editorFindMatchBorder', \"Border color of the current search match.\"));\nexport const editorFindMatchHighlightBorder = registerColor('editor.findMatchHighlightBorder', { light: null, dark: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('findMatchHighlightBorder', \"Border color of the other search matches.\"));\nexport const editorFindRangeHighlightBorder = registerColor('editor.findRangeHighlightBorder', { dark: null, light: null, hcDark: transparent(activeContrastBorder, 0.4), hcLight: transparent(activeContrastBorder, 0.4) }, nls.localize('findRangeHighlightBorder', \"Border color of the range limiting the search. The color must not be opaque so as not to hide underlying decorations.\"), true);\n/**\n * Search Editor query match colors.\n *\n * Distinct from normal editor find match to allow for better differentiation\n */\nexport const searchEditorFindMatch = registerColor('searchEditor.findMatchBackground', { light: transparent(editorFindMatchHighlight, 0.66), dark: transparent(editorFindMatchHighlight, 0.66), hcDark: editorFindMatchHighlight, hcLight: editorFindMatchHighlight }, nls.localize('searchEditor.queryMatch', \"Color of the Search Editor query matches.\"));\nexport const searchEditorFindMatchBorder = registerColor('searchEditor.findMatchBorder', { light: transparent(editorFindMatchHighlightBorder, 0.66), dark: transparent(editorFindMatchHighlightBorder, 0.66), hcDark: editorFindMatchHighlightBorder, hcLight: editorFindMatchHighlightBorder }, nls.localize('searchEditor.editorFindMatchBorder', \"Border color of the Search Editor query matches.\"));\n/**\n * Editor hover\n */\nexport const editorHoverHighlight = registerColor('editor.hoverHighlightBackground', { light: '#ADD6FF26', dark: '#264f7840', hcDark: '#ADD6FF26', hcLight: null }, nls.localize('hoverHighlight', 'Highlight below the word for which a hover is shown. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const editorHoverBackground = registerColor('editorHoverWidget.background', { light: editorWidgetBackground, dark: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('hoverBackground', 'Background color of the editor hover.'));\nexport const editorHoverForeground = registerColor('editorHoverWidget.foreground', { light: editorWidgetForeground, dark: editorWidgetForeground, hcDark: editorWidgetForeground, hcLight: editorWidgetForeground }, nls.localize('hoverForeground', 'Foreground color of the editor hover.'));\nexport const editorHoverBorder = registerColor('editorHoverWidget.border', { light: editorWidgetBorder, dark: editorWidgetBorder, hcDark: editorWidgetBorder, hcLight: editorWidgetBorder }, nls.localize('hoverBorder', 'Border color of the editor hover.'));\nexport const editorHoverStatusBarBackground = registerColor('editorHoverWidget.statusBarBackground', { dark: lighten(editorHoverBackground, 0.2), light: darken(editorHoverBackground, 0.05), hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('statusBarBackground', \"Background color of the editor hover status bar.\"));\n/**\n * Editor link colors\n */\nexport const editorActiveLinkForeground = registerColor('editorLink.activeForeground', { dark: '#4E94CE', light: Color.blue, hcDark: Color.cyan, hcLight: '#292929' }, nls.localize('activeLinkForeground', 'Color of active links.'));\n/**\n * Inline hints\n */\nexport const editorInlayHintForeground = registerColor('editorInlayHint.foreground', { dark: badgeForeground, light: badgeForeground, hcDark: Color.black, hcLight: badgeForeground }, nls.localize('editorInlayHintForeground', 'Foreground color of inline hints'));\nexport const editorInlayHintBackground = registerColor('editorInlayHint.background', { dark: transparent(badgeBackground, .8), light: transparent(badgeBackground, .6), hcDark: '#f38518', hcLight: badgeBackground }, nls.localize('editorInlayHintBackground', 'Background color of inline hints'));\nexport const editorInlayHintTypeForeground = registerColor('editorInlayHint.typeForeground', { dark: editorInlayHintForeground, light: editorInlayHintForeground, hcDark: editorInlayHintForeground, hcLight: editorInlayHintForeground }, nls.localize('editorInlayHintForegroundTypes', 'Foreground color of inline hints for types'));\nexport const editorInlayHintTypeBackground = registerColor('editorInlayHint.typeBackground', { dark: editorInlayHintBackground, light: editorInlayHintBackground, hcDark: editorInlayHintBackground, hcLight: editorInlayHintBackground }, nls.localize('editorInlayHintBackgroundTypes', 'Background color of inline hints for types'));\nexport const editorInlayHintParameterForeground = registerColor('editorInlayHint.parameterForeground', { dark: editorInlayHintForeground, light: editorInlayHintForeground, hcDark: editorInlayHintForeground, hcLight: editorInlayHintForeground }, nls.localize('editorInlayHintForegroundParameter', 'Foreground color of inline hints for parameters'));\nexport const editorInlayHintParameterBackground = registerColor('editorInlayHint.parameterBackground', { dark: editorInlayHintBackground, light: editorInlayHintBackground, hcDark: editorInlayHintBackground, hcLight: editorInlayHintBackground }, nls.localize('editorInlayHintBackgroundParameter', 'Background color of inline hints for parameters'));\n/**\n * Editor lighbulb icon colors\n */\nexport const editorLightBulbForeground = registerColor('editorLightBulb.foreground', { dark: '#FFCC00', light: '#DDB100', hcDark: '#FFCC00', hcLight: '#007ACC' }, nls.localize('editorLightBulbForeground', \"The color used for the lightbulb actions icon.\"));\nexport const editorLightBulbAutoFixForeground = registerColor('editorLightBulbAutoFix.foreground', { dark: '#75BEFF', light: '#007ACC', hcDark: '#75BEFF', hcLight: '#007ACC' }, nls.localize('editorLightBulbAutoFixForeground', \"The color used for the lightbulb auto fix actions icon.\"));\n/**\n * Diff Editor Colors\n */\nexport const defaultInsertColor = new Color(new RGBA(155, 185, 85, .2));\nexport const defaultRemoveColor = new Color(new RGBA(255, 0, 0, .2));\nexport const diffInserted = registerColor('diffEditor.insertedTextBackground', { dark: '#9ccc2c33', light: '#9ccc2c40', hcDark: null, hcLight: null }, nls.localize('diffEditorInserted', 'Background color for text that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffRemoved = registerColor('diffEditor.removedTextBackground', { dark: '#ff000033', light: '#ff000033', hcDark: null, hcLight: null }, nls.localize('diffEditorRemoved', 'Background color for text that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffInsertedLine = registerColor('diffEditor.insertedLineBackground', { dark: defaultInsertColor, light: defaultInsertColor, hcDark: null, hcLight: null }, nls.localize('diffEditorInsertedLines', 'Background color for lines that got inserted. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffRemovedLine = registerColor('diffEditor.removedLineBackground', { dark: defaultRemoveColor, light: defaultRemoveColor, hcDark: null, hcLight: null }, nls.localize('diffEditorRemovedLines', 'Background color for lines that got removed. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const diffInsertedLineGutter = registerColor('diffEditorGutter.insertedLineBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('diffEditorInsertedLineGutter', 'Background color for the margin where lines got inserted.'));\nexport const diffRemovedLineGutter = registerColor('diffEditorGutter.removedLineBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('diffEditorRemovedLineGutter', 'Background color for the margin where lines got removed.'));\nexport const diffOverviewRulerInserted = registerColor('diffEditorOverview.insertedForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('diffEditorOverviewInserted', 'Diff overview ruler foreground for inserted content.'));\nexport const diffOverviewRulerRemoved = registerColor('diffEditorOverview.removedForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('diffEditorOverviewRemoved', 'Diff overview ruler foreground for removed content.'));\nexport const diffInsertedOutline = registerColor('diffEditor.insertedTextBorder', { dark: null, light: null, hcDark: '#33ff2eff', hcLight: '#374E06' }, nls.localize('diffEditorInsertedOutline', 'Outline color for the text that got inserted.'));\nexport const diffRemovedOutline = registerColor('diffEditor.removedTextBorder', { dark: null, light: null, hcDark: '#FF008F', hcLight: '#AD0707' }, nls.localize('diffEditorRemovedOutline', 'Outline color for text that got removed.'));\nexport const diffBorder = registerColor('diffEditor.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('diffEditorBorder', 'Border color between the two text editors.'));\nexport const diffDiagonalFill = registerColor('diffEditor.diagonalFill', { dark: '#cccccc33', light: '#22222233', hcDark: null, hcLight: null }, nls.localize('diffDiagonalFill', \"Color of the diff editor's diagonal fill. The diagonal fill is used in side-by-side diff views.\"));\n/**\n * List and tree colors\n */\nexport const listFocusBackground = registerColor('list.focusBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listFocusBackground', \"List/Tree background color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusForeground = registerColor('list.focusForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listFocusForeground', \"List/Tree foreground color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusOutline = registerColor('list.focusOutline', { dark: focusBorder, light: focusBorder, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('listFocusOutline', \"List/Tree outline color for the focused item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listFocusAndSelectionOutline = registerColor('list.focusAndSelectionOutline', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listFocusAndSelectionOutline', \"List/Tree outline color for the focused item when the list/tree is active and selected. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionBackground = registerColor('list.activeSelectionBackground', { dark: '#04395E', light: '#0060C0', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listActiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionForeground = registerColor('list.activeSelectionForeground', { dark: Color.white, light: Color.white, hcDark: null, hcLight: null }, nls.localize('listActiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listActiveSelectionIconForeground = registerColor('list.activeSelectionIconForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listActiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is active. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionBackground = registerColor('list.inactiveSelectionBackground', { dark: '#37373D', light: '#E4E6F1', hcDark: null, hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listInactiveSelectionBackground', \"List/Tree background color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionForeground = registerColor('list.inactiveSelectionForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listInactiveSelectionForeground', \"List/Tree foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveSelectionIconForeground = registerColor('list.inactiveSelectionIconForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listInactiveSelectionIconForeground', \"List/Tree icon foreground color for the selected item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusBackground = registerColor('list.inactiveFocusBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listInactiveFocusBackground', \"List/Tree background color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listInactiveFocusOutline = registerColor('list.inactiveFocusOutline', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listInactiveFocusOutline', \"List/Tree outline color for the focused item when the list/tree is inactive. An active list/tree has keyboard focus, an inactive does not.\"));\nexport const listHoverBackground = registerColor('list.hoverBackground', { dark: '#2A2D2E', light: '#F0F0F0', hcDark: Color.white.transparent(0.1), hcLight: Color.fromHex('#0F4A85').transparent(0.1) }, nls.localize('listHoverBackground', \"List/Tree background when hovering over items using the mouse.\"));\nexport const listHoverForeground = registerColor('list.hoverForeground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('listHoverForeground', \"List/Tree foreground when hovering over items using the mouse.\"));\nexport const listDropBackground = registerColor('list.dropBackground', { dark: '#062F4A', light: '#D6EBFF', hcDark: null, hcLight: null }, nls.localize('listDropBackground', \"List/Tree drag and drop background when moving items around using the mouse.\"));\nexport const listHighlightForeground = registerColor('list.highlightForeground', { dark: '#2AAAFF', light: '#0066BF', hcDark: focusBorder, hcLight: focusBorder }, nls.localize('highlight', 'List/Tree foreground color of the match highlights when searching inside the list/tree.'));\nexport const listFocusHighlightForeground = registerColor('list.focusHighlightForeground', { dark: listHighlightForeground, light: ifDefinedThenElse(listActiveSelectionBackground, listHighlightForeground, '#BBE7FF'), hcDark: listHighlightForeground, hcLight: listHighlightForeground }, nls.localize('listFocusHighlightForeground', 'List/Tree foreground color of the match highlights on actively focused items when searching inside the list/tree.'));\nexport const listInvalidItemForeground = registerColor('list.invalidItemForeground', { dark: '#B89500', light: '#B89500', hcDark: '#B89500', hcLight: '#B5200D' }, nls.localize('invalidItemForeground', 'List/Tree foreground color for invalid items, for example an unresolved root in explorer.'));\nexport const listErrorForeground = registerColor('list.errorForeground', { dark: '#F88070', light: '#B01011', hcDark: null, hcLight: null }, nls.localize('listErrorForeground', 'Foreground color of list items containing errors.'));\nexport const listWarningForeground = registerColor('list.warningForeground', { dark: '#CCA700', light: '#855F00', hcDark: null, hcLight: null }, nls.localize('listWarningForeground', 'Foreground color of list items containing warnings.'));\nexport const listFilterWidgetBackground = registerColor('listFilterWidget.background', { light: darken(editorWidgetBackground, 0), dark: lighten(editorWidgetBackground, 0), hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('listFilterWidgetBackground', 'Background color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetOutline = registerColor('listFilterWidget.outline', { dark: Color.transparent, light: Color.transparent, hcDark: '#f38518', hcLight: '#007ACC' }, nls.localize('listFilterWidgetOutline', 'Outline color of the type filter widget in lists and trees.'));\nexport const listFilterWidgetNoMatchesOutline = registerColor('listFilterWidget.noMatchesOutline', { dark: '#BE1100', light: '#BE1100', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('listFilterWidgetNoMatchesOutline', 'Outline color of the type filter widget in lists and trees, when there are no matches.'));\nexport const listFilterWidgetShadow = registerColor('listFilterWidget.shadow', { dark: widgetShadow, light: widgetShadow, hcDark: widgetShadow, hcLight: widgetShadow }, nls.localize('listFilterWidgetShadow', 'Shadown color of the type filter widget in lists and trees.'));\nexport const listFilterMatchHighlight = registerColor('list.filterMatchBackground', { dark: editorFindMatchHighlight, light: editorFindMatchHighlight, hcDark: null, hcLight: null }, nls.localize('listFilterMatchHighlight', 'Background color of the filtered match.'));\nexport const listFilterMatchHighlightBorder = registerColor('list.filterMatchBorder', { dark: editorFindMatchHighlightBorder, light: editorFindMatchHighlightBorder, hcDark: contrastBorder, hcLight: activeContrastBorder }, nls.localize('listFilterMatchHighlightBorder', 'Border color of the filtered match.'));\nexport const treeIndentGuidesStroke = registerColor('tree.indentGuidesStroke', { dark: '#585858', light: '#a9a9a9', hcDark: '#a9a9a9', hcLight: '#a5a5a5' }, nls.localize('treeIndentGuidesStroke', \"Tree stroke color for the indentation guides.\"));\nexport const treeInactiveIndentGuidesStroke = registerColor('tree.inactiveIndentGuidesStroke', { dark: transparent(treeIndentGuidesStroke, 0.4), light: transparent(treeIndentGuidesStroke, 0.4), hcDark: transparent(treeIndentGuidesStroke, 0.4), hcLight: transparent(treeIndentGuidesStroke, 0.4) }, nls.localize('treeInactiveIndentGuidesStroke', \"Tree stroke color for the indentation guides that are not active.\"));\nexport const tableColumnsBorder = registerColor('tree.tableColumnsBorder', { dark: '#CCCCCC20', light: '#61616120', hcDark: null, hcLight: null }, nls.localize('tableColumnsBorder', \"Table border color between columns.\"));\nexport const tableOddRowsBackgroundColor = registerColor('tree.tableOddRowsBackground', { dark: transparent(foreground, 0.04), light: transparent(foreground, 0.04), hcDark: null, hcLight: null }, nls.localize('tableOddRowsBackgroundColor', \"Background color for odd table rows.\"));\nexport const listDeemphasizedForeground = registerColor('list.deemphasizedForeground', { dark: '#8C8C8C', light: '#8E8E90', hcDark: '#A7A8A9', hcLight: '#666666' }, nls.localize('listDeemphasizedForeground', \"List/Tree foreground color for items that are deemphasized. \"));\n/**\n * Checkboxes\n */\nexport const checkboxBackground = registerColor('checkbox.background', { dark: selectBackground, light: selectBackground, hcDark: selectBackground, hcLight: selectBackground }, nls.localize('checkbox.background', \"Background color of checkbox widget.\"));\nexport const checkboxSelectBackground = registerColor('checkbox.selectBackground', { dark: editorWidgetBackground, light: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('checkbox.select.background', \"Background color of checkbox widget when the element it's in is selected.\"));\nexport const checkboxForeground = registerColor('checkbox.foreground', { dark: selectForeground, light: selectForeground, hcDark: selectForeground, hcLight: selectForeground }, nls.localize('checkbox.foreground', \"Foreground color of checkbox widget.\"));\nexport const checkboxBorder = registerColor('checkbox.border', { dark: selectBorder, light: selectBorder, hcDark: selectBorder, hcLight: selectBorder }, nls.localize('checkbox.border', \"Border color of checkbox widget.\"));\nexport const checkboxSelectBorder = registerColor('checkbox.selectBorder', { dark: editorWidgetBackground, light: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('checkbox.select.border', \"Border color of checkbox widget when the element it's in is selected.\"));\n/**\n * Quick pick widget (dependent on List and tree colors)\n */\nexport const _deprecatedQuickInputListFocusBackground = registerColor('quickInput.list.focusBackground', { dark: null, light: null, hcDark: null, hcLight: null }, '', undefined, nls.localize('quickInput.list.focusBackground deprecation', \"Please use quickInputList.focusBackground instead\"));\nexport const quickInputListFocusForeground = registerColor('quickInputList.focusForeground', { dark: listActiveSelectionForeground, light: listActiveSelectionForeground, hcDark: listActiveSelectionForeground, hcLight: listActiveSelectionForeground }, nls.localize('quickInput.listFocusForeground', \"Quick picker foreground color for the focused item.\"));\nexport const quickInputListFocusIconForeground = registerColor('quickInputList.focusIconForeground', { dark: listActiveSelectionIconForeground, light: listActiveSelectionIconForeground, hcDark: listActiveSelectionIconForeground, hcLight: listActiveSelectionIconForeground }, nls.localize('quickInput.listFocusIconForeground', \"Quick picker icon foreground color for the focused item.\"));\nexport const quickInputListFocusBackground = registerColor('quickInputList.focusBackground', { dark: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), light: oneOf(_deprecatedQuickInputListFocusBackground, listActiveSelectionBackground), hcDark: null, hcLight: null }, nls.localize('quickInput.listFocusBackground', \"Quick picker background color for the focused item.\"));\n/**\n * Menu colors\n */\nexport const menuBorder = registerColor('menu.border', { dark: null, light: null, hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('menuBorder', \"Border color of menus.\"));\nexport const menuForeground = registerColor('menu.foreground', { dark: selectForeground, light: selectForeground, hcDark: selectForeground, hcLight: selectForeground }, nls.localize('menuForeground', \"Foreground color of menu items.\"));\nexport const menuBackground = registerColor('menu.background', { dark: selectBackground, light: selectBackground, hcDark: selectBackground, hcLight: selectBackground }, nls.localize('menuBackground', \"Background color of menu items.\"));\nexport const menuSelectionForeground = registerColor('menu.selectionForeground', { dark: listActiveSelectionForeground, light: listActiveSelectionForeground, hcDark: listActiveSelectionForeground, hcLight: listActiveSelectionForeground }, nls.localize('menuSelectionForeground', \"Foreground color of the selected menu item in menus.\"));\nexport const menuSelectionBackground = registerColor('menu.selectionBackground', { dark: listActiveSelectionBackground, light: listActiveSelectionBackground, hcDark: listActiveSelectionBackground, hcLight: listActiveSelectionBackground }, nls.localize('menuSelectionBackground', \"Background color of the selected menu item in menus.\"));\nexport const menuSelectionBorder = registerColor('menu.selectionBorder', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('menuSelectionBorder', \"Border color of the selected menu item in menus.\"));\nexport const menuSeparatorBackground = registerColor('menu.separatorBackground', { dark: '#606060', light: '#D4D4D4', hcDark: contrastBorder, hcLight: contrastBorder }, nls.localize('menuSeparatorBackground', \"Color of a separator menu item in menus.\"));\n/**\n * Toolbar colors\n */\nexport const toolbarHoverBackground = registerColor('toolbar.hoverBackground', { dark: '#5a5d5e50', light: '#b8b8b850', hcDark: null, hcLight: null }, nls.localize('toolbarHoverBackground', \"Toolbar background when hovering over actions using the mouse\"));\nexport const toolbarHoverOutline = registerColor('toolbar.hoverOutline', { dark: null, light: null, hcDark: activeContrastBorder, hcLight: activeContrastBorder }, nls.localize('toolbarHoverOutline', \"Toolbar outline when hovering over actions using the mouse\"));\nexport const toolbarActiveBackground = registerColor('toolbar.activeBackground', { dark: lighten(toolbarHoverBackground, 0.1), light: darken(toolbarHoverBackground, 0.1), hcDark: null, hcLight: null }, nls.localize('toolbarActiveBackground', \"Toolbar background when holding the mouse over actions\"));\n/**\n * Snippet placeholder colors\n */\nexport const snippetTabstopHighlightBackground = registerColor('editor.snippetTabstopHighlightBackground', { dark: new Color(new RGBA(124, 124, 124, 0.3)), light: new Color(new RGBA(10, 50, 100, 0.2)), hcDark: new Color(new RGBA(124, 124, 124, 0.3)), hcLight: new Color(new RGBA(10, 50, 100, 0.2)) }, nls.localize('snippetTabstopHighlightBackground', \"Highlight background color of a snippet tabstop.\"));\nexport const snippetTabstopHighlightBorder = registerColor('editor.snippetTabstopHighlightBorder', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('snippetTabstopHighlightBorder', \"Highlight border color of a snippet tabstop.\"));\nexport const snippetFinalTabstopHighlightBackground = registerColor('editor.snippetFinalTabstopHighlightBackground', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('snippetFinalTabstopHighlightBackground', \"Highlight background color of the final tabstop of a snippet.\"));\nexport const snippetFinalTabstopHighlightBorder = registerColor('editor.snippetFinalTabstopHighlightBorder', { dark: '#525252', light: new Color(new RGBA(10, 50, 100, 0.5)), hcDark: '#525252', hcLight: '#292929' }, nls.localize('snippetFinalTabstopHighlightBorder', \"Highlight border color of the final tabstop of a snippet.\"));\n/**\n * Breadcrumb colors\n */\nexport const breadcrumbsForeground = registerColor('breadcrumb.foreground', { light: transparent(foreground, 0.8), dark: transparent(foreground, 0.8), hcDark: transparent(foreground, 0.8), hcLight: transparent(foreground, 0.8) }, nls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\nexport const breadcrumbsBackground = registerColor('breadcrumb.background', { light: editorBackground, dark: editorBackground, hcDark: editorBackground, hcLight: editorBackground }, nls.localize('breadcrumbsBackground', \"Background color of breadcrumb items.\"));\nexport const breadcrumbsFocusForeground = registerColor('breadcrumb.focusForeground', { light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hcDark: lighten(foreground, 0.1), hcLight: lighten(foreground, 0.1) }, nls.localize('breadcrumbsFocusForeground', \"Color of focused breadcrumb items.\"));\nexport const breadcrumbsActiveSelectionForeground = registerColor('breadcrumb.activeSelectionForeground', { light: darken(foreground, 0.2), dark: lighten(foreground, 0.1), hcDark: lighten(foreground, 0.1), hcLight: lighten(foreground, 0.1) }, nls.localize('breadcrumbsSelectedForeground', \"Color of selected breadcrumb items.\"));\nexport const breadcrumbsPickerBackground = registerColor('breadcrumbPicker.background', { light: editorWidgetBackground, dark: editorWidgetBackground, hcDark: editorWidgetBackground, hcLight: editorWidgetBackground }, nls.localize('breadcrumbsSelectedBackground', \"Background color of breadcrumb item picker.\"));\n/**\n * Merge-conflict colors\n */\nconst headerTransparency = 0.5;\nconst currentBaseColor = Color.fromHex('#40C8AE').transparent(headerTransparency);\nconst incomingBaseColor = Color.fromHex('#40A6FF').transparent(headerTransparency);\nconst commonBaseColor = Color.fromHex('#606060').transparent(0.4);\nconst contentTransparency = 0.4;\nconst rulerTransparency = 1;\nexport const mergeCurrentHeaderBackground = registerColor('merge.currentHeaderBackground', { dark: currentBaseColor, light: currentBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeCurrentHeaderBackground', 'Current header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCurrentContentBackground = registerColor('merge.currentContentBackground', { dark: transparent(mergeCurrentHeaderBackground, contentTransparency), light: transparent(mergeCurrentHeaderBackground, contentTransparency), hcDark: transparent(mergeCurrentHeaderBackground, contentTransparency), hcLight: transparent(mergeCurrentHeaderBackground, contentTransparency) }, nls.localize('mergeCurrentContentBackground', 'Current content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeIncomingHeaderBackground = registerColor('merge.incomingHeaderBackground', { dark: incomingBaseColor, light: incomingBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeIncomingHeaderBackground', 'Incoming header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeIncomingContentBackground = registerColor('merge.incomingContentBackground', { dark: transparent(mergeIncomingHeaderBackground, contentTransparency), light: transparent(mergeIncomingHeaderBackground, contentTransparency), hcDark: transparent(mergeIncomingHeaderBackground, contentTransparency), hcLight: transparent(mergeIncomingHeaderBackground, contentTransparency) }, nls.localize('mergeIncomingContentBackground', 'Incoming content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCommonHeaderBackground = registerColor('merge.commonHeaderBackground', { dark: commonBaseColor, light: commonBaseColor, hcDark: null, hcLight: null }, nls.localize('mergeCommonHeaderBackground', 'Common ancestor header background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeCommonContentBackground = registerColor('merge.commonContentBackground', { dark: transparent(mergeCommonHeaderBackground, contentTransparency), light: transparent(mergeCommonHeaderBackground, contentTransparency), hcDark: transparent(mergeCommonHeaderBackground, contentTransparency), hcLight: transparent(mergeCommonHeaderBackground, contentTransparency) }, nls.localize('mergeCommonContentBackground', 'Common ancestor content background in inline merge-conflicts. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const mergeBorder = registerColor('merge.border', { dark: null, light: null, hcDark: '#C3DF6F', hcLight: '#007ACC' }, nls.localize('mergeBorder', 'Border color on headers and the splitter in inline merge-conflicts.'));\nexport const overviewRulerCurrentContentForeground = registerColor('editorOverviewRuler.currentContentForeground', { dark: transparent(mergeCurrentHeaderBackground, rulerTransparency), light: transparent(mergeCurrentHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerCurrentContentForeground', 'Current overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerIncomingContentForeground = registerColor('editorOverviewRuler.incomingContentForeground', { dark: transparent(mergeIncomingHeaderBackground, rulerTransparency), light: transparent(mergeIncomingHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerIncomingContentForeground', 'Incoming overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerCommonContentForeground = registerColor('editorOverviewRuler.commonContentForeground', { dark: transparent(mergeCommonHeaderBackground, rulerTransparency), light: transparent(mergeCommonHeaderBackground, rulerTransparency), hcDark: mergeBorder, hcLight: mergeBorder }, nls.localize('overviewRulerCommonContentForeground', 'Common ancestor overview ruler foreground for inline merge-conflicts.'));\nexport const overviewRulerFindMatchForeground = registerColor('editorOverviewRuler.findMatchForeground', { dark: '#d186167e', light: '#d186167e', hcDark: '#AB5A00', hcLight: '' }, nls.localize('overviewRulerFindMatchForeground', 'Overview ruler marker color for find matches. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const overviewRulerSelectionHighlightForeground = registerColor('editorOverviewRuler.selectionHighlightForeground', { dark: '#A0A0A0CC', light: '#A0A0A0CC', hcDark: '#A0A0A0CC', hcLight: '#A0A0A0CC' }, nls.localize('overviewRulerSelectionHighlightForeground', 'Overview ruler marker color for selection highlights. The color must not be opaque so as not to hide underlying decorations.'), true);\nexport const minimapFindMatch = registerColor('minimap.findMatchHighlight', { light: '#d18616', dark: '#d18616', hcDark: '#AB5A00', hcLight: '#0F4A85' }, nls.localize('minimapFindMatchHighlight', 'Minimap marker color for find matches.'), true);\nexport const minimapSelectionOccurrenceHighlight = registerColor('minimap.selectionOccurrenceHighlight', { light: '#c9c9c9', dark: '#676767', hcDark: '#ffffff', hcLight: '#0F4A85' }, nls.localize('minimapSelectionOccurrenceHighlight', 'Minimap marker color for repeating editor selections.'), true);\nexport const minimapSelection = registerColor('minimap.selectionHighlight', { light: '#ADD6FF', dark: '#264F78', hcDark: '#ffffff', hcLight: '#0F4A85' }, nls.localize('minimapSelectionHighlight', 'Minimap marker color for the editor selection.'), true);\nexport const minimapError = registerColor('minimap.errorHighlight', { dark: new Color(new RGBA(255, 18, 18, 0.7)), light: new Color(new RGBA(255, 18, 18, 0.7)), hcDark: new Color(new RGBA(255, 50, 50, 1)), hcLight: '#B5200D' }, nls.localize('minimapError', 'Minimap marker color for errors.'));\nexport const minimapWarning = registerColor('minimap.warningHighlight', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningBorder, hcLight: editorWarningBorder }, nls.localize('overviewRuleWarning', 'Minimap marker color for warnings.'));\nexport const minimapBackground = registerColor('minimap.background', { dark: null, light: null, hcDark: null, hcLight: null }, nls.localize('minimapBackground', \"Minimap background color.\"));\nexport const minimapForegroundOpacity = registerColor('minimap.foregroundOpacity', { dark: Color.fromHex('#000f'), light: Color.fromHex('#000f'), hcDark: Color.fromHex('#000f'), hcLight: Color.fromHex('#000f') }, nls.localize('minimapForegroundOpacity', 'Opacity of foreground elements rendered in the minimap. For example, \"#000000c0\" will render the elements with 75% opacity.'));\nexport const minimapSliderBackground = registerColor('minimapSlider.background', { light: transparent(scrollbarSliderBackground, 0.5), dark: transparent(scrollbarSliderBackground, 0.5), hcDark: transparent(scrollbarSliderBackground, 0.5), hcLight: transparent(scrollbarSliderBackground, 0.5) }, nls.localize('minimapSliderBackground', \"Minimap slider background color.\"));\nexport const minimapSliderHoverBackground = registerColor('minimapSlider.hoverBackground', { light: transparent(scrollbarSliderHoverBackground, 0.5), dark: transparent(scrollbarSliderHoverBackground, 0.5), hcDark: transparent(scrollbarSliderHoverBackground, 0.5), hcLight: transparent(scrollbarSliderHoverBackground, 0.5) }, nls.localize('minimapSliderHoverBackground', \"Minimap slider background color when hovering.\"));\nexport const minimapSliderActiveBackground = registerColor('minimapSlider.activeBackground', { light: transparent(scrollbarSliderActiveBackground, 0.5), dark: transparent(scrollbarSliderActiveBackground, 0.5), hcDark: transparent(scrollbarSliderActiveBackground, 0.5), hcLight: transparent(scrollbarSliderActiveBackground, 0.5) }, nls.localize('minimapSliderActiveBackground', \"Minimap slider background color when clicked on.\"));\nexport const problemsErrorIconForeground = registerColor('problemsErrorIcon.foreground', { dark: editorErrorForeground, light: editorErrorForeground, hcDark: editorErrorForeground, hcLight: editorErrorForeground }, nls.localize('problemsErrorIconForeground', \"The color used for the problems error icon.\"));\nexport const problemsWarningIconForeground = registerColor('problemsWarningIcon.foreground', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningForeground, hcLight: editorWarningForeground }, nls.localize('problemsWarningIconForeground', \"The color used for the problems warning icon.\"));\nexport const problemsInfoIconForeground = registerColor('problemsInfoIcon.foreground', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoForeground, hcLight: editorInfoForeground }, nls.localize('problemsInfoIconForeground', \"The color used for the problems info icon.\"));\n/**\n * Chart colors\n */\nexport const chartsForeground = registerColor('charts.foreground', { dark: foreground, light: foreground, hcDark: foreground, hcLight: foreground }, nls.localize('chartsForeground', \"The foreground color used in charts.\"));\nexport const chartsLines = registerColor('charts.lines', { dark: transparent(foreground, .5), light: transparent(foreground, .5), hcDark: transparent(foreground, .5), hcLight: transparent(foreground, .5) }, nls.localize('chartsLines', \"The color used for horizontal lines in charts.\"));\nexport const chartsRed = registerColor('charts.red', { dark: editorErrorForeground, light: editorErrorForeground, hcDark: editorErrorForeground, hcLight: editorErrorForeground }, nls.localize('chartsRed', \"The red color used in chart visualizations.\"));\nexport const chartsBlue = registerColor('charts.blue', { dark: editorInfoForeground, light: editorInfoForeground, hcDark: editorInfoForeground, hcLight: editorInfoForeground }, nls.localize('chartsBlue', \"The blue color used in chart visualizations.\"));\nexport const chartsYellow = registerColor('charts.yellow', { dark: editorWarningForeground, light: editorWarningForeground, hcDark: editorWarningForeground, hcLight: editorWarningForeground }, nls.localize('chartsYellow', \"The yellow color used in chart visualizations.\"));\nexport const chartsOrange = registerColor('charts.orange', { dark: minimapFindMatch, light: minimapFindMatch, hcDark: minimapFindMatch, hcLight: minimapFindMatch }, nls.localize('chartsOrange', \"The orange color used in chart visualizations.\"));\nexport const chartsGreen = registerColor('charts.green', { dark: '#89D185', light: '#388A34', hcDark: '#89D185', hcLight: '#374e06' }, nls.localize('chartsGreen', \"The green color used in chart visualizations.\"));\nexport const chartsPurple = registerColor('charts.purple', { dark: '#B180D7', light: '#652D90', hcDark: '#B180D7', hcLight: '#652D90' }, nls.localize('chartsPurple', \"The purple color used in chart visualizations.\"));\n// ----- color functions\nexport function executeTransform(transform, theme) {\n    var _a, _b, _c, _d;\n    switch (transform.op) {\n        case 0 /* ColorTransformType.Darken */:\n            return (_a = resolveColorValue(transform.value, theme)) === null || _a === void 0 ? void 0 : _a.darken(transform.factor);\n        case 1 /* ColorTransformType.Lighten */:\n            return (_b = resolveColorValue(transform.value, theme)) === null || _b === void 0 ? void 0 : _b.lighten(transform.factor);\n        case 2 /* ColorTransformType.Transparent */:\n            return (_c = resolveColorValue(transform.value, theme)) === null || _c === void 0 ? void 0 : _c.transparent(transform.factor);\n        case 3 /* ColorTransformType.Opaque */: {\n            const backgroundColor = resolveColorValue(transform.background, theme);\n            if (!backgroundColor) {\n                return resolveColorValue(transform.value, theme);\n            }\n            return (_d = resolveColorValue(transform.value, theme)) === null || _d === void 0 ? void 0 : _d.makeOpaque(backgroundColor);\n        }\n        case 4 /* ColorTransformType.OneOf */:\n            for (const candidate of transform.values) {\n                const color = resolveColorValue(candidate, theme);\n                if (color) {\n                    return color;\n                }\n            }\n            return undefined;\n        case 6 /* ColorTransformType.IfDefinedThenElse */:\n            return resolveColorValue(theme.defines(transform.if) ? transform.then : transform.else, theme);\n        case 5 /* ColorTransformType.LessProminent */: {\n            const from = resolveColorValue(transform.value, theme);\n            if (!from) {\n                return undefined;\n            }\n            const backgroundColor = resolveColorValue(transform.background, theme);\n            if (!backgroundColor) {\n                return from.transparent(transform.factor * transform.transparency);\n            }\n            return from.isDarkerThan(backgroundColor)\n                ? Color.getLighterColor(from, backgroundColor, transform.factor).transparent(transform.transparency)\n                : Color.getDarkerColor(from, backgroundColor, transform.factor).transparent(transform.transparency);\n        }\n        default:\n            throw assertNever(transform);\n    }\n}\nexport function darken(colorValue, factor) {\n    return { op: 0 /* ColorTransformType.Darken */, value: colorValue, factor };\n}\nexport function lighten(colorValue, factor) {\n    return { op: 1 /* ColorTransformType.Lighten */, value: colorValue, factor };\n}\nexport function transparent(colorValue, factor) {\n    return { op: 2 /* ColorTransformType.Transparent */, value: colorValue, factor };\n}\nexport function oneOf(...colorValues) {\n    return { op: 4 /* ColorTransformType.OneOf */, values: colorValues };\n}\nexport function ifDefinedThenElse(ifArg, thenArg, elseArg) {\n    return { op: 6 /* ColorTransformType.IfDefinedThenElse */, if: ifArg, then: thenArg, else: elseArg };\n}\nfunction lessProminent(colorValue, backgroundColorValue, factor, transparency) {\n    return { op: 5 /* ColorTransformType.LessProminent */, value: colorValue, background: backgroundColorValue, factor, transparency };\n}\n// ----- implementation\n/**\n * @param colorValue Resolve a color value in the context of a theme\n */\nexport function resolveColorValue(colorValue, theme) {\n    if (colorValue === null) {\n        return undefined;\n    }\n    else if (typeof colorValue === 'string') {\n        if (colorValue[0] === '#') {\n            return Color.fromHex(colorValue);\n        }\n        return theme.getColor(colorValue);\n    }\n    else if (colorValue instanceof Color) {\n        return colorValue;\n    }\n    else if (typeof colorValue === 'object') {\n        return executeTransform(colorValue, theme);\n    }\n    return undefined;\n}\nexport const workbenchColorsSchemaId = 'vscode://schemas/workbench-colors';\nconst schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(workbenchColorsSchemaId, colorRegistry.getColorSchema());\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(workbenchColorsSchemaId), 200);\ncolorRegistry.onDidChangeSchema(() => {\n    if (!delayer.isScheduled()) {\n        delayer.schedule();\n    }\n});\n// setTimeout(_ => console.log(colorRegistry.toString()), 5000);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Codicon, getCodiconFontCharacters } from '../../../base/common/codicons.js';\nimport { ThemeIcon } from '../../../base/common/themables.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { isString } from '../../../base/common/types.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { localize } from '../../../nls.js';\nimport { Extensions as JSONExtensions } from '../../jsonschemas/common/jsonContributionRegistry.js';\nimport * as platform from '../../registry/common/platform.js';\n//  ------ API types\n// icon registry\nexport const Extensions = {\n    IconContribution: 'base.contributions.icons'\n};\nexport var IconContribution;\n(function (IconContribution) {\n    function getDefinition(contribution, registry) {\n        let definition = contribution.defaults;\n        while (ThemeIcon.isThemeIcon(definition)) {\n            const c = iconRegistry.getIcon(definition.id);\n            if (!c) {\n                return undefined;\n            }\n            definition = c.defaults;\n        }\n        return definition;\n    }\n    IconContribution.getDefinition = getDefinition;\n})(IconContribution || (IconContribution = {}));\nexport var IconFontDefinition;\n(function (IconFontDefinition) {\n    function toJSONObject(iconFont) {\n        return {\n            weight: iconFont.weight,\n            style: iconFont.style,\n            src: iconFont.src.map(s => ({ format: s.format, location: s.location.toString() }))\n        };\n    }\n    IconFontDefinition.toJSONObject = toJSONObject;\n    function fromJSONObject(json) {\n        const stringOrUndef = (s) => isString(s) ? s : undefined;\n        if (json && Array.isArray(json.src) && json.src.every((s) => isString(s.format) && isString(s.location))) {\n            return {\n                weight: stringOrUndef(json.weight),\n                style: stringOrUndef(json.style),\n                src: json.src.map((s) => ({ format: s.format, location: URI.parse(s.location) }))\n            };\n        }\n        return undefined;\n    }\n    IconFontDefinition.fromJSONObject = fromJSONObject;\n})(IconFontDefinition || (IconFontDefinition = {}));\nclass IconRegistry {\n    constructor() {\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this.iconSchema = {\n            definitions: {\n                icons: {\n                    type: 'object',\n                    properties: {\n                        fontId: { type: 'string', description: localize('iconDefinition.fontId', 'The id of the font to use. If not set, the font that is defined first is used.') },\n                        fontCharacter: { type: 'string', description: localize('iconDefinition.fontCharacter', 'The font character associated with the icon definition.') }\n                    },\n                    additionalProperties: false,\n                    defaultSnippets: [{ body: { fontCharacter: '\\\\\\\\e030' } }]\n                }\n            },\n            type: 'object',\n            properties: {}\n        };\n        this.iconReferenceSchema = { type: 'string', pattern: `^${ThemeIcon.iconNameExpression}$`, enum: [], enumDescriptions: [] };\n        this.iconsById = {};\n        this.iconFontsById = {};\n    }\n    registerIcon(id, defaults, description, deprecationMessage) {\n        const existing = this.iconsById[id];\n        if (existing) {\n            if (description && !existing.description) {\n                existing.description = description;\n                this.iconSchema.properties[id].markdownDescription = `${description} $(${id})`;\n                const enumIndex = this.iconReferenceSchema.enum.indexOf(id);\n                if (enumIndex !== -1) {\n                    this.iconReferenceSchema.enumDescriptions[enumIndex] = description;\n                }\n                this._onDidChange.fire();\n            }\n            return existing;\n        }\n        const iconContribution = { id, description, defaults, deprecationMessage };\n        this.iconsById[id] = iconContribution;\n        const propertySchema = { $ref: '#/definitions/icons' };\n        if (deprecationMessage) {\n            propertySchema.deprecationMessage = deprecationMessage;\n        }\n        if (description) {\n            propertySchema.markdownDescription = `${description}: $(${id})`;\n        }\n        this.iconSchema.properties[id] = propertySchema;\n        this.iconReferenceSchema.enum.push(id);\n        this.iconReferenceSchema.enumDescriptions.push(description || '');\n        this._onDidChange.fire();\n        return { id };\n    }\n    getIcons() {\n        return Object.keys(this.iconsById).map(id => this.iconsById[id]);\n    }\n    getIcon(id) {\n        return this.iconsById[id];\n    }\n    getIconSchema() {\n        return this.iconSchema;\n    }\n    toString() {\n        const sorter = (i1, i2) => {\n            return i1.id.localeCompare(i2.id);\n        };\n        const classNames = (i) => {\n            while (ThemeIcon.isThemeIcon(i.defaults)) {\n                i = this.iconsById[i.defaults.id];\n            }\n            return `codicon codicon-${i ? i.id : ''}`;\n        };\n        const reference = [];\n        reference.push(`| preview     | identifier                        | default codicon ID                | description`);\n        reference.push(`| ----------- | --------------------------------- | --------------------------------- | --------------------------------- |`);\n        const contributions = Object.keys(this.iconsById).map(key => this.iconsById[key]);\n        for (const i of contributions.filter(i => !!i.description).sort(sorter)) {\n            reference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|${ThemeIcon.isThemeIcon(i.defaults) ? i.defaults.id : i.id}|${i.description || ''}|`);\n        }\n        reference.push(`| preview     | identifier                        `);\n        reference.push(`| ----------- | --------------------------------- |`);\n        for (const i of contributions.filter(i => !ThemeIcon.isThemeIcon(i.defaults)).sort(sorter)) {\n            reference.push(`|<i class=\"${classNames(i)}\"></i>|${i.id}|`);\n        }\n        return reference.join('\\n');\n    }\n}\nconst iconRegistry = new IconRegistry();\nplatform.Registry.add(Extensions.IconContribution, iconRegistry);\nexport function registerIcon(id, defaults, description, deprecationMessage) {\n    return iconRegistry.registerIcon(id, defaults, description, deprecationMessage);\n}\nexport function getIconRegistry() {\n    return iconRegistry;\n}\nfunction initialize() {\n    const codiconFontCharacters = getCodiconFontCharacters();\n    for (const icon in codiconFontCharacters) {\n        const fontCharacter = '\\\\' + codiconFontCharacters[icon].toString(16);\n        iconRegistry.registerIcon(icon, { fontCharacter });\n    }\n}\ninitialize();\nexport const iconsSchemaId = 'vscode://schemas/icons';\nconst schemaRegistry = platform.Registry.as(JSONExtensions.JSONContribution);\nschemaRegistry.registerSchema(iconsSchemaId, iconRegistry.getIconSchema());\nconst delayer = new RunOnceScheduler(() => schemaRegistry.notifySchemaChanged(iconsSchemaId), 200);\niconRegistry.onDidChange(() => {\n    if (!delayer.isScheduled()) {\n        delayer.schedule();\n    }\n});\n//setTimeout(_ => console.log(iconRegistry.toString()), 5000);\n// common icons\nexport const widgetClose = registerIcon('widget-close', Codicon.close, localize('widgetClose', 'Icon for the close action in widgets.'));\nexport const gotoPreviousLocation = registerIcon('goto-previous-location', Codicon.arrowUp, localize('previousChangeIcon', 'Icon for goto previous editor location.'));\nexport const gotoNextLocation = registerIcon('goto-next-location', Codicon.arrowDown, localize('nextChangeIcon', 'Icon for goto next editor location.'));\nexport const syncing = ThemeIcon.modify(Codicon.sync, 'spin');\nexport const spinningLoading = ThemeIcon.modify(Codicon.loading, 'spin');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Color scheme used by the OS and by color themes.\n */\nexport var ColorScheme;\n(function (ColorScheme) {\n    ColorScheme[\"DARK\"] = \"dark\";\n    ColorScheme[\"LIGHT\"] = \"light\";\n    ColorScheme[\"HIGH_CONTRAST_DARK\"] = \"hcDark\";\n    ColorScheme[\"HIGH_CONTRAST_LIGHT\"] = \"hcLight\";\n})(ColorScheme || (ColorScheme = {}));\nexport function isHighContrast(scheme) {\n    return scheme === ColorScheme.HIGH_CONTRAST_DARK || scheme === ColorScheme.HIGH_CONTRAST_LIGHT;\n}\nexport function isDark(scheme) {\n    return scheme === ColorScheme.DARK || scheme === ColorScheme.HIGH_CONTRAST_DARK;\n}\n","import { Emitter } from '../../../base/common/event.js';\nimport { Disposable, toDisposable } from '../../../base/common/lifecycle.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nimport * as platform from '../../registry/common/platform.js';\nimport { ColorScheme } from './theme.js';\nexport const IThemeService = createDecorator('themeService');\nexport function themeColorFromId(id) {\n    return { id };\n}\nexport function getThemeTypeSelector(type) {\n    switch (type) {\n        case ColorScheme.DARK: return 'vs-dark';\n        case ColorScheme.HIGH_CONTRAST_DARK: return 'hc-black';\n        case ColorScheme.HIGH_CONTRAST_LIGHT: return 'hc-light';\n        default: return 'vs';\n    }\n}\n// static theming participant\nexport const Extensions = {\n    ThemingContribution: 'base.contributions.theming'\n};\nclass ThemingRegistry {\n    constructor() {\n        this.themingParticipants = [];\n        this.themingParticipants = [];\n        this.onThemingParticipantAddedEmitter = new Emitter();\n    }\n    onColorThemeChange(participant) {\n        this.themingParticipants.push(participant);\n        this.onThemingParticipantAddedEmitter.fire(participant);\n        return toDisposable(() => {\n            const idx = this.themingParticipants.indexOf(participant);\n            this.themingParticipants.splice(idx, 1);\n        });\n    }\n    getThemingParticipants() {\n        return this.themingParticipants;\n    }\n}\nconst themingRegistry = new ThemingRegistry();\nplatform.Registry.add(Extensions.ThemingContribution, themingRegistry);\nexport function registerThemingParticipant(participant) {\n    return themingRegistry.onColorThemeChange(participant);\n}\n/**\n * Utility base class for all themable components.\n */\nexport class Themable extends Disposable {\n    constructor(themeService) {\n        super();\n        this.themeService = themeService;\n        this.theme = themeService.getColorTheme();\n        // Hook up to theme changes\n        this._register(this.themeService.onDidColorThemeChange(theme => this.onThemeChange(theme)));\n    }\n    onThemeChange(theme) {\n        this.theme = theme;\n        this.updateStyles();\n    }\n    updateStyles() {\n        // Subclasses to override\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IUndoRedoService = createDecorator('undoRedoService');\nexport class ResourceEditStackSnapshot {\n    constructor(resource, elements) {\n        this.resource = resource;\n        this.elements = elements;\n    }\n}\nclass UndoRedoGroup {\n    constructor() {\n        this.id = UndoRedoGroup._ID++;\n        this.order = 1;\n    }\n    nextOrder() {\n        if (this.id === 0) {\n            return 0;\n        }\n        return this.order++;\n    }\n}\nUndoRedoGroup._ID = 0;\nUndoRedoGroup.None = new UndoRedoGroup();\nexport { UndoRedoGroup };\nclass UndoRedoSource {\n    constructor() {\n        this.id = UndoRedoSource._ID++;\n        this.order = 1;\n    }\n    nextOrder() {\n        if (this.id === 0) {\n            return 0;\n        }\n        return this.order++;\n    }\n}\nUndoRedoSource._ID = 0;\nUndoRedoSource.None = new UndoRedoSource();\nexport { UndoRedoSource };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Disposable, isDisposable } from '../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport Severity from '../../../base/common/severity.js';\nimport * as nls from '../../../nls.js';\nimport { IDialogService } from '../../dialogs/common/dialogs.js';\nimport { registerSingleton } from '../../instantiation/common/extensions.js';\nimport { INotificationService } from '../../notification/common/notification.js';\nimport { IUndoRedoService, ResourceEditStackSnapshot, UndoRedoGroup, UndoRedoSource } from './undoRedo.js';\nconst DEBUG = false;\nfunction getResourceLabel(resource) {\n    return resource.scheme === Schemas.file ? resource.fsPath : resource.path;\n}\nlet stackElementCounter = 0;\nclass ResourceStackElement {\n    constructor(actual, resourceLabel, strResource, groupId, groupOrder, sourceId, sourceOrder) {\n        this.id = (++stackElementCounter);\n        this.type = 0 /* UndoRedoElementType.Resource */;\n        this.actual = actual;\n        this.label = actual.label;\n        this.confirmBeforeUndo = actual.confirmBeforeUndo || false;\n        this.resourceLabel = resourceLabel;\n        this.strResource = strResource;\n        this.resourceLabels = [this.resourceLabel];\n        this.strResources = [this.strResource];\n        this.groupId = groupId;\n        this.groupOrder = groupOrder;\n        this.sourceId = sourceId;\n        this.sourceOrder = sourceOrder;\n        this.isValid = true;\n    }\n    setValid(isValid) {\n        this.isValid = isValid;\n    }\n    toString() {\n        return `[id:${this.id}] [group:${this.groupId}] [${this.isValid ? '  VALID' : 'INVALID'}] ${this.actual.constructor.name} - ${this.actual}`;\n    }\n}\nclass ResourceReasonPair {\n    constructor(resourceLabel, reason) {\n        this.resourceLabel = resourceLabel;\n        this.reason = reason;\n    }\n}\nclass RemovedResources {\n    constructor() {\n        this.elements = new Map();\n    }\n    createMessage() {\n        const externalRemoval = [];\n        const noParallelUniverses = [];\n        for (const [, element] of this.elements) {\n            const dest = (element.reason === 0 /* RemovedResourceReason.ExternalRemoval */\n                ? externalRemoval\n                : noParallelUniverses);\n            dest.push(element.resourceLabel);\n        }\n        const messages = [];\n        if (externalRemoval.length > 0) {\n            messages.push(nls.localize({ key: 'externalRemoval', comment: ['{0} is a list of filenames'] }, \"The following files have been closed and modified on disk: {0}.\", externalRemoval.join(', ')));\n        }\n        if (noParallelUniverses.length > 0) {\n            messages.push(nls.localize({ key: 'noParallelUniverses', comment: ['{0} is a list of filenames'] }, \"The following files have been modified in an incompatible way: {0}.\", noParallelUniverses.join(', ')));\n        }\n        return messages.join('\\n');\n    }\n    get size() {\n        return this.elements.size;\n    }\n    has(strResource) {\n        return this.elements.has(strResource);\n    }\n    set(strResource, value) {\n        this.elements.set(strResource, value);\n    }\n    delete(strResource) {\n        return this.elements.delete(strResource);\n    }\n}\nclass WorkspaceStackElement {\n    constructor(actual, resourceLabels, strResources, groupId, groupOrder, sourceId, sourceOrder) {\n        this.id = (++stackElementCounter);\n        this.type = 1 /* UndoRedoElementType.Workspace */;\n        this.actual = actual;\n        this.label = actual.label;\n        this.confirmBeforeUndo = actual.confirmBeforeUndo || false;\n        this.resourceLabels = resourceLabels;\n        this.strResources = strResources;\n        this.groupId = groupId;\n        this.groupOrder = groupOrder;\n        this.sourceId = sourceId;\n        this.sourceOrder = sourceOrder;\n        this.removedResources = null;\n        this.invalidatedResources = null;\n    }\n    canSplit() {\n        return (typeof this.actual.split === 'function');\n    }\n    removeResource(resourceLabel, strResource, reason) {\n        if (!this.removedResources) {\n            this.removedResources = new RemovedResources();\n        }\n        if (!this.removedResources.has(strResource)) {\n            this.removedResources.set(strResource, new ResourceReasonPair(resourceLabel, reason));\n        }\n    }\n    setValid(resourceLabel, strResource, isValid) {\n        if (isValid) {\n            if (this.invalidatedResources) {\n                this.invalidatedResources.delete(strResource);\n                if (this.invalidatedResources.size === 0) {\n                    this.invalidatedResources = null;\n                }\n            }\n        }\n        else {\n            if (!this.invalidatedResources) {\n                this.invalidatedResources = new RemovedResources();\n            }\n            if (!this.invalidatedResources.has(strResource)) {\n                this.invalidatedResources.set(strResource, new ResourceReasonPair(resourceLabel, 0 /* RemovedResourceReason.ExternalRemoval */));\n            }\n        }\n    }\n    toString() {\n        return `[id:${this.id}] [group:${this.groupId}] [${this.invalidatedResources ? 'INVALID' : '  VALID'}] ${this.actual.constructor.name} - ${this.actual}`;\n    }\n}\nclass ResourceEditStack {\n    constructor(resourceLabel, strResource) {\n        this.resourceLabel = resourceLabel;\n        this.strResource = strResource;\n        this._past = [];\n        this._future = [];\n        this.locked = false;\n        this.versionId = 1;\n    }\n    dispose() {\n        for (const element of this._past) {\n            if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* RemovedResourceReason.ExternalRemoval */);\n            }\n        }\n        for (const element of this._future) {\n            if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* RemovedResourceReason.ExternalRemoval */);\n            }\n        }\n        this.versionId++;\n    }\n    toString() {\n        const result = [];\n        result.push(`* ${this.strResource}:`);\n        for (let i = 0; i < this._past.length; i++) {\n            result.push(`   * [UNDO] ${this._past[i]}`);\n        }\n        for (let i = this._future.length - 1; i >= 0; i--) {\n            result.push(`   * [REDO] ${this._future[i]}`);\n        }\n        return result.join('\\n');\n    }\n    flushAllElements() {\n        this._past = [];\n        this._future = [];\n        this.versionId++;\n    }\n    _setElementValidFlag(element, isValid) {\n        if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n            element.setValid(this.resourceLabel, this.strResource, isValid);\n        }\n        else {\n            element.setValid(isValid);\n        }\n    }\n    setElementsValidFlag(isValid, filter) {\n        for (const element of this._past) {\n            if (filter(element.actual)) {\n                this._setElementValidFlag(element, isValid);\n            }\n        }\n        for (const element of this._future) {\n            if (filter(element.actual)) {\n                this._setElementValidFlag(element, isValid);\n            }\n        }\n    }\n    pushElement(element) {\n        // remove the future\n        for (const futureElement of this._future) {\n            if (futureElement.type === 1 /* UndoRedoElementType.Workspace */) {\n                futureElement.removeResource(this.resourceLabel, this.strResource, 1 /* RemovedResourceReason.NoParallelUniverses */);\n            }\n        }\n        this._future = [];\n        this._past.push(element);\n        this.versionId++;\n    }\n    createSnapshot(resource) {\n        const elements = [];\n        for (let i = 0, len = this._past.length; i < len; i++) {\n            elements.push(this._past[i].id);\n        }\n        for (let i = this._future.length - 1; i >= 0; i--) {\n            elements.push(this._future[i].id);\n        }\n        return new ResourceEditStackSnapshot(resource, elements);\n    }\n    restoreSnapshot(snapshot) {\n        const snapshotLength = snapshot.elements.length;\n        let isOK = true;\n        let snapshotIndex = 0;\n        let removePastAfter = -1;\n        for (let i = 0, len = this._past.length; i < len; i++, snapshotIndex++) {\n            const element = this._past[i];\n            if (isOK && (snapshotIndex >= snapshotLength || element.id !== snapshot.elements[snapshotIndex])) {\n                isOK = false;\n                removePastAfter = 0;\n            }\n            if (!isOK && element.type === 1 /* UndoRedoElementType.Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* RemovedResourceReason.ExternalRemoval */);\n            }\n        }\n        let removeFutureBefore = -1;\n        for (let i = this._future.length - 1; i >= 0; i--, snapshotIndex++) {\n            const element = this._future[i];\n            if (isOK && (snapshotIndex >= snapshotLength || element.id !== snapshot.elements[snapshotIndex])) {\n                isOK = false;\n                removeFutureBefore = i;\n            }\n            if (!isOK && element.type === 1 /* UndoRedoElementType.Workspace */) {\n                element.removeResource(this.resourceLabel, this.strResource, 0 /* RemovedResourceReason.ExternalRemoval */);\n            }\n        }\n        if (removePastAfter !== -1) {\n            this._past = this._past.slice(0, removePastAfter);\n        }\n        if (removeFutureBefore !== -1) {\n            this._future = this._future.slice(removeFutureBefore + 1);\n        }\n        this.versionId++;\n    }\n    getElements() {\n        const past = [];\n        const future = [];\n        for (const element of this._past) {\n            past.push(element.actual);\n        }\n        for (const element of this._future) {\n            future.push(element.actual);\n        }\n        return { past, future };\n    }\n    getClosestPastElement() {\n        if (this._past.length === 0) {\n            return null;\n        }\n        return this._past[this._past.length - 1];\n    }\n    getSecondClosestPastElement() {\n        if (this._past.length < 2) {\n            return null;\n        }\n        return this._past[this._past.length - 2];\n    }\n    getClosestFutureElement() {\n        if (this._future.length === 0) {\n            return null;\n        }\n        return this._future[this._future.length - 1];\n    }\n    hasPastElements() {\n        return (this._past.length > 0);\n    }\n    hasFutureElements() {\n        return (this._future.length > 0);\n    }\n    splitPastWorkspaceElement(toRemove, individualMap) {\n        for (let j = this._past.length - 1; j >= 0; j--) {\n            if (this._past[j] === toRemove) {\n                if (individualMap.has(this.strResource)) {\n                    // gets replaced\n                    this._past[j] = individualMap.get(this.strResource);\n                }\n                else {\n                    // gets deleted\n                    this._past.splice(j, 1);\n                }\n                break;\n            }\n        }\n        this.versionId++;\n    }\n    splitFutureWorkspaceElement(toRemove, individualMap) {\n        for (let j = this._future.length - 1; j >= 0; j--) {\n            if (this._future[j] === toRemove) {\n                if (individualMap.has(this.strResource)) {\n                    // gets replaced\n                    this._future[j] = individualMap.get(this.strResource);\n                }\n                else {\n                    // gets deleted\n                    this._future.splice(j, 1);\n                }\n                break;\n            }\n        }\n        this.versionId++;\n    }\n    moveBackward(element) {\n        this._past.pop();\n        this._future.push(element);\n        this.versionId++;\n    }\n    moveForward(element) {\n        this._future.pop();\n        this._past.push(element);\n        this.versionId++;\n    }\n}\nclass EditStackSnapshot {\n    constructor(editStacks) {\n        this.editStacks = editStacks;\n        this._versionIds = [];\n        for (let i = 0, len = this.editStacks.length; i < len; i++) {\n            this._versionIds[i] = this.editStacks[i].versionId;\n        }\n    }\n    isValid() {\n        for (let i = 0, len = this.editStacks.length; i < len; i++) {\n            if (this._versionIds[i] !== this.editStacks[i].versionId) {\n                return false;\n            }\n        }\n        return true;\n    }\n}\nconst missingEditStack = new ResourceEditStack('', '');\nmissingEditStack.locked = true;\nlet UndoRedoService = class UndoRedoService {\n    constructor(_dialogService, _notificationService) {\n        this._dialogService = _dialogService;\n        this._notificationService = _notificationService;\n        this._editStacks = new Map();\n        this._uriComparisonKeyComputers = [];\n    }\n    getUriComparisonKey(resource) {\n        for (const uriComparisonKeyComputer of this._uriComparisonKeyComputers) {\n            if (uriComparisonKeyComputer[0] === resource.scheme) {\n                return uriComparisonKeyComputer[1].getComparisonKey(resource);\n            }\n        }\n        return resource.toString();\n    }\n    _print(label) {\n        console.log(`------------------------------------`);\n        console.log(`AFTER ${label}: `);\n        const str = [];\n        for (const element of this._editStacks) {\n            str.push(element[1].toString());\n        }\n        console.log(str.join('\\n'));\n    }\n    pushElement(element, group = UndoRedoGroup.None, source = UndoRedoSource.None) {\n        if (element.type === 0 /* UndoRedoElementType.Resource */) {\n            const resourceLabel = getResourceLabel(element.resource);\n            const strResource = this.getUriComparisonKey(element.resource);\n            this._pushElement(new ResourceStackElement(element, resourceLabel, strResource, group.id, group.nextOrder(), source.id, source.nextOrder()));\n        }\n        else {\n            const seen = new Set();\n            const resourceLabels = [];\n            const strResources = [];\n            for (const resource of element.resources) {\n                const resourceLabel = getResourceLabel(resource);\n                const strResource = this.getUriComparisonKey(resource);\n                if (seen.has(strResource)) {\n                    continue;\n                }\n                seen.add(strResource);\n                resourceLabels.push(resourceLabel);\n                strResources.push(strResource);\n            }\n            if (resourceLabels.length === 1) {\n                this._pushElement(new ResourceStackElement(element, resourceLabels[0], strResources[0], group.id, group.nextOrder(), source.id, source.nextOrder()));\n            }\n            else {\n                this._pushElement(new WorkspaceStackElement(element, resourceLabels, strResources, group.id, group.nextOrder(), source.id, source.nextOrder()));\n            }\n        }\n        if (DEBUG) {\n            this._print('pushElement');\n        }\n    }\n    _pushElement(element) {\n        for (let i = 0, len = element.strResources.length; i < len; i++) {\n            const resourceLabel = element.resourceLabels[i];\n            const strResource = element.strResources[i];\n            let editStack;\n            if (this._editStacks.has(strResource)) {\n                editStack = this._editStacks.get(strResource);\n            }\n            else {\n                editStack = new ResourceEditStack(resourceLabel, strResource);\n                this._editStacks.set(strResource, editStack);\n            }\n            editStack.pushElement(element);\n        }\n    }\n    getLastElement(resource) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            if (editStack.hasFutureElements()) {\n                return null;\n            }\n            const closestPastElement = editStack.getClosestPastElement();\n            return closestPastElement ? closestPastElement.actual : null;\n        }\n        return null;\n    }\n    _splitPastWorkspaceElement(toRemove, ignoreResources) {\n        const individualArr = toRemove.actual.split();\n        const individualMap = new Map();\n        for (const _element of individualArr) {\n            const resourceLabel = getResourceLabel(_element.resource);\n            const strResource = this.getUriComparisonKey(_element.resource);\n            const element = new ResourceStackElement(_element, resourceLabel, strResource, 0, 0, 0, 0);\n            individualMap.set(element.strResource, element);\n        }\n        for (const strResource of toRemove.strResources) {\n            if (ignoreResources && ignoreResources.has(strResource)) {\n                continue;\n            }\n            const editStack = this._editStacks.get(strResource);\n            editStack.splitPastWorkspaceElement(toRemove, individualMap);\n        }\n    }\n    _splitFutureWorkspaceElement(toRemove, ignoreResources) {\n        const individualArr = toRemove.actual.split();\n        const individualMap = new Map();\n        for (const _element of individualArr) {\n            const resourceLabel = getResourceLabel(_element.resource);\n            const strResource = this.getUriComparisonKey(_element.resource);\n            const element = new ResourceStackElement(_element, resourceLabel, strResource, 0, 0, 0, 0);\n            individualMap.set(element.strResource, element);\n        }\n        for (const strResource of toRemove.strResources) {\n            if (ignoreResources && ignoreResources.has(strResource)) {\n                continue;\n            }\n            const editStack = this._editStacks.get(strResource);\n            editStack.splitFutureWorkspaceElement(toRemove, individualMap);\n        }\n    }\n    removeElements(resource) {\n        const strResource = typeof resource === 'string' ? resource : this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            editStack.dispose();\n            this._editStacks.delete(strResource);\n        }\n        if (DEBUG) {\n            this._print('removeElements');\n        }\n    }\n    setElementsValidFlag(resource, isValid, filter) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            editStack.setElementsValidFlag(isValid, filter);\n        }\n        if (DEBUG) {\n            this._print('setElementsValidFlag');\n        }\n    }\n    createSnapshot(resource) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.createSnapshot(resource);\n        }\n        return new ResourceEditStackSnapshot(resource, []);\n    }\n    restoreSnapshot(snapshot) {\n        const strResource = this.getUriComparisonKey(snapshot.resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            editStack.restoreSnapshot(snapshot);\n            if (!editStack.hasPastElements() && !editStack.hasFutureElements()) {\n                // the edit stack is now empty, just remove it entirely\n                editStack.dispose();\n                this._editStacks.delete(strResource);\n            }\n        }\n        if (DEBUG) {\n            this._print('restoreSnapshot');\n        }\n    }\n    getElements(resource) {\n        const strResource = this.getUriComparisonKey(resource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.getElements();\n        }\n        return { past: [], future: [] };\n    }\n    _findClosestUndoElementWithSource(sourceId) {\n        if (!sourceId) {\n            return [null, null];\n        }\n        // find an element with the sourceId and with the highest sourceOrder ready to be undone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestPastElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.sourceId === sourceId) {\n                if (!matchedElement || candidate.sourceOrder > matchedElement.sourceOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    canUndo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestUndoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? true : false;\n        }\n        const strResource = this.getUriComparisonKey(resourceOrSource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.hasPastElements();\n        }\n        return false;\n    }\n    _onError(err, element) {\n        onUnexpectedError(err);\n        // An error occurred while undoing or redoing => drop the undo/redo stack for all affected resources\n        for (const strResource of element.strResources) {\n            this.removeElements(strResource);\n        }\n        this._notificationService.error(err);\n    }\n    _acquireLocks(editStackSnapshot) {\n        // first, check if all locks can be acquired\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.locked) {\n                throw new Error('Cannot acquire edit stack lock');\n            }\n        }\n        // can acquire all locks\n        for (const editStack of editStackSnapshot.editStacks) {\n            editStack.locked = true;\n        }\n        return () => {\n            // release all locks\n            for (const editStack of editStackSnapshot.editStacks) {\n                editStack.locked = false;\n            }\n        };\n    }\n    _safeInvokeWithLocks(element, invoke, editStackSnapshot, cleanup, continuation) {\n        const releaseLocks = this._acquireLocks(editStackSnapshot);\n        let result;\n        try {\n            result = invoke();\n        }\n        catch (err) {\n            releaseLocks();\n            cleanup.dispose();\n            return this._onError(err, element);\n        }\n        if (result) {\n            // result is Promise<void>\n            return result.then(() => {\n                releaseLocks();\n                cleanup.dispose();\n                return continuation();\n            }, (err) => {\n                releaseLocks();\n                cleanup.dispose();\n                return this._onError(err, element);\n            });\n        }\n        else {\n            // result is void\n            releaseLocks();\n            cleanup.dispose();\n            return continuation();\n        }\n    }\n    _invokeWorkspacePrepare(element) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof element.actual.prepareUndoRedo === 'undefined') {\n                return Disposable.None;\n            }\n            const result = element.actual.prepareUndoRedo();\n            if (typeof result === 'undefined') {\n                return Disposable.None;\n            }\n            return result;\n        });\n    }\n    _invokeResourcePrepare(element, callback) {\n        if (element.actual.type !== 1 /* UndoRedoElementType.Workspace */ || typeof element.actual.prepareUndoRedo === 'undefined') {\n            // no preparation needed\n            return callback(Disposable.None);\n        }\n        const r = element.actual.prepareUndoRedo();\n        if (!r) {\n            // nothing to clean up\n            return callback(Disposable.None);\n        }\n        if (isDisposable(r)) {\n            return callback(r);\n        }\n        return r.then((disposable) => {\n            return callback(disposable);\n        });\n    }\n    _getAffectedEditStacks(element) {\n        const affectedEditStacks = [];\n        for (const strResource of element.strResources) {\n            affectedEditStacks.push(this._editStacks.get(strResource) || missingEditStack);\n        }\n        return new EditStackSnapshot(affectedEditStacks);\n    }\n    _tryToSplitAndUndo(strResource, element, ignoreResources, message) {\n        if (element.canSplit()) {\n            this._splitPastWorkspaceElement(element, ignoreResources);\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError(this._undo(strResource, 0, true));\n        }\n        else {\n            // Cannot safely split this workspace element => flush all undo/redo stacks\n            for (const strResource of element.strResources) {\n                this.removeElements(strResource);\n            }\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError();\n        }\n    }\n    _checkWorkspaceUndo(strResource, element, editStackSnapshot, checkInvalidatedResources) {\n        if (element.removedResources) {\n            return this._tryToSplitAndUndo(strResource, element, element.removedResources, nls.localize({ key: 'cannotWorkspaceUndo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not undo '{0}' across all files. {1}\", element.label, element.removedResources.createMessage()));\n        }\n        if (checkInvalidatedResources && element.invalidatedResources) {\n            return this._tryToSplitAndUndo(strResource, element, element.invalidatedResources, nls.localize({ key: 'cannotWorkspaceUndo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not undo '{0}' across all files. {1}\", element.label, element.invalidatedResources.createMessage()));\n        }\n        // this must be the last past element in all the impacted resources!\n        const cannotUndoDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.getClosestPastElement() !== element) {\n                cannotUndoDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotUndoDueToResources.length > 0) {\n            return this._tryToSplitAndUndo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceUndoDueToChanges', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not undo '{0}' across all files because changes were made to {1}\", element.label, cannotUndoDueToResources.join(', ')));\n        }\n        const cannotLockDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.locked) {\n                cannotLockDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotLockDueToResources.length > 0) {\n            return this._tryToSplitAndUndo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceUndoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not undo '{0}' across all files because there is already an undo or redo operation running on {1}\", element.label, cannotLockDueToResources.join(', ')));\n        }\n        // check if new stack elements were added in the meantime...\n        if (!editStackSnapshot.isValid()) {\n            return this._tryToSplitAndUndo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceUndoDueToInMeantimeUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not undo '{0}' across all files because an undo or redo operation occurred in the meantime\", element.label));\n        }\n        return null;\n    }\n    _workspaceUndo(strResource, element, undoConfirmed) {\n        const affectedEditStacks = this._getAffectedEditStacks(element);\n        const verificationError = this._checkWorkspaceUndo(strResource, element, affectedEditStacks, /*invalidated resources will be checked after the prepare call*/ false);\n        if (verificationError) {\n            return verificationError.returnValue;\n        }\n        return this._confirmAndExecuteWorkspaceUndo(strResource, element, affectedEditStacks, undoConfirmed);\n    }\n    _isPartOfUndoGroup(element) {\n        if (!element.groupId) {\n            return false;\n        }\n        // check that there is at least another element with the same groupId ready to be undone\n        for (const [, editStack] of this._editStacks) {\n            const pastElement = editStack.getClosestPastElement();\n            if (!pastElement) {\n                continue;\n            }\n            if (pastElement === element) {\n                const secondPastElement = editStack.getSecondClosestPastElement();\n                if (secondPastElement && secondPastElement.groupId === element.groupId) {\n                    // there is another element with the same group id in the same stack!\n                    return true;\n                }\n            }\n            if (pastElement.groupId === element.groupId) {\n                // there is another element with the same group id in another stack!\n                return true;\n            }\n        }\n        return false;\n    }\n    _confirmAndExecuteWorkspaceUndo(strResource, element, editStackSnapshot, undoConfirmed) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (element.canSplit() && !this._isPartOfUndoGroup(element)) {\n                // this element can be split\n                let UndoChoice;\n                (function (UndoChoice) {\n                    UndoChoice[UndoChoice[\"All\"] = 0] = \"All\";\n                    UndoChoice[UndoChoice[\"This\"] = 1] = \"This\";\n                    UndoChoice[UndoChoice[\"Cancel\"] = 2] = \"Cancel\";\n                })(UndoChoice || (UndoChoice = {}));\n                const { result } = yield this._dialogService.prompt({\n                    type: Severity.Info,\n                    message: nls.localize('confirmWorkspace', \"Would you like to undo '{0}' across all files?\", element.label),\n                    buttons: [\n                        {\n                            label: nls.localize({ key: 'ok', comment: ['{0} denotes a number that is > 1, && denotes a mnemonic'] }, \"&&Undo in {0} Files\", editStackSnapshot.editStacks.length),\n                            run: () => UndoChoice.All\n                        },\n                        {\n                            label: nls.localize({ key: 'nok', comment: ['&& denotes a mnemonic'] }, \"Undo this &&File\"),\n                            run: () => UndoChoice.This\n                        }\n                    ],\n                    cancelButton: {\n                        run: () => UndoChoice.Cancel\n                    }\n                });\n                if (result === UndoChoice.Cancel) {\n                    // choice: cancel\n                    return;\n                }\n                if (result === UndoChoice.This) {\n                    // choice: undo this file\n                    this._splitPastWorkspaceElement(element, null);\n                    return this._undo(strResource, 0, true);\n                }\n                // choice: undo in all files\n                // At this point, it is possible that the element has been made invalid in the meantime (due to the confirmation await)\n                const verificationError1 = this._checkWorkspaceUndo(strResource, element, editStackSnapshot, /*invalidated resources will be checked after the prepare call*/ false);\n                if (verificationError1) {\n                    return verificationError1.returnValue;\n                }\n                undoConfirmed = true;\n            }\n            // prepare\n            let cleanup;\n            try {\n                cleanup = yield this._invokeWorkspacePrepare(element);\n            }\n            catch (err) {\n                return this._onError(err, element);\n            }\n            // At this point, it is possible that the element has been made invalid in the meantime (due to the prepare await)\n            const verificationError2 = this._checkWorkspaceUndo(strResource, element, editStackSnapshot, /*now also check that there are no more invalidated resources*/ true);\n            if (verificationError2) {\n                cleanup.dispose();\n                return verificationError2.returnValue;\n            }\n            for (const editStack of editStackSnapshot.editStacks) {\n                editStack.moveBackward(element);\n            }\n            return this._safeInvokeWithLocks(element, () => element.actual.undo(), editStackSnapshot, cleanup, () => this._continueUndoInGroup(element.groupId, undoConfirmed));\n        });\n    }\n    _resourceUndo(editStack, element, undoConfirmed) {\n        if (!element.isValid) {\n            // invalid element => immediately flush edit stack!\n            editStack.flushAllElements();\n            return;\n        }\n        if (editStack.locked) {\n            const message = nls.localize({ key: 'cannotResourceUndoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation.'] }, \"Could not undo '{0}' because there is already an undo or redo operation running.\", element.label);\n            this._notificationService.warn(message);\n            return;\n        }\n        return this._invokeResourcePrepare(element, (cleanup) => {\n            editStack.moveBackward(element);\n            return this._safeInvokeWithLocks(element, () => element.actual.undo(), new EditStackSnapshot([editStack]), cleanup, () => this._continueUndoInGroup(element.groupId, undoConfirmed));\n        });\n    }\n    _findClosestUndoElementInGroup(groupId) {\n        if (!groupId) {\n            return [null, null];\n        }\n        // find another element with the same groupId and with the highest groupOrder ready to be undone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestPastElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.groupId === groupId) {\n                if (!matchedElement || candidate.groupOrder > matchedElement.groupOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    _continueUndoInGroup(groupId, undoConfirmed) {\n        if (!groupId) {\n            return;\n        }\n        const [, matchedStrResource] = this._findClosestUndoElementInGroup(groupId);\n        if (matchedStrResource) {\n            return this._undo(matchedStrResource, 0, undoConfirmed);\n        }\n    }\n    undo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestUndoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? this._undo(matchedStrResource, resourceOrSource.id, false) : undefined;\n        }\n        if (typeof resourceOrSource === 'string') {\n            return this._undo(resourceOrSource, 0, false);\n        }\n        return this._undo(this.getUriComparisonKey(resourceOrSource), 0, false);\n    }\n    _undo(strResource, sourceId = 0, undoConfirmed) {\n        if (!this._editStacks.has(strResource)) {\n            return;\n        }\n        const editStack = this._editStacks.get(strResource);\n        const element = editStack.getClosestPastElement();\n        if (!element) {\n            return;\n        }\n        if (element.groupId) {\n            // this element is a part of a group, we need to make sure undoing in a group is in order\n            const [matchedElement, matchedStrResource] = this._findClosestUndoElementInGroup(element.groupId);\n            if (element !== matchedElement && matchedStrResource) {\n                // there is an element in the same group that should be undone before this one\n                return this._undo(matchedStrResource, sourceId, undoConfirmed);\n            }\n        }\n        const shouldPromptForConfirmation = (element.sourceId !== sourceId || element.confirmBeforeUndo);\n        if (shouldPromptForConfirmation && !undoConfirmed) {\n            // Hit a different source or the element asks for prompt before undo, prompt for confirmation\n            return this._confirmAndContinueUndo(strResource, sourceId, element);\n        }\n        try {\n            if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n                return this._workspaceUndo(strResource, element, undoConfirmed);\n            }\n            else {\n                return this._resourceUndo(editStack, element, undoConfirmed);\n            }\n        }\n        finally {\n            if (DEBUG) {\n                this._print('undo');\n            }\n        }\n    }\n    _confirmAndContinueUndo(strResource, sourceId, element) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield this._dialogService.confirm({\n                message: nls.localize('confirmDifferentSource', \"Would you like to undo '{0}'?\", element.label),\n                primaryButton: nls.localize({ key: 'confirmDifferentSource.yes', comment: ['&& denotes a mnemonic'] }, \"&&Yes\"),\n                cancelButton: nls.localize('confirmDifferentSource.no', \"No\")\n            });\n            if (!result.confirmed) {\n                return;\n            }\n            return this._undo(strResource, sourceId, true);\n        });\n    }\n    _findClosestRedoElementWithSource(sourceId) {\n        if (!sourceId) {\n            return [null, null];\n        }\n        // find an element with sourceId and with the lowest sourceOrder ready to be redone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestFutureElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.sourceId === sourceId) {\n                if (!matchedElement || candidate.sourceOrder < matchedElement.sourceOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    canRedo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestRedoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? true : false;\n        }\n        const strResource = this.getUriComparisonKey(resourceOrSource);\n        if (this._editStacks.has(strResource)) {\n            const editStack = this._editStacks.get(strResource);\n            return editStack.hasFutureElements();\n        }\n        return false;\n    }\n    _tryToSplitAndRedo(strResource, element, ignoreResources, message) {\n        if (element.canSplit()) {\n            this._splitFutureWorkspaceElement(element, ignoreResources);\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError(this._redo(strResource));\n        }\n        else {\n            // Cannot safely split this workspace element => flush all undo/redo stacks\n            for (const strResource of element.strResources) {\n                this.removeElements(strResource);\n            }\n            this._notificationService.warn(message);\n            return new WorkspaceVerificationError();\n        }\n    }\n    _checkWorkspaceRedo(strResource, element, editStackSnapshot, checkInvalidatedResources) {\n        if (element.removedResources) {\n            return this._tryToSplitAndRedo(strResource, element, element.removedResources, nls.localize({ key: 'cannotWorkspaceRedo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not redo '{0}' across all files. {1}\", element.label, element.removedResources.createMessage()));\n        }\n        if (checkInvalidatedResources && element.invalidatedResources) {\n            return this._tryToSplitAndRedo(strResource, element, element.invalidatedResources, nls.localize({ key: 'cannotWorkspaceRedo', comment: ['{0} is a label for an operation. {1} is another message.'] }, \"Could not redo '{0}' across all files. {1}\", element.label, element.invalidatedResources.createMessage()));\n        }\n        // this must be the last future element in all the impacted resources!\n        const cannotRedoDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.getClosestFutureElement() !== element) {\n                cannotRedoDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotRedoDueToResources.length > 0) {\n            return this._tryToSplitAndRedo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceRedoDueToChanges', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not redo '{0}' across all files because changes were made to {1}\", element.label, cannotRedoDueToResources.join(', ')));\n        }\n        const cannotLockDueToResources = [];\n        for (const editStack of editStackSnapshot.editStacks) {\n            if (editStack.locked) {\n                cannotLockDueToResources.push(editStack.resourceLabel);\n            }\n        }\n        if (cannotLockDueToResources.length > 0) {\n            return this._tryToSplitAndRedo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceRedoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not redo '{0}' across all files because there is already an undo or redo operation running on {1}\", element.label, cannotLockDueToResources.join(', ')));\n        }\n        // check if new stack elements were added in the meantime...\n        if (!editStackSnapshot.isValid()) {\n            return this._tryToSplitAndRedo(strResource, element, null, nls.localize({ key: 'cannotWorkspaceRedoDueToInMeantimeUndoRedo', comment: ['{0} is a label for an operation. {1} is a list of filenames.'] }, \"Could not redo '{0}' across all files because an undo or redo operation occurred in the meantime\", element.label));\n        }\n        return null;\n    }\n    _workspaceRedo(strResource, element) {\n        const affectedEditStacks = this._getAffectedEditStacks(element);\n        const verificationError = this._checkWorkspaceRedo(strResource, element, affectedEditStacks, /*invalidated resources will be checked after the prepare call*/ false);\n        if (verificationError) {\n            return verificationError.returnValue;\n        }\n        return this._executeWorkspaceRedo(strResource, element, affectedEditStacks);\n    }\n    _executeWorkspaceRedo(strResource, element, editStackSnapshot) {\n        return __awaiter(this, void 0, void 0, function* () {\n            // prepare\n            let cleanup;\n            try {\n                cleanup = yield this._invokeWorkspacePrepare(element);\n            }\n            catch (err) {\n                return this._onError(err, element);\n            }\n            // At this point, it is possible that the element has been made invalid in the meantime (due to the prepare await)\n            const verificationError = this._checkWorkspaceRedo(strResource, element, editStackSnapshot, /*now also check that there are no more invalidated resources*/ true);\n            if (verificationError) {\n                cleanup.dispose();\n                return verificationError.returnValue;\n            }\n            for (const editStack of editStackSnapshot.editStacks) {\n                editStack.moveForward(element);\n            }\n            return this._safeInvokeWithLocks(element, () => element.actual.redo(), editStackSnapshot, cleanup, () => this._continueRedoInGroup(element.groupId));\n        });\n    }\n    _resourceRedo(editStack, element) {\n        if (!element.isValid) {\n            // invalid element => immediately flush edit stack!\n            editStack.flushAllElements();\n            return;\n        }\n        if (editStack.locked) {\n            const message = nls.localize({ key: 'cannotResourceRedoDueToInProgressUndoRedo', comment: ['{0} is a label for an operation.'] }, \"Could not redo '{0}' because there is already an undo or redo operation running.\", element.label);\n            this._notificationService.warn(message);\n            return;\n        }\n        return this._invokeResourcePrepare(element, (cleanup) => {\n            editStack.moveForward(element);\n            return this._safeInvokeWithLocks(element, () => element.actual.redo(), new EditStackSnapshot([editStack]), cleanup, () => this._continueRedoInGroup(element.groupId));\n        });\n    }\n    _findClosestRedoElementInGroup(groupId) {\n        if (!groupId) {\n            return [null, null];\n        }\n        // find another element with the same groupId and with the lowest groupOrder ready to be redone\n        let matchedElement = null;\n        let matchedStrResource = null;\n        for (const [strResource, editStack] of this._editStacks) {\n            const candidate = editStack.getClosestFutureElement();\n            if (!candidate) {\n                continue;\n            }\n            if (candidate.groupId === groupId) {\n                if (!matchedElement || candidate.groupOrder < matchedElement.groupOrder) {\n                    matchedElement = candidate;\n                    matchedStrResource = strResource;\n                }\n            }\n        }\n        return [matchedElement, matchedStrResource];\n    }\n    _continueRedoInGroup(groupId) {\n        if (!groupId) {\n            return;\n        }\n        const [, matchedStrResource] = this._findClosestRedoElementInGroup(groupId);\n        if (matchedStrResource) {\n            return this._redo(matchedStrResource);\n        }\n    }\n    redo(resourceOrSource) {\n        if (resourceOrSource instanceof UndoRedoSource) {\n            const [, matchedStrResource] = this._findClosestRedoElementWithSource(resourceOrSource.id);\n            return matchedStrResource ? this._redo(matchedStrResource) : undefined;\n        }\n        if (typeof resourceOrSource === 'string') {\n            return this._redo(resourceOrSource);\n        }\n        return this._redo(this.getUriComparisonKey(resourceOrSource));\n    }\n    _redo(strResource) {\n        if (!this._editStacks.has(strResource)) {\n            return;\n        }\n        const editStack = this._editStacks.get(strResource);\n        const element = editStack.getClosestFutureElement();\n        if (!element) {\n            return;\n        }\n        if (element.groupId) {\n            // this element is a part of a group, we need to make sure redoing in a group is in order\n            const [matchedElement, matchedStrResource] = this._findClosestRedoElementInGroup(element.groupId);\n            if (element !== matchedElement && matchedStrResource) {\n                // there is an element in the same group that should be redone before this one\n                return this._redo(matchedStrResource);\n            }\n        }\n        try {\n            if (element.type === 1 /* UndoRedoElementType.Workspace */) {\n                return this._workspaceRedo(strResource, element);\n            }\n            else {\n                return this._resourceRedo(editStack, element);\n            }\n        }\n        finally {\n            if (DEBUG) {\n                this._print('redo');\n            }\n        }\n    }\n};\nUndoRedoService = __decorate([\n    __param(0, IDialogService),\n    __param(1, INotificationService)\n], UndoRedoService);\nexport { UndoRedoService };\nclass WorkspaceVerificationError {\n    constructor(returnValue) {\n        this.returnValue = returnValue;\n    }\n}\nregisterSingleton(IUndoRedoService, UndoRedoService, 1 /* InstantiationType.Delayed */);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { localize } from '../../../nls.js';\nimport { basename } from '../../../base/common/path.js';\nimport { TernarySearchTree } from '../../../base/common/ternarySearchTree.js';\nimport { URI } from '../../../base/common/uri.js';\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IWorkspaceContextService = createDecorator('contextService');\nexport function isSingleFolderWorkspaceIdentifier(obj) {\n    const singleFolderIdentifier = obj;\n    return typeof (singleFolderIdentifier === null || singleFolderIdentifier === void 0 ? void 0 : singleFolderIdentifier.id) === 'string' && URI.isUri(singleFolderIdentifier.uri);\n}\nexport function isEmptyWorkspaceIdentifier(obj) {\n    const emptyWorkspaceIdentifier = obj;\n    return typeof (emptyWorkspaceIdentifier === null || emptyWorkspaceIdentifier === void 0 ? void 0 : emptyWorkspaceIdentifier.id) === 'string'\n        && !isSingleFolderWorkspaceIdentifier(obj)\n        && !isWorkspaceIdentifier(obj);\n}\nexport const EXTENSION_DEVELOPMENT_EMPTY_WINDOW_WORKSPACE = { id: 'ext-dev' };\nexport const UNKNOWN_EMPTY_WINDOW_WORKSPACE = { id: 'empty-window' };\nexport function toWorkspaceIdentifier(arg0, isExtensionDevelopment) {\n    // Empty workspace\n    if (typeof arg0 === 'string' || typeof arg0 === 'undefined') {\n        // With a backupPath, the basename is the empty workspace identifier\n        if (typeof arg0 === 'string') {\n            return {\n                id: basename(arg0)\n            };\n        }\n        // Extension development empty windows have backups disabled\n        // so we return a constant workspace identifier for extension\n        // authors to allow to restore their workspace state even then.\n        if (isExtensionDevelopment) {\n            return EXTENSION_DEVELOPMENT_EMPTY_WINDOW_WORKSPACE;\n        }\n        return UNKNOWN_EMPTY_WINDOW_WORKSPACE;\n    }\n    // Multi root\n    const workspace = arg0;\n    if (workspace.configuration) {\n        return {\n            id: workspace.id,\n            configPath: workspace.configuration\n        };\n    }\n    // Single folder\n    if (workspace.folders.length === 1) {\n        return {\n            id: workspace.id,\n            uri: workspace.folders[0].uri\n        };\n    }\n    // Empty window\n    return {\n        id: workspace.id\n    };\n}\nexport function isWorkspaceIdentifier(obj) {\n    const workspaceIdentifier = obj;\n    return typeof (workspaceIdentifier === null || workspaceIdentifier === void 0 ? void 0 : workspaceIdentifier.id) === 'string' && URI.isUri(workspaceIdentifier.configPath);\n}\nexport class Workspace {\n    constructor(_id, folders, _transient, _configuration, _ignorePathCasing) {\n        this._id = _id;\n        this._transient = _transient;\n        this._configuration = _configuration;\n        this._ignorePathCasing = _ignorePathCasing;\n        this._foldersMap = TernarySearchTree.forUris(this._ignorePathCasing, () => true);\n        this.folders = folders;\n    }\n    get folders() {\n        return this._folders;\n    }\n    set folders(folders) {\n        this._folders = folders;\n        this.updateFoldersMap();\n    }\n    get id() {\n        return this._id;\n    }\n    get transient() {\n        return this._transient;\n    }\n    get configuration() {\n        return this._configuration;\n    }\n    set configuration(configuration) {\n        this._configuration = configuration;\n    }\n    getFolder(resource) {\n        if (!resource) {\n            return null;\n        }\n        return this._foldersMap.findSubstr(resource) || null;\n    }\n    updateFoldersMap() {\n        this._foldersMap = TernarySearchTree.forUris(this._ignorePathCasing, () => true);\n        for (const folder of this.folders) {\n            this._foldersMap.set(folder.uri, folder);\n        }\n    }\n    toJSON() {\n        return { id: this.id, folders: this.folders, transient: this.transient, configuration: this.configuration };\n    }\n}\nexport class WorkspaceFolder {\n    constructor(data, \n    /**\n     * Provides access to the original metadata for this workspace\n     * folder. This can be different from the metadata provided in\n     * this class:\n     * - raw paths can be relative\n     * - raw paths are not normalized\n     */\n    raw) {\n        this.raw = raw;\n        this.uri = data.uri;\n        this.index = data.index;\n        this.name = data.name;\n    }\n    toJSON() {\n        return { uri: this.uri, name: this.name, index: this.index };\n    }\n}\nexport const WORKSPACE_EXTENSION = 'code-workspace';\nexport const WORKSPACE_FILTER = [{ name: localize('codeWorkspace', \"Code Workspace\"), extensions: [WORKSPACE_EXTENSION] }];\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { createDecorator } from '../../instantiation/common/instantiation.js';\nexport const IWorkspaceTrustManagementService = createDecorator('workspaceTrustManagementService');\n"],"names":["WillSaveStateReason","TARGET_KEY","IStorageService","createDecorator","AbstractStorageService","_Disposable","_inherits","_super","_createSuper","_this","options","arguments","length","undefined","flushInterval","DEFAULT_FLUSH_INTERVAL","_classCallCheck","call","_onDidChangeValue","_register","PauseableEmitter","onDidChangeValue","event","_onDidChangeTarget","_onWillSaveState","Emitter","onWillSaveState","_workspaceKeyTargets","_profileKeyTargets","_applicationKeyTargets","_createClass","key","value","scope","this","fire","target","getKeyTargets","fallbackValue","_a","getStorage","get","getBoolean","getNumber","_this2","isUndefinedOrNull","remove","withPausedEmitters","updateKeyTarget","set","_this3","delete","fn","pause","resume","_b","keyTargets","JSON","stringify","loadKeyTargets","applicationKeyTargets","profileKeyTargets","workspaceKeyTargets","storage","keysRaw","parse","error","Object","create","Disposable","InMemoryStorageService","_AbstractStorageServi","_super2","_this4","applicationStorage","Storage","InMemoryStorageDatabase","hint","StorageHint","STORAGE_IN_MEMORY","profileStorage","workspaceStorage","onDidChangeStorage","emitDidChangeValue","ITelemetryService","defaultKeybindingLabelStyles","keybindingLabelBackground","asCssVariable","keybindingLabelForeground","keybindingLabelBorder","keybindingLabelBottomBorder","keybindingLabelShadow","widgetShadow","defaultButtonStyles","buttonForeground","buttonSeparator","buttonBackground","buttonHoverBackground","buttonSecondaryForeground","buttonSecondaryBackground","buttonSecondaryHoverBackground","buttonBorder","defaultProgressBarStyles","progressBarBackground","defaultToggleStyles","inputActiveOptionBorder","inputActiveOptionForeground","inputActiveOptionBackground","defaultInputBoxStyles","checkboxBackground","checkboxBorder","checkboxForeground","editorWidgetBackground","editorWidgetForeground","contrastBorder","problemsErrorIconForeground","problemsWarningIconForeground","problemsInfoIconForeground","textLinkForeground","inputBackground","inputForeground","inputBorder","inputValidationInfoBorder","inputValidationInfoBackground","inputValidationInfoForeground","inputValidationWarningBorder","inputValidationWarningBackground","inputValidationWarningForeground","inputValidationErrorBorder","inputValidationErrorBackground","inputValidationErrorForeground","defaultFindWidgetStyles","listFilterWidgetBackground","listFilterWidgetOutline","listFilterWidgetNoMatchesOutline","listFilterWidgetShadow","inputBoxStyles","toggleStyles","defaultCountBadgeStyles","badgeBackground","badgeForeground","badgeBorder","defaultListStyles","breadcrumbsBackground","breadcrumbsForeground","breadcrumbsFocusForeground","breadcrumbsActiveSelectionForeground","listBackground","listInactiveFocusForeground","listFocusBackground","listFocusForeground","listFocusOutline","listActiveSelectionBackground","listActiveSelectionForeground","listActiveSelectionIconForeground","listFocusAndSelectionOutline","listFocusAndSelectionBackground","listFocusAndSelectionForeground","listInactiveSelectionBackground","listInactiveSelectionIconForeground","listInactiveSelectionForeground","listInactiveFocusBackground","listInactiveFocusOutline","listHoverBackground","listHoverForeground","listDropBackground","listSelectionOutline","activeContrastBorder","listHoverOutline","treeIndentGuidesStroke","treeInactiveIndentGuidesStroke","tableColumnsBorder","tableOddRowsBackgroundColor","getListStyles","override","styles","result","assign","val","overrideStyles","defaultSelectBoxStyles","selectBackground","selectListBackground","selectForeground","decoratorRightForeground","pickerGroupForeground","selectBorder","focusBorder","quickInputListFocusBackground","quickInputListFocusIconForeground","quickInputListFocusForeground","asCssVariableWithDefault","Color","transparent","toString","selectListBorder","editorWidgetBorder","defaultMenuStyles","shadowColor","borderColor","menuBorder","foregroundColor","menuForeground","backgroundColor","menuBackground","selectionForegroundColor","menuSelectionForeground","selectionBackgroundColor","menuSelectionBackground","selectionBorderColor","menuSelectionBorder","separatorColor","menuSeparatorBackground","scrollbarShadow","scrollbarSliderBackground","scrollbarSliderHoverBackground","scrollbarSliderActiveBackground","getIconsStyleSheet","themeService","onDidChangeEmmiter","iconRegistry","getIconRegistry","onDidChange","onDidProductIconThemeChange","getCSS","_step","productIconTheme","getProductIconTheme","UnthemedProductIconTheme","usedFontIds","formatIconRule","contribution","definition","getIcon","fontContribution","font","id","concat","fontCharacter","asCSSPropertyValue","rules","_iterator","_createForOfIteratorHelper","getIcons","s","n","done","rule","push","err","e","f","fontWeight","weight","fontStyle","style","src","map","l","asCSSUrl","location","format","join","defaults","ThemeIcon","isThemeIcon","c","asCssVariableName","colorIdent","replace","color","defaultCssValue","Extensions","ColorContribution","ColorRegistry","_onDidChangeSchema","onDidChangeSchema","colorSchema","type","properties","colorReferenceSchema","enum","enumDescriptions","colorsById","description","deprecationMessage","colorContribution","needsTransparency","propertySchema","defaultSnippets","body","keys","theme","colorDesc","resolveColorValue","sort","a","b","cat1","indexOf","cat2","localeCompare","k","colorRegistry","registerColor","o","hcLight","hcDark","light","platform","add","ifArg","thenArg","elseArg","foreground","dark","nls","errorForeground","iconForeground","black","white","widgetBorder","lighten","darken","fromHex","editorErrorForeground","editorErrorBorder","editorWarningForeground","editorWarningBorder","editorInfoForeground","editorInfoBorder","editorHintForeground","editorBackground","editorForeground","editorWidgetResizeBorder","quickInputBackground","quickInputForeground","quickInputTitleBackground","RGBA","pickerGroupBorder","editorSelectionBackground","editorSelectionForeground","editorInactiveSelection","editorSelectionHighlight","lessProminent","editorFindMatch","editorFindMatchHighlight","editorFindRangeHighlight","editorFindMatchBorder","editorFindMatchHighlightBorder","editorFindRangeHighlightBorder","editorHoverBackground","editorHoverBorder","editorActiveLinkForeground","blue","cyan","editorInlayHintForeground","editorInlayHintBackground","editorInlayHintTypeForeground","editorInlayHintTypeBackground","editorInlayHintParameterForeground","editorInlayHintParameterBackground","defaultInsertColor","defaultRemoveColor","diffInserted","diffRemoved","diffOverviewRulerInserted","diffOverviewRulerRemoved","diffDiagonalFill","listHighlightForeground","listFocusHighlightForeground","op","if","then","else","_deprecatedQuickInputListFocusBackground","oneOf","toolbarHoverBackground","currentBaseColor","incomingBaseColor","commonBaseColor","contentTransparency","mergeCurrentHeaderBackground","mergeIncomingHeaderBackground","mergeCommonHeaderBackground","mergeBorder","overviewRulerFindMatchForeground","overviewRulerSelectionHighlightForeground","minimapFindMatch","minimapSelectionOccurrenceHighlight","minimapSelection","minimapError","minimapWarning","minimapBackground","minimapForegroundOpacity","colorValue","factor","_len","colorValues","Array","_key","values","backgroundColorValue","transparency","background","getColor","transform","_c","_d","makeOpaque","defines","from","isDarkerThan","getLighterColor","getDarkerColor","assertNever","executeTransform","workbenchColorsSchemaId","schemaRegistry","as","JSONExtensions","JSONContribution","registerSchema","getColorSchema","delayer","RunOnceScheduler","notifySchemaChanged","isScheduled","schedule","IconContribution","IconFontDefinition","getDefinition","registry","toJSONObject","iconFont","fromJSONObject","json","stringOrUndef","isString","isArray","every","URI","IconRegistry","_onDidChange","iconSchema","definitions","icons","fontId","localize","additionalProperties","iconReferenceSchema","pattern","iconNameExpression","iconsById","iconFontsById","existing","markdownDescription","enumIndex","iconContribution","$ref","sorter","i1","i2","classNames","i","reference","contributions","filter","_step2","_iterator2","registerIcon","codiconFontCharacters","getCodiconFontCharacters","icon","initialize","iconsSchemaId","getIconSchema","widgetClose","Codicon","close","arrowUp","arrowDown","modify","sync","loading","ColorScheme","isHighContrast","scheme","HIGH_CONTRAST_DARK","HIGH_CONTRAST_LIGHT","isDark","DARK","IThemeService","themeColorFromId","getThemeTypeSelector","ThemingContribution","themingRegistry","ThemingRegistry","themingParticipants","onThemingParticipantAddedEmitter","participant","toDisposable","idx","splice","registerThemingParticipant","onColorThemeChange","Themable","getColorTheme","onDidColorThemeChange","onThemeChange","updateStyles","IUndoRedoService","ResourceEditStackSnapshot","resource","elements","UndoRedoGroup","_ID","order","None","UndoRedoSource","__decorate","decorators","desc","d","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","apply","DEBUG","getResourceLabel","Schemas","file","fsPath","path","stackElementCounter","ResourceStackElement","actual","resourceLabel","strResource","groupId","groupOrder","sourceId","sourceOrder","label","confirmBeforeUndo","resourceLabels","strResources","isValid","constructor","name","ResourceReasonPair","reason","RemovedResources","Map","externalRemoval","noParallelUniverses","element","_slicedToArray","messages","comment","size","has","WorkspaceStackElement","removedResources","invalidatedResources","split","ResourceEditStack","_past","_future","locked","versionId","removeResource","_step3","_iterator3","setValid","_step4","_iterator4","_setElementValidFlag","_step5","_iterator5","_step6","_iterator6","futureElement","len","snapshot","snapshotLength","isOK","snapshotIndex","removePastAfter","removeFutureBefore","slice","_step7","past","future","_iterator7","_step8","_iterator8","toRemove","individualMap","j","pop","EditStackSnapshot","editStacks","_versionIds","missingEditStack","UndoRedoService","_dialogService","_notificationService","_editStacks","_uriComparisonKeyComputers","_step9","_iterator9","uriComparisonKeyComputer","getComparisonKey","console","log","_step10","str","_iterator10","group","source","getUriComparisonKey","_pushElement","nextOrder","_step11","seen","Set","_iterator11","resources","editStack","pushElement","hasFutureElements","closestPastElement","getClosestPastElement","ignoreResources","_step12","individualArr","_iterator12","_element","_step13","_iterator13","splitPastWorkspaceElement","_step14","_iterator14","_step15","_iterator15","splitFutureWorkspaceElement","dispose","setElementsValidFlag","createSnapshot","restoreSnapshot","hasPastElements","getElements","_step16","matchedElement","matchedStrResource","_iterator16","_step16$value","candidate","resourceOrSource","_this$_findClosestUnd","_findClosestUndoElementWithSource","onUnexpectedError","_step17","_iterator17","removeElements","editStackSnapshot","_step18","_iterator18","Error","_step19","_iterator19","_step20","_iterator20","invoke","cleanup","continuation","releaseLocks","_acquireLocks","_onError","_regeneratorRuntime","mark","_callee","wrap","_context","prev","prepareUndoRedo","abrupt","stop","callback","isDisposable","disposable","_step21","affectedEditStacks","_iterator21","message","canSplit","_splitPastWorkspaceElement","warn","WorkspaceVerificationError","_undo","_step22","_iterator22","checkInvalidatedResources","_tryToSplitAndUndo","createMessage","_step23","cannotUndoDueToResources","_iterator23","_step24","cannotLockDueToResources","_iterator24","undoConfirmed","_getAffectedEditStacks","verificationError","_checkWorkspaceUndo","returnValue","_confirmAndExecuteWorkspaceUndo","_step25","_iterator25","pastElement","secondPastElement","getSecondClosestPastElement","_callee2","UndoChoice","_yield$this$_dialogSe","verificationError1","verificationError2","_iterator26","_step26","_context2","_isPartOfUndoGroup","prompt","Severity","Info","buttons","run","All","This","cancelButton","Cancel","sent","_invokeWorkspacePrepare","t0","moveBackward","_safeInvokeWithLocks","undo","_continueUndoInGroup","_invokeResourcePrepare","flushAllElements","_step27","_iterator27","_step27$value","_this$_findClosestUnd3","_findClosestUndoElementInGroup","_this$_findClosestUnd5","_this$_findClosestUnd7","_this$_findClosestUnd8","_confirmAndContinueUndo","_workspaceUndo","_resourceUndo","_callee3","_context3","confirm","primaryButton","confirmed","_step28","_iterator28","_step28$value","getClosestFutureElement","_this$_findClosestRed","_findClosestRedoElementWithSource","_splitFutureWorkspaceElement","_redo","_step29","_iterator29","_tryToSplitAndRedo","_step30","cannotRedoDueToResources","_iterator30","_step31","_iterator31","_checkWorkspaceRedo","_executeWorkspaceRedo","_callee4","_iterator32","_step32","_context4","moveForward","redo","_continueRedoInGroup","_this5","_step33","_iterator33","_step33$value","_this$_findClosestRed3","_findClosestRedoElementInGroup","_this$_findClosestRed5","_this$_findClosestRed7","_this$_findClosestRed8","_workspaceRedo","_resourceRedo","IDialogService","INotificationService","registerSingleton","IWorkspaceContextService","isSingleFolderWorkspaceIdentifier","obj","singleFolderIdentifier","isUri","uri","isEmptyWorkspaceIdentifier","workspaceIdentifier","configPath","isWorkspaceIdentifier","EXTENSION_DEVELOPMENT_EMPTY_WINDOW_WORKSPACE","UNKNOWN_EMPTY_WINDOW_WORKSPACE","toWorkspaceIdentifier","arg0","isExtensionDevelopment","basename","workspace","configuration","folders","WorkspaceFolder","data","raw","index","WORKSPACE_EXTENSION","IWorkspaceTrustManagementService"],"sourceRoot":""}