{"version":3,"file":"static/js/monaco-editor-vendor.4743ffc1.c42c7de9.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/base/browser/ui/mouseCursor/mouseCursor.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/progressbar/progressbar.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/resizable/resizable.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/sash/sash.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollbarArrow.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollbarVisibilityController.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/abstractScrollbar.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollbarState.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/horizontalScrollbar.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/verticalScrollbar.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollableElement.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/splitview/splitview.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/table/tableWidget.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/toggle/toggle.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/abstractTree.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/asyncDataTree.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/dataTree.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/indexTreeModel.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/compressedObjectTreeModel.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/objectTree.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/objectTreeModel.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/tree.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/widget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './mouseCursor.css';\nexport const MOUSE_CURSOR_TEXT_CSS_CLASS_NAME = `monaco-mouse-cursor-text`;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { show } from '../../dom.js';\nimport { RunOnceScheduler } from '../../../common/async.js';\nimport { Color } from '../../../common/color.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport { mixin } from '../../../common/objects.js';\nimport './progressbar.css';\nconst CSS_DONE = 'done';\nconst CSS_ACTIVE = 'active';\nconst CSS_INFINITE = 'infinite';\nconst CSS_INFINITE_LONG_RUNNING = 'infinite-long-running';\nconst CSS_DISCRETE = 'discrete';\nconst defaultOpts = {\n    progressBarBackground: Color.fromHex('#0E70C0')\n};\n/**\n * A progress bar with support for infinite or discrete progress.\n */\nexport class ProgressBar extends Disposable {\n    constructor(container, options) {\n        super();\n        this.options = options || Object.create(null);\n        mixin(this.options, defaultOpts, false);\n        this.workedVal = 0;\n        this.progressBarBackground = this.options.progressBarBackground;\n        this.showDelayedScheduler = this._register(new RunOnceScheduler(() => show(this.element), 0));\n        this.longRunningScheduler = this._register(new RunOnceScheduler(() => this.infiniteLongRunning(), ProgressBar.LONG_RUNNING_INFINITE_THRESHOLD));\n        this.create(container);\n    }\n    create(container) {\n        this.element = document.createElement('div');\n        this.element.classList.add('monaco-progress-container');\n        this.element.setAttribute('role', 'progressbar');\n        this.element.setAttribute('aria-valuemin', '0');\n        container.appendChild(this.element);\n        this.bit = document.createElement('div');\n        this.bit.classList.add('progress-bit');\n        this.element.appendChild(this.bit);\n        this.applyStyles();\n    }\n    off() {\n        this.bit.style.width = 'inherit';\n        this.bit.style.opacity = '1';\n        this.element.classList.remove(CSS_ACTIVE, CSS_INFINITE, CSS_INFINITE_LONG_RUNNING, CSS_DISCRETE);\n        this.workedVal = 0;\n        this.totalWork = undefined;\n        this.longRunningScheduler.cancel();\n    }\n    /**\n     * Stops the progressbar from showing any progress instantly without fading out.\n     */\n    stop() {\n        return this.doDone(false);\n    }\n    doDone(delayed) {\n        this.element.classList.add(CSS_DONE);\n        // discrete: let it grow to 100% width and hide afterwards\n        if (!this.element.classList.contains(CSS_INFINITE)) {\n            this.bit.style.width = 'inherit';\n            if (delayed) {\n                setTimeout(() => this.off(), 200);\n            }\n            else {\n                this.off();\n            }\n        }\n        // infinite: let it fade out and hide afterwards\n        else {\n            this.bit.style.opacity = '0';\n            if (delayed) {\n                setTimeout(() => this.off(), 200);\n            }\n            else {\n                this.off();\n            }\n        }\n        return this;\n    }\n    /**\n     * Use this mode to indicate progress that has no total number of work units.\n     */\n    infinite() {\n        this.bit.style.width = '2%';\n        this.bit.style.opacity = '1';\n        this.element.classList.remove(CSS_DISCRETE, CSS_DONE, CSS_INFINITE_LONG_RUNNING);\n        this.element.classList.add(CSS_ACTIVE, CSS_INFINITE);\n        this.longRunningScheduler.schedule();\n        return this;\n    }\n    infiniteLongRunning() {\n        this.element.classList.add(CSS_INFINITE_LONG_RUNNING);\n    }\n    getContainer() {\n        return this.element;\n    }\n    style(styles) {\n        this.progressBarBackground = styles.progressBarBackground;\n        this.applyStyles();\n    }\n    applyStyles() {\n        if (this.bit) {\n            const background = this.progressBarBackground ? this.progressBarBackground.toString() : '';\n            this.bit.style.backgroundColor = background;\n        }\n    }\n}\n/**\n * After a certain time of showing the progress bar, switch\n * to long-running mode and throttle animations to reduce\n * the pressure on the GPU process.\n *\n * https://github.com/microsoft/vscode/issues/97900\n * https://github.com/microsoft/vscode/issues/138396\n */\nProgressBar.LONG_RUNNING_INFINITE_THRESHOLD = 10000;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Dimension } from '../../dom.js';\nimport { OrthogonalEdge, Sash } from '../sash/sash.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { DisposableStore } from '../../../common/lifecycle.js';\nexport class ResizableHTMLElement {\n    constructor() {\n        this._onDidWillResize = new Emitter();\n        this.onDidWillResize = this._onDidWillResize.event;\n        this._onDidResize = new Emitter();\n        this.onDidResize = this._onDidResize.event;\n        this._sashListener = new DisposableStore();\n        this._size = new Dimension(0, 0);\n        this._minSize = new Dimension(0, 0);\n        this._maxSize = new Dimension(Number.MAX_SAFE_INTEGER, Number.MAX_SAFE_INTEGER);\n        this.domNode = document.createElement('div');\n        this._eastSash = new Sash(this.domNode, { getVerticalSashLeft: () => this._size.width }, { orientation: 0 /* Orientation.VERTICAL */ });\n        this._westSash = new Sash(this.domNode, { getVerticalSashLeft: () => 0 }, { orientation: 0 /* Orientation.VERTICAL */ });\n        this._northSash = new Sash(this.domNode, { getHorizontalSashTop: () => 0 }, { orientation: 1 /* Orientation.HORIZONTAL */, orthogonalEdge: OrthogonalEdge.North });\n        this._southSash = new Sash(this.domNode, { getHorizontalSashTop: () => this._size.height }, { orientation: 1 /* Orientation.HORIZONTAL */, orthogonalEdge: OrthogonalEdge.South });\n        this._northSash.orthogonalStartSash = this._westSash;\n        this._northSash.orthogonalEndSash = this._eastSash;\n        this._southSash.orthogonalStartSash = this._westSash;\n        this._southSash.orthogonalEndSash = this._eastSash;\n        let currentSize;\n        let deltaY = 0;\n        let deltaX = 0;\n        this._sashListener.add(Event.any(this._northSash.onDidStart, this._eastSash.onDidStart, this._southSash.onDidStart, this._westSash.onDidStart)(() => {\n            if (currentSize === undefined) {\n                this._onDidWillResize.fire();\n                currentSize = this._size;\n                deltaY = 0;\n                deltaX = 0;\n            }\n        }));\n        this._sashListener.add(Event.any(this._northSash.onDidEnd, this._eastSash.onDidEnd, this._southSash.onDidEnd, this._westSash.onDidEnd)(() => {\n            if (currentSize !== undefined) {\n                currentSize = undefined;\n                deltaY = 0;\n                deltaX = 0;\n                this._onDidResize.fire({ dimension: this._size, done: true });\n            }\n        }));\n        this._sashListener.add(this._eastSash.onDidChange(e => {\n            if (currentSize) {\n                deltaX = e.currentX - e.startX;\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\n                this._onDidResize.fire({ dimension: this._size, done: false, east: true });\n            }\n        }));\n        this._sashListener.add(this._westSash.onDidChange(e => {\n            if (currentSize) {\n                deltaX = -(e.currentX - e.startX);\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\n                this._onDidResize.fire({ dimension: this._size, done: false, west: true });\n            }\n        }));\n        this._sashListener.add(this._northSash.onDidChange(e => {\n            if (currentSize) {\n                deltaY = -(e.currentY - e.startY);\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\n                this._onDidResize.fire({ dimension: this._size, done: false, north: true });\n            }\n        }));\n        this._sashListener.add(this._southSash.onDidChange(e => {\n            if (currentSize) {\n                deltaY = e.currentY - e.startY;\n                this.layout(currentSize.height + deltaY, currentSize.width + deltaX);\n                this._onDidResize.fire({ dimension: this._size, done: false, south: true });\n            }\n        }));\n        this._sashListener.add(Event.any(this._eastSash.onDidReset, this._westSash.onDidReset)(e => {\n            if (this._preferredSize) {\n                this.layout(this._size.height, this._preferredSize.width);\n                this._onDidResize.fire({ dimension: this._size, done: true });\n            }\n        }));\n        this._sashListener.add(Event.any(this._northSash.onDidReset, this._southSash.onDidReset)(e => {\n            if (this._preferredSize) {\n                this.layout(this._preferredSize.height, this._size.width);\n                this._onDidResize.fire({ dimension: this._size, done: true });\n            }\n        }));\n    }\n    dispose() {\n        this._northSash.dispose();\n        this._southSash.dispose();\n        this._eastSash.dispose();\n        this._westSash.dispose();\n        this._sashListener.dispose();\n        this._onDidResize.dispose();\n        this._onDidWillResize.dispose();\n        this.domNode.remove();\n    }\n    enableSashes(north, east, south, west) {\n        this._northSash.state = north ? 3 /* SashState.Enabled */ : 0 /* SashState.Disabled */;\n        this._eastSash.state = east ? 3 /* SashState.Enabled */ : 0 /* SashState.Disabled */;\n        this._southSash.state = south ? 3 /* SashState.Enabled */ : 0 /* SashState.Disabled */;\n        this._westSash.state = west ? 3 /* SashState.Enabled */ : 0 /* SashState.Disabled */;\n    }\n    layout(height = this.size.height, width = this.size.width) {\n        const { height: minHeight, width: minWidth } = this._minSize;\n        const { height: maxHeight, width: maxWidth } = this._maxSize;\n        height = Math.max(minHeight, Math.min(maxHeight, height));\n        width = Math.max(minWidth, Math.min(maxWidth, width));\n        const newSize = new Dimension(width, height);\n        if (!Dimension.equals(newSize, this._size)) {\n            this.domNode.style.height = height + 'px';\n            this.domNode.style.width = width + 'px';\n            this._size = newSize;\n            this._northSash.layout();\n            this._eastSash.layout();\n            this._southSash.layout();\n            this._westSash.layout();\n        }\n    }\n    clearSashHoverState() {\n        this._eastSash.clearSashHoverState();\n        this._westSash.clearSashHoverState();\n        this._northSash.clearSashHoverState();\n        this._southSash.clearSashHoverState();\n    }\n    get size() {\n        return this._size;\n    }\n    set maxSize(value) {\n        this._maxSize = value;\n    }\n    get maxSize() {\n        return this._maxSize;\n    }\n    set minSize(value) {\n        this._minSize = value;\n    }\n    get minSize() {\n        return this._minSize;\n    }\n    set preferredSize(value) {\n        this._preferredSize = value;\n    }\n    get preferredSize() {\n        return this._preferredSize;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { $, append, createStyleSheet, EventHelper, getElementsByTagName } from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { EventType, Gesture } from '../../touch.js';\nimport { Delayer } from '../../../common/async.js';\nimport { memoize } from '../../../common/decorators.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../common/lifecycle.js';\nimport { isMacintosh } from '../../../common/platform.js';\nimport './sash.css';\n/**\n * Allow the sashes to be visible at runtime.\n * @remark Use for development purposes only.\n */\nconst DEBUG = false;\nexport var OrthogonalEdge;\n(function (OrthogonalEdge) {\n    OrthogonalEdge[\"North\"] = \"north\";\n    OrthogonalEdge[\"South\"] = \"south\";\n    OrthogonalEdge[\"East\"] = \"east\";\n    OrthogonalEdge[\"West\"] = \"west\";\n})(OrthogonalEdge || (OrthogonalEdge = {}));\nlet globalSize = 4;\nconst onDidChangeGlobalSize = new Emitter();\nlet globalHoverDelay = 300;\nconst onDidChangeHoverDelay = new Emitter();\nclass MouseEventFactory {\n    constructor() {\n        this.disposables = new DisposableStore();\n    }\n    get onPointerMove() {\n        return this.disposables.add(new DomEmitter(window, 'mousemove')).event;\n    }\n    get onPointerUp() {\n        return this.disposables.add(new DomEmitter(window, 'mouseup')).event;\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\n__decorate([\n    memoize\n], MouseEventFactory.prototype, \"onPointerMove\", null);\n__decorate([\n    memoize\n], MouseEventFactory.prototype, \"onPointerUp\", null);\nclass GestureEventFactory {\n    constructor(el) {\n        this.el = el;\n        this.disposables = new DisposableStore();\n    }\n    get onPointerMove() {\n        return this.disposables.add(new DomEmitter(this.el, EventType.Change)).event;\n    }\n    get onPointerUp() {\n        return this.disposables.add(new DomEmitter(this.el, EventType.End)).event;\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\n__decorate([\n    memoize\n], GestureEventFactory.prototype, \"onPointerMove\", null);\n__decorate([\n    memoize\n], GestureEventFactory.prototype, \"onPointerUp\", null);\nclass OrthogonalPointerEventFactory {\n    constructor(factory) {\n        this.factory = factory;\n    }\n    get onPointerMove() {\n        return this.factory.onPointerMove;\n    }\n    get onPointerUp() {\n        return this.factory.onPointerUp;\n    }\n    dispose() {\n        // noop\n    }\n}\n__decorate([\n    memoize\n], OrthogonalPointerEventFactory.prototype, \"onPointerMove\", null);\n__decorate([\n    memoize\n], OrthogonalPointerEventFactory.prototype, \"onPointerUp\", null);\nconst PointerEventsDisabledCssClass = 'pointer-events-disabled';\n/**\n * The {@link Sash} is the UI component which allows the user to resize other\n * components. It's usually an invisible horizontal or vertical line which, when\n * hovered, becomes highlighted and can be dragged along the perpendicular dimension\n * to its direction.\n *\n * Features:\n * - Touch event handling\n * - Corner sash support\n * - Hover with different mouse cursor support\n * - Configurable hover size\n * - Linked sash support, for 2x2 corner sashes\n */\nexport class Sash extends Disposable {\n    constructor(container, layoutProvider, options) {\n        super();\n        this.hoverDelay = globalHoverDelay;\n        this.hoverDelayer = this._register(new Delayer(this.hoverDelay));\n        this._state = 3 /* SashState.Enabled */;\n        this.onDidEnablementChange = this._register(new Emitter());\n        this._onDidStart = this._register(new Emitter());\n        this._onDidChange = this._register(new Emitter());\n        this._onDidReset = this._register(new Emitter());\n        this._onDidEnd = this._register(new Emitter());\n        this.orthogonalStartSashDisposables = this._register(new DisposableStore());\n        this.orthogonalStartDragHandleDisposables = this._register(new DisposableStore());\n        this.orthogonalEndSashDisposables = this._register(new DisposableStore());\n        this.orthogonalEndDragHandleDisposables = this._register(new DisposableStore());\n        /**\n         * An event which fires whenever the user starts dragging this sash.\n         */\n        this.onDidStart = this._onDidStart.event;\n        /**\n         * An event which fires whenever the user moves the mouse while\n         * dragging this sash.\n         */\n        this.onDidChange = this._onDidChange.event;\n        /**\n         * An event which fires whenever the user double clicks this sash.\n         */\n        this.onDidReset = this._onDidReset.event;\n        /**\n         * An event which fires whenever the user stops dragging this sash.\n         */\n        this.onDidEnd = this._onDidEnd.event;\n        /**\n         * A linked sash will be forwarded the same user interactions and events\n         * so it moves exactly the same way as this sash.\n         *\n         * Useful in 2x2 grids. Not meant for widespread usage.\n         */\n        this.linkedSash = undefined;\n        this.el = append(container, $('.monaco-sash'));\n        if (options.orthogonalEdge) {\n            this.el.classList.add(`orthogonal-edge-${options.orthogonalEdge}`);\n        }\n        if (isMacintosh) {\n            this.el.classList.add('mac');\n        }\n        const onMouseDown = this._register(new DomEmitter(this.el, 'mousedown')).event;\n        this._register(onMouseDown(e => this.onPointerStart(e, new MouseEventFactory()), this));\n        const onMouseDoubleClick = this._register(new DomEmitter(this.el, 'dblclick')).event;\n        this._register(onMouseDoubleClick(this.onPointerDoublePress, this));\n        const onMouseEnter = this._register(new DomEmitter(this.el, 'mouseenter')).event;\n        this._register(onMouseEnter(() => Sash.onMouseEnter(this)));\n        const onMouseLeave = this._register(new DomEmitter(this.el, 'mouseleave')).event;\n        this._register(onMouseLeave(() => Sash.onMouseLeave(this)));\n        this._register(Gesture.addTarget(this.el));\n        const onTouchStart = Event.map(this._register(new DomEmitter(this.el, EventType.Start)).event, e => { var _a; return (Object.assign(Object.assign({}, e), { target: (_a = e.initialTarget) !== null && _a !== void 0 ? _a : null })); });\n        this._register(onTouchStart(e => this.onPointerStart(e, new GestureEventFactory(this.el)), this));\n        const onTap = this._register(new DomEmitter(this.el, EventType.Tap)).event;\n        const onDoubleTap = Event.map(Event.filter(Event.debounce(onTap, (res, event) => { var _a; return ({ event, count: ((_a = res === null || res === void 0 ? void 0 : res.count) !== null && _a !== void 0 ? _a : 0) + 1 }); }, 250), ({ count }) => count === 2), ({ event }) => { var _a; return (Object.assign(Object.assign({}, event), { target: (_a = event.initialTarget) !== null && _a !== void 0 ? _a : null })); });\n        this._register(onDoubleTap(this.onPointerDoublePress, this));\n        if (typeof options.size === 'number') {\n            this.size = options.size;\n            if (options.orientation === 0 /* Orientation.VERTICAL */) {\n                this.el.style.width = `${this.size}px`;\n            }\n            else {\n                this.el.style.height = `${this.size}px`;\n            }\n        }\n        else {\n            this.size = globalSize;\n            this._register(onDidChangeGlobalSize.event(size => {\n                this.size = size;\n                this.layout();\n            }));\n        }\n        this._register(onDidChangeHoverDelay.event(delay => this.hoverDelay = delay));\n        this.layoutProvider = layoutProvider;\n        this.orthogonalStartSash = options.orthogonalStartSash;\n        this.orthogonalEndSash = options.orthogonalEndSash;\n        this.orientation = options.orientation || 0 /* Orientation.VERTICAL */;\n        if (this.orientation === 1 /* Orientation.HORIZONTAL */) {\n            this.el.classList.add('horizontal');\n            this.el.classList.remove('vertical');\n        }\n        else {\n            this.el.classList.remove('horizontal');\n            this.el.classList.add('vertical');\n        }\n        this.el.classList.toggle('debug', DEBUG);\n        this.layout();\n    }\n    get state() { return this._state; }\n    get orthogonalStartSash() { return this._orthogonalStartSash; }\n    get orthogonalEndSash() { return this._orthogonalEndSash; }\n    /**\n     * The state of a sash defines whether it can be interacted with by the user\n     * as well as what mouse cursor to use, when hovered.\n     */\n    set state(state) {\n        if (this._state === state) {\n            return;\n        }\n        this.el.classList.toggle('disabled', state === 0 /* SashState.Disabled */);\n        this.el.classList.toggle('minimum', state === 1 /* SashState.AtMinimum */);\n        this.el.classList.toggle('maximum', state === 2 /* SashState.AtMaximum */);\n        this._state = state;\n        this.onDidEnablementChange.fire(state);\n    }\n    /**\n     * A reference to another sash, perpendicular to this one, which\n     * aligns at the start of this one. A corner sash will be created\n     * automatically at that location.\n     *\n     * The start of a horizontal sash is its left-most position.\n     * The start of a vertical sash is its top-most position.\n     */\n    set orthogonalStartSash(sash) {\n        this.orthogonalStartDragHandleDisposables.clear();\n        this.orthogonalStartSashDisposables.clear();\n        if (sash) {\n            const onChange = (state) => {\n                this.orthogonalStartDragHandleDisposables.clear();\n                if (state !== 0 /* SashState.Disabled */) {\n                    this._orthogonalStartDragHandle = append(this.el, $('.orthogonal-drag-handle.start'));\n                    this.orthogonalStartDragHandleDisposables.add(toDisposable(() => this._orthogonalStartDragHandle.remove()));\n                    this.orthogonalStartDragHandleDisposables.add(new DomEmitter(this._orthogonalStartDragHandle, 'mouseenter')).event(() => Sash.onMouseEnter(sash), undefined, this.orthogonalStartDragHandleDisposables);\n                    this.orthogonalStartDragHandleDisposables.add(new DomEmitter(this._orthogonalStartDragHandle, 'mouseleave')).event(() => Sash.onMouseLeave(sash), undefined, this.orthogonalStartDragHandleDisposables);\n                }\n            };\n            this.orthogonalStartSashDisposables.add(sash.onDidEnablementChange.event(onChange, this));\n            onChange(sash.state);\n        }\n        this._orthogonalStartSash = sash;\n    }\n    /**\n     * A reference to another sash, perpendicular to this one, which\n     * aligns at the end of this one. A corner sash will be created\n     * automatically at that location.\n     *\n     * The end of a horizontal sash is its right-most position.\n     * The end of a vertical sash is its bottom-most position.\n     */\n    set orthogonalEndSash(sash) {\n        this.orthogonalEndDragHandleDisposables.clear();\n        this.orthogonalEndSashDisposables.clear();\n        if (sash) {\n            const onChange = (state) => {\n                this.orthogonalEndDragHandleDisposables.clear();\n                if (state !== 0 /* SashState.Disabled */) {\n                    this._orthogonalEndDragHandle = append(this.el, $('.orthogonal-drag-handle.end'));\n                    this.orthogonalEndDragHandleDisposables.add(toDisposable(() => this._orthogonalEndDragHandle.remove()));\n                    this.orthogonalEndDragHandleDisposables.add(new DomEmitter(this._orthogonalEndDragHandle, 'mouseenter')).event(() => Sash.onMouseEnter(sash), undefined, this.orthogonalEndDragHandleDisposables);\n                    this.orthogonalEndDragHandleDisposables.add(new DomEmitter(this._orthogonalEndDragHandle, 'mouseleave')).event(() => Sash.onMouseLeave(sash), undefined, this.orthogonalEndDragHandleDisposables);\n                }\n            };\n            this.orthogonalEndSashDisposables.add(sash.onDidEnablementChange.event(onChange, this));\n            onChange(sash.state);\n        }\n        this._orthogonalEndSash = sash;\n    }\n    onPointerStart(event, pointerEventFactory) {\n        EventHelper.stop(event);\n        let isMultisashResize = false;\n        if (!event.__orthogonalSashEvent) {\n            const orthogonalSash = this.getOrthogonalSash(event);\n            if (orthogonalSash) {\n                isMultisashResize = true;\n                event.__orthogonalSashEvent = true;\n                orthogonalSash.onPointerStart(event, new OrthogonalPointerEventFactory(pointerEventFactory));\n            }\n        }\n        if (this.linkedSash && !event.__linkedSashEvent) {\n            event.__linkedSashEvent = true;\n            this.linkedSash.onPointerStart(event, new OrthogonalPointerEventFactory(pointerEventFactory));\n        }\n        if (!this.state) {\n            return;\n        }\n        const iframes = getElementsByTagName('iframe');\n        for (const iframe of iframes) {\n            iframe.classList.add(PointerEventsDisabledCssClass); // disable mouse events on iframes as long as we drag the sash\n        }\n        const startX = event.pageX;\n        const startY = event.pageY;\n        const altKey = event.altKey;\n        const startEvent = { startX, currentX: startX, startY, currentY: startY, altKey };\n        this.el.classList.add('active');\n        this._onDidStart.fire(startEvent);\n        // fix https://github.com/microsoft/vscode/issues/21675\n        const style = createStyleSheet(this.el);\n        const updateStyle = () => {\n            let cursor = '';\n            if (isMultisashResize) {\n                cursor = 'all-scroll';\n            }\n            else if (this.orientation === 1 /* Orientation.HORIZONTAL */) {\n                if (this.state === 1 /* SashState.AtMinimum */) {\n                    cursor = 's-resize';\n                }\n                else if (this.state === 2 /* SashState.AtMaximum */) {\n                    cursor = 'n-resize';\n                }\n                else {\n                    cursor = isMacintosh ? 'row-resize' : 'ns-resize';\n                }\n            }\n            else {\n                if (this.state === 1 /* SashState.AtMinimum */) {\n                    cursor = 'e-resize';\n                }\n                else if (this.state === 2 /* SashState.AtMaximum */) {\n                    cursor = 'w-resize';\n                }\n                else {\n                    cursor = isMacintosh ? 'col-resize' : 'ew-resize';\n                }\n            }\n            style.textContent = `* { cursor: ${cursor} !important; }`;\n        };\n        const disposables = new DisposableStore();\n        updateStyle();\n        if (!isMultisashResize) {\n            this.onDidEnablementChange.event(updateStyle, null, disposables);\n        }\n        const onPointerMove = (e) => {\n            EventHelper.stop(e, false);\n            const event = { startX, currentX: e.pageX, startY, currentY: e.pageY, altKey };\n            this._onDidChange.fire(event);\n        };\n        const onPointerUp = (e) => {\n            EventHelper.stop(e, false);\n            this.el.removeChild(style);\n            this.el.classList.remove('active');\n            this._onDidEnd.fire();\n            disposables.dispose();\n            for (const iframe of iframes) {\n                iframe.classList.remove(PointerEventsDisabledCssClass);\n            }\n        };\n        pointerEventFactory.onPointerMove(onPointerMove, null, disposables);\n        pointerEventFactory.onPointerUp(onPointerUp, null, disposables);\n        disposables.add(pointerEventFactory);\n    }\n    onPointerDoublePress(e) {\n        const orthogonalSash = this.getOrthogonalSash(e);\n        if (orthogonalSash) {\n            orthogonalSash._onDidReset.fire();\n        }\n        if (this.linkedSash) {\n            this.linkedSash._onDidReset.fire();\n        }\n        this._onDidReset.fire();\n    }\n    static onMouseEnter(sash, fromLinkedSash = false) {\n        if (sash.el.classList.contains('active')) {\n            sash.hoverDelayer.cancel();\n            sash.el.classList.add('hover');\n        }\n        else {\n            sash.hoverDelayer.trigger(() => sash.el.classList.add('hover'), sash.hoverDelay).then(undefined, () => { });\n        }\n        if (!fromLinkedSash && sash.linkedSash) {\n            Sash.onMouseEnter(sash.linkedSash, true);\n        }\n    }\n    static onMouseLeave(sash, fromLinkedSash = false) {\n        sash.hoverDelayer.cancel();\n        sash.el.classList.remove('hover');\n        if (!fromLinkedSash && sash.linkedSash) {\n            Sash.onMouseLeave(sash.linkedSash, true);\n        }\n    }\n    /**\n     * Forcefully stop any user interactions with this sash.\n     * Useful when hiding a parent component, while the user is still\n     * interacting with the sash.\n     */\n    clearSashHoverState() {\n        Sash.onMouseLeave(this);\n    }\n    /**\n     * Layout the sash. The sash will size and position itself\n     * based on its provided {@link ISashLayoutProvider layout provider}.\n     */\n    layout() {\n        if (this.orientation === 0 /* Orientation.VERTICAL */) {\n            const verticalProvider = this.layoutProvider;\n            this.el.style.left = verticalProvider.getVerticalSashLeft(this) - (this.size / 2) + 'px';\n            if (verticalProvider.getVerticalSashTop) {\n                this.el.style.top = verticalProvider.getVerticalSashTop(this) + 'px';\n            }\n            if (verticalProvider.getVerticalSashHeight) {\n                this.el.style.height = verticalProvider.getVerticalSashHeight(this) + 'px';\n            }\n        }\n        else {\n            const horizontalProvider = this.layoutProvider;\n            this.el.style.top = horizontalProvider.getHorizontalSashTop(this) - (this.size / 2) + 'px';\n            if (horizontalProvider.getHorizontalSashLeft) {\n                this.el.style.left = horizontalProvider.getHorizontalSashLeft(this) + 'px';\n            }\n            if (horizontalProvider.getHorizontalSashWidth) {\n                this.el.style.width = horizontalProvider.getHorizontalSashWidth(this) + 'px';\n            }\n        }\n    }\n    getOrthogonalSash(e) {\n        if (!e.target || !(e.target instanceof HTMLElement)) {\n            return undefined;\n        }\n        if (e.target.classList.contains('orthogonal-drag-handle')) {\n            return e.target.classList.contains('start') ? this.orthogonalStartSash : this.orthogonalEndSash;\n        }\n        return undefined;\n    }\n    dispose() {\n        super.dispose();\n        this.el.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { GlobalPointerMoveMonitor } from '../../globalPointerMoveMonitor.js';\nimport { Widget } from '../widget.js';\nimport { IntervalTimer, TimeoutTimer } from '../../../common/async.js';\nimport * as dom from '../../dom.js';\n/**\n * The arrow image size.\n */\nexport const ARROW_IMG_SIZE = 11;\nexport class ScrollbarArrow extends Widget {\n    constructor(opts) {\n        super();\n        this._onActivate = opts.onActivate;\n        this.bgDomNode = document.createElement('div');\n        this.bgDomNode.className = 'arrow-background';\n        this.bgDomNode.style.position = 'absolute';\n        this.bgDomNode.style.width = opts.bgWidth + 'px';\n        this.bgDomNode.style.height = opts.bgHeight + 'px';\n        if (typeof opts.top !== 'undefined') {\n            this.bgDomNode.style.top = '0px';\n        }\n        if (typeof opts.left !== 'undefined') {\n            this.bgDomNode.style.left = '0px';\n        }\n        if (typeof opts.bottom !== 'undefined') {\n            this.bgDomNode.style.bottom = '0px';\n        }\n        if (typeof opts.right !== 'undefined') {\n            this.bgDomNode.style.right = '0px';\n        }\n        this.domNode = document.createElement('div');\n        this.domNode.className = opts.className;\n        this.domNode.classList.add(...opts.icon.classNamesArray);\n        this.domNode.style.position = 'absolute';\n        this.domNode.style.width = ARROW_IMG_SIZE + 'px';\n        this.domNode.style.height = ARROW_IMG_SIZE + 'px';\n        if (typeof opts.top !== 'undefined') {\n            this.domNode.style.top = opts.top + 'px';\n        }\n        if (typeof opts.left !== 'undefined') {\n            this.domNode.style.left = opts.left + 'px';\n        }\n        if (typeof opts.bottom !== 'undefined') {\n            this.domNode.style.bottom = opts.bottom + 'px';\n        }\n        if (typeof opts.right !== 'undefined') {\n            this.domNode.style.right = opts.right + 'px';\n        }\n        this._pointerMoveMonitor = this._register(new GlobalPointerMoveMonitor());\n        this._register(dom.addStandardDisposableListener(this.bgDomNode, dom.EventType.POINTER_DOWN, (e) => this._arrowPointerDown(e)));\n        this._register(dom.addStandardDisposableListener(this.domNode, dom.EventType.POINTER_DOWN, (e) => this._arrowPointerDown(e)));\n        this._pointerdownRepeatTimer = this._register(new IntervalTimer());\n        this._pointerdownScheduleRepeatTimer = this._register(new TimeoutTimer());\n    }\n    _arrowPointerDown(e) {\n        if (!e.target || !(e.target instanceof Element)) {\n            return;\n        }\n        const scheduleRepeater = () => {\n            this._pointerdownRepeatTimer.cancelAndSet(() => this._onActivate(), 1000 / 24);\n        };\n        this._onActivate();\n        this._pointerdownRepeatTimer.cancel();\n        this._pointerdownScheduleRepeatTimer.cancelAndSet(scheduleRepeater, 200);\n        this._pointerMoveMonitor.startMonitoring(e.target, e.pointerId, e.buttons, (pointerMoveData) => { }, () => {\n            this._pointerdownRepeatTimer.cancel();\n            this._pointerdownScheduleRepeatTimer.cancel();\n        });\n        e.preventDefault();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { TimeoutTimer } from '../../../common/async.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nexport class ScrollbarVisibilityController extends Disposable {\n    constructor(visibility, visibleClassName, invisibleClassName) {\n        super();\n        this._visibility = visibility;\n        this._visibleClassName = visibleClassName;\n        this._invisibleClassName = invisibleClassName;\n        this._domNode = null;\n        this._isVisible = false;\n        this._isNeeded = false;\n        this._rawShouldBeVisible = false;\n        this._shouldBeVisible = false;\n        this._revealTimer = this._register(new TimeoutTimer());\n    }\n    setVisibility(visibility) {\n        if (this._visibility !== visibility) {\n            this._visibility = visibility;\n            this._updateShouldBeVisible();\n        }\n    }\n    // ----------------- Hide / Reveal\n    setShouldBeVisible(rawShouldBeVisible) {\n        this._rawShouldBeVisible = rawShouldBeVisible;\n        this._updateShouldBeVisible();\n    }\n    _applyVisibilitySetting() {\n        if (this._visibility === 2 /* ScrollbarVisibility.Hidden */) {\n            return false;\n        }\n        if (this._visibility === 3 /* ScrollbarVisibility.Visible */) {\n            return true;\n        }\n        return this._rawShouldBeVisible;\n    }\n    _updateShouldBeVisible() {\n        const shouldBeVisible = this._applyVisibilitySetting();\n        if (this._shouldBeVisible !== shouldBeVisible) {\n            this._shouldBeVisible = shouldBeVisible;\n            this.ensureVisibility();\n        }\n    }\n    setIsNeeded(isNeeded) {\n        if (this._isNeeded !== isNeeded) {\n            this._isNeeded = isNeeded;\n            this.ensureVisibility();\n        }\n    }\n    setDomNode(domNode) {\n        this._domNode = domNode;\n        this._domNode.setClassName(this._invisibleClassName);\n        // Now that the flags & the dom node are in a consistent state, ensure the Hidden/Visible configuration\n        this.setShouldBeVisible(false);\n    }\n    ensureVisibility() {\n        if (!this._isNeeded) {\n            // Nothing to be rendered\n            this._hide(false);\n            return;\n        }\n        if (this._shouldBeVisible) {\n            this._reveal();\n        }\n        else {\n            this._hide(true);\n        }\n    }\n    _reveal() {\n        if (this._isVisible) {\n            return;\n        }\n        this._isVisible = true;\n        // The CSS animation doesn't play otherwise\n        this._revealTimer.setIfNotSet(() => {\n            var _a;\n            (_a = this._domNode) === null || _a === void 0 ? void 0 : _a.setClassName(this._visibleClassName);\n        }, 0);\n    }\n    _hide(withFadeAway) {\n        var _a;\n        this._revealTimer.cancel();\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        (_a = this._domNode) === null || _a === void 0 ? void 0 : _a.setClassName(this._invisibleClassName + (withFadeAway ? ' fade' : ''));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { createFastDomNode } from '../../fastDomNode.js';\nimport { GlobalPointerMoveMonitor } from '../../globalPointerMoveMonitor.js';\nimport { ScrollbarArrow } from './scrollbarArrow.js';\nimport { ScrollbarVisibilityController } from './scrollbarVisibilityController.js';\nimport { Widget } from '../widget.js';\nimport * as platform from '../../../common/platform.js';\n/**\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\n */\nconst POINTER_DRAG_RESET_DISTANCE = 140;\nexport class AbstractScrollbar extends Widget {\n    constructor(opts) {\n        super();\n        this._lazyRender = opts.lazyRender;\n        this._host = opts.host;\n        this._scrollable = opts.scrollable;\n        this._scrollByPage = opts.scrollByPage;\n        this._scrollbarState = opts.scrollbarState;\n        this._visibilityController = this._register(new ScrollbarVisibilityController(opts.visibility, 'visible scrollbar ' + opts.extraScrollbarClassName, 'invisible scrollbar ' + opts.extraScrollbarClassName));\n        this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n        this._pointerMoveMonitor = this._register(new GlobalPointerMoveMonitor());\n        this._shouldRender = true;\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this._visibilityController.setDomNode(this.domNode);\n        this.domNode.setPosition('absolute');\n        this._register(dom.addDisposableListener(this.domNode.domNode, dom.EventType.POINTER_DOWN, (e) => this._domNodePointerDown(e)));\n    }\n    // ----------------- creation\n    /**\n     * Creates the dom node for an arrow & adds it to the container\n     */\n    _createArrow(opts) {\n        const arrow = this._register(new ScrollbarArrow(opts));\n        this.domNode.domNode.appendChild(arrow.bgDomNode);\n        this.domNode.domNode.appendChild(arrow.domNode);\n    }\n    /**\n     * Creates the slider dom node, adds it to the container & hooks up the events\n     */\n    _createSlider(top, left, width, height) {\n        this.slider = createFastDomNode(document.createElement('div'));\n        this.slider.setClassName('slider');\n        this.slider.setPosition('absolute');\n        this.slider.setTop(top);\n        this.slider.setLeft(left);\n        if (typeof width === 'number') {\n            this.slider.setWidth(width);\n        }\n        if (typeof height === 'number') {\n            this.slider.setHeight(height);\n        }\n        this.slider.setLayerHinting(true);\n        this.slider.setContain('strict');\n        this.domNode.domNode.appendChild(this.slider.domNode);\n        this._register(dom.addDisposableListener(this.slider.domNode, dom.EventType.POINTER_DOWN, (e) => {\n            if (e.button === 0) {\n                e.preventDefault();\n                this._sliderPointerDown(e);\n            }\n        }));\n        this.onclick(this.slider.domNode, e => {\n            if (e.leftButton) {\n                e.stopPropagation();\n            }\n        });\n    }\n    // ----------------- Update state\n    _onElementSize(visibleSize) {\n        if (this._scrollbarState.setVisibleSize(visibleSize)) {\n            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n            this._shouldRender = true;\n            if (!this._lazyRender) {\n                this.render();\n            }\n        }\n        return this._shouldRender;\n    }\n    _onElementScrollSize(elementScrollSize) {\n        if (this._scrollbarState.setScrollSize(elementScrollSize)) {\n            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n            this._shouldRender = true;\n            if (!this._lazyRender) {\n                this.render();\n            }\n        }\n        return this._shouldRender;\n    }\n    _onElementScrollPosition(elementScrollPosition) {\n        if (this._scrollbarState.setScrollPosition(elementScrollPosition)) {\n            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n            this._shouldRender = true;\n            if (!this._lazyRender) {\n                this.render();\n            }\n        }\n        return this._shouldRender;\n    }\n    // ----------------- rendering\n    beginReveal() {\n        this._visibilityController.setShouldBeVisible(true);\n    }\n    beginHide() {\n        this._visibilityController.setShouldBeVisible(false);\n    }\n    render() {\n        if (!this._shouldRender) {\n            return;\n        }\n        this._shouldRender = false;\n        this._renderDomNode(this._scrollbarState.getRectangleLargeSize(), this._scrollbarState.getRectangleSmallSize());\n        this._updateSlider(this._scrollbarState.getSliderSize(), this._scrollbarState.getArrowSize() + this._scrollbarState.getSliderPosition());\n    }\n    // ----------------- DOM events\n    _domNodePointerDown(e) {\n        if (e.target !== this.domNode.domNode) {\n            return;\n        }\n        this._onPointerDown(e);\n    }\n    delegatePointerDown(e) {\n        const domTop = this.domNode.domNode.getClientRects()[0].top;\n        const sliderStart = domTop + this._scrollbarState.getSliderPosition();\n        const sliderStop = domTop + this._scrollbarState.getSliderPosition() + this._scrollbarState.getSliderSize();\n        const pointerPos = this._sliderPointerPosition(e);\n        if (sliderStart <= pointerPos && pointerPos <= sliderStop) {\n            // Act as if it was a pointer down on the slider\n            if (e.button === 0) {\n                e.preventDefault();\n                this._sliderPointerDown(e);\n            }\n        }\n        else {\n            // Act as if it was a pointer down on the scrollbar\n            this._onPointerDown(e);\n        }\n    }\n    _onPointerDown(e) {\n        let offsetX;\n        let offsetY;\n        if (e.target === this.domNode.domNode && typeof e.offsetX === 'number' && typeof e.offsetY === 'number') {\n            offsetX = e.offsetX;\n            offsetY = e.offsetY;\n        }\n        else {\n            const domNodePosition = dom.getDomNodePagePosition(this.domNode.domNode);\n            offsetX = e.pageX - domNodePosition.left;\n            offsetY = e.pageY - domNodePosition.top;\n        }\n        const offset = this._pointerDownRelativePosition(offsetX, offsetY);\n        this._setDesiredScrollPositionNow(this._scrollByPage\n            ? this._scrollbarState.getDesiredScrollPositionFromOffsetPaged(offset)\n            : this._scrollbarState.getDesiredScrollPositionFromOffset(offset));\n        if (e.button === 0) {\n            // left button\n            e.preventDefault();\n            this._sliderPointerDown(e);\n        }\n    }\n    _sliderPointerDown(e) {\n        if (!e.target || !(e.target instanceof Element)) {\n            return;\n        }\n        const initialPointerPosition = this._sliderPointerPosition(e);\n        const initialPointerOrthogonalPosition = this._sliderOrthogonalPointerPosition(e);\n        const initialScrollbarState = this._scrollbarState.clone();\n        this.slider.toggleClassName('active', true);\n        this._pointerMoveMonitor.startMonitoring(e.target, e.pointerId, e.buttons, (pointerMoveData) => {\n            const pointerOrthogonalPosition = this._sliderOrthogonalPointerPosition(pointerMoveData);\n            const pointerOrthogonalDelta = Math.abs(pointerOrthogonalPosition - initialPointerOrthogonalPosition);\n            if (platform.isWindows && pointerOrthogonalDelta > POINTER_DRAG_RESET_DISTANCE) {\n                // The pointer has wondered away from the scrollbar => reset dragging\n                this._setDesiredScrollPositionNow(initialScrollbarState.getScrollPosition());\n                return;\n            }\n            const pointerPosition = this._sliderPointerPosition(pointerMoveData);\n            const pointerDelta = pointerPosition - initialPointerPosition;\n            this._setDesiredScrollPositionNow(initialScrollbarState.getDesiredScrollPositionFromDelta(pointerDelta));\n        }, () => {\n            this.slider.toggleClassName('active', false);\n            this._host.onDragEnd();\n        });\n        this._host.onDragStart();\n    }\n    _setDesiredScrollPositionNow(_desiredScrollPosition) {\n        const desiredScrollPosition = {};\n        this.writeScrollPosition(desiredScrollPosition, _desiredScrollPosition);\n        this._scrollable.setScrollPositionNow(desiredScrollPosition);\n    }\n    updateScrollbarSize(scrollbarSize) {\n        this._updateScrollbarSize(scrollbarSize);\n        this._scrollbarState.setScrollbarSize(scrollbarSize);\n        this._shouldRender = true;\n        if (!this._lazyRender) {\n            this.render();\n        }\n    }\n    isNeeded() {\n        return this._scrollbarState.isNeeded();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * The minimal size of the slider (such that it can still be clickable) -- it is artificially enlarged.\n */\nconst MINIMUM_SLIDER_SIZE = 20;\nexport class ScrollbarState {\n    constructor(arrowSize, scrollbarSize, oppositeScrollbarSize, visibleSize, scrollSize, scrollPosition) {\n        this._scrollbarSize = Math.round(scrollbarSize);\n        this._oppositeScrollbarSize = Math.round(oppositeScrollbarSize);\n        this._arrowSize = Math.round(arrowSize);\n        this._visibleSize = visibleSize;\n        this._scrollSize = scrollSize;\n        this._scrollPosition = scrollPosition;\n        this._computedAvailableSize = 0;\n        this._computedIsNeeded = false;\n        this._computedSliderSize = 0;\n        this._computedSliderRatio = 0;\n        this._computedSliderPosition = 0;\n        this._refreshComputedValues();\n    }\n    clone() {\n        return new ScrollbarState(this._arrowSize, this._scrollbarSize, this._oppositeScrollbarSize, this._visibleSize, this._scrollSize, this._scrollPosition);\n    }\n    setVisibleSize(visibleSize) {\n        const iVisibleSize = Math.round(visibleSize);\n        if (this._visibleSize !== iVisibleSize) {\n            this._visibleSize = iVisibleSize;\n            this._refreshComputedValues();\n            return true;\n        }\n        return false;\n    }\n    setScrollSize(scrollSize) {\n        const iScrollSize = Math.round(scrollSize);\n        if (this._scrollSize !== iScrollSize) {\n            this._scrollSize = iScrollSize;\n            this._refreshComputedValues();\n            return true;\n        }\n        return false;\n    }\n    setScrollPosition(scrollPosition) {\n        const iScrollPosition = Math.round(scrollPosition);\n        if (this._scrollPosition !== iScrollPosition) {\n            this._scrollPosition = iScrollPosition;\n            this._refreshComputedValues();\n            return true;\n        }\n        return false;\n    }\n    setScrollbarSize(scrollbarSize) {\n        this._scrollbarSize = Math.round(scrollbarSize);\n    }\n    setOppositeScrollbarSize(oppositeScrollbarSize) {\n        this._oppositeScrollbarSize = Math.round(oppositeScrollbarSize);\n    }\n    static _computeValues(oppositeScrollbarSize, arrowSize, visibleSize, scrollSize, scrollPosition) {\n        const computedAvailableSize = Math.max(0, visibleSize - oppositeScrollbarSize);\n        const computedRepresentableSize = Math.max(0, computedAvailableSize - 2 * arrowSize);\n        const computedIsNeeded = (scrollSize > 0 && scrollSize > visibleSize);\n        if (!computedIsNeeded) {\n            // There is no need for a slider\n            return {\n                computedAvailableSize: Math.round(computedAvailableSize),\n                computedIsNeeded: computedIsNeeded,\n                computedSliderSize: Math.round(computedRepresentableSize),\n                computedSliderRatio: 0,\n                computedSliderPosition: 0,\n            };\n        }\n        // We must artificially increase the size of the slider if needed, since the slider would be too small to grab with the mouse otherwise\n        const computedSliderSize = Math.round(Math.max(MINIMUM_SLIDER_SIZE, Math.floor(visibleSize * computedRepresentableSize / scrollSize)));\n        // The slider can move from 0 to `computedRepresentableSize` - `computedSliderSize`\n        // in the same way `scrollPosition` can move from 0 to `scrollSize` - `visibleSize`.\n        const computedSliderRatio = (computedRepresentableSize - computedSliderSize) / (scrollSize - visibleSize);\n        const computedSliderPosition = (scrollPosition * computedSliderRatio);\n        return {\n            computedAvailableSize: Math.round(computedAvailableSize),\n            computedIsNeeded: computedIsNeeded,\n            computedSliderSize: Math.round(computedSliderSize),\n            computedSliderRatio: computedSliderRatio,\n            computedSliderPosition: Math.round(computedSliderPosition),\n        };\n    }\n    _refreshComputedValues() {\n        const r = ScrollbarState._computeValues(this._oppositeScrollbarSize, this._arrowSize, this._visibleSize, this._scrollSize, this._scrollPosition);\n        this._computedAvailableSize = r.computedAvailableSize;\n        this._computedIsNeeded = r.computedIsNeeded;\n        this._computedSliderSize = r.computedSliderSize;\n        this._computedSliderRatio = r.computedSliderRatio;\n        this._computedSliderPosition = r.computedSliderPosition;\n    }\n    getArrowSize() {\n        return this._arrowSize;\n    }\n    getScrollPosition() {\n        return this._scrollPosition;\n    }\n    getRectangleLargeSize() {\n        return this._computedAvailableSize;\n    }\n    getRectangleSmallSize() {\n        return this._scrollbarSize;\n    }\n    isNeeded() {\n        return this._computedIsNeeded;\n    }\n    getSliderSize() {\n        return this._computedSliderSize;\n    }\n    getSliderPosition() {\n        return this._computedSliderPosition;\n    }\n    /**\n     * Compute a desired `scrollPosition` such that `offset` ends up in the center of the slider.\n     * `offset` is based on the same coordinate system as the `sliderPosition`.\n     */\n    getDesiredScrollPositionFromOffset(offset) {\n        if (!this._computedIsNeeded) {\n            // no need for a slider\n            return 0;\n        }\n        const desiredSliderPosition = offset - this._arrowSize - this._computedSliderSize / 2;\n        return Math.round(desiredSliderPosition / this._computedSliderRatio);\n    }\n    /**\n     * Compute a desired `scrollPosition` from if offset is before or after the slider position.\n     * If offset is before slider, treat as a page up (or left).  If after, page down (or right).\n     * `offset` and `_computedSliderPosition` are based on the same coordinate system.\n     * `_visibleSize` corresponds to a \"page\" of lines in the returned coordinate system.\n     */\n    getDesiredScrollPositionFromOffsetPaged(offset) {\n        if (!this._computedIsNeeded) {\n            // no need for a slider\n            return 0;\n        }\n        const correctedOffset = offset - this._arrowSize; // compensate if has arrows\n        let desiredScrollPosition = this._scrollPosition;\n        if (correctedOffset < this._computedSliderPosition) {\n            desiredScrollPosition -= this._visibleSize; // page up/left\n        }\n        else {\n            desiredScrollPosition += this._visibleSize; // page down/right\n        }\n        return desiredScrollPosition;\n    }\n    /**\n     * Compute a desired `scrollPosition` such that the slider moves by `delta`.\n     */\n    getDesiredScrollPositionFromDelta(delta) {\n        if (!this._computedIsNeeded) {\n            // no need for a slider\n            return 0;\n        }\n        const desiredSliderPosition = this._computedSliderPosition + delta;\n        return Math.round(desiredSliderPosition / this._computedSliderRatio);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { StandardWheelEvent } from '../../mouseEvent.js';\nimport { AbstractScrollbar } from './abstractScrollbar.js';\nimport { ARROW_IMG_SIZE } from './scrollbarArrow.js';\nimport { ScrollbarState } from './scrollbarState.js';\nimport { Codicon } from '../../../common/codicons.js';\nexport class HorizontalScrollbar extends AbstractScrollbar {\n    constructor(scrollable, options, host) {\n        const scrollDimensions = scrollable.getScrollDimensions();\n        const scrollPosition = scrollable.getCurrentScrollPosition();\n        super({\n            lazyRender: options.lazyRender,\n            host: host,\n            scrollbarState: new ScrollbarState((options.horizontalHasArrows ? options.arrowSize : 0), (options.horizontal === 2 /* ScrollbarVisibility.Hidden */ ? 0 : options.horizontalScrollbarSize), (options.vertical === 2 /* ScrollbarVisibility.Hidden */ ? 0 : options.verticalScrollbarSize), scrollDimensions.width, scrollDimensions.scrollWidth, scrollPosition.scrollLeft),\n            visibility: options.horizontal,\n            extraScrollbarClassName: 'horizontal',\n            scrollable: scrollable,\n            scrollByPage: options.scrollByPage\n        });\n        if (options.horizontalHasArrows) {\n            const arrowDelta = (options.arrowSize - ARROW_IMG_SIZE) / 2;\n            const scrollbarDelta = (options.horizontalScrollbarSize - ARROW_IMG_SIZE) / 2;\n            this._createArrow({\n                className: 'scra',\n                icon: Codicon.scrollbarButtonLeft,\n                top: scrollbarDelta,\n                left: arrowDelta,\n                bottom: undefined,\n                right: undefined,\n                bgWidth: options.arrowSize,\n                bgHeight: options.horizontalScrollbarSize,\n                onActivate: () => this._host.onMouseWheel(new StandardWheelEvent(null, 1, 0)),\n            });\n            this._createArrow({\n                className: 'scra',\n                icon: Codicon.scrollbarButtonRight,\n                top: scrollbarDelta,\n                left: undefined,\n                bottom: undefined,\n                right: arrowDelta,\n                bgWidth: options.arrowSize,\n                bgHeight: options.horizontalScrollbarSize,\n                onActivate: () => this._host.onMouseWheel(new StandardWheelEvent(null, -1, 0)),\n            });\n        }\n        this._createSlider(Math.floor((options.horizontalScrollbarSize - options.horizontalSliderSize) / 2), 0, undefined, options.horizontalSliderSize);\n    }\n    _updateSlider(sliderSize, sliderPosition) {\n        this.slider.setWidth(sliderSize);\n        this.slider.setLeft(sliderPosition);\n    }\n    _renderDomNode(largeSize, smallSize) {\n        this.domNode.setWidth(largeSize);\n        this.domNode.setHeight(smallSize);\n        this.domNode.setLeft(0);\n        this.domNode.setBottom(0);\n    }\n    onDidScroll(e) {\n        this._shouldRender = this._onElementScrollSize(e.scrollWidth) || this._shouldRender;\n        this._shouldRender = this._onElementScrollPosition(e.scrollLeft) || this._shouldRender;\n        this._shouldRender = this._onElementSize(e.width) || this._shouldRender;\n        return this._shouldRender;\n    }\n    _pointerDownRelativePosition(offsetX, offsetY) {\n        return offsetX;\n    }\n    _sliderPointerPosition(e) {\n        return e.pageX;\n    }\n    _sliderOrthogonalPointerPosition(e) {\n        return e.pageY;\n    }\n    _updateScrollbarSize(size) {\n        this.slider.setHeight(size);\n    }\n    writeScrollPosition(target, scrollPosition) {\n        target.scrollLeft = scrollPosition;\n    }\n    updateOptions(options) {\n        this.updateScrollbarSize(options.horizontal === 2 /* ScrollbarVisibility.Hidden */ ? 0 : options.horizontalScrollbarSize);\n        this._scrollbarState.setOppositeScrollbarSize(options.vertical === 2 /* ScrollbarVisibility.Hidden */ ? 0 : options.verticalScrollbarSize);\n        this._visibilityController.setVisibility(options.horizontal);\n        this._scrollByPage = options.scrollByPage;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { StandardWheelEvent } from '../../mouseEvent.js';\nimport { AbstractScrollbar } from './abstractScrollbar.js';\nimport { ARROW_IMG_SIZE } from './scrollbarArrow.js';\nimport { ScrollbarState } from './scrollbarState.js';\nimport { Codicon } from '../../../common/codicons.js';\nexport class VerticalScrollbar extends AbstractScrollbar {\n    constructor(scrollable, options, host) {\n        const scrollDimensions = scrollable.getScrollDimensions();\n        const scrollPosition = scrollable.getCurrentScrollPosition();\n        super({\n            lazyRender: options.lazyRender,\n            host: host,\n            scrollbarState: new ScrollbarState((options.verticalHasArrows ? options.arrowSize : 0), (options.vertical === 2 /* ScrollbarVisibility.Hidden */ ? 0 : options.verticalScrollbarSize), \n            // give priority to vertical scroll bar over horizontal and let it scroll all the way to the bottom\n            0, scrollDimensions.height, scrollDimensions.scrollHeight, scrollPosition.scrollTop),\n            visibility: options.vertical,\n            extraScrollbarClassName: 'vertical',\n            scrollable: scrollable,\n            scrollByPage: options.scrollByPage\n        });\n        if (options.verticalHasArrows) {\n            const arrowDelta = (options.arrowSize - ARROW_IMG_SIZE) / 2;\n            const scrollbarDelta = (options.verticalScrollbarSize - ARROW_IMG_SIZE) / 2;\n            this._createArrow({\n                className: 'scra',\n                icon: Codicon.scrollbarButtonUp,\n                top: arrowDelta,\n                left: scrollbarDelta,\n                bottom: undefined,\n                right: undefined,\n                bgWidth: options.verticalScrollbarSize,\n                bgHeight: options.arrowSize,\n                onActivate: () => this._host.onMouseWheel(new StandardWheelEvent(null, 0, 1)),\n            });\n            this._createArrow({\n                className: 'scra',\n                icon: Codicon.scrollbarButtonDown,\n                top: undefined,\n                left: scrollbarDelta,\n                bottom: arrowDelta,\n                right: undefined,\n                bgWidth: options.verticalScrollbarSize,\n                bgHeight: options.arrowSize,\n                onActivate: () => this._host.onMouseWheel(new StandardWheelEvent(null, 0, -1)),\n            });\n        }\n        this._createSlider(0, Math.floor((options.verticalScrollbarSize - options.verticalSliderSize) / 2), options.verticalSliderSize, undefined);\n    }\n    _updateSlider(sliderSize, sliderPosition) {\n        this.slider.setHeight(sliderSize);\n        this.slider.setTop(sliderPosition);\n    }\n    _renderDomNode(largeSize, smallSize) {\n        this.domNode.setWidth(smallSize);\n        this.domNode.setHeight(largeSize);\n        this.domNode.setRight(0);\n        this.domNode.setTop(0);\n    }\n    onDidScroll(e) {\n        this._shouldRender = this._onElementScrollSize(e.scrollHeight) || this._shouldRender;\n        this._shouldRender = this._onElementScrollPosition(e.scrollTop) || this._shouldRender;\n        this._shouldRender = this._onElementSize(e.height) || this._shouldRender;\n        return this._shouldRender;\n    }\n    _pointerDownRelativePosition(offsetX, offsetY) {\n        return offsetY;\n    }\n    _sliderPointerPosition(e) {\n        return e.pageY;\n    }\n    _sliderOrthogonalPointerPosition(e) {\n        return e.pageX;\n    }\n    _updateScrollbarSize(size) {\n        this.slider.setWidth(size);\n    }\n    writeScrollPosition(target, scrollPosition) {\n        target.scrollTop = scrollPosition;\n    }\n    updateOptions(options) {\n        this.updateScrollbarSize(options.vertical === 2 /* ScrollbarVisibility.Hidden */ ? 0 : options.verticalScrollbarSize);\n        // give priority to vertical scroll bar over horizontal and let it scroll all the way to the bottom\n        this._scrollbarState.setOppositeScrollbarSize(0);\n        this._visibilityController.setVisibility(options.vertical);\n        this._scrollByPage = options.scrollByPage;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getZoomFactor } from '../../browser.js';\nimport * as dom from '../../dom.js';\nimport { createFastDomNode } from '../../fastDomNode.js';\nimport { StandardWheelEvent } from '../../mouseEvent.js';\nimport { HorizontalScrollbar } from './horizontalScrollbar.js';\nimport { VerticalScrollbar } from './verticalScrollbar.js';\nimport { Widget } from '../widget.js';\nimport { TimeoutTimer } from '../../../common/async.js';\nimport { Emitter } from '../../../common/event.js';\nimport { dispose } from '../../../common/lifecycle.js';\nimport * as platform from '../../../common/platform.js';\nimport { Scrollable } from '../../../common/scrollable.js';\nimport './media/scrollbars.css';\nconst HIDE_TIMEOUT = 500;\nconst SCROLL_WHEEL_SENSITIVITY = 50;\nconst SCROLL_WHEEL_SMOOTH_SCROLL_ENABLED = true;\nclass MouseWheelClassifierItem {\n    constructor(timestamp, deltaX, deltaY) {\n        this.timestamp = timestamp;\n        this.deltaX = deltaX;\n        this.deltaY = deltaY;\n        this.score = 0;\n    }\n}\nexport class MouseWheelClassifier {\n    constructor() {\n        this._capacity = 5;\n        this._memory = [];\n        this._front = -1;\n        this._rear = -1;\n    }\n    isPhysicalMouseWheel() {\n        if (this._front === -1 && this._rear === -1) {\n            // no elements\n            return false;\n        }\n        // 0.5 * last + 0.25 * 2nd last + 0.125 * 3rd last + ...\n        let remainingInfluence = 1;\n        let score = 0;\n        let iteration = 1;\n        let index = this._rear;\n        do {\n            const influence = (index === this._front ? remainingInfluence : Math.pow(2, -iteration));\n            remainingInfluence -= influence;\n            score += this._memory[index].score * influence;\n            if (index === this._front) {\n                break;\n            }\n            index = (this._capacity + index - 1) % this._capacity;\n            iteration++;\n        } while (true);\n        return (score <= 0.5);\n    }\n    accept(timestamp, deltaX, deltaY) {\n        const item = new MouseWheelClassifierItem(timestamp, deltaX, deltaY);\n        item.score = this._computeScore(item);\n        if (this._front === -1 && this._rear === -1) {\n            this._memory[0] = item;\n            this._front = 0;\n            this._rear = 0;\n        }\n        else {\n            this._rear = (this._rear + 1) % this._capacity;\n            if (this._rear === this._front) {\n                // Drop oldest\n                this._front = (this._front + 1) % this._capacity;\n            }\n            this._memory[this._rear] = item;\n        }\n    }\n    /**\n     * A score between 0 and 1 for `item`.\n     *  - a score towards 0 indicates that the source appears to be a physical mouse wheel\n     *  - a score towards 1 indicates that the source appears to be a touchpad or magic mouse, etc.\n     */\n    _computeScore(item) {\n        if (Math.abs(item.deltaX) > 0 && Math.abs(item.deltaY) > 0) {\n            // both axes exercised => definitely not a physical mouse wheel\n            return 1;\n        }\n        let score = 0.5;\n        const prev = (this._front === -1 && this._rear === -1 ? null : this._memory[this._rear]);\n        if (prev) {\n            // const deltaT = item.timestamp - prev.timestamp;\n            // if (deltaT < 1000 / 30) {\n            // \t// sooner than X times per second => indicator that this is not a physical mouse wheel\n            // \tscore += 0.25;\n            // }\n            // if (item.deltaX === prev.deltaX && item.deltaY === prev.deltaY) {\n            // \t// equal amplitude => indicator that this is a physical mouse wheel\n            // \tscore -= 0.25;\n            // }\n        }\n        if (!this._isAlmostInt(item.deltaX) || !this._isAlmostInt(item.deltaY)) {\n            // non-integer deltas => indicator that this is not a physical mouse wheel\n            score += 0.25;\n        }\n        return Math.min(Math.max(score, 0), 1);\n    }\n    _isAlmostInt(value) {\n        const delta = Math.abs(Math.round(value) - value);\n        return (delta < 0.01);\n    }\n}\nMouseWheelClassifier.INSTANCE = new MouseWheelClassifier();\nexport class AbstractScrollableElement extends Widget {\n    constructor(element, options, scrollable) {\n        super();\n        this._onScroll = this._register(new Emitter());\n        this.onScroll = this._onScroll.event;\n        this._onWillScroll = this._register(new Emitter());\n        element.style.overflow = 'hidden';\n        this._options = resolveOptions(options);\n        this._scrollable = scrollable;\n        this._register(this._scrollable.onScroll((e) => {\n            this._onWillScroll.fire(e);\n            this._onDidScroll(e);\n            this._onScroll.fire(e);\n        }));\n        const scrollbarHost = {\n            onMouseWheel: (mouseWheelEvent) => this._onMouseWheel(mouseWheelEvent),\n            onDragStart: () => this._onDragStart(),\n            onDragEnd: () => this._onDragEnd(),\n        };\n        this._verticalScrollbar = this._register(new VerticalScrollbar(this._scrollable, this._options, scrollbarHost));\n        this._horizontalScrollbar = this._register(new HorizontalScrollbar(this._scrollable, this._options, scrollbarHost));\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'monaco-scrollable-element ' + this._options.className;\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.style.position = 'relative';\n        this._domNode.style.overflow = 'hidden';\n        this._domNode.appendChild(element);\n        this._domNode.appendChild(this._horizontalScrollbar.domNode.domNode);\n        this._domNode.appendChild(this._verticalScrollbar.domNode.domNode);\n        if (this._options.useShadows) {\n            this._leftShadowDomNode = createFastDomNode(document.createElement('div'));\n            this._leftShadowDomNode.setClassName('shadow');\n            this._domNode.appendChild(this._leftShadowDomNode.domNode);\n            this._topShadowDomNode = createFastDomNode(document.createElement('div'));\n            this._topShadowDomNode.setClassName('shadow');\n            this._domNode.appendChild(this._topShadowDomNode.domNode);\n            this._topLeftShadowDomNode = createFastDomNode(document.createElement('div'));\n            this._topLeftShadowDomNode.setClassName('shadow');\n            this._domNode.appendChild(this._topLeftShadowDomNode.domNode);\n        }\n        else {\n            this._leftShadowDomNode = null;\n            this._topShadowDomNode = null;\n            this._topLeftShadowDomNode = null;\n        }\n        this._listenOnDomNode = this._options.listenOnDomNode || this._domNode;\n        this._mouseWheelToDispose = [];\n        this._setListeningToMouseWheel(this._options.handleMouseWheel);\n        this.onmouseover(this._listenOnDomNode, (e) => this._onMouseOver(e));\n        this.onmouseleave(this._listenOnDomNode, (e) => this._onMouseLeave(e));\n        this._hideTimeout = this._register(new TimeoutTimer());\n        this._isDragging = false;\n        this._mouseIsOver = false;\n        this._shouldRender = true;\n        this._revealOnScroll = true;\n    }\n    get options() {\n        return this._options;\n    }\n    dispose() {\n        this._mouseWheelToDispose = dispose(this._mouseWheelToDispose);\n        super.dispose();\n    }\n    /**\n     * Get the generated 'scrollable' dom node\n     */\n    getDomNode() {\n        return this._domNode;\n    }\n    getOverviewRulerLayoutInfo() {\n        return {\n            parent: this._domNode,\n            insertBefore: this._verticalScrollbar.domNode.domNode,\n        };\n    }\n    /**\n     * Delegate a pointer down event to the vertical scrollbar.\n     * This is to help with clicking somewhere else and having the scrollbar react.\n     */\n    delegateVerticalScrollbarPointerDown(browserEvent) {\n        this._verticalScrollbar.delegatePointerDown(browserEvent);\n    }\n    getScrollDimensions() {\n        return this._scrollable.getScrollDimensions();\n    }\n    setScrollDimensions(dimensions) {\n        this._scrollable.setScrollDimensions(dimensions, false);\n    }\n    /**\n     * Update the class name of the scrollable element.\n     */\n    updateClassName(newClassName) {\n        this._options.className = newClassName;\n        // Defaults are different on Macs\n        if (platform.isMacintosh) {\n            this._options.className += ' mac';\n        }\n        this._domNode.className = 'monaco-scrollable-element ' + this._options.className;\n    }\n    /**\n     * Update configuration options for the scrollbar.\n     */\n    updateOptions(newOptions) {\n        if (typeof newOptions.handleMouseWheel !== 'undefined') {\n            this._options.handleMouseWheel = newOptions.handleMouseWheel;\n            this._setListeningToMouseWheel(this._options.handleMouseWheel);\n        }\n        if (typeof newOptions.mouseWheelScrollSensitivity !== 'undefined') {\n            this._options.mouseWheelScrollSensitivity = newOptions.mouseWheelScrollSensitivity;\n        }\n        if (typeof newOptions.fastScrollSensitivity !== 'undefined') {\n            this._options.fastScrollSensitivity = newOptions.fastScrollSensitivity;\n        }\n        if (typeof newOptions.scrollPredominantAxis !== 'undefined') {\n            this._options.scrollPredominantAxis = newOptions.scrollPredominantAxis;\n        }\n        if (typeof newOptions.horizontal !== 'undefined') {\n            this._options.horizontal = newOptions.horizontal;\n        }\n        if (typeof newOptions.vertical !== 'undefined') {\n            this._options.vertical = newOptions.vertical;\n        }\n        if (typeof newOptions.horizontalScrollbarSize !== 'undefined') {\n            this._options.horizontalScrollbarSize = newOptions.horizontalScrollbarSize;\n        }\n        if (typeof newOptions.verticalScrollbarSize !== 'undefined') {\n            this._options.verticalScrollbarSize = newOptions.verticalScrollbarSize;\n        }\n        if (typeof newOptions.scrollByPage !== 'undefined') {\n            this._options.scrollByPage = newOptions.scrollByPage;\n        }\n        this._horizontalScrollbar.updateOptions(this._options);\n        this._verticalScrollbar.updateOptions(this._options);\n        if (!this._options.lazyRender) {\n            this._render();\n        }\n    }\n    // -------------------- mouse wheel scrolling --------------------\n    _setListeningToMouseWheel(shouldListen) {\n        const isListening = (this._mouseWheelToDispose.length > 0);\n        if (isListening === shouldListen) {\n            // No change\n            return;\n        }\n        // Stop listening (if necessary)\n        this._mouseWheelToDispose = dispose(this._mouseWheelToDispose);\n        // Start listening (if necessary)\n        if (shouldListen) {\n            const onMouseWheel = (browserEvent) => {\n                this._onMouseWheel(new StandardWheelEvent(browserEvent));\n            };\n            this._mouseWheelToDispose.push(dom.addDisposableListener(this._listenOnDomNode, dom.EventType.MOUSE_WHEEL, onMouseWheel, { passive: false }));\n        }\n    }\n    _onMouseWheel(e) {\n        const classifier = MouseWheelClassifier.INSTANCE;\n        if (SCROLL_WHEEL_SMOOTH_SCROLL_ENABLED) {\n            const osZoomFactor = window.devicePixelRatio / getZoomFactor();\n            if (platform.isWindows || platform.isLinux) {\n                // On Windows and Linux, the incoming delta events are multiplied with the OS zoom factor.\n                // The OS zoom factor can be reverse engineered by using the device pixel ratio and the configured zoom factor into account.\n                classifier.accept(Date.now(), e.deltaX / osZoomFactor, e.deltaY / osZoomFactor);\n            }\n            else {\n                classifier.accept(Date.now(), e.deltaX, e.deltaY);\n            }\n        }\n        // console.log(`${Date.now()}, ${e.deltaY}, ${e.deltaX}`);\n        let didScroll = false;\n        if (e.deltaY || e.deltaX) {\n            let deltaY = e.deltaY * this._options.mouseWheelScrollSensitivity;\n            let deltaX = e.deltaX * this._options.mouseWheelScrollSensitivity;\n            if (this._options.scrollPredominantAxis) {\n                if (Math.abs(deltaY) >= Math.abs(deltaX)) {\n                    deltaX = 0;\n                }\n                else {\n                    deltaY = 0;\n                }\n            }\n            if (this._options.flipAxes) {\n                [deltaY, deltaX] = [deltaX, deltaY];\n            }\n            // Convert vertical scrolling to horizontal if shift is held, this\n            // is handled at a higher level on Mac\n            const shiftConvert = !platform.isMacintosh && e.browserEvent && e.browserEvent.shiftKey;\n            if ((this._options.scrollYToX || shiftConvert) && !deltaX) {\n                deltaX = deltaY;\n                deltaY = 0;\n            }\n            if (e.browserEvent && e.browserEvent.altKey) {\n                // fastScrolling\n                deltaX = deltaX * this._options.fastScrollSensitivity;\n                deltaY = deltaY * this._options.fastScrollSensitivity;\n            }\n            const futureScrollPosition = this._scrollable.getFutureScrollPosition();\n            let desiredScrollPosition = {};\n            if (deltaY) {\n                const deltaScrollTop = SCROLL_WHEEL_SENSITIVITY * deltaY;\n                // Here we convert values such as -0.3 to -1 or 0.3 to 1, otherwise low speed scrolling will never scroll\n                const desiredScrollTop = futureScrollPosition.scrollTop - (deltaScrollTop < 0 ? Math.floor(deltaScrollTop) : Math.ceil(deltaScrollTop));\n                this._verticalScrollbar.writeScrollPosition(desiredScrollPosition, desiredScrollTop);\n            }\n            if (deltaX) {\n                const deltaScrollLeft = SCROLL_WHEEL_SENSITIVITY * deltaX;\n                // Here we convert values such as -0.3 to -1 or 0.3 to 1, otherwise low speed scrolling will never scroll\n                const desiredScrollLeft = futureScrollPosition.scrollLeft - (deltaScrollLeft < 0 ? Math.floor(deltaScrollLeft) : Math.ceil(deltaScrollLeft));\n                this._horizontalScrollbar.writeScrollPosition(desiredScrollPosition, desiredScrollLeft);\n            }\n            // Check that we are scrolling towards a location which is valid\n            desiredScrollPosition = this._scrollable.validateScrollPosition(desiredScrollPosition);\n            if (futureScrollPosition.scrollLeft !== desiredScrollPosition.scrollLeft || futureScrollPosition.scrollTop !== desiredScrollPosition.scrollTop) {\n                const canPerformSmoothScroll = (SCROLL_WHEEL_SMOOTH_SCROLL_ENABLED\n                    && this._options.mouseWheelSmoothScroll\n                    && classifier.isPhysicalMouseWheel());\n                if (canPerformSmoothScroll) {\n                    this._scrollable.setScrollPositionSmooth(desiredScrollPosition);\n                }\n                else {\n                    this._scrollable.setScrollPositionNow(desiredScrollPosition);\n                }\n                didScroll = true;\n            }\n        }\n        let consumeMouseWheel = didScroll;\n        if (!consumeMouseWheel && this._options.alwaysConsumeMouseWheel) {\n            consumeMouseWheel = true;\n        }\n        if (!consumeMouseWheel && this._options.consumeMouseWheelIfScrollbarIsNeeded && (this._verticalScrollbar.isNeeded() || this._horizontalScrollbar.isNeeded())) {\n            consumeMouseWheel = true;\n        }\n        if (consumeMouseWheel) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n    _onDidScroll(e) {\n        this._shouldRender = this._horizontalScrollbar.onDidScroll(e) || this._shouldRender;\n        this._shouldRender = this._verticalScrollbar.onDidScroll(e) || this._shouldRender;\n        if (this._options.useShadows) {\n            this._shouldRender = true;\n        }\n        if (this._revealOnScroll) {\n            this._reveal();\n        }\n        if (!this._options.lazyRender) {\n            this._render();\n        }\n    }\n    /**\n     * Render / mutate the DOM now.\n     * Should be used together with the ctor option `lazyRender`.\n     */\n    renderNow() {\n        if (!this._options.lazyRender) {\n            throw new Error('Please use `lazyRender` together with `renderNow`!');\n        }\n        this._render();\n    }\n    _render() {\n        if (!this._shouldRender) {\n            return;\n        }\n        this._shouldRender = false;\n        this._horizontalScrollbar.render();\n        this._verticalScrollbar.render();\n        if (this._options.useShadows) {\n            const scrollState = this._scrollable.getCurrentScrollPosition();\n            const enableTop = scrollState.scrollTop > 0;\n            const enableLeft = scrollState.scrollLeft > 0;\n            const leftClassName = (enableLeft ? ' left' : '');\n            const topClassName = (enableTop ? ' top' : '');\n            const topLeftClassName = (enableLeft || enableTop ? ' top-left-corner' : '');\n            this._leftShadowDomNode.setClassName(`shadow${leftClassName}`);\n            this._topShadowDomNode.setClassName(`shadow${topClassName}`);\n            this._topLeftShadowDomNode.setClassName(`shadow${topLeftClassName}${topClassName}${leftClassName}`);\n        }\n    }\n    // -------------------- fade in / fade out --------------------\n    _onDragStart() {\n        this._isDragging = true;\n        this._reveal();\n    }\n    _onDragEnd() {\n        this._isDragging = false;\n        this._hide();\n    }\n    _onMouseLeave(e) {\n        this._mouseIsOver = false;\n        this._hide();\n    }\n    _onMouseOver(e) {\n        this._mouseIsOver = true;\n        this._reveal();\n    }\n    _reveal() {\n        this._verticalScrollbar.beginReveal();\n        this._horizontalScrollbar.beginReveal();\n        this._scheduleHide();\n    }\n    _hide() {\n        if (!this._mouseIsOver && !this._isDragging) {\n            this._verticalScrollbar.beginHide();\n            this._horizontalScrollbar.beginHide();\n        }\n    }\n    _scheduleHide() {\n        if (!this._mouseIsOver && !this._isDragging) {\n            this._hideTimeout.cancelAndSet(() => this._hide(), HIDE_TIMEOUT);\n        }\n    }\n}\nexport class ScrollableElement extends AbstractScrollableElement {\n    constructor(element, options) {\n        options = options || {};\n        options.mouseWheelSmoothScroll = false;\n        const scrollable = new Scrollable({\n            forceIntegerValues: true,\n            smoothScrollDuration: 0,\n            scheduleAtNextAnimationFrame: (callback) => dom.scheduleAtNextAnimationFrame(callback)\n        });\n        super(element, options, scrollable);\n        this._register(scrollable);\n    }\n    setScrollPosition(update) {\n        this._scrollable.setScrollPositionNow(update);\n    }\n}\nexport class SmoothScrollableElement extends AbstractScrollableElement {\n    constructor(element, options, scrollable) {\n        super(element, options, scrollable);\n    }\n    setScrollPosition(update) {\n        if (update.reuseAnimation) {\n            this._scrollable.setScrollPositionSmooth(update, update.reuseAnimation);\n        }\n        else {\n            this._scrollable.setScrollPositionNow(update);\n        }\n    }\n    getScrollPosition() {\n        return this._scrollable.getCurrentScrollPosition();\n    }\n}\nexport class DomScrollableElement extends AbstractScrollableElement {\n    constructor(element, options) {\n        options = options || {};\n        options.mouseWheelSmoothScroll = false;\n        const scrollable = new Scrollable({\n            forceIntegerValues: false,\n            smoothScrollDuration: 0,\n            scheduleAtNextAnimationFrame: (callback) => dom.scheduleAtNextAnimationFrame(callback)\n        });\n        super(element, options, scrollable);\n        this._register(scrollable);\n        this._element = element;\n        this.onScroll((e) => {\n            if (e.scrollTopChanged) {\n                this._element.scrollTop = e.scrollTop;\n            }\n            if (e.scrollLeftChanged) {\n                this._element.scrollLeft = e.scrollLeft;\n            }\n        });\n        this.scanDomNode();\n    }\n    setScrollPosition(update) {\n        this._scrollable.setScrollPositionNow(update);\n    }\n    getScrollPosition() {\n        return this._scrollable.getCurrentScrollPosition();\n    }\n    scanDomNode() {\n        // width, scrollLeft, scrollWidth, height, scrollTop, scrollHeight\n        this.setScrollDimensions({\n            width: this._element.clientWidth,\n            scrollWidth: this._element.scrollWidth,\n            height: this._element.clientHeight,\n            scrollHeight: this._element.scrollHeight\n        });\n        this.setScrollPosition({\n            scrollLeft: this._element.scrollLeft,\n            scrollTop: this._element.scrollTop,\n        });\n    }\n}\nfunction resolveOptions(opts) {\n    const result = {\n        lazyRender: (typeof opts.lazyRender !== 'undefined' ? opts.lazyRender : false),\n        className: (typeof opts.className !== 'undefined' ? opts.className : ''),\n        useShadows: (typeof opts.useShadows !== 'undefined' ? opts.useShadows : true),\n        handleMouseWheel: (typeof opts.handleMouseWheel !== 'undefined' ? opts.handleMouseWheel : true),\n        flipAxes: (typeof opts.flipAxes !== 'undefined' ? opts.flipAxes : false),\n        consumeMouseWheelIfScrollbarIsNeeded: (typeof opts.consumeMouseWheelIfScrollbarIsNeeded !== 'undefined' ? opts.consumeMouseWheelIfScrollbarIsNeeded : false),\n        alwaysConsumeMouseWheel: (typeof opts.alwaysConsumeMouseWheel !== 'undefined' ? opts.alwaysConsumeMouseWheel : false),\n        scrollYToX: (typeof opts.scrollYToX !== 'undefined' ? opts.scrollYToX : false),\n        mouseWheelScrollSensitivity: (typeof opts.mouseWheelScrollSensitivity !== 'undefined' ? opts.mouseWheelScrollSensitivity : 1),\n        fastScrollSensitivity: (typeof opts.fastScrollSensitivity !== 'undefined' ? opts.fastScrollSensitivity : 5),\n        scrollPredominantAxis: (typeof opts.scrollPredominantAxis !== 'undefined' ? opts.scrollPredominantAxis : true),\n        mouseWheelSmoothScroll: (typeof opts.mouseWheelSmoothScroll !== 'undefined' ? opts.mouseWheelSmoothScroll : true),\n        arrowSize: (typeof opts.arrowSize !== 'undefined' ? opts.arrowSize : 11),\n        listenOnDomNode: (typeof opts.listenOnDomNode !== 'undefined' ? opts.listenOnDomNode : null),\n        horizontal: (typeof opts.horizontal !== 'undefined' ? opts.horizontal : 1 /* ScrollbarVisibility.Auto */),\n        horizontalScrollbarSize: (typeof opts.horizontalScrollbarSize !== 'undefined' ? opts.horizontalScrollbarSize : 10),\n        horizontalSliderSize: (typeof opts.horizontalSliderSize !== 'undefined' ? opts.horizontalSliderSize : 0),\n        horizontalHasArrows: (typeof opts.horizontalHasArrows !== 'undefined' ? opts.horizontalHasArrows : false),\n        vertical: (typeof opts.vertical !== 'undefined' ? opts.vertical : 1 /* ScrollbarVisibility.Auto */),\n        verticalScrollbarSize: (typeof opts.verticalScrollbarSize !== 'undefined' ? opts.verticalScrollbarSize : 10),\n        verticalHasArrows: (typeof opts.verticalHasArrows !== 'undefined' ? opts.verticalHasArrows : false),\n        verticalSliderSize: (typeof opts.verticalSliderSize !== 'undefined' ? opts.verticalSliderSize : 0),\n        scrollByPage: (typeof opts.scrollByPage !== 'undefined' ? opts.scrollByPage : false)\n    };\n    result.horizontalSliderSize = (typeof opts.horizontalSliderSize !== 'undefined' ? opts.horizontalSliderSize : result.horizontalScrollbarSize);\n    result.verticalSliderSize = (typeof opts.verticalSliderSize !== 'undefined' ? opts.verticalSliderSize : result.verticalScrollbarSize);\n    // Defaults are different on Macs\n    if (platform.isMacintosh) {\n        result.className += ' mac';\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, addDisposableListener, append, scheduleAtNextAnimationFrame } from '../../dom.js';\nimport { Sash } from '../sash/sash.js';\nimport { SmoothScrollableElement } from '../scrollbar/scrollableElement.js';\nimport { pushToEnd, pushToStart, range } from '../../../common/arrays.js';\nimport { Color } from '../../../common/color.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { combinedDisposable, Disposable, dispose, toDisposable } from '../../../common/lifecycle.js';\nimport { clamp } from '../../../common/numbers.js';\nimport { Scrollable } from '../../../common/scrollable.js';\nimport * as types from '../../../common/types.js';\nimport './splitview.css';\nconst defaultStyles = {\n    separatorBorder: Color.transparent\n};\nclass ViewItem {\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    setVisible(visible, size) {\n        var _a, _b;\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp(this._cachedVisibleSize, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize = typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        (_b = (_a = this.view).setVisible) === null || _b === void 0 ? void 0 : _b.call(_a, visible);\n    }\n    get minimumSize() { return this.visible ? this.view.minimumSize : 0; }\n    get viewMinimumSize() { return this.view.minimumSize; }\n    get maximumSize() { return this.visible ? this.view.maximumSize : 0; }\n    get viewMaximumSize() { return this.view.maximumSize; }\n    get priority() { return this.view.priority; }\n    get snap() { return !!this.view.snap; }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    layout(offset, layoutContext) {\n        this.layoutContainer(offset);\n        this.view.layout(this.size, offset, layoutContext);\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\nclass VerticalViewItem extends ViewItem {\n    layoutContainer(offset) {\n        this.container.style.top = `${offset}px`;\n        this.container.style.height = `${this.size}px`;\n    }\n}\nclass HorizontalViewItem extends ViewItem {\n    layoutContainer(offset) {\n        this.container.style.left = `${offset}px`;\n        this.container.style.width = `${this.size}px`;\n    }\n}\nvar State;\n(function (State) {\n    State[State[\"Idle\"] = 0] = \"Idle\";\n    State[State[\"Busy\"] = 1] = \"Busy\";\n})(State || (State = {}));\nexport var Sizing;\n(function (Sizing) {\n    /**\n     * When adding or removing views, distribute the delta space among\n     * all other views.\n     */\n    Sizing.Distribute = { type: 'distribute' };\n    /**\n     * When adding or removing views, split the delta space with another\n     * specific view, indexed by the provided `index`.\n     */\n    function Split(index) { return { type: 'split', index }; }\n    Sizing.Split = Split;\n    /**\n     * When adding or removing views, assume the view is invisible.\n     */\n    function Invisible(cachedVisibleSize) { return { type: 'invisible', cachedVisibleSize }; }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\n/**\n * The {@link SplitView} is the UI component which implements a one dimensional\n * flex-like layout algorithm for a collection of {@link IView} instances, which\n * are essentially HTMLElement instances with the following size constraints:\n *\n * - {@link IView.minimumSize}\n * - {@link IView.maximumSize}\n * - {@link IView.priority}\n * - {@link IView.snap}\n *\n * In case the SplitView doesn't have enough size to fit all views, it will overflow\n * its content with a scrollbar.\n *\n * In between each pair of views there will be a {@link Sash} allowing the user\n * to resize the views, making sure the constraints are respected.\n *\n * An optional {@link TLayoutContext layout context type} may be used in order to\n * pass along layout contextual data from the {@link SplitView.layout} method down\n * to each view's {@link IView.layout} calls.\n *\n * Features:\n * - Flex-like layout algorithm\n * - Snap support\n * - Orthogonal sash support, for corner sashes\n * - View hide/show support\n * - View swap/move support\n * - Alt key modifier behavior, macOS style\n */\nexport class SplitView extends Disposable {\n    /**\n     * Create a new {@link SplitView} instance.\n     */\n    constructor(container, options = {}) {\n        var _a, _b, _c, _d, _e;\n        super();\n        this.size = 0;\n        this.contentSize = 0;\n        this.proportions = undefined;\n        this.viewItems = [];\n        this.sashItems = [];\n        this.state = State.Idle;\n        this._onDidSashChange = this._register(new Emitter());\n        this._onDidSashReset = this._register(new Emitter());\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        /**\n         * Fires whenever the user resizes a {@link Sash sash}.\n         */\n        this.onDidSashChange = this._onDidSashChange.event;\n        /**\n         * Fires whenever the user double clicks a {@link Sash sash}.\n         */\n        this.onDidSashReset = this._onDidSashReset.event;\n        this.orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : 0 /* Orientation.VERTICAL */;\n        this.inverseAltBehavior = (_b = options.inverseAltBehavior) !== null && _b !== void 0 ? _b : false;\n        this.proportionalLayout = (_c = options.proportionalLayout) !== null && _c !== void 0 ? _c : true;\n        this.getSashOrthogonalSize = options.getSashOrthogonalSize;\n        this.el = document.createElement('div');\n        this.el.classList.add('monaco-split-view2');\n        this.el.classList.add(this.orientation === 0 /* Orientation.VERTICAL */ ? 'vertical' : 'horizontal');\n        container.appendChild(this.el);\n        this.sashContainer = append(this.el, $('.sash-container'));\n        this.viewContainer = $('.split-view-container');\n        this.scrollable = new Scrollable({\n            forceIntegerValues: true,\n            smoothScrollDuration: 125,\n            scheduleAtNextAnimationFrame\n        });\n        this.scrollableElement = this._register(new SmoothScrollableElement(this.viewContainer, {\n            vertical: this.orientation === 0 /* Orientation.VERTICAL */ ? ((_d = options.scrollbarVisibility) !== null && _d !== void 0 ? _d : 1 /* ScrollbarVisibility.Auto */) : 2 /* ScrollbarVisibility.Hidden */,\n            horizontal: this.orientation === 1 /* Orientation.HORIZONTAL */ ? ((_e = options.scrollbarVisibility) !== null && _e !== void 0 ? _e : 1 /* ScrollbarVisibility.Auto */) : 2 /* ScrollbarVisibility.Hidden */\n        }, this.scrollable));\n        this.onDidScroll = this.scrollableElement.onScroll;\n        this._register(this.onDidScroll(e => {\n            this.viewContainer.scrollTop = e.scrollTop;\n            this.viewContainer.scrollLeft = e.scrollLeft;\n        }));\n        append(this.el, this.scrollableElement.getDomNode());\n        this.style(options.styles || defaultStyles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this.size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = types.isUndefined(viewDescriptor.visible) || viewDescriptor.visible ? viewDescriptor.size : { type: 'invisible', cachedVisibleSize: viewDescriptor.size };\n                const view = viewDescriptor.view;\n                this.doAddView(view, sizing, index, true);\n            });\n            // Initialize content size and proportions for first layout\n            this.contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    get orthogonalStartSash() { return this._orthogonalStartSash; }\n    get orthogonalEndSash() { return this._orthogonalEndSash; }\n    get startSnappingEnabled() { return this._startSnappingEnabled; }\n    get endSnappingEnabled() { return this._endSnappingEnabled; }\n    /**\n     * A reference to a sash, perpendicular to all sashes in this {@link SplitView},\n     * located at the left- or top-most side of the SplitView.\n     * Corner sashes will be created automatically at the intersections.\n     */\n    set orthogonalStartSash(sash) {\n        for (const sashItem of this.sashItems) {\n            sashItem.sash.orthogonalStartSash = sash;\n        }\n        this._orthogonalStartSash = sash;\n    }\n    /**\n     * A reference to a sash, perpendicular to all sashes in this {@link SplitView},\n     * located at the right- or bottom-most side of the SplitView.\n     * Corner sashes will be created automatically at the intersections.\n     */\n    set orthogonalEndSash(sash) {\n        for (const sashItem of this.sashItems) {\n            sashItem.sash.orthogonalEndSash = sash;\n        }\n        this._orthogonalEndSash = sash;\n    }\n    /**\n     * Enable/disable snapping at the beginning of this {@link SplitView}.\n     */\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    /**\n     * Enable/disable snapping at the end of this {@link SplitView}.\n     */\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    style(styles) {\n        if (styles.separatorBorder.isTransparent()) {\n            this.el.classList.remove('separator-border');\n            this.el.style.removeProperty('--separator-border');\n        }\n        else {\n            this.el.classList.add('separator-border');\n            this.el.style.setProperty('--separator-border', styles.separatorBorder.toString());\n        }\n    }\n    /**\n     * Add a {@link IView view} to this {@link SplitView}.\n     *\n     * @param view The view to add.\n     * @param size Either a fixed size, or a dynamic {@link Sizing} strategy.\n     * @param index The index to insert the view on.\n     * @param skipLayout Whether layout should be skipped.\n     */\n    addView(view, size, index = this.viewItems.length, skipLayout) {\n        this.doAddView(view, size, index, skipLayout);\n    }\n    /**\n     * Layout the {@link SplitView}.\n     *\n     * @param size The entire size of the {@link SplitView}.\n     * @param layoutContext An optional layout context to pass along to {@link IView views}.\n     */\n    layout(size, layoutContext) {\n        const previousSize = Math.max(this.size, this.contentSize);\n        this.size = size;\n        this.layoutContext = layoutContext;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 1 /* LayoutPriority.Low */);\n            const highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 2 /* LayoutPriority.High */);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                item.size = clamp(Math.round(this.proportions[i] * size), item.minimumSize, item.maximumSize);\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this.contentSize > 0) {\n            this.proportions = this.viewItems.map(i => i.size / this.contentSize);\n        }\n    }\n    onSashStart({ sash, start, alt }) {\n        for (const item of this.viewItems) {\n            item.enabled = false;\n        }\n        const index = this.sashItems.findIndex(item => item.sash === sash);\n        // This way, we can press Alt while we resize a sash, macOS style!\n        const disposable = combinedDisposable(addDisposableListener(document.body, 'keydown', e => resetSashDragState(this.sashDragState.current, e.altKey)), addDisposableListener(document.body, 'keyup', () => resetSashDragState(this.sashDragState.current, false)));\n        const resetSashDragState = (start, alt) => {\n            const sizes = this.viewItems.map(i => i.size);\n            let minDelta = Number.NEGATIVE_INFINITY;\n            let maxDelta = Number.POSITIVE_INFINITY;\n            if (this.inverseAltBehavior) {\n                alt = !alt;\n            }\n            if (alt) {\n                // When we're using the last sash with Alt, we're resizing\n                // the view to the left/up, instead of right/down as usual\n                // Thus, we must do the inverse of the usual\n                const isLastSash = index === this.sashItems.length - 1;\n                if (isLastSash) {\n                    const viewItem = this.viewItems[index];\n                    minDelta = (viewItem.minimumSize - viewItem.size) / 2;\n                    maxDelta = (viewItem.maximumSize - viewItem.size) / 2;\n                }\n                else {\n                    const viewItem = this.viewItems[index + 1];\n                    minDelta = (viewItem.size - viewItem.maximumSize) / 2;\n                    maxDelta = (viewItem.size - viewItem.minimumSize) / 2;\n                }\n            }\n            let snapBefore;\n            let snapAfter;\n            if (!alt) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0 ? Number.POSITIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0 ? Number.NEGATIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const viewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(viewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: viewItem.visible ? minDelta - halfSize : minDelta + halfSize,\n                        size: viewItem.size\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const viewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(viewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: viewItem.visible ? maxDelta + halfSize : maxDelta - halfSize,\n                        size: viewItem.size\n                    };\n                }\n            }\n            this.sashDragState = { start, current: start, index, sizes, minDelta, maxDelta, alt, snapBefore, snapAfter, disposable };\n        };\n        resetSashDragState(start, alt);\n    }\n    onSashChange({ current }) {\n        const { index, start, sizes, alt, minDelta, maxDelta, snapBefore, snapAfter } = this.sashDragState;\n        this.sashDragState.current = current;\n        const delta = current - start;\n        const newDelta = this.resize(index, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n        if (alt) {\n            const isLastSash = index === this.sashItems.length - 1;\n            const newSizes = this.viewItems.map(i => i.size);\n            const viewItemIndex = isLastSash ? index : index + 1;\n            const viewItem = this.viewItems[viewItemIndex];\n            const newMinDelta = viewItem.size - viewItem.maximumSize;\n            const newMaxDelta = viewItem.size - viewItem.minimumSize;\n            const resizeIndex = isLastSash ? index - 1 : index + 1;\n            this.resize(resizeIndex, -newDelta, newSizes, undefined, undefined, newMinDelta, newMaxDelta);\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    onSashEnd(index) {\n        this._onDidSashChange.fire(index);\n        this.sashDragState.disposable.dispose();\n        this.saveProportions();\n        for (const item of this.viewItems) {\n            item.enabled = true;\n        }\n    }\n    onViewChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        if (this.inverseAltBehavior && index > 0) {\n            // In this case, we want the view to grow or shrink both sides equally\n            // so we just resize the \"left\" side by half and let `resize` do the clamping magic\n            this.resize(index - 1, Math.floor((item.size - size) / 2));\n            this.distributeEmptySpace();\n            this.layoutViews();\n        }\n        else {\n            item.size = size;\n            this.relayout([index], undefined);\n        }\n    }\n    /**\n     * Resize a {@link IView view} within the {@link SplitView}.\n     *\n     * @param index The {@link IView view} index.\n     * @param size The {@link IView view} size.\n     */\n    resizeView(index, size) {\n        if (this.state !== State.Idle) {\n            throw new Error('Cant modify splitview');\n        }\n        this.state = State.Busy;\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter(i => i !== index);\n        const lowPriorityIndexes = [...indexes.filter(i => this.viewItems[i].priority === 1 /* LayoutPriority.Low */), index];\n        const highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 2 /* LayoutPriority.High */);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this.size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n        this.state = State.Idle;\n    }\n    /**\n     * Distribute the entire {@link SplitView} size among all {@link IView views}.\n     */\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 1 /* LayoutPriority.Low */);\n        const highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 2 /* LayoutPriority.High */);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    /**\n     * Returns the size of a {@link IView view}.\n     */\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    doAddView(view, size, index = this.viewItems.length, skipLayout) {\n        if (this.state !== State.Idle) {\n            throw new Error('Cant modify splitview');\n        }\n        this.state = State.Busy;\n        // Add view\n        const container = $('.split-view-view');\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        const onChangeDisposable = view.onDidChange(size => this.onViewChange(item, size));\n        const containerDisposable = toDisposable(() => this.viewContainer.removeChild(container));\n        const disposable = combinedDisposable(onChangeDisposable, containerDisposable);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const item = this.orientation === 0 /* Orientation.VERTICAL */\n            ? new VerticalViewItem(container, view, viewSize, disposable)\n            : new HorizontalViewItem(container, view, viewSize, disposable);\n        this.viewItems.splice(index, 0, item);\n        // Add sash\n        if (this.viewItems.length > 1) {\n            const opts = { orthogonalStartSash: this.orthogonalStartSash, orthogonalEndSash: this.orthogonalEndSash };\n            const sash = this.orientation === 0 /* Orientation.VERTICAL */\n                ? new Sash(this.sashContainer, { getHorizontalSashTop: s => this.getSashPosition(s), getHorizontalSashWidth: this.getSashOrthogonalSize }, Object.assign(Object.assign({}, opts), { orientation: 1 /* Orientation.HORIZONTAL */ }))\n                : new Sash(this.sashContainer, { getVerticalSashLeft: s => this.getSashPosition(s), getVerticalSashHeight: this.getSashOrthogonalSize }, Object.assign(Object.assign({}, opts), { orientation: 0 /* Orientation.VERTICAL */ }));\n            const sashEventMapper = this.orientation === 0 /* Orientation.VERTICAL */\n                ? (e) => ({ sash, start: e.startY, current: e.currentY, alt: e.altKey })\n                : (e) => ({ sash, start: e.startX, current: e.currentX, alt: e.altKey });\n            const onStart = Event.map(sash.onDidStart, sashEventMapper);\n            const onStartDisposable = onStart(this.onSashStart, this);\n            const onChange = Event.map(sash.onDidChange, sashEventMapper);\n            const onChangeDisposable = onChange(this.onSashChange, this);\n            const onEnd = Event.map(sash.onDidEnd, () => this.sashItems.findIndex(item => item.sash === sash));\n            const onEndDisposable = onEnd(this.onSashEnd, this);\n            const onDidResetDisposable = sash.onDidReset(() => {\n                const index = this.sashItems.findIndex(item => item.sash === sash);\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number' && !this.viewItems[snapBeforeIndex].visible) {\n                    return;\n                }\n                if (typeof snapAfterIndex === 'number' && !this.viewItems[snapAfterIndex].visible) {\n                    return;\n                }\n                this._onDidSashReset.fire(index);\n            });\n            const disposable = combinedDisposable(onStartDisposable, onChangeDisposable, onEndDisposable, onDidResetDisposable, sash);\n            const sashItem = { sash, disposable };\n            this.sashItems.splice(index - 1, 0, sashItem);\n        }\n        container.appendChild(view.element);\n        let highPriorityIndexes;\n        if (typeof size !== 'number' && size.type === 'split') {\n            highPriorityIndexes = [size.index];\n        }\n        if (!skipLayout) {\n            this.relayout([index], highPriorityIndexes);\n        }\n        this.state = State.Idle;\n        if (!skipLayout && typeof size !== 'number' && size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this.size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    resize(index, delta, sizes = this.viewItems.map(i => i.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return 0;\n        }\n        const upIndexes = range(index, -1);\n        const downIndexes = range(index + 1, this.viewItems.length);\n        if (highPriorityIndexes) {\n            for (const index of highPriorityIndexes) {\n                pushToStart(upIndexes, index);\n                pushToStart(downIndexes, index);\n            }\n        }\n        if (lowPriorityIndexes) {\n            for (const index of lowPriorityIndexes) {\n                pushToEnd(upIndexes, index);\n                pushToEnd(downIndexes, index);\n            }\n        }\n        const upItems = upIndexes.map(i => this.viewItems[i]);\n        const upSizes = upIndexes.map(i => sizes[i]);\n        const downItems = downIndexes.map(i => this.viewItems[i]);\n        const downSizes = downIndexes.map(i => sizes[i]);\n        const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n        const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].maximumSize - sizes[i]), 0);\n        const maxDeltaDown = downIndexes.length === 0 ? Number.POSITIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].minimumSize), 0);\n        const minDeltaDown = downIndexes.length === 0 ? Number.NEGATIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].maximumSize), 0);\n        const minDelta = Math.max(minDeltaUp, minDeltaDown, overloadMinDelta);\n        const maxDelta = Math.min(maxDeltaDown, maxDeltaUp, overloadMaxDelta);\n        let snapped = false;\n        if (snapBefore) {\n            const snapView = this.viewItems[snapBefore.index];\n            const visible = delta >= snapBefore.limitDelta;\n            snapped = visible !== snapView.visible;\n            snapView.setVisible(visible, snapBefore.size);\n        }\n        if (!snapped && snapAfter) {\n            const snapView = this.viewItems[snapAfter.index];\n            const visible = delta < snapAfter.limitDelta;\n            snapped = visible !== snapView.visible;\n            snapView.setVisible(visible, snapAfter.size);\n        }\n        if (snapped) {\n            return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n        }\n        delta = clamp(delta, minDelta, maxDelta);\n        for (let i = 0, deltaUp = delta; i < upItems.length; i++) {\n            const item = upItems[i];\n            const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n            const viewDelta = size - upSizes[i];\n            deltaUp -= viewDelta;\n            item.size = size;\n        }\n        for (let i = 0, deltaDown = delta; i < downItems.length; i++) {\n            const item = downItems[i];\n            const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n            const viewDelta = size - downSizes[i];\n            deltaDown += viewDelta;\n            item.size = size;\n        }\n        return delta;\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 1 /* LayoutPriority.Low */);\n        const highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 2 /* LayoutPriority.High */);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    layoutViews() {\n        // Save new content size\n        this.contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        // Layout views\n        let offset = 0;\n        for (const viewItem of this.viewItems) {\n            viewItem.layout(offset, this.layoutContext);\n            offset += viewItem.size;\n        }\n        // Layout sashes\n        this.sashItems.forEach(item => item.sash.layout());\n        this.updateSashEnablement();\n        this.updateScrollableElement();\n    }\n    updateScrollableElement() {\n        if (this.orientation === 0 /* Orientation.VERTICAL */) {\n            this.scrollableElement.setScrollDimensions({\n                height: this.size,\n                scrollHeight: this.contentSize\n            });\n        }\n        else {\n            this.scrollableElement.setScrollDimensions({\n                width: this.size,\n                scrollWidth: this.contentSize\n            });\n        }\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map(i => previous = (i.size - i.minimumSize > 0) || previous);\n        previous = false;\n        const expandsDown = this.viewItems.map(i => previous = (i.maximumSize - i.size > 0) || previous);\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews.map(i => previous = (i.size - i.minimumSize > 0) || previous).reverse();\n        previous = false;\n        const expandsUp = reverseViews.map(i => previous = (i.maximumSize - i.size > 0) || previous).reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashItems.length; index++) {\n            const { sash } = this.sashItems[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' && !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' && !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore && collapsesUp[index] && (position > 0 || this.startSnappingEnabled)) {\n                    sash.state = 1 /* SashState.AtMinimum */;\n                }\n                else if (snappedAfter && collapsesDown[index] && (position < this.contentSize || this.endSnappingEnabled)) {\n                    sash.state = 2 /* SashState.AtMaximum */;\n                }\n                else {\n                    sash.state = 0 /* SashState.Disabled */;\n                }\n            }\n            else if (min && !max) {\n                sash.state = 1 /* SashState.AtMinimum */;\n            }\n            else if (!min && max) {\n                sash.state = 2 /* SashState.AtMaximum */;\n            }\n            else {\n                sash.state = 3 /* SashState.Enabled */;\n            }\n        }\n    }\n    getSashPosition(sash) {\n        let position = 0;\n        for (let i = 0; i < this.sashItems.length; i++) {\n            position += this.viewItems[i].size;\n            if (this.sashItems[i].sash === sash) {\n                return position;\n            }\n        }\n        return 0;\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible && viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    dispose() {\n        super.dispose();\n        dispose(this.viewItems);\n        this.viewItems = [];\n        this.sashItems.forEach(i => i.disposable.dispose());\n        this.sashItems = [];\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, append, clearNode, createStyleSheet } from '../../dom.js';\nimport { List } from '../list/listWidget.js';\nimport { SplitView } from '../splitview/splitview.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { DisposableStore } from '../../../common/lifecycle.js';\nimport './table.css';\nclass TableListRenderer {\n    constructor(columns, renderers, getColumnSize) {\n        this.columns = columns;\n        this.getColumnSize = getColumnSize;\n        this.templateId = TableListRenderer.TemplateId;\n        this.renderedTemplates = new Set();\n        const rendererMap = new Map(renderers.map(r => [r.templateId, r]));\n        this.renderers = [];\n        for (const column of columns) {\n            const renderer = rendererMap.get(column.templateId);\n            if (!renderer) {\n                throw new Error(`Table cell renderer for template id ${column.templateId} not found.`);\n            }\n            this.renderers.push(renderer);\n        }\n    }\n    renderTemplate(container) {\n        const rowContainer = append(container, $('.monaco-table-tr'));\n        const cellContainers = [];\n        const cellTemplateData = [];\n        for (let i = 0; i < this.columns.length; i++) {\n            const renderer = this.renderers[i];\n            const cellContainer = append(rowContainer, $('.monaco-table-td', { 'data-col-index': i }));\n            cellContainer.style.width = `${this.getColumnSize(i)}px`;\n            cellContainers.push(cellContainer);\n            cellTemplateData.push(renderer.renderTemplate(cellContainer));\n        }\n        const result = { container, cellContainers, cellTemplateData };\n        this.renderedTemplates.add(result);\n        return result;\n    }\n    renderElement(element, index, templateData, height) {\n        for (let i = 0; i < this.columns.length; i++) {\n            const column = this.columns[i];\n            const cell = column.project(element);\n            const renderer = this.renderers[i];\n            renderer.renderElement(cell, index, templateData.cellTemplateData[i], height);\n        }\n    }\n    disposeElement(element, index, templateData, height) {\n        for (let i = 0; i < this.columns.length; i++) {\n            const renderer = this.renderers[i];\n            if (renderer.disposeElement) {\n                const column = this.columns[i];\n                const cell = column.project(element);\n                renderer.disposeElement(cell, index, templateData.cellTemplateData[i], height);\n            }\n        }\n    }\n    disposeTemplate(templateData) {\n        for (let i = 0; i < this.columns.length; i++) {\n            const renderer = this.renderers[i];\n            renderer.disposeTemplate(templateData.cellTemplateData[i]);\n        }\n        clearNode(templateData.container);\n        this.renderedTemplates.delete(templateData);\n    }\n    layoutColumn(index, size) {\n        for (const { cellContainers } of this.renderedTemplates) {\n            cellContainers[index].style.width = `${size}px`;\n        }\n    }\n}\nTableListRenderer.TemplateId = 'row';\nfunction asListVirtualDelegate(delegate) {\n    return {\n        getHeight(row) { return delegate.getHeight(row); },\n        getTemplateId() { return TableListRenderer.TemplateId; },\n    };\n}\nclass ColumnHeader {\n    constructor(column, index) {\n        this.column = column;\n        this.index = index;\n        this._onDidLayout = new Emitter();\n        this.onDidLayout = this._onDidLayout.event;\n        this.element = $('.monaco-table-th', { 'data-col-index': index, title: column.tooltip }, column.label);\n    }\n    get minimumSize() { var _a; return (_a = this.column.minimumWidth) !== null && _a !== void 0 ? _a : 120; }\n    get maximumSize() { var _a; return (_a = this.column.maximumWidth) !== null && _a !== void 0 ? _a : Number.POSITIVE_INFINITY; }\n    get onDidChange() { var _a; return (_a = this.column.onDidChangeWidthConstraints) !== null && _a !== void 0 ? _a : Event.None; }\n    layout(size) {\n        this._onDidLayout.fire([this.index, size]);\n    }\n}\nexport class Table {\n    constructor(user, container, virtualDelegate, columns, renderers, _options) {\n        this.virtualDelegate = virtualDelegate;\n        this.domId = `table_id_${++Table.InstanceCount}`;\n        this.disposables = new DisposableStore();\n        this.cachedWidth = 0;\n        this.cachedHeight = 0;\n        this.domNode = append(container, $(`.monaco-table.${this.domId}`));\n        const headers = columns.map((c, i) => new ColumnHeader(c, i));\n        const descriptor = {\n            size: headers.reduce((a, b) => a + b.column.weight, 0),\n            views: headers.map(view => ({ size: view.column.weight, view }))\n        };\n        this.splitview = this.disposables.add(new SplitView(this.domNode, {\n            orientation: 1 /* Orientation.HORIZONTAL */,\n            scrollbarVisibility: 2 /* ScrollbarVisibility.Hidden */,\n            getSashOrthogonalSize: () => this.cachedHeight,\n            descriptor\n        }));\n        this.splitview.el.style.height = `${virtualDelegate.headerRowHeight}px`;\n        this.splitview.el.style.lineHeight = `${virtualDelegate.headerRowHeight}px`;\n        const renderer = new TableListRenderer(columns, renderers, i => this.splitview.getViewSize(i));\n        this.list = this.disposables.add(new List(user, this.domNode, asListVirtualDelegate(virtualDelegate), [renderer], _options));\n        Event.any(...headers.map(h => h.onDidLayout))(([index, size]) => renderer.layoutColumn(index, size), null, this.disposables);\n        this.splitview.onDidSashReset(index => {\n            const totalWeight = columns.reduce((r, c) => r + c.weight, 0);\n            const size = columns[index].weight / totalWeight * this.cachedWidth;\n            this.splitview.resizeView(index, size);\n        }, null, this.disposables);\n        this.styleElement = createStyleSheet(this.domNode);\n        this.style({});\n    }\n    get onDidChangeFocus() { return this.list.onDidChangeFocus; }\n    get onDidChangeSelection() { return this.list.onDidChangeSelection; }\n    get onMouseDblClick() { return this.list.onMouseDblClick; }\n    get onPointer() { return this.list.onPointer; }\n    get onDidFocus() { return this.list.onDidFocus; }\n    get onDidDispose() { return this.list.onDidDispose; }\n    updateOptions(options) {\n        this.list.updateOptions(options);\n    }\n    splice(start, deleteCount, elements = []) {\n        this.list.splice(start, deleteCount, elements);\n    }\n    getHTMLElement() {\n        return this.domNode;\n    }\n    style(styles) {\n        const content = [];\n        content.push(`.monaco-table.${this.domId} > .monaco-split-view2 .monaco-sash.vertical::before {\n\t\t\ttop: ${this.virtualDelegate.headerRowHeight + 1}px;\n\t\t\theight: calc(100% - ${this.virtualDelegate.headerRowHeight}px);\n\t\t}`);\n        this.styleElement.textContent = content.join('\\n');\n        this.list.style(styles);\n    }\n    getSelectedElements() {\n        return this.list.getSelectedElements();\n    }\n    getSelection() {\n        return this.list.getSelection();\n    }\n    getFocus() {\n        return this.list.getFocus();\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\nTable.InstanceCount = 0;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Widget } from '../widget.js';\nimport { CSSIcon } from '../../../common/codicons.js';\nimport { Color } from '../../../common/color.js';\nimport { Emitter } from '../../../common/event.js';\nimport './toggle.css';\nconst defaultOpts = {\n    inputActiveOptionBorder: Color.fromHex('#007ACC00'),\n    inputActiveOptionForeground: Color.fromHex('#FFFFFF'),\n    inputActiveOptionBackground: Color.fromHex('#0E639C50')\n};\nexport class Toggle extends Widget {\n    constructor(opts) {\n        super();\n        this._onChange = this._register(new Emitter());\n        this.onChange = this._onChange.event;\n        this._onKeyDown = this._register(new Emitter());\n        this.onKeyDown = this._onKeyDown.event;\n        this._opts = Object.assign(Object.assign({}, defaultOpts), opts);\n        this._checked = this._opts.isChecked;\n        const classes = ['monaco-custom-toggle'];\n        if (this._opts.icon) {\n            this._icon = this._opts.icon;\n            classes.push(...CSSIcon.asClassNameArray(this._icon));\n        }\n        if (this._opts.actionClassName) {\n            classes.push(...this._opts.actionClassName.split(' '));\n        }\n        if (this._checked) {\n            classes.push('checked');\n        }\n        this.domNode = document.createElement('div');\n        this.domNode.title = this._opts.title;\n        this.domNode.classList.add(...classes);\n        if (!this._opts.notFocusable) {\n            this.domNode.tabIndex = 0;\n        }\n        this.domNode.setAttribute('role', 'checkbox');\n        this.domNode.setAttribute('aria-checked', String(this._checked));\n        this.domNode.setAttribute('aria-label', this._opts.title);\n        this.applyStyles();\n        this.onclick(this.domNode, (ev) => {\n            if (this.enabled) {\n                this.checked = !this._checked;\n                this._onChange.fire(false);\n                ev.preventDefault();\n            }\n        });\n        this.ignoreGesture(this.domNode);\n        this.onkeydown(this.domNode, (keyboardEvent) => {\n            if (keyboardEvent.keyCode === 10 /* KeyCode.Space */ || keyboardEvent.keyCode === 3 /* KeyCode.Enter */) {\n                this.checked = !this._checked;\n                this._onChange.fire(true);\n                keyboardEvent.preventDefault();\n                keyboardEvent.stopPropagation();\n                return;\n            }\n            this._onKeyDown.fire(keyboardEvent);\n        });\n    }\n    get enabled() {\n        return this.domNode.getAttribute('aria-disabled') !== 'true';\n    }\n    focus() {\n        this.domNode.focus();\n    }\n    get checked() {\n        return this._checked;\n    }\n    set checked(newIsChecked) {\n        this._checked = newIsChecked;\n        this.domNode.setAttribute('aria-checked', String(this._checked));\n        this.domNode.classList.toggle('checked', this._checked);\n        this.applyStyles();\n    }\n    width() {\n        return 2 /*margin left*/ + 2 /*border*/ + 2 /*padding*/ + 16 /* icon width */;\n    }\n    style(styles) {\n        if (styles.inputActiveOptionBorder) {\n            this._opts.inputActiveOptionBorder = styles.inputActiveOptionBorder;\n        }\n        if (styles.inputActiveOptionForeground) {\n            this._opts.inputActiveOptionForeground = styles.inputActiveOptionForeground;\n        }\n        if (styles.inputActiveOptionBackground) {\n            this._opts.inputActiveOptionBackground = styles.inputActiveOptionBackground;\n        }\n        this.applyStyles();\n    }\n    applyStyles() {\n        if (this.domNode) {\n            this.domNode.style.borderColor = this._checked && this._opts.inputActiveOptionBorder ? this._opts.inputActiveOptionBorder.toString() : '';\n            this.domNode.style.color = this._checked && this._opts.inputActiveOptionForeground ? this._opts.inputActiveOptionForeground.toString() : 'inherit';\n            this.domNode.style.backgroundColor = this._checked && this._opts.inputActiveOptionBackground ? this._opts.inputActiveOptionBackground.toString() : '';\n        }\n    }\n    enable() {\n        this.domNode.setAttribute('aria-disabled', String(false));\n    }\n    disable() {\n        this.domNode.setAttribute('aria-disabled', String(true));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { $, append, clearNode, createStyleSheet, h, hasParentWithClass } from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { ActionBar } from '../actionbar/actionbar.js';\nimport { FindInput } from '../findinput/findInput.js';\nimport { ElementsDragAndDropData } from '../list/listView.js';\nimport { isButton, isInputElement, isMonacoEditor, List, MouseController } from '../list/listWidget.js';\nimport { Toggle } from '../toggle/toggle.js';\nimport { getVisibleState, isFilterResult } from './indexTreeModel.js';\nimport { TreeMouseEventTarget } from './tree.js';\nimport { Action } from '../../../common/actions.js';\nimport { distinct, equals, range } from '../../../common/arrays.js';\nimport { disposableTimeout, timeout } from '../../../common/async.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { SetMap } from '../../../common/collections.js';\nimport { Emitter, Event, EventBufferer, Relay } from '../../../common/event.js';\nimport { fuzzyScore, FuzzyScore } from '../../../common/filters.js';\nimport { Disposable, DisposableStore, dispose, toDisposable } from '../../../common/lifecycle.js';\nimport { clamp } from '../../../common/numbers.js';\nimport { isNumber } from '../../../common/types.js';\nimport './media/tree.css';\nimport { localize } from '../../../../nls.js';\nclass TreeElementsDragAndDropData extends ElementsDragAndDropData {\n    constructor(data) {\n        super(data.elements.map(node => node.element));\n        this.data = data;\n    }\n}\nfunction asTreeDragAndDropData(data) {\n    if (data instanceof ElementsDragAndDropData) {\n        return new TreeElementsDragAndDropData(data);\n    }\n    return data;\n}\nclass TreeNodeListDragAndDrop {\n    constructor(modelProvider, dnd) {\n        this.modelProvider = modelProvider;\n        this.dnd = dnd;\n        this.autoExpandDisposable = Disposable.None;\n    }\n    getDragURI(node) {\n        return this.dnd.getDragURI(node.element);\n    }\n    getDragLabel(nodes, originalEvent) {\n        if (this.dnd.getDragLabel) {\n            return this.dnd.getDragLabel(nodes.map(node => node.element), originalEvent);\n        }\n        return undefined;\n    }\n    onDragStart(data, originalEvent) {\n        var _a, _b;\n        (_b = (_a = this.dnd).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, asTreeDragAndDropData(data), originalEvent);\n    }\n    onDragOver(data, targetNode, targetIndex, originalEvent, raw = true) {\n        const result = this.dnd.onDragOver(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n        const didChangeAutoExpandNode = this.autoExpandNode !== targetNode;\n        if (didChangeAutoExpandNode) {\n            this.autoExpandDisposable.dispose();\n            this.autoExpandNode = targetNode;\n        }\n        if (typeof targetNode === 'undefined') {\n            return result;\n        }\n        if (didChangeAutoExpandNode && typeof result !== 'boolean' && result.autoExpand) {\n            this.autoExpandDisposable = disposableTimeout(() => {\n                const model = this.modelProvider();\n                const ref = model.getNodeLocation(targetNode);\n                if (model.isCollapsed(ref)) {\n                    model.setCollapsed(ref, false);\n                }\n                this.autoExpandNode = undefined;\n            }, 500);\n        }\n        if (typeof result === 'boolean' || !result.accept || typeof result.bubble === 'undefined' || result.feedback) {\n            if (!raw) {\n                const accept = typeof result === 'boolean' ? result : result.accept;\n                const effect = typeof result === 'boolean' ? undefined : result.effect;\n                return { accept, effect, feedback: [targetIndex] };\n            }\n            return result;\n        }\n        if (result.bubble === 1 /* TreeDragOverBubble.Up */) {\n            const model = this.modelProvider();\n            const ref = model.getNodeLocation(targetNode);\n            const parentRef = model.getParentNodeLocation(ref);\n            const parentNode = model.getNode(parentRef);\n            const parentIndex = parentRef && model.getListIndex(parentRef);\n            return this.onDragOver(data, parentNode, parentIndex, originalEvent, false);\n        }\n        const model = this.modelProvider();\n        const ref = model.getNodeLocation(targetNode);\n        const start = model.getListIndex(ref);\n        const length = model.getListRenderCount(ref);\n        return Object.assign(Object.assign({}, result), { feedback: range(start, start + length) });\n    }\n    drop(data, targetNode, targetIndex, originalEvent) {\n        this.autoExpandDisposable.dispose();\n        this.autoExpandNode = undefined;\n        this.dnd.drop(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n    }\n    onDragEnd(originalEvent) {\n        var _a, _b;\n        (_b = (_a = this.dnd).onDragEnd) === null || _b === void 0 ? void 0 : _b.call(_a, originalEvent);\n    }\n}\nfunction asListOptions(modelProvider, options) {\n    return options && Object.assign(Object.assign({}, options), { identityProvider: options.identityProvider && {\n            getId(el) {\n                return options.identityProvider.getId(el.element);\n            }\n        }, dnd: options.dnd && new TreeNodeListDragAndDrop(modelProvider, options.dnd), multipleSelectionController: options.multipleSelectionController && {\n            isSelectionSingleChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionSingleChangeEvent(Object.assign(Object.assign({}, e), { element: e.element }));\n            },\n            isSelectionRangeChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionRangeChangeEvent(Object.assign(Object.assign({}, e), { element: e.element }));\n            }\n        }, accessibilityProvider: options.accessibilityProvider && Object.assign(Object.assign({}, options.accessibilityProvider), { getSetSize(node) {\n                const model = modelProvider();\n                const ref = model.getNodeLocation(node);\n                const parentRef = model.getParentNodeLocation(ref);\n                const parentNode = model.getNode(parentRef);\n                return parentNode.visibleChildrenCount;\n            },\n            getPosInSet(node) {\n                return node.visibleChildIndex + 1;\n            }, isChecked: options.accessibilityProvider && options.accessibilityProvider.isChecked ? (node) => {\n                return options.accessibilityProvider.isChecked(node.element);\n            } : undefined, getRole: options.accessibilityProvider && options.accessibilityProvider.getRole ? (node) => {\n                return options.accessibilityProvider.getRole(node.element);\n            } : () => 'treeitem', getAriaLabel(e) {\n                return options.accessibilityProvider.getAriaLabel(e.element);\n            },\n            getWidgetAriaLabel() {\n                return options.accessibilityProvider.getWidgetAriaLabel();\n            }, getWidgetRole: options.accessibilityProvider && options.accessibilityProvider.getWidgetRole ? () => options.accessibilityProvider.getWidgetRole() : () => 'tree', getAriaLevel: options.accessibilityProvider && options.accessibilityProvider.getAriaLevel ? (node) => options.accessibilityProvider.getAriaLevel(node.element) : (node) => {\n                return node.depth;\n            }, getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && (node => {\n                return options.accessibilityProvider.getActiveDescendantId(node.element);\n            }) }), keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && Object.assign(Object.assign({}, options.keyboardNavigationLabelProvider), { getKeyboardNavigationLabel(node) {\n                return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(node.element);\n            } }) });\n}\nexport class ComposedTreeDelegate {\n    constructor(delegate) {\n        this.delegate = delegate;\n    }\n    getHeight(element) {\n        return this.delegate.getHeight(element.element);\n    }\n    getTemplateId(element) {\n        return this.delegate.getTemplateId(element.element);\n    }\n    hasDynamicHeight(element) {\n        return !!this.delegate.hasDynamicHeight && this.delegate.hasDynamicHeight(element.element);\n    }\n    setDynamicHeight(element, height) {\n        var _a, _b;\n        (_b = (_a = this.delegate).setDynamicHeight) === null || _b === void 0 ? void 0 : _b.call(_a, element.element, height);\n    }\n}\nexport var RenderIndentGuides;\n(function (RenderIndentGuides) {\n    RenderIndentGuides[\"None\"] = \"none\";\n    RenderIndentGuides[\"OnHover\"] = \"onHover\";\n    RenderIndentGuides[\"Always\"] = \"always\";\n})(RenderIndentGuides || (RenderIndentGuides = {}));\nclass EventCollection {\n    constructor(onDidChange, _elements = []) {\n        this._elements = _elements;\n        this.disposables = new DisposableStore();\n        this.onDidChange = Event.forEach(onDidChange, elements => this._elements = elements, this.disposables);\n    }\n    get elements() {\n        return this._elements;\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\nclass TreeRenderer {\n    constructor(renderer, modelProvider, onDidChangeCollapseState, activeNodes, options = {}) {\n        var _a;\n        this.renderer = renderer;\n        this.modelProvider = modelProvider;\n        this.activeNodes = activeNodes;\n        this.renderedElements = new Map();\n        this.renderedNodes = new Map();\n        this.indent = TreeRenderer.DefaultIndent;\n        this.hideTwistiesOfChildlessElements = false;\n        this.shouldRenderIndentGuides = false;\n        this.renderedIndentGuides = new SetMap();\n        this.activeIndentNodes = new Set();\n        this.indentGuidesDisposable = Disposable.None;\n        this.disposables = new DisposableStore();\n        this.templateId = renderer.templateId;\n        this.updateOptions(options);\n        Event.map(onDidChangeCollapseState, e => e.node)(this.onDidChangeNodeTwistieState, this, this.disposables);\n        (_a = renderer.onDidChangeTwistieState) === null || _a === void 0 ? void 0 : _a.call(renderer, this.onDidChangeTwistieState, this, this.disposables);\n    }\n    updateOptions(options = {}) {\n        if (typeof options.indent !== 'undefined') {\n            this.indent = clamp(options.indent, 0, 40);\n        }\n        if (typeof options.renderIndentGuides !== 'undefined') {\n            const shouldRenderIndentGuides = options.renderIndentGuides !== RenderIndentGuides.None;\n            if (shouldRenderIndentGuides !== this.shouldRenderIndentGuides) {\n                this.shouldRenderIndentGuides = shouldRenderIndentGuides;\n                this.indentGuidesDisposable.dispose();\n                if (shouldRenderIndentGuides) {\n                    const disposables = new DisposableStore();\n                    this.activeNodes.onDidChange(this._onDidChangeActiveNodes, this, disposables);\n                    this.indentGuidesDisposable = disposables;\n                    this._onDidChangeActiveNodes(this.activeNodes.elements);\n                }\n            }\n        }\n        if (typeof options.hideTwistiesOfChildlessElements !== 'undefined') {\n            this.hideTwistiesOfChildlessElements = options.hideTwistiesOfChildlessElements;\n        }\n    }\n    renderTemplate(container) {\n        const el = append(container, $('.monaco-tl-row'));\n        const indent = append(el, $('.monaco-tl-indent'));\n        const twistie = append(el, $('.monaco-tl-twistie'));\n        const contents = append(el, $('.monaco-tl-contents'));\n        const templateData = this.renderer.renderTemplate(contents);\n        return { container, indent, twistie, indentGuidesDisposable: Disposable.None, templateData };\n    }\n    renderElement(node, index, templateData, height) {\n        if (typeof height === 'number') {\n            this.renderedNodes.set(node, { templateData, height });\n            this.renderedElements.set(node.element, node);\n        }\n        const indent = TreeRenderer.DefaultIndent + (node.depth - 1) * this.indent;\n        templateData.twistie.style.paddingLeft = `${indent}px`;\n        templateData.indent.style.width = `${indent + this.indent - 16}px`;\n        this.renderTwistie(node, templateData);\n        if (typeof height === 'number') {\n            this.renderIndentGuides(node, templateData);\n        }\n        this.renderer.renderElement(node, index, templateData.templateData, height);\n    }\n    disposeElement(node, index, templateData, height) {\n        var _a, _b;\n        templateData.indentGuidesDisposable.dispose();\n        (_b = (_a = this.renderer).disposeElement) === null || _b === void 0 ? void 0 : _b.call(_a, node, index, templateData.templateData, height);\n        if (typeof height === 'number') {\n            this.renderedNodes.delete(node);\n            this.renderedElements.delete(node.element);\n        }\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.templateData);\n    }\n    onDidChangeTwistieState(element) {\n        const node = this.renderedElements.get(element);\n        if (!node) {\n            return;\n        }\n        this.onDidChangeNodeTwistieState(node);\n    }\n    onDidChangeNodeTwistieState(node) {\n        const data = this.renderedNodes.get(node);\n        if (!data) {\n            return;\n        }\n        this.renderTwistie(node, data.templateData);\n        this._onDidChangeActiveNodes(this.activeNodes.elements);\n        this.renderIndentGuides(node, data.templateData);\n    }\n    renderTwistie(node, templateData) {\n        templateData.twistie.classList.remove(...Codicon.treeItemExpanded.classNamesArray);\n        let twistieRendered = false;\n        if (this.renderer.renderTwistie) {\n            twistieRendered = this.renderer.renderTwistie(node.element, templateData.twistie);\n        }\n        if (node.collapsible && (!this.hideTwistiesOfChildlessElements || node.visibleChildrenCount > 0)) {\n            if (!twistieRendered) {\n                templateData.twistie.classList.add(...Codicon.treeItemExpanded.classNamesArray);\n            }\n            templateData.twistie.classList.add('collapsible');\n            templateData.twistie.classList.toggle('collapsed', node.collapsed);\n        }\n        else {\n            templateData.twistie.classList.remove('collapsible', 'collapsed');\n        }\n        if (node.collapsible) {\n            templateData.container.setAttribute('aria-expanded', String(!node.collapsed));\n        }\n        else {\n            templateData.container.removeAttribute('aria-expanded');\n        }\n    }\n    renderIndentGuides(target, templateData) {\n        clearNode(templateData.indent);\n        templateData.indentGuidesDisposable.dispose();\n        if (!this.shouldRenderIndentGuides) {\n            return;\n        }\n        const disposableStore = new DisposableStore();\n        const model = this.modelProvider();\n        let node = target;\n        while (true) {\n            const ref = model.getNodeLocation(node);\n            const parentRef = model.getParentNodeLocation(ref);\n            if (!parentRef) {\n                break;\n            }\n            const parent = model.getNode(parentRef);\n            const guide = $('.indent-guide', { style: `width: ${this.indent}px` });\n            if (this.activeIndentNodes.has(parent)) {\n                guide.classList.add('active');\n            }\n            if (templateData.indent.childElementCount === 0) {\n                templateData.indent.appendChild(guide);\n            }\n            else {\n                templateData.indent.insertBefore(guide, templateData.indent.firstElementChild);\n            }\n            this.renderedIndentGuides.add(parent, guide);\n            disposableStore.add(toDisposable(() => this.renderedIndentGuides.delete(parent, guide)));\n            node = parent;\n        }\n        templateData.indentGuidesDisposable = disposableStore;\n    }\n    _onDidChangeActiveNodes(nodes) {\n        if (!this.shouldRenderIndentGuides) {\n            return;\n        }\n        const set = new Set();\n        const model = this.modelProvider();\n        nodes.forEach(node => {\n            const ref = model.getNodeLocation(node);\n            try {\n                const parentRef = model.getParentNodeLocation(ref);\n                if (node.collapsible && node.children.length > 0 && !node.collapsed) {\n                    set.add(node);\n                }\n                else if (parentRef) {\n                    set.add(model.getNode(parentRef));\n                }\n            }\n            catch (_a) {\n                // noop\n            }\n        });\n        this.activeIndentNodes.forEach(node => {\n            if (!set.has(node)) {\n                this.renderedIndentGuides.forEach(node, line => line.classList.remove('active'));\n            }\n        });\n        set.forEach(node => {\n            if (!this.activeIndentNodes.has(node)) {\n                this.renderedIndentGuides.forEach(node, line => line.classList.add('active'));\n            }\n        });\n        this.activeIndentNodes = set;\n    }\n    dispose() {\n        this.renderedNodes.clear();\n        this.renderedElements.clear();\n        this.indentGuidesDisposable.dispose();\n        dispose(this.disposables);\n    }\n}\nTreeRenderer.DefaultIndent = 8;\nclass FindFilter {\n    constructor(tree, keyboardNavigationLabelProvider, _filter) {\n        this.tree = tree;\n        this.keyboardNavigationLabelProvider = keyboardNavigationLabelProvider;\n        this._filter = _filter;\n        this._totalCount = 0;\n        this._matchCount = 0;\n        this._pattern = '';\n        this._lowercasePattern = '';\n        this.disposables = new DisposableStore();\n        tree.onWillRefilter(this.reset, this, this.disposables);\n    }\n    get totalCount() { return this._totalCount; }\n    get matchCount() { return this._matchCount; }\n    filter(element, parentVisibility) {\n        let visibility = 1 /* TreeVisibility.Visible */;\n        if (this._filter) {\n            const result = this._filter.filter(element, parentVisibility);\n            if (typeof result === 'boolean') {\n                visibility = result ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */;\n            }\n            else if (isFilterResult(result)) {\n                visibility = getVisibleState(result.visibility);\n            }\n            else {\n                visibility = result;\n            }\n            if (visibility === 0 /* TreeVisibility.Hidden */) {\n                return false;\n            }\n        }\n        this._totalCount++;\n        if (!this._pattern) {\n            this._matchCount++;\n            return { data: FuzzyScore.Default, visibility };\n        }\n        const label = this.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(element);\n        const labels = Array.isArray(label) ? label : [label];\n        for (const l of labels) {\n            const labelStr = l && l.toString();\n            if (typeof labelStr === 'undefined') {\n                return { data: FuzzyScore.Default, visibility };\n            }\n            const score = fuzzyScore(this._pattern, this._lowercasePattern, 0, labelStr, labelStr.toLowerCase(), 0, { firstMatchCanBeWeak: true, boostFullMatch: true });\n            if (score) {\n                this._matchCount++;\n                return labels.length === 1 ?\n                    { data: score, visibility } :\n                    { data: { label: labelStr, score: score }, visibility };\n            }\n        }\n        if (this.tree.findMode === TreeFindMode.Filter) {\n            return 2 /* TreeVisibility.Recurse */;\n        }\n        else {\n            return { data: FuzzyScore.Default, visibility };\n        }\n    }\n    reset() {\n        this._totalCount = 0;\n        this._matchCount = 0;\n    }\n    dispose() {\n        dispose(this.disposables);\n    }\n}\nexport class ModeToggle extends Toggle {\n    constructor(opts) {\n        var _a;\n        super({\n            icon: Codicon.filter,\n            title: localize('filter', \"Filter\"),\n            isChecked: (_a = opts === null || opts === void 0 ? void 0 : opts.isChecked) !== null && _a !== void 0 ? _a : false,\n            inputActiveOptionBorder: opts === null || opts === void 0 ? void 0 : opts.inputActiveOptionBorder,\n            inputActiveOptionForeground: opts === null || opts === void 0 ? void 0 : opts.inputActiveOptionForeground,\n            inputActiveOptionBackground: opts === null || opts === void 0 ? void 0 : opts.inputActiveOptionBackground\n        });\n    }\n}\nexport var TreeFindMode;\n(function (TreeFindMode) {\n    TreeFindMode[TreeFindMode[\"Highlight\"] = 0] = \"Highlight\";\n    TreeFindMode[TreeFindMode[\"Filter\"] = 1] = \"Filter\";\n})(TreeFindMode || (TreeFindMode = {}));\nclass FindWidget extends Disposable {\n    constructor(container, tree, contextViewProvider, mode, options) {\n        super();\n        this.tree = tree;\n        this.elements = h('.monaco-tree-type-filter', [\n            h('.monaco-tree-type-filter-grab.codicon.codicon-debug-gripper@grab', { tabIndex: 0 }),\n            h('.monaco-tree-type-filter-input@findInput'),\n            h('.monaco-tree-type-filter-actionbar@actionbar'),\n        ]);\n        this.width = 0;\n        this.right = 0;\n        this._onDidDisable = new Emitter();\n        container.appendChild(this.elements.root);\n        this._register(toDisposable(() => container.removeChild(this.elements.root)));\n        this.modeToggle = this._register(new ModeToggle(Object.assign(Object.assign({}, options), { isChecked: mode === TreeFindMode.Filter })));\n        this.onDidChangeMode = Event.map(this.modeToggle.onChange, () => this.modeToggle.checked ? TreeFindMode.Filter : TreeFindMode.Highlight, this._store);\n        this.findInput = this._register(new FindInput(this.elements.findInput, contextViewProvider, false, {\n            label: localize('type to search', \"Type to search\"),\n            additionalToggles: [this.modeToggle]\n        }));\n        this.actionbar = this._register(new ActionBar(this.elements.actionbar));\n        this.mode = mode;\n        const emitter = this._register(new DomEmitter(this.findInput.inputBox.inputElement, 'keydown'));\n        const onKeyDown = this._register(Event.chain(emitter.event))\n            .map(e => new StandardKeyboardEvent(e))\n            .event;\n        this._register(onKeyDown((e) => {\n            switch (e.keyCode) {\n                case 18 /* KeyCode.DownArrow */:\n                    e.preventDefault();\n                    e.stopPropagation();\n                    this.tree.domFocus();\n                    return;\n            }\n        }));\n        const closeAction = this._register(new Action('close', localize('close', \"Close\"), 'codicon codicon-close', true, () => this.dispose()));\n        this.actionbar.push(closeAction, { icon: true, label: false });\n        const onGrabMouseDown = this._register(new DomEmitter(this.elements.grab, 'mousedown'));\n        this._register(onGrabMouseDown.event(e => {\n            const disposables = new DisposableStore();\n            const onWindowMouseMove = disposables.add(new DomEmitter(window, 'mousemove'));\n            const onWindowMouseUp = disposables.add(new DomEmitter(window, 'mouseup'));\n            const startRight = this.right;\n            const startX = e.pageX;\n            this.elements.grab.classList.add('grabbing');\n            const update = (e) => {\n                const deltaX = e.pageX - startX;\n                this.right = startRight - deltaX;\n                this.layout();\n            };\n            disposables.add(onWindowMouseMove.event(update));\n            disposables.add(onWindowMouseUp.event(e => {\n                update(e);\n                this.elements.grab.classList.remove('grabbing');\n                disposables.dispose();\n            }));\n        }));\n        const onGrabKeyDown = this._register(Event.chain(this._register(new DomEmitter(this.elements.grab, 'keydown')).event))\n            .map(e => new StandardKeyboardEvent(e))\n            .event;\n        this._register(onGrabKeyDown((e) => {\n            let right;\n            if (e.keyCode === 15 /* KeyCode.LeftArrow */) {\n                right = Number.POSITIVE_INFINITY;\n            }\n            else if (e.keyCode === 17 /* KeyCode.RightArrow */) {\n                right = 0;\n            }\n            else if (e.keyCode === 10 /* KeyCode.Space */) {\n                right = this.right === 0 ? Number.POSITIVE_INFINITY : 0;\n            }\n            if (right !== undefined) {\n                e.preventDefault();\n                e.stopPropagation();\n                this.right = right;\n                this.layout();\n            }\n        }));\n        this.onDidChangeValue = this.findInput.onDidChange;\n        this.style(options !== null && options !== void 0 ? options : {});\n    }\n    set mode(mode) {\n        this.modeToggle.checked = mode === TreeFindMode.Filter;\n        this.findInput.inputBox.setPlaceHolder(mode === TreeFindMode.Filter ? localize('type to filter', \"Type to filter\") : localize('type to search', \"Type to search\"));\n    }\n    style(styles) {\n        this.findInput.style(styles);\n        if (styles.listFilterWidgetBackground) {\n            this.elements.root.style.backgroundColor = styles.listFilterWidgetBackground.toString();\n        }\n        if (styles.listFilterWidgetShadow) {\n            this.elements.root.style.boxShadow = `0 0 8px 2px ${styles.listFilterWidgetShadow}`;\n        }\n    }\n    layout(width = this.width) {\n        this.width = width;\n        this.right = clamp(this.right, 0, Math.max(0, width - 212));\n        this.elements.root.style.right = `${this.right}px`;\n    }\n    showMessage(message) {\n        this.findInput.showMessage(message);\n    }\n    clearMessage() {\n        this.findInput.clearMessage();\n    }\n    dispose() {\n        const _super = Object.create(null, {\n            dispose: { get: () => super.dispose }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            this._onDidDisable.fire();\n            this.elements.root.classList.add('disabled');\n            yield timeout(300);\n            _super.dispose.call(this);\n        });\n    }\n}\nclass FindController {\n    constructor(tree, model, view, filter, contextViewProvider) {\n        var _a;\n        this.tree = tree;\n        this.view = view;\n        this.filter = filter;\n        this.contextViewProvider = contextViewProvider;\n        this._pattern = '';\n        this.width = 0;\n        this._onDidChangeMode = new Emitter();\n        this.onDidChangeMode = this._onDidChangeMode.event;\n        this._onDidChangePattern = new Emitter();\n        this._onDidChangeOpenState = new Emitter();\n        this.onDidChangeOpenState = this._onDidChangeOpenState.event;\n        this.enabledDisposables = new DisposableStore();\n        this.disposables = new DisposableStore();\n        this._mode = (_a = tree.options.defaultFindMode) !== null && _a !== void 0 ? _a : TreeFindMode.Highlight;\n        model.onDidSplice(this.onDidSpliceModel, this, this.disposables);\n    }\n    get pattern() { return this._pattern; }\n    get mode() { return this._mode; }\n    set mode(mode) {\n        if (mode === this._mode) {\n            return;\n        }\n        this._mode = mode;\n        if (this.widget) {\n            this.widget.mode = this._mode;\n        }\n        this.tree.refilter();\n        this.render();\n        this._onDidChangeMode.fire(mode);\n    }\n    onDidSpliceModel() {\n        if (!this.widget || this.pattern.length === 0) {\n            return;\n        }\n        this.tree.refilter();\n        this.render();\n    }\n    render() {\n        var _a, _b;\n        const noMatches = this.filter.totalCount > 0 && this.filter.matchCount === 0;\n        if (this.pattern && noMatches) {\n            (_a = this.widget) === null || _a === void 0 ? void 0 : _a.showMessage({ type: 2 /* MessageType.WARNING */, content: localize('not found', \"No elements found.\") });\n        }\n        else {\n            (_b = this.widget) === null || _b === void 0 ? void 0 : _b.clearMessage();\n        }\n    }\n    shouldAllowFocus(node) {\n        if (!this.widget || !this.pattern || this._mode === TreeFindMode.Filter) {\n            return true;\n        }\n        if (this.filter.totalCount > 0 && this.filter.matchCount <= 1) {\n            return true;\n        }\n        return !FuzzyScore.isDefault(node.filterData);\n    }\n    style(styles) {\n        var _a;\n        this.styles = styles;\n        (_a = this.widget) === null || _a === void 0 ? void 0 : _a.style(styles);\n    }\n    layout(width) {\n        var _a;\n        this.width = width;\n        (_a = this.widget) === null || _a === void 0 ? void 0 : _a.layout(width);\n    }\n    dispose() {\n        this._onDidChangePattern.dispose();\n        this.enabledDisposables.dispose();\n        this.disposables.dispose();\n    }\n}\nfunction asTreeMouseEvent(event) {\n    let target = TreeMouseEventTarget.Unknown;\n    if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-twistie', 'monaco-tl-row')) {\n        target = TreeMouseEventTarget.Twistie;\n    }\n    else if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-contents', 'monaco-tl-row')) {\n        target = TreeMouseEventTarget.Element;\n    }\n    else if (hasParentWithClass(event.browserEvent.target, 'monaco-tree-type-filter', 'monaco-list')) {\n        target = TreeMouseEventTarget.Filter;\n    }\n    return {\n        browserEvent: event.browserEvent,\n        element: event.element ? event.element.element : null,\n        target\n    };\n}\nfunction dfs(node, fn) {\n    fn(node);\n    node.children.forEach(child => dfs(child, fn));\n}\n/**\n * The trait concept needs to exist at the tree level, because collapsed\n * tree nodes will not be known by the list.\n */\nclass Trait {\n    constructor(getFirstViewElementWithTrait, identityProvider) {\n        this.getFirstViewElementWithTrait = getFirstViewElementWithTrait;\n        this.identityProvider = identityProvider;\n        this.nodes = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n    }\n    get nodeSet() {\n        if (!this._nodeSet) {\n            this._nodeSet = this.createNodeSet();\n        }\n        return this._nodeSet;\n    }\n    set(nodes, browserEvent) {\n        if (!(browserEvent === null || browserEvent === void 0 ? void 0 : browserEvent.__forceEvent) && equals(this.nodes, nodes)) {\n            return;\n        }\n        this._set(nodes, false, browserEvent);\n    }\n    _set(nodes, silent, browserEvent) {\n        this.nodes = [...nodes];\n        this.elements = undefined;\n        this._nodeSet = undefined;\n        if (!silent) {\n            const that = this;\n            this._onDidChange.fire({ get elements() { return that.get(); }, browserEvent });\n        }\n    }\n    get() {\n        if (!this.elements) {\n            this.elements = this.nodes.map(node => node.element);\n        }\n        return [...this.elements];\n    }\n    getNodes() {\n        return this.nodes;\n    }\n    has(node) {\n        return this.nodeSet.has(node);\n    }\n    onDidModelSplice({ insertedNodes, deletedNodes }) {\n        if (!this.identityProvider) {\n            const set = this.createNodeSet();\n            const visit = (node) => set.delete(node);\n            deletedNodes.forEach(node => dfs(node, visit));\n            this.set([...set.values()]);\n            return;\n        }\n        const deletedNodesIdSet = new Set();\n        const deletedNodesVisitor = (node) => deletedNodesIdSet.add(this.identityProvider.getId(node.element).toString());\n        deletedNodes.forEach(node => dfs(node, deletedNodesVisitor));\n        const insertedNodesMap = new Map();\n        const insertedNodesVisitor = (node) => insertedNodesMap.set(this.identityProvider.getId(node.element).toString(), node);\n        insertedNodes.forEach(node => dfs(node, insertedNodesVisitor));\n        const nodes = [];\n        for (const node of this.nodes) {\n            const id = this.identityProvider.getId(node.element).toString();\n            const wasDeleted = deletedNodesIdSet.has(id);\n            if (!wasDeleted) {\n                nodes.push(node);\n            }\n            else {\n                const insertedNode = insertedNodesMap.get(id);\n                if (insertedNode) {\n                    nodes.push(insertedNode);\n                }\n            }\n        }\n        if (this.nodes.length > 0 && nodes.length === 0) {\n            const node = this.getFirstViewElementWithTrait();\n            if (node) {\n                nodes.push(node);\n            }\n        }\n        this._set(nodes, true);\n    }\n    createNodeSet() {\n        const set = new Set();\n        for (const node of this.nodes) {\n            set.add(node);\n        }\n        return set;\n    }\n}\nclass TreeNodeListMouseController extends MouseController {\n    constructor(list, tree) {\n        super(list);\n        this.tree = tree;\n    }\n    onViewPointer(e) {\n        if (isButton(e.browserEvent.target) ||\n            isInputElement(e.browserEvent.target) ||\n            isMonacoEditor(e.browserEvent.target)) {\n            return;\n        }\n        const node = e.element;\n        if (!node) {\n            return super.onViewPointer(e);\n        }\n        if (this.isSelectionRangeChangeEvent(e) || this.isSelectionSingleChangeEvent(e)) {\n            return super.onViewPointer(e);\n        }\n        const target = e.browserEvent.target;\n        const onTwistie = target.classList.contains('monaco-tl-twistie')\n            || (target.classList.contains('monaco-icon-label') && target.classList.contains('folder-icon') && e.browserEvent.offsetX < 16);\n        let expandOnlyOnTwistieClick = false;\n        if (typeof this.tree.expandOnlyOnTwistieClick === 'function') {\n            expandOnlyOnTwistieClick = this.tree.expandOnlyOnTwistieClick(node.element);\n        }\n        else {\n            expandOnlyOnTwistieClick = !!this.tree.expandOnlyOnTwistieClick;\n        }\n        if (expandOnlyOnTwistieClick && !onTwistie && e.browserEvent.detail !== 2) {\n            return super.onViewPointer(e);\n        }\n        if (!this.tree.expandOnDoubleClick && e.browserEvent.detail === 2) {\n            return super.onViewPointer(e);\n        }\n        if (node.collapsible) {\n            const model = this.tree.model; // internal\n            const location = model.getNodeLocation(node);\n            const recursive = e.browserEvent.altKey;\n            this.tree.setFocus([location]);\n            model.setCollapsed(location, undefined, recursive);\n            if (expandOnlyOnTwistieClick && onTwistie) {\n                return;\n            }\n        }\n        super.onViewPointer(e);\n    }\n    onDoubleClick(e) {\n        const onTwistie = e.browserEvent.target.classList.contains('monaco-tl-twistie');\n        if (onTwistie || !this.tree.expandOnDoubleClick) {\n            return;\n        }\n        super.onDoubleClick(e);\n    }\n}\n/**\n * We use this List subclass to restore selection and focus as nodes\n * get rendered in the list, possibly due to a node expand() call.\n */\nclass TreeNodeList extends List {\n    constructor(user, container, virtualDelegate, renderers, focusTrait, selectionTrait, anchorTrait, options) {\n        super(user, container, virtualDelegate, renderers, options);\n        this.focusTrait = focusTrait;\n        this.selectionTrait = selectionTrait;\n        this.anchorTrait = anchorTrait;\n    }\n    createMouseController(options) {\n        return new TreeNodeListMouseController(this, options.tree);\n    }\n    splice(start, deleteCount, elements = []) {\n        super.splice(start, deleteCount, elements);\n        if (elements.length === 0) {\n            return;\n        }\n        const additionalFocus = [];\n        const additionalSelection = [];\n        let anchor;\n        elements.forEach((node, index) => {\n            if (this.focusTrait.has(node)) {\n                additionalFocus.push(start + index);\n            }\n            if (this.selectionTrait.has(node)) {\n                additionalSelection.push(start + index);\n            }\n            if (this.anchorTrait.has(node)) {\n                anchor = start + index;\n            }\n        });\n        if (additionalFocus.length > 0) {\n            super.setFocus(distinct([...super.getFocus(), ...additionalFocus]));\n        }\n        if (additionalSelection.length > 0) {\n            super.setSelection(distinct([...super.getSelection(), ...additionalSelection]));\n        }\n        if (typeof anchor === 'number') {\n            super.setAnchor(anchor);\n        }\n    }\n    setFocus(indexes, browserEvent, fromAPI = false) {\n        super.setFocus(indexes, browserEvent);\n        if (!fromAPI) {\n            this.focusTrait.set(indexes.map(i => this.element(i)), browserEvent);\n        }\n    }\n    setSelection(indexes, browserEvent, fromAPI = false) {\n        super.setSelection(indexes, browserEvent);\n        if (!fromAPI) {\n            this.selectionTrait.set(indexes.map(i => this.element(i)), browserEvent);\n        }\n    }\n    setAnchor(index, fromAPI = false) {\n        super.setAnchor(index);\n        if (!fromAPI) {\n            if (typeof index === 'undefined') {\n                this.anchorTrait.set([]);\n            }\n            else {\n                this.anchorTrait.set([this.element(index)]);\n            }\n        }\n    }\n}\nexport class AbstractTree {\n    constructor(_user, container, delegate, renderers, _options = {}) {\n        var _a;\n        this._user = _user;\n        this._options = _options;\n        this.eventBufferer = new EventBufferer();\n        this.onDidChangeFindOpenState = Event.None;\n        this.disposables = new DisposableStore();\n        this._onWillRefilter = new Emitter();\n        this.onWillRefilter = this._onWillRefilter.event;\n        this._onDidUpdateOptions = new Emitter();\n        const treeDelegate = new ComposedTreeDelegate(delegate);\n        const onDidChangeCollapseStateRelay = new Relay();\n        const onDidChangeActiveNodes = new Relay();\n        const activeNodes = this.disposables.add(new EventCollection(onDidChangeActiveNodes.event));\n        this.renderers = renderers.map(r => new TreeRenderer(r, () => this.model, onDidChangeCollapseStateRelay.event, activeNodes, _options));\n        for (const r of this.renderers) {\n            this.disposables.add(r);\n        }\n        let filter;\n        if (_options.keyboardNavigationLabelProvider) {\n            filter = new FindFilter(this, _options.keyboardNavigationLabelProvider, _options.filter);\n            _options = Object.assign(Object.assign({}, _options), { filter: filter }); // TODO need typescript help here\n            this.disposables.add(filter);\n        }\n        this.focus = new Trait(() => this.view.getFocusedElements()[0], _options.identityProvider);\n        this.selection = new Trait(() => this.view.getSelectedElements()[0], _options.identityProvider);\n        this.anchor = new Trait(() => this.view.getAnchorElement(), _options.identityProvider);\n        this.view = new TreeNodeList(_user, container, treeDelegate, this.renderers, this.focus, this.selection, this.anchor, Object.assign(Object.assign({}, asListOptions(() => this.model, _options)), { tree: this }));\n        this.model = this.createModel(_user, this.view, _options);\n        onDidChangeCollapseStateRelay.input = this.model.onDidChangeCollapseState;\n        const onDidModelSplice = Event.forEach(this.model.onDidSplice, e => {\n            this.eventBufferer.bufferEvents(() => {\n                this.focus.onDidModelSplice(e);\n                this.selection.onDidModelSplice(e);\n            });\n        }, this.disposables);\n        // Make sure the `forEach` always runs\n        onDidModelSplice(() => null, null, this.disposables);\n        // Active nodes can change when the model changes or when focus or selection change.\n        // We debounce it with 0 delay since these events may fire in the same stack and we only\n        // want to run this once. It also doesn't matter if it runs on the next tick since it's only\n        // a nice to have UI feature.\n        onDidChangeActiveNodes.input = Event.chain(Event.any(onDidModelSplice, this.focus.onDidChange, this.selection.onDidChange))\n            .debounce(() => null, 0)\n            .map(() => {\n            const set = new Set();\n            for (const node of this.focus.getNodes()) {\n                set.add(node);\n            }\n            for (const node of this.selection.getNodes()) {\n                set.add(node);\n            }\n            return [...set.values()];\n        }).event;\n        if (_options.keyboardSupport !== false) {\n            const onKeyDown = Event.chain(this.view.onKeyDown)\n                .filter(e => !isInputElement(e.target))\n                .map(e => new StandardKeyboardEvent(e));\n            onKeyDown.filter(e => e.keyCode === 15 /* KeyCode.LeftArrow */).on(this.onLeftArrow, this, this.disposables);\n            onKeyDown.filter(e => e.keyCode === 17 /* KeyCode.RightArrow */).on(this.onRightArrow, this, this.disposables);\n            onKeyDown.filter(e => e.keyCode === 10 /* KeyCode.Space */).on(this.onSpace, this, this.disposables);\n        }\n        if (((_a = _options.findWidgetEnabled) !== null && _a !== void 0 ? _a : true) && _options.keyboardNavigationLabelProvider && _options.contextViewProvider) {\n            this.findController = new FindController(this, this.model, this.view, filter, _options.contextViewProvider);\n            this.focusNavigationFilter = node => this.findController.shouldAllowFocus(node);\n            this.onDidChangeFindOpenState = this.findController.onDidChangeOpenState;\n            this.disposables.add(this.findController);\n            this.onDidChangeFindMode = this.findController.onDidChangeMode;\n        }\n        else {\n            this.onDidChangeFindMode = Event.None;\n        }\n        this.styleElement = createStyleSheet(this.view.getHTMLElement());\n        this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n    }\n    get onDidChangeFocus() { return this.eventBufferer.wrapEvent(this.focus.onDidChange); }\n    get onDidChangeSelection() { return this.eventBufferer.wrapEvent(this.selection.onDidChange); }\n    get onMouseDblClick() { return Event.filter(Event.map(this.view.onMouseDblClick, asTreeMouseEvent), e => e.target !== TreeMouseEventTarget.Filter); }\n    get onPointer() { return Event.map(this.view.onPointer, asTreeMouseEvent); }\n    get onDidFocus() { return this.view.onDidFocus; }\n    get onDidChangeModel() { return Event.signal(this.model.onDidSplice); }\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\n    get findMode() { var _a, _b; return (_b = (_a = this.findController) === null || _a === void 0 ? void 0 : _a.mode) !== null && _b !== void 0 ? _b : TreeFindMode.Highlight; }\n    set findMode(findMode) { if (this.findController) {\n        this.findController.mode = findMode;\n    } }\n    get expandOnDoubleClick() { return typeof this._options.expandOnDoubleClick === 'undefined' ? true : this._options.expandOnDoubleClick; }\n    get expandOnlyOnTwistieClick() { return typeof this._options.expandOnlyOnTwistieClick === 'undefined' ? true : this._options.expandOnlyOnTwistieClick; }\n    get onDidDispose() { return this.view.onDidDispose; }\n    updateOptions(optionsUpdate = {}) {\n        this._options = Object.assign(Object.assign({}, this._options), optionsUpdate);\n        for (const renderer of this.renderers) {\n            renderer.updateOptions(optionsUpdate);\n        }\n        this.view.updateOptions(this._options);\n        this._onDidUpdateOptions.fire(this._options);\n        this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n    }\n    get options() {\n        return this._options;\n    }\n    // Widget\n    getHTMLElement() {\n        return this.view.getHTMLElement();\n    }\n    get scrollTop() {\n        return this.view.scrollTop;\n    }\n    set scrollTop(scrollTop) {\n        this.view.scrollTop = scrollTop;\n    }\n    domFocus() {\n        this.view.domFocus();\n    }\n    layout(height, width) {\n        var _a;\n        this.view.layout(height, width);\n        if (isNumber(width)) {\n            (_a = this.findController) === null || _a === void 0 ? void 0 : _a.layout(width);\n        }\n    }\n    style(styles) {\n        var _a;\n        const suffix = `.${this.view.domId}`;\n        const content = [];\n        if (styles.treeIndentGuidesStroke) {\n            content.push(`.monaco-list${suffix}:hover .monaco-tl-indent > .indent-guide, .monaco-list${suffix}.always .monaco-tl-indent > .indent-guide  { border-color: ${styles.treeIndentGuidesStroke.transparent(0.4)}; }`);\n            content.push(`.monaco-list${suffix} .monaco-tl-indent > .indent-guide.active { border-color: ${styles.treeIndentGuidesStroke}; }`);\n        }\n        this.styleElement.textContent = content.join('\\n');\n        (_a = this.findController) === null || _a === void 0 ? void 0 : _a.style(styles);\n        this.view.style(styles);\n    }\n    // Tree navigation\n    getParentElement(location) {\n        const parentRef = this.model.getParentNodeLocation(location);\n        const parentNode = this.model.getNode(parentRef);\n        return parentNode.element;\n    }\n    getFirstElementChild(location) {\n        return this.model.getFirstElementChild(location);\n    }\n    // Tree\n    getNode(location) {\n        return this.model.getNode(location);\n    }\n    collapse(location, recursive = false) {\n        return this.model.setCollapsed(location, true, recursive);\n    }\n    expand(location, recursive = false) {\n        return this.model.setCollapsed(location, false, recursive);\n    }\n    isCollapsible(location) {\n        return this.model.isCollapsible(location);\n    }\n    setCollapsible(location, collapsible) {\n        return this.model.setCollapsible(location, collapsible);\n    }\n    isCollapsed(location) {\n        return this.model.isCollapsed(location);\n    }\n    refilter() {\n        this._onWillRefilter.fire(undefined);\n        this.model.refilter();\n    }\n    setSelection(elements, browserEvent) {\n        const nodes = elements.map(e => this.model.getNode(e));\n        this.selection.set(nodes, browserEvent);\n        const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n        this.view.setSelection(indexes, browserEvent, true);\n    }\n    getSelection() {\n        return this.selection.get();\n    }\n    setFocus(elements, browserEvent) {\n        const nodes = elements.map(e => this.model.getNode(e));\n        this.focus.set(nodes, browserEvent);\n        const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n        this.view.setFocus(indexes, browserEvent, true);\n    }\n    getFocus() {\n        return this.focus.get();\n    }\n    reveal(location, relativeTop) {\n        this.model.expandTo(location);\n        const index = this.model.getListIndex(location);\n        if (index === -1) {\n            return;\n        }\n        this.view.reveal(index, relativeTop);\n    }\n    // List\n    onLeftArrow(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const didChange = this.model.setCollapsed(location, true);\n        if (!didChange) {\n            const parentLocation = this.model.getParentNodeLocation(location);\n            if (!parentLocation) {\n                return;\n            }\n            const parentListIndex = this.model.getListIndex(parentLocation);\n            this.view.reveal(parentListIndex);\n            this.view.setFocus([parentListIndex]);\n        }\n    }\n    onRightArrow(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const didChange = this.model.setCollapsed(location, false);\n        if (!didChange) {\n            if (!node.children.some(child => child.visible)) {\n                return;\n            }\n            const [focusedIndex] = this.view.getFocus();\n            const firstChildIndex = focusedIndex + 1;\n            this.view.reveal(firstChildIndex);\n            this.view.setFocus([firstChildIndex]);\n        }\n    }\n    onSpace(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const recursive = e.browserEvent.altKey;\n        this.model.setCollapsed(location, undefined, recursive);\n    }\n    dispose() {\n        dispose(this.disposables);\n        this.view.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ElementsDragAndDropData } from '../list/listView.js';\nimport { ComposedTreeDelegate } from './abstractTree.js';\nimport { getVisibleState, isFilterResult } from './indexTreeModel.js';\nimport { CompressibleObjectTree, ObjectTree } from './objectTree.js';\nimport { TreeError, WeakMapper } from './tree.js';\nimport { createCancelablePromise, Promises, timeout } from '../../../common/async.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { isCancellationError, onUnexpectedError } from '../../../common/errors.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { Iterable } from '../../../common/iterator.js';\nimport { DisposableStore, dispose } from '../../../common/lifecycle.js';\nimport { isIterable } from '../../../common/types.js';\nfunction createAsyncDataTreeNode(props) {\n    return Object.assign(Object.assign({}, props), { children: [], refreshPromise: undefined, stale: true, slow: false, collapsedByDefault: undefined });\n}\nfunction isAncestor(ancestor, descendant) {\n    if (!descendant.parent) {\n        return false;\n    }\n    else if (descendant.parent === ancestor) {\n        return true;\n    }\n    else {\n        return isAncestor(ancestor, descendant.parent);\n    }\n}\nfunction intersects(node, other) {\n    return node === other || isAncestor(node, other) || isAncestor(other, node);\n}\nclass AsyncDataTreeNodeWrapper {\n    constructor(node) {\n        this.node = node;\n    }\n    get element() { return this.node.element.element; }\n    get children() { return this.node.children.map(node => new AsyncDataTreeNodeWrapper(node)); }\n    get depth() { return this.node.depth; }\n    get visibleChildrenCount() { return this.node.visibleChildrenCount; }\n    get visibleChildIndex() { return this.node.visibleChildIndex; }\n    get collapsible() { return this.node.collapsible; }\n    get collapsed() { return this.node.collapsed; }\n    get visible() { return this.node.visible; }\n    get filterData() { return this.node.filterData; }\n}\nclass AsyncDataTreeRenderer {\n    constructor(renderer, nodeMapper, onDidChangeTwistieState) {\n        this.renderer = renderer;\n        this.nodeMapper = nodeMapper;\n        this.onDidChangeTwistieState = onDidChangeTwistieState;\n        this.renderedNodes = new Map();\n        this.templateId = renderer.templateId;\n    }\n    renderTemplate(container) {\n        const templateData = this.renderer.renderTemplate(container);\n        return { templateData };\n    }\n    renderElement(node, index, templateData, height) {\n        this.renderer.renderElement(this.nodeMapper.map(node), index, templateData.templateData, height);\n    }\n    renderTwistie(element, twistieElement) {\n        if (element.slow) {\n            twistieElement.classList.add(...Codicon.treeItemLoading.classNamesArray);\n            return true;\n        }\n        else {\n            twistieElement.classList.remove(...Codicon.treeItemLoading.classNamesArray);\n            return false;\n        }\n    }\n    disposeElement(node, index, templateData, height) {\n        var _a, _b;\n        (_b = (_a = this.renderer).disposeElement) === null || _b === void 0 ? void 0 : _b.call(_a, this.nodeMapper.map(node), index, templateData.templateData, height);\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.templateData);\n    }\n    dispose() {\n        this.renderedNodes.clear();\n    }\n}\nfunction asTreeEvent(e) {\n    return {\n        browserEvent: e.browserEvent,\n        elements: e.elements.map(e => e.element)\n    };\n}\nfunction asTreeMouseEvent(e) {\n    return {\n        browserEvent: e.browserEvent,\n        element: e.element && e.element.element,\n        target: e.target\n    };\n}\nclass AsyncDataTreeElementsDragAndDropData extends ElementsDragAndDropData {\n    constructor(data) {\n        super(data.elements.map(node => node.element));\n        this.data = data;\n    }\n}\nfunction asAsyncDataTreeDragAndDropData(data) {\n    if (data instanceof ElementsDragAndDropData) {\n        return new AsyncDataTreeElementsDragAndDropData(data);\n    }\n    return data;\n}\nclass AsyncDataTreeNodeListDragAndDrop {\n    constructor(dnd) {\n        this.dnd = dnd;\n    }\n    getDragURI(node) {\n        return this.dnd.getDragURI(node.element);\n    }\n    getDragLabel(nodes, originalEvent) {\n        if (this.dnd.getDragLabel) {\n            return this.dnd.getDragLabel(nodes.map(node => node.element), originalEvent);\n        }\n        return undefined;\n    }\n    onDragStart(data, originalEvent) {\n        var _a, _b;\n        (_b = (_a = this.dnd).onDragStart) === null || _b === void 0 ? void 0 : _b.call(_a, asAsyncDataTreeDragAndDropData(data), originalEvent);\n    }\n    onDragOver(data, targetNode, targetIndex, originalEvent, raw = true) {\n        return this.dnd.onDragOver(asAsyncDataTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n    }\n    drop(data, targetNode, targetIndex, originalEvent) {\n        this.dnd.drop(asAsyncDataTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n    }\n    onDragEnd(originalEvent) {\n        var _a, _b;\n        (_b = (_a = this.dnd).onDragEnd) === null || _b === void 0 ? void 0 : _b.call(_a, originalEvent);\n    }\n}\nfunction asObjectTreeOptions(options) {\n    return options && Object.assign(Object.assign({}, options), { collapseByDefault: true, identityProvider: options.identityProvider && {\n            getId(el) {\n                return options.identityProvider.getId(el.element);\n            }\n        }, dnd: options.dnd && new AsyncDataTreeNodeListDragAndDrop(options.dnd), multipleSelectionController: options.multipleSelectionController && {\n            isSelectionSingleChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionSingleChangeEvent(Object.assign(Object.assign({}, e), { element: e.element }));\n            },\n            isSelectionRangeChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionRangeChangeEvent(Object.assign(Object.assign({}, e), { element: e.element }));\n            }\n        }, accessibilityProvider: options.accessibilityProvider && Object.assign(Object.assign({}, options.accessibilityProvider), { getPosInSet: undefined, getSetSize: undefined, getRole: options.accessibilityProvider.getRole ? (el) => {\n                return options.accessibilityProvider.getRole(el.element);\n            } : () => 'treeitem', isChecked: options.accessibilityProvider.isChecked ? (e) => {\n                var _a;\n                return !!((_a = options.accessibilityProvider) === null || _a === void 0 ? void 0 : _a.isChecked(e.element));\n            } : undefined, getAriaLabel(e) {\n                return options.accessibilityProvider.getAriaLabel(e.element);\n            },\n            getWidgetAriaLabel() {\n                return options.accessibilityProvider.getWidgetAriaLabel();\n            }, getWidgetRole: options.accessibilityProvider.getWidgetRole ? () => options.accessibilityProvider.getWidgetRole() : () => 'tree', getAriaLevel: options.accessibilityProvider.getAriaLevel && (node => {\n                return options.accessibilityProvider.getAriaLevel(node.element);\n            }), getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && (node => {\n                return options.accessibilityProvider.getActiveDescendantId(node.element);\n            }) }), filter: options.filter && {\n            filter(e, parentVisibility) {\n                return options.filter.filter(e.element, parentVisibility);\n            }\n        }, keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && Object.assign(Object.assign({}, options.keyboardNavigationLabelProvider), { getKeyboardNavigationLabel(e) {\n                return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e.element);\n            } }), sorter: undefined, expandOnlyOnTwistieClick: typeof options.expandOnlyOnTwistieClick === 'undefined' ? undefined : (typeof options.expandOnlyOnTwistieClick !== 'function' ? options.expandOnlyOnTwistieClick : (e => options.expandOnlyOnTwistieClick(e.element))), additionalScrollHeight: options.additionalScrollHeight });\n}\nfunction dfs(node, fn) {\n    fn(node);\n    node.children.forEach(child => dfs(child, fn));\n}\nexport class AsyncDataTree {\n    constructor(user, container, delegate, renderers, dataSource, options = {}) {\n        this.user = user;\n        this.dataSource = dataSource;\n        this.nodes = new Map();\n        this.subTreeRefreshPromises = new Map();\n        this.refreshPromises = new Map();\n        this._onDidRender = new Emitter();\n        this._onDidChangeNodeSlowState = new Emitter();\n        this.nodeMapper = new WeakMapper(node => new AsyncDataTreeNodeWrapper(node));\n        this.disposables = new DisposableStore();\n        this.identityProvider = options.identityProvider;\n        this.autoExpandSingleChildren = typeof options.autoExpandSingleChildren === 'undefined' ? false : options.autoExpandSingleChildren;\n        this.sorter = options.sorter;\n        this.collapseByDefault = options.collapseByDefault;\n        this.tree = this.createTree(user, container, delegate, renderers, options);\n        this.onDidChangeFindMode = this.tree.onDidChangeFindMode;\n        this.root = createAsyncDataTreeNode({\n            element: undefined,\n            parent: null,\n            hasChildren: true\n        });\n        if (this.identityProvider) {\n            this.root = Object.assign(Object.assign({}, this.root), { id: null });\n        }\n        this.nodes.set(null, this.root);\n        this.tree.onDidChangeCollapseState(this._onDidChangeCollapseState, this, this.disposables);\n    }\n    get onDidChangeFocus() { return Event.map(this.tree.onDidChangeFocus, asTreeEvent); }\n    get onDidChangeSelection() { return Event.map(this.tree.onDidChangeSelection, asTreeEvent); }\n    get onMouseDblClick() { return Event.map(this.tree.onMouseDblClick, asTreeMouseEvent); }\n    get onPointer() { return Event.map(this.tree.onPointer, asTreeMouseEvent); }\n    get onDidFocus() { return this.tree.onDidFocus; }\n    get onDidChangeModel() { return this.tree.onDidChangeModel; }\n    get onDidChangeCollapseState() { return this.tree.onDidChangeCollapseState; }\n    get onDidChangeFindOpenState() { return this.tree.onDidChangeFindOpenState; }\n    get onDidDispose() { return this.tree.onDidDispose; }\n    createTree(user, container, delegate, renderers, options) {\n        const objectTreeDelegate = new ComposedTreeDelegate(delegate);\n        const objectTreeRenderers = renderers.map(r => new AsyncDataTreeRenderer(r, this.nodeMapper, this._onDidChangeNodeSlowState.event));\n        const objectTreeOptions = asObjectTreeOptions(options) || {};\n        return new ObjectTree(user, container, objectTreeDelegate, objectTreeRenderers, objectTreeOptions);\n    }\n    updateOptions(options = {}) {\n        this.tree.updateOptions(options);\n    }\n    // Widget\n    getHTMLElement() {\n        return this.tree.getHTMLElement();\n    }\n    get scrollTop() {\n        return this.tree.scrollTop;\n    }\n    set scrollTop(scrollTop) {\n        this.tree.scrollTop = scrollTop;\n    }\n    domFocus() {\n        this.tree.domFocus();\n    }\n    layout(height, width) {\n        this.tree.layout(height, width);\n    }\n    style(styles) {\n        this.tree.style(styles);\n    }\n    // Model\n    getInput() {\n        return this.root.element;\n    }\n    setInput(input, viewState) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPromises.forEach(promise => promise.cancel());\n            this.refreshPromises.clear();\n            this.root.element = input;\n            const viewStateContext = viewState && { viewState, focus: [], selection: [] };\n            yield this._updateChildren(input, true, false, viewStateContext);\n            if (viewStateContext) {\n                this.tree.setFocus(viewStateContext.focus);\n                this.tree.setSelection(viewStateContext.selection);\n            }\n            if (viewState && typeof viewState.scrollTop === 'number') {\n                this.scrollTop = viewState.scrollTop;\n            }\n        });\n    }\n    _updateChildren(element = this.root.element, recursive = true, rerender = false, viewStateContext, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.root.element === 'undefined') {\n                throw new TreeError(this.user, 'Tree input not set');\n            }\n            if (this.root.refreshPromise) {\n                yield this.root.refreshPromise;\n                yield Event.toPromise(this._onDidRender.event);\n            }\n            const node = this.getDataNode(element);\n            yield this.refreshAndRenderNode(node, recursive, viewStateContext, options);\n            if (rerender) {\n                try {\n                    this.tree.rerender(node);\n                }\n                catch (_a) {\n                    // missing nodes are fine, this could've resulted from\n                    // parallel refresh calls, removing `node` altogether\n                }\n            }\n        });\n    }\n    // View\n    rerender(element) {\n        if (element === undefined || element === this.root.element) {\n            this.tree.rerender();\n            return;\n        }\n        const node = this.getDataNode(element);\n        this.tree.rerender(node);\n    }\n    // Tree\n    getNode(element = this.root.element) {\n        const dataNode = this.getDataNode(element);\n        const node = this.tree.getNode(dataNode === this.root ? null : dataNode);\n        return this.nodeMapper.map(node);\n    }\n    collapse(element, recursive = false) {\n        const node = this.getDataNode(element);\n        return this.tree.collapse(node === this.root ? null : node, recursive);\n    }\n    expand(element, recursive = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.root.element === 'undefined') {\n                throw new TreeError(this.user, 'Tree input not set');\n            }\n            if (this.root.refreshPromise) {\n                yield this.root.refreshPromise;\n                yield Event.toPromise(this._onDidRender.event);\n            }\n            const node = this.getDataNode(element);\n            if (this.tree.hasElement(node) && !this.tree.isCollapsible(node)) {\n                return false;\n            }\n            if (node.refreshPromise) {\n                yield this.root.refreshPromise;\n                yield Event.toPromise(this._onDidRender.event);\n            }\n            if (node !== this.root && !node.refreshPromise && !this.tree.isCollapsed(node)) {\n                return false;\n            }\n            const result = this.tree.expand(node === this.root ? null : node, recursive);\n            if (node.refreshPromise) {\n                yield this.root.refreshPromise;\n                yield Event.toPromise(this._onDidRender.event);\n            }\n            return result;\n        });\n    }\n    setSelection(elements, browserEvent) {\n        const nodes = elements.map(e => this.getDataNode(e));\n        this.tree.setSelection(nodes, browserEvent);\n    }\n    getSelection() {\n        const nodes = this.tree.getSelection();\n        return nodes.map(n => n.element);\n    }\n    setFocus(elements, browserEvent) {\n        const nodes = elements.map(e => this.getDataNode(e));\n        this.tree.setFocus(nodes, browserEvent);\n    }\n    getFocus() {\n        const nodes = this.tree.getFocus();\n        return nodes.map(n => n.element);\n    }\n    reveal(element, relativeTop) {\n        this.tree.reveal(this.getDataNode(element), relativeTop);\n    }\n    // Tree navigation\n    getParentElement(element) {\n        const node = this.tree.getParentElement(this.getDataNode(element));\n        return (node && node.element);\n    }\n    getFirstElementChild(element = this.root.element) {\n        const dataNode = this.getDataNode(element);\n        const node = this.tree.getFirstElementChild(dataNode === this.root ? null : dataNode);\n        return (node && node.element);\n    }\n    // Implementation\n    getDataNode(element) {\n        const node = this.nodes.get((element === this.root.element ? null : element));\n        if (!node) {\n            throw new TreeError(this.user, `Data tree node not found: ${element}`);\n        }\n        return node;\n    }\n    refreshAndRenderNode(node, recursive, viewStateContext, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.refreshNode(node, recursive, viewStateContext);\n            this.render(node, viewStateContext, options);\n        });\n    }\n    refreshNode(node, recursive, viewStateContext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let result;\n            this.subTreeRefreshPromises.forEach((refreshPromise, refreshNode) => {\n                if (!result && intersects(refreshNode, node)) {\n                    result = refreshPromise.then(() => this.refreshNode(node, recursive, viewStateContext));\n                }\n            });\n            if (result) {\n                return result;\n            }\n            if (node !== this.root) {\n                const treeNode = this.tree.getNode(node);\n                if (treeNode.collapsed) {\n                    node.hasChildren = !!this.dataSource.hasChildren(node.element);\n                    node.stale = true;\n                    return;\n                }\n            }\n            return this.doRefreshSubTree(node, recursive, viewStateContext);\n        });\n    }\n    doRefreshSubTree(node, recursive, viewStateContext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let done;\n            node.refreshPromise = new Promise(c => done = c);\n            this.subTreeRefreshPromises.set(node, node.refreshPromise);\n            node.refreshPromise.finally(() => {\n                node.refreshPromise = undefined;\n                this.subTreeRefreshPromises.delete(node);\n            });\n            try {\n                const childrenToRefresh = yield this.doRefreshNode(node, recursive, viewStateContext);\n                node.stale = false;\n                yield Promises.settled(childrenToRefresh.map(child => this.doRefreshSubTree(child, recursive, viewStateContext)));\n            }\n            finally {\n                done();\n            }\n        });\n    }\n    doRefreshNode(node, recursive, viewStateContext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            node.hasChildren = !!this.dataSource.hasChildren(node.element);\n            let childrenPromise;\n            if (!node.hasChildren) {\n                childrenPromise = Promise.resolve(Iterable.empty());\n            }\n            else {\n                const children = this.doGetChildren(node);\n                if (isIterable(children)) {\n                    childrenPromise = Promise.resolve(children);\n                }\n                else {\n                    const slowTimeout = timeout(800);\n                    slowTimeout.then(() => {\n                        node.slow = true;\n                        this._onDidChangeNodeSlowState.fire(node);\n                    }, _ => null);\n                    childrenPromise = children.finally(() => slowTimeout.cancel());\n                }\n            }\n            try {\n                const children = yield childrenPromise;\n                return this.setChildren(node, children, recursive, viewStateContext);\n            }\n            catch (err) {\n                if (node !== this.root && this.tree.hasElement(node)) {\n                    this.tree.collapse(node);\n                }\n                if (isCancellationError(err)) {\n                    return [];\n                }\n                throw err;\n            }\n            finally {\n                if (node.slow) {\n                    node.slow = false;\n                    this._onDidChangeNodeSlowState.fire(node);\n                }\n            }\n        });\n    }\n    doGetChildren(node) {\n        let result = this.refreshPromises.get(node);\n        if (result) {\n            return result;\n        }\n        const children = this.dataSource.getChildren(node.element);\n        if (isIterable(children)) {\n            return this.processChildren(children);\n        }\n        else {\n            result = createCancelablePromise(() => __awaiter(this, void 0, void 0, function* () { return this.processChildren(yield children); }));\n            this.refreshPromises.set(node, result);\n            return result.finally(() => { this.refreshPromises.delete(node); });\n        }\n    }\n    _onDidChangeCollapseState({ node, deep }) {\n        if (node.element === null) {\n            return;\n        }\n        if (!node.collapsed && node.element.stale) {\n            if (deep) {\n                this.collapse(node.element.element);\n            }\n            else {\n                this.refreshAndRenderNode(node.element, false)\n                    .catch(onUnexpectedError);\n            }\n        }\n    }\n    setChildren(node, childrenElementsIterable, recursive, viewStateContext) {\n        const childrenElements = [...childrenElementsIterable];\n        // perf: if the node was and still is a leaf, avoid all this hassle\n        if (node.children.length === 0 && childrenElements.length === 0) {\n            return [];\n        }\n        const nodesToForget = new Map();\n        const childrenTreeNodesById = new Map();\n        for (const child of node.children) {\n            nodesToForget.set(child.element, child);\n            if (this.identityProvider) {\n                const collapsed = this.tree.isCollapsed(child);\n                childrenTreeNodesById.set(child.id, { node: child, collapsed });\n            }\n        }\n        const childrenToRefresh = [];\n        const children = childrenElements.map(element => {\n            const hasChildren = !!this.dataSource.hasChildren(element);\n            if (!this.identityProvider) {\n                const asyncDataTreeNode = createAsyncDataTreeNode({ element, parent: node, hasChildren });\n                if (hasChildren && this.collapseByDefault && !this.collapseByDefault(element)) {\n                    asyncDataTreeNode.collapsedByDefault = false;\n                    childrenToRefresh.push(asyncDataTreeNode);\n                }\n                return asyncDataTreeNode;\n            }\n            const id = this.identityProvider.getId(element).toString();\n            const result = childrenTreeNodesById.get(id);\n            if (result) {\n                const asyncDataTreeNode = result.node;\n                nodesToForget.delete(asyncDataTreeNode.element);\n                this.nodes.delete(asyncDataTreeNode.element);\n                this.nodes.set(element, asyncDataTreeNode);\n                asyncDataTreeNode.element = element;\n                asyncDataTreeNode.hasChildren = hasChildren;\n                if (recursive) {\n                    if (result.collapsed) {\n                        asyncDataTreeNode.children.forEach(node => dfs(node, node => this.nodes.delete(node.element)));\n                        asyncDataTreeNode.children.splice(0, asyncDataTreeNode.children.length);\n                        asyncDataTreeNode.stale = true;\n                    }\n                    else {\n                        childrenToRefresh.push(asyncDataTreeNode);\n                    }\n                }\n                else if (hasChildren && this.collapseByDefault && !this.collapseByDefault(element)) {\n                    asyncDataTreeNode.collapsedByDefault = false;\n                    childrenToRefresh.push(asyncDataTreeNode);\n                }\n                return asyncDataTreeNode;\n            }\n            const childAsyncDataTreeNode = createAsyncDataTreeNode({ element, parent: node, id, hasChildren });\n            if (viewStateContext && viewStateContext.viewState.focus && viewStateContext.viewState.focus.indexOf(id) > -1) {\n                viewStateContext.focus.push(childAsyncDataTreeNode);\n            }\n            if (viewStateContext && viewStateContext.viewState.selection && viewStateContext.viewState.selection.indexOf(id) > -1) {\n                viewStateContext.selection.push(childAsyncDataTreeNode);\n            }\n            if (viewStateContext && viewStateContext.viewState.expanded && viewStateContext.viewState.expanded.indexOf(id) > -1) {\n                childrenToRefresh.push(childAsyncDataTreeNode);\n            }\n            else if (hasChildren && this.collapseByDefault && !this.collapseByDefault(element)) {\n                childAsyncDataTreeNode.collapsedByDefault = false;\n                childrenToRefresh.push(childAsyncDataTreeNode);\n            }\n            return childAsyncDataTreeNode;\n        });\n        for (const node of nodesToForget.values()) {\n            dfs(node, node => this.nodes.delete(node.element));\n        }\n        for (const child of children) {\n            this.nodes.set(child.element, child);\n        }\n        node.children.splice(0, node.children.length, ...children);\n        // TODO@joao this doesn't take filter into account\n        if (node !== this.root && this.autoExpandSingleChildren && children.length === 1 && childrenToRefresh.length === 0) {\n            children[0].collapsedByDefault = false;\n            childrenToRefresh.push(children[0]);\n        }\n        return childrenToRefresh;\n    }\n    render(node, viewStateContext, options) {\n        const children = node.children.map(node => this.asTreeElement(node, viewStateContext));\n        const objectTreeOptions = options && Object.assign(Object.assign({}, options), { diffIdentityProvider: options.diffIdentityProvider && {\n                getId(node) {\n                    return options.diffIdentityProvider.getId(node.element);\n                }\n            } });\n        this.tree.setChildren(node === this.root ? null : node, children, objectTreeOptions);\n        if (node !== this.root) {\n            this.tree.setCollapsible(node, node.hasChildren);\n        }\n        this._onDidRender.fire();\n    }\n    asTreeElement(node, viewStateContext) {\n        if (node.stale) {\n            return {\n                element: node,\n                collapsible: node.hasChildren,\n                collapsed: true\n            };\n        }\n        let collapsed;\n        if (viewStateContext && viewStateContext.viewState.expanded && node.id && viewStateContext.viewState.expanded.indexOf(node.id) > -1) {\n            collapsed = false;\n        }\n        else {\n            collapsed = node.collapsedByDefault;\n        }\n        node.collapsedByDefault = undefined;\n        return {\n            element: node,\n            children: node.hasChildren ? Iterable.map(node.children, child => this.asTreeElement(child, viewStateContext)) : [],\n            collapsible: node.hasChildren,\n            collapsed\n        };\n    }\n    processChildren(children) {\n        if (this.sorter) {\n            children = [...children].sort(this.sorter.compare.bind(this.sorter));\n        }\n        return children;\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\nclass CompressibleAsyncDataTreeNodeWrapper {\n    constructor(node) {\n        this.node = node;\n    }\n    get element() {\n        return {\n            elements: this.node.element.elements.map(e => e.element),\n            incompressible: this.node.element.incompressible\n        };\n    }\n    get children() { return this.node.children.map(node => new CompressibleAsyncDataTreeNodeWrapper(node)); }\n    get depth() { return this.node.depth; }\n    get visibleChildrenCount() { return this.node.visibleChildrenCount; }\n    get visibleChildIndex() { return this.node.visibleChildIndex; }\n    get collapsible() { return this.node.collapsible; }\n    get collapsed() { return this.node.collapsed; }\n    get visible() { return this.node.visible; }\n    get filterData() { return this.node.filterData; }\n}\nclass CompressibleAsyncDataTreeRenderer {\n    constructor(renderer, nodeMapper, compressibleNodeMapperProvider, onDidChangeTwistieState) {\n        this.renderer = renderer;\n        this.nodeMapper = nodeMapper;\n        this.compressibleNodeMapperProvider = compressibleNodeMapperProvider;\n        this.onDidChangeTwistieState = onDidChangeTwistieState;\n        this.renderedNodes = new Map();\n        this.disposables = [];\n        this.templateId = renderer.templateId;\n    }\n    renderTemplate(container) {\n        const templateData = this.renderer.renderTemplate(container);\n        return { templateData };\n    }\n    renderElement(node, index, templateData, height) {\n        this.renderer.renderElement(this.nodeMapper.map(node), index, templateData.templateData, height);\n    }\n    renderCompressedElements(node, index, templateData, height) {\n        this.renderer.renderCompressedElements(this.compressibleNodeMapperProvider().map(node), index, templateData.templateData, height);\n    }\n    renderTwistie(element, twistieElement) {\n        if (element.slow) {\n            twistieElement.classList.add(...Codicon.treeItemLoading.classNamesArray);\n            return true;\n        }\n        else {\n            twistieElement.classList.remove(...Codicon.treeItemLoading.classNamesArray);\n            return false;\n        }\n    }\n    disposeElement(node, index, templateData, height) {\n        var _a, _b;\n        (_b = (_a = this.renderer).disposeElement) === null || _b === void 0 ? void 0 : _b.call(_a, this.nodeMapper.map(node), index, templateData.templateData, height);\n    }\n    disposeCompressedElements(node, index, templateData, height) {\n        var _a, _b;\n        (_b = (_a = this.renderer).disposeCompressedElements) === null || _b === void 0 ? void 0 : _b.call(_a, this.compressibleNodeMapperProvider().map(node), index, templateData.templateData, height);\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.templateData);\n    }\n    dispose() {\n        this.renderedNodes.clear();\n        this.disposables = dispose(this.disposables);\n    }\n}\nfunction asCompressibleObjectTreeOptions(options) {\n    const objectTreeOptions = options && asObjectTreeOptions(options);\n    return objectTreeOptions && Object.assign(Object.assign({}, objectTreeOptions), { keyboardNavigationLabelProvider: objectTreeOptions.keyboardNavigationLabelProvider && Object.assign(Object.assign({}, objectTreeOptions.keyboardNavigationLabelProvider), { getCompressedNodeKeyboardNavigationLabel(els) {\n                return options.keyboardNavigationLabelProvider.getCompressedNodeKeyboardNavigationLabel(els.map(e => e.element));\n            } }) });\n}\nexport class CompressibleAsyncDataTree extends AsyncDataTree {\n    constructor(user, container, virtualDelegate, compressionDelegate, renderers, dataSource, options = {}) {\n        super(user, container, virtualDelegate, renderers, dataSource, options);\n        this.compressionDelegate = compressionDelegate;\n        this.compressibleNodeMapper = new WeakMapper(node => new CompressibleAsyncDataTreeNodeWrapper(node));\n        this.filter = options.filter;\n    }\n    createTree(user, container, delegate, renderers, options) {\n        const objectTreeDelegate = new ComposedTreeDelegate(delegate);\n        const objectTreeRenderers = renderers.map(r => new CompressibleAsyncDataTreeRenderer(r, this.nodeMapper, () => this.compressibleNodeMapper, this._onDidChangeNodeSlowState.event));\n        const objectTreeOptions = asCompressibleObjectTreeOptions(options) || {};\n        return new CompressibleObjectTree(user, container, objectTreeDelegate, objectTreeRenderers, objectTreeOptions);\n    }\n    asTreeElement(node, viewStateContext) {\n        return Object.assign({ incompressible: this.compressionDelegate.isIncompressible(node.element) }, super.asTreeElement(node, viewStateContext));\n    }\n    updateOptions(options = {}) {\n        this.tree.updateOptions(options);\n    }\n    render(node, viewStateContext) {\n        if (!this.identityProvider) {\n            return super.render(node, viewStateContext);\n        }\n        // Preserve traits across compressions. Hacky but does the trick.\n        // This is hard to fix properly since it requires rewriting the traits\n        // across trees and lists. Let's just keep it this way for now.\n        const getId = (element) => this.identityProvider.getId(element).toString();\n        const getUncompressedIds = (nodes) => {\n            const result = new Set();\n            for (const node of nodes) {\n                const compressedNode = this.tree.getCompressedTreeNode(node === this.root ? null : node);\n                if (!compressedNode.element) {\n                    continue;\n                }\n                for (const node of compressedNode.element.elements) {\n                    result.add(getId(node.element));\n                }\n            }\n            return result;\n        };\n        const oldSelection = getUncompressedIds(this.tree.getSelection());\n        const oldFocus = getUncompressedIds(this.tree.getFocus());\n        super.render(node, viewStateContext);\n        const selection = this.getSelection();\n        let didChangeSelection = false;\n        const focus = this.getFocus();\n        let didChangeFocus = false;\n        const visit = (node) => {\n            const compressedNode = node.element;\n            if (compressedNode) {\n                for (let i = 0; i < compressedNode.elements.length; i++) {\n                    const id = getId(compressedNode.elements[i].element);\n                    const element = compressedNode.elements[compressedNode.elements.length - 1].element;\n                    // github.com/microsoft/vscode/issues/85938\n                    if (oldSelection.has(id) && selection.indexOf(element) === -1) {\n                        selection.push(element);\n                        didChangeSelection = true;\n                    }\n                    if (oldFocus.has(id) && focus.indexOf(element) === -1) {\n                        focus.push(element);\n                        didChangeFocus = true;\n                    }\n                }\n            }\n            node.children.forEach(visit);\n        };\n        visit(this.tree.getCompressedTreeNode(node === this.root ? null : node));\n        if (didChangeSelection) {\n            this.setSelection(selection);\n        }\n        if (didChangeFocus) {\n            this.setFocus(focus);\n        }\n    }\n    // For compressed async data trees, `TreeVisibility.Recurse` doesn't currently work\n    // and we have to filter everything beforehand\n    // Related to #85193 and #85835\n    processChildren(children) {\n        if (this.filter) {\n            children = Iterable.filter(children, e => {\n                const result = this.filter.filter(e, 1 /* TreeVisibility.Visible */);\n                const visibility = getVisibility(result);\n                if (visibility === 2 /* TreeVisibility.Recurse */) {\n                    throw new Error('Recursive tree visibility not supported in async data compressed trees');\n                }\n                return visibility === 1 /* TreeVisibility.Visible */;\n            });\n        }\n        return super.processChildren(children);\n    }\n}\nfunction getVisibility(filterResult) {\n    if (typeof filterResult === 'boolean') {\n        return filterResult ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */;\n    }\n    else if (isFilterResult(filterResult)) {\n        return getVisibleState(filterResult.visibility);\n    }\n    else {\n        return getVisibleState(filterResult);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { AbstractTree } from './abstractTree.js';\nimport { ObjectTreeModel } from './objectTreeModel.js';\nexport class DataTree extends AbstractTree {\n    constructor(user, container, delegate, renderers, dataSource, options = {}) {\n        super(user, container, delegate, renderers, options);\n        this.user = user;\n        this.dataSource = dataSource;\n        this.identityProvider = options.identityProvider;\n    }\n    createModel(user, view, options) {\n        return new ObjectTreeModel(user, view, options);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { TreeError } from './tree.js';\nimport { splice, tail2 } from '../../../common/arrays.js';\nimport { Delayer, MicrotaskDelay } from '../../../common/async.js';\nimport { LcsDiff } from '../../../common/diff/diff.js';\nimport { Emitter, EventBufferer } from '../../../common/event.js';\nimport { Iterable } from '../../../common/iterator.js';\nexport function isFilterResult(obj) {\n    return typeof obj === 'object' && 'visibility' in obj && 'data' in obj;\n}\nexport function getVisibleState(visibility) {\n    switch (visibility) {\n        case true: return 1 /* TreeVisibility.Visible */;\n        case false: return 0 /* TreeVisibility.Hidden */;\n        default: return visibility;\n    }\n}\nfunction isCollapsibleStateUpdate(update) {\n    return typeof update.collapsible === 'boolean';\n}\nexport class IndexTreeModel {\n    constructor(user, list, rootElement, options = {}) {\n        this.user = user;\n        this.list = list;\n        this.rootRef = [];\n        this.eventBufferer = new EventBufferer();\n        this._onDidChangeCollapseState = new Emitter();\n        this.onDidChangeCollapseState = this.eventBufferer.wrapEvent(this._onDidChangeCollapseState.event);\n        this._onDidChangeRenderNodeCount = new Emitter();\n        this.onDidChangeRenderNodeCount = this.eventBufferer.wrapEvent(this._onDidChangeRenderNodeCount.event);\n        this._onDidSplice = new Emitter();\n        this.onDidSplice = this._onDidSplice.event;\n        this.refilterDelayer = new Delayer(MicrotaskDelay);\n        this.collapseByDefault = typeof options.collapseByDefault === 'undefined' ? false : options.collapseByDefault;\n        this.filter = options.filter;\n        this.autoExpandSingleChildren = typeof options.autoExpandSingleChildren === 'undefined' ? false : options.autoExpandSingleChildren;\n        this.root = {\n            parent: undefined,\n            element: rootElement,\n            children: [],\n            depth: 0,\n            visibleChildrenCount: 0,\n            visibleChildIndex: -1,\n            collapsible: false,\n            collapsed: false,\n            renderNodeCount: 0,\n            visibility: 1 /* TreeVisibility.Visible */,\n            visible: true,\n            filterData: undefined\n        };\n    }\n    splice(location, deleteCount, toInsert = Iterable.empty(), options = {}) {\n        if (location.length === 0) {\n            throw new TreeError(this.user, 'Invalid tree location');\n        }\n        if (options.diffIdentityProvider) {\n            this.spliceSmart(options.diffIdentityProvider, location, deleteCount, toInsert, options);\n        }\n        else {\n            this.spliceSimple(location, deleteCount, toInsert, options);\n        }\n    }\n    spliceSmart(identity, location, deleteCount, toInsertIterable, options, recurseLevels) {\n        var _a;\n        if (toInsertIterable === void 0) { toInsertIterable = Iterable.empty(); }\n        if (recurseLevels === void 0) { recurseLevels = (_a = options.diffDepth) !== null && _a !== void 0 ? _a : 0; }\n        const { parentNode } = this.getParentNodeWithListIndex(location);\n        if (!parentNode.lastDiffIds) {\n            return this.spliceSimple(location, deleteCount, toInsertIterable, options);\n        }\n        const toInsert = [...toInsertIterable];\n        const index = location[location.length - 1];\n        const diff = new LcsDiff({ getElements: () => parentNode.lastDiffIds }, {\n            getElements: () => [\n                ...parentNode.children.slice(0, index),\n                ...toInsert,\n                ...parentNode.children.slice(index + deleteCount),\n            ].map(e => identity.getId(e.element).toString())\n        }).ComputeDiff(false);\n        // if we were given a 'best effort' diff, use default behavior\n        if (diff.quitEarly) {\n            parentNode.lastDiffIds = undefined;\n            return this.spliceSimple(location, deleteCount, toInsert, options);\n        }\n        const locationPrefix = location.slice(0, -1);\n        const recurseSplice = (fromOriginal, fromModified, count) => {\n            if (recurseLevels > 0) {\n                for (let i = 0; i < count; i++) {\n                    fromOriginal--;\n                    fromModified--;\n                    this.spliceSmart(identity, [...locationPrefix, fromOriginal, 0], Number.MAX_SAFE_INTEGER, toInsert[fromModified].children, options, recurseLevels - 1);\n                }\n            }\n        };\n        let lastStartO = Math.min(parentNode.children.length, index + deleteCount);\n        let lastStartM = toInsert.length;\n        for (const change of diff.changes.sort((a, b) => b.originalStart - a.originalStart)) {\n            recurseSplice(lastStartO, lastStartM, lastStartO - (change.originalStart + change.originalLength));\n            lastStartO = change.originalStart;\n            lastStartM = change.modifiedStart - index;\n            this.spliceSimple([...locationPrefix, lastStartO], change.originalLength, Iterable.slice(toInsert, lastStartM, lastStartM + change.modifiedLength), options);\n        }\n        // at this point, startO === startM === count since any remaining prefix should match\n        recurseSplice(lastStartO, lastStartM, lastStartO);\n    }\n    spliceSimple(location, deleteCount, toInsert = Iterable.empty(), { onDidCreateNode, onDidDeleteNode, diffIdentityProvider }) {\n        const { parentNode, listIndex, revealed, visible } = this.getParentNodeWithListIndex(location);\n        const treeListElementsToInsert = [];\n        const nodesToInsertIterator = Iterable.map(toInsert, el => this.createTreeNode(el, parentNode, parentNode.visible ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */, revealed, treeListElementsToInsert, onDidCreateNode));\n        const lastIndex = location[location.length - 1];\n        const lastHadChildren = parentNode.children.length > 0;\n        // figure out what's the visible child start index right before the\n        // splice point\n        let visibleChildStartIndex = 0;\n        for (let i = lastIndex; i >= 0 && i < parentNode.children.length; i--) {\n            const child = parentNode.children[i];\n            if (child.visible) {\n                visibleChildStartIndex = child.visibleChildIndex;\n                break;\n            }\n        }\n        const nodesToInsert = [];\n        let insertedVisibleChildrenCount = 0;\n        let renderNodeCount = 0;\n        for (const child of nodesToInsertIterator) {\n            nodesToInsert.push(child);\n            renderNodeCount += child.renderNodeCount;\n            if (child.visible) {\n                child.visibleChildIndex = visibleChildStartIndex + insertedVisibleChildrenCount++;\n            }\n        }\n        const deletedNodes = splice(parentNode.children, lastIndex, deleteCount, nodesToInsert);\n        if (!diffIdentityProvider) {\n            parentNode.lastDiffIds = undefined;\n        }\n        else if (parentNode.lastDiffIds) {\n            splice(parentNode.lastDiffIds, lastIndex, deleteCount, nodesToInsert.map(n => diffIdentityProvider.getId(n.element).toString()));\n        }\n        else {\n            parentNode.lastDiffIds = parentNode.children.map(n => diffIdentityProvider.getId(n.element).toString());\n        }\n        // figure out what is the count of deleted visible children\n        let deletedVisibleChildrenCount = 0;\n        for (const child of deletedNodes) {\n            if (child.visible) {\n                deletedVisibleChildrenCount++;\n            }\n        }\n        // and adjust for all visible children after the splice point\n        if (deletedVisibleChildrenCount !== 0) {\n            for (let i = lastIndex + nodesToInsert.length; i < parentNode.children.length; i++) {\n                const child = parentNode.children[i];\n                if (child.visible) {\n                    child.visibleChildIndex -= deletedVisibleChildrenCount;\n                }\n            }\n        }\n        // update parent's visible children count\n        parentNode.visibleChildrenCount += insertedVisibleChildrenCount - deletedVisibleChildrenCount;\n        if (revealed && visible) {\n            const visibleDeleteCount = deletedNodes.reduce((r, node) => r + (node.visible ? node.renderNodeCount : 0), 0);\n            this._updateAncestorsRenderNodeCount(parentNode, renderNodeCount - visibleDeleteCount);\n            this.list.splice(listIndex, visibleDeleteCount, treeListElementsToInsert);\n        }\n        if (deletedNodes.length > 0 && onDidDeleteNode) {\n            const visit = (node) => {\n                onDidDeleteNode(node);\n                node.children.forEach(visit);\n            };\n            deletedNodes.forEach(visit);\n        }\n        this._onDidSplice.fire({ insertedNodes: nodesToInsert, deletedNodes });\n        const currentlyHasChildren = parentNode.children.length > 0;\n        if (lastHadChildren !== currentlyHasChildren) {\n            this.setCollapsible(location.slice(0, -1), currentlyHasChildren);\n        }\n        let node = parentNode;\n        while (node) {\n            if (node.visibility === 2 /* TreeVisibility.Recurse */) {\n                // delayed to avoid excessive refiltering, see #135941\n                this.refilterDelayer.trigger(() => this.refilter());\n                break;\n            }\n            node = node.parent;\n        }\n    }\n    rerender(location) {\n        if (location.length === 0) {\n            throw new TreeError(this.user, 'Invalid tree location');\n        }\n        const { node, listIndex, revealed } = this.getTreeNodeWithListIndex(location);\n        if (node.visible && revealed) {\n            this.list.splice(listIndex, 1, [node]);\n        }\n    }\n    has(location) {\n        return this.hasTreeNode(location);\n    }\n    getListIndex(location) {\n        const { listIndex, visible, revealed } = this.getTreeNodeWithListIndex(location);\n        return visible && revealed ? listIndex : -1;\n    }\n    getListRenderCount(location) {\n        return this.getTreeNode(location).renderNodeCount;\n    }\n    isCollapsible(location) {\n        return this.getTreeNode(location).collapsible;\n    }\n    setCollapsible(location, collapsible) {\n        const node = this.getTreeNode(location);\n        if (typeof collapsible === 'undefined') {\n            collapsible = !node.collapsible;\n        }\n        const update = { collapsible };\n        return this.eventBufferer.bufferEvents(() => this._setCollapseState(location, update));\n    }\n    isCollapsed(location) {\n        return this.getTreeNode(location).collapsed;\n    }\n    setCollapsed(location, collapsed, recursive) {\n        const node = this.getTreeNode(location);\n        if (typeof collapsed === 'undefined') {\n            collapsed = !node.collapsed;\n        }\n        const update = { collapsed, recursive: recursive || false };\n        return this.eventBufferer.bufferEvents(() => this._setCollapseState(location, update));\n    }\n    _setCollapseState(location, update) {\n        const { node, listIndex, revealed } = this.getTreeNodeWithListIndex(location);\n        const result = this._setListNodeCollapseState(node, listIndex, revealed, update);\n        if (node !== this.root && this.autoExpandSingleChildren && result && !isCollapsibleStateUpdate(update) && node.collapsible && !node.collapsed && !update.recursive) {\n            let onlyVisibleChildIndex = -1;\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                if (child.visible) {\n                    if (onlyVisibleChildIndex > -1) {\n                        onlyVisibleChildIndex = -1;\n                        break;\n                    }\n                    else {\n                        onlyVisibleChildIndex = i;\n                    }\n                }\n            }\n            if (onlyVisibleChildIndex > -1) {\n                this._setCollapseState([...location, onlyVisibleChildIndex], update);\n            }\n        }\n        return result;\n    }\n    _setListNodeCollapseState(node, listIndex, revealed, update) {\n        const result = this._setNodeCollapseState(node, update, false);\n        if (!revealed || !node.visible || !result) {\n            return result;\n        }\n        const previousRenderNodeCount = node.renderNodeCount;\n        const toInsert = this.updateNodeAfterCollapseChange(node);\n        const deleteCount = previousRenderNodeCount - (listIndex === -1 ? 0 : 1);\n        this.list.splice(listIndex + 1, deleteCount, toInsert.slice(1));\n        return result;\n    }\n    _setNodeCollapseState(node, update, deep) {\n        let result;\n        if (node === this.root) {\n            result = false;\n        }\n        else {\n            if (isCollapsibleStateUpdate(update)) {\n                result = node.collapsible !== update.collapsible;\n                node.collapsible = update.collapsible;\n            }\n            else if (!node.collapsible) {\n                result = false;\n            }\n            else {\n                result = node.collapsed !== update.collapsed;\n                node.collapsed = update.collapsed;\n            }\n            if (result) {\n                this._onDidChangeCollapseState.fire({ node, deep });\n            }\n        }\n        if (!isCollapsibleStateUpdate(update) && update.recursive) {\n            for (const child of node.children) {\n                result = this._setNodeCollapseState(child, update, true) || result;\n            }\n        }\n        return result;\n    }\n    expandTo(location) {\n        this.eventBufferer.bufferEvents(() => {\n            let node = this.getTreeNode(location);\n            while (node.parent) {\n                node = node.parent;\n                location = location.slice(0, location.length - 1);\n                if (node.collapsed) {\n                    this._setCollapseState(location, { collapsed: false, recursive: false });\n                }\n            }\n        });\n    }\n    refilter() {\n        const previousRenderNodeCount = this.root.renderNodeCount;\n        const toInsert = this.updateNodeAfterFilterChange(this.root);\n        this.list.splice(0, previousRenderNodeCount, toInsert);\n        this.refilterDelayer.cancel();\n    }\n    createTreeNode(treeElement, parent, parentVisibility, revealed, treeListElements, onDidCreateNode) {\n        const node = {\n            parent,\n            element: treeElement.element,\n            children: [],\n            depth: parent.depth + 1,\n            visibleChildrenCount: 0,\n            visibleChildIndex: -1,\n            collapsible: typeof treeElement.collapsible === 'boolean' ? treeElement.collapsible : (typeof treeElement.collapsed !== 'undefined'),\n            collapsed: typeof treeElement.collapsed === 'undefined' ? this.collapseByDefault : treeElement.collapsed,\n            renderNodeCount: 1,\n            visibility: 1 /* TreeVisibility.Visible */,\n            visible: true,\n            filterData: undefined\n        };\n        const visibility = this._filterNode(node, parentVisibility);\n        node.visibility = visibility;\n        if (revealed) {\n            treeListElements.push(node);\n        }\n        const childElements = treeElement.children || Iterable.empty();\n        const childRevealed = revealed && visibility !== 0 /* TreeVisibility.Hidden */ && !node.collapsed;\n        const childNodes = Iterable.map(childElements, el => this.createTreeNode(el, node, visibility, childRevealed, treeListElements, onDidCreateNode));\n        let visibleChildrenCount = 0;\n        let renderNodeCount = 1;\n        for (const child of childNodes) {\n            node.children.push(child);\n            renderNodeCount += child.renderNodeCount;\n            if (child.visible) {\n                child.visibleChildIndex = visibleChildrenCount++;\n            }\n        }\n        node.collapsible = node.collapsible || node.children.length > 0;\n        node.visibleChildrenCount = visibleChildrenCount;\n        node.visible = visibility === 2 /* TreeVisibility.Recurse */ ? visibleChildrenCount > 0 : (visibility === 1 /* TreeVisibility.Visible */);\n        if (!node.visible) {\n            node.renderNodeCount = 0;\n            if (revealed) {\n                treeListElements.pop();\n            }\n        }\n        else if (!node.collapsed) {\n            node.renderNodeCount = renderNodeCount;\n        }\n        onDidCreateNode === null || onDidCreateNode === void 0 ? void 0 : onDidCreateNode(node);\n        return node;\n    }\n    updateNodeAfterCollapseChange(node) {\n        const previousRenderNodeCount = node.renderNodeCount;\n        const result = [];\n        this._updateNodeAfterCollapseChange(node, result);\n        this._updateAncestorsRenderNodeCount(node.parent, result.length - previousRenderNodeCount);\n        return result;\n    }\n    _updateNodeAfterCollapseChange(node, result) {\n        if (node.visible === false) {\n            return 0;\n        }\n        result.push(node);\n        node.renderNodeCount = 1;\n        if (!node.collapsed) {\n            for (const child of node.children) {\n                node.renderNodeCount += this._updateNodeAfterCollapseChange(child, result);\n            }\n        }\n        this._onDidChangeRenderNodeCount.fire(node);\n        return node.renderNodeCount;\n    }\n    updateNodeAfterFilterChange(node) {\n        const previousRenderNodeCount = node.renderNodeCount;\n        const result = [];\n        this._updateNodeAfterFilterChange(node, node.visible ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */, result);\n        this._updateAncestorsRenderNodeCount(node.parent, result.length - previousRenderNodeCount);\n        return result;\n    }\n    _updateNodeAfterFilterChange(node, parentVisibility, result, revealed = true) {\n        let visibility;\n        if (node !== this.root) {\n            visibility = this._filterNode(node, parentVisibility);\n            if (visibility === 0 /* TreeVisibility.Hidden */) {\n                node.visible = false;\n                node.renderNodeCount = 0;\n                return false;\n            }\n            if (revealed) {\n                result.push(node);\n            }\n        }\n        const resultStartLength = result.length;\n        node.renderNodeCount = node === this.root ? 0 : 1;\n        let hasVisibleDescendants = false;\n        if (!node.collapsed || visibility !== 0 /* TreeVisibility.Hidden */) {\n            let visibleChildIndex = 0;\n            for (const child of node.children) {\n                hasVisibleDescendants = this._updateNodeAfterFilterChange(child, visibility, result, revealed && !node.collapsed) || hasVisibleDescendants;\n                if (child.visible) {\n                    child.visibleChildIndex = visibleChildIndex++;\n                }\n            }\n            node.visibleChildrenCount = visibleChildIndex;\n        }\n        else {\n            node.visibleChildrenCount = 0;\n        }\n        if (node !== this.root) {\n            node.visible = visibility === 2 /* TreeVisibility.Recurse */ ? hasVisibleDescendants : (visibility === 1 /* TreeVisibility.Visible */);\n            node.visibility = visibility;\n        }\n        if (!node.visible) {\n            node.renderNodeCount = 0;\n            if (revealed) {\n                result.pop();\n            }\n        }\n        else if (!node.collapsed) {\n            node.renderNodeCount += result.length - resultStartLength;\n        }\n        this._onDidChangeRenderNodeCount.fire(node);\n        return node.visible;\n    }\n    _updateAncestorsRenderNodeCount(node, diff) {\n        if (diff === 0) {\n            return;\n        }\n        while (node) {\n            node.renderNodeCount += diff;\n            this._onDidChangeRenderNodeCount.fire(node);\n            node = node.parent;\n        }\n    }\n    _filterNode(node, parentVisibility) {\n        const result = this.filter ? this.filter.filter(node.element, parentVisibility) : 1 /* TreeVisibility.Visible */;\n        if (typeof result === 'boolean') {\n            node.filterData = undefined;\n            return result ? 1 /* TreeVisibility.Visible */ : 0 /* TreeVisibility.Hidden */;\n        }\n        else if (isFilterResult(result)) {\n            node.filterData = result.data;\n            return getVisibleState(result.visibility);\n        }\n        else {\n            node.filterData = undefined;\n            return getVisibleState(result);\n        }\n    }\n    // cheap\n    hasTreeNode(location, node = this.root) {\n        if (!location || location.length === 0) {\n            return true;\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index > node.children.length) {\n            return false;\n        }\n        return this.hasTreeNode(rest, node.children[index]);\n    }\n    // cheap\n    getTreeNode(location, node = this.root) {\n        if (!location || location.length === 0) {\n            return node;\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index > node.children.length) {\n            throw new TreeError(this.user, 'Invalid tree location');\n        }\n        return this.getTreeNode(rest, node.children[index]);\n    }\n    // expensive\n    getTreeNodeWithListIndex(location) {\n        if (location.length === 0) {\n            return { node: this.root, listIndex: -1, revealed: true, visible: false };\n        }\n        const { parentNode, listIndex, revealed, visible } = this.getParentNodeWithListIndex(location);\n        const index = location[location.length - 1];\n        if (index < 0 || index > parentNode.children.length) {\n            throw new TreeError(this.user, 'Invalid tree location');\n        }\n        const node = parentNode.children[index];\n        return { node, listIndex, revealed, visible: visible && node.visible };\n    }\n    getParentNodeWithListIndex(location, node = this.root, listIndex = 0, revealed = true, visible = true) {\n        const [index, ...rest] = location;\n        if (index < 0 || index > node.children.length) {\n            throw new TreeError(this.user, 'Invalid tree location');\n        }\n        // TODO@joao perf!\n        for (let i = 0; i < index; i++) {\n            listIndex += node.children[i].renderNodeCount;\n        }\n        revealed = revealed && !node.collapsed;\n        visible = visible && node.visible;\n        if (rest.length === 0) {\n            return { parentNode: node, listIndex, revealed, visible };\n        }\n        return this.getParentNodeWithListIndex(rest, node.children[index], listIndex + 1, revealed, visible);\n    }\n    getNode(location = []) {\n        return this.getTreeNode(location);\n    }\n    // TODO@joao perf!\n    getNodeLocation(node) {\n        const location = [];\n        let indexTreeNode = node; // typing woes\n        while (indexTreeNode.parent) {\n            location.push(indexTreeNode.parent.children.indexOf(indexTreeNode));\n            indexTreeNode = indexTreeNode.parent;\n        }\n        return location.reverse();\n    }\n    getParentNodeLocation(location) {\n        if (location.length === 0) {\n            return undefined;\n        }\n        else if (location.length === 1) {\n            return [];\n        }\n        else {\n            return tail2(location)[0];\n        }\n    }\n    getFirstElementChild(location) {\n        const node = this.getTreeNode(location);\n        if (node.children.length === 0) {\n            return undefined;\n        }\n        return node.children[0].element;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ObjectTreeModel } from './objectTreeModel.js';\nimport { TreeError, WeakMapper } from './tree.js';\nimport { Event } from '../../../common/event.js';\nimport { Iterable } from '../../../common/iterator.js';\nfunction noCompress(element) {\n    const elements = [element.element];\n    const incompressible = element.incompressible || false;\n    return {\n        element: { elements, incompressible },\n        children: Iterable.map(Iterable.from(element.children), noCompress),\n        collapsible: element.collapsible,\n        collapsed: element.collapsed\n    };\n}\n// Exported only for test reasons, do not use directly\nexport function compress(element) {\n    const elements = [element.element];\n    const incompressible = element.incompressible || false;\n    let childrenIterator;\n    let children;\n    while (true) {\n        [children, childrenIterator] = Iterable.consume(Iterable.from(element.children), 2);\n        if (children.length !== 1) {\n            break;\n        }\n        if (children[0].incompressible) {\n            break;\n        }\n        element = children[0];\n        elements.push(element.element);\n    }\n    return {\n        element: { elements, incompressible },\n        children: Iterable.map(Iterable.concat(children, childrenIterator), compress),\n        collapsible: element.collapsible,\n        collapsed: element.collapsed\n    };\n}\nfunction _decompress(element, index = 0) {\n    let children;\n    if (index < element.element.elements.length - 1) {\n        children = [_decompress(element, index + 1)];\n    }\n    else {\n        children = Iterable.map(Iterable.from(element.children), el => _decompress(el, 0));\n    }\n    if (index === 0 && element.element.incompressible) {\n        return {\n            element: element.element.elements[index],\n            children,\n            incompressible: true,\n            collapsible: element.collapsible,\n            collapsed: element.collapsed\n        };\n    }\n    return {\n        element: element.element.elements[index],\n        children,\n        collapsible: element.collapsible,\n        collapsed: element.collapsed\n    };\n}\n// Exported only for test reasons, do not use directly\nexport function decompress(element) {\n    return _decompress(element, 0);\n}\nfunction splice(treeElement, element, children) {\n    if (treeElement.element === element) {\n        return Object.assign(Object.assign({}, treeElement), { children });\n    }\n    return Object.assign(Object.assign({}, treeElement), { children: Iterable.map(Iterable.from(treeElement.children), e => splice(e, element, children)) });\n}\nconst wrapIdentityProvider = (base) => ({\n    getId(node) {\n        return node.elements.map(e => base.getId(e).toString()).join('\\0');\n    }\n});\n// Exported only for test reasons, do not use directly\nexport class CompressedObjectTreeModel {\n    constructor(user, list, options = {}) {\n        this.user = user;\n        this.rootRef = null;\n        this.nodes = new Map();\n        this.model = new ObjectTreeModel(user, list, options);\n        this.enabled = typeof options.compressionEnabled === 'undefined' ? true : options.compressionEnabled;\n        this.identityProvider = options.identityProvider;\n    }\n    get onDidSplice() { return this.model.onDidSplice; }\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\n    get onDidChangeRenderNodeCount() { return this.model.onDidChangeRenderNodeCount; }\n    setChildren(element, children = Iterable.empty(), options) {\n        // Diffs must be deem, since the compression can affect nested elements.\n        // @see https://github.com/microsoft/vscode/pull/114237#issuecomment-759425034\n        const diffIdentityProvider = options.diffIdentityProvider && wrapIdentityProvider(options.diffIdentityProvider);\n        if (element === null) {\n            const compressedChildren = Iterable.map(children, this.enabled ? compress : noCompress);\n            this._setChildren(null, compressedChildren, { diffIdentityProvider, diffDepth: Infinity });\n            return;\n        }\n        const compressedNode = this.nodes.get(element);\n        if (!compressedNode) {\n            throw new Error('Unknown compressed tree node');\n        }\n        const node = this.model.getNode(compressedNode);\n        const compressedParentNode = this.model.getParentNodeLocation(compressedNode);\n        const parent = this.model.getNode(compressedParentNode);\n        const decompressedElement = decompress(node);\n        const splicedElement = splice(decompressedElement, element, children);\n        const recompressedElement = (this.enabled ? compress : noCompress)(splicedElement);\n        const parentChildren = parent.children\n            .map(child => child === node ? recompressedElement : child);\n        this._setChildren(parent.element, parentChildren, {\n            diffIdentityProvider,\n            diffDepth: node.depth - parent.depth,\n        });\n    }\n    setCompressionEnabled(enabled) {\n        if (enabled === this.enabled) {\n            return;\n        }\n        this.enabled = enabled;\n        const root = this.model.getNode();\n        const rootChildren = root.children;\n        const decompressedRootChildren = Iterable.map(rootChildren, decompress);\n        const recompressedRootChildren = Iterable.map(decompressedRootChildren, enabled ? compress : noCompress);\n        // it should be safe to always use deep diff mode here if an identity\n        // provider is available, since we know the raw nodes are unchanged.\n        this._setChildren(null, recompressedRootChildren, {\n            diffIdentityProvider: this.identityProvider,\n            diffDepth: Infinity,\n        });\n    }\n    _setChildren(node, children, options) {\n        const insertedElements = new Set();\n        const onDidCreateNode = (node) => {\n            for (const element of node.element.elements) {\n                insertedElements.add(element);\n                this.nodes.set(element, node.element);\n            }\n        };\n        const onDidDeleteNode = (node) => {\n            for (const element of node.element.elements) {\n                if (!insertedElements.has(element)) {\n                    this.nodes.delete(element);\n                }\n            }\n        };\n        this.model.setChildren(node, children, Object.assign(Object.assign({}, options), { onDidCreateNode, onDidDeleteNode }));\n    }\n    has(element) {\n        return this.nodes.has(element);\n    }\n    getListIndex(location) {\n        const node = this.getCompressedNode(location);\n        return this.model.getListIndex(node);\n    }\n    getListRenderCount(location) {\n        const node = this.getCompressedNode(location);\n        return this.model.getListRenderCount(node);\n    }\n    getNode(location) {\n        if (typeof location === 'undefined') {\n            return this.model.getNode();\n        }\n        const node = this.getCompressedNode(location);\n        return this.model.getNode(node);\n    }\n    // TODO: review this\n    getNodeLocation(node) {\n        const compressedNode = this.model.getNodeLocation(node);\n        if (compressedNode === null) {\n            return null;\n        }\n        return compressedNode.elements[compressedNode.elements.length - 1];\n    }\n    // TODO: review this\n    getParentNodeLocation(location) {\n        const compressedNode = this.getCompressedNode(location);\n        const parentNode = this.model.getParentNodeLocation(compressedNode);\n        if (parentNode === null) {\n            return null;\n        }\n        return parentNode.elements[parentNode.elements.length - 1];\n    }\n    getFirstElementChild(location) {\n        const compressedNode = this.getCompressedNode(location);\n        return this.model.getFirstElementChild(compressedNode);\n    }\n    isCollapsible(location) {\n        const compressedNode = this.getCompressedNode(location);\n        return this.model.isCollapsible(compressedNode);\n    }\n    setCollapsible(location, collapsible) {\n        const compressedNode = this.getCompressedNode(location);\n        return this.model.setCollapsible(compressedNode, collapsible);\n    }\n    isCollapsed(location) {\n        const compressedNode = this.getCompressedNode(location);\n        return this.model.isCollapsed(compressedNode);\n    }\n    setCollapsed(location, collapsed, recursive) {\n        const compressedNode = this.getCompressedNode(location);\n        return this.model.setCollapsed(compressedNode, collapsed, recursive);\n    }\n    expandTo(location) {\n        const compressedNode = this.getCompressedNode(location);\n        this.model.expandTo(compressedNode);\n    }\n    rerender(location) {\n        const compressedNode = this.getCompressedNode(location);\n        this.model.rerender(compressedNode);\n    }\n    refilter() {\n        this.model.refilter();\n    }\n    getCompressedNode(element) {\n        if (element === null) {\n            return null;\n        }\n        const node = this.nodes.get(element);\n        if (!node) {\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\n        }\n        return node;\n    }\n}\nexport const DefaultElementMapper = elements => elements[elements.length - 1];\nclass CompressedTreeNodeWrapper {\n    constructor(unwrapper, node) {\n        this.unwrapper = unwrapper;\n        this.node = node;\n    }\n    get element() { return this.node.element === null ? null : this.unwrapper(this.node.element); }\n    get children() { return this.node.children.map(node => new CompressedTreeNodeWrapper(this.unwrapper, node)); }\n    get depth() { return this.node.depth; }\n    get visibleChildrenCount() { return this.node.visibleChildrenCount; }\n    get visibleChildIndex() { return this.node.visibleChildIndex; }\n    get collapsible() { return this.node.collapsible; }\n    get collapsed() { return this.node.collapsed; }\n    get visible() { return this.node.visible; }\n    get filterData() { return this.node.filterData; }\n}\nfunction mapList(nodeMapper, list) {\n    return {\n        splice(start, deleteCount, toInsert) {\n            list.splice(start, deleteCount, toInsert.map(node => nodeMapper.map(node)));\n        },\n        updateElementHeight(index, height) {\n            list.updateElementHeight(index, height);\n        }\n    };\n}\nfunction mapOptions(compressedNodeUnwrapper, options) {\n    return Object.assign(Object.assign({}, options), { identityProvider: options.identityProvider && {\n            getId(node) {\n                return options.identityProvider.getId(compressedNodeUnwrapper(node));\n            }\n        }, sorter: options.sorter && {\n            compare(node, otherNode) {\n                return options.sorter.compare(node.elements[0], otherNode.elements[0]);\n            }\n        }, filter: options.filter && {\n            filter(node, parentVisibility) {\n                return options.filter.filter(compressedNodeUnwrapper(node), parentVisibility);\n            }\n        } });\n}\nexport class CompressibleObjectTreeModel {\n    constructor(user, list, options = {}) {\n        this.rootRef = null;\n        this.elementMapper = options.elementMapper || DefaultElementMapper;\n        const compressedNodeUnwrapper = node => this.elementMapper(node.elements);\n        this.nodeMapper = new WeakMapper(node => new CompressedTreeNodeWrapper(compressedNodeUnwrapper, node));\n        this.model = new CompressedObjectTreeModel(user, mapList(this.nodeMapper, list), mapOptions(compressedNodeUnwrapper, options));\n    }\n    get onDidSplice() {\n        return Event.map(this.model.onDidSplice, ({ insertedNodes, deletedNodes }) => ({\n            insertedNodes: insertedNodes.map(node => this.nodeMapper.map(node)),\n            deletedNodes: deletedNodes.map(node => this.nodeMapper.map(node)),\n        }));\n    }\n    get onDidChangeCollapseState() {\n        return Event.map(this.model.onDidChangeCollapseState, ({ node, deep }) => ({\n            node: this.nodeMapper.map(node),\n            deep\n        }));\n    }\n    get onDidChangeRenderNodeCount() {\n        return Event.map(this.model.onDidChangeRenderNodeCount, node => this.nodeMapper.map(node));\n    }\n    setChildren(element, children = Iterable.empty(), options = {}) {\n        this.model.setChildren(element, children, options);\n    }\n    setCompressionEnabled(enabled) {\n        this.model.setCompressionEnabled(enabled);\n    }\n    has(location) {\n        return this.model.has(location);\n    }\n    getListIndex(location) {\n        return this.model.getListIndex(location);\n    }\n    getListRenderCount(location) {\n        return this.model.getListRenderCount(location);\n    }\n    getNode(location) {\n        return this.nodeMapper.map(this.model.getNode(location));\n    }\n    getNodeLocation(node) {\n        return node.element;\n    }\n    getParentNodeLocation(location) {\n        return this.model.getParentNodeLocation(location);\n    }\n    getFirstElementChild(location) {\n        const result = this.model.getFirstElementChild(location);\n        if (result === null || typeof result === 'undefined') {\n            return result;\n        }\n        return this.elementMapper(result.elements);\n    }\n    isCollapsible(location) {\n        return this.model.isCollapsible(location);\n    }\n    setCollapsible(location, collapsed) {\n        return this.model.setCollapsible(location, collapsed);\n    }\n    isCollapsed(location) {\n        return this.model.isCollapsed(location);\n    }\n    setCollapsed(location, collapsed, recursive) {\n        return this.model.setCollapsed(location, collapsed, recursive);\n    }\n    expandTo(location) {\n        return this.model.expandTo(location);\n    }\n    rerender(location) {\n        return this.model.rerender(location);\n    }\n    refilter() {\n        return this.model.refilter();\n    }\n    getCompressedTreeNode(location = null) {\n        return this.model.getNode(location);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { AbstractTree } from './abstractTree.js';\nimport { CompressibleObjectTreeModel } from './compressedObjectTreeModel.js';\nimport { ObjectTreeModel } from './objectTreeModel.js';\nimport { memoize } from '../../../common/decorators.js';\nimport { Iterable } from '../../../common/iterator.js';\nexport class ObjectTree extends AbstractTree {\n    constructor(user, container, delegate, renderers, options = {}) {\n        super(user, container, delegate, renderers, options);\n        this.user = user;\n    }\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\n    setChildren(element, children = Iterable.empty(), options) {\n        this.model.setChildren(element, children, options);\n    }\n    rerender(element) {\n        if (element === undefined) {\n            this.view.rerender();\n            return;\n        }\n        this.model.rerender(element);\n    }\n    hasElement(element) {\n        return this.model.has(element);\n    }\n    createModel(user, view, options) {\n        return new ObjectTreeModel(user, view, options);\n    }\n}\nclass CompressibleRenderer {\n    constructor(_compressedTreeNodeProvider, renderer) {\n        this._compressedTreeNodeProvider = _compressedTreeNodeProvider;\n        this.renderer = renderer;\n        this.templateId = renderer.templateId;\n        if (renderer.onDidChangeTwistieState) {\n            this.onDidChangeTwistieState = renderer.onDidChangeTwistieState;\n        }\n    }\n    get compressedTreeNodeProvider() {\n        return this._compressedTreeNodeProvider();\n    }\n    renderTemplate(container) {\n        const data = this.renderer.renderTemplate(container);\n        return { compressedTreeNode: undefined, data };\n    }\n    renderElement(node, index, templateData, height) {\n        const compressedTreeNode = this.compressedTreeNodeProvider.getCompressedTreeNode(node.element);\n        if (compressedTreeNode.element.elements.length === 1) {\n            templateData.compressedTreeNode = undefined;\n            this.renderer.renderElement(node, index, templateData.data, height);\n        }\n        else {\n            templateData.compressedTreeNode = compressedTreeNode;\n            this.renderer.renderCompressedElements(compressedTreeNode, index, templateData.data, height);\n        }\n    }\n    disposeElement(node, index, templateData, height) {\n        var _a, _b, _c, _d;\n        if (templateData.compressedTreeNode) {\n            (_b = (_a = this.renderer).disposeCompressedElements) === null || _b === void 0 ? void 0 : _b.call(_a, templateData.compressedTreeNode, index, templateData.data, height);\n        }\n        else {\n            (_d = (_c = this.renderer).disposeElement) === null || _d === void 0 ? void 0 : _d.call(_c, node, index, templateData.data, height);\n        }\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.data);\n    }\n    renderTwistie(element, twistieElement) {\n        if (this.renderer.renderTwistie) {\n            return this.renderer.renderTwistie(element, twistieElement);\n        }\n        return false;\n    }\n}\n__decorate([\n    memoize\n], CompressibleRenderer.prototype, \"compressedTreeNodeProvider\", null);\nfunction asObjectTreeOptions(compressedTreeNodeProvider, options) {\n    return options && Object.assign(Object.assign({}, options), { keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && {\n            getKeyboardNavigationLabel(e) {\n                let compressedTreeNode;\n                try {\n                    compressedTreeNode = compressedTreeNodeProvider().getCompressedTreeNode(e);\n                }\n                catch (_a) {\n                    return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e);\n                }\n                if (compressedTreeNode.element.elements.length === 1) {\n                    return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e);\n                }\n                else {\n                    return options.keyboardNavigationLabelProvider.getCompressedNodeKeyboardNavigationLabel(compressedTreeNode.element.elements);\n                }\n            }\n        } });\n}\nexport class CompressibleObjectTree extends ObjectTree {\n    constructor(user, container, delegate, renderers, options = {}) {\n        const compressedTreeNodeProvider = () => this;\n        const compressibleRenderers = renderers.map(r => new CompressibleRenderer(compressedTreeNodeProvider, r));\n        super(user, container, delegate, compressibleRenderers, asObjectTreeOptions(compressedTreeNodeProvider, options));\n    }\n    setChildren(element, children = Iterable.empty(), options) {\n        this.model.setChildren(element, children, options);\n    }\n    createModel(user, view, options) {\n        return new CompressibleObjectTreeModel(user, view, options);\n    }\n    updateOptions(optionsUpdate = {}) {\n        super.updateOptions(optionsUpdate);\n        if (typeof optionsUpdate.compressionEnabled !== 'undefined') {\n            this.model.setCompressionEnabled(optionsUpdate.compressionEnabled);\n        }\n    }\n    getCompressedTreeNode(element = null) {\n        return this.model.getCompressedTreeNode(element);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { IndexTreeModel } from './indexTreeModel.js';\nimport { TreeError } from './tree.js';\nimport { Iterable } from '../../../common/iterator.js';\nexport class ObjectTreeModel {\n    constructor(user, list, options = {}) {\n        this.user = user;\n        this.rootRef = null;\n        this.nodes = new Map();\n        this.nodesByIdentity = new Map();\n        this.model = new IndexTreeModel(user, list, null, options);\n        this.onDidSplice = this.model.onDidSplice;\n        this.onDidChangeCollapseState = this.model.onDidChangeCollapseState;\n        this.onDidChangeRenderNodeCount = this.model.onDidChangeRenderNodeCount;\n        if (options.sorter) {\n            this.sorter = {\n                compare(a, b) {\n                    return options.sorter.compare(a.element, b.element);\n                }\n            };\n        }\n        this.identityProvider = options.identityProvider;\n    }\n    setChildren(element, children = Iterable.empty(), options = {}) {\n        const location = this.getElementLocation(element);\n        this._setChildren(location, this.preserveCollapseState(children), options);\n    }\n    _setChildren(location, children = Iterable.empty(), options) {\n        const insertedElements = new Set();\n        const insertedElementIds = new Set();\n        const onDidCreateNode = (node) => {\n            var _a;\n            if (node.element === null) {\n                return;\n            }\n            const tnode = node;\n            insertedElements.add(tnode.element);\n            this.nodes.set(tnode.element, tnode);\n            if (this.identityProvider) {\n                const id = this.identityProvider.getId(tnode.element).toString();\n                insertedElementIds.add(id);\n                this.nodesByIdentity.set(id, tnode);\n            }\n            (_a = options.onDidCreateNode) === null || _a === void 0 ? void 0 : _a.call(options, tnode);\n        };\n        const onDidDeleteNode = (node) => {\n            var _a;\n            if (node.element === null) {\n                return;\n            }\n            const tnode = node;\n            if (!insertedElements.has(tnode.element)) {\n                this.nodes.delete(tnode.element);\n            }\n            if (this.identityProvider) {\n                const id = this.identityProvider.getId(tnode.element).toString();\n                if (!insertedElementIds.has(id)) {\n                    this.nodesByIdentity.delete(id);\n                }\n            }\n            (_a = options.onDidDeleteNode) === null || _a === void 0 ? void 0 : _a.call(options, tnode);\n        };\n        this.model.splice([...location, 0], Number.MAX_VALUE, children, Object.assign(Object.assign({}, options), { onDidCreateNode, onDidDeleteNode }));\n    }\n    preserveCollapseState(elements = Iterable.empty()) {\n        if (this.sorter) {\n            elements = [...elements].sort(this.sorter.compare.bind(this.sorter));\n        }\n        return Iterable.map(elements, treeElement => {\n            let node = this.nodes.get(treeElement.element);\n            if (!node && this.identityProvider) {\n                const id = this.identityProvider.getId(treeElement.element).toString();\n                node = this.nodesByIdentity.get(id);\n            }\n            if (!node) {\n                return Object.assign(Object.assign({}, treeElement), { children: this.preserveCollapseState(treeElement.children) });\n            }\n            const collapsible = typeof treeElement.collapsible === 'boolean' ? treeElement.collapsible : node.collapsible;\n            const collapsed = typeof treeElement.collapsed !== 'undefined' ? treeElement.collapsed : node.collapsed;\n            return Object.assign(Object.assign({}, treeElement), { collapsible,\n                collapsed, children: this.preserveCollapseState(treeElement.children) });\n        });\n    }\n    rerender(element) {\n        const location = this.getElementLocation(element);\n        this.model.rerender(location);\n    }\n    getFirstElementChild(ref = null) {\n        const location = this.getElementLocation(ref);\n        return this.model.getFirstElementChild(location);\n    }\n    has(element) {\n        return this.nodes.has(element);\n    }\n    getListIndex(element) {\n        const location = this.getElementLocation(element);\n        return this.model.getListIndex(location);\n    }\n    getListRenderCount(element) {\n        const location = this.getElementLocation(element);\n        return this.model.getListRenderCount(location);\n    }\n    isCollapsible(element) {\n        const location = this.getElementLocation(element);\n        return this.model.isCollapsible(location);\n    }\n    setCollapsible(element, collapsible) {\n        const location = this.getElementLocation(element);\n        return this.model.setCollapsible(location, collapsible);\n    }\n    isCollapsed(element) {\n        const location = this.getElementLocation(element);\n        return this.model.isCollapsed(location);\n    }\n    setCollapsed(element, collapsed, recursive) {\n        const location = this.getElementLocation(element);\n        return this.model.setCollapsed(location, collapsed, recursive);\n    }\n    expandTo(element) {\n        const location = this.getElementLocation(element);\n        this.model.expandTo(location);\n    }\n    refilter() {\n        this.model.refilter();\n    }\n    getNode(element = null) {\n        if (element === null) {\n            return this.model.getNode(this.model.rootRef);\n        }\n        const node = this.nodes.get(element);\n        if (!node) {\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\n        }\n        return node;\n    }\n    getNodeLocation(node) {\n        return node.element;\n    }\n    getParentNodeLocation(element) {\n        if (element === null) {\n            throw new TreeError(this.user, `Invalid getParentNodeLocation call`);\n        }\n        const node = this.nodes.get(element);\n        if (!node) {\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\n        }\n        const location = this.model.getNodeLocation(node);\n        const parentLocation = this.model.getParentNodeLocation(location);\n        const parent = this.model.getNode(parentLocation);\n        return parent.element;\n    }\n    getElementLocation(element) {\n        if (element === null) {\n            return [];\n        }\n        const node = this.nodes.get(element);\n        if (!node) {\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\n        }\n        return this.model.getNodeLocation(node);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var TreeMouseEventTarget;\n(function (TreeMouseEventTarget) {\n    TreeMouseEventTarget[TreeMouseEventTarget[\"Unknown\"] = 0] = \"Unknown\";\n    TreeMouseEventTarget[TreeMouseEventTarget[\"Twistie\"] = 1] = \"Twistie\";\n    TreeMouseEventTarget[TreeMouseEventTarget[\"Element\"] = 2] = \"Element\";\n    TreeMouseEventTarget[TreeMouseEventTarget[\"Filter\"] = 3] = \"Filter\";\n})(TreeMouseEventTarget || (TreeMouseEventTarget = {}));\nexport class TreeError extends Error {\n    constructor(user, message) {\n        super(`TreeError [${user}] ${message}`);\n    }\n}\nexport class WeakMapper {\n    constructor(fn) {\n        this.fn = fn;\n        this._map = new WeakMap();\n    }\n    map(key) {\n        let result = this._map.get(key);\n        if (!result) {\n            result = this.fn(key);\n            this._map.set(key, result);\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../dom.js';\nimport { StandardKeyboardEvent } from '../keyboardEvent.js';\nimport { StandardMouseEvent } from '../mouseEvent.js';\nimport { Gesture } from '../touch.js';\nimport { Disposable } from '../../common/lifecycle.js';\nexport class Widget extends Disposable {\n    onclick(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.CLICK, (e) => listener(new StandardMouseEvent(e))));\n    }\n    onmousedown(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.MOUSE_DOWN, (e) => listener(new StandardMouseEvent(e))));\n    }\n    onmouseover(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.MOUSE_OVER, (e) => listener(new StandardMouseEvent(e))));\n    }\n    onmouseleave(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.MOUSE_LEAVE, (e) => listener(new StandardMouseEvent(e))));\n    }\n    onkeydown(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, (e) => listener(new StandardKeyboardEvent(e))));\n    }\n    onkeyup(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.KEY_UP, (e) => listener(new StandardKeyboardEvent(e))));\n    }\n    oninput(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.INPUT, listener));\n    }\n    onblur(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.BLUR, listener));\n    }\n    onfocus(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.FOCUS, listener));\n    }\n    ignoreGesture(domNode) {\n        Gesture.ignoreTarget(domNode);\n    }\n}\n"],"names":["MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","CSS_DONE","CSS_ACTIVE","CSS_INFINITE","CSS_INFINITE_LONG_RUNNING","CSS_DISCRETE","defaultOpts","progressBarBackground","Color","ProgressBar","container","options","Object","create","mixin","workedVal","showDelayedScheduler","_register","RunOnceScheduler","show","element","longRunningScheduler","infiniteLongRunning","LONG_RUNNING_INFINITE_THRESHOLD","this","document","createElement","classList","add","setAttribute","appendChild","bit","applyStyles","style","width","opacity","remove","totalWork","undefined","cancel","doDone","delayed","contains","setTimeout","off","schedule","styles","background","toString","backgroundColor","Disposable","ResizableHTMLElement","currentSize","_onDidWillResize","Emitter","onDidWillResize","event","_onDidResize","onDidResize","_sashListener","DisposableStore","_size","Dimension","_minSize","_maxSize","Number","MAX_SAFE_INTEGER","domNode","_eastSash","Sash","getVerticalSashLeft","orientation","_westSash","_northSash","getHorizontalSashTop","orthogonalEdge","OrthogonalEdge","_southSash","height","orthogonalStartSash","orthogonalEndSash","deltaY","deltaX","Event","onDidStart","fire","onDidEnd","dimension","done","onDidChange","e","currentX","startX","layout","east","west","currentY","startY","north","south","onDidReset","_preferredSize","dispose","state","size","minHeight","minWidth","maxHeight","maxWidth","Math","max","min","newSize","clearSashHoverState","value","__decorate","decorators","target","key","desc","d","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","onDidChangeGlobalSize","onDidChangeHoverDelay","MouseEventFactory","disposables","DomEmitter","window","memoize","prototype","GestureEventFactory","el","EventType","OrthogonalPointerEventFactory","factory","onPointerMove","onPointerUp","PointerEventsDisabledCssClass","layoutProvider","hoverDelay","hoverDelayer","Delayer","_state","onDidEnablementChange","_onDidStart","_onDidChange","_onDidReset","_onDidEnd","orthogonalStartSashDisposables","orthogonalStartDragHandleDisposables","orthogonalEndSashDisposables","orthogonalEndDragHandleDisposables","linkedSash","append","$","isMacintosh","onMouseDown","onPointerStart","onMouseDoubleClick","onPointerDoublePress","onMouseEnter","onMouseLeave","Gesture","onTouchStart","_a","assign","initialTarget","onTap","onDoubleTap","res","count","delay","toggle","_orthogonalStartSash","sash","clear","onChange","_orthogonalStartDragHandle","toDisposable","_orthogonalEndSash","_orthogonalEndDragHandle","pointerEventFactory","EventHelper","isMultisashResize","__orthogonalSashEvent","orthogonalSash","getOrthogonalSash","__linkedSashEvent","iframes","getElementsByTagName","pageX","pageY","altKey","startEvent","createStyleSheet","updateStyle","cursor","textContent","removeChild","verticalProvider","left","getVerticalSashTop","top","getVerticalSashHeight","horizontalProvider","getHorizontalSashLeft","getHorizontalSashWidth","HTMLElement","fromLinkedSash","trigger","then","ARROW_IMG_SIZE","ScrollbarArrow","opts","_onActivate","onActivate","bgDomNode","className","position","bgWidth","bgHeight","bottom","right","icon","classNamesArray","_pointerMoveMonitor","GlobalPointerMoveMonitor","dom","addStandardDisposableListener","POINTER_DOWN","_arrowPointerDown","_pointerdownRepeatTimer","IntervalTimer","_pointerdownScheduleRepeatTimer","TimeoutTimer","Element","cancelAndSet","startMonitoring","pointerId","buttons","pointerMoveData","preventDefault","Widget","ScrollbarVisibilityController","visibility","visibleClassName","invisibleClassName","_visibility","_visibleClassName","_invisibleClassName","_domNode","_isVisible","_isNeeded","_rawShouldBeVisible","_shouldBeVisible","_revealTimer","_updateShouldBeVisible","rawShouldBeVisible","shouldBeVisible","_applyVisibilitySetting","ensureVisibility","isNeeded","setClassName","setShouldBeVisible","_reveal","_hide","setIfNotSet","withFadeAway","AbstractScrollbar","_lazyRender","lazyRender","_host","host","_scrollable","scrollable","_scrollByPage","scrollByPage","_scrollbarState","scrollbarState","_visibilityController","extraScrollbarClassName","setIsNeeded","_shouldRender","createFastDomNode","setDomNode","setPosition","addDisposableListener","_domNodePointerDown","arrow","slider","setTop","setLeft","setWidth","setHeight","setLayerHinting","setContain","button","_sliderPointerDown","onclick","leftButton","stopPropagation","visibleSize","setVisibleSize","render","elementScrollSize","setScrollSize","elementScrollPosition","setScrollPosition","_renderDomNode","getRectangleLargeSize","getRectangleSmallSize","_updateSlider","getSliderSize","getArrowSize","getSliderPosition","_onPointerDown","domTop","getClientRects","sliderStart","sliderStop","pointerPos","_sliderPointerPosition","offsetX","offsetY","domNodePosition","getDomNodePagePosition","offset","_pointerDownRelativePosition","_setDesiredScrollPositionNow","getDesiredScrollPositionFromOffsetPaged","getDesiredScrollPositionFromOffset","initialPointerPosition","initialPointerOrthogonalPosition","_sliderOrthogonalPointerPosition","initialScrollbarState","clone","toggleClassName","pointerOrthogonalPosition","pointerOrthogonalDelta","abs","platform","getScrollPosition","pointerDelta","getDesiredScrollPositionFromDelta","onDragEnd","onDragStart","_desiredScrollPosition","desiredScrollPosition","writeScrollPosition","setScrollPositionNow","scrollbarSize","_updateScrollbarSize","setScrollbarSize","ScrollbarState","arrowSize","oppositeScrollbarSize","scrollSize","scrollPosition","_scrollbarSize","round","_oppositeScrollbarSize","_arrowSize","_visibleSize","_scrollSize","_scrollPosition","_computedAvailableSize","_computedIsNeeded","_computedSliderSize","_computedSliderRatio","_computedSliderPosition","_refreshComputedValues","iVisibleSize","iScrollSize","iScrollPosition","_computeValues","computedAvailableSize","computedIsNeeded","computedSliderSize","computedSliderRatio","computedSliderPosition","desiredSliderPosition","correctedOffset","delta","computedRepresentableSize","floor","HorizontalScrollbar","scrollDimensions","getScrollDimensions","getCurrentScrollPosition","horizontalHasArrows","horizontal","horizontalScrollbarSize","vertical","verticalScrollbarSize","scrollWidth","scrollLeft","arrowDelta","scrollbarDelta","_createArrow","Codicon","onMouseWheel","StandardWheelEvent","_createSlider","horizontalSliderSize","sliderSize","sliderPosition","largeSize","smallSize","setBottom","_onElementScrollSize","_onElementScrollPosition","_onElementSize","updateScrollbarSize","setOppositeScrollbarSize","setVisibility","VerticalScrollbar","verticalHasArrows","scrollHeight","scrollTop","verticalSliderSize","setRight","MouseWheelClassifierItem","timestamp","score","MouseWheelClassifier","_capacity","_memory","_front","_rear","remainingInfluence","iteration","index","influence","pow","item","_computeScore","_isAlmostInt","INSTANCE","AbstractScrollableElement","_onScroll","onScroll","_onWillScroll","overflow","_options","result","useShadows","handleMouseWheel","flipAxes","consumeMouseWheelIfScrollbarIsNeeded","alwaysConsumeMouseWheel","scrollYToX","mouseWheelScrollSensitivity","fastScrollSensitivity","scrollPredominantAxis","mouseWheelSmoothScroll","listenOnDomNode","resolveOptions","_onDidScroll","scrollbarHost","mouseWheelEvent","_onMouseWheel","_onDragStart","_onDragEnd","_verticalScrollbar","_horizontalScrollbar","_leftShadowDomNode","_topShadowDomNode","_topLeftShadowDomNode","_listenOnDomNode","_mouseWheelToDispose","_setListeningToMouseWheel","onmouseover","_onMouseOver","onmouseleave","_onMouseLeave","_hideTimeout","_isDragging","_mouseIsOver","_revealOnScroll","parent","insertBefore","browserEvent","delegatePointerDown","dimensions","setScrollDimensions","newClassName","newOptions","updateOptions","_render","shouldListen","push","MOUSE_WHEEL","passive","classifier","osZoomFactor","devicePixelRatio","getZoomFactor","accept","Date","now","didScroll","shiftConvert","shiftKey","futureScrollPosition","getFutureScrollPosition","deltaScrollTop","desiredScrollTop","ceil","deltaScrollLeft","desiredScrollLeft","validateScrollPosition","isPhysicalMouseWheel","setScrollPositionSmooth","consumeMouseWheel","onDidScroll","Error","scrollState","enableTop","enableLeft","leftClassName","topClassName","topLeftClassName","beginReveal","_scheduleHide","beginHide","ScrollableElement","Scrollable","forceIntegerValues","smoothScrollDuration","scheduleAtNextAnimationFrame","callback","update","SmoothScrollableElement","reuseAnimation","DomScrollableElement","_element","scrollTopChanged","scrollLeftChanged","scanDomNode","clientWidth","clientHeight","State","Sizing","defaultStyles","separatorBorder","ViewItem","view","disposable","_cachedVisibleSize","cachedVisibleSize","visible","_b","clamp","viewMinimumSize","viewMaximumSize","setVisible","call","minimumSize","maximumSize","priority","snap","enabled","pointerEvents","layoutContext","layoutContainer","VerticalViewItem","HorizontalViewItem","Distribute","type","Split","Invisible","SplitView","_c","_d","_e","contentSize","proportions","viewItems","sashItems","Idle","_onDidSashChange","_onDidSashReset","_startSnappingEnabled","_endSnappingEnabled","onDidSashChange","onDidSashReset","inverseAltBehavior","proportionalLayout","getSashOrthogonalSize","sashContainer","viewContainer","scrollableElement","scrollbarVisibility","getDomNode","descriptor","views","forEach","viewDescriptor","sizing","types","doAddView","reduce","saveProportions","startSnappingEnabled","updateSashEnablement","endSnappingEnabled","isTransparent","removeProperty","setProperty","skipLayout","previousSize","indexes","range","lowPriorityIndexes","filter","highPriorityIndexes","resize","distributeEmptySpace","layoutViews","map","start","alt","findIndex","combinedDisposable","body","resetSashDragState","sashDragState","current","snapBefore","snapAfter","sizes","minDelta","NEGATIVE_INFINITY","maxDelta","POSITIVE_INFINITY","viewItem","upIndexes","downIndexes","minDeltaUp","maxDeltaUp","maxDeltaDown","minDeltaDown","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","halfSize","limitDelta","newDelta","isLastSash","newSizes","viewItemIndex","newMinDelta","newMaxDelta","resizeIndex","indexOf","relayout","Busy","flexibleViewItems","flexibleSize","children","viewSize","onChangeDisposable","onViewChange","containerDisposable","getViewSize","splice","s","getSashPosition","sashEventMapper","onStart","onStartDisposable","onSashStart","onSashChange","onEnd","onEndDisposable","onSashEnd","onDidResetDisposable","sashItem","distributeViewSizes","overloadMinDelta","overloadMaxDelta","pushToStart","pushToEnd","upItems","upSizes","downItems","downSizes","snapped","snapView","deltaUp","viewDelta","deltaDown","lowPriorityIndex","emptyDelta","updateScrollableElement","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","snappedBefore","snappedAfter","TableListRenderer","columns","renderers","getColumnSize","templateId","TemplateId","renderedTemplates","Set","rendererMap","Map","column","renderer","get","rowContainer","cellContainers","cellTemplateData","cellContainer","renderTemplate","templateData","cell","project","renderElement","disposeElement","disposeTemplate","clearNode","delete","ColumnHeader","_onDidLayout","onDidLayout","title","tooltip","label","minimumWidth","maximumWidth","onDidChangeWidthConstraints","Table","user","virtualDelegate","domId","InstanceCount","cachedWidth","cachedHeight","headers","a","b","weight","splitview","headerRowHeight","lineHeight","delegate","list","List","getHeight","row","getTemplateId","h","layoutColumn","totalWeight","resizeView","styleElement","onDidChangeFocus","onDidChangeSelection","onMouseDblClick","onPointer","onDidFocus","onDidDispose","deleteCount","elements","content","join","getSelectedElements","getSelection","getFocus","inputActiveOptionBorder","inputActiveOptionForeground","inputActiveOptionBackground","Toggle","_onChange","_onKeyDown","onKeyDown","_opts","_checked","isChecked","classes","_icon","CSSIcon","actionClassName","split","notFocusable","tabIndex","String","ev","checked","ignoreGesture","onkeydown","keyboardEvent","keyCode","getAttribute","focus","newIsChecked","borderColor","color","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","apply","TreeElementsDragAndDropData","data","node","ElementsDragAndDropData","asTreeDragAndDropData","TreeNodeListDragAndDrop","modelProvider","dnd","autoExpandDisposable","getDragURI","nodes","originalEvent","getDragLabel","targetNode","targetIndex","raw","onDragOver","didChangeAutoExpandNode","autoExpandNode","autoExpand","disposableTimeout","model","ref","getNodeLocation","isCollapsed","setCollapsed","bubble","feedback","effect","parentRef","getParentNodeLocation","parentNode","getNode","parentIndex","getListIndex","getListRenderCount","drop","asListOptions","identityProvider","getId","multipleSelectionController","isSelectionSingleChangeEvent","isSelectionRangeChangeEvent","accessibilityProvider","getSetSize","visibleChildrenCount","getPosInSet","visibleChildIndex","getRole","getAriaLabel","getWidgetAriaLabel","getWidgetRole","getAriaLevel","depth","getActiveDescendantId","keyboardNavigationLabelProvider","getKeyboardNavigationLabel","RenderIndentGuides","ComposedTreeDelegate","hasDynamicHeight","setDynamicHeight","EventCollection","_elements","TreeRenderer","onDidChangeCollapseState","activeNodes","renderedElements","renderedNodes","indent","DefaultIndent","hideTwistiesOfChildlessElements","shouldRenderIndentGuides","renderedIndentGuides","SetMap","activeIndentNodes","indentGuidesDisposable","onDidChangeNodeTwistieState","onDidChangeTwistieState","renderIndentGuides","None","_onDidChangeActiveNodes","twistie","contents","set","paddingLeft","renderTwistie","twistieRendered","collapsible","collapsed","removeAttribute","disposableStore","guide","has","childElementCount","firstElementChild","line","TreeFindMode","FindFilter","tree","_filter","_totalCount","_matchCount","_pattern","_lowercasePattern","onWillRefilter","reset","parentVisibility","isFilterResult","getVisibleState","FuzzyScore","labels","Array","isArray","l","labelStr","fuzzyScore","toLowerCase","firstMatchCanBeWeak","boostFullMatch","findMode","Filter","ModeToggle","localize","FindController","contextViewProvider","_onDidChangeMode","onDidChangeMode","_onDidChangePattern","_onDidChangeOpenState","onDidChangeOpenState","enabledDisposables","_mode","defaultFindMode","Highlight","onDidSplice","onDidSpliceModel","mode","widget","refilter","pattern","noMatches","totalCount","matchCount","showMessage","clearMessage","filterData","asTreeMouseEvent","TreeMouseEventTarget","hasParentWithClass","dfs","fn","child","Trait","getFirstViewElementWithTrait","_nodeSet","createNodeSet","__forceEvent","equals","_set","silent","that","nodeSet","insertedNodes","deletedNodes","visit","values","deletedNodesIdSet","deletedNodesVisitor","insertedNodesMap","insertedNodesVisitor","id","insertedNode","TreeNodeListMouseController","isButton","isInputElement","isMonacoEditor","onTwistie","expandOnlyOnTwistieClick","detail","expandOnDoubleClick","location","recursive","setFocus","MouseController","TreeNodeList","focusTrait","selectionTrait","anchorTrait","anchor","additionalFocus","additionalSelection","distinct","fromAPI","AbstractTree","_user","eventBufferer","EventBufferer","onDidChangeFindOpenState","_onWillRefilter","_onDidUpdateOptions","treeDelegate","onDidChangeCollapseStateRelay","Relay","onDidChangeActiveNodes","getFocusedElements","selection","getAnchorElement","createModel","input","onDidModelSplice","bufferEvents","debounce","getNodes","keyboardSupport","StandardKeyboardEvent","on","onLeftArrow","onRightArrow","onSpace","findWidgetEnabled","findController","focusNavigationFilter","shouldAllowFocus","onDidChangeFindMode","getHTMLElement","Always","wrapEvent","optionsUpdate","domFocus","isNumber","suffix","treeIndentGuidesStroke","transparent","getFirstElementChild","isCollapsible","setCollapsible","setSelection","relativeTop","expandTo","reveal","parentLocation","parentListIndex","some","firstChildIndex","createAsyncDataTreeNode","props","refreshPromise","stale","slow","collapsedByDefault","isAncestor","ancestor","descendant","intersects","other","AsyncDataTreeNodeWrapper","AsyncDataTreeRenderer","nodeMapper","twistieElement","asTreeEvent","AsyncDataTreeElementsDragAndDropData","asAsyncDataTreeDragAndDropData","AsyncDataTreeNodeListDragAndDrop","asObjectTreeOptions","collapseByDefault","sorter","additionalScrollHeight","AsyncDataTree","dataSource","subTreeRefreshPromises","refreshPromises","_onDidRender","_onDidChangeNodeSlowState","WeakMapper","autoExpandSingleChildren","createTree","root","hasChildren","_onDidChangeCollapseState","onDidChangeModel","objectTreeDelegate","objectTreeRenderers","objectTreeOptions","ObjectTree","viewState","promise","viewStateContext","_updateChildren","rerender","TreeError","getDataNode","refreshAndRenderNode","dataNode","collapse","hasElement","expand","n","getParentElement","refreshNode","doRefreshSubTree","finally","doRefreshNode","childrenToRefresh","Promises","doGetChildren","isIterable","childrenPromise","slowTimeout","timeout","_","Iterable","setChildren","isCancellationError","getChildren","processChildren","createCancelablePromise","deep","catch","onUnexpectedError","childrenElementsIterable","childrenElements","nodesToForget","childrenTreeNodesById","asyncDataTreeNode","childAsyncDataTreeNode","expanded","asTreeElement","diffIdentityProvider","sort","compare","bind","CompressibleAsyncDataTreeNodeWrapper","incompressible","CompressibleAsyncDataTreeRenderer","compressibleNodeMapperProvider","renderCompressedElements","disposeCompressedElements","CompressibleAsyncDataTree","compressionDelegate","compressibleNodeMapper","getCompressedNodeKeyboardNavigationLabel","els","asCompressibleObjectTreeOptions","CompressibleObjectTree","isIncompressible","getUncompressedIds","compressedNode","getCompressedTreeNode","oldSelection","oldFocus","didChangeSelection","didChangeFocus","filterResult","DataTree","ObjectTreeModel","obj","isCollapsibleStateUpdate","IndexTreeModel","rootElement","rootRef","_onDidChangeRenderNodeCount","onDidChangeRenderNodeCount","_onDidSplice","refilterDelayer","MicrotaskDelay","renderNodeCount","toInsert","spliceSmart","spliceSimple","identity","toInsertIterable","recurseLevels","diffDepth","getParentNodeWithListIndex","lastDiffIds","diff","LcsDiff","getElements","slice","ComputeDiff","quitEarly","locationPrefix","recurseSplice","fromOriginal","fromModified","lastStartO","lastStartM","changes","originalStart","change","originalLength","modifiedStart","modifiedLength","onDidCreateNode","onDidDeleteNode","listIndex","revealed","treeListElementsToInsert","nodesToInsertIterator","createTreeNode","lastIndex","lastHadChildren","visibleChildStartIndex","nodesToInsert","insertedVisibleChildrenCount","deletedVisibleChildrenCount","visibleDeleteCount","_updateAncestorsRenderNodeCount","currentlyHasChildren","getTreeNodeWithListIndex","hasTreeNode","getTreeNode","_setCollapseState","_setListNodeCollapseState","onlyVisibleChildIndex","_setNodeCollapseState","previousRenderNodeCount","updateNodeAfterCollapseChange","updateNodeAfterFilterChange","treeElement","treeListElements","_filterNode","childElements","childRevealed","childNodes","pop","_updateNodeAfterCollapseChange","_updateNodeAfterFilterChange","resultStartLength","hasVisibleDescendants","rest","indexTreeNode","tail2","noCompress","compress","childrenIterator","_decompress","decompress","wrapIdentityProvider","base","CompressedObjectTreeModel","compressionEnabled","compressedParentNode","decompressedElement","splicedElement","recompressedElement","parentChildren","_setChildren","compressedChildren","Infinity","rootChildren","decompressedRootChildren","recompressedRootChildren","insertedElements","getCompressedNode","DefaultElementMapper","CompressedTreeNodeWrapper","unwrapper","mapList","updateElementHeight","mapOptions","compressedNodeUnwrapper","otherNode","CompressibleObjectTreeModel","elementMapper","setCompressionEnabled","CompressibleRenderer","_compressedTreeNodeProvider","compressedTreeNode","compressedTreeNodeProvider","compressibleRenderers","nodesByIdentity","getElementLocation","preserveCollapseState","insertedElementIds","tnode","MAX_VALUE","message","_map","WeakMap","listener","StandardMouseEvent"],"sourceRoot":""}