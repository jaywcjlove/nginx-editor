{"version":3,"file":"static/js/monaco-editor-vendor.e47de38b.6498c985.js","mappings":"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","sources":["../../node_modules/monaco-editor/esm/vs/base/common/glob.js","../../node_modules/monaco-editor/esm/vs/base/common/hash.js","../../node_modules/monaco-editor/esm/vs/base/common/navigator.js","../../node_modules/monaco-editor/esm/vs/base/common/history.js","../../node_modules/monaco-editor/esm/vs/base/common/hotReload.js","../../node_modules/monaco-editor/esm/vs/base/common/htmlContent.js","../../node_modules/monaco-editor/esm/vs/base/common/iconLabels.js","../../node_modules/monaco-editor/esm/vs/base/common/idGenerator.js","../../node_modules/monaco-editor/esm/vs/base/common/ime.js","../../node_modules/monaco-editor/esm/vs/base/common/iterator.js","../../node_modules/monaco-editor/esm/vs/base/common/keyCodes.js","../../node_modules/monaco-editor/esm/vs/base/common/keybindingLabels.js","../../node_modules/monaco-editor/esm/vs/base/common/keybindings.js","../../node_modules/monaco-editor/esm/vs/base/common/labels.js","../../node_modules/monaco-editor/esm/vs/base/common/lazy.js","../../node_modules/monaco-editor/esm/vs/base/common/lifecycle.js","../../node_modules/monaco-editor/esm/vs/base/common/linkedList.js","../../node_modules/monaco-editor/esm/vs/base/common/linkedText.js","../../node_modules/monaco-editor/esm/vs/base/common/map.js","../../node_modules/monaco-editor/esm/vs/base/common/marked/marked.js","../../node_modules/monaco-editor/esm/vs/base/common/marshalling.js","../../node_modules/monaco-editor/esm/vs/base/common/mime.js","../../node_modules/monaco-editor/esm/vs/base/common/network.js","../../node_modules/monaco-editor/esm/vs/base/common/numbers.js","../../node_modules/monaco-editor/esm/vs/base/common/objects.js","../../node_modules/monaco-editor/esm/vs/base/common/observableInternal/logging.js","../../node_modules/monaco-editor/esm/vs/base/common/observableInternal/base.js","../../node_modules/monaco-editor/esm/vs/base/common/observableInternal/derived.js","../../node_modules/monaco-editor/esm/vs/base/common/observableInternal/autorun.js","../../node_modules/monaco-editor/esm/vs/base/common/observableInternal/utils.js","../../node_modules/monaco-editor/esm/vs/base/common/path.js","../../node_modules/monaco-editor/esm/vs/base/common/platform.js","../../node_modules/monaco-editor/esm/vs/base/common/process.js","../../node_modules/monaco-editor/esm/vs/base/common/range.js","../../node_modules/monaco-editor/esm/vs/base/common/resources.js","../../node_modules/monaco-editor/esm/vs/base/common/scrollable.js","../../node_modules/monaco-editor/esm/vs/base/common/search.js","../../node_modules/monaco-editor/esm/vs/base/common/severity.js","../../node_modules/monaco-editor/esm/vs/base/common/stopwatch.js","../../node_modules/monaco-editor/esm/vs/base/common/strings.js","../../node_modules/monaco-editor/esm/vs/base/common/symbols.js","../../node_modules/monaco-editor/esm/vs/base/common/ternarySearchTree.js","../../node_modules/monaco-editor/esm/vs/base/common/tfIdf.js","../../node_modules/monaco-editor/esm/vs/base/common/themables.js","../../node_modules/monaco-editor/esm/vs/base/common/types.js","../../node_modules/monaco-editor/esm/vs/base/common/uint.js","../../node_modules/monaco-editor/esm/vs/base/common/uri.js","../../node_modules/monaco-editor/esm/vs/base/common/uuid.js"],"sourcesContent":["var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { isThenable } from './async.js';\nimport { isEqualOrParent } from './extpath.js';\nimport { LRUCache } from './map.js';\nimport { basename, extname, posix, sep } from './path.js';\nimport { isLinux } from './platform.js';\nimport { escapeRegExpCharacters, ltrim } from './strings.js';\nexport const GLOBSTAR = '**';\nexport const GLOB_SPLIT = '/';\nconst PATH_REGEX = '[/\\\\\\\\]'; // any slash or backslash\nconst NO_PATH_REGEX = '[^/\\\\\\\\]'; // any non-slash and non-backslash\nconst ALL_FORWARD_SLASHES = /\\//g;\nfunction starsToRegExp(starCount, isLastPattern) {\n    switch (starCount) {\n        case 0:\n            return '';\n        case 1:\n            return `${NO_PATH_REGEX}*?`; // 1 star matches any number of characters except path separator (/ and \\) - non greedy (?)\n        default:\n            // Matches:  (Path Sep OR Path Val followed by Path Sep) 0-many times except when it's the last pattern\n            //           in which case also matches (Path Sep followed by Path Val)\n            // Group is non capturing because we don't need to capture at all (?:...)\n            // Overall we use non-greedy matching because it could be that we match too much\n            return `(?:${PATH_REGEX}|${NO_PATH_REGEX}+${PATH_REGEX}${isLastPattern ? `|${PATH_REGEX}${NO_PATH_REGEX}+` : ''})*?`;\n    }\n}\nexport function splitGlobAware(pattern, splitChar) {\n    if (!pattern) {\n        return [];\n    }\n    const segments = [];\n    let inBraces = false;\n    let inBrackets = false;\n    let curVal = '';\n    for (const char of pattern) {\n        switch (char) {\n            case splitChar:\n                if (!inBraces && !inBrackets) {\n                    segments.push(curVal);\n                    curVal = '';\n                    continue;\n                }\n                break;\n            case '{':\n                inBraces = true;\n                break;\n            case '}':\n                inBraces = false;\n                break;\n            case '[':\n                inBrackets = true;\n                break;\n            case ']':\n                inBrackets = false;\n                break;\n        }\n        curVal += char;\n    }\n    // Tail\n    if (curVal) {\n        segments.push(curVal);\n    }\n    return segments;\n}\nfunction parseRegExp(pattern) {\n    if (!pattern) {\n        return '';\n    }\n    let regEx = '';\n    // Split up into segments for each slash found\n    const segments = splitGlobAware(pattern, GLOB_SPLIT);\n    // Special case where we only have globstars\n    if (segments.every(segment => segment === GLOBSTAR)) {\n        regEx = '.*';\n    }\n    // Build regex over segments\n    else {\n        let previousSegmentWasGlobStar = false;\n        segments.forEach((segment, index) => {\n            // Treat globstar specially\n            if (segment === GLOBSTAR) {\n                // if we have more than one globstar after another, just ignore it\n                if (previousSegmentWasGlobStar) {\n                    return;\n                }\n                regEx += starsToRegExp(2, index === segments.length - 1);\n            }\n            // Anything else, not globstar\n            else {\n                // States\n                let inBraces = false;\n                let braceVal = '';\n                let inBrackets = false;\n                let bracketVal = '';\n                for (const char of segment) {\n                    // Support brace expansion\n                    if (char !== '}' && inBraces) {\n                        braceVal += char;\n                        continue;\n                    }\n                    // Support brackets\n                    if (inBrackets && (char !== ']' || !bracketVal) /* ] is literally only allowed as first character in brackets to match it */) {\n                        let res;\n                        // range operator\n                        if (char === '-') {\n                            res = char;\n                        }\n                        // negation operator (only valid on first index in bracket)\n                        else if ((char === '^' || char === '!') && !bracketVal) {\n                            res = '^';\n                        }\n                        // glob split matching is not allowed within character ranges\n                        // see http://man7.org/linux/man-pages/man7/glob.7.html\n                        else if (char === GLOB_SPLIT) {\n                            res = '';\n                        }\n                        // anything else gets escaped\n                        else {\n                            res = escapeRegExpCharacters(char);\n                        }\n                        bracketVal += res;\n                        continue;\n                    }\n                    switch (char) {\n                        case '{':\n                            inBraces = true;\n                            continue;\n                        case '[':\n                            inBrackets = true;\n                            continue;\n                        case '}': {\n                            const choices = splitGlobAware(braceVal, ',');\n                            // Converts {foo,bar} => [foo|bar]\n                            const braceRegExp = `(?:${choices.map(choice => parseRegExp(choice)).join('|')})`;\n                            regEx += braceRegExp;\n                            inBraces = false;\n                            braceVal = '';\n                            break;\n                        }\n                        case ']': {\n                            regEx += ('[' + bracketVal + ']');\n                            inBrackets = false;\n                            bracketVal = '';\n                            break;\n                        }\n                        case '?':\n                            regEx += NO_PATH_REGEX; // 1 ? matches any single character except path separator (/ and \\)\n                            continue;\n                        case '*':\n                            regEx += starsToRegExp(1);\n                            continue;\n                        default:\n                            regEx += escapeRegExpCharacters(char);\n                    }\n                }\n                // Tail: Add the slash we had split on if there is more to\n                // come and the remaining pattern is not a globstar\n                // For example if pattern: some/**/*.js we want the \"/\" after\n                // some to be included in the RegEx to prevent a folder called\n                // \"something\" to match as well.\n                if (index < segments.length - 1 && // more segments to come after this\n                    (segments[index + 1] !== GLOBSTAR || // next segment is not **, or...\n                        index + 2 < segments.length // ...next segment is ** but there is more segments after that\n                    )) {\n                    regEx += PATH_REGEX;\n                }\n            }\n            // update globstar state\n            previousSegmentWasGlobStar = (segment === GLOBSTAR);\n        });\n    }\n    return regEx;\n}\n// regexes to check for trivial glob patterns that just check for String#endsWith\nconst T1 = /^\\*\\*\\/\\*\\.[\\w\\.-]+$/; // **/*.something\nconst T2 = /^\\*\\*\\/([\\w\\.-]+)\\/?$/; // **/something\nconst T3 = /^{\\*\\*\\/\\*?[\\w\\.-]+\\/?(,\\*\\*\\/\\*?[\\w\\.-]+\\/?)*}$/; // {**/*.something,**/*.else} or {**/package.json,**/project.json}\nconst T3_2 = /^{\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?(,\\*\\*\\/\\*?[\\w\\.-]+(\\/(\\*\\*)?)?)*}$/; // Like T3, with optional trailing /**\nconst T4 = /^\\*\\*((\\/[\\w\\.-]+)+)\\/?$/; // **/something/else\nconst T5 = /^([\\w\\.-]+(\\/[\\w\\.-]+)*)\\/?$/; // something/else\nconst CACHE = new LRUCache(10000); // bounded to 10000 elements\nconst FALSE = function () {\n    return false;\n};\nconst NULL = function () {\n    return null;\n};\nfunction parsePattern(arg1, options) {\n    if (!arg1) {\n        return NULL;\n    }\n    // Handle relative patterns\n    let pattern;\n    if (typeof arg1 !== 'string') {\n        pattern = arg1.pattern;\n    }\n    else {\n        pattern = arg1;\n    }\n    // Whitespace trimming\n    pattern = pattern.trim();\n    // Check cache\n    const patternKey = `${pattern}_${!!options.trimForExclusions}`;\n    let parsedPattern = CACHE.get(patternKey);\n    if (parsedPattern) {\n        return wrapRelativePattern(parsedPattern, arg1);\n    }\n    // Check for Trivials\n    let match;\n    if (T1.test(pattern)) {\n        parsedPattern = trivia1(pattern.substr(4), pattern); // common pattern: **/*.txt just need endsWith check\n    }\n    else if (match = T2.exec(trimForExclusions(pattern, options))) { // common pattern: **/some.txt just need basename check\n        parsedPattern = trivia2(match[1], pattern);\n    }\n    else if ((options.trimForExclusions ? T3_2 : T3).test(pattern)) { // repetition of common patterns (see above) {**/*.txt,**/*.png}\n        parsedPattern = trivia3(pattern, options);\n    }\n    else if (match = T4.exec(trimForExclusions(pattern, options))) { // common pattern: **/something/else just need endsWith check\n        parsedPattern = trivia4and5(match[1].substr(1), pattern, true);\n    }\n    else if (match = T5.exec(trimForExclusions(pattern, options))) { // common pattern: something/else just need equals check\n        parsedPattern = trivia4and5(match[1], pattern, false);\n    }\n    // Otherwise convert to pattern\n    else {\n        parsedPattern = toRegExp(pattern);\n    }\n    // Cache\n    CACHE.set(patternKey, parsedPattern);\n    return wrapRelativePattern(parsedPattern, arg1);\n}\nfunction wrapRelativePattern(parsedPattern, arg2) {\n    if (typeof arg2 === 'string') {\n        return parsedPattern;\n    }\n    const wrappedPattern = function (path, basename) {\n        if (!isEqualOrParent(path, arg2.base, !isLinux)) {\n            // skip glob matching if `base` is not a parent of `path`\n            return null;\n        }\n        // Given we have checked `base` being a parent of `path`,\n        // we can now remove the `base` portion of the `path`\n        // and only match on the remaining path components\n        // For that we try to extract the portion of the `path`\n        // that comes after the `base` portion. We have to account\n        // for the fact that `base` might end in a path separator\n        // (https://github.com/microsoft/vscode/issues/162498)\n        return parsedPattern(ltrim(path.substr(arg2.base.length), sep), basename);\n    };\n    // Make sure to preserve associated metadata\n    wrappedPattern.allBasenames = parsedPattern.allBasenames;\n    wrappedPattern.allPaths = parsedPattern.allPaths;\n    wrappedPattern.basenames = parsedPattern.basenames;\n    wrappedPattern.patterns = parsedPattern.patterns;\n    return wrappedPattern;\n}\nfunction trimForExclusions(pattern, options) {\n    return options.trimForExclusions && pattern.endsWith('/**') ? pattern.substr(0, pattern.length - 2) : pattern; // dropping **, tailing / is dropped later\n}\n// common pattern: **/*.txt just need endsWith check\nfunction trivia1(base, pattern) {\n    return function (path, basename) {\n        return typeof path === 'string' && path.endsWith(base) ? pattern : null;\n    };\n}\n// common pattern: **/some.txt just need basename check\nfunction trivia2(base, pattern) {\n    const slashBase = `/${base}`;\n    const backslashBase = `\\\\${base}`;\n    const parsedPattern = function (path, basename) {\n        if (typeof path !== 'string') {\n            return null;\n        }\n        if (basename) {\n            return basename === base ? pattern : null;\n        }\n        return path === base || path.endsWith(slashBase) || path.endsWith(backslashBase) ? pattern : null;\n    };\n    const basenames = [base];\n    parsedPattern.basenames = basenames;\n    parsedPattern.patterns = [pattern];\n    parsedPattern.allBasenames = basenames;\n    return parsedPattern;\n}\n// repetition of common patterns (see above) {**/*.txt,**/*.png}\nfunction trivia3(pattern, options) {\n    const parsedPatterns = aggregateBasenameMatches(pattern.slice(1, -1)\n        .split(',')\n        .map(pattern => parsePattern(pattern, options))\n        .filter(pattern => pattern !== NULL), pattern);\n    const patternsLength = parsedPatterns.length;\n    if (!patternsLength) {\n        return NULL;\n    }\n    if (patternsLength === 1) {\n        return parsedPatterns[0];\n    }\n    const parsedPattern = function (path, basename) {\n        for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n            if (parsedPatterns[i](path, basename)) {\n                return pattern;\n            }\n        }\n        return null;\n    };\n    const withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n    if (withBasenames) {\n        parsedPattern.allBasenames = withBasenames.allBasenames;\n    }\n    const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, []);\n    if (allPaths.length) {\n        parsedPattern.allPaths = allPaths;\n    }\n    return parsedPattern;\n}\n// common patterns: **/something/else just need endsWith check, something/else just needs and equals check\nfunction trivia4and5(targetPath, pattern, matchPathEnds) {\n    const usingPosixSep = sep === posix.sep;\n    const nativePath = usingPosixSep ? targetPath : targetPath.replace(ALL_FORWARD_SLASHES, sep);\n    const nativePathEnd = sep + nativePath;\n    const targetPathEnd = posix.sep + targetPath;\n    let parsedPattern;\n    if (matchPathEnds) {\n        parsedPattern = function (path, basename) {\n            return typeof path === 'string' && ((path === nativePath || path.endsWith(nativePathEnd)) || !usingPosixSep && (path === targetPath || path.endsWith(targetPathEnd))) ? pattern : null;\n        };\n    }\n    else {\n        parsedPattern = function (path, basename) {\n            return typeof path === 'string' && (path === nativePath || (!usingPosixSep && path === targetPath)) ? pattern : null;\n        };\n    }\n    parsedPattern.allPaths = [(matchPathEnds ? '*/' : './') + targetPath];\n    return parsedPattern;\n}\nfunction toRegExp(pattern) {\n    try {\n        const regExp = new RegExp(`^${parseRegExp(pattern)}$`);\n        return function (path) {\n            regExp.lastIndex = 0; // reset RegExp to its initial state to reuse it!\n            return typeof path === 'string' && regExp.test(path) ? pattern : null;\n        };\n    }\n    catch (error) {\n        return NULL;\n    }\n}\nexport function match(arg1, path, hasSibling) {\n    if (!arg1 || typeof path !== 'string') {\n        return false;\n    }\n    return parse(arg1)(path, undefined, hasSibling);\n}\nexport function parse(arg1, options = {}) {\n    if (!arg1) {\n        return FALSE;\n    }\n    // Glob with String\n    if (typeof arg1 === 'string' || isRelativePattern(arg1)) {\n        const parsedPattern = parsePattern(arg1, options);\n        if (parsedPattern === NULL) {\n            return FALSE;\n        }\n        const resultPattern = function (path, basename) {\n            return !!parsedPattern(path, basename);\n        };\n        if (parsedPattern.allBasenames) {\n            resultPattern.allBasenames = parsedPattern.allBasenames;\n        }\n        if (parsedPattern.allPaths) {\n            resultPattern.allPaths = parsedPattern.allPaths;\n        }\n        return resultPattern;\n    }\n    // Glob with Expression\n    return parsedExpression(arg1, options);\n}\nexport function isRelativePattern(obj) {\n    const rp = obj;\n    if (!rp) {\n        return false;\n    }\n    return typeof rp.base === 'string' && typeof rp.pattern === 'string';\n}\nfunction parsedExpression(expression, options) {\n    const parsedPatterns = aggregateBasenameMatches(Object.getOwnPropertyNames(expression)\n        .map(pattern => parseExpressionPattern(pattern, expression[pattern], options))\n        .filter(pattern => pattern !== NULL));\n    const patternsLength = parsedPatterns.length;\n    if (!patternsLength) {\n        return NULL;\n    }\n    if (!parsedPatterns.some(parsedPattern => !!parsedPattern.requiresSiblings)) {\n        if (patternsLength === 1) {\n            return parsedPatterns[0];\n        }\n        const resultExpression = function (path, basename) {\n            let resultPromises = undefined;\n            for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n                const result = parsedPatterns[i](path, basename);\n                if (typeof result === 'string') {\n                    return result; // immediately return as soon as the first expression matches\n                }\n                // If the result is a promise, we have to keep it for\n                // later processing and await the result properly.\n                if (isThenable(result)) {\n                    if (!resultPromises) {\n                        resultPromises = [];\n                    }\n                    resultPromises.push(result);\n                }\n            }\n            // With result promises, we have to loop over each and\n            // await the result before we can return any result.\n            if (resultPromises) {\n                return (() => __awaiter(this, void 0, void 0, function* () {\n                    for (const resultPromise of resultPromises) {\n                        const result = yield resultPromise;\n                        if (typeof result === 'string') {\n                            return result;\n                        }\n                    }\n                    return null;\n                }))();\n            }\n            return null;\n        };\n        const withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n        if (withBasenames) {\n            resultExpression.allBasenames = withBasenames.allBasenames;\n        }\n        const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, []);\n        if (allPaths.length) {\n            resultExpression.allPaths = allPaths;\n        }\n        return resultExpression;\n    }\n    const resultExpression = function (path, base, hasSibling) {\n        let name = undefined;\n        let resultPromises = undefined;\n        for (let i = 0, n = parsedPatterns.length; i < n; i++) {\n            // Pattern matches path\n            const parsedPattern = parsedPatterns[i];\n            if (parsedPattern.requiresSiblings && hasSibling) {\n                if (!base) {\n                    base = basename(path);\n                }\n                if (!name) {\n                    name = base.substr(0, base.length - extname(path).length);\n                }\n            }\n            const result = parsedPattern(path, base, name, hasSibling);\n            if (typeof result === 'string') {\n                return result; // immediately return as soon as the first expression matches\n            }\n            // If the result is a promise, we have to keep it for\n            // later processing and await the result properly.\n            if (isThenable(result)) {\n                if (!resultPromises) {\n                    resultPromises = [];\n                }\n                resultPromises.push(result);\n            }\n        }\n        // With result promises, we have to loop over each and\n        // await the result before we can return any result.\n        if (resultPromises) {\n            return (() => __awaiter(this, void 0, void 0, function* () {\n                for (const resultPromise of resultPromises) {\n                    const result = yield resultPromise;\n                    if (typeof result === 'string') {\n                        return result;\n                    }\n                }\n                return null;\n            }))();\n        }\n        return null;\n    };\n    const withBasenames = parsedPatterns.find(pattern => !!pattern.allBasenames);\n    if (withBasenames) {\n        resultExpression.allBasenames = withBasenames.allBasenames;\n    }\n    const allPaths = parsedPatterns.reduce((all, current) => current.allPaths ? all.concat(current.allPaths) : all, []);\n    if (allPaths.length) {\n        resultExpression.allPaths = allPaths;\n    }\n    return resultExpression;\n}\nfunction parseExpressionPattern(pattern, value, options) {\n    if (value === false) {\n        return NULL; // pattern is disabled\n    }\n    const parsedPattern = parsePattern(pattern, options);\n    if (parsedPattern === NULL) {\n        return NULL;\n    }\n    // Expression Pattern is <boolean>\n    if (typeof value === 'boolean') {\n        return parsedPattern;\n    }\n    // Expression Pattern is <SiblingClause>\n    if (value) {\n        const when = value.when;\n        if (typeof when === 'string') {\n            const result = (path, basename, name, hasSibling) => {\n                if (!hasSibling || !parsedPattern(path, basename)) {\n                    return null;\n                }\n                const clausePattern = when.replace('$(basename)', () => name);\n                const matched = hasSibling(clausePattern);\n                return isThenable(matched) ?\n                    matched.then(match => match ? pattern : null) :\n                    matched ? pattern : null;\n            };\n            result.requiresSiblings = true;\n            return result;\n        }\n    }\n    // Expression is anything\n    return parsedPattern;\n}\nfunction aggregateBasenameMatches(parsedPatterns, result) {\n    const basenamePatterns = parsedPatterns.filter(parsedPattern => !!parsedPattern.basenames);\n    if (basenamePatterns.length < 2) {\n        return parsedPatterns;\n    }\n    const basenames = basenamePatterns.reduce((all, current) => {\n        const basenames = current.basenames;\n        return basenames ? all.concat(basenames) : all;\n    }, []);\n    let patterns;\n    if (result) {\n        patterns = [];\n        for (let i = 0, n = basenames.length; i < n; i++) {\n            patterns.push(result);\n        }\n    }\n    else {\n        patterns = basenamePatterns.reduce((all, current) => {\n            const patterns = current.patterns;\n            return patterns ? all.concat(patterns) : all;\n        }, []);\n    }\n    const aggregate = function (path, basename) {\n        if (typeof path !== 'string') {\n            return null;\n        }\n        if (!basename) {\n            let i;\n            for (i = path.length; i > 0; i--) {\n                const ch = path.charCodeAt(i - 1);\n                if (ch === 47 /* CharCode.Slash */ || ch === 92 /* CharCode.Backslash */) {\n                    break;\n                }\n            }\n            basename = path.substr(i);\n        }\n        const index = basenames.indexOf(basename);\n        return index !== -1 ? patterns[index] : null;\n    };\n    aggregate.basenames = basenames;\n    aggregate.patterns = patterns;\n    aggregate.allBasenames = basenames;\n    const aggregatedPatterns = parsedPatterns.filter(parsedPattern => !parsedPattern.basenames);\n    aggregatedPatterns.push(aggregate);\n    return aggregatedPatterns;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\n/**\n * Return a hash value for an object.\n */\nexport function hash(obj) {\n    return doHash(obj, 0);\n}\nexport function doHash(obj, hashVal) {\n    switch (typeof obj) {\n        case 'object':\n            if (obj === null) {\n                return numberHash(349, hashVal);\n            }\n            else if (Array.isArray(obj)) {\n                return arrayHash(obj, hashVal);\n            }\n            return objectHash(obj, hashVal);\n        case 'string':\n            return stringHash(obj, hashVal);\n        case 'boolean':\n            return booleanHash(obj, hashVal);\n        case 'number':\n            return numberHash(obj, hashVal);\n        case 'undefined':\n            return numberHash(937, hashVal);\n        default:\n            return numberHash(617, hashVal);\n    }\n}\nexport function numberHash(val, initialHashVal) {\n    return (((initialHashVal << 5) - initialHashVal) + val) | 0; // hashVal * 31 + ch, keep as int32\n}\nfunction booleanHash(b, initialHashVal) {\n    return numberHash(b ? 433 : 863, initialHashVal);\n}\nexport function stringHash(s, hashVal) {\n    hashVal = numberHash(149417, hashVal);\n    for (let i = 0, length = s.length; i < length; i++) {\n        hashVal = numberHash(s.charCodeAt(i), hashVal);\n    }\n    return hashVal;\n}\nfunction arrayHash(arr, initialHashVal) {\n    initialHashVal = numberHash(104579, initialHashVal);\n    return arr.reduce((hashVal, item) => doHash(item, hashVal), initialHashVal);\n}\nfunction objectHash(obj, initialHashVal) {\n    initialHashVal = numberHash(181387, initialHashVal);\n    return Object.keys(obj).sort().reduce((hashVal, key) => {\n        hashVal = stringHash(key, hashVal);\n        return doHash(obj[key], hashVal);\n    }, initialHashVal);\n}\nfunction leftRotate(value, bits, totalBits = 32) {\n    // delta + bits = totalBits\n    const delta = totalBits - bits;\n    // All ones, expect `delta` zeros aligned to the right\n    const mask = ~((1 << delta) - 1);\n    // Join (value left-shifted `bits` bits) with (masked value right-shifted `delta` bits)\n    return ((value << bits) | ((mask & value) >>> delta)) >>> 0;\n}\nfunction fill(dest, index = 0, count = dest.byteLength, value = 0) {\n    for (let i = 0; i < count; i++) {\n        dest[index + i] = value;\n    }\n}\nfunction leftPad(value, length, char = '0') {\n    while (value.length < length) {\n        value = char + value;\n    }\n    return value;\n}\nexport function toHexString(bufferOrValue, bitsize = 32) {\n    if (bufferOrValue instanceof ArrayBuffer) {\n        return Array.from(new Uint8Array(bufferOrValue)).map(b => b.toString(16).padStart(2, '0')).join('');\n    }\n    return leftPad((bufferOrValue >>> 0).toString(16), bitsize / 4);\n}\n/**\n * A SHA1 implementation that works with strings and does not allocate.\n */\nexport class StringSHA1 {\n    constructor() {\n        this._h0 = 0x67452301;\n        this._h1 = 0xEFCDAB89;\n        this._h2 = 0x98BADCFE;\n        this._h3 = 0x10325476;\n        this._h4 = 0xC3D2E1F0;\n        this._buff = new Uint8Array(64 /* SHA1Constant.BLOCK_SIZE */ + 3 /* to fit any utf-8 */);\n        this._buffDV = new DataView(this._buff.buffer);\n        this._buffLen = 0;\n        this._totalLen = 0;\n        this._leftoverHighSurrogate = 0;\n        this._finished = false;\n    }\n    update(str) {\n        const strLen = str.length;\n        if (strLen === 0) {\n            return;\n        }\n        const buff = this._buff;\n        let buffLen = this._buffLen;\n        let leftoverHighSurrogate = this._leftoverHighSurrogate;\n        let charCode;\n        let offset;\n        if (leftoverHighSurrogate !== 0) {\n            charCode = leftoverHighSurrogate;\n            offset = -1;\n            leftoverHighSurrogate = 0;\n        }\n        else {\n            charCode = str.charCodeAt(0);\n            offset = 0;\n        }\n        while (true) {\n            let codePoint = charCode;\n            if (strings.isHighSurrogate(charCode)) {\n                if (offset + 1 < strLen) {\n                    const nextCharCode = str.charCodeAt(offset + 1);\n                    if (strings.isLowSurrogate(nextCharCode)) {\n                        offset++;\n                        codePoint = strings.computeCodePoint(charCode, nextCharCode);\n                    }\n                    else {\n                        // illegal => unicode replacement character\n                        codePoint = 65533 /* SHA1Constant.UNICODE_REPLACEMENT */;\n                    }\n                }\n                else {\n                    // last character is a surrogate pair\n                    leftoverHighSurrogate = charCode;\n                    break;\n                }\n            }\n            else if (strings.isLowSurrogate(charCode)) {\n                // illegal => unicode replacement character\n                codePoint = 65533 /* SHA1Constant.UNICODE_REPLACEMENT */;\n            }\n            buffLen = this._push(buff, buffLen, codePoint);\n            offset++;\n            if (offset < strLen) {\n                charCode = str.charCodeAt(offset);\n            }\n            else {\n                break;\n            }\n        }\n        this._buffLen = buffLen;\n        this._leftoverHighSurrogate = leftoverHighSurrogate;\n    }\n    _push(buff, buffLen, codePoint) {\n        if (codePoint < 0x0080) {\n            buff[buffLen++] = codePoint;\n        }\n        else if (codePoint < 0x0800) {\n            buff[buffLen++] = 0b11000000 | ((codePoint & 0b00000000000000000000011111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else if (codePoint < 0x10000) {\n            buff[buffLen++] = 0b11100000 | ((codePoint & 0b00000000000000001111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        else {\n            buff[buffLen++] = 0b11110000 | ((codePoint & 0b00000000000111000000000000000000) >>> 18);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000111111000000000000) >>> 12);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000111111000000) >>> 6);\n            buff[buffLen++] = 0b10000000 | ((codePoint & 0b00000000000000000000000000111111) >>> 0);\n        }\n        if (buffLen >= 64 /* SHA1Constant.BLOCK_SIZE */) {\n            this._step();\n            buffLen -= 64 /* SHA1Constant.BLOCK_SIZE */;\n            this._totalLen += 64 /* SHA1Constant.BLOCK_SIZE */;\n            // take last 3 in case of UTF8 overflow\n            buff[0] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 0];\n            buff[1] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 1];\n            buff[2] = buff[64 /* SHA1Constant.BLOCK_SIZE */ + 2];\n        }\n        return buffLen;\n    }\n    digest() {\n        if (!this._finished) {\n            this._finished = true;\n            if (this._leftoverHighSurrogate) {\n                // illegal => unicode replacement character\n                this._leftoverHighSurrogate = 0;\n                this._buffLen = this._push(this._buff, this._buffLen, 65533 /* SHA1Constant.UNICODE_REPLACEMENT */);\n            }\n            this._totalLen += this._buffLen;\n            this._wrapUp();\n        }\n        return toHexString(this._h0) + toHexString(this._h1) + toHexString(this._h2) + toHexString(this._h3) + toHexString(this._h4);\n    }\n    _wrapUp() {\n        this._buff[this._buffLen++] = 0x80;\n        fill(this._buff, this._buffLen);\n        if (this._buffLen > 56) {\n            this._step();\n            fill(this._buff);\n        }\n        // this will fit because the mantissa can cover up to 52 bits\n        const ml = 8 * this._totalLen;\n        this._buffDV.setUint32(56, Math.floor(ml / 4294967296), false);\n        this._buffDV.setUint32(60, ml % 4294967296, false);\n        this._step();\n    }\n    _step() {\n        const bigBlock32 = StringSHA1._bigBlock32;\n        const data = this._buffDV;\n        for (let j = 0; j < 64 /* 16*4 */; j += 4) {\n            bigBlock32.setUint32(j, data.getUint32(j, false), false);\n        }\n        for (let j = 64; j < 320 /* 80*4 */; j += 4) {\n            bigBlock32.setUint32(j, leftRotate((bigBlock32.getUint32(j - 12, false) ^ bigBlock32.getUint32(j - 32, false) ^ bigBlock32.getUint32(j - 56, false) ^ bigBlock32.getUint32(j - 64, false)), 1), false);\n        }\n        let a = this._h0;\n        let b = this._h1;\n        let c = this._h2;\n        let d = this._h3;\n        let e = this._h4;\n        let f, k;\n        let temp;\n        for (let j = 0; j < 80; j++) {\n            if (j < 20) {\n                f = (b & c) | ((~b) & d);\n                k = 0x5A827999;\n            }\n            else if (j < 40) {\n                f = b ^ c ^ d;\n                k = 0x6ED9EBA1;\n            }\n            else if (j < 60) {\n                f = (b & c) | (b & d) | (c & d);\n                k = 0x8F1BBCDC;\n            }\n            else {\n                f = b ^ c ^ d;\n                k = 0xCA62C1D6;\n            }\n            temp = (leftRotate(a, 5) + f + e + k + bigBlock32.getUint32(j * 4, false)) & 0xffffffff;\n            e = d;\n            d = c;\n            c = leftRotate(b, 30);\n            b = a;\n            a = temp;\n        }\n        this._h0 = (this._h0 + a) & 0xffffffff;\n        this._h1 = (this._h1 + b) & 0xffffffff;\n        this._h2 = (this._h2 + c) & 0xffffffff;\n        this._h3 = (this._h3 + d) & 0xffffffff;\n        this._h4 = (this._h4 + e) & 0xffffffff;\n    }\n}\nStringSHA1._bigBlock32 = new DataView(new ArrayBuffer(320)); // 80 * 4 = 320\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class ArrayNavigator {\n    constructor(items, start = 0, end = items.length, index = start - 1) {\n        this.items = items;\n        this.start = start;\n        this.end = end;\n        this.index = index;\n    }\n    current() {\n        if (this.index === this.start - 1 || this.index === this.end) {\n            return null;\n        }\n        return this.items[this.index];\n    }\n    next() {\n        this.index = Math.min(this.index + 1, this.end);\n        return this.current();\n    }\n    previous() {\n        this.index = Math.max(this.index - 1, this.start - 1);\n        return this.current();\n    }\n    first() {\n        this.index = this.start;\n        return this.current();\n    }\n    last() {\n        this.index = this.end - 1;\n        return this.current();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ArrayNavigator } from './navigator.js';\nexport class HistoryNavigator {\n    constructor(history = [], limit = 10) {\n        this._initialize(history);\n        this._limit = limit;\n        this._onChange();\n    }\n    getHistory() {\n        return this._elements;\n    }\n    add(t) {\n        this._history.delete(t);\n        this._history.add(t);\n        this._onChange();\n    }\n    next() {\n        // This will navigate past the end of the last element, and in that case the input should be cleared\n        return this._navigator.next();\n    }\n    previous() {\n        if (this._currentPosition() !== 0) {\n            return this._navigator.previous();\n        }\n        return null;\n    }\n    current() {\n        return this._navigator.current();\n    }\n    first() {\n        return this._navigator.first();\n    }\n    last() {\n        return this._navigator.last();\n    }\n    isLast() {\n        return this._currentPosition() >= this._elements.length - 1;\n    }\n    isNowhere() {\n        return this._navigator.current() === null;\n    }\n    has(t) {\n        return this._history.has(t);\n    }\n    _onChange() {\n        this._reduceToLimit();\n        const elements = this._elements;\n        this._navigator = new ArrayNavigator(elements, 0, elements.length, elements.length);\n    }\n    _reduceToLimit() {\n        const data = this._elements;\n        if (data.length > this._limit) {\n            this._initialize(data.slice(data.length - this._limit));\n        }\n    }\n    _currentPosition() {\n        const currentElement = this._navigator.current();\n        if (!currentElement) {\n            return -1;\n        }\n        return this._elements.indexOf(currentElement);\n    }\n    _initialize(history) {\n        this._history = new Set();\n        for (const entry of history) {\n            this._history.add(entry);\n        }\n    }\n    get _elements() {\n        const elements = [];\n        this._history.forEach(e => elements.push(e));\n        return elements;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { env } from './process.js';\nexport function isHotReloadEnabled() {\n    return !!env['VSCODE_DEV'];\n}\nexport function registerHotReloadHandler(handler) {\n    if (!isHotReloadEnabled()) {\n        return { dispose() { } };\n    }\n    else {\n        const handlers = registerGlobalHotReloadHandler();\n        handlers.add(handler);\n        return {\n            dispose() { handlers.delete(handler); }\n        };\n    }\n}\nfunction registerGlobalHotReloadHandler() {\n    if (!hotReloadHandlers) {\n        hotReloadHandlers = new Set();\n    }\n    const g = globalThis;\n    if (!g.$hotReload_applyNewExports) {\n        g.$hotReload_applyNewExports = oldExports => {\n            for (const h of hotReloadHandlers) {\n                const result = h(oldExports);\n                if (result) {\n                    return result;\n                }\n            }\n            return undefined;\n        };\n    }\n    return hotReloadHandlers;\n}\nlet hotReloadHandlers = undefined;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nimport { escapeIcons } from './iconLabels.js';\nimport { isEqual } from './resources.js';\nimport { escapeRegExpCharacters } from './strings.js';\nimport { URI } from './uri.js';\nexport class MarkdownString {\n    constructor(value = '', isTrustedOrOptions = false) {\n        var _a, _b, _c;\n        this.value = value;\n        if (typeof this.value !== 'string') {\n            throw illegalArgument('value');\n        }\n        if (typeof isTrustedOrOptions === 'boolean') {\n            this.isTrusted = isTrustedOrOptions;\n            this.supportThemeIcons = false;\n            this.supportHtml = false;\n        }\n        else {\n            this.isTrusted = (_a = isTrustedOrOptions.isTrusted) !== null && _a !== void 0 ? _a : undefined;\n            this.supportThemeIcons = (_b = isTrustedOrOptions.supportThemeIcons) !== null && _b !== void 0 ? _b : false;\n            this.supportHtml = (_c = isTrustedOrOptions.supportHtml) !== null && _c !== void 0 ? _c : false;\n        }\n    }\n    appendText(value, newlineStyle = 0 /* MarkdownStringTextNewlineStyle.Paragraph */) {\n        this.value += escapeMarkdownSyntaxTokens(this.supportThemeIcons ? escapeIcons(value) : value)\n            .replace(/([ \\t]+)/g, (_match, g1) => '&nbsp;'.repeat(g1.length)) // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n            .replace(/\\>/gm, '\\\\>') // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n            .replace(/\\n/g, newlineStyle === 1 /* MarkdownStringTextNewlineStyle.Break */ ? '\\\\\\n' : '\\n\\n'); // CodeQL [SM02383] The Markdown is fully sanitized after being rendered.\n        return this;\n    }\n    appendMarkdown(value) {\n        this.value += value;\n        return this;\n    }\n    appendCodeblock(langId, code) {\n        this.value += '\\n```';\n        this.value += langId;\n        this.value += '\\n';\n        this.value += code;\n        this.value += '\\n```\\n';\n        return this;\n    }\n    appendLink(target, label, title) {\n        this.value += '[';\n        this.value += this._escape(label, ']');\n        this.value += '](';\n        this.value += this._escape(String(target), ')');\n        if (title) {\n            this.value += ` \"${this._escape(this._escape(title, '\"'), ')')}\"`;\n        }\n        this.value += ')';\n        return this;\n    }\n    _escape(value, ch) {\n        const r = new RegExp(escapeRegExpCharacters(ch), 'g');\n        return value.replace(r, (match, offset) => {\n            if (value.charAt(offset - 1) !== '\\\\') {\n                return `\\\\${match}`;\n            }\n            else {\n                return match;\n            }\n        });\n    }\n}\nexport function isEmptyMarkdownString(oneOrMany) {\n    if (isMarkdownString(oneOrMany)) {\n        return !oneOrMany.value;\n    }\n    else if (Array.isArray(oneOrMany)) {\n        return oneOrMany.every(isEmptyMarkdownString);\n    }\n    else {\n        return true;\n    }\n}\nexport function isMarkdownString(thing) {\n    if (thing instanceof MarkdownString) {\n        return true;\n    }\n    else if (thing && typeof thing === 'object') {\n        return typeof thing.value === 'string'\n            && (typeof thing.isTrusted === 'boolean' || typeof thing.isTrusted === 'object' || thing.isTrusted === undefined)\n            && (typeof thing.supportThemeIcons === 'boolean' || thing.supportThemeIcons === undefined);\n    }\n    return false;\n}\nexport function markdownStringEqual(a, b) {\n    if (a === b) {\n        return true;\n    }\n    else if (!a || !b) {\n        return false;\n    }\n    else {\n        return a.value === b.value\n            && a.isTrusted === b.isTrusted\n            && a.supportThemeIcons === b.supportThemeIcons\n            && a.supportHtml === b.supportHtml\n            && (a.baseUri === b.baseUri || !!a.baseUri && !!b.baseUri && isEqual(URI.from(a.baseUri), URI.from(b.baseUri)));\n    }\n}\nexport function escapeMarkdownSyntaxTokens(text) {\n    // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    return text.replace(/[\\\\`*_{}[\\]()#+\\-!~]/g, '\\\\$&'); // CodeQL [SM02383] Backslash is escaped in the character class\n}\nexport function escapeDoubleQuotes(input) {\n    return input.replace(/\"/g, '&quot;');\n}\nexport function removeMarkdownEscapes(text) {\n    if (!text) {\n        return text;\n    }\n    return text.replace(/\\\\([\\\\`*_{}[\\]()#+\\-.!~])/g, '$1');\n}\nexport function parseHrefAndDimensions(href) {\n    const dimensions = [];\n    const splitted = href.split('|').map(s => s.trim());\n    href = splitted[0];\n    const parameters = splitted[1];\n    if (parameters) {\n        const heightFromParams = /height=(\\d+)/.exec(parameters);\n        const widthFromParams = /width=(\\d+)/.exec(parameters);\n        const height = heightFromParams ? heightFromParams[1] : '';\n        const width = widthFromParams ? widthFromParams[1] : '';\n        const widthIsFinite = isFinite(parseInt(width));\n        const heightIsFinite = isFinite(parseInt(height));\n        if (widthIsFinite) {\n            dimensions.push(`width=\"${width}\"`);\n        }\n        if (heightIsFinite) {\n            dimensions.push(`height=\"${height}\"`);\n        }\n    }\n    return { href, dimensions };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { matchesFuzzy } from './filters.js';\nimport { ltrim } from './strings.js';\nimport { ThemeIcon } from './themables.js';\nconst iconStartMarker = '$(';\nconst iconsRegex = new RegExp(`\\\\$\\\\(${ThemeIcon.iconNameExpression}(?:${ThemeIcon.iconModifierExpression})?\\\\)`, 'g'); // no capturing groups\nconst escapeIconsRegex = new RegExp(`(\\\\\\\\)?${iconsRegex.source}`, 'g');\nexport function escapeIcons(text) {\n    return text.replace(escapeIconsRegex, (match, escaped) => escaped ? match : `\\\\${match}`);\n}\nconst markdownEscapedIconsRegex = new RegExp(`\\\\\\\\${iconsRegex.source}`, 'g');\nexport function markdownEscapeEscapedIcons(text) {\n    // Need to add an extra \\ for escaping in markdown\n    return text.replace(markdownEscapedIconsRegex, match => `\\\\${match}`);\n}\nconst stripIconsRegex = new RegExp(`(\\\\s)?(\\\\\\\\)?${iconsRegex.source}(\\\\s)?`, 'g');\n/**\n * Takes a label with icons (`$(iconId)xyz`)  and strips the icons out (`xyz`)\n */\nexport function stripIcons(text) {\n    if (text.indexOf(iconStartMarker) === -1) {\n        return text;\n    }\n    return text.replace(stripIconsRegex, (match, preWhitespace, escaped, postWhitespace) => escaped ? match : preWhitespace || postWhitespace || '');\n}\n/**\n * Takes a label with icons (`$(iconId)xyz`), removes the icon syntax adds whitespace so that screen readers can read the text better.\n */\nexport function getCodiconAriaLabel(text) {\n    if (!text) {\n        return '';\n    }\n    return text.replace(/\\$\\((.*?)\\)/g, (_match, codiconName) => ` ${codiconName} `).trim();\n}\nconst _parseIconsRegex = new RegExp(`\\\\$\\\\(${ThemeIcon.iconNameCharacter}+\\\\)`, 'g');\n/**\n * Takes a label with icons (`abc $(iconId)xyz`) and returns the text (`abc xyz`) and the offsets of the icons (`[3]`)\n */\nexport function parseLabelWithIcons(input) {\n    _parseIconsRegex.lastIndex = 0;\n    let text = '';\n    const iconOffsets = [];\n    let iconsOffset = 0;\n    while (true) {\n        const pos = _parseIconsRegex.lastIndex;\n        const match = _parseIconsRegex.exec(input);\n        const chars = input.substring(pos, match === null || match === void 0 ? void 0 : match.index);\n        if (chars.length > 0) {\n            text += chars;\n            for (let i = 0; i < chars.length; i++) {\n                iconOffsets.push(iconsOffset);\n            }\n        }\n        if (!match) {\n            break;\n        }\n        iconsOffset += match[0].length;\n    }\n    return { text, iconOffsets };\n}\nexport function matchesFuzzyIconAware(query, target, enableSeparateSubstringMatching = false) {\n    const { text, iconOffsets } = target;\n    // Return early if there are no icon markers in the word to match against\n    if (!iconOffsets || iconOffsets.length === 0) {\n        return matchesFuzzy(query, text, enableSeparateSubstringMatching);\n    }\n    // Trim the word to match against because it could have leading\n    // whitespace now if the word started with an icon\n    const wordToMatchAgainstWithoutIconsTrimmed = ltrim(text, ' ');\n    const leadingWhitespaceOffset = text.length - wordToMatchAgainstWithoutIconsTrimmed.length;\n    // match on value without icon\n    const matches = matchesFuzzy(query, wordToMatchAgainstWithoutIconsTrimmed, enableSeparateSubstringMatching);\n    // Map matches back to offsets with icon and trimming\n    if (matches) {\n        for (const match of matches) {\n            const iconOffset = iconOffsets[match.start + leadingWhitespaceOffset] /* icon offsets at index */ + leadingWhitespaceOffset /* overall leading whitespace offset */;\n            match.start += iconOffset;\n            match.end += iconOffset;\n        }\n    }\n    return matches;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class IdGenerator {\n    constructor(prefix) {\n        this._prefix = prefix;\n        this._lastId = 0;\n    }\n    nextId() {\n        return this._prefix + (++this._lastId);\n    }\n}\nexport const defaultGenerator = new IdGenerator('id#');\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from './event.js';\nexport class IMEImpl {\n    constructor() {\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n        this._enabled = true;\n    }\n    get enabled() {\n        return this._enabled;\n    }\n    /**\n     * Enable IME\n     */\n    enable() {\n        this._enabled = true;\n        this._onDidChange.fire();\n    }\n    /**\n     * Disable IME\n     */\n    disable() {\n        this._enabled = false;\n        this._onDidChange.fire();\n    }\n}\nexport const IME = new IMEImpl();\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var Iterable;\n(function (Iterable) {\n    function is(thing) {\n        return thing && typeof thing === 'object' && typeof thing[Symbol.iterator] === 'function';\n    }\n    Iterable.is = is;\n    const _empty = Object.freeze([]);\n    function empty() {\n        return _empty;\n    }\n    Iterable.empty = empty;\n    function* single(element) {\n        yield element;\n    }\n    Iterable.single = single;\n    function wrap(iterableOrElement) {\n        if (is(iterableOrElement)) {\n            return iterableOrElement;\n        }\n        else {\n            return single(iterableOrElement);\n        }\n    }\n    Iterable.wrap = wrap;\n    function from(iterable) {\n        return iterable || _empty;\n    }\n    Iterable.from = from;\n    function* reverse(array) {\n        for (let i = array.length - 1; i >= 0; i--) {\n            yield array[i];\n        }\n    }\n    Iterable.reverse = reverse;\n    function isEmpty(iterable) {\n        return !iterable || iterable[Symbol.iterator]().next().done === true;\n    }\n    Iterable.isEmpty = isEmpty;\n    function first(iterable) {\n        return iterable[Symbol.iterator]().next().value;\n    }\n    Iterable.first = first;\n    function some(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    Iterable.some = some;\n    function find(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                return element;\n            }\n        }\n        return undefined;\n    }\n    Iterable.find = find;\n    function* filter(iterable, predicate) {\n        for (const element of iterable) {\n            if (predicate(element)) {\n                yield element;\n            }\n        }\n    }\n    Iterable.filter = filter;\n    function* map(iterable, fn) {\n        let index = 0;\n        for (const element of iterable) {\n            yield fn(element, index++);\n        }\n    }\n    Iterable.map = map;\n    function* concat(...iterables) {\n        for (const iterable of iterables) {\n            for (const element of iterable) {\n                yield element;\n            }\n        }\n    }\n    Iterable.concat = concat;\n    function reduce(iterable, reducer, initialValue) {\n        let value = initialValue;\n        for (const element of iterable) {\n            value = reducer(value, element);\n        }\n        return value;\n    }\n    Iterable.reduce = reduce;\n    /**\n     * Returns an iterable slice of the array, with the same semantics as `array.slice()`.\n     */\n    function* slice(arr, from, to = arr.length) {\n        if (from < 0) {\n            from += arr.length;\n        }\n        if (to < 0) {\n            to += arr.length;\n        }\n        else if (to > arr.length) {\n            to = arr.length;\n        }\n        for (; from < to; from++) {\n            yield arr[from];\n        }\n    }\n    Iterable.slice = slice;\n    /**\n     * Consumes `atMost` elements from iterable and returns the consumed elements,\n     * and an iterable for the rest of the elements.\n     */\n    function consume(iterable, atMost = Number.POSITIVE_INFINITY) {\n        const consumed = [];\n        if (atMost === 0) {\n            return [consumed, iterable];\n        }\n        const iterator = iterable[Symbol.iterator]();\n        for (let i = 0; i < atMost; i++) {\n            const next = iterator.next();\n            if (next.done) {\n                return [consumed, Iterable.empty()];\n            }\n            consumed.push(next.value);\n        }\n        return [consumed, { [Symbol.iterator]() { return iterator; } }];\n    }\n    Iterable.consume = consume;\n})(Iterable || (Iterable = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass KeyCodeStrMap {\n    constructor() {\n        this._keyCodeToStr = [];\n        this._strToKeyCode = Object.create(null);\n    }\n    define(keyCode, str) {\n        this._keyCodeToStr[keyCode] = str;\n        this._strToKeyCode[str.toLowerCase()] = keyCode;\n    }\n    keyCodeToStr(keyCode) {\n        return this._keyCodeToStr[keyCode];\n    }\n    strToKeyCode(str) {\n        return this._strToKeyCode[str.toLowerCase()] || 0 /* KeyCode.Unknown */;\n    }\n}\nconst uiMap = new KeyCodeStrMap();\nconst userSettingsUSMap = new KeyCodeStrMap();\nconst userSettingsGeneralMap = new KeyCodeStrMap();\nexport const EVENT_KEY_CODE_MAP = new Array(230);\nexport const NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE = {};\nconst scanCodeIntToStr = [];\nconst scanCodeStrToInt = Object.create(null);\nconst scanCodeLowerCaseStrToInt = Object.create(null);\n/**\n * -1 if a ScanCode => KeyCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_CODE_TO_KEY_CODE = [];\n/**\n * -1 if a KeyCode => ScanCode mapping depends on kb layout.\n */\nexport const IMMUTABLE_KEY_CODE_TO_CODE = [];\nfor (let i = 0; i <= 193 /* ScanCode.MAX_VALUE */; i++) {\n    IMMUTABLE_CODE_TO_KEY_CODE[i] = -1 /* KeyCode.DependsOnKbLayout */;\n}\nfor (let i = 0; i <= 132 /* KeyCode.MAX_VALUE */; i++) {\n    IMMUTABLE_KEY_CODE_TO_CODE[i] = -1 /* ScanCode.DependsOnKbLayout */;\n}\n(function () {\n    // See https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\n    // See https://github.com/microsoft/node-native-keymap/blob/88c0b0e5/deps/chromium/keyboard_codes_win.h\n    const empty = '';\n    const mappings = [\n        // immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel\n        [1, 0 /* ScanCode.None */, 'None', 0 /* KeyCode.Unknown */, 'unknown', 0, 'VK_UNKNOWN', empty, empty],\n        [1, 1 /* ScanCode.Hyper */, 'Hyper', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 2 /* ScanCode.Super */, 'Super', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 3 /* ScanCode.Fn */, 'Fn', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 4 /* ScanCode.FnLock */, 'FnLock', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 5 /* ScanCode.Suspend */, 'Suspend', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 6 /* ScanCode.Resume */, 'Resume', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 7 /* ScanCode.Turbo */, 'Turbo', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 8 /* ScanCode.Sleep */, 'Sleep', 0 /* KeyCode.Unknown */, empty, 0, 'VK_SLEEP', empty, empty],\n        [1, 9 /* ScanCode.WakeUp */, 'WakeUp', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 10 /* ScanCode.KeyA */, 'KeyA', 31 /* KeyCode.KeyA */, 'A', 65, 'VK_A', empty, empty],\n        [0, 11 /* ScanCode.KeyB */, 'KeyB', 32 /* KeyCode.KeyB */, 'B', 66, 'VK_B', empty, empty],\n        [0, 12 /* ScanCode.KeyC */, 'KeyC', 33 /* KeyCode.KeyC */, 'C', 67, 'VK_C', empty, empty],\n        [0, 13 /* ScanCode.KeyD */, 'KeyD', 34 /* KeyCode.KeyD */, 'D', 68, 'VK_D', empty, empty],\n        [0, 14 /* ScanCode.KeyE */, 'KeyE', 35 /* KeyCode.KeyE */, 'E', 69, 'VK_E', empty, empty],\n        [0, 15 /* ScanCode.KeyF */, 'KeyF', 36 /* KeyCode.KeyF */, 'F', 70, 'VK_F', empty, empty],\n        [0, 16 /* ScanCode.KeyG */, 'KeyG', 37 /* KeyCode.KeyG */, 'G', 71, 'VK_G', empty, empty],\n        [0, 17 /* ScanCode.KeyH */, 'KeyH', 38 /* KeyCode.KeyH */, 'H', 72, 'VK_H', empty, empty],\n        [0, 18 /* ScanCode.KeyI */, 'KeyI', 39 /* KeyCode.KeyI */, 'I', 73, 'VK_I', empty, empty],\n        [0, 19 /* ScanCode.KeyJ */, 'KeyJ', 40 /* KeyCode.KeyJ */, 'J', 74, 'VK_J', empty, empty],\n        [0, 20 /* ScanCode.KeyK */, 'KeyK', 41 /* KeyCode.KeyK */, 'K', 75, 'VK_K', empty, empty],\n        [0, 21 /* ScanCode.KeyL */, 'KeyL', 42 /* KeyCode.KeyL */, 'L', 76, 'VK_L', empty, empty],\n        [0, 22 /* ScanCode.KeyM */, 'KeyM', 43 /* KeyCode.KeyM */, 'M', 77, 'VK_M', empty, empty],\n        [0, 23 /* ScanCode.KeyN */, 'KeyN', 44 /* KeyCode.KeyN */, 'N', 78, 'VK_N', empty, empty],\n        [0, 24 /* ScanCode.KeyO */, 'KeyO', 45 /* KeyCode.KeyO */, 'O', 79, 'VK_O', empty, empty],\n        [0, 25 /* ScanCode.KeyP */, 'KeyP', 46 /* KeyCode.KeyP */, 'P', 80, 'VK_P', empty, empty],\n        [0, 26 /* ScanCode.KeyQ */, 'KeyQ', 47 /* KeyCode.KeyQ */, 'Q', 81, 'VK_Q', empty, empty],\n        [0, 27 /* ScanCode.KeyR */, 'KeyR', 48 /* KeyCode.KeyR */, 'R', 82, 'VK_R', empty, empty],\n        [0, 28 /* ScanCode.KeyS */, 'KeyS', 49 /* KeyCode.KeyS */, 'S', 83, 'VK_S', empty, empty],\n        [0, 29 /* ScanCode.KeyT */, 'KeyT', 50 /* KeyCode.KeyT */, 'T', 84, 'VK_T', empty, empty],\n        [0, 30 /* ScanCode.KeyU */, 'KeyU', 51 /* KeyCode.KeyU */, 'U', 85, 'VK_U', empty, empty],\n        [0, 31 /* ScanCode.KeyV */, 'KeyV', 52 /* KeyCode.KeyV */, 'V', 86, 'VK_V', empty, empty],\n        [0, 32 /* ScanCode.KeyW */, 'KeyW', 53 /* KeyCode.KeyW */, 'W', 87, 'VK_W', empty, empty],\n        [0, 33 /* ScanCode.KeyX */, 'KeyX', 54 /* KeyCode.KeyX */, 'X', 88, 'VK_X', empty, empty],\n        [0, 34 /* ScanCode.KeyY */, 'KeyY', 55 /* KeyCode.KeyY */, 'Y', 89, 'VK_Y', empty, empty],\n        [0, 35 /* ScanCode.KeyZ */, 'KeyZ', 56 /* KeyCode.KeyZ */, 'Z', 90, 'VK_Z', empty, empty],\n        [0, 36 /* ScanCode.Digit1 */, 'Digit1', 22 /* KeyCode.Digit1 */, '1', 49, 'VK_1', empty, empty],\n        [0, 37 /* ScanCode.Digit2 */, 'Digit2', 23 /* KeyCode.Digit2 */, '2', 50, 'VK_2', empty, empty],\n        [0, 38 /* ScanCode.Digit3 */, 'Digit3', 24 /* KeyCode.Digit3 */, '3', 51, 'VK_3', empty, empty],\n        [0, 39 /* ScanCode.Digit4 */, 'Digit4', 25 /* KeyCode.Digit4 */, '4', 52, 'VK_4', empty, empty],\n        [0, 40 /* ScanCode.Digit5 */, 'Digit5', 26 /* KeyCode.Digit5 */, '5', 53, 'VK_5', empty, empty],\n        [0, 41 /* ScanCode.Digit6 */, 'Digit6', 27 /* KeyCode.Digit6 */, '6', 54, 'VK_6', empty, empty],\n        [0, 42 /* ScanCode.Digit7 */, 'Digit7', 28 /* KeyCode.Digit7 */, '7', 55, 'VK_7', empty, empty],\n        [0, 43 /* ScanCode.Digit8 */, 'Digit8', 29 /* KeyCode.Digit8 */, '8', 56, 'VK_8', empty, empty],\n        [0, 44 /* ScanCode.Digit9 */, 'Digit9', 30 /* KeyCode.Digit9 */, '9', 57, 'VK_9', empty, empty],\n        [0, 45 /* ScanCode.Digit0 */, 'Digit0', 21 /* KeyCode.Digit0 */, '0', 48, 'VK_0', empty, empty],\n        [1, 46 /* ScanCode.Enter */, 'Enter', 3 /* KeyCode.Enter */, 'Enter', 13, 'VK_RETURN', empty, empty],\n        [1, 47 /* ScanCode.Escape */, 'Escape', 9 /* KeyCode.Escape */, 'Escape', 27, 'VK_ESCAPE', empty, empty],\n        [1, 48 /* ScanCode.Backspace */, 'Backspace', 1 /* KeyCode.Backspace */, 'Backspace', 8, 'VK_BACK', empty, empty],\n        [1, 49 /* ScanCode.Tab */, 'Tab', 2 /* KeyCode.Tab */, 'Tab', 9, 'VK_TAB', empty, empty],\n        [1, 50 /* ScanCode.Space */, 'Space', 10 /* KeyCode.Space */, 'Space', 32, 'VK_SPACE', empty, empty],\n        [0, 51 /* ScanCode.Minus */, 'Minus', 88 /* KeyCode.Minus */, '-', 189, 'VK_OEM_MINUS', '-', 'OEM_MINUS'],\n        [0, 52 /* ScanCode.Equal */, 'Equal', 86 /* KeyCode.Equal */, '=', 187, 'VK_OEM_PLUS', '=', 'OEM_PLUS'],\n        [0, 53 /* ScanCode.BracketLeft */, 'BracketLeft', 92 /* KeyCode.BracketLeft */, '[', 219, 'VK_OEM_4', '[', 'OEM_4'],\n        [0, 54 /* ScanCode.BracketRight */, 'BracketRight', 94 /* KeyCode.BracketRight */, ']', 221, 'VK_OEM_6', ']', 'OEM_6'],\n        [0, 55 /* ScanCode.Backslash */, 'Backslash', 93 /* KeyCode.Backslash */, '\\\\', 220, 'VK_OEM_5', '\\\\', 'OEM_5'],\n        [0, 56 /* ScanCode.IntlHash */, 'IntlHash', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty], // has been dropped from the w3c spec\n        [0, 57 /* ScanCode.Semicolon */, 'Semicolon', 85 /* KeyCode.Semicolon */, ';', 186, 'VK_OEM_1', ';', 'OEM_1'],\n        [0, 58 /* ScanCode.Quote */, 'Quote', 95 /* KeyCode.Quote */, '\\'', 222, 'VK_OEM_7', '\\'', 'OEM_7'],\n        [0, 59 /* ScanCode.Backquote */, 'Backquote', 91 /* KeyCode.Backquote */, '`', 192, 'VK_OEM_3', '`', 'OEM_3'],\n        [0, 60 /* ScanCode.Comma */, 'Comma', 87 /* KeyCode.Comma */, ',', 188, 'VK_OEM_COMMA', ',', 'OEM_COMMA'],\n        [0, 61 /* ScanCode.Period */, 'Period', 89 /* KeyCode.Period */, '.', 190, 'VK_OEM_PERIOD', '.', 'OEM_PERIOD'],\n        [0, 62 /* ScanCode.Slash */, 'Slash', 90 /* KeyCode.Slash */, '/', 191, 'VK_OEM_2', '/', 'OEM_2'],\n        [1, 63 /* ScanCode.CapsLock */, 'CapsLock', 8 /* KeyCode.CapsLock */, 'CapsLock', 20, 'VK_CAPITAL', empty, empty],\n        [1, 64 /* ScanCode.F1 */, 'F1', 59 /* KeyCode.F1 */, 'F1', 112, 'VK_F1', empty, empty],\n        [1, 65 /* ScanCode.F2 */, 'F2', 60 /* KeyCode.F2 */, 'F2', 113, 'VK_F2', empty, empty],\n        [1, 66 /* ScanCode.F3 */, 'F3', 61 /* KeyCode.F3 */, 'F3', 114, 'VK_F3', empty, empty],\n        [1, 67 /* ScanCode.F4 */, 'F4', 62 /* KeyCode.F4 */, 'F4', 115, 'VK_F4', empty, empty],\n        [1, 68 /* ScanCode.F5 */, 'F5', 63 /* KeyCode.F5 */, 'F5', 116, 'VK_F5', empty, empty],\n        [1, 69 /* ScanCode.F6 */, 'F6', 64 /* KeyCode.F6 */, 'F6', 117, 'VK_F6', empty, empty],\n        [1, 70 /* ScanCode.F7 */, 'F7', 65 /* KeyCode.F7 */, 'F7', 118, 'VK_F7', empty, empty],\n        [1, 71 /* ScanCode.F8 */, 'F8', 66 /* KeyCode.F8 */, 'F8', 119, 'VK_F8', empty, empty],\n        [1, 72 /* ScanCode.F9 */, 'F9', 67 /* KeyCode.F9 */, 'F9', 120, 'VK_F9', empty, empty],\n        [1, 73 /* ScanCode.F10 */, 'F10', 68 /* KeyCode.F10 */, 'F10', 121, 'VK_F10', empty, empty],\n        [1, 74 /* ScanCode.F11 */, 'F11', 69 /* KeyCode.F11 */, 'F11', 122, 'VK_F11', empty, empty],\n        [1, 75 /* ScanCode.F12 */, 'F12', 70 /* KeyCode.F12 */, 'F12', 123, 'VK_F12', empty, empty],\n        [1, 76 /* ScanCode.PrintScreen */, 'PrintScreen', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 77 /* ScanCode.ScrollLock */, 'ScrollLock', 84 /* KeyCode.ScrollLock */, 'ScrollLock', 145, 'VK_SCROLL', empty, empty],\n        [1, 78 /* ScanCode.Pause */, 'Pause', 7 /* KeyCode.PauseBreak */, 'PauseBreak', 19, 'VK_PAUSE', empty, empty],\n        [1, 79 /* ScanCode.Insert */, 'Insert', 19 /* KeyCode.Insert */, 'Insert', 45, 'VK_INSERT', empty, empty],\n        [1, 80 /* ScanCode.Home */, 'Home', 14 /* KeyCode.Home */, 'Home', 36, 'VK_HOME', empty, empty],\n        [1, 81 /* ScanCode.PageUp */, 'PageUp', 11 /* KeyCode.PageUp */, 'PageUp', 33, 'VK_PRIOR', empty, empty],\n        [1, 82 /* ScanCode.Delete */, 'Delete', 20 /* KeyCode.Delete */, 'Delete', 46, 'VK_DELETE', empty, empty],\n        [1, 83 /* ScanCode.End */, 'End', 13 /* KeyCode.End */, 'End', 35, 'VK_END', empty, empty],\n        [1, 84 /* ScanCode.PageDown */, 'PageDown', 12 /* KeyCode.PageDown */, 'PageDown', 34, 'VK_NEXT', empty, empty],\n        [1, 85 /* ScanCode.ArrowRight */, 'ArrowRight', 17 /* KeyCode.RightArrow */, 'RightArrow', 39, 'VK_RIGHT', 'Right', empty],\n        [1, 86 /* ScanCode.ArrowLeft */, 'ArrowLeft', 15 /* KeyCode.LeftArrow */, 'LeftArrow', 37, 'VK_LEFT', 'Left', empty],\n        [1, 87 /* ScanCode.ArrowDown */, 'ArrowDown', 18 /* KeyCode.DownArrow */, 'DownArrow', 40, 'VK_DOWN', 'Down', empty],\n        [1, 88 /* ScanCode.ArrowUp */, 'ArrowUp', 16 /* KeyCode.UpArrow */, 'UpArrow', 38, 'VK_UP', 'Up', empty],\n        [1, 89 /* ScanCode.NumLock */, 'NumLock', 83 /* KeyCode.NumLock */, 'NumLock', 144, 'VK_NUMLOCK', empty, empty],\n        [1, 90 /* ScanCode.NumpadDivide */, 'NumpadDivide', 113 /* KeyCode.NumpadDivide */, 'NumPad_Divide', 111, 'VK_DIVIDE', empty, empty],\n        [1, 91 /* ScanCode.NumpadMultiply */, 'NumpadMultiply', 108 /* KeyCode.NumpadMultiply */, 'NumPad_Multiply', 106, 'VK_MULTIPLY', empty, empty],\n        [1, 92 /* ScanCode.NumpadSubtract */, 'NumpadSubtract', 111 /* KeyCode.NumpadSubtract */, 'NumPad_Subtract', 109, 'VK_SUBTRACT', empty, empty],\n        [1, 93 /* ScanCode.NumpadAdd */, 'NumpadAdd', 109 /* KeyCode.NumpadAdd */, 'NumPad_Add', 107, 'VK_ADD', empty, empty],\n        [1, 94 /* ScanCode.NumpadEnter */, 'NumpadEnter', 3 /* KeyCode.Enter */, empty, 0, empty, empty, empty],\n        [1, 95 /* ScanCode.Numpad1 */, 'Numpad1', 99 /* KeyCode.Numpad1 */, 'NumPad1', 97, 'VK_NUMPAD1', empty, empty],\n        [1, 96 /* ScanCode.Numpad2 */, 'Numpad2', 100 /* KeyCode.Numpad2 */, 'NumPad2', 98, 'VK_NUMPAD2', empty, empty],\n        [1, 97 /* ScanCode.Numpad3 */, 'Numpad3', 101 /* KeyCode.Numpad3 */, 'NumPad3', 99, 'VK_NUMPAD3', empty, empty],\n        [1, 98 /* ScanCode.Numpad4 */, 'Numpad4', 102 /* KeyCode.Numpad4 */, 'NumPad4', 100, 'VK_NUMPAD4', empty, empty],\n        [1, 99 /* ScanCode.Numpad5 */, 'Numpad5', 103 /* KeyCode.Numpad5 */, 'NumPad5', 101, 'VK_NUMPAD5', empty, empty],\n        [1, 100 /* ScanCode.Numpad6 */, 'Numpad6', 104 /* KeyCode.Numpad6 */, 'NumPad6', 102, 'VK_NUMPAD6', empty, empty],\n        [1, 101 /* ScanCode.Numpad7 */, 'Numpad7', 105 /* KeyCode.Numpad7 */, 'NumPad7', 103, 'VK_NUMPAD7', empty, empty],\n        [1, 102 /* ScanCode.Numpad8 */, 'Numpad8', 106 /* KeyCode.Numpad8 */, 'NumPad8', 104, 'VK_NUMPAD8', empty, empty],\n        [1, 103 /* ScanCode.Numpad9 */, 'Numpad9', 107 /* KeyCode.Numpad9 */, 'NumPad9', 105, 'VK_NUMPAD9', empty, empty],\n        [1, 104 /* ScanCode.Numpad0 */, 'Numpad0', 98 /* KeyCode.Numpad0 */, 'NumPad0', 96, 'VK_NUMPAD0', empty, empty],\n        [1, 105 /* ScanCode.NumpadDecimal */, 'NumpadDecimal', 112 /* KeyCode.NumpadDecimal */, 'NumPad_Decimal', 110, 'VK_DECIMAL', empty, empty],\n        [0, 106 /* ScanCode.IntlBackslash */, 'IntlBackslash', 97 /* KeyCode.IntlBackslash */, 'OEM_102', 226, 'VK_OEM_102', empty, empty],\n        [1, 107 /* ScanCode.ContextMenu */, 'ContextMenu', 58 /* KeyCode.ContextMenu */, 'ContextMenu', 93, empty, empty, empty],\n        [1, 108 /* ScanCode.Power */, 'Power', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 109 /* ScanCode.NumpadEqual */, 'NumpadEqual', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 110 /* ScanCode.F13 */, 'F13', 71 /* KeyCode.F13 */, 'F13', 124, 'VK_F13', empty, empty],\n        [1, 111 /* ScanCode.F14 */, 'F14', 72 /* KeyCode.F14 */, 'F14', 125, 'VK_F14', empty, empty],\n        [1, 112 /* ScanCode.F15 */, 'F15', 73 /* KeyCode.F15 */, 'F15', 126, 'VK_F15', empty, empty],\n        [1, 113 /* ScanCode.F16 */, 'F16', 74 /* KeyCode.F16 */, 'F16', 127, 'VK_F16', empty, empty],\n        [1, 114 /* ScanCode.F17 */, 'F17', 75 /* KeyCode.F17 */, 'F17', 128, 'VK_F17', empty, empty],\n        [1, 115 /* ScanCode.F18 */, 'F18', 76 /* KeyCode.F18 */, 'F18', 129, 'VK_F18', empty, empty],\n        [1, 116 /* ScanCode.F19 */, 'F19', 77 /* KeyCode.F19 */, 'F19', 130, 'VK_F19', empty, empty],\n        [1, 117 /* ScanCode.F20 */, 'F20', 78 /* KeyCode.F20 */, 'F20', 131, 'VK_F20', empty, empty],\n        [1, 118 /* ScanCode.F21 */, 'F21', 79 /* KeyCode.F21 */, 'F21', 132, 'VK_F21', empty, empty],\n        [1, 119 /* ScanCode.F22 */, 'F22', 80 /* KeyCode.F22 */, 'F22', 133, 'VK_F22', empty, empty],\n        [1, 120 /* ScanCode.F23 */, 'F23', 81 /* KeyCode.F23 */, 'F23', 134, 'VK_F23', empty, empty],\n        [1, 121 /* ScanCode.F24 */, 'F24', 82 /* KeyCode.F24 */, 'F24', 135, 'VK_F24', empty, empty],\n        [1, 122 /* ScanCode.Open */, 'Open', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 123 /* ScanCode.Help */, 'Help', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 124 /* ScanCode.Select */, 'Select', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 125 /* ScanCode.Again */, 'Again', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 126 /* ScanCode.Undo */, 'Undo', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 127 /* ScanCode.Cut */, 'Cut', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 128 /* ScanCode.Copy */, 'Copy', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 129 /* ScanCode.Paste */, 'Paste', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 130 /* ScanCode.Find */, 'Find', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 131 /* ScanCode.AudioVolumeMute */, 'AudioVolumeMute', 117 /* KeyCode.AudioVolumeMute */, 'AudioVolumeMute', 173, 'VK_VOLUME_MUTE', empty, empty],\n        [1, 132 /* ScanCode.AudioVolumeUp */, 'AudioVolumeUp', 118 /* KeyCode.AudioVolumeUp */, 'AudioVolumeUp', 175, 'VK_VOLUME_UP', empty, empty],\n        [1, 133 /* ScanCode.AudioVolumeDown */, 'AudioVolumeDown', 119 /* KeyCode.AudioVolumeDown */, 'AudioVolumeDown', 174, 'VK_VOLUME_DOWN', empty, empty],\n        [1, 134 /* ScanCode.NumpadComma */, 'NumpadComma', 110 /* KeyCode.NUMPAD_SEPARATOR */, 'NumPad_Separator', 108, 'VK_SEPARATOR', empty, empty],\n        [0, 135 /* ScanCode.IntlRo */, 'IntlRo', 115 /* KeyCode.ABNT_C1 */, 'ABNT_C1', 193, 'VK_ABNT_C1', empty, empty],\n        [1, 136 /* ScanCode.KanaMode */, 'KanaMode', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [0, 137 /* ScanCode.IntlYen */, 'IntlYen', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 138 /* ScanCode.Convert */, 'Convert', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 139 /* ScanCode.NonConvert */, 'NonConvert', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 140 /* ScanCode.Lang1 */, 'Lang1', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 141 /* ScanCode.Lang2 */, 'Lang2', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 142 /* ScanCode.Lang3 */, 'Lang3', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 143 /* ScanCode.Lang4 */, 'Lang4', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 144 /* ScanCode.Lang5 */, 'Lang5', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 145 /* ScanCode.Abort */, 'Abort', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 146 /* ScanCode.Props */, 'Props', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 147 /* ScanCode.NumpadParenLeft */, 'NumpadParenLeft', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 148 /* ScanCode.NumpadParenRight */, 'NumpadParenRight', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 149 /* ScanCode.NumpadBackspace */, 'NumpadBackspace', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 150 /* ScanCode.NumpadMemoryStore */, 'NumpadMemoryStore', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 151 /* ScanCode.NumpadMemoryRecall */, 'NumpadMemoryRecall', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 152 /* ScanCode.NumpadMemoryClear */, 'NumpadMemoryClear', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 153 /* ScanCode.NumpadMemoryAdd */, 'NumpadMemoryAdd', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 154 /* ScanCode.NumpadMemorySubtract */, 'NumpadMemorySubtract', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 155 /* ScanCode.NumpadClear */, 'NumpadClear', 131 /* KeyCode.Clear */, 'Clear', 12, 'VK_CLEAR', empty, empty],\n        [1, 156 /* ScanCode.NumpadClearEntry */, 'NumpadClearEntry', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 5 /* KeyCode.Ctrl */, 'Ctrl', 17, 'VK_CONTROL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 4 /* KeyCode.Shift */, 'Shift', 16, 'VK_SHIFT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 6 /* KeyCode.Alt */, 'Alt', 18, 'VK_MENU', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 57 /* KeyCode.Meta */, 'Meta', 91, 'VK_COMMAND', empty, empty],\n        [1, 157 /* ScanCode.ControlLeft */, 'ControlLeft', 5 /* KeyCode.Ctrl */, empty, 0, 'VK_LCONTROL', empty, empty],\n        [1, 158 /* ScanCode.ShiftLeft */, 'ShiftLeft', 4 /* KeyCode.Shift */, empty, 0, 'VK_LSHIFT', empty, empty],\n        [1, 159 /* ScanCode.AltLeft */, 'AltLeft', 6 /* KeyCode.Alt */, empty, 0, 'VK_LMENU', empty, empty],\n        [1, 160 /* ScanCode.MetaLeft */, 'MetaLeft', 57 /* KeyCode.Meta */, empty, 0, 'VK_LWIN', empty, empty],\n        [1, 161 /* ScanCode.ControlRight */, 'ControlRight', 5 /* KeyCode.Ctrl */, empty, 0, 'VK_RCONTROL', empty, empty],\n        [1, 162 /* ScanCode.ShiftRight */, 'ShiftRight', 4 /* KeyCode.Shift */, empty, 0, 'VK_RSHIFT', empty, empty],\n        [1, 163 /* ScanCode.AltRight */, 'AltRight', 6 /* KeyCode.Alt */, empty, 0, 'VK_RMENU', empty, empty],\n        [1, 164 /* ScanCode.MetaRight */, 'MetaRight', 57 /* KeyCode.Meta */, empty, 0, 'VK_RWIN', empty, empty],\n        [1, 165 /* ScanCode.BrightnessUp */, 'BrightnessUp', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 166 /* ScanCode.BrightnessDown */, 'BrightnessDown', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 167 /* ScanCode.MediaPlay */, 'MediaPlay', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 168 /* ScanCode.MediaRecord */, 'MediaRecord', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 169 /* ScanCode.MediaFastForward */, 'MediaFastForward', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 170 /* ScanCode.MediaRewind */, 'MediaRewind', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 171 /* ScanCode.MediaTrackNext */, 'MediaTrackNext', 124 /* KeyCode.MediaTrackNext */, 'MediaTrackNext', 176, 'VK_MEDIA_NEXT_TRACK', empty, empty],\n        [1, 172 /* ScanCode.MediaTrackPrevious */, 'MediaTrackPrevious', 125 /* KeyCode.MediaTrackPrevious */, 'MediaTrackPrevious', 177, 'VK_MEDIA_PREV_TRACK', empty, empty],\n        [1, 173 /* ScanCode.MediaStop */, 'MediaStop', 126 /* KeyCode.MediaStop */, 'MediaStop', 178, 'VK_MEDIA_STOP', empty, empty],\n        [1, 174 /* ScanCode.Eject */, 'Eject', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 175 /* ScanCode.MediaPlayPause */, 'MediaPlayPause', 127 /* KeyCode.MediaPlayPause */, 'MediaPlayPause', 179, 'VK_MEDIA_PLAY_PAUSE', empty, empty],\n        [1, 176 /* ScanCode.MediaSelect */, 'MediaSelect', 128 /* KeyCode.LaunchMediaPlayer */, 'LaunchMediaPlayer', 181, 'VK_MEDIA_LAUNCH_MEDIA_SELECT', empty, empty],\n        [1, 177 /* ScanCode.LaunchMail */, 'LaunchMail', 129 /* KeyCode.LaunchMail */, 'LaunchMail', 180, 'VK_MEDIA_LAUNCH_MAIL', empty, empty],\n        [1, 178 /* ScanCode.LaunchApp2 */, 'LaunchApp2', 130 /* KeyCode.LaunchApp2 */, 'LaunchApp2', 183, 'VK_MEDIA_LAUNCH_APP2', empty, empty],\n        [1, 179 /* ScanCode.LaunchApp1 */, 'LaunchApp1', 0 /* KeyCode.Unknown */, empty, 0, 'VK_MEDIA_LAUNCH_APP1', empty, empty],\n        [1, 180 /* ScanCode.SelectTask */, 'SelectTask', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 181 /* ScanCode.LaunchScreenSaver */, 'LaunchScreenSaver', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 182 /* ScanCode.BrowserSearch */, 'BrowserSearch', 120 /* KeyCode.BrowserSearch */, 'BrowserSearch', 170, 'VK_BROWSER_SEARCH', empty, empty],\n        [1, 183 /* ScanCode.BrowserHome */, 'BrowserHome', 121 /* KeyCode.BrowserHome */, 'BrowserHome', 172, 'VK_BROWSER_HOME', empty, empty],\n        [1, 184 /* ScanCode.BrowserBack */, 'BrowserBack', 122 /* KeyCode.BrowserBack */, 'BrowserBack', 166, 'VK_BROWSER_BACK', empty, empty],\n        [1, 185 /* ScanCode.BrowserForward */, 'BrowserForward', 123 /* KeyCode.BrowserForward */, 'BrowserForward', 167, 'VK_BROWSER_FORWARD', empty, empty],\n        [1, 186 /* ScanCode.BrowserStop */, 'BrowserStop', 0 /* KeyCode.Unknown */, empty, 0, 'VK_BROWSER_STOP', empty, empty],\n        [1, 187 /* ScanCode.BrowserRefresh */, 'BrowserRefresh', 0 /* KeyCode.Unknown */, empty, 0, 'VK_BROWSER_REFRESH', empty, empty],\n        [1, 188 /* ScanCode.BrowserFavorites */, 'BrowserFavorites', 0 /* KeyCode.Unknown */, empty, 0, 'VK_BROWSER_FAVORITES', empty, empty],\n        [1, 189 /* ScanCode.ZoomToggle */, 'ZoomToggle', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 190 /* ScanCode.MailReply */, 'MailReply', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 191 /* ScanCode.MailForward */, 'MailForward', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        [1, 192 /* ScanCode.MailSend */, 'MailSend', 0 /* KeyCode.Unknown */, empty, 0, empty, empty, empty],\n        // See https://lists.w3.org/Archives/Public/www-dom/2010JulSep/att-0182/keyCode-spec.html\n        // If an Input Method Editor is processing key input and the event is keydown, return 229.\n        [1, 0 /* ScanCode.None */, empty, 114 /* KeyCode.KEY_IN_COMPOSITION */, 'KeyInComposition', 229, empty, empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 116 /* KeyCode.ABNT_C2 */, 'ABNT_C2', 194, 'VK_ABNT_C2', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 96 /* KeyCode.OEM_8 */, 'OEM_8', 223, 'VK_OEM_8', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_KANA', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_HANGUL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_JUNJA', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_FINAL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_HANJA', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_KANJI', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_CONVERT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_NONCONVERT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_ACCEPT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_MODECHANGE', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_SELECT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PRINT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_EXECUTE', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_SNAPSHOT', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_HELP', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_APPS', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PROCESSKEY', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PACKET', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_DBE_SBCSCHAR', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_DBE_DBCSCHAR', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_ATTN', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_CRSEL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_EXSEL', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_EREOF', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PLAY', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_ZOOM', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_NONAME', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_PA1', empty, empty],\n        [1, 0 /* ScanCode.None */, empty, 0 /* KeyCode.Unknown */, empty, 0, 'VK_OEM_CLEAR', empty, empty],\n    ];\n    const seenKeyCode = [];\n    const seenScanCode = [];\n    for (const mapping of mappings) {\n        const [immutable, scanCode, scanCodeStr, keyCode, keyCodeStr, eventKeyCode, vkey, usUserSettingsLabel, generalUserSettingsLabel] = mapping;\n        if (!seenScanCode[scanCode]) {\n            seenScanCode[scanCode] = true;\n            scanCodeIntToStr[scanCode] = scanCodeStr;\n            scanCodeStrToInt[scanCodeStr] = scanCode;\n            scanCodeLowerCaseStrToInt[scanCodeStr.toLowerCase()] = scanCode;\n            if (immutable) {\n                IMMUTABLE_CODE_TO_KEY_CODE[scanCode] = keyCode;\n                if ((keyCode !== 0 /* KeyCode.Unknown */)\n                    && (keyCode !== 3 /* KeyCode.Enter */)\n                    && (keyCode !== 5 /* KeyCode.Ctrl */)\n                    && (keyCode !== 4 /* KeyCode.Shift */)\n                    && (keyCode !== 6 /* KeyCode.Alt */)\n                    && (keyCode !== 57 /* KeyCode.Meta */)) {\n                    IMMUTABLE_KEY_CODE_TO_CODE[keyCode] = scanCode;\n                }\n            }\n        }\n        if (!seenKeyCode[keyCode]) {\n            seenKeyCode[keyCode] = true;\n            if (!keyCodeStr) {\n                throw new Error(`String representation missing for key code ${keyCode} around scan code ${scanCodeStr}`);\n            }\n            uiMap.define(keyCode, keyCodeStr);\n            userSettingsUSMap.define(keyCode, usUserSettingsLabel || keyCodeStr);\n            userSettingsGeneralMap.define(keyCode, generalUserSettingsLabel || usUserSettingsLabel || keyCodeStr);\n        }\n        if (eventKeyCode) {\n            EVENT_KEY_CODE_MAP[eventKeyCode] = keyCode;\n        }\n        if (vkey) {\n            NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE[vkey] = keyCode;\n        }\n    }\n    // Manually added due to the exclusion above (due to duplication with NumpadEnter)\n    IMMUTABLE_KEY_CODE_TO_CODE[3 /* KeyCode.Enter */] = 46 /* ScanCode.Enter */;\n})();\nexport var KeyCodeUtils;\n(function (KeyCodeUtils) {\n    function toString(keyCode) {\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toString = toString;\n    function fromString(key) {\n        return uiMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromString = fromString;\n    function toUserSettingsUS(keyCode) {\n        return userSettingsUSMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsUS = toUserSettingsUS;\n    function toUserSettingsGeneral(keyCode) {\n        return userSettingsGeneralMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toUserSettingsGeneral = toUserSettingsGeneral;\n    function fromUserSettings(key) {\n        return userSettingsUSMap.strToKeyCode(key) || userSettingsGeneralMap.strToKeyCode(key);\n    }\n    KeyCodeUtils.fromUserSettings = fromUserSettings;\n    function toElectronAccelerator(keyCode) {\n        if (keyCode >= 98 /* KeyCode.Numpad0 */ && keyCode <= 113 /* KeyCode.NumpadDivide */) {\n            // [Electron Accelerators] Electron is able to parse numpad keys, but unfortunately it\n            // renders them just as regular keys in menus. For example, num0 is rendered as \"0\",\n            // numdiv is rendered as \"/\", numsub is rendered as \"-\".\n            //\n            // This can lead to incredible confusion, as it makes numpad based keybindings indistinguishable\n            // from keybindings based on regular keys.\n            //\n            // We therefore need to fall back to custom rendering for numpad keys.\n            return null;\n        }\n        switch (keyCode) {\n            case 16 /* KeyCode.UpArrow */:\n                return 'Up';\n            case 18 /* KeyCode.DownArrow */:\n                return 'Down';\n            case 15 /* KeyCode.LeftArrow */:\n                return 'Left';\n            case 17 /* KeyCode.RightArrow */:\n                return 'Right';\n        }\n        return uiMap.keyCodeToStr(keyCode);\n    }\n    KeyCodeUtils.toElectronAccelerator = toElectronAccelerator;\n})(KeyCodeUtils || (KeyCodeUtils = {}));\nexport function KeyChord(firstPart, secondPart) {\n    const chordPart = ((secondPart & 0x0000FFFF) << 16) >>> 0;\n    return (firstPart | chordPart) >>> 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nexport class ModifierLabelProvider {\n    constructor(mac, windows, linux = windows) {\n        this.modifierLabels = [null]; // index 0 will never me accessed.\n        this.modifierLabels[2 /* OperatingSystem.Macintosh */] = mac;\n        this.modifierLabels[1 /* OperatingSystem.Windows */] = windows;\n        this.modifierLabels[3 /* OperatingSystem.Linux */] = linux;\n    }\n    toLabel(OS, chords, keyLabelProvider) {\n        if (chords.length === 0) {\n            return null;\n        }\n        const result = [];\n        for (let i = 0, len = chords.length; i < len; i++) {\n            const chord = chords[i];\n            const keyLabel = keyLabelProvider(chord);\n            if (keyLabel === null) {\n                // this keybinding cannot be expressed...\n                return null;\n            }\n            result[i] = _simpleAsString(chord, keyLabel, this.modifierLabels[OS]);\n        }\n        return result.join(' ');\n    }\n}\n/**\n * A label provider that prints modifiers in a suitable format for displaying in the UI.\n */\nexport const UILabelProvider = new ModifierLabelProvider({\n    ctrlKey: '\\u2303',\n    shiftKey: '⇧',\n    altKey: '⌥',\n    metaKey: '⌘',\n    separator: '',\n}, {\n    ctrlKey: nls.localize({ key: 'ctrlKey', comment: ['This is the short form for the Control key on the keyboard'] }, \"Ctrl\"),\n    shiftKey: nls.localize({ key: 'shiftKey', comment: ['This is the short form for the Shift key on the keyboard'] }, \"Shift\"),\n    altKey: nls.localize({ key: 'altKey', comment: ['This is the short form for the Alt key on the keyboard'] }, \"Alt\"),\n    metaKey: nls.localize({ key: 'windowsKey', comment: ['This is the short form for the Windows key on the keyboard'] }, \"Windows\"),\n    separator: '+',\n}, {\n    ctrlKey: nls.localize({ key: 'ctrlKey', comment: ['This is the short form for the Control key on the keyboard'] }, \"Ctrl\"),\n    shiftKey: nls.localize({ key: 'shiftKey', comment: ['This is the short form for the Shift key on the keyboard'] }, \"Shift\"),\n    altKey: nls.localize({ key: 'altKey', comment: ['This is the short form for the Alt key on the keyboard'] }, \"Alt\"),\n    metaKey: nls.localize({ key: 'superKey', comment: ['This is the short form for the Super key on the keyboard'] }, \"Super\"),\n    separator: '+',\n});\n/**\n * A label provider that prints modifiers in a suitable format for ARIA.\n */\nexport const AriaLabelProvider = new ModifierLabelProvider({\n    ctrlKey: nls.localize({ key: 'ctrlKey.long', comment: ['This is the long form for the Control key on the keyboard'] }, \"Control\"),\n    shiftKey: nls.localize({ key: 'shiftKey.long', comment: ['This is the long form for the Shift key on the keyboard'] }, \"Shift\"),\n    altKey: nls.localize({ key: 'optKey.long', comment: ['This is the long form for the Alt/Option key on the keyboard'] }, \"Option\"),\n    metaKey: nls.localize({ key: 'cmdKey.long', comment: ['This is the long form for the Command key on the keyboard'] }, \"Command\"),\n    separator: '+',\n}, {\n    ctrlKey: nls.localize({ key: 'ctrlKey.long', comment: ['This is the long form for the Control key on the keyboard'] }, \"Control\"),\n    shiftKey: nls.localize({ key: 'shiftKey.long', comment: ['This is the long form for the Shift key on the keyboard'] }, \"Shift\"),\n    altKey: nls.localize({ key: 'altKey.long', comment: ['This is the long form for the Alt key on the keyboard'] }, \"Alt\"),\n    metaKey: nls.localize({ key: 'windowsKey.long', comment: ['This is the long form for the Windows key on the keyboard'] }, \"Windows\"),\n    separator: '+',\n}, {\n    ctrlKey: nls.localize({ key: 'ctrlKey.long', comment: ['This is the long form for the Control key on the keyboard'] }, \"Control\"),\n    shiftKey: nls.localize({ key: 'shiftKey.long', comment: ['This is the long form for the Shift key on the keyboard'] }, \"Shift\"),\n    altKey: nls.localize({ key: 'altKey.long', comment: ['This is the long form for the Alt key on the keyboard'] }, \"Alt\"),\n    metaKey: nls.localize({ key: 'superKey.long', comment: ['This is the long form for the Super key on the keyboard'] }, \"Super\"),\n    separator: '+',\n});\n/**\n * A label provider that prints modifiers in a suitable format for Electron Accelerators.\n * See https://github.com/electron/electron/blob/master/docs/api/accelerator.md\n */\nexport const ElectronAcceleratorLabelProvider = new ModifierLabelProvider({\n    ctrlKey: 'Ctrl',\n    shiftKey: 'Shift',\n    altKey: 'Alt',\n    metaKey: 'Cmd',\n    separator: '+',\n}, {\n    ctrlKey: 'Ctrl',\n    shiftKey: 'Shift',\n    altKey: 'Alt',\n    metaKey: 'Super',\n    separator: '+',\n});\n/**\n * A label provider that prints modifiers in a suitable format for user settings.\n */\nexport const UserSettingsLabelProvider = new ModifierLabelProvider({\n    ctrlKey: 'ctrl',\n    shiftKey: 'shift',\n    altKey: 'alt',\n    metaKey: 'cmd',\n    separator: '+',\n}, {\n    ctrlKey: 'ctrl',\n    shiftKey: 'shift',\n    altKey: 'alt',\n    metaKey: 'win',\n    separator: '+',\n}, {\n    ctrlKey: 'ctrl',\n    shiftKey: 'shift',\n    altKey: 'alt',\n    metaKey: 'meta',\n    separator: '+',\n});\nfunction _simpleAsString(modifiers, key, labels) {\n    if (key === null) {\n        return '';\n    }\n    const result = [];\n    // translate modifier keys: Ctrl-Shift-Alt-Meta\n    if (modifiers.ctrlKey) {\n        result.push(labels.ctrlKey);\n    }\n    if (modifiers.shiftKey) {\n        result.push(labels.shiftKey);\n    }\n    if (modifiers.altKey) {\n        result.push(labels.altKey);\n    }\n    if (modifiers.metaKey) {\n        result.push(labels.metaKey);\n    }\n    // the actual key\n    if (key !== '') {\n        result.push(key);\n    }\n    return result.join(labels.separator);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { illegalArgument } from './errors.js';\nexport function decodeKeybinding(keybinding, OS) {\n    if (typeof keybinding === 'number') {\n        if (keybinding === 0) {\n            return null;\n        }\n        const firstChord = (keybinding & 0x0000FFFF) >>> 0;\n        const secondChord = (keybinding & 0xFFFF0000) >>> 16;\n        if (secondChord !== 0) {\n            return new Keybinding([\n                createSimpleKeybinding(firstChord, OS),\n                createSimpleKeybinding(secondChord, OS)\n            ]);\n        }\n        return new Keybinding([createSimpleKeybinding(firstChord, OS)]);\n    }\n    else {\n        const chords = [];\n        for (let i = 0; i < keybinding.length; i++) {\n            chords.push(createSimpleKeybinding(keybinding[i], OS));\n        }\n        return new Keybinding(chords);\n    }\n}\nexport function createSimpleKeybinding(keybinding, OS) {\n    const ctrlCmd = (keybinding & 2048 /* BinaryKeybindingsMask.CtrlCmd */ ? true : false);\n    const winCtrl = (keybinding & 256 /* BinaryKeybindingsMask.WinCtrl */ ? true : false);\n    const ctrlKey = (OS === 2 /* OperatingSystem.Macintosh */ ? winCtrl : ctrlCmd);\n    const shiftKey = (keybinding & 1024 /* BinaryKeybindingsMask.Shift */ ? true : false);\n    const altKey = (keybinding & 512 /* BinaryKeybindingsMask.Alt */ ? true : false);\n    const metaKey = (OS === 2 /* OperatingSystem.Macintosh */ ? ctrlCmd : winCtrl);\n    const keyCode = (keybinding & 255 /* BinaryKeybindingsMask.KeyCode */);\n    return new KeyCodeChord(ctrlKey, shiftKey, altKey, metaKey, keyCode);\n}\n/**\n * Represents a chord which uses the `keyCode` field of keyboard events.\n * A chord is a combination of keys pressed simultaneously.\n */\nexport class KeyCodeChord {\n    constructor(ctrlKey, shiftKey, altKey, metaKey, keyCode) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyCode = keyCode;\n    }\n    equals(other) {\n        return (other instanceof KeyCodeChord\n            && this.ctrlKey === other.ctrlKey\n            && this.shiftKey === other.shiftKey\n            && this.altKey === other.altKey\n            && this.metaKey === other.metaKey\n            && this.keyCode === other.keyCode);\n    }\n    isModifierKey() {\n        return (this.keyCode === 0 /* KeyCode.Unknown */\n            || this.keyCode === 5 /* KeyCode.Ctrl */\n            || this.keyCode === 57 /* KeyCode.Meta */\n            || this.keyCode === 6 /* KeyCode.Alt */\n            || this.keyCode === 4 /* KeyCode.Shift */);\n    }\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    isDuplicateModifierCase() {\n        return ((this.ctrlKey && this.keyCode === 5 /* KeyCode.Ctrl */)\n            || (this.shiftKey && this.keyCode === 4 /* KeyCode.Shift */)\n            || (this.altKey && this.keyCode === 6 /* KeyCode.Alt */)\n            || (this.metaKey && this.keyCode === 57 /* KeyCode.Meta */));\n    }\n}\n/**\n * Represents a chord which uses the `code` field of keyboard events.\n * A chord is a combination of keys pressed simultaneously.\n */\nexport class ScanCodeChord {\n    constructor(ctrlKey, shiftKey, altKey, metaKey, scanCode) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.scanCode = scanCode;\n    }\n    /**\n     * Does this keybinding refer to the key code of a modifier and it also has the modifier flag?\n     */\n    isDuplicateModifierCase() {\n        return ((this.ctrlKey && (this.scanCode === 157 /* ScanCode.ControlLeft */ || this.scanCode === 161 /* ScanCode.ControlRight */))\n            || (this.shiftKey && (this.scanCode === 158 /* ScanCode.ShiftLeft */ || this.scanCode === 162 /* ScanCode.ShiftRight */))\n            || (this.altKey && (this.scanCode === 159 /* ScanCode.AltLeft */ || this.scanCode === 163 /* ScanCode.AltRight */))\n            || (this.metaKey && (this.scanCode === 160 /* ScanCode.MetaLeft */ || this.scanCode === 164 /* ScanCode.MetaRight */)));\n    }\n}\n/**\n * A keybinding is a sequence of chords.\n */\nexport class Keybinding {\n    constructor(chords) {\n        if (chords.length === 0) {\n            throw illegalArgument(`chords`);\n        }\n        this.chords = chords;\n    }\n}\nexport class ResolvedChord {\n    constructor(ctrlKey, shiftKey, altKey, metaKey, keyLabel, keyAriaLabel) {\n        this.ctrlKey = ctrlKey;\n        this.shiftKey = shiftKey;\n        this.altKey = altKey;\n        this.metaKey = metaKey;\n        this.keyLabel = keyLabel;\n        this.keyAriaLabel = keyAriaLabel;\n    }\n}\n/**\n * A resolved keybinding. Consists of one or multiple chords.\n */\nexport class ResolvedKeybinding {\n}\n","import { hasDriveLetter } from './extpath.js';\nimport { isWindows } from './platform.js';\nexport function normalizeDriveLetter(path, isWindowsOS = isWindows) {\n    if (hasDriveLetter(path, isWindowsOS)) {\n        return path.charAt(0).toUpperCase() + path.slice(1);\n    }\n    return path;\n}\nlet normalizedUserHomeCached = Object.create(null);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class Lazy {\n    constructor(executor) {\n        this.executor = executor;\n        this._didRun = false;\n    }\n    /**\n     * Get the wrapped value.\n     *\n     * This will force evaluation of the lazy value if it has not been resolved yet. Lazy values are only\n     * resolved once. `getValue` will re-throw exceptions that are hit while resolving the value\n     */\n    get value() {\n        if (!this._didRun) {\n            try {\n                this._value = this.executor();\n            }\n            catch (err) {\n                this._error = err;\n            }\n            finally {\n                this._didRun = true;\n            }\n        }\n        if (this._error) {\n            throw this._error;\n        }\n        return this._value;\n    }\n    /**\n     * Get the wrapped value without forcing evaluation.\n     */\n    get rawValue() { return this._value; }\n}\n","import { createSingleCallFunction } from './functional.js';\nimport { Iterable } from './iterator.js';\n// #region Disposable Tracking\n/**\n * Enables logging of potentially leaked disposables.\n *\n * A disposable is considered leaked if it is not disposed or not registered as the child of\n * another disposable. This tracking is very simple an only works for classes that either\n * extend Disposable or use a DisposableStore. This means there are a lot of false positives.\n */\nconst TRACK_DISPOSABLES = false;\nlet disposableTracker = null;\nexport function setDisposableTracker(tracker) {\n    disposableTracker = tracker;\n}\nif (TRACK_DISPOSABLES) {\n    const __is_disposable_tracked__ = '__is_disposable_tracked__';\n    setDisposableTracker(new class {\n        trackDisposable(x) {\n            const stack = new Error('Potentially leaked disposable').stack;\n            setTimeout(() => {\n                if (!x[__is_disposable_tracked__]) {\n                    console.log(stack);\n                }\n            }, 3000);\n        }\n        setParent(child, parent) {\n            if (child && child !== Disposable.None) {\n                try {\n                    child[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n        markAsDisposed(disposable) {\n            if (disposable && disposable !== Disposable.None) {\n                try {\n                    disposable[__is_disposable_tracked__] = true;\n                }\n                catch (_a) {\n                    // noop\n                }\n            }\n        }\n        markAsSingleton(disposable) { }\n    });\n}\nexport function trackDisposable(x) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.trackDisposable(x);\n    return x;\n}\nexport function markAsDisposed(disposable) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsDisposed(disposable);\n}\nfunction setParentOfDisposable(child, parent) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.setParent(child, parent);\n}\nfunction setParentOfDisposables(children, parent) {\n    if (!disposableTracker) {\n        return;\n    }\n    for (const child of children) {\n        disposableTracker.setParent(child, parent);\n    }\n}\n/**\n * Indicates that the given object is a singleton which does not need to be disposed.\n*/\nexport function markAsSingleton(singleton) {\n    disposableTracker === null || disposableTracker === void 0 ? void 0 : disposableTracker.markAsSingleton(singleton);\n    return singleton;\n}\n/**\n * Check if `thing` is {@link IDisposable disposable}.\n */\nexport function isDisposable(thing) {\n    return typeof thing.dispose === 'function' && thing.dispose.length === 0;\n}\nexport function dispose(arg) {\n    if (Iterable.is(arg)) {\n        const errors = [];\n        for (const d of arg) {\n            if (d) {\n                try {\n                    d.dispose();\n                }\n                catch (e) {\n                    errors.push(e);\n                }\n            }\n        }\n        if (errors.length === 1) {\n            throw errors[0];\n        }\n        else if (errors.length > 1) {\n            throw new AggregateError(errors, 'Encountered errors while disposing of store');\n        }\n        return Array.isArray(arg) ? [] : arg;\n    }\n    else if (arg) {\n        arg.dispose();\n        return arg;\n    }\n}\n/**\n * Combine multiple disposable values into a single {@link IDisposable}.\n */\nexport function combinedDisposable(...disposables) {\n    const parent = toDisposable(() => dispose(disposables));\n    setParentOfDisposables(disposables, parent);\n    return parent;\n}\n/**\n * Turn a function that implements dispose into an {@link IDisposable}.\n *\n * @param fn Clean up function, guaranteed to be called only **once**.\n */\nexport function toDisposable(fn) {\n    const self = trackDisposable({\n        dispose: createSingleCallFunction(() => {\n            markAsDisposed(self);\n            fn();\n        })\n    });\n    return self;\n}\n/**\n * Manages a collection of disposable values.\n *\n * This is the preferred way to manage multiple disposables. A `DisposableStore` is safer to work with than an\n * `IDisposable[]` as it considers edge cases, such as registering the same value multiple times or adding an item to a\n * store that has already been disposed of.\n */\nexport class DisposableStore {\n    constructor() {\n        this._toDispose = new Set();\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    /**\n     * Dispose of all registered disposables and mark this object as disposed.\n     *\n     * Any future disposables added to this object will be disposed of on `add`.\n     */\n    dispose() {\n        if (this._isDisposed) {\n            return;\n        }\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clear();\n    }\n    /**\n     * @return `true` if this object has been disposed of.\n     */\n    get isDisposed() {\n        return this._isDisposed;\n    }\n    /**\n     * Dispose of all registered disposables but do not mark this object as disposed.\n     */\n    clear() {\n        if (this._toDispose.size === 0) {\n            return;\n        }\n        try {\n            dispose(this._toDispose);\n        }\n        finally {\n            this._toDispose.clear();\n        }\n    }\n    /**\n     * Add a new {@link IDisposable disposable} to the collection.\n     */\n    add(o) {\n        if (!o) {\n            return o;\n        }\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        setParentOfDisposable(o, this);\n        if (this._isDisposed) {\n            if (!DisposableStore.DISABLE_DISPOSED_WARNING) {\n                console.warn(new Error('Trying to add a disposable to a DisposableStore that has already been disposed of. The added object will be leaked!').stack);\n            }\n        }\n        else {\n            this._toDispose.add(o);\n        }\n        return o;\n    }\n    /**\n     * Deletes the value from the store, but does not dispose it.\n     */\n    deleteAndLeak(o) {\n        if (!o) {\n            return;\n        }\n        if (this._toDispose.has(o)) {\n            this._toDispose.delete(o);\n            setParentOfDisposable(o, null);\n        }\n    }\n}\nDisposableStore.DISABLE_DISPOSED_WARNING = false;\n/**\n * Abstract base class for a {@link IDisposable disposable} object.\n *\n * Subclasses can {@linkcode _register} disposables that will be automatically cleaned up when this object is disposed of.\n */\nexport class Disposable {\n    constructor() {\n        this._store = new DisposableStore();\n        trackDisposable(this);\n        setParentOfDisposable(this._store, this);\n    }\n    dispose() {\n        markAsDisposed(this);\n        this._store.dispose();\n    }\n    /**\n     * Adds `o` to the collection of disposables managed by this object.\n     */\n    _register(o) {\n        if (o === this) {\n            throw new Error('Cannot register a disposable on itself!');\n        }\n        return this._store.add(o);\n    }\n}\n/**\n * A disposable that does nothing when it is disposed of.\n *\n * TODO: This should not be a static property.\n */\nDisposable.None = Object.freeze({ dispose() { } });\n/**\n * Manages the lifecycle of a disposable value that may be changed.\n *\n * This ensures that when the disposable value is changed, the previously held disposable is disposed of. You can\n * also register a `MutableDisposable` on a `Disposable` to ensure it is automatically cleaned up.\n */\nexport class MutableDisposable {\n    constructor() {\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    get value() {\n        return this._isDisposed ? undefined : this._value;\n    }\n    set value(value) {\n        var _a;\n        if (this._isDisposed || value === this._value) {\n            return;\n        }\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        if (value) {\n            setParentOfDisposable(value, this);\n        }\n        this._value = value;\n    }\n    /**\n     * Resets the stored value and disposed of the previously stored value.\n     */\n    clear() {\n        this.value = undefined;\n    }\n    dispose() {\n        var _a;\n        this._isDisposed = true;\n        markAsDisposed(this);\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._value = undefined;\n    }\n}\nexport class RefCountedDisposable {\n    constructor(_disposable) {\n        this._disposable = _disposable;\n        this._counter = 1;\n    }\n    acquire() {\n        this._counter++;\n        return this;\n    }\n    release() {\n        if (--this._counter === 0) {\n            this._disposable.dispose();\n        }\n        return this;\n    }\n}\nexport class ImmortalReference {\n    constructor(object) {\n        this.object = object;\n    }\n    dispose() { }\n}\n/**\n * A map the manages the lifecycle of the values that it stores.\n */\nexport class DisposableMap {\n    constructor() {\n        this._store = new Map();\n        this._isDisposed = false;\n        trackDisposable(this);\n    }\n    /**\n     * Disposes of all stored values and mark this object as disposed.\n     *\n     * Trying to use this object after it has been disposed of is an error.\n     */\n    dispose() {\n        markAsDisposed(this);\n        this._isDisposed = true;\n        this.clearAndDisposeAll();\n    }\n    /**\n     * Disposes of all stored values and clear the map, but DO NOT mark this object as disposed.\n     */\n    clearAndDisposeAll() {\n        if (!this._store.size) {\n            return;\n        }\n        try {\n            dispose(this._store.values());\n        }\n        finally {\n            this._store.clear();\n        }\n    }\n    get(key) {\n        return this._store.get(key);\n    }\n    set(key, value, skipDisposeOnOverwrite = false) {\n        var _a;\n        if (this._isDisposed) {\n            console.warn(new Error('Trying to add a disposable to a DisposableMap that has already been disposed of. The added object will be leaked!').stack);\n        }\n        if (!skipDisposeOnOverwrite) {\n            (_a = this._store.get(key)) === null || _a === void 0 ? void 0 : _a.dispose();\n        }\n        this._store.set(key, value);\n    }\n    /**\n     * Delete the value stored for `key` from this map and also dispose of it.\n     */\n    deleteAndDispose(key) {\n        var _a;\n        (_a = this._store.get(key)) === null || _a === void 0 ? void 0 : _a.dispose();\n        this._store.delete(key);\n    }\n    [Symbol.iterator]() {\n        return this._store[Symbol.iterator]();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nclass Node {\n    constructor(element) {\n        this.element = element;\n        this.next = Node.Undefined;\n        this.prev = Node.Undefined;\n    }\n}\nNode.Undefined = new Node(undefined);\nexport class LinkedList {\n    constructor() {\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    get size() {\n        return this._size;\n    }\n    isEmpty() {\n        return this._first === Node.Undefined;\n    }\n    clear() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            const next = node.next;\n            node.prev = Node.Undefined;\n            node.next = Node.Undefined;\n            node = next;\n        }\n        this._first = Node.Undefined;\n        this._last = Node.Undefined;\n        this._size = 0;\n    }\n    unshift(element) {\n        return this._insert(element, false);\n    }\n    push(element) {\n        return this._insert(element, true);\n    }\n    _insert(element, atTheEnd) {\n        const newNode = new Node(element);\n        if (this._first === Node.Undefined) {\n            this._first = newNode;\n            this._last = newNode;\n        }\n        else if (atTheEnd) {\n            // push\n            const oldLast = this._last;\n            this._last = newNode;\n            newNode.prev = oldLast;\n            oldLast.next = newNode;\n        }\n        else {\n            // unshift\n            const oldFirst = this._first;\n            this._first = newNode;\n            newNode.next = oldFirst;\n            oldFirst.prev = newNode;\n        }\n        this._size += 1;\n        let didRemove = false;\n        return () => {\n            if (!didRemove) {\n                didRemove = true;\n                this._remove(newNode);\n            }\n        };\n    }\n    shift() {\n        if (this._first === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._first.element;\n            this._remove(this._first);\n            return res;\n        }\n    }\n    pop() {\n        if (this._last === Node.Undefined) {\n            return undefined;\n        }\n        else {\n            const res = this._last.element;\n            this._remove(this._last);\n            return res;\n        }\n    }\n    _remove(node) {\n        if (node.prev !== Node.Undefined && node.next !== Node.Undefined) {\n            // middle\n            const anchor = node.prev;\n            anchor.next = node.next;\n            node.next.prev = anchor;\n        }\n        else if (node.prev === Node.Undefined && node.next === Node.Undefined) {\n            // only node\n            this._first = Node.Undefined;\n            this._last = Node.Undefined;\n        }\n        else if (node.next === Node.Undefined) {\n            // last\n            this._last = this._last.prev;\n            this._last.next = Node.Undefined;\n        }\n        else if (node.prev === Node.Undefined) {\n            // first\n            this._first = this._first.next;\n            this._first.prev = Node.Undefined;\n        }\n        // done\n        this._size -= 1;\n    }\n    *[Symbol.iterator]() {\n        let node = this._first;\n        while (node !== Node.Undefined) {\n            yield node.element;\n            node = node.next;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { memoize } from './decorators.js';\nexport class LinkedText {\n    constructor(nodes) {\n        this.nodes = nodes;\n    }\n    toString() {\n        return this.nodes.map(node => typeof node === 'string' ? node : node.label).join('');\n    }\n}\n__decorate([\n    memoize\n], LinkedText.prototype, \"toString\", null);\nconst LINK_REGEX = /\\[([^\\]]+)\\]\\(((?:https?:\\/\\/|command:|file:)[^\\)\\s]+)(?: ([\"'])(.+?)(\\3))?\\)/gi;\nexport function parseLinkedText(text) {\n    const result = [];\n    let index = 0;\n    let match;\n    while (match = LINK_REGEX.exec(text)) {\n        if (match.index - index > 0) {\n            result.push(text.substring(index, match.index));\n        }\n        const [, label, href, , title] = match;\n        if (title) {\n            result.push({ label, href, title });\n        }\n        else {\n            result.push({ label, href });\n        }\n        index = match.index + match[0].length;\n    }\n    if (index < text.length) {\n        result.push(text.substring(index));\n    }\n    return new LinkedText(result);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a, _b;\nclass ResourceMapEntry {\n    constructor(uri, value) {\n        this.uri = uri;\n        this.value = value;\n    }\n}\nfunction isEntries(arg) {\n    return Array.isArray(arg);\n}\nexport class ResourceMap {\n    constructor(arg, toKey) {\n        this[_a] = 'ResourceMap';\n        if (arg instanceof ResourceMap) {\n            this.map = new Map(arg.map);\n            this.toKey = toKey !== null && toKey !== void 0 ? toKey : ResourceMap.defaultToKey;\n        }\n        else if (isEntries(arg)) {\n            this.map = new Map();\n            this.toKey = toKey !== null && toKey !== void 0 ? toKey : ResourceMap.defaultToKey;\n            for (const [resource, value] of arg) {\n                this.set(resource, value);\n            }\n        }\n        else {\n            this.map = new Map();\n            this.toKey = arg !== null && arg !== void 0 ? arg : ResourceMap.defaultToKey;\n        }\n    }\n    set(resource, value) {\n        this.map.set(this.toKey(resource), new ResourceMapEntry(resource, value));\n        return this;\n    }\n    get(resource) {\n        var _c;\n        return (_c = this.map.get(this.toKey(resource))) === null || _c === void 0 ? void 0 : _c.value;\n    }\n    has(resource) {\n        return this.map.has(this.toKey(resource));\n    }\n    get size() {\n        return this.map.size;\n    }\n    clear() {\n        this.map.clear();\n    }\n    delete(resource) {\n        return this.map.delete(this.toKey(resource));\n    }\n    forEach(clb, thisArg) {\n        if (typeof thisArg !== 'undefined') {\n            clb = clb.bind(thisArg);\n        }\n        for (const [_, entry] of this.map) {\n            clb(entry.value, entry.uri, this);\n        }\n    }\n    *values() {\n        for (const entry of this.map.values()) {\n            yield entry.value;\n        }\n    }\n    *keys() {\n        for (const entry of this.map.values()) {\n            yield entry.uri;\n        }\n    }\n    *entries() {\n        for (const entry of this.map.values()) {\n            yield [entry.uri, entry.value];\n        }\n    }\n    *[(_a = Symbol.toStringTag, Symbol.iterator)]() {\n        for (const [, entry] of this.map) {\n            yield [entry.uri, entry.value];\n        }\n    }\n}\nResourceMap.defaultToKey = (resource) => resource.toString();\nexport class LinkedMap {\n    constructor() {\n        this[_b] = 'LinkedMap';\n        this._map = new Map();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state = 0;\n    }\n    clear() {\n        this._map.clear();\n        this._head = undefined;\n        this._tail = undefined;\n        this._size = 0;\n        this._state++;\n    }\n    isEmpty() {\n        return !this._head && !this._tail;\n    }\n    get size() {\n        return this._size;\n    }\n    get first() {\n        var _c;\n        return (_c = this._head) === null || _c === void 0 ? void 0 : _c.value;\n    }\n    get last() {\n        var _c;\n        return (_c = this._tail) === null || _c === void 0 ? void 0 : _c.value;\n    }\n    has(key) {\n        return this._map.has(key);\n    }\n    get(key, touch = 0 /* Touch.None */) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        if (touch !== 0 /* Touch.None */) {\n            this.touch(item, touch);\n        }\n        return item.value;\n    }\n    set(key, value, touch = 0 /* Touch.None */) {\n        let item = this._map.get(key);\n        if (item) {\n            item.value = value;\n            if (touch !== 0 /* Touch.None */) {\n                this.touch(item, touch);\n            }\n        }\n        else {\n            item = { key, value, next: undefined, previous: undefined };\n            switch (touch) {\n                case 0 /* Touch.None */:\n                    this.addItemLast(item);\n                    break;\n                case 1 /* Touch.AsOld */:\n                    this.addItemFirst(item);\n                    break;\n                case 2 /* Touch.AsNew */:\n                    this.addItemLast(item);\n                    break;\n                default:\n                    this.addItemLast(item);\n                    break;\n            }\n            this._map.set(key, item);\n            this._size++;\n        }\n        return this;\n    }\n    delete(key) {\n        return !!this.remove(key);\n    }\n    remove(key) {\n        const item = this._map.get(key);\n        if (!item) {\n            return undefined;\n        }\n        this._map.delete(key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    shift() {\n        if (!this._head && !this._tail) {\n            return undefined;\n        }\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        const item = this._head;\n        this._map.delete(item.key);\n        this.removeItem(item);\n        this._size--;\n        return item.value;\n    }\n    forEach(callbackfn, thisArg) {\n        const state = this._state;\n        let current = this._head;\n        while (current) {\n            if (thisArg) {\n                callbackfn.bind(thisArg)(current.value, current.key, this);\n            }\n            else {\n                callbackfn(current.value, current.key, this);\n            }\n            if (this._state !== state) {\n                throw new Error(`LinkedMap got modified during iteration.`);\n            }\n            current = current.next;\n        }\n    }\n    keys() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.key, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    values() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: current.value, done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    entries() {\n        const map = this;\n        const state = this._state;\n        let current = this._head;\n        const iterator = {\n            [Symbol.iterator]() {\n                return iterator;\n            },\n            next() {\n                if (map._state !== state) {\n                    throw new Error(`LinkedMap got modified during iteration.`);\n                }\n                if (current) {\n                    const result = { value: [current.key, current.value], done: false };\n                    current = current.next;\n                    return result;\n                }\n                else {\n                    return { value: undefined, done: true };\n                }\n            }\n        };\n        return iterator;\n    }\n    [(_b = Symbol.toStringTag, Symbol.iterator)]() {\n        return this.entries();\n    }\n    trimOld(newSize) {\n        if (newSize >= this.size) {\n            return;\n        }\n        if (newSize === 0) {\n            this.clear();\n            return;\n        }\n        let current = this._head;\n        let currentSize = this.size;\n        while (current && currentSize > newSize) {\n            this._map.delete(current.key);\n            current = current.next;\n            currentSize--;\n        }\n        this._head = current;\n        this._size = currentSize;\n        if (current) {\n            current.previous = undefined;\n        }\n        this._state++;\n    }\n    addItemFirst(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._tail = item;\n        }\n        else if (!this._head) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.next = this._head;\n            this._head.previous = item;\n        }\n        this._head = item;\n        this._state++;\n    }\n    addItemLast(item) {\n        // First time Insert\n        if (!this._head && !this._tail) {\n            this._head = item;\n        }\n        else if (!this._tail) {\n            throw new Error('Invalid list');\n        }\n        else {\n            item.previous = this._tail;\n            this._tail.next = item;\n        }\n        this._tail = item;\n        this._state++;\n    }\n    removeItem(item) {\n        if (item === this._head && item === this._tail) {\n            this._head = undefined;\n            this._tail = undefined;\n        }\n        else if (item === this._head) {\n            // This can only happen if size === 1 which is handled\n            // by the case above.\n            if (!item.next) {\n                throw new Error('Invalid list');\n            }\n            item.next.previous = undefined;\n            this._head = item.next;\n        }\n        else if (item === this._tail) {\n            // This can only happen if size === 1 which is handled\n            // by the case above.\n            if (!item.previous) {\n                throw new Error('Invalid list');\n            }\n            item.previous.next = undefined;\n            this._tail = item.previous;\n        }\n        else {\n            const next = item.next;\n            const previous = item.previous;\n            if (!next || !previous) {\n                throw new Error('Invalid list');\n            }\n            next.previous = previous;\n            previous.next = next;\n        }\n        item.next = undefined;\n        item.previous = undefined;\n        this._state++;\n    }\n    touch(item, touch) {\n        if (!this._head || !this._tail) {\n            throw new Error('Invalid list');\n        }\n        if ((touch !== 1 /* Touch.AsOld */ && touch !== 2 /* Touch.AsNew */)) {\n            return;\n        }\n        if (touch === 1 /* Touch.AsOld */) {\n            if (item === this._head) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item\n            if (item === this._tail) {\n                // previous must be defined since item was not head but is tail\n                // So there are more than on item in the map\n                previous.next = undefined;\n                this._tail = previous;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            // Insert the node at head\n            item.previous = undefined;\n            item.next = this._head;\n            this._head.previous = item;\n            this._head = item;\n            this._state++;\n        }\n        else if (touch === 2 /* Touch.AsNew */) {\n            if (item === this._tail) {\n                return;\n            }\n            const next = item.next;\n            const previous = item.previous;\n            // Unlink the item.\n            if (item === this._head) {\n                // next must be defined since item was not tail but is head\n                // So there are more than on item in the map\n                next.previous = undefined;\n                this._head = next;\n            }\n            else {\n                // Both next and previous are not undefined since item was neither head nor tail.\n                next.previous = previous;\n                previous.next = next;\n            }\n            item.next = undefined;\n            item.previous = this._tail;\n            this._tail.next = item;\n            this._tail = item;\n            this._state++;\n        }\n    }\n    toJSON() {\n        const data = [];\n        this.forEach((value, key) => {\n            data.push([key, value]);\n        });\n        return data;\n    }\n    fromJSON(data) {\n        this.clear();\n        for (const [key, value] of data) {\n            this.set(key, value);\n        }\n    }\n}\nexport class LRUCache extends LinkedMap {\n    constructor(limit, ratio = 1) {\n        super();\n        this._limit = limit;\n        this._ratio = Math.min(Math.max(0, ratio), 1);\n    }\n    get limit() {\n        return this._limit;\n    }\n    set limit(limit) {\n        this._limit = limit;\n        this.checkTrim();\n    }\n    get(key, touch = 2 /* Touch.AsNew */) {\n        return super.get(key, touch);\n    }\n    peek(key) {\n        return super.get(key, 0 /* Touch.None */);\n    }\n    set(key, value) {\n        super.set(key, value, 2 /* Touch.AsNew */);\n        this.checkTrim();\n        return this;\n    }\n    checkTrim() {\n        if (this.size > this._limit) {\n            this.trimOld(Math.round(this._limit * this._ratio));\n        }\n    }\n}\n/**\n * A map that allows access both by keys and values.\n * **NOTE**: values need to be unique.\n */\nexport class BidirectionalMap {\n    constructor(entries) {\n        this._m1 = new Map();\n        this._m2 = new Map();\n        if (entries) {\n            for (const [key, value] of entries) {\n                this.set(key, value);\n            }\n        }\n    }\n    clear() {\n        this._m1.clear();\n        this._m2.clear();\n    }\n    set(key, value) {\n        this._m1.set(key, value);\n        this._m2.set(value, key);\n    }\n    get(key) {\n        return this._m1.get(key);\n    }\n    getKey(value) {\n        return this._m2.get(value);\n    }\n    delete(key) {\n        const value = this._m1.get(key);\n        if (value === undefined) {\n            return false;\n        }\n        this._m1.delete(key);\n        this._m2.delete(value);\n        return true;\n    }\n    keys() {\n        return this._m1.keys();\n    }\n    values() {\n        return this._m1.values();\n    }\n}\nexport class SetMap {\n    constructor() {\n        this.map = new Map();\n    }\n    add(key, value) {\n        let values = this.map.get(key);\n        if (!values) {\n            values = new Set();\n            this.map.set(key, values);\n        }\n        values.add(value);\n    }\n    delete(key, value) {\n        const values = this.map.get(key);\n        if (!values) {\n            return;\n        }\n        values.delete(value);\n        if (values.size === 0) {\n            this.map.delete(key);\n        }\n    }\n    forEach(key, fn) {\n        const values = this.map.get(key);\n        if (!values) {\n            return;\n        }\n        values.forEach(fn);\n    }\n    get(key) {\n        const values = this.map.get(key);\n        if (!values) {\n            return new Set();\n        }\n        return values;\n    }\n}\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2022, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n// ESM-uncomment-begin\nlet __marked_exports = {};\n(function() {\n  function define(deps, factory) {\n    factory(__marked_exports);\n  }\n  define.amd = true;\n// ESM-uncomment-end\n\n (function (global, factory) {\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.marked = {}));\n})(this, (function (exports) { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    Object.defineProperty(Constructor, \"prototype\", {\n      writable: false\n    });\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  function getDefaults() {\n    return {\n      async: false,\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n  exports.defaults = getDefaults();\n  function changeDefaults(newDefaults) {\n    exports.defaults = newDefaults;\n  }\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n  /**\n   * @param {string} html\n   */\n\n  function unescape(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n  var caret = /(^|[^\\[])\\^/g;\n  /**\n   * @param {string | RegExp} regex\n   * @param {string} opt\n   */\n\n  function edit(regex, opt) {\n    regex = typeof regex === 'string' ? regex : regex.source;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n  /**\n   * @param {boolean} sanitize\n   * @param {string} base\n   * @param {string} href\n   */\n\n  function cleanUrl(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n  /**\n   * @param {string} base\n   * @param {string} href\n   */\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n  var noopTest = {\n    exec: function noopTest() {}\n  };\n  function merge(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n  function splitCells(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0; // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n\n    if (!cells[0].trim()) {\n      cells.shift();\n    }\n\n    if (cells.length > 0 && !cells[cells.length - 1].trim()) {\n      cells.pop();\n    }\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  }\n  /**\n   * Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n   * /c*$/ is vulnerable to REDOS.\n   *\n   * @param {string} str\n   * @param {string} c\n   * @param {boolean} invert Remove suffix of non-c chars instead. Default falsey.\n   */\n\n  function rtrim(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.slice(0, l - suffLen);\n  }\n  function findClosingBracket(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n  function checkSanitizeDeprecation(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n  /**\n   * @param {string} pattern\n   * @param {number} count\n   */\n\n  function repeatString(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  function outputLink(cap, link, raw, lexer) {\n    var href = link.href;\n    var title = link.title ? escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      lexer.state.inLink = true;\n      var token = {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text,\n        tokens: lexer.inlineTokens(text)\n      };\n      lexer.state.inLink = false;\n      return token;\n    }\n\n    return {\n      type: 'image',\n      raw: raw,\n      href: href,\n      title: title,\n      text: escape(text)\n    };\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap && cap[0].length > 0) {\n        return {\n          type: 'space',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text,\n          tokens: this.lexer.inline(text)\n        };\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *>[ \\t]?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          tokens: this.lexer.blockTokens(text, []),\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, nextLine, rawLine, itemContents, endEarly;\n        var bull = cap[1].trim();\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: '',\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        };\n        bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n\n        if (this.options.pedantic) {\n          bull = isordered ? bull : '[*+-]';\n        } // Get next list item\n\n\n        var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?:[\\t ][^\\\\n]*)?(?:\\\\n|$))\"); // Check if current bullet point can start a new List Item\n\n        while (src) {\n          endEarly = false;\n\n          if (!(cap = itemRegex.exec(src))) {\n            break;\n          }\n\n          if (this.rules.block.hr.test(src)) {\n            // End list if bullet was actually HR (possibly move into itemRegex?)\n            break;\n          }\n\n          raw = cap[0];\n          src = src.substring(raw.length);\n          line = cap[2].split('\\n', 1)[0];\n          nextLine = src.split('\\n', 1)[0];\n\n          if (this.options.pedantic) {\n            indent = 2;\n            itemContents = line.trimLeft();\n          } else {\n            indent = cap[2].search(/[^ ]/); // Find first non-space char\n\n            indent = indent > 4 ? 1 : indent; // Treat indented code blocks (> 4 spaces) as having only 1 indent\n\n            itemContents = line.slice(indent);\n            indent += cap[1].length;\n          }\n\n          blankLine = false;\n\n          if (!line && /^ *$/.test(nextLine)) {\n            // Items begin with at most one blank line\n            raw += nextLine + '\\n';\n            src = src.substring(nextLine.length + 1);\n            endEarly = true;\n          }\n\n          if (!endEarly) {\n            var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])((?: [^\\\\n]*)?(?:\\\\n|$))\");\n            var hrRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}((?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$)\");\n            var fencesBeginRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:```|~~~)\");\n            var headingBeginRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}#\"); // Check if following lines should be included in List Item\n\n            while (src) {\n              rawLine = src.split('\\n', 1)[0];\n              line = rawLine; // Re-align to follow commonmark nesting rules\n\n              if (this.options.pedantic) {\n                line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n              } // End list item if found code fences\n\n\n              if (fencesBeginRegex.test(line)) {\n                break;\n              } // End list item if found start of new heading\n\n\n              if (headingBeginRegex.test(line)) {\n                break;\n              } // End list item if found start of new bullet\n\n\n              if (nextBulletRegex.test(line)) {\n                break;\n              } // Horizontal rule found\n\n\n              if (hrRegex.test(src)) {\n                break;\n              }\n\n              if (line.search(/[^ ]/) >= indent || !line.trim()) {\n                // Dedent if possible\n                itemContents += '\\n' + line.slice(indent);\n              } else if (!blankLine) {\n                // Until blank line, item doesn't need indentation\n                itemContents += '\\n' + line;\n              } else {\n                // Otherwise, improper indentation ends this item\n                break;\n              }\n\n              if (!blankLine && !line.trim()) {\n                // Check if current line is blank\n                blankLine = true;\n              }\n\n              raw += rawLine + '\\n';\n              src = src.substring(rawLine.length + 1);\n            }\n          }\n\n          if (!list.loose) {\n            // If the previous item ended with a blank line, the list is loose\n            if (endsWithBlankLine) {\n              list.loose = true;\n            } else if (/\\n *\\n *$/.test(raw)) {\n              endsWithBlankLine = true;\n            }\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.exec(itemContents);\n\n            if (istask) {\n              ischecked = istask[0] !== '[ ] ';\n              itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: !!istask,\n            checked: ischecked,\n            loose: false,\n            text: itemContents\n          });\n          list.raw += raw;\n        } // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n\n\n        list.items[list.items.length - 1].raw = raw.trimRight();\n        list.items[list.items.length - 1].text = itemContents.trimRight();\n        list.raw = list.raw.trimRight();\n        var l = list.items.length; // Item child tokens handled here at end because we needed to have the final item to trim it first\n\n        for (i = 0; i < l; i++) {\n          this.lexer.state.top = false;\n          list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n          var spacers = list.items[i].tokens.filter(function (t) {\n            return t.type === 'space';\n          });\n          var hasMultipleLineBreaks = spacers.every(function (t) {\n            var chars = t.raw.split('');\n            var lineBreaks = 0;\n\n            for (var _iterator = _createForOfIteratorHelperLoose(chars), _step; !(_step = _iterator()).done;) {\n              var _char = _step.value;\n\n              if (_char === '\\n') {\n                lineBreaks += 1;\n              }\n\n              if (lineBreaks > 1) {\n                return true;\n              }\n            }\n\n            return false;\n          });\n\n          if (!list.loose && spacers.length && hasMultipleLineBreaks) {\n            // Having a single line break doesn't mean a list is loose. A single line break is terminating the last list item\n            list.loose = true;\n            list.items[i].loose = true;\n          }\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        };\n\n        if (this.options.sanitize) {\n          var text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]);\n          token.type = 'paragraph';\n          token.text = text;\n          token.tokens = this.lexer.inline(text);\n        }\n\n        return token;\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1]).map(function (c) {\n            return {\n              text: c\n            };\n          }),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          rows: cap[3] && cap[3].trim() ? cap[3].replace(/\\n[ \\t]*$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i, j, k, row;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.rows.length;\n\n          for (i = 0; i < l; i++) {\n            item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n              return {\n                text: c\n              };\n            });\n          } // parse child tokens inside headers and cells\n          // header child tokens\n\n\n          l = item.header.length;\n\n          for (j = 0; j < l; j++) {\n            item.header[j].tokens = this.lexer.inline(item.header[j].text);\n          } // cell child tokens\n\n\n          l = item.rows.length;\n\n          for (j = 0; j < l; j++) {\n            row = item.rows[j];\n\n            for (k = 0; k < row.length; k++) {\n              row[k].tokens = this.lexer.inline(row[k].text);\n            }\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        return {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1],\n          tokens: this.lexer.inline(cap[1])\n        };\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        var text = cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1];\n        return {\n          type: 'paragraph',\n          raw: cap[0],\n          text: text,\n          tokens: this.lexer.inline(text)\n        };\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0],\n          tokens: this.lexer.inline(cap[0])\n        };\n      }\n    };\n\n    _proto.escape = function escape$1(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n          this.lexer.state.inLink = true;\n        } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.lexer.state.inLink = false;\n        }\n\n        if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = true;\n        } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: this.lexer.state.inLink,\n          inRawBlock: this.lexer.state.inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0], this.lexer);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0], this.lexer);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u0870-\\u0887\\u0889-\\u088E\\u08A0-\\u08C9\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C5D\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u1711\\u171F-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4C\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7CA\\uA7D0\\uA7D1\\uA7D3\\uA7D5-\\uA7D9\\uA7F2-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDD70-\\uDD7A\\uDD7C-\\uDD8A\\uDD8C-\\uDD92\\uDD94\\uDD95\\uDD97-\\uDDA1\\uDDA3-\\uDDB1\\uDDB3-\\uDDB9\\uDDBB\\uDDBC\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67\\uDF80-\\uDF85\\uDF87-\\uDFB0\\uDFB2-\\uDFBA]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDF70-\\uDF81\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC71\\uDC72\\uDC75\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B\\uDF40-\\uDF46]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEB0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|\\uD80B[\\uDF90-\\uDFF0]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDE70-\\uDEBE\\uDEC0-\\uDEC9\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82B[\\uDFF0-\\uDFF3\\uDFF5-\\uDFFB\\uDFFD\\uDFFE]|\\uD82C[\\uDC00-\\uDD22\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD837[\\uDF00-\\uDF1E]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDE90-\\uDEAD\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD839[\\uDFE0-\\uDFE6\\uDFE8-\\uDFEB\\uDFED\\uDFEE\\uDFF0-\\uDFFE]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDF\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF38\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)\n\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // Remove extra characters. *a*** -> *a*\n\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***\n\n          if (Math.min(lLength, rLength) % 2) {\n            var _text = src.slice(1, lLength + match.index + rLength);\n\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: _text,\n              tokens: this.lexer.inlineTokens(_text)\n            };\n          } // Create 'strong' if smallest delimiter has even char count. **a***\n\n\n          var text = src.slice(2, lLength + match.index + rLength - 1);\n          return {\n            type: 'strong',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text: text,\n            tokens: this.lexer.inlineTokens(text)\n          };\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2],\n          tokens: this.lexer.inlineTokens(cap[2])\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (this.lexer.state.inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : escape(cap[0]) : cap[0];\n        } else {\n          text = escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  /**\n   * Block-Level Grammar\n   */\n\n  var block = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:-[\\t ]*){3,}|(?:_[ \\t]*){3,}|(?:\\*[ \\t]*){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)([ \\t][^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *(?:\\n *)?<?([^\\s>]+)>?(?:(?: +(?:\\n *)?| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html|table| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block._label = /(?!\\s*\\])(?:\\\\.|[^\\[\\]\\\\])+/;\n  block._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block.def = edit(block.def).replace('label', block._label).replace('title', block._title).getRegex();\n  block.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block.listItemStart = edit(/^( *)(bull) */).replace('bull', block.bullet).getRegex();\n  block.list = edit(block.list).replace(/bull/g, block.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block.def.source + ')').getRegex();\n  block._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block.html = edit(block.html, 'i').replace('comment', block._comment).replace('tag', block._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('|table', '').replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block.blockquote = edit(block.blockquote).replace('paragraph', block.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block.normal = merge({}, block);\n  /**\n   * GFM Block Grammar\n   */\n\n  block.gfm = merge({}, block.normal, {\n    table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block.gfm.table = edit(block.gfm.table).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  block.gfm.paragraph = edit(block._paragraph).replace('hr', block.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('table', block.gfm.table) // interrupt paragraphs with table\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block.pedantic = merge({}, block.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block.normal._paragraph).replace('hr', block.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(ref)\\]/,\n    nolink: /^!?\\[(ref)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //          () Skip orphan inside strong  () Consume to delim (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[^*]+(?=[^*])|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[^_]+(?=[^_])|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline.punctuation = edit(inline.punctuation).replace(/punctuation/g, inline._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline._comment = edit(block._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline.emStrong.lDelim = edit(inline.emStrong.lDelim).replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimAst = edit(inline.emStrong.rDelimAst, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline.emStrong.rDelimUnd = edit(inline.emStrong.rDelimUnd, 'g').replace(/punct/g, inline._punctuation).getRegex();\n  inline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline.autolink = edit(inline.autolink).replace('scheme', inline._scheme).replace('email', inline._email).getRegex();\n  inline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline.tag = edit(inline.tag).replace('comment', inline._comment).replace('attribute', inline._attribute).getRegex();\n  inline._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline.link = edit(inline.link).replace('label', inline._label).replace('href', inline._href).replace('title', inline._title).getRegex();\n  inline.reflink = edit(inline.reflink).replace('label', inline._label).replace('ref', block._label).getRegex();\n  inline.nolink = edit(inline.nolink).replace('ref', block._label).getRegex();\n  inline.reflinkSearch = edit(inline.reflinkSearch, 'g').replace('reflink', inline.reflink).replace('nolink', inline.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline.normal = merge({}, inline);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline.pedantic = merge({}, inline.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline.gfm = merge({}, inline.normal, {\n    escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline.gfm.url = edit(inline.gfm.url, 'i').replace('email', inline.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline.breaks = merge({}, inline.gfm, {\n    br: edit(inline.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n\n  /**\n   * smartypants text replacement\n   * @param {string} text\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   * @param {string} text\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || exports.defaults;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      this.tokenizer.lexer = this;\n      this.inlineQueue = [];\n      this.state = {\n        inLink: false,\n        inRawBlock: false,\n        top: true\n      };\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n');\n      this.blockTokens(src, this.tokens);\n      var next;\n\n      while (next = this.inlineQueue.shift()) {\n        this.inlineTokens(next.src, next.tokens);\n      }\n\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens) {\n      var _this = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/\\t/g, '    ').replace(/^ +$/gm, '');\n      } else {\n        src = src.replace(/^( *)(\\t+)/gm, function (_, leading, tabs) {\n          return leading + '    '.repeat(tabs.length);\n        });\n      }\n\n      var token, lastToken, cutSrc, lastParagraphClipped;\n\n      while (src) {\n        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // newline\n\n\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.length === 1 && tokens.length > 0) {\n            // if there's a single \\n as a spacer, it's terminating the last line,\n            // so move it there so that we don't get unecessary paragraph tags\n            tokens[tokens.length - 1].raw += '\\n';\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (token = this.tokenizer.def(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.raw;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startBlock) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      this.state.top = true;\n      return tokens;\n    };\n\n    _proto.inline = function inline(src, tokens) {\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      this.inlineQueue.push({\n        src: src,\n        tokens: tokens\n      });\n      return tokens;\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens) {\n      var _this2 = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // extensions\n\n        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this2\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // escape\n\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startInline) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  /**\n   * Renderer\n   */\n\n  var Renderer = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || exports.defaults;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape(lang, true) + '\">' + (escaped ? _code : escape(_code, true)) + '</code></pre>\\n';\n    }\n    /**\n     * @param {string} quote\n     */\n    ;\n\n    _proto.blockquote = function blockquote(quote) {\n      return \"<blockquote>\\n\" + quote + \"</blockquote>\\n\";\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    }\n    /**\n     * @param {string} text\n     * @param {string} level\n     * @param {string} raw\n     * @param {any} slugger\n     */\n    ;\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        var id = this.options.headerPrefix + slugger.slug(raw);\n        return \"<h\" + level + \" id=\\\"\" + id + \"\\\">\" + text + \"</h\" + level + \">\\n\";\n      } // ignore IDs\n\n\n      return \"<h\" + level + \">\" + text + \"</h\" + level + \">\\n\";\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.listitem = function listitem(text) {\n      return \"<li>\" + text + \"</li>\\n\";\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.paragraph = function paragraph(text) {\n      return \"<p>\" + text + \"</p>\\n\";\n    }\n    /**\n     * @param {string} header\n     * @param {string} body\n     */\n    ;\n\n    _proto.table = function table(header, body) {\n      if (body) body = \"<tbody>\" + body + \"</tbody>\";\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    }\n    /**\n     * @param {string} content\n     */\n    ;\n\n    _proto.tablerow = function tablerow(content) {\n      return \"<tr>\\n\" + content + \"</tr>\\n\";\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? \"<\" + type + \" align=\\\"\" + flags.align + \"\\\">\" : \"<\" + type + \">\";\n      return tag + content + (\"</\" + type + \">\\n\");\n    }\n    /**\n     * span level renderer\n     * @param {string} text\n     */\n    ;\n\n    _proto.strong = function strong(text) {\n      return \"<strong>\" + text + \"</strong>\";\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.em = function em(text) {\n      return \"<em>\" + text + \"</em>\";\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.codespan = function codespan(text) {\n      return \"<code>\" + text + \"</code>\";\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    }\n    /**\n     * @param {string} text\n     */\n    ;\n\n    _proto.del = function del(text) {\n      return \"<del>\" + text + \"</del>\";\n    }\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */\n    ;\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    }\n    /**\n     * @param {string} href\n     * @param {string} title\n     * @param {string} text\n     */\n    ;\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = \"<img src=\\\"\" + href + \"\\\" alt=\\\"\" + text + \"\\\"\";\n\n      if (title) {\n        out += \" title=\\\"\" + title + \"\\\"\";\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n  var TextRenderer = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n  var Slugger = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n    /**\n     * @param {string} value\n     */\n\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     * @param {string} originalSlug\n     * @param {boolean} isDryRun\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} [options]\n     * @param {boolean} [options.dryrun] Generates the next unique slug without\n     * updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || exports.defaults;\n      this.options.renderer = this.options.renderer || new Renderer();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer();\n      this.slugger = new Slugger();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.rows.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.rows[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    function onError(e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n\n    try {\n      var _tokens = Lexer.lex(src, opt);\n\n      if (opt.walkTokens) {\n        if (opt.async) {\n          return Promise.all(marked.walkTokens(_tokens, opt.walkTokens)).then(function () {\n            return Parser.parse(_tokens, opt);\n          })[\"catch\"](onError);\n        }\n\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      onError(e);\n    }\n  }\n  /**\n   * Options\n   */\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = exports.defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var opts = merge.apply(void 0, [{}].concat(args));\n    var extensions = marked.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    var hasExtensions;\n    args.forEach(function (pack) {\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        hasExtensions = true;\n        pack.extensions.forEach(function (ext) {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n\n          if (ext.renderer) {\n            // Renderer extensions\n            var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function () {\n                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n\n                var ret = ext.renderer.apply(this, args);\n\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n\n          if (ext.tokenizer) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n\n          if (ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n      } // ==-- Parse \"overwrite\" extensions --== //\n\n\n      if (pack.renderer) {\n        (function () {\n          var renderer = marked.defaults.renderer || new Renderer();\n\n          var _loop = function _loop(prop) {\n            var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false\n\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n\n              var ret = pack.renderer[prop].apply(renderer, args);\n\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.renderer) {\n            _loop(prop);\n          }\n\n          opts.renderer = renderer;\n        })();\n      }\n\n      if (pack.tokenizer) {\n        (function () {\n          var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n          var _loop2 = function _loop2(prop) {\n            var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false\n\n            tokenizer[prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n\n              var ret = pack.tokenizer[prop].apply(tokenizer, args);\n\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.tokenizer) {\n            _loop2(prop);\n          }\n\n          opts.tokenizer = tokenizer;\n        })();\n      } // ==-- Parse WalkTokens extensions --== //\n\n\n      if (pack.walkTokens) {\n        var _walkTokens = marked.defaults.walkTokens;\n\n        opts.walkTokens = function (token) {\n          var values = [];\n          values.push(pack.walkTokens.call(this, token));\n\n          if (_walkTokens) {\n            values = values.concat(_walkTokens.call(this, token));\n          }\n\n          return values;\n        };\n      }\n\n      if (hasExtensions) {\n        opts.extensions = extensions;\n      }\n\n      marked.setOptions(opts);\n    });\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    var values = [];\n\n    var _loop3 = function _loop3() {\n      var token = _step.value;\n      values = values.concat(callback.call(marked, token));\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              values = values.concat(marked.walkTokens(cell.tokens, callback));\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                values = values.concat(marked.walkTokens(_cell.tokens, callback));\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            values = values.concat(marked.walkTokens(token.items, callback));\n            break;\n          }\n\n        default:\n          {\n            if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n              // Walk any extensions\n              marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                values = values.concat(marked.walkTokens(token[childTokens], callback));\n              });\n            } else if (token.tokens) {\n              values = values.concat(marked.walkTokens(token.tokens, callback));\n            }\n          }\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      _loop3();\n    }\n\n    return values;\n  };\n  /**\n   * Parse Inline\n   * @param {string} src\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var options = marked.options;\n  var setOptions = marked.setOptions;\n  var use = marked.use;\n  var walkTokens = marked.walkTokens;\n  var parseInline = marked.parseInline;\n  var parse = marked;\n  var parser = Parser.parse;\n  var lexer = Lexer.lex;\n\n  exports.Lexer = Lexer;\n  exports.Parser = Parser;\n  exports.Renderer = Renderer;\n  exports.Slugger = Slugger;\n  exports.TextRenderer = TextRenderer;\n  exports.Tokenizer = Tokenizer;\n  exports.getDefaults = getDefaults;\n  exports.lexer = lexer;\n  exports.marked = marked;\n  exports.options = options;\n  exports.parse = parse;\n  exports.parseInline = parseInline;\n  exports.parser = parser;\n  exports.setOptions = setOptions;\n  exports.use = use;\n  exports.walkTokens = walkTokens;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n}));\n\n// ESM-uncomment-begin\n})();\nexport var Lexer = (__marked_exports.Lexer || exports.Lexer);\nexport var Parser = (__marked_exports.Parser || exports.Parser);\nexport var Renderer = (__marked_exports.Renderer || exports.Renderer);\nexport var Slugger = (__marked_exports.Slugger || exports.Slugger);\nexport var TextRenderer = (__marked_exports.TextRenderer || exports.TextRenderer);\nexport var Tokenizer = (__marked_exports.Tokenizer || exports.Tokenizer);\nexport var getDefaults = (__marked_exports.getDefaults || exports.getDefaults);\nexport var lexer = (__marked_exports.lexer || exports.lexer);\nexport var marked = (__marked_exports.marked || exports.marked);\nexport var options = (__marked_exports.options || exports.options);\nexport var parse = (__marked_exports.parse || exports.parse);\nexport var parseInline = (__marked_exports.parseInline || exports.parseInline);\nexport var parser = (__marked_exports.parser || exports.parser);\nexport var setOptions = (__marked_exports.setOptions || exports.setOptions);\nexport var use = (__marked_exports.use || exports.use);\nexport var walkTokens = (__marked_exports.walkTokens || exports.walkTokens);\n// ESM-uncomment-end\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { VSBuffer } from './buffer.js';\nimport { URI } from './uri.js';\nexport function stringify(obj) {\n    return JSON.stringify(obj, replacer);\n}\nexport function parse(text) {\n    let data = JSON.parse(text);\n    data = revive(data);\n    return data;\n}\nfunction replacer(key, value) {\n    // URI is done via toJSON-member\n    if (value instanceof RegExp) {\n        return {\n            $mid: 2 /* MarshalledId.Regexp */,\n            source: value.source,\n            flags: value.flags,\n        };\n    }\n    return value;\n}\nexport function revive(obj, depth = 0) {\n    if (!obj || depth > 200) {\n        return obj;\n    }\n    if (typeof obj === 'object') {\n        switch (obj.$mid) {\n            case 1 /* MarshalledId.Uri */: return URI.revive(obj);\n            case 2 /* MarshalledId.Regexp */: return new RegExp(obj.source, obj.flags);\n            case 17 /* MarshalledId.Date */: return new Date(obj.source);\n        }\n        if (obj instanceof VSBuffer\n            || obj instanceof Uint8Array) {\n            return obj;\n        }\n        if (Array.isArray(obj)) {\n            for (let i = 0; i < obj.length; ++i) {\n                obj[i] = revive(obj[i], depth + 1);\n            }\n        }\n        else {\n            // walk object\n            for (const key in obj) {\n                if (Object.hasOwnProperty.call(obj, key)) {\n                    obj[key] = revive(obj[key], depth + 1);\n                }\n            }\n        }\n    }\n    return obj;\n}\n","export const Mimes = Object.freeze({\n    text: 'text/plain',\n    binary: 'application/octet-stream',\n    unknown: 'application/unknown',\n    markdown: 'text/markdown',\n    latex: 'text/latex',\n    uriList: 'text/uri-list',\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as errors from './errors.js';\nimport * as platform from './platform.js';\nimport { URI } from './uri.js';\nexport var Schemas;\n(function (Schemas) {\n    /**\n     * A schema that is used for models that exist in memory\n     * only and that have no correspondence on a server or such.\n     */\n    Schemas.inMemory = 'inmemory';\n    /**\n     * A schema that is used for setting files\n     */\n    Schemas.vscode = 'vscode';\n    /**\n     * A schema that is used for internal private files\n     */\n    Schemas.internal = 'private';\n    /**\n     * A walk-through document.\n     */\n    Schemas.walkThrough = 'walkThrough';\n    /**\n     * An embedded code snippet.\n     */\n    Schemas.walkThroughSnippet = 'walkThroughSnippet';\n    Schemas.http = 'http';\n    Schemas.https = 'https';\n    Schemas.file = 'file';\n    Schemas.mailto = 'mailto';\n    Schemas.untitled = 'untitled';\n    Schemas.data = 'data';\n    Schemas.command = 'command';\n    Schemas.vscodeRemote = 'vscode-remote';\n    Schemas.vscodeRemoteResource = 'vscode-remote-resource';\n    Schemas.vscodeManagedRemoteResource = 'vscode-managed-remote-resource';\n    Schemas.vscodeUserData = 'vscode-userdata';\n    Schemas.vscodeCustomEditor = 'vscode-custom-editor';\n    Schemas.vscodeNotebookCell = 'vscode-notebook-cell';\n    Schemas.vscodeNotebookCellMetadata = 'vscode-notebook-cell-metadata';\n    Schemas.vscodeNotebookCellOutput = 'vscode-notebook-cell-output';\n    Schemas.vscodeInteractiveInput = 'vscode-interactive-input';\n    Schemas.vscodeSettings = 'vscode-settings';\n    Schemas.vscodeWorkspaceTrust = 'vscode-workspace-trust';\n    Schemas.vscodeTerminal = 'vscode-terminal';\n    Schemas.vscodeChatSesssion = 'vscode-chat-editor';\n    /**\n     * Scheme used internally for webviews that aren't linked to a resource (i.e. not custom editors)\n     */\n    Schemas.webviewPanel = 'webview-panel';\n    /**\n     * Scheme used for loading the wrapper html and script in webviews.\n     */\n    Schemas.vscodeWebview = 'vscode-webview';\n    /**\n     * Scheme used for extension pages\n     */\n    Schemas.extension = 'extension';\n    /**\n     * Scheme used as a replacement of `file` scheme to load\n     * files with our custom protocol handler (desktop only).\n     */\n    Schemas.vscodeFileResource = 'vscode-file';\n    /**\n     * Scheme used for temporary resources\n     */\n    Schemas.tmp = 'tmp';\n    /**\n     * Scheme used vs live share\n     */\n    Schemas.vsls = 'vsls';\n    /**\n     * Scheme used for the Source Control commit input's text document\n     */\n    Schemas.vscodeSourceControl = 'vscode-scm';\n})(Schemas || (Schemas = {}));\nexport const connectionTokenQueryName = 'tkn';\nclass RemoteAuthoritiesImpl {\n    constructor() {\n        this._hosts = Object.create(null);\n        this._ports = Object.create(null);\n        this._connectionTokens = Object.create(null);\n        this._preferredWebSchema = 'http';\n        this._delegate = null;\n        this._remoteResourcesPath = `/${Schemas.vscodeRemoteResource}`;\n    }\n    setPreferredWebSchema(schema) {\n        this._preferredWebSchema = schema;\n    }\n    rewrite(uri) {\n        if (this._delegate) {\n            try {\n                return this._delegate(uri);\n            }\n            catch (err) {\n                errors.onUnexpectedError(err);\n                return uri;\n            }\n        }\n        const authority = uri.authority;\n        let host = this._hosts[authority];\n        if (host && host.indexOf(':') !== -1 && host.indexOf('[') === -1) {\n            host = `[${host}]`;\n        }\n        const port = this._ports[authority];\n        const connectionToken = this._connectionTokens[authority];\n        let query = `path=${encodeURIComponent(uri.path)}`;\n        if (typeof connectionToken === 'string') {\n            query += `&${connectionTokenQueryName}=${encodeURIComponent(connectionToken)}`;\n        }\n        return URI.from({\n            scheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\n            authority: `${host}:${port}`,\n            path: this._remoteResourcesPath,\n            query\n        });\n    }\n}\nexport const RemoteAuthorities = new RemoteAuthoritiesImpl();\nclass FileAccessImpl {\n    /**\n     * Returns a URI to use in contexts where the browser is responsible\n     * for loading (e.g. fetch()) or when used within the DOM.\n     *\n     * **Note:** use `dom.ts#asCSSUrl` whenever the URL is to be used in CSS context.\n     */\n    uriToBrowserUri(uri) {\n        // Handle remote URIs via `RemoteAuthorities`\n        if (uri.scheme === Schemas.vscodeRemote) {\n            return RemoteAuthorities.rewrite(uri);\n        }\n        // Convert to `vscode-file` resource..\n        if (\n        // ...only ever for `file` resources\n        uri.scheme === Schemas.file &&\n            (\n            // ...and we run in native environments\n            platform.isNative ||\n                // ...or web worker extensions on desktop\n                (platform.isWebWorker && platform.globals.origin === `${Schemas.vscodeFileResource}://${FileAccessImpl.FALLBACK_AUTHORITY}`))) {\n            return uri.with({\n                scheme: Schemas.vscodeFileResource,\n                // We need to provide an authority here so that it can serve\n                // as origin for network and loading matters in chromium.\n                // If the URI is not coming with an authority already, we\n                // add our own\n                authority: uri.authority || FileAccessImpl.FALLBACK_AUTHORITY,\n                query: null,\n                fragment: null\n            });\n        }\n        return uri;\n    }\n}\nFileAccessImpl.FALLBACK_AUTHORITY = 'vscode-app';\nexport const FileAccess = new FileAccessImpl();\nexport var COI;\n(function (COI) {\n    const coiHeaders = new Map([\n        ['1', { 'Cross-Origin-Opener-Policy': 'same-origin' }],\n        ['2', { 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n        ['3', { 'Cross-Origin-Opener-Policy': 'same-origin', 'Cross-Origin-Embedder-Policy': 'require-corp' }],\n    ]);\n    COI.CoopAndCoep = Object.freeze(coiHeaders.get('3'));\n    const coiSearchParamName = 'vscode-coi';\n    /**\n     * Extract desired headers from `vscode-coi` invocation\n     */\n    function getHeadersFromQuery(url) {\n        let params;\n        if (typeof url === 'string') {\n            params = new URL(url).searchParams;\n        }\n        else if (url instanceof URL) {\n            params = url.searchParams;\n        }\n        else if (URI.isUri(url)) {\n            params = new URL(url.toString(true)).searchParams;\n        }\n        const value = params === null || params === void 0 ? void 0 : params.get(coiSearchParamName);\n        if (!value) {\n            return undefined;\n        }\n        return coiHeaders.get(value);\n    }\n    COI.getHeadersFromQuery = getHeadersFromQuery;\n    /**\n     * Add the `vscode-coi` query attribute based on wanting `COOP` and `COEP`. Will be a noop when `crossOriginIsolated`\n     * isn't enabled the current context\n     */\n    function addSearchParam(urlOrSearch, coop, coep) {\n        if (!globalThis.crossOriginIsolated) {\n            // depends on the current context being COI\n            return;\n        }\n        const value = coop && coep ? '3' : coep ? '2' : '1';\n        if (urlOrSearch instanceof URLSearchParams) {\n            urlOrSearch.set(coiSearchParamName, value);\n        }\n        else {\n            urlOrSearch[coiSearchParamName] = value;\n        }\n    }\n    COI.addSearchParam = addSearchParam;\n})(COI || (COI = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function clamp(value, min, max) {\n    return Math.min(Math.max(value, min), max);\n}\nexport class MovingAverage {\n    constructor() {\n        this._n = 1;\n        this._val = 0;\n    }\n    update(value) {\n        this._val = this._val + (value - this._val) / this._n;\n        this._n += 1;\n        return this._val;\n    }\n    get value() {\n        return this._val;\n    }\n}\nexport class SlidingWindowAverage {\n    constructor(size) {\n        this._n = 0;\n        this._val = 0;\n        this._values = [];\n        this._index = 0;\n        this._sum = 0;\n        this._values = new Array(size);\n        this._values.fill(0, 0, size);\n    }\n    update(value) {\n        const oldValue = this._values[this._index];\n        this._values[this._index] = value;\n        this._index = (this._index + 1) % this._values.length;\n        this._sum -= oldValue;\n        this._sum += value;\n        if (this._n < this._values.length) {\n            this._n += 1;\n        }\n        this._val = this._sum / this._n;\n        return this._val;\n    }\n    get value() {\n        return this._val;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { isTypedArray, isObject, isUndefinedOrNull } from './types.js';\nexport function deepClone(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    if (obj instanceof RegExp) {\n        return obj;\n    }\n    const result = Array.isArray(obj) ? [] : {};\n    Object.entries(obj).forEach(([key, value]) => {\n        result[key] = value && typeof value === 'object' ? deepClone(value) : value;\n    });\n    return result;\n}\nexport function deepFreeze(obj) {\n    if (!obj || typeof obj !== 'object') {\n        return obj;\n    }\n    const stack = [obj];\n    while (stack.length > 0) {\n        const obj = stack.shift();\n        Object.freeze(obj);\n        for (const key in obj) {\n            if (_hasOwnProperty.call(obj, key)) {\n                const prop = obj[key];\n                if (typeof prop === 'object' && !Object.isFrozen(prop) && !isTypedArray(prop)) {\n                    stack.push(prop);\n                }\n            }\n        }\n    }\n    return obj;\n}\nconst _hasOwnProperty = Object.prototype.hasOwnProperty;\nexport function cloneAndChange(obj, changer) {\n    return _cloneAndChange(obj, changer, new Set());\n}\nfunction _cloneAndChange(obj, changer, seen) {\n    if (isUndefinedOrNull(obj)) {\n        return obj;\n    }\n    const changed = changer(obj);\n    if (typeof changed !== 'undefined') {\n        return changed;\n    }\n    if (Array.isArray(obj)) {\n        const r1 = [];\n        for (const e of obj) {\n            r1.push(_cloneAndChange(e, changer, seen));\n        }\n        return r1;\n    }\n    if (isObject(obj)) {\n        if (seen.has(obj)) {\n            throw new Error('Cannot clone recursive data-structure');\n        }\n        seen.add(obj);\n        const r2 = {};\n        for (const i2 in obj) {\n            if (_hasOwnProperty.call(obj, i2)) {\n                r2[i2] = _cloneAndChange(obj[i2], changer, seen);\n            }\n        }\n        seen.delete(obj);\n        return r2;\n    }\n    return obj;\n}\n/**\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\n */\nexport function mixin(destination, source, overwrite = true) {\n    if (!isObject(destination)) {\n        return source;\n    }\n    if (isObject(source)) {\n        Object.keys(source).forEach(key => {\n            if (key in destination) {\n                if (overwrite) {\n                    if (isObject(destination[key]) && isObject(source[key])) {\n                        mixin(destination[key], source[key], overwrite);\n                    }\n                    else {\n                        destination[key] = source[key];\n                    }\n                }\n            }\n            else {\n                destination[key] = source[key];\n            }\n        });\n    }\n    return destination;\n}\nexport function equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    let i;\n    let key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        const oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        const otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function getAllPropertyNames(obj) {\n    let res = [];\n    while (Object.prototype !== obj) {\n        res = res.concat(Object.getOwnPropertyNames(obj));\n        obj = Object.getPrototypeOf(obj);\n    }\n    return res;\n}\nexport function getAllMethodNames(obj) {\n    const methods = [];\n    for (const prop of getAllPropertyNames(obj)) {\n        if (typeof obj[prop] === 'function') {\n            methods.push(prop);\n        }\n    }\n    return methods;\n}\nexport function createProxyObject(methodNames, invoke) {\n    const createProxyMethod = (method) => {\n        return function () {\n            const args = Array.prototype.slice.call(arguments, 0);\n            return invoke(method, args);\n        };\n    };\n    const result = {};\n    for (const methodName of methodNames) {\n        result[methodName] = createProxyMethod(methodName);\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nlet globalObservableLogger;\nexport function setLogger(logger) {\n    globalObservableLogger = logger;\n}\nexport function getLogger() {\n    return globalObservableLogger;\n}\nexport class ConsoleObservableLogger {\n    constructor() {\n        this.indentation = 0;\n        this.changedObservablesSets = new WeakMap();\n    }\n    textToConsoleArgs(text) {\n        return consoleTextToArgs([\n            normalText(repeat('|  ', this.indentation)),\n            text,\n        ]);\n    }\n    formatInfo(info) {\n        if (!info.hadValue) {\n            return [\n                normalText(` `),\n                styled(formatValue(info.newValue, 60), {\n                    color: 'green',\n                }),\n                normalText(` (initial)`),\n            ];\n        }\n        return info.didChange\n            ? [\n                normalText(` `),\n                styled(formatValue(info.oldValue, 70), {\n                    color: 'red',\n                    strikeThrough: true,\n                }),\n                normalText(` `),\n                styled(formatValue(info.newValue, 60), {\n                    color: 'green',\n                }),\n            ]\n            : [normalText(` (unchanged)`)];\n    }\n    handleObservableChanged(observable, info) {\n        console.log(...this.textToConsoleArgs([\n            formatKind('observable value changed'),\n            styled(observable.debugName, { color: 'BlueViolet' }),\n            ...this.formatInfo(info),\n        ]));\n    }\n    formatChanges(changes) {\n        if (changes.size === 0) {\n            return undefined;\n        }\n        return styled(' (changed deps: ' +\n            [...changes].map((o) => o.debugName).join(', ') +\n            ')', { color: 'gray' });\n    }\n    handleDerivedCreated(derived) {\n        const existingHandleChange = derived.handleChange;\n        this.changedObservablesSets.set(derived, new Set());\n        derived.handleChange = (observable, change) => {\n            this.changedObservablesSets.get(derived).add(observable);\n            return existingHandleChange.apply(derived, [observable, change]);\n        };\n    }\n    handleDerivedRecomputed(derived, info) {\n        const changedObservables = this.changedObservablesSets.get(derived);\n        console.log(...this.textToConsoleArgs([\n            formatKind('derived recomputed'),\n            styled(derived.debugName, { color: 'BlueViolet' }),\n            ...this.formatInfo(info),\n            this.formatChanges(changedObservables),\n            { data: [{ fn: derived._computeFn }] }\n        ]));\n        changedObservables.clear();\n    }\n    handleFromEventObservableTriggered(observable, info) {\n        console.log(...this.textToConsoleArgs([\n            formatKind('observable from event triggered'),\n            styled(observable.debugName, { color: 'BlueViolet' }),\n            ...this.formatInfo(info),\n            { data: [{ fn: observable._getValue }] }\n        ]));\n    }\n    handleAutorunCreated(autorun) {\n        const existingHandleChange = autorun.handleChange;\n        this.changedObservablesSets.set(autorun, new Set());\n        autorun.handleChange = (observable, change) => {\n            this.changedObservablesSets.get(autorun).add(observable);\n            return existingHandleChange.apply(autorun, [observable, change]);\n        };\n    }\n    handleAutorunTriggered(autorun) {\n        const changedObservables = this.changedObservablesSets.get(autorun);\n        console.log(...this.textToConsoleArgs([\n            formatKind('autorun'),\n            styled(autorun.debugName, { color: 'BlueViolet' }),\n            this.formatChanges(changedObservables),\n            { data: [{ fn: autorun._runFn }] }\n        ]));\n        changedObservables.clear();\n        this.indentation++;\n    }\n    handleAutorunFinished(autorun) {\n        this.indentation--;\n    }\n    handleBeginTransaction(transaction) {\n        let transactionName = transaction.getDebugName();\n        if (transactionName === undefined) {\n            transactionName = '';\n        }\n        console.log(...this.textToConsoleArgs([\n            formatKind('transaction'),\n            styled(transactionName, { color: 'BlueViolet' }),\n            { data: [{ fn: transaction._fn }] }\n        ]));\n        this.indentation++;\n    }\n    handleEndTransaction() {\n        this.indentation--;\n    }\n}\nfunction consoleTextToArgs(text) {\n    const styles = new Array();\n    const data = [];\n    let firstArg = '';\n    function process(t) {\n        if ('length' in t) {\n            for (const item of t) {\n                if (item) {\n                    process(item);\n                }\n            }\n        }\n        else if ('text' in t) {\n            firstArg += `%c${t.text}`;\n            styles.push(t.style);\n            if (t.data) {\n                data.push(...t.data);\n            }\n        }\n        else if ('data' in t) {\n            data.push(...t.data);\n        }\n    }\n    process(text);\n    const result = [firstArg, ...styles];\n    result.push(...data);\n    return result;\n}\nfunction normalText(text) {\n    return styled(text, { color: 'black' });\n}\nfunction formatKind(kind) {\n    return styled(padStr(`${kind}: `, 10), { color: 'black', bold: true });\n}\nfunction styled(text, options = {\n    color: 'black',\n}) {\n    function objToCss(styleObj) {\n        return Object.entries(styleObj).reduce((styleString, [propName, propValue]) => {\n            return `${styleString}${propName}:${propValue};`;\n        }, '');\n    }\n    const style = {\n        color: options.color,\n    };\n    if (options.strikeThrough) {\n        style['text-decoration'] = 'line-through';\n    }\n    if (options.bold) {\n        style['font-weight'] = 'bold';\n    }\n    return {\n        text,\n        style: objToCss(style),\n    };\n}\nfunction formatValue(value, availableLen) {\n    switch (typeof value) {\n        case 'number':\n            return '' + value;\n        case 'string':\n            if (value.length + 2 <= availableLen) {\n                return `\"${value}\"`;\n            }\n            return `\"${value.substr(0, availableLen - 7)}\"+...`;\n        case 'boolean':\n            return value ? 'true' : 'false';\n        case 'undefined':\n            return 'undefined';\n        case 'object':\n            if (value === null) {\n                return 'null';\n            }\n            if (Array.isArray(value)) {\n                return formatArray(value, availableLen);\n            }\n            return formatObject(value, availableLen);\n        case 'symbol':\n            return value.toString();\n        case 'function':\n            return `[[Function${value.name ? ' ' + value.name : ''}]]`;\n        default:\n            return '' + value;\n    }\n}\nfunction formatArray(value, availableLen) {\n    let result = '[ ';\n    let first = true;\n    for (const val of value) {\n        if (!first) {\n            result += ', ';\n        }\n        if (result.length - 5 > availableLen) {\n            result += '...';\n            break;\n        }\n        first = false;\n        result += `${formatValue(val, availableLen - result.length)}`;\n    }\n    result += ' ]';\n    return result;\n}\nfunction formatObject(value, availableLen) {\n    let result = '{ ';\n    let first = true;\n    for (const [key, val] of Object.entries(value)) {\n        if (!first) {\n            result += ', ';\n        }\n        if (result.length - 5 > availableLen) {\n            result += '...';\n            break;\n        }\n        first = false;\n        result += `${key}: ${formatValue(val, availableLen - result.length)}`;\n    }\n    result += ' }';\n    return result;\n}\nfunction repeat(str, count) {\n    let result = '';\n    for (let i = 1; i <= count; i++) {\n        result += str;\n    }\n    return result;\n}\nfunction padStr(str, length) {\n    while (str.length < length) {\n        str += ' ';\n    }\n    return str;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getLogger } from './logging.js';\nlet _derived;\n/**\n * @internal\n * This is to allow splitting files.\n*/\nexport function _setDerivedOpts(derived) {\n    _derived = derived;\n}\nexport class ConvenientObservable {\n    get TChange() { return null; }\n    reportChanges() {\n        this.get();\n    }\n    /** @sealed */\n    read(reader) {\n        if (reader) {\n            return reader.readObservable(this);\n        }\n        else {\n            return this.get();\n        }\n    }\n    map(fnOrOwner, fnOrUndefined) {\n        const owner = fnOrUndefined === undefined ? undefined : fnOrOwner;\n        const fn = fnOrUndefined === undefined ? fnOrOwner : fnOrUndefined;\n        return _derived({\n            owner,\n            debugName: () => {\n                const name = getFunctionName(fn);\n                if (name !== undefined) {\n                    return name;\n                }\n                // regexp to match `x => x.y` where x and y can be arbitrary identifiers (uses backref):\n                const regexp = /^\\s*\\(?\\s*([a-zA-Z_$][a-zA-Z_$0-9]*)\\s*\\)?\\s*=>\\s*\\1\\.([a-zA-Z_$][a-zA-Z_$0-9]*)\\s*$/;\n                const match = regexp.exec(fn.toString());\n                if (match) {\n                    return `${this.debugName}.${match[2]}`;\n                }\n                if (!owner) {\n                    return `${this.debugName} (mapped)`;\n                }\n                return undefined;\n            },\n        }, (reader) => fn(this.read(reader), reader));\n    }\n}\nexport class BaseObservable extends ConvenientObservable {\n    constructor() {\n        super(...arguments);\n        this.observers = new Set();\n    }\n    addObserver(observer) {\n        const len = this.observers.size;\n        this.observers.add(observer);\n        if (len === 0) {\n            this.onFirstObserverAdded();\n        }\n    }\n    removeObserver(observer) {\n        const deleted = this.observers.delete(observer);\n        if (deleted && this.observers.size === 0) {\n            this.onLastObserverRemoved();\n        }\n    }\n    onFirstObserverAdded() { }\n    onLastObserverRemoved() { }\n}\nexport function transaction(fn, getDebugName) {\n    const tx = new TransactionImpl(fn, getDebugName);\n    try {\n        fn(tx);\n    }\n    finally {\n        tx.finish();\n    }\n}\nexport function subtransaction(tx, fn, getDebugName) {\n    if (!tx) {\n        transaction(fn, getDebugName);\n    }\n    else {\n        fn(tx);\n    }\n}\nexport class TransactionImpl {\n    constructor(_fn, _getDebugName) {\n        var _a;\n        this._fn = _fn;\n        this._getDebugName = _getDebugName;\n        this.updatingObservers = [];\n        (_a = getLogger()) === null || _a === void 0 ? void 0 : _a.handleBeginTransaction(this);\n    }\n    getDebugName() {\n        if (this._getDebugName) {\n            return this._getDebugName();\n        }\n        return getFunctionName(this._fn);\n    }\n    updateObserver(observer, observable) {\n        this.updatingObservers.push({ observer, observable });\n        observer.beginUpdate(observable);\n    }\n    finish() {\n        var _a;\n        const updatingObservers = this.updatingObservers;\n        // Prevent anyone from updating observers from now on.\n        this.updatingObservers = null;\n        for (const { observer, observable } of updatingObservers) {\n            observer.endUpdate(observable);\n        }\n        (_a = getLogger()) === null || _a === void 0 ? void 0 : _a.handleEndTransaction();\n    }\n}\nexport function getDebugName(debugNameFn, fn, owner, self) {\n    let result;\n    if (debugNameFn !== undefined) {\n        if (typeof debugNameFn === 'function') {\n            result = debugNameFn();\n            if (result !== undefined) {\n                return result;\n            }\n        }\n        else {\n            return debugNameFn;\n        }\n    }\n    if (fn !== undefined) {\n        result = getFunctionName(fn);\n        if (result !== undefined) {\n            return result;\n        }\n    }\n    if (owner !== undefined) {\n        for (const key in owner) {\n            if (owner[key] === self) {\n                return key;\n            }\n        }\n    }\n    return undefined;\n}\nexport function getFunctionName(fn) {\n    const fnSrc = fn.toString();\n    // Pattern: /** @description ... */\n    const regexp = /\\/\\*\\*\\s*@description\\s*([^*]*)\\*\\//;\n    const match = regexp.exec(fnSrc);\n    const result = match ? match[1] : undefined;\n    return result === null || result === void 0 ? void 0 : result.trim();\n}\nexport function observableValue(nameOrOwner, initialValue) {\n    if (typeof nameOrOwner === 'string') {\n        return new ObservableValue(undefined, nameOrOwner, initialValue);\n    }\n    else {\n        return new ObservableValue(nameOrOwner, undefined, initialValue);\n    }\n}\nexport class ObservableValue extends BaseObservable {\n    get debugName() {\n        var _a;\n        return (_a = getDebugName(this._debugName, undefined, this._owner, this)) !== null && _a !== void 0 ? _a : 'ObservableValue';\n    }\n    constructor(_owner, _debugName, initialValue) {\n        super();\n        this._owner = _owner;\n        this._debugName = _debugName;\n        this._value = initialValue;\n    }\n    get() {\n        return this._value;\n    }\n    set(value, tx, change) {\n        var _a;\n        if (this._value === value) {\n            return;\n        }\n        let _tx;\n        if (!tx) {\n            tx = _tx = new TransactionImpl(() => { }, () => `Setting ${this.debugName}`);\n        }\n        try {\n            const oldValue = this._value;\n            this._setValue(value);\n            (_a = getLogger()) === null || _a === void 0 ? void 0 : _a.handleObservableChanged(this, { oldValue, newValue: value, change, didChange: true, hadValue: true });\n            for (const observer of this.observers) {\n                tx.updateObserver(observer, this);\n                observer.handleChange(this, change);\n            }\n        }\n        finally {\n            if (_tx) {\n                _tx.finish();\n            }\n        }\n    }\n    toString() {\n        return `${this.debugName}: ${this._value}`;\n    }\n    _setValue(newValue) {\n        this._value = newValue;\n    }\n}\nexport function disposableObservableValue(nameOrOwner, initialValue) {\n    if (typeof nameOrOwner === 'string') {\n        return new DisposableObservableValue(undefined, nameOrOwner, initialValue);\n    }\n    else {\n        return new DisposableObservableValue(nameOrOwner, undefined, initialValue);\n    }\n}\nexport class DisposableObservableValue extends ObservableValue {\n    _setValue(newValue) {\n        if (this._value === newValue) {\n            return;\n        }\n        if (this._value) {\n            this._value.dispose();\n        }\n        this._value = newValue;\n    }\n    dispose() {\n        var _a;\n        (_a = this._value) === null || _a === void 0 ? void 0 : _a.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { BugIndicatingError } from '../errors.js';\nimport { DisposableStore } from '../lifecycle.js';\nimport { BaseObservable, _setDerivedOpts, getFunctionName, getDebugName } from './base.js';\nimport { getLogger } from './logging.js';\nconst defaultEqualityComparer = (a, b) => a === b;\nexport function derived(computeFnOrOwner, computeFn) {\n    if (computeFn !== undefined) {\n        return new Derived(computeFnOrOwner, undefined, computeFn, undefined, undefined, undefined, defaultEqualityComparer);\n    }\n    return new Derived(undefined, undefined, computeFnOrOwner, undefined, undefined, undefined, defaultEqualityComparer);\n}\nexport function derivedOpts(options, computeFn) {\n    var _a;\n    return new Derived(options.owner, options.debugName, computeFn, undefined, undefined, undefined, (_a = options.equalityComparer) !== null && _a !== void 0 ? _a : defaultEqualityComparer);\n}\nexport function derivedHandleChanges(options, computeFn) {\n    var _a;\n    return new Derived(options.owner, options.debugName, computeFn, options.createEmptyChangeSummary, options.handleChange, undefined, (_a = options.equalityComparer) !== null && _a !== void 0 ? _a : defaultEqualityComparer);\n}\nexport function derivedWithStore(computeFnOrOwner, computeFnOrUndefined) {\n    let computeFn;\n    let owner;\n    if (computeFnOrUndefined === undefined) {\n        computeFn = computeFnOrOwner;\n        owner = undefined;\n    }\n    else {\n        owner = computeFnOrOwner;\n        computeFn = computeFnOrUndefined;\n    }\n    const store = new DisposableStore();\n    return new Derived(owner, (() => { var _a; return (_a = getFunctionName(computeFn)) !== null && _a !== void 0 ? _a : '(anonymous)'; }), r => {\n        store.clear();\n        return computeFn(r, store);\n    }, undefined, undefined, () => store.dispose(), defaultEqualityComparer);\n}\n_setDerivedOpts(derived);\nexport class Derived extends BaseObservable {\n    get debugName() {\n        var _a;\n        return (_a = getDebugName(this._debugName, this._computeFn, this._owner, this)) !== null && _a !== void 0 ? _a : '(anonymous)';\n    }\n    constructor(_owner, _debugName, _computeFn, createChangeSummary, _handleChange, _handleLastObserverRemoved = undefined, _equalityComparator) {\n        var _a, _b;\n        super();\n        this._owner = _owner;\n        this._debugName = _debugName;\n        this._computeFn = _computeFn;\n        this.createChangeSummary = createChangeSummary;\n        this._handleChange = _handleChange;\n        this._handleLastObserverRemoved = _handleLastObserverRemoved;\n        this._equalityComparator = _equalityComparator;\n        this.state = 0 /* DerivedState.initial */;\n        this.value = undefined;\n        this.updateCount = 0;\n        this.dependencies = new Set();\n        this.dependenciesToBeRemoved = new Set();\n        this.changeSummary = undefined;\n        this.changeSummary = (_a = this.createChangeSummary) === null || _a === void 0 ? void 0 : _a.call(this);\n        (_b = getLogger()) === null || _b === void 0 ? void 0 : _b.handleDerivedCreated(this);\n    }\n    onLastObserverRemoved() {\n        var _a;\n        /**\n         * We are not tracking changes anymore, thus we have to assume\n         * that our cache is invalid.\n         */\n        this.state = 0 /* DerivedState.initial */;\n        this.value = undefined;\n        for (const d of this.dependencies) {\n            d.removeObserver(this);\n        }\n        this.dependencies.clear();\n        (_a = this._handleLastObserverRemoved) === null || _a === void 0 ? void 0 : _a.call(this);\n    }\n    get() {\n        var _a;\n        if (this.observers.size === 0) {\n            // Without observers, we don't know when to clean up stuff.\n            // Thus, we don't cache anything to prevent memory leaks.\n            const result = this._computeFn(this, (_a = this.createChangeSummary) === null || _a === void 0 ? void 0 : _a.call(this));\n            // Clear new dependencies\n            this.onLastObserverRemoved();\n            return result;\n        }\n        else {\n            do {\n                // We might not get a notification for a dependency that changed while it is updating,\n                // thus we also have to ask all our depedencies if they changed in this case.\n                if (this.state === 1 /* DerivedState.dependenciesMightHaveChanged */) {\n                    for (const d of this.dependencies) {\n                        /** might call {@link handleChange} indirectly, which could make us stale */\n                        d.reportChanges();\n                        if (this.state === 2 /* DerivedState.stale */) {\n                            // The other dependencies will refresh on demand, so early break\n                            break;\n                        }\n                    }\n                }\n                // We called report changes of all dependencies.\n                // If we are still not stale, we can assume to be up to date again.\n                if (this.state === 1 /* DerivedState.dependenciesMightHaveChanged */) {\n                    this.state = 3 /* DerivedState.upToDate */;\n                }\n                this._recomputeIfNeeded();\n                // In case recomputation changed one of our dependencies, we need to recompute again.\n            } while (this.state !== 3 /* DerivedState.upToDate */);\n            return this.value;\n        }\n    }\n    _recomputeIfNeeded() {\n        var _a, _b;\n        if (this.state === 3 /* DerivedState.upToDate */) {\n            return;\n        }\n        const emptySet = this.dependenciesToBeRemoved;\n        this.dependenciesToBeRemoved = this.dependencies;\n        this.dependencies = emptySet;\n        const hadValue = this.state !== 0 /* DerivedState.initial */;\n        const oldValue = this.value;\n        this.state = 3 /* DerivedState.upToDate */;\n        const changeSummary = this.changeSummary;\n        this.changeSummary = (_a = this.createChangeSummary) === null || _a === void 0 ? void 0 : _a.call(this);\n        try {\n            /** might call {@link handleChange} indirectly, which could invalidate us */\n            this.value = this._computeFn(this, changeSummary);\n        }\n        finally {\n            // We don't want our observed observables to think that they are (not even temporarily) not being observed.\n            // Thus, we only unsubscribe from observables that are definitely not read anymore.\n            for (const o of this.dependenciesToBeRemoved) {\n                o.removeObserver(this);\n            }\n            this.dependenciesToBeRemoved.clear();\n        }\n        const didChange = hadValue && !(this._equalityComparator(oldValue, this.value));\n        (_b = getLogger()) === null || _b === void 0 ? void 0 : _b.handleDerivedRecomputed(this, {\n            oldValue,\n            newValue: this.value,\n            change: undefined,\n            didChange,\n            hadValue,\n        });\n        if (didChange) {\n            for (const r of this.observers) {\n                r.handleChange(this, undefined);\n            }\n        }\n    }\n    toString() {\n        return `LazyDerived<${this.debugName}>`;\n    }\n    // IObserver Implementation\n    beginUpdate(_observable) {\n        this.updateCount++;\n        const propagateBeginUpdate = this.updateCount === 1;\n        if (this.state === 3 /* DerivedState.upToDate */) {\n            this.state = 1 /* DerivedState.dependenciesMightHaveChanged */;\n            // If we propagate begin update, that will already signal a possible change.\n            if (!propagateBeginUpdate) {\n                for (const r of this.observers) {\n                    r.handlePossibleChange(this);\n                }\n            }\n        }\n        if (propagateBeginUpdate) {\n            for (const r of this.observers) {\n                r.beginUpdate(this); // This signals a possible change\n            }\n        }\n    }\n    endUpdate(_observable) {\n        this.updateCount--;\n        if (this.updateCount === 0) {\n            // End update could change the observer list.\n            const observers = [...this.observers];\n            for (const r of observers) {\n                r.endUpdate(this);\n            }\n        }\n        if (this.updateCount < 0) {\n            throw new BugIndicatingError();\n        }\n    }\n    handlePossibleChange(observable) {\n        // In all other states, observers already know that we might have changed.\n        if (this.state === 3 /* DerivedState.upToDate */ && this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n            this.state = 1 /* DerivedState.dependenciesMightHaveChanged */;\n            for (const r of this.observers) {\n                r.handlePossibleChange(this);\n            }\n        }\n    }\n    handleChange(observable, change) {\n        if (this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n            const shouldReact = this._handleChange ? this._handleChange({\n                changedObservable: observable,\n                change,\n                didChange: o => o === observable,\n            }, this.changeSummary) : true;\n            const wasUpToDate = this.state === 3 /* DerivedState.upToDate */;\n            if (shouldReact && (this.state === 1 /* DerivedState.dependenciesMightHaveChanged */ || wasUpToDate)) {\n                this.state = 2 /* DerivedState.stale */;\n                if (wasUpToDate) {\n                    for (const r of this.observers) {\n                        r.handlePossibleChange(this);\n                    }\n                }\n            }\n        }\n    }\n    // IReader Implementation\n    readObservable(observable) {\n        // Subscribe before getting the value to enable caching\n        observable.addObserver(this);\n        /** This might call {@link handleChange} indirectly, which could invalidate us */\n        const value = observable.get();\n        // Which is why we only add the observable to the dependencies now.\n        this.dependencies.add(observable);\n        this.dependenciesToBeRemoved.delete(observable);\n        return value;\n    }\n    addObserver(observer) {\n        const shouldCallBeginUpdate = !this.observers.has(observer) && this.updateCount > 0;\n        super.addObserver(observer);\n        if (shouldCallBeginUpdate) {\n            observer.beginUpdate(this);\n        }\n    }\n    removeObserver(observer) {\n        const shouldCallEndUpdate = this.observers.has(observer) && this.updateCount > 0;\n        super.removeObserver(observer);\n        if (shouldCallEndUpdate) {\n            // Calling end update after removing the observer makes sure endUpdate cannot be called twice here.\n            observer.endUpdate(this);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { assertFn } from '../assert.js';\nimport { DisposableStore, markAsDisposed, toDisposable, trackDisposable } from '../lifecycle.js';\nimport { getFunctionName } from './base.js';\nimport { getLogger } from './logging.js';\nexport function autorunOpts(options, fn) {\n    return new AutorunObserver(options.debugName, fn, undefined, undefined);\n}\nexport function autorun(fn) {\n    return new AutorunObserver(undefined, fn, undefined, undefined);\n}\nexport function autorunHandleChanges(options, fn) {\n    return new AutorunObserver(options.debugName, fn, options.createEmptyChangeSummary, options.handleChange);\n}\nexport function autorunWithStore(fn) {\n    const store = new DisposableStore();\n    const disposable = autorunOpts({\n        debugName: () => getFunctionName(fn) || '(anonymous)',\n    }, reader => {\n        store.clear();\n        fn(reader, store);\n    });\n    return toDisposable(() => {\n        disposable.dispose();\n        store.dispose();\n    });\n}\nexport class AutorunObserver {\n    get debugName() {\n        if (typeof this._debugName === 'string') {\n            return this._debugName;\n        }\n        if (typeof this._debugName === 'function') {\n            const name = this._debugName();\n            if (name !== undefined) {\n                return name;\n            }\n        }\n        const name = getFunctionName(this._runFn);\n        if (name !== undefined) {\n            return name;\n        }\n        return '(anonymous)';\n    }\n    constructor(_debugName, _runFn, createChangeSummary, _handleChange) {\n        var _a, _b;\n        this._debugName = _debugName;\n        this._runFn = _runFn;\n        this.createChangeSummary = createChangeSummary;\n        this._handleChange = _handleChange;\n        this.state = 2 /* AutorunState.stale */;\n        this.updateCount = 0;\n        this.disposed = false;\n        this.dependencies = new Set();\n        this.dependenciesToBeRemoved = new Set();\n        this.changeSummary = (_a = this.createChangeSummary) === null || _a === void 0 ? void 0 : _a.call(this);\n        (_b = getLogger()) === null || _b === void 0 ? void 0 : _b.handleAutorunCreated(this);\n        this._runIfNeeded();\n        trackDisposable(this);\n    }\n    dispose() {\n        this.disposed = true;\n        for (const o of this.dependencies) {\n            o.removeObserver(this);\n        }\n        this.dependencies.clear();\n        markAsDisposed(this);\n    }\n    _runIfNeeded() {\n        var _a, _b, _c;\n        if (this.state === 3 /* AutorunState.upToDate */) {\n            return;\n        }\n        const emptySet = this.dependenciesToBeRemoved;\n        this.dependenciesToBeRemoved = this.dependencies;\n        this.dependencies = emptySet;\n        this.state = 3 /* AutorunState.upToDate */;\n        try {\n            if (!this.disposed) {\n                (_a = getLogger()) === null || _a === void 0 ? void 0 : _a.handleAutorunTriggered(this);\n                const changeSummary = this.changeSummary;\n                this.changeSummary = (_b = this.createChangeSummary) === null || _b === void 0 ? void 0 : _b.call(this);\n                this._runFn(this, changeSummary);\n            }\n        }\n        finally {\n            (_c = getLogger()) === null || _c === void 0 ? void 0 : _c.handleAutorunFinished(this);\n            // We don't want our observed observables to think that they are (not even temporarily) not being observed.\n            // Thus, we only unsubscribe from observables that are definitely not read anymore.\n            for (const o of this.dependenciesToBeRemoved) {\n                o.removeObserver(this);\n            }\n            this.dependenciesToBeRemoved.clear();\n        }\n    }\n    toString() {\n        return `Autorun<${this.debugName}>`;\n    }\n    // IObserver implementation\n    beginUpdate() {\n        if (this.state === 3 /* AutorunState.upToDate */) {\n            this.state = 1 /* AutorunState.dependenciesMightHaveChanged */;\n        }\n        this.updateCount++;\n    }\n    endUpdate() {\n        if (this.updateCount === 1) {\n            do {\n                if (this.state === 1 /* AutorunState.dependenciesMightHaveChanged */) {\n                    this.state = 3 /* AutorunState.upToDate */;\n                    for (const d of this.dependencies) {\n                        d.reportChanges();\n                        if (this.state === 2 /* AutorunState.stale */) {\n                            // The other dependencies will refresh on demand\n                            break;\n                        }\n                    }\n                }\n                this._runIfNeeded();\n            } while (this.state !== 3 /* AutorunState.upToDate */);\n        }\n        this.updateCount--;\n        assertFn(() => this.updateCount >= 0);\n    }\n    handlePossibleChange(observable) {\n        if (this.state === 3 /* AutorunState.upToDate */ && this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n            this.state = 1 /* AutorunState.dependenciesMightHaveChanged */;\n        }\n    }\n    handleChange(observable, change) {\n        if (this.dependencies.has(observable) && !this.dependenciesToBeRemoved.has(observable)) {\n            const shouldReact = this._handleChange ? this._handleChange({\n                changedObservable: observable,\n                change,\n                didChange: o => o === observable,\n            }, this.changeSummary) : true;\n            if (shouldReact) {\n                this.state = 2 /* AutorunState.stale */;\n            }\n        }\n    }\n    // IReader implementation\n    readObservable(observable) {\n        // In case the run action disposes the autorun\n        if (this.disposed) {\n            return observable.get();\n        }\n        observable.addObserver(this);\n        const value = observable.get();\n        this.dependencies.add(observable);\n        this.dependenciesToBeRemoved.delete(observable);\n        return value;\n    }\n}\n(function (autorun) {\n    autorun.Observer = AutorunObserver;\n})(autorun || (autorun = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { toDisposable } from '../lifecycle.js';\nimport { autorun } from './autorun.js';\nimport { BaseObservable, ConvenientObservable, getDebugName, getFunctionName, transaction } from './base.js';\nimport { getLogger } from './logging.js';\n/**\n * Represents an efficient observable whose value never changes.\n */\nexport function constObservable(value) {\n    return new ConstObservable(value);\n}\nclass ConstObservable extends ConvenientObservable {\n    constructor(value) {\n        super();\n        this.value = value;\n    }\n    get debugName() {\n        return this.toString();\n    }\n    get() {\n        return this.value;\n    }\n    addObserver(observer) {\n        // NO OP\n    }\n    removeObserver(observer) {\n        // NO OP\n    }\n    toString() {\n        return `Const: ${this.value}`;\n    }\n}\nexport function waitForState(observable, predicate) {\n    return new Promise(resolve => {\n        let didRun = false;\n        let shouldDispose = false;\n        const d = autorun(reader => {\n            /** @description waitForState */\n            const currentState = observable.read(reader);\n            if (predicate(currentState)) {\n                if (!didRun) {\n                    shouldDispose = true;\n                }\n                else {\n                    d.dispose();\n                }\n                resolve(currentState);\n            }\n        });\n        didRun = true;\n        if (shouldDispose) {\n            d.dispose();\n        }\n    });\n}\nexport function observableFromEvent(event, getValue) {\n    return new FromEventObservable(event, getValue);\n}\nexport class FromEventObservable extends BaseObservable {\n    constructor(event, _getValue) {\n        super();\n        this.event = event;\n        this._getValue = _getValue;\n        this.hasValue = false;\n        this.handleEvent = (args) => {\n            var _a;\n            const newValue = this._getValue(args);\n            const didChange = !this.hasValue || this.value !== newValue;\n            (_a = getLogger()) === null || _a === void 0 ? void 0 : _a.handleFromEventObservableTriggered(this, { oldValue: this.value, newValue, change: undefined, didChange, hadValue: this.hasValue });\n            if (didChange) {\n                this.value = newValue;\n                if (this.hasValue) {\n                    transaction((tx) => {\n                        for (const o of this.observers) {\n                            tx.updateObserver(o, this);\n                            o.handleChange(this, undefined);\n                        }\n                    }, () => {\n                        const name = this.getDebugName();\n                        return 'Event fired' + (name ? `: ${name}` : '');\n                    });\n                }\n                this.hasValue = true;\n            }\n        };\n    }\n    getDebugName() {\n        return getFunctionName(this._getValue);\n    }\n    get debugName() {\n        const name = this.getDebugName();\n        return 'From Event' + (name ? `: ${name}` : '');\n    }\n    onFirstObserverAdded() {\n        this.subscription = this.event(this.handleEvent);\n    }\n    onLastObserverRemoved() {\n        this.subscription.dispose();\n        this.subscription = undefined;\n        this.hasValue = false;\n        this.value = undefined;\n    }\n    get() {\n        if (this.subscription) {\n            if (!this.hasValue) {\n                this.handleEvent(undefined);\n            }\n            return this.value;\n        }\n        else {\n            // no cache, as there are no subscribers to keep it updated\n            return this._getValue(undefined);\n        }\n    }\n}\n(function (observableFromEvent) {\n    observableFromEvent.Observer = FromEventObservable;\n})(observableFromEvent || (observableFromEvent = {}));\nexport function observableSignalFromEvent(debugName, event) {\n    return new FromEventObservableSignal(debugName, event);\n}\nclass FromEventObservableSignal extends BaseObservable {\n    constructor(debugName, event) {\n        super();\n        this.debugName = debugName;\n        this.event = event;\n        this.handleEvent = () => {\n            transaction((tx) => {\n                for (const o of this.observers) {\n                    tx.updateObserver(o, this);\n                    o.handleChange(this, undefined);\n                }\n            }, () => this.debugName);\n        };\n    }\n    onFirstObserverAdded() {\n        this.subscription = this.event(this.handleEvent);\n    }\n    onLastObserverRemoved() {\n        this.subscription.dispose();\n        this.subscription = undefined;\n    }\n    get() {\n        // NO OP\n    }\n}\nexport function observableSignal(debugNameOrOwner) {\n    if (typeof debugNameOrOwner === 'string') {\n        return new ObservableSignal(debugNameOrOwner);\n    }\n    else {\n        return new ObservableSignal(undefined, debugNameOrOwner);\n    }\n}\nclass ObservableSignal extends BaseObservable {\n    get debugName() {\n        var _a;\n        return (_a = getDebugName(this._debugName, undefined, this._owner, this)) !== null && _a !== void 0 ? _a : 'Observable Signal';\n    }\n    constructor(_debugName, _owner) {\n        super();\n        this._debugName = _debugName;\n        this._owner = _owner;\n    }\n    trigger(tx, change) {\n        if (!tx) {\n            transaction(tx => {\n                this.trigger(tx, change);\n            }, () => `Trigger signal ${this.debugName}`);\n            return;\n        }\n        for (const o of this.observers) {\n            tx.updateObserver(o, this);\n            o.handleChange(this, change);\n        }\n    }\n    get() {\n        // NO OP\n    }\n}\n/**\n * This converts the given observable into an autorun.\n */\nexport function recomputeInitiallyAndOnChange(observable) {\n    const o = new KeepAliveObserver(true);\n    observable.addObserver(o);\n    observable.reportChanges();\n    return toDisposable(() => {\n        observable.removeObserver(o);\n    });\n}\nclass KeepAliveObserver {\n    constructor(forceRecompute) {\n        this.forceRecompute = forceRecompute;\n        this.counter = 0;\n    }\n    beginUpdate(observable) {\n        this.counter++;\n    }\n    endUpdate(observable) {\n        this.counter--;\n        if (this.counter === 0 && this.forceRecompute) {\n            observable.reportChanges();\n        }\n    }\n    handlePossibleChange(observable) {\n        // NO OP\n    }\n    handleChange(observable, change) {\n        // NO OP\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\n// Copied from: https://github.com/nodejs/node/blob/v16.14.2/lib/path.js\n/**\n * Copyright Joyent, Inc. and other Node contributors.\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to permit\n * persons to whom the Software is furnished to do so, subject to the\n * following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\nimport * as process from './process.js';\nconst CHAR_UPPERCASE_A = 65; /* A */\nconst CHAR_LOWERCASE_A = 97; /* a */\nconst CHAR_UPPERCASE_Z = 90; /* Z */\nconst CHAR_LOWERCASE_Z = 122; /* z */\nconst CHAR_DOT = 46; /* . */\nconst CHAR_FORWARD_SLASH = 47; /* / */\nconst CHAR_BACKWARD_SLASH = 92; /* \\ */\nconst CHAR_COLON = 58; /* : */\nconst CHAR_QUESTION_MARK = 63; /* ? */\nclass ErrorInvalidArgType extends Error {\n    constructor(name, expected, actual) {\n        // determiner: 'must be' or 'must not be'\n        let determiner;\n        if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\n            determiner = 'must not be';\n            expected = expected.replace(/^not /, '');\n        }\n        else {\n            determiner = 'must be';\n        }\n        const type = name.indexOf('.') !== -1 ? 'property' : 'argument';\n        let msg = `The \"${name}\" ${type} ${determiner} of type ${expected}`;\n        msg += `. Received type ${typeof actual}`;\n        super(msg);\n        this.code = 'ERR_INVALID_ARG_TYPE';\n    }\n}\nfunction validateObject(pathObject, name) {\n    if (pathObject === null || typeof pathObject !== 'object') {\n        throw new ErrorInvalidArgType(name, 'Object', pathObject);\n    }\n}\nfunction validateString(value, name) {\n    if (typeof value !== 'string') {\n        throw new ErrorInvalidArgType(name, 'string', value);\n    }\n}\nconst platformIsWin32 = (process.platform === 'win32');\nfunction isPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\n}\nfunction isPosixPathSeparator(code) {\n    return code === CHAR_FORWARD_SLASH;\n}\nfunction isWindowsDeviceRoot(code) {\n    return (code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z) ||\n        (code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z);\n}\n// Resolves . and .. elements in a path with directory names\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\n    let res = '';\n    let lastSegmentLength = 0;\n    let lastSlash = -1;\n    let dots = 0;\n    let code = 0;\n    for (let i = 0; i <= path.length; ++i) {\n        if (i < path.length) {\n            code = path.charCodeAt(i);\n        }\n        else if (isPathSeparator(code)) {\n            break;\n        }\n        else {\n            code = CHAR_FORWARD_SLASH;\n        }\n        if (isPathSeparator(code)) {\n            if (lastSlash === i - 1 || dots === 1) {\n                // NOOP\n            }\n            else if (dots === 2) {\n                if (res.length < 2 || lastSegmentLength !== 2 ||\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\n                    if (res.length > 2) {\n                        const lastSlashIndex = res.lastIndexOf(separator);\n                        if (lastSlashIndex === -1) {\n                            res = '';\n                            lastSegmentLength = 0;\n                        }\n                        else {\n                            res = res.slice(0, lastSlashIndex);\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\n                        }\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                    else if (res.length !== 0) {\n                        res = '';\n                        lastSegmentLength = 0;\n                        lastSlash = i;\n                        dots = 0;\n                        continue;\n                    }\n                }\n                if (allowAboveRoot) {\n                    res += res.length > 0 ? `${separator}..` : '..';\n                    lastSegmentLength = 2;\n                }\n            }\n            else {\n                if (res.length > 0) {\n                    res += `${separator}${path.slice(lastSlash + 1, i)}`;\n                }\n                else {\n                    res = path.slice(lastSlash + 1, i);\n                }\n                lastSegmentLength = i - lastSlash - 1;\n            }\n            lastSlash = i;\n            dots = 0;\n        }\n        else if (code === CHAR_DOT && dots !== -1) {\n            ++dots;\n        }\n        else {\n            dots = -1;\n        }\n    }\n    return res;\n}\nfunction _format(sep, pathObject) {\n    validateObject(pathObject, 'pathObject');\n    const dir = pathObject.dir || pathObject.root;\n    const base = pathObject.base ||\n        `${pathObject.name || ''}${pathObject.ext || ''}`;\n    if (!dir) {\n        return base;\n    }\n    return dir === pathObject.root ? `${dir}${base}` : `${dir}${sep}${base}`;\n}\nexport const win32 = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedDevice = '';\n        let resolvedTail = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1; i--) {\n            let path;\n            if (i >= 0) {\n                path = pathSegments[i];\n                validateString(path, 'path');\n                // Skip empty entries\n                if (path.length === 0) {\n                    continue;\n                }\n            }\n            else if (resolvedDevice.length === 0) {\n                path = process.cwd();\n            }\n            else {\n                // Windows has the concept of drive-specific current working\n                // directories. If we've resolved a drive letter but not yet an\n                // absolute path, get cwd for that drive, or the process cwd if\n                // the drive cwd is not available. We're sure the device is not\n                // a UNC path at this points, because UNC paths are always absolute.\n                path = process.env[`=${resolvedDevice}`] || process.cwd();\n                // Verify that a cwd was found and that it actually points\n                // to our drive. If not, default to the drive's root.\n                if (path === undefined ||\n                    (path.slice(0, 2).toLowerCase() !== resolvedDevice.toLowerCase() &&\n                        path.charCodeAt(2) === CHAR_BACKWARD_SLASH)) {\n                    path = `${resolvedDevice}\\\\`;\n                }\n            }\n            const len = path.length;\n            let rootEnd = 0;\n            let device = '';\n            let isAbsolute = false;\n            const code = path.charCodeAt(0);\n            // Try to match a root\n            if (len === 1) {\n                if (isPathSeparator(code)) {\n                    // `path` contains just a path separator\n                    rootEnd = 1;\n                    isAbsolute = true;\n                }\n            }\n            else if (isPathSeparator(code)) {\n                // Possible UNC root\n                // If we started with a separator, we know we at least have an\n                // absolute path of some kind (UNC or otherwise)\n                isAbsolute = true;\n                if (isPathSeparator(path.charCodeAt(1))) {\n                    // Matched double path separator at beginning\n                    let j = 2;\n                    let last = j;\n                    // Match 1 or more non-path separators\n                    while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        const firstPart = path.slice(last, j);\n                        // Matched!\n                        last = j;\n                        // Match 1 or more path separators\n                        while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j < len && j !== last) {\n                            // Matched!\n                            last = j;\n                            // Match 1 or more non-path separators\n                            while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                                j++;\n                            }\n                            if (j === len || j !== last) {\n                                // We matched a UNC root\n                                device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                                rootEnd = j;\n                            }\n                        }\n                    }\n                }\n                else {\n                    rootEnd = 1;\n                }\n            }\n            else if (isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON) {\n                // Possible device root\n                device = path.slice(0, 2);\n                rootEnd = 2;\n                if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                    // Treat separator following drive name as an absolute path\n                    // indicator\n                    isAbsolute = true;\n                    rootEnd = 3;\n                }\n            }\n            if (device.length > 0) {\n                if (resolvedDevice.length > 0) {\n                    if (device.toLowerCase() !== resolvedDevice.toLowerCase()) {\n                        // This path points to another device so it is not applicable\n                        continue;\n                    }\n                }\n                else {\n                    resolvedDevice = device;\n                }\n            }\n            if (resolvedAbsolute) {\n                if (resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n            else {\n                resolvedTail = `${path.slice(rootEnd)}\\\\${resolvedTail}`;\n                resolvedAbsolute = isAbsolute;\n                if (isAbsolute && resolvedDevice.length > 0) {\n                    break;\n                }\n            }\n        }\n        // At this point the path should be resolved to a full absolute path,\n        // but handle relative paths to be safe (might happen when process.cwd()\n        // fails)\n        // Normalize the tail path\n        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\n        return resolvedAbsolute ?\n            `${resolvedDevice}\\\\${resolvedTail}` :\n            `${resolvedDevice}${resolvedTail}` || '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = 0;\n        let device;\n        let isAbsolute = false;\n        const code = path.charCodeAt(0);\n        // Try to match a root\n        if (len === 1) {\n            // `path` contains just a single char, exit early to avoid\n            // unnecessary work\n            return isPosixPathSeparator(code) ? '\\\\' : path;\n        }\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            // If we started with a separator, we know we at least have an absolute\n            // path of some kind (UNC or otherwise)\n            isAbsolute = true;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    const firstPart = path.slice(last, j);\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            // Return the normalized version of the UNC root since there\n                            // is nothing left to process\n                            return `\\\\\\\\${firstPart}\\\\${path.slice(last)}\\\\`;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            device = `\\\\\\\\${firstPart}\\\\${path.slice(last, j)}`;\n                            rootEnd = j;\n                        }\n                    }\n                }\n            }\n            else {\n                rootEnd = 1;\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            device = path.slice(0, 2);\n            rootEnd = 2;\n            if (len > 2 && isPathSeparator(path.charCodeAt(2))) {\n                // Treat separator following drive name as an absolute path\n                // indicator\n                isAbsolute = true;\n                rootEnd = 3;\n            }\n        }\n        let tail = rootEnd < len ?\n            normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator) :\n            '';\n        if (tail.length === 0 && !isAbsolute) {\n            tail = '.';\n        }\n        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\n            tail += '\\\\';\n        }\n        if (device === undefined) {\n            return isAbsolute ? `\\\\${tail}` : tail;\n        }\n        return isAbsolute ? `${device}\\\\${tail}` : `${device}${tail}`;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return false;\n        }\n        const code = path.charCodeAt(0);\n        return isPathSeparator(code) ||\n            // Possible device root\n            (len > 2 &&\n                isWindowsDeviceRoot(code) &&\n                path.charCodeAt(1) === CHAR_COLON &&\n                isPathSeparator(path.charCodeAt(2)));\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        let firstPart;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = firstPart = arg;\n                }\n                else {\n                    joined += `\\\\${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        // Make sure that the joined path doesn't start with two slashes, because\n        // normalize() will mistake it for a UNC path then.\n        //\n        // This step is skipped when it is very clear that the user actually\n        // intended to point at a UNC path. This is assumed when the first\n        // non-empty string arguments starts with exactly two slashes followed by\n        // at least one more non-slash character.\n        //\n        // Note that for normalize() to treat a path as a UNC path it needs to\n        // have at least 2 components, so we don't filter for that here.\n        // This means that the user can use join to construct UNC paths from\n        // a server name and a share name; for example:\n        //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\n        let needsReplace = true;\n        let slashCount = 0;\n        if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\n            ++slashCount;\n            const firstLen = firstPart.length;\n            if (firstLen > 1 && isPathSeparator(firstPart.charCodeAt(1))) {\n                ++slashCount;\n                if (firstLen > 2) {\n                    if (isPathSeparator(firstPart.charCodeAt(2))) {\n                        ++slashCount;\n                    }\n                    else {\n                        // We matched a UNC path in the first part\n                        needsReplace = false;\n                    }\n                }\n            }\n        }\n        if (needsReplace) {\n            // Find any more consecutive slashes we need to replace\n            while (slashCount < joined.length &&\n                isPathSeparator(joined.charCodeAt(slashCount))) {\n                slashCount++;\n            }\n            // Replace the slashes if needed\n            if (slashCount >= 2) {\n                joined = `\\\\${joined.slice(slashCount)}`;\n            }\n        }\n        return win32.normalize(joined);\n    },\n    // It will solve the relative path from `from` to `to`, for instance:\n    //  from = 'C:\\\\orandea\\\\test\\\\aaa'\n    //  to = 'C:\\\\orandea\\\\impl\\\\bbb'\n    // The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        const fromOrig = win32.resolve(from);\n        const toOrig = win32.resolve(to);\n        if (fromOrig === toOrig) {\n            return '';\n        }\n        from = fromOrig.toLowerCase();\n        to = toOrig.toLowerCase();\n        if (from === to) {\n            return '';\n        }\n        // Trim any leading backslashes\n        let fromStart = 0;\n        while (fromStart < from.length &&\n            from.charCodeAt(fromStart) === CHAR_BACKWARD_SLASH) {\n            fromStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let fromEnd = from.length;\n        while (fromEnd - 1 > fromStart &&\n            from.charCodeAt(fromEnd - 1) === CHAR_BACKWARD_SLASH) {\n            fromEnd--;\n        }\n        const fromLen = fromEnd - fromStart;\n        // Trim any leading backslashes\n        let toStart = 0;\n        while (toStart < to.length &&\n            to.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            toStart++;\n        }\n        // Trim trailing backslashes (applicable to UNC paths only)\n        let toEnd = to.length;\n        while (toEnd - 1 > toStart &&\n            to.charCodeAt(toEnd - 1) === CHAR_BACKWARD_SLASH) {\n            toEnd--;\n        }\n        const toLen = toEnd - toStart;\n        // Compare paths to find the longest common path from root\n        const length = fromLen < toLen ? fromLen : toLen;\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_BACKWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        // We found a mismatch before the first common path separator was seen, so\n        // return the original `to`.\n        if (i !== length) {\n            if (lastCommonSep === -1) {\n                return toOrig;\n            }\n        }\n        else {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\n                    return toOrig.slice(toStart + i + 1);\n                }\n                if (i === 2) {\n                    // We get here if `from` is the device root.\n                    // For example: from='C:\\\\'; to='C:\\\\foo'\n                    return toOrig.slice(toStart + i);\n                }\n            }\n            if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\n                    lastCommonSep = i;\n                }\n                else if (i === 2) {\n                    // We get here if `to` is the device root.\n                    // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\n                    lastCommonSep = 3;\n                }\n            }\n            if (lastCommonSep === -1) {\n                lastCommonSep = 0;\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to` and\n        // `from`\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\n                out += out.length === 0 ? '..' : '\\\\..';\n            }\n        }\n        toStart += lastCommonSep;\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts\n        if (out.length > 0) {\n            return `${out}${toOrig.slice(toStart, toEnd)}`;\n        }\n        if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\n            ++toStart;\n        }\n        return toOrig.slice(toStart, toEnd);\n    },\n    toNamespacedPath(path) {\n        // Note: this will *probably* throw somewhere.\n        if (typeof path !== 'string' || path.length === 0) {\n            return path;\n        }\n        const resolvedPath = win32.resolve(path);\n        if (resolvedPath.length <= 2) {\n            return path;\n        }\n        if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\n            // Possible UNC root\n            if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\n                const code = resolvedPath.charCodeAt(2);\n                if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\n                    // Matched non-long UNC root, convert the path to a long UNC path\n                    return `\\\\\\\\?\\\\UNC\\\\${resolvedPath.slice(2)}`;\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0)) &&\n            resolvedPath.charCodeAt(1) === CHAR_COLON &&\n            resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\n            // Matched device root, convert the path to a long UNC path\n            return `\\\\\\\\?\\\\${resolvedPath}`;\n        }\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        const len = path.length;\n        if (len === 0) {\n            return '.';\n        }\n        let rootEnd = -1;\n        let offset = 0;\n        const code = path.charCodeAt(0);\n        if (len === 1) {\n            // `path` contains just a path separator, exit early to avoid\n            // unnecessary work or a dot.\n            return isPathSeparator(code) ? path : '.';\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = offset = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            return path;\n                        }\n                        if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            // Offset by 1 to include the separator after the UNC root to\n                            // treat it as a \"normal root\" on top of a (UNC) root\n                            rootEnd = offset = j + 1;\n                        }\n                    }\n                }\n            }\n            // Possible device root\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            rootEnd = len > 2 && isPathSeparator(path.charCodeAt(2)) ? 3 : 2;\n            offset = rootEnd;\n        }\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = len - 1; i >= offset; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            if (rootEnd === -1) {\n                return '.';\n            }\n            end = rootEnd;\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            isWindowsDeviceRoot(path.charCodeAt(0)) &&\n            path.charCodeAt(1) === CHAR_COLON) {\n            start = 2;\n        }\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= start; --i) {\n                const code = path.charCodeAt(i);\n                if (isPathSeparator(code)) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= start; --i) {\n            if (isPathSeparator(path.charCodeAt(i))) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let start = 0;\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Check for a drive letter prefix so as not to mistake the following\n        // path separator as an extra separator at the end of the path that can be\n        // disregarded\n        if (path.length >= 2 &&\n            path.charCodeAt(1) === CHAR_COLON &&\n            isWindowsDeviceRoot(path.charCodeAt(0))) {\n            start = startPart = 2;\n        }\n        for (let i = path.length - 1; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '\\\\'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const len = path.length;\n        let rootEnd = 0;\n        let code = path.charCodeAt(0);\n        if (len === 1) {\n            if (isPathSeparator(code)) {\n                // `path` contains just a path separator, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            ret.base = ret.name = path;\n            return ret;\n        }\n        // Try to match a root\n        if (isPathSeparator(code)) {\n            // Possible UNC root\n            rootEnd = 1;\n            if (isPathSeparator(path.charCodeAt(1))) {\n                // Matched double path separator at beginning\n                let j = 2;\n                let last = j;\n                // Match 1 or more non-path separators\n                while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                    j++;\n                }\n                if (j < len && j !== last) {\n                    // Matched!\n                    last = j;\n                    // Match 1 or more path separators\n                    while (j < len && isPathSeparator(path.charCodeAt(j))) {\n                        j++;\n                    }\n                    if (j < len && j !== last) {\n                        // Matched!\n                        last = j;\n                        // Match 1 or more non-path separators\n                        while (j < len && !isPathSeparator(path.charCodeAt(j))) {\n                            j++;\n                        }\n                        if (j === len) {\n                            // We matched a UNC root only\n                            rootEnd = j;\n                        }\n                        else if (j !== last) {\n                            // We matched a UNC root with leftovers\n                            rootEnd = j + 1;\n                        }\n                    }\n                }\n            }\n        }\n        else if (isWindowsDeviceRoot(code) && path.charCodeAt(1) === CHAR_COLON) {\n            // Possible device root\n            if (len <= 2) {\n                // `path` contains just a drive root, exit early to avoid\n                // unnecessary work\n                ret.root = ret.dir = path;\n                return ret;\n            }\n            rootEnd = 2;\n            if (isPathSeparator(path.charCodeAt(2))) {\n                if (len === 3) {\n                    // `path` contains just a drive root, exit early to avoid\n                    // unnecessary work\n                    ret.root = ret.dir = path;\n                    return ret;\n                }\n                rootEnd = 3;\n            }\n        }\n        if (rootEnd > 0) {\n            ret.root = path.slice(0, rootEnd);\n        }\n        let startDot = -1;\n        let startPart = rootEnd;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= rootEnd; --i) {\n            code = path.charCodeAt(i);\n            if (isPathSeparator(code)) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(startPart, end);\n            }\n            else {\n                ret.name = path.slice(startPart, startDot);\n                ret.base = path.slice(startPart, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        // If the directory is the root, use the entire root as the `dir` including\n        // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\n        // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\n        if (startPart > 0 && startPart !== rootEnd) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else {\n            ret.dir = ret.root;\n        }\n        return ret;\n    },\n    sep: '\\\\',\n    delimiter: ';',\n    win32: null,\n    posix: null\n};\nconst posixCwd = (() => {\n    if (platformIsWin32) {\n        // Converts Windows' backslash path separators to POSIX forward slashes\n        // and truncates any drive indicator\n        const regexp = /\\\\/g;\n        return () => {\n            const cwd = process.cwd().replace(regexp, '/');\n            return cwd.slice(cwd.indexOf('/'));\n        };\n    }\n    // We're already on POSIX, no need for any transformations\n    return () => process.cwd();\n})();\nexport const posix = {\n    // path.resolve([from ...], to)\n    resolve(...pathSegments) {\n        let resolvedPath = '';\n        let resolvedAbsolute = false;\n        for (let i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n            const path = i >= 0 ? pathSegments[i] : posixCwd();\n            validateString(path, 'path');\n            // Skip empty entries\n            if (path.length === 0) {\n                continue;\n            }\n            resolvedPath = `${path}/${resolvedPath}`;\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        }\n        // At this point the path should be resolved to a full absolute path, but\n        // handle relative paths to be safe (might happen when process.cwd() fails)\n        // Normalize the path\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\n        if (resolvedAbsolute) {\n            return `/${resolvedPath}`;\n        }\n        return resolvedPath.length > 0 ? resolvedPath : '.';\n    },\n    normalize(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        const trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\n        // Normalize the path\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\n        if (path.length === 0) {\n            if (isAbsolute) {\n                return '/';\n            }\n            return trailingSeparator ? './' : '.';\n        }\n        if (trailingSeparator) {\n            path += '/';\n        }\n        return isAbsolute ? `/${path}` : path;\n    },\n    isAbsolute(path) {\n        validateString(path, 'path');\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n    },\n    join(...paths) {\n        if (paths.length === 0) {\n            return '.';\n        }\n        let joined;\n        for (let i = 0; i < paths.length; ++i) {\n            const arg = paths[i];\n            validateString(arg, 'path');\n            if (arg.length > 0) {\n                if (joined === undefined) {\n                    joined = arg;\n                }\n                else {\n                    joined += `/${arg}`;\n                }\n            }\n        }\n        if (joined === undefined) {\n            return '.';\n        }\n        return posix.normalize(joined);\n    },\n    relative(from, to) {\n        validateString(from, 'from');\n        validateString(to, 'to');\n        if (from === to) {\n            return '';\n        }\n        // Trim leading forward slashes.\n        from = posix.resolve(from);\n        to = posix.resolve(to);\n        if (from === to) {\n            return '';\n        }\n        const fromStart = 1;\n        const fromEnd = from.length;\n        const fromLen = fromEnd - fromStart;\n        const toStart = 1;\n        const toLen = to.length - toStart;\n        // Compare paths to find the longest common path from root\n        const length = (fromLen < toLen ? fromLen : toLen);\n        let lastCommonSep = -1;\n        let i = 0;\n        for (; i < length; i++) {\n            const fromCode = from.charCodeAt(fromStart + i);\n            if (fromCode !== to.charCodeAt(toStart + i)) {\n                break;\n            }\n            else if (fromCode === CHAR_FORWARD_SLASH) {\n                lastCommonSep = i;\n            }\n        }\n        if (i === length) {\n            if (toLen > length) {\n                if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `from` is the exact base path for `to`.\n                    // For example: from='/foo/bar'; to='/foo/bar/baz'\n                    return to.slice(toStart + i + 1);\n                }\n                if (i === 0) {\n                    // We get here if `from` is the root\n                    // For example: from='/'; to='/foo'\n                    return to.slice(toStart + i);\n                }\n            }\n            else if (fromLen > length) {\n                if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\n                    // We get here if `to` is the exact base path for `from`.\n                    // For example: from='/foo/bar/baz'; to='/foo/bar'\n                    lastCommonSep = i;\n                }\n                else if (i === 0) {\n                    // We get here if `to` is the root.\n                    // For example: from='/foo/bar'; to='/'\n                    lastCommonSep = 0;\n                }\n            }\n        }\n        let out = '';\n        // Generate the relative path based on the path difference between `to`\n        // and `from`.\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                out += out.length === 0 ? '..' : '/..';\n            }\n        }\n        // Lastly, append the rest of the destination (`to`) path that comes after\n        // the common path parts.\n        return `${out}${to.slice(toStart + lastCommonSep)}`;\n    },\n    toNamespacedPath(path) {\n        // Non-op on posix systems\n        return path;\n    },\n    dirname(path) {\n        validateString(path, 'path');\n        if (path.length === 0) {\n            return '.';\n        }\n        const hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let end = -1;\n        let matchedSlash = true;\n        for (let i = path.length - 1; i >= 1; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                if (!matchedSlash) {\n                    end = i;\n                    break;\n                }\n            }\n            else {\n                // We saw the first non-path separator\n                matchedSlash = false;\n            }\n        }\n        if (end === -1) {\n            return hasRoot ? '/' : '.';\n        }\n        if (hasRoot && end === 1) {\n            return '//';\n        }\n        return path.slice(0, end);\n    },\n    basename(path, ext) {\n        if (ext !== undefined) {\n            validateString(ext, 'ext');\n        }\n        validateString(path, 'path');\n        let start = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i;\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\n            if (ext === path) {\n                return '';\n            }\n            let extIdx = ext.length - 1;\n            let firstNonSlashEnd = -1;\n            for (i = path.length - 1; i >= 0; --i) {\n                const code = path.charCodeAt(i);\n                if (code === CHAR_FORWARD_SLASH) {\n                    // If we reached a path separator that was not part of a set of path\n                    // separators at the end of the string, stop now\n                    if (!matchedSlash) {\n                        start = i + 1;\n                        break;\n                    }\n                }\n                else {\n                    if (firstNonSlashEnd === -1) {\n                        // We saw the first non-path separator, remember this index in case\n                        // we need it if the extension ends up not matching\n                        matchedSlash = false;\n                        firstNonSlashEnd = i + 1;\n                    }\n                    if (extIdx >= 0) {\n                        // Try to match the explicit extension\n                        if (code === ext.charCodeAt(extIdx)) {\n                            if (--extIdx === -1) {\n                                // We matched the extension, so mark this as the end of our path\n                                // component\n                                end = i;\n                            }\n                        }\n                        else {\n                            // Extension does not match, so our result is the entire path\n                            // component\n                            extIdx = -1;\n                            end = firstNonSlashEnd;\n                        }\n                    }\n                }\n            }\n            if (start === end) {\n                end = firstNonSlashEnd;\n            }\n            else if (end === -1) {\n                end = path.length;\n            }\n            return path.slice(start, end);\n        }\n        for (i = path.length - 1; i >= 0; --i) {\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    start = i + 1;\n                    break;\n                }\n            }\n            else if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // path component\n                matchedSlash = false;\n                end = i + 1;\n            }\n        }\n        if (end === -1) {\n            return '';\n        }\n        return path.slice(start, end);\n    },\n    extname(path) {\n        validateString(path, 'path');\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        for (let i = path.length - 1; i >= 0; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (startDot === -1 ||\n            end === -1 ||\n            // We saw a non-dot character immediately before the dot\n            preDotState === 0 ||\n            // The (right-most) trimmed path component is exactly '..'\n            (preDotState === 1 &&\n                startDot === end - 1 &&\n                startDot === startPart + 1)) {\n            return '';\n        }\n        return path.slice(startDot, end);\n    },\n    format: _format.bind(null, '/'),\n    parse(path) {\n        validateString(path, 'path');\n        const ret = { root: '', dir: '', base: '', ext: '', name: '' };\n        if (path.length === 0) {\n            return ret;\n        }\n        const isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\n        let start;\n        if (isAbsolute) {\n            ret.root = '/';\n            start = 1;\n        }\n        else {\n            start = 0;\n        }\n        let startDot = -1;\n        let startPart = 0;\n        let end = -1;\n        let matchedSlash = true;\n        let i = path.length - 1;\n        // Track the state of characters (if any) we see before our first dot and\n        // after any path separator we find\n        let preDotState = 0;\n        // Get non-dir info\n        for (; i >= start; --i) {\n            const code = path.charCodeAt(i);\n            if (code === CHAR_FORWARD_SLASH) {\n                // If we reached a path separator that was not part of a set of path\n                // separators at the end of the string, stop now\n                if (!matchedSlash) {\n                    startPart = i + 1;\n                    break;\n                }\n                continue;\n            }\n            if (end === -1) {\n                // We saw the first non-path separator, mark this as the end of our\n                // extension\n                matchedSlash = false;\n                end = i + 1;\n            }\n            if (code === CHAR_DOT) {\n                // If this is our first dot, mark it as the start of our extension\n                if (startDot === -1) {\n                    startDot = i;\n                }\n                else if (preDotState !== 1) {\n                    preDotState = 1;\n                }\n            }\n            else if (startDot !== -1) {\n                // We saw a non-dot and non-path separator before our dot, so we should\n                // have a good chance at having a non-empty extension\n                preDotState = -1;\n            }\n        }\n        if (end !== -1) {\n            const start = startPart === 0 && isAbsolute ? 1 : startPart;\n            if (startDot === -1 ||\n                // We saw a non-dot character immediately before the dot\n                preDotState === 0 ||\n                // The (right-most) trimmed path component is exactly '..'\n                (preDotState === 1 &&\n                    startDot === end - 1 &&\n                    startDot === startPart + 1)) {\n                ret.base = ret.name = path.slice(start, end);\n            }\n            else {\n                ret.name = path.slice(start, startDot);\n                ret.base = path.slice(start, end);\n                ret.ext = path.slice(startDot, end);\n            }\n        }\n        if (startPart > 0) {\n            ret.dir = path.slice(0, startPart - 1);\n        }\n        else if (isAbsolute) {\n            ret.dir = '/';\n        }\n        return ret;\n    },\n    sep: '/',\n    delimiter: ':',\n    win32: null,\n    posix: null\n};\nposix.win32 = win32.win32 = win32;\nposix.posix = win32.posix = posix;\nexport const normalize = (platformIsWin32 ? win32.normalize : posix.normalize);\nexport const resolve = (platformIsWin32 ? win32.resolve : posix.resolve);\nexport const relative = (platformIsWin32 ? win32.relative : posix.relative);\nexport const dirname = (platformIsWin32 ? win32.dirname : posix.dirname);\nexport const basename = (platformIsWin32 ? win32.basename : posix.basename);\nexport const extname = (platformIsWin32 ? win32.extname : posix.extname);\nexport const sep = (platformIsWin32 ? win32.sep : posix.sep);\n","var _a;\n/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from '../../nls.js';\nexport const LANGUAGE_DEFAULT = 'en';\nlet _isWindows = false;\nlet _isMacintosh = false;\nlet _isLinux = false;\nlet _isLinuxSnap = false;\nlet _isNative = false;\nlet _isWeb = false;\nlet _isElectron = false;\nlet _isIOS = false;\nlet _isCI = false;\nlet _isMobile = false;\nlet _locale = undefined;\nlet _language = LANGUAGE_DEFAULT;\nlet _platformLocale = LANGUAGE_DEFAULT;\nlet _translationsConfigFile = undefined;\nlet _userAgent = undefined;\n/**\n * @deprecated use `globalThis` instead\n */\nexport const globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\nlet nodeProcess = undefined;\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    // Native environment (sandboxed)\n    nodeProcess = globals.vscode.process;\n}\nelse if (typeof process !== 'undefined') {\n    // Native environment (non-sandboxed)\n    nodeProcess = process;\n}\nconst isElectronProcess = typeof ((_a = nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.versions) === null || _a === void 0 ? void 0 : _a.electron) === 'string';\nconst isElectronRenderer = isElectronProcess && (nodeProcess === null || nodeProcess === void 0 ? void 0 : nodeProcess.type) === 'renderer';\n// Web environment\nif (typeof navigator === 'object' && !isElectronRenderer) {\n    _userAgent = navigator.userAgent;\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\n    _isIOS = (_userAgent.indexOf('Macintosh') >= 0 || _userAgent.indexOf('iPad') >= 0 || _userAgent.indexOf('iPhone') >= 0) && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\n    _isMobile = (_userAgent === null || _userAgent === void 0 ? void 0 : _userAgent.indexOf('Mobi')) >= 0;\n    _isWeb = true;\n    const configuredLocale = nls.getConfiguredDefaultLocale(\n    // This call _must_ be done in the file that calls `nls.getConfiguredDefaultLocale`\n    // to ensure that the NLS AMD Loader plugin has been loaded and configured.\n    // This is because the loader plugin decides what the default locale is based on\n    // how it's able to resolve the strings.\n    nls.localize({ key: 'ensureLoaderPluginIsLoaded', comment: ['{Locked}'] }, '_'));\n    _locale = configuredLocale || LANGUAGE_DEFAULT;\n    _language = _locale;\n    _platformLocale = navigator.language;\n}\n// Native environment\nelse if (typeof nodeProcess === 'object') {\n    _isWindows = (nodeProcess.platform === 'win32');\n    _isMacintosh = (nodeProcess.platform === 'darwin');\n    _isLinux = (nodeProcess.platform === 'linux');\n    _isLinuxSnap = _isLinux && !!nodeProcess.env['SNAP'] && !!nodeProcess.env['SNAP_REVISION'];\n    _isElectron = isElectronProcess;\n    _isCI = !!nodeProcess.env['CI'] || !!nodeProcess.env['BUILD_ARTIFACTSTAGINGDIRECTORY'];\n    _locale = LANGUAGE_DEFAULT;\n    _language = LANGUAGE_DEFAULT;\n    const rawNlsConfig = nodeProcess.env['VSCODE_NLS_CONFIG'];\n    if (rawNlsConfig) {\n        try {\n            const nlsConfig = JSON.parse(rawNlsConfig);\n            const resolved = nlsConfig.availableLanguages['*'];\n            _locale = nlsConfig.locale;\n            _platformLocale = nlsConfig.osLocale;\n            // VSCode's default language is 'en'\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\n        }\n        catch (e) {\n        }\n    }\n    _isNative = true;\n}\n// Unknown environment\nelse {\n    console.error('Unable to resolve platform.');\n}\nlet _platform = 0 /* Platform.Web */;\nif (_isMacintosh) {\n    _platform = 1 /* Platform.Mac */;\n}\nelse if (_isWindows) {\n    _platform = 3 /* Platform.Windows */;\n}\nelse if (_isLinux) {\n    _platform = 2 /* Platform.Linux */;\n}\nexport const isWindows = _isWindows;\nexport const isMacintosh = _isMacintosh;\nexport const isLinux = _isLinux;\nexport const isNative = _isNative;\nexport const isWeb = _isWeb;\nexport const isWebWorker = (_isWeb && typeof globals.importScripts === 'function');\nexport const isIOS = _isIOS;\nexport const isMobile = _isMobile;\nexport const userAgent = _userAgent;\n/**\n * The language used for the user interface. The format of\n * the string is all lower case (e.g. zh-tw for Traditional\n * Chinese)\n */\nexport const language = _language;\nexport const setTimeout0IsFaster = (typeof globals.postMessage === 'function' && !globals.importScripts);\n/**\n * See https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#:~:text=than%204%2C%20then-,set%20timeout%20to%204,-.\n *\n * Works similarly to `setTimeout(0)` but doesn't suffer from the 4ms artificial delay\n * that browsers set when the nesting level is > 5.\n */\nexport const setTimeout0 = (() => {\n    if (setTimeout0IsFaster) {\n        const pending = [];\n        globals.addEventListener('message', (e) => {\n            if (e.data && e.data.vscodeScheduleAsyncWork) {\n                for (let i = 0, len = pending.length; i < len; i++) {\n                    const candidate = pending[i];\n                    if (candidate.id === e.data.vscodeScheduleAsyncWork) {\n                        pending.splice(i, 1);\n                        candidate.callback();\n                        return;\n                    }\n                }\n            }\n        });\n        let lastId = 0;\n        return (callback) => {\n            const myId = ++lastId;\n            pending.push({\n                id: myId,\n                callback: callback\n            });\n            globals.postMessage({ vscodeScheduleAsyncWork: myId }, '*');\n        };\n    }\n    return (callback) => setTimeout(callback);\n})();\nexport const OS = (_isMacintosh || _isIOS ? 2 /* OperatingSystem.Macintosh */ : (_isWindows ? 1 /* OperatingSystem.Windows */ : 3 /* OperatingSystem.Linux */));\nlet _isLittleEndian = true;\nlet _isLittleEndianComputed = false;\nexport function isLittleEndian() {\n    if (!_isLittleEndianComputed) {\n        _isLittleEndianComputed = true;\n        const test = new Uint8Array(2);\n        test[0] = 1;\n        test[1] = 2;\n        const view = new Uint16Array(test.buffer);\n        _isLittleEndian = (view[0] === (2 << 8) + 1);\n    }\n    return _isLittleEndian;\n}\nexport const isChrome = !!(userAgent && userAgent.indexOf('Chrome') >= 0);\nexport const isFirefox = !!(userAgent && userAgent.indexOf('Firefox') >= 0);\nexport const isSafari = !!(!isChrome && (userAgent && userAgent.indexOf('Safari') >= 0));\nexport const isEdge = !!(userAgent && userAgent.indexOf('Edg/') >= 0);\nexport const isAndroid = !!(userAgent && userAgent.indexOf('Android') >= 0);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { globals, isMacintosh, isWindows } from './platform.js';\nlet safeProcess;\n// Native sandbox environment\nif (typeof globals.vscode !== 'undefined' && typeof globals.vscode.process !== 'undefined') {\n    const sandboxProcess = globals.vscode.process;\n    safeProcess = {\n        get platform() { return sandboxProcess.platform; },\n        get arch() { return sandboxProcess.arch; },\n        get env() { return sandboxProcess.env; },\n        cwd() { return sandboxProcess.cwd(); }\n    };\n}\n// Native node.js environment\nelse if (typeof process !== 'undefined') {\n    safeProcess = {\n        get platform() { return process.platform; },\n        get arch() { return process.arch; },\n        get env() { return process.env; },\n        cwd() { return process.env['VSCODE_CWD'] || process.cwd(); }\n    };\n}\n// Web environment\nelse {\n    safeProcess = {\n        // Supported\n        get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\n        get arch() { return undefined; /* arch is undefined in web */ },\n        // Unsupported\n        get env() { return {}; },\n        cwd() { return '/'; }\n    };\n}\n/**\n * Provides safe access to the `cwd` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `/`.\n *\n * @skipMangle\n */\nexport const cwd = safeProcess.cwd;\n/**\n * Provides safe access to the `env` property in node.js, sandboxed or web\n * environments.\n *\n * Note: in web, this property is hardcoded to be `{}`.\n */\nexport const env = safeProcess.env;\n/**\n * Provides safe access to the `platform` property in node.js, sandboxed or web\n * environments.\n */\nexport const platform = safeProcess.platform;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var Range;\n(function (Range) {\n    /**\n     * Returns the intersection between two ranges as a range itself.\n     * Returns `{ start: 0, end: 0 }` if the intersection is empty.\n     */\n    function intersect(one, other) {\n        if (one.start >= other.end || other.start >= one.end) {\n            return { start: 0, end: 0 };\n        }\n        const start = Math.max(one.start, other.start);\n        const end = Math.min(one.end, other.end);\n        if (end - start <= 0) {\n            return { start: 0, end: 0 };\n        }\n        return { start, end };\n    }\n    Range.intersect = intersect;\n    function isEmpty(range) {\n        return range.end - range.start <= 0;\n    }\n    Range.isEmpty = isEmpty;\n    function intersects(one, other) {\n        return !isEmpty(intersect(one, other));\n    }\n    Range.intersects = intersects;\n    function relativeComplement(one, other) {\n        const result = [];\n        const first = { start: one.start, end: Math.min(other.start, one.end) };\n        const second = { start: Math.max(other.end, one.start), end: one.end };\n        if (!isEmpty(first)) {\n            result.push(first);\n        }\n        if (!isEmpty(second)) {\n            result.push(second);\n        }\n        return result;\n    }\n    Range.relativeComplement = relativeComplement;\n})(Range || (Range = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as extpath from './extpath.js';\nimport { Schemas } from './network.js';\nimport * as paths from './path.js';\nimport { isLinux, isWindows } from './platform.js';\nimport { compare as strCompare, equalsIgnoreCase } from './strings.js';\nimport { URI, uriToFsPath } from './uri.js';\nexport function originalFSPath(uri) {\n    return uriToFsPath(uri, true);\n}\nexport class ExtUri {\n    constructor(_ignorePathCasing) {\n        this._ignorePathCasing = _ignorePathCasing;\n    }\n    compare(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return 0;\n        }\n        return strCompare(this.getComparisonKey(uri1, ignoreFragment), this.getComparisonKey(uri2, ignoreFragment));\n    }\n    isEqual(uri1, uri2, ignoreFragment = false) {\n        if (uri1 === uri2) {\n            return true;\n        }\n        if (!uri1 || !uri2) {\n            return false;\n        }\n        return this.getComparisonKey(uri1, ignoreFragment) === this.getComparisonKey(uri2, ignoreFragment);\n    }\n    getComparisonKey(uri, ignoreFragment = false) {\n        return uri.with({\n            path: this._ignorePathCasing(uri) ? uri.path.toLowerCase() : undefined,\n            fragment: ignoreFragment ? null : undefined\n        }).toString();\n    }\n    isEqualOrParent(base, parentCandidate, ignoreFragment = false) {\n        if (base.scheme === parentCandidate.scheme) {\n            if (base.scheme === Schemas.file) {\n                return extpath.isEqualOrParent(originalFSPath(base), originalFSPath(parentCandidate), this._ignorePathCasing(base)) && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n            if (isEqualAuthority(base.authority, parentCandidate.authority)) {\n                return extpath.isEqualOrParent(base.path, parentCandidate.path, this._ignorePathCasing(base), '/') && base.query === parentCandidate.query && (ignoreFragment || base.fragment === parentCandidate.fragment);\n            }\n        }\n        return false;\n    }\n    // --- path math\n    joinPath(resource, ...pathFragment) {\n        return URI.joinPath(resource, ...pathFragment);\n    }\n    basenameOrAuthority(resource) {\n        return basename(resource) || resource.authority;\n    }\n    basename(resource) {\n        return paths.posix.basename(resource.path);\n    }\n    extname(resource) {\n        return paths.posix.extname(resource.path);\n    }\n    dirname(resource) {\n        if (resource.path.length === 0) {\n            return resource;\n        }\n        let dirname;\n        if (resource.scheme === Schemas.file) {\n            dirname = URI.file(paths.dirname(originalFSPath(resource))).path;\n        }\n        else {\n            dirname = paths.posix.dirname(resource.path);\n            if (resource.authority && dirname.length && dirname.charCodeAt(0) !== 47 /* CharCode.Slash */) {\n                console.error(`dirname(\"${resource.toString})) resulted in a relative path`);\n                dirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\n            }\n        }\n        return resource.with({\n            path: dirname\n        });\n    }\n    normalizePath(resource) {\n        if (!resource.path.length) {\n            return resource;\n        }\n        let normalizedPath;\n        if (resource.scheme === Schemas.file) {\n            normalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\n        }\n        else {\n            normalizedPath = paths.posix.normalize(resource.path);\n        }\n        return resource.with({\n            path: normalizedPath\n        });\n    }\n    relativePath(from, to) {\n        if (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\n            return undefined;\n        }\n        if (from.scheme === Schemas.file) {\n            const relativePath = paths.relative(originalFSPath(from), originalFSPath(to));\n            return isWindows ? extpath.toSlashes(relativePath) : relativePath;\n        }\n        let fromPath = from.path || '/';\n        const toPath = to.path || '/';\n        if (this._ignorePathCasing(from)) {\n            // make casing of fromPath match toPath\n            let i = 0;\n            for (const len = Math.min(fromPath.length, toPath.length); i < len; i++) {\n                if (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\n                    if (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\n                        break;\n                    }\n                }\n            }\n            fromPath = toPath.substr(0, i) + fromPath.substr(i);\n        }\n        return paths.posix.relative(fromPath, toPath);\n    }\n    resolvePath(base, path) {\n        if (base.scheme === Schemas.file) {\n            const newURI = URI.file(paths.resolve(originalFSPath(base), path));\n            return base.with({\n                authority: newURI.authority,\n                path: newURI.path\n            });\n        }\n        path = extpath.toPosixPath(path); // we allow path to be a windows path\n        return base.with({\n            path: paths.posix.resolve(base.path, path)\n        });\n    }\n    // --- misc\n    isAbsolutePath(resource) {\n        return !!resource.path && resource.path[0] === '/';\n    }\n    isEqualAuthority(a1, a2) {\n        return a1 === a2 || (a1 !== undefined && a2 !== undefined && equalsIgnoreCase(a1, a2));\n    }\n    hasTrailingPathSeparator(resource, sep = paths.sep) {\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            return fsp.length > extpath.getRoot(fsp).length && fsp[fsp.length - 1] === sep;\n        }\n        else {\n            const p = resource.path;\n            return (p.length > 1 && p.charCodeAt(p.length - 1) === 47 /* CharCode.Slash */) && !(/^[a-zA-Z]:(\\/$|\\\\$)/.test(resource.fsPath)); // ignore the slash at offset 0\n        }\n    }\n    removeTrailingPathSeparator(resource, sep = paths.sep) {\n        // Make sure that the path isn't a drive letter. A trailing separator there is not removable.\n        if (hasTrailingPathSeparator(resource, sep)) {\n            return resource.with({ path: resource.path.substr(0, resource.path.length - 1) });\n        }\n        return resource;\n    }\n    addTrailingPathSeparator(resource, sep = paths.sep) {\n        let isRootSep = false;\n        if (resource.scheme === Schemas.file) {\n            const fsp = originalFSPath(resource);\n            isRootSep = ((fsp !== undefined) && (fsp.length === extpath.getRoot(fsp).length) && (fsp[fsp.length - 1] === sep));\n        }\n        else {\n            sep = '/';\n            const p = resource.path;\n            isRootSep = p.length === 1 && p.charCodeAt(p.length - 1) === 47 /* CharCode.Slash */;\n        }\n        if (!isRootSep && !hasTrailingPathSeparator(resource, sep)) {\n            return resource.with({ path: resource.path + '/' });\n        }\n        return resource;\n    }\n}\n/**\n * Unbiased utility that takes uris \"as they are\". This means it can be interchanged with\n * uri#toString() usages. The following is true\n * ```\n * assertEqual(aUri.toString() === bUri.toString(), exturi.isEqual(aUri, bUri))\n * ```\n */\nexport const extUri = new ExtUri(() => false);\n/**\n * BIASED utility that _mostly_ ignored the case of urs paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriBiasedIgnorePathCase = new ExtUri(uri => {\n    // A file scheme resource is in the same platform as code, so ignore case for non linux platforms\n    // Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\n    return uri.scheme === Schemas.file ? !isLinux : true;\n});\n/**\n * BIASED utility that always ignores the casing of uris paths. ONLY use this util if you\n * understand what you are doing.\n *\n * This utility is INCOMPATIBLE with `uri.toString()`-usages and both CANNOT be used interchanged.\n *\n * When dealing with uris from files or documents, `extUri` (the unbiased friend)is sufficient\n * because those uris come from a \"trustworthy source\". When creating unknown uris it's always\n * better to use `IUriIdentityService` which exposes an `IExtUri`-instance which knows when path\n * casing matters.\n */\nexport const extUriIgnorePathCase = new ExtUri(_ => true);\nexport const isEqual = extUri.isEqual.bind(extUri);\nexport const isEqualOrParent = extUri.isEqualOrParent.bind(extUri);\nexport const getComparisonKey = extUri.getComparisonKey.bind(extUri);\nexport const basenameOrAuthority = extUri.basenameOrAuthority.bind(extUri);\nexport const basename = extUri.basename.bind(extUri);\nexport const extname = extUri.extname.bind(extUri);\nexport const dirname = extUri.dirname.bind(extUri);\nexport const joinPath = extUri.joinPath.bind(extUri);\nexport const normalizePath = extUri.normalizePath.bind(extUri);\nexport const relativePath = extUri.relativePath.bind(extUri);\nexport const resolvePath = extUri.resolvePath.bind(extUri);\nexport const isAbsolutePath = extUri.isAbsolutePath.bind(extUri);\nexport const isEqualAuthority = extUri.isEqualAuthority.bind(extUri);\nexport const hasTrailingPathSeparator = extUri.hasTrailingPathSeparator.bind(extUri);\nexport const removeTrailingPathSeparator = extUri.removeTrailingPathSeparator.bind(extUri);\nexport const addTrailingPathSeparator = extUri.addTrailingPathSeparator.bind(extUri);\n/**\n * Data URI related helpers.\n */\nexport var DataUri;\n(function (DataUri) {\n    DataUri.META_DATA_LABEL = 'label';\n    DataUri.META_DATA_DESCRIPTION = 'description';\n    DataUri.META_DATA_SIZE = 'size';\n    DataUri.META_DATA_MIME = 'mime';\n    function parseMetaData(dataUri) {\n        const metadata = new Map();\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n        // the metadata is: size:2313;label:SomeLabel;description:SomeDescription\n        const meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\n        meta.split(';').forEach(property => {\n            const [key, value] = property.split(':');\n            if (key && value) {\n                metadata.set(key, value);\n            }\n        });\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\n        // the mime is: image/png\n        const mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\n        if (mime) {\n            metadata.set(DataUri.META_DATA_MIME, mime);\n        }\n        return metadata;\n    }\n    DataUri.parseMetaData = parseMetaData;\n})(DataUri || (DataUri = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from './event.js';\nimport { Disposable } from './lifecycle.js';\nexport class ScrollState {\n    constructor(_forceIntegerValues, width, scrollWidth, scrollLeft, height, scrollHeight, scrollTop) {\n        this._forceIntegerValues = _forceIntegerValues;\n        this._scrollStateBrand = undefined;\n        if (this._forceIntegerValues) {\n            width = width | 0;\n            scrollWidth = scrollWidth | 0;\n            scrollLeft = scrollLeft | 0;\n            height = height | 0;\n            scrollHeight = scrollHeight | 0;\n            scrollTop = scrollTop | 0;\n        }\n        this.rawScrollLeft = scrollLeft; // before validation\n        this.rawScrollTop = scrollTop; // before validation\n        if (width < 0) {\n            width = 0;\n        }\n        if (scrollLeft + width > scrollWidth) {\n            scrollLeft = scrollWidth - width;\n        }\n        if (scrollLeft < 0) {\n            scrollLeft = 0;\n        }\n        if (height < 0) {\n            height = 0;\n        }\n        if (scrollTop + height > scrollHeight) {\n            scrollTop = scrollHeight - height;\n        }\n        if (scrollTop < 0) {\n            scrollTop = 0;\n        }\n        this.width = width;\n        this.scrollWidth = scrollWidth;\n        this.scrollLeft = scrollLeft;\n        this.height = height;\n        this.scrollHeight = scrollHeight;\n        this.scrollTop = scrollTop;\n    }\n    equals(other) {\n        return (this.rawScrollLeft === other.rawScrollLeft\n            && this.rawScrollTop === other.rawScrollTop\n            && this.width === other.width\n            && this.scrollWidth === other.scrollWidth\n            && this.scrollLeft === other.scrollLeft\n            && this.height === other.height\n            && this.scrollHeight === other.scrollHeight\n            && this.scrollTop === other.scrollTop);\n    }\n    withScrollDimensions(update, useRawScrollPositions) {\n        return new ScrollState(this._forceIntegerValues, (typeof update.width !== 'undefined' ? update.width : this.width), (typeof update.scrollWidth !== 'undefined' ? update.scrollWidth : this.scrollWidth), useRawScrollPositions ? this.rawScrollLeft : this.scrollLeft, (typeof update.height !== 'undefined' ? update.height : this.height), (typeof update.scrollHeight !== 'undefined' ? update.scrollHeight : this.scrollHeight), useRawScrollPositions ? this.rawScrollTop : this.scrollTop);\n    }\n    withScrollPosition(update) {\n        return new ScrollState(this._forceIntegerValues, this.width, this.scrollWidth, (typeof update.scrollLeft !== 'undefined' ? update.scrollLeft : this.rawScrollLeft), this.height, this.scrollHeight, (typeof update.scrollTop !== 'undefined' ? update.scrollTop : this.rawScrollTop));\n    }\n    createScrollEvent(previous, inSmoothScrolling) {\n        const widthChanged = (this.width !== previous.width);\n        const scrollWidthChanged = (this.scrollWidth !== previous.scrollWidth);\n        const scrollLeftChanged = (this.scrollLeft !== previous.scrollLeft);\n        const heightChanged = (this.height !== previous.height);\n        const scrollHeightChanged = (this.scrollHeight !== previous.scrollHeight);\n        const scrollTopChanged = (this.scrollTop !== previous.scrollTop);\n        return {\n            inSmoothScrolling: inSmoothScrolling,\n            oldWidth: previous.width,\n            oldScrollWidth: previous.scrollWidth,\n            oldScrollLeft: previous.scrollLeft,\n            width: this.width,\n            scrollWidth: this.scrollWidth,\n            scrollLeft: this.scrollLeft,\n            oldHeight: previous.height,\n            oldScrollHeight: previous.scrollHeight,\n            oldScrollTop: previous.scrollTop,\n            height: this.height,\n            scrollHeight: this.scrollHeight,\n            scrollTop: this.scrollTop,\n            widthChanged: widthChanged,\n            scrollWidthChanged: scrollWidthChanged,\n            scrollLeftChanged: scrollLeftChanged,\n            heightChanged: heightChanged,\n            scrollHeightChanged: scrollHeightChanged,\n            scrollTopChanged: scrollTopChanged,\n        };\n    }\n}\nexport class Scrollable extends Disposable {\n    constructor(options) {\n        super();\n        this._scrollableBrand = undefined;\n        this._onScroll = this._register(new Emitter());\n        this.onScroll = this._onScroll.event;\n        this._smoothScrollDuration = options.smoothScrollDuration;\n        this._scheduleAtNextAnimationFrame = options.scheduleAtNextAnimationFrame;\n        this._state = new ScrollState(options.forceIntegerValues, 0, 0, 0, 0, 0, 0);\n        this._smoothScrolling = null;\n    }\n    dispose() {\n        if (this._smoothScrolling) {\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = null;\n        }\n        super.dispose();\n    }\n    setSmoothScrollDuration(smoothScrollDuration) {\n        this._smoothScrollDuration = smoothScrollDuration;\n    }\n    validateScrollPosition(scrollPosition) {\n        return this._state.withScrollPosition(scrollPosition);\n    }\n    getScrollDimensions() {\n        return this._state;\n    }\n    setScrollDimensions(dimensions, useRawScrollPositions) {\n        var _a;\n        const newState = this._state.withScrollDimensions(dimensions, useRawScrollPositions);\n        this._setState(newState, Boolean(this._smoothScrolling));\n        // Validate outstanding animated scroll position target\n        (_a = this._smoothScrolling) === null || _a === void 0 ? void 0 : _a.acceptScrollDimensions(this._state);\n    }\n    /**\n     * Returns the final scroll position that the instance will have once the smooth scroll animation concludes.\n     * If no scroll animation is occurring, it will return the current scroll position instead.\n     */\n    getFutureScrollPosition() {\n        if (this._smoothScrolling) {\n            return this._smoothScrolling.to;\n        }\n        return this._state;\n    }\n    /**\n     * Returns the current scroll position.\n     * Note: This result might be an intermediate scroll position, as there might be an ongoing smooth scroll animation.\n     */\n    getCurrentScrollPosition() {\n        return this._state;\n    }\n    setScrollPositionNow(update) {\n        // no smooth scrolling requested\n        const newState = this._state.withScrollPosition(update);\n        // Terminate any outstanding smooth scrolling\n        if (this._smoothScrolling) {\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = null;\n        }\n        this._setState(newState, false);\n    }\n    setScrollPositionSmooth(update, reuseAnimation) {\n        if (this._smoothScrollDuration === 0) {\n            // Smooth scrolling not supported.\n            return this.setScrollPositionNow(update);\n        }\n        if (this._smoothScrolling) {\n            // Combine our pending scrollLeft/scrollTop with incoming scrollLeft/scrollTop\n            update = {\n                scrollLeft: (typeof update.scrollLeft === 'undefined' ? this._smoothScrolling.to.scrollLeft : update.scrollLeft),\n                scrollTop: (typeof update.scrollTop === 'undefined' ? this._smoothScrolling.to.scrollTop : update.scrollTop)\n            };\n            // Validate `update`\n            const validTarget = this._state.withScrollPosition(update);\n            if (this._smoothScrolling.to.scrollLeft === validTarget.scrollLeft && this._smoothScrolling.to.scrollTop === validTarget.scrollTop) {\n                // No need to interrupt or extend the current animation since we're going to the same place\n                return;\n            }\n            let newSmoothScrolling;\n            if (reuseAnimation) {\n                newSmoothScrolling = new SmoothScrollingOperation(this._smoothScrolling.from, validTarget, this._smoothScrolling.startTime, this._smoothScrolling.duration);\n            }\n            else {\n                newSmoothScrolling = this._smoothScrolling.combine(this._state, validTarget, this._smoothScrollDuration);\n            }\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = newSmoothScrolling;\n        }\n        else {\n            // Validate `update`\n            const validTarget = this._state.withScrollPosition(update);\n            this._smoothScrolling = SmoothScrollingOperation.start(this._state, validTarget, this._smoothScrollDuration);\n        }\n        // Begin smooth scrolling animation\n        this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(() => {\n            if (!this._smoothScrolling) {\n                return;\n            }\n            this._smoothScrolling.animationFrameDisposable = null;\n            this._performSmoothScrolling();\n        });\n    }\n    hasPendingScrollAnimation() {\n        return Boolean(this._smoothScrolling);\n    }\n    _performSmoothScrolling() {\n        if (!this._smoothScrolling) {\n            return;\n        }\n        const update = this._smoothScrolling.tick();\n        const newState = this._state.withScrollPosition(update);\n        this._setState(newState, true);\n        if (!this._smoothScrolling) {\n            // Looks like someone canceled the smooth scrolling\n            // from the scroll event handler\n            return;\n        }\n        if (update.isDone) {\n            this._smoothScrolling.dispose();\n            this._smoothScrolling = null;\n            return;\n        }\n        // Continue smooth scrolling animation\n        this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(() => {\n            if (!this._smoothScrolling) {\n                return;\n            }\n            this._smoothScrolling.animationFrameDisposable = null;\n            this._performSmoothScrolling();\n        });\n    }\n    _setState(newState, inSmoothScrolling) {\n        const oldState = this._state;\n        if (oldState.equals(newState)) {\n            // no change\n            return;\n        }\n        this._state = newState;\n        this._onScroll.fire(this._state.createScrollEvent(oldState, inSmoothScrolling));\n    }\n}\nexport class SmoothScrollingUpdate {\n    constructor(scrollLeft, scrollTop, isDone) {\n        this.scrollLeft = scrollLeft;\n        this.scrollTop = scrollTop;\n        this.isDone = isDone;\n    }\n}\nfunction createEaseOutCubic(from, to) {\n    const delta = to - from;\n    return function (completion) {\n        return from + delta * easeOutCubic(completion);\n    };\n}\nfunction createComposed(a, b, cut) {\n    return function (completion) {\n        if (completion < cut) {\n            return a(completion / cut);\n        }\n        return b((completion - cut) / (1 - cut));\n    };\n}\nexport class SmoothScrollingOperation {\n    constructor(from, to, startTime, duration) {\n        this.from = from;\n        this.to = to;\n        this.duration = duration;\n        this.startTime = startTime;\n        this.animationFrameDisposable = null;\n        this._initAnimations();\n    }\n    _initAnimations() {\n        this.scrollLeft = this._initAnimation(this.from.scrollLeft, this.to.scrollLeft, this.to.width);\n        this.scrollTop = this._initAnimation(this.from.scrollTop, this.to.scrollTop, this.to.height);\n    }\n    _initAnimation(from, to, viewportSize) {\n        const delta = Math.abs(from - to);\n        if (delta > 2.5 * viewportSize) {\n            let stop1, stop2;\n            if (from < to) {\n                // scroll to 75% of the viewportSize\n                stop1 = from + 0.75 * viewportSize;\n                stop2 = to - 0.75 * viewportSize;\n            }\n            else {\n                stop1 = from - 0.75 * viewportSize;\n                stop2 = to + 0.75 * viewportSize;\n            }\n            return createComposed(createEaseOutCubic(from, stop1), createEaseOutCubic(stop2, to), 0.33);\n        }\n        return createEaseOutCubic(from, to);\n    }\n    dispose() {\n        if (this.animationFrameDisposable !== null) {\n            this.animationFrameDisposable.dispose();\n            this.animationFrameDisposable = null;\n        }\n    }\n    acceptScrollDimensions(state) {\n        this.to = state.withScrollPosition(this.to);\n        this._initAnimations();\n    }\n    tick() {\n        return this._tick(Date.now());\n    }\n    _tick(now) {\n        const completion = (now - this.startTime) / this.duration;\n        if (completion < 1) {\n            const newScrollLeft = this.scrollLeft(completion);\n            const newScrollTop = this.scrollTop(completion);\n            return new SmoothScrollingUpdate(newScrollLeft, newScrollTop, false);\n        }\n        return new SmoothScrollingUpdate(this.to.scrollLeft, this.to.scrollTop, true);\n    }\n    combine(from, to, duration) {\n        return SmoothScrollingOperation.start(from, to, duration);\n    }\n    static start(from, to, duration) {\n        // +10 / -10 : pretend the animation already started for a quicker response to a scroll request\n        duration = duration + 10;\n        const startTime = Date.now() - 10;\n        return new SmoothScrollingOperation(from, to, startTime, duration);\n    }\n}\nfunction easeInCubic(t) {\n    return Math.pow(t, 3);\n}\nfunction easeOutCubic(t) {\n    return 1 - easeInCubic(1 - t);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\nexport function buildReplaceStringWithCasePreserved(matches, pattern) {\n    if (matches && (matches[0] !== '')) {\n        const containsHyphens = validateSpecificSpecialCharacter(matches, pattern, '-');\n        const containsUnderscores = validateSpecificSpecialCharacter(matches, pattern, '_');\n        if (containsHyphens && !containsUnderscores) {\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '-');\n        }\n        else if (!containsHyphens && containsUnderscores) {\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '_');\n        }\n        if (matches[0].toUpperCase() === matches[0]) {\n            return pattern.toUpperCase();\n        }\n        else if (matches[0].toLowerCase() === matches[0]) {\n            return pattern.toLowerCase();\n        }\n        else if (strings.containsUppercaseCharacter(matches[0][0]) && pattern.length > 0) {\n            return pattern[0].toUpperCase() + pattern.substr(1);\n        }\n        else if (matches[0][0].toUpperCase() !== matches[0][0] && pattern.length > 0) {\n            return pattern[0].toLowerCase() + pattern.substr(1);\n        }\n        else {\n            // we don't understand its pattern yet.\n            return pattern;\n        }\n    }\n    else {\n        return pattern;\n    }\n}\nfunction validateSpecificSpecialCharacter(matches, pattern, specialCharacter) {\n    const doesContainSpecialCharacter = matches[0].indexOf(specialCharacter) !== -1 && pattern.indexOf(specialCharacter) !== -1;\n    return doesContainSpecialCharacter && matches[0].split(specialCharacter).length === pattern.split(specialCharacter).length;\n}\nfunction buildReplaceStringForSpecificSpecialCharacter(matches, pattern, specialCharacter) {\n    const splitPatternAtSpecialCharacter = pattern.split(specialCharacter);\n    const splitMatchAtSpecialCharacter = matches[0].split(specialCharacter);\n    let replaceString = '';\n    splitPatternAtSpecialCharacter.forEach((splitValue, index) => {\n        replaceString += buildReplaceStringWithCasePreserved([splitMatchAtSpecialCharacter[index]], splitValue) + specialCharacter;\n    });\n    return replaceString.slice(0, -1);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from './strings.js';\nvar Severity;\n(function (Severity) {\n    Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\n    Severity[Severity[\"Info\"] = 1] = \"Info\";\n    Severity[Severity[\"Warning\"] = 2] = \"Warning\";\n    Severity[Severity[\"Error\"] = 3] = \"Error\";\n})(Severity || (Severity = {}));\n(function (Severity) {\n    const _error = 'error';\n    const _warning = 'warning';\n    const _warn = 'warn';\n    const _info = 'info';\n    const _ignore = 'ignore';\n    /**\n     * Parses 'error', 'warning', 'warn', 'info' in call casings\n     * and falls back to ignore.\n     */\n    function fromValue(value) {\n        if (!value) {\n            return Severity.Ignore;\n        }\n        if (strings.equalsIgnoreCase(_error, value)) {\n            return Severity.Error;\n        }\n        if (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\n            return Severity.Warning;\n        }\n        if (strings.equalsIgnoreCase(_info, value)) {\n            return Severity.Info;\n        }\n        return Severity.Ignore;\n    }\n    Severity.fromValue = fromValue;\n    function toString(severity) {\n        switch (severity) {\n            case Severity.Error: return _error;\n            case Severity.Warning: return _warning;\n            case Severity.Info: return _info;\n            default: return _ignore;\n        }\n    }\n    Severity.toString = toString;\n})(Severity || (Severity = {}));\nexport default Severity;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nconst hasPerformanceNow = (globalThis.performance && typeof globalThis.performance.now === 'function');\nexport class StopWatch {\n    static create(highResolution) {\n        return new StopWatch(highResolution);\n    }\n    constructor(highResolution) {\n        this._now = hasPerformanceNow && highResolution === false ? Date.now : globalThis.performance.now.bind(globalThis.performance);\n        this._startTime = this._now();\n        this._stopTime = -1;\n    }\n    stop() {\n        this._stopTime = this._now();\n    }\n    elapsed() {\n        if (this._stopTime !== -1) {\n            return this._stopTime - this._startTime;\n        }\n        return this._now() - this._startTime;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar _a;\nimport { LRUCachedFunction } from './cache.js';\nimport { Lazy } from './lazy.js';\nexport function isFalsyOrWhitespace(str) {\n    if (!str || typeof str !== 'string') {\n        return true;\n    }\n    return str.trim().length === 0;\n}\nconst _formatRegexp = /{(\\d+)}/g;\n/**\n * Helper to produce a string with a variable number of arguments. Insert variable segments\n * into the string using the {n} notation where N is the index of the argument following the string.\n * @param value string to which formatting is applied\n * @param args replacements for {n}-entries\n */\nexport function format(value, ...args) {\n    if (args.length === 0) {\n        return value;\n    }\n    return value.replace(_formatRegexp, function (match, group) {\n        const idx = parseInt(group, 10);\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\n            match :\n            args[idx];\n    });\n}\n/**\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\n * being used e.g. in HTMLElement.innerHTML.\n */\nexport function escape(html) {\n    return html.replace(/[<>&]/g, function (match) {\n        switch (match) {\n            case '<': return '&lt;';\n            case '>': return '&gt;';\n            case '&': return '&amp;';\n            default: return match;\n        }\n    });\n}\n/**\n * Escapes regular expression characters in a given string\n */\nexport function escapeRegExpCharacters(value) {\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\n}\n/**\n * Removes all occurrences of needle from the beginning and end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim (default is a blank)\n */\nexport function trim(haystack, needle = ' ') {\n    const trimmed = ltrim(haystack, needle);\n    return rtrim(trimmed, needle);\n}\n/**\n * Removes all occurrences of needle from the beginning of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function ltrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length;\n    if (needleLen === 0 || haystack.length === 0) {\n        return haystack;\n    }\n    let offset = 0;\n    while (haystack.indexOf(needle, offset) === offset) {\n        offset = offset + needleLen;\n    }\n    return haystack.substring(offset);\n}\n/**\n * Removes all occurrences of needle from the end of haystack.\n * @param haystack string to trim\n * @param needle the thing to trim\n */\nexport function rtrim(haystack, needle) {\n    if (!haystack || !needle) {\n        return haystack;\n    }\n    const needleLen = needle.length, haystackLen = haystack.length;\n    if (needleLen === 0 || haystackLen === 0) {\n        return haystack;\n    }\n    let offset = haystackLen, idx = -1;\n    while (true) {\n        idx = haystack.lastIndexOf(needle, offset - 1);\n        if (idx === -1 || idx + needleLen !== offset) {\n            break;\n        }\n        if (idx === 0) {\n            return '';\n        }\n        offset = idx;\n    }\n    return haystack.substring(0, offset);\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function stripWildcards(pattern) {\n    return pattern.replace(/\\*/g, '');\n}\nexport function createRegExp(searchString, isRegex, options = {}) {\n    if (!searchString) {\n        throw new Error('Cannot create regex from empty string');\n    }\n    if (!isRegex) {\n        searchString = escapeRegExpCharacters(searchString);\n    }\n    if (options.wholeWord) {\n        if (!/\\B/.test(searchString.charAt(0))) {\n            searchString = '\\\\b' + searchString;\n        }\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\n            searchString = searchString + '\\\\b';\n        }\n    }\n    let modifiers = '';\n    if (options.global) {\n        modifiers += 'g';\n    }\n    if (!options.matchCase) {\n        modifiers += 'i';\n    }\n    if (options.multiline) {\n        modifiers += 'm';\n    }\n    if (options.unicode) {\n        modifiers += 'u';\n    }\n    return new RegExp(searchString, modifiers);\n}\nexport function regExpLeadsToEndlessLoop(regexp) {\n    // Exit early if it's one of these special cases which are meant to match\n    // against an empty string\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\n        return false;\n    }\n    // We check against an empty string. If the regular expression doesn't advance\n    // (e.g. ends in an endless loop) it will match an empty string.\n    const match = regexp.exec('');\n    return !!(match && regexp.lastIndex === 0);\n}\nexport function splitLines(str) {\n    return str.split(/\\r\\n|\\r|\\n/);\n}\n/**\n * Returns first index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function firstNonWhitespaceIndex(str) {\n    for (let i = 0, len = str.length; i < len; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\n/**\n * Returns the leading whitespace of the string.\n * If the string contains only whitespaces, returns entire string\n */\nexport function getLeadingWhitespace(str, start = 0, end = str.length) {\n    for (let i = start; i < end; i++) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return str.substring(start, i);\n        }\n    }\n    return str.substring(start, end);\n}\n/**\n * Returns last index of the string that is not whitespace.\n * If string is empty or contains only whitespaces, returns -1\n */\nexport function lastNonWhitespaceIndex(str, startIndex = str.length - 1) {\n    for (let i = startIndex; i >= 0; i--) {\n        const chCode = str.charCodeAt(i);\n        if (chCode !== 32 /* CharCode.Space */ && chCode !== 9 /* CharCode.Tab */) {\n            return i;\n        }\n    }\n    return -1;\n}\nexport function compare(a, b) {\n    if (a < b) {\n        return -1;\n    }\n    else if (a > b) {\n        return 1;\n    }\n    else {\n        return 0;\n    }\n}\nexport function compareSubstring(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        const codeA = a.charCodeAt(aStart);\n        const codeB = b.charCodeAt(bStart);\n        if (codeA < codeB) {\n            return -1;\n        }\n        else if (codeA > codeB) {\n            return 1;\n        }\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function compareIgnoreCase(a, b) {\n    return compareSubstringIgnoreCase(a, b, 0, a.length, 0, b.length);\n}\nexport function compareSubstringIgnoreCase(a, b, aStart = 0, aEnd = a.length, bStart = 0, bEnd = b.length) {\n    for (; aStart < aEnd && bStart < bEnd; aStart++, bStart++) {\n        let codeA = a.charCodeAt(aStart);\n        let codeB = b.charCodeAt(bStart);\n        if (codeA === codeB) {\n            // equal\n            continue;\n        }\n        if (codeA >= 128 || codeB >= 128) {\n            // not ASCII letters -> fallback to lower-casing strings\n            return compareSubstring(a.toLowerCase(), b.toLowerCase(), aStart, aEnd, bStart, bEnd);\n        }\n        // mapper lower-case ascii letter onto upper-case varinats\n        // [97-122] (lower ascii) --> [65-90] (upper ascii)\n        if (isLowerAsciiLetter(codeA)) {\n            codeA -= 32;\n        }\n        if (isLowerAsciiLetter(codeB)) {\n            codeB -= 32;\n        }\n        // compare both code points\n        const diff = codeA - codeB;\n        if (diff === 0) {\n            continue;\n        }\n        return diff;\n    }\n    const aLen = aEnd - aStart;\n    const bLen = bEnd - bStart;\n    if (aLen < bLen) {\n        return -1;\n    }\n    else if (aLen > bLen) {\n        return 1;\n    }\n    return 0;\n}\nexport function isAsciiDigit(code) {\n    return code >= 48 /* CharCode.Digit0 */ && code <= 57 /* CharCode.Digit9 */;\n}\nexport function isLowerAsciiLetter(code) {\n    return code >= 97 /* CharCode.a */ && code <= 122 /* CharCode.z */;\n}\nexport function isUpperAsciiLetter(code) {\n    return code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */;\n}\nexport function equalsIgnoreCase(a, b) {\n    return a.length === b.length && compareSubstringIgnoreCase(a, b) === 0;\n}\nexport function startsWithIgnoreCase(str, candidate) {\n    const candidateLength = candidate.length;\n    if (candidate.length > str.length) {\n        return false;\n    }\n    return compareSubstringIgnoreCase(str, candidate, 0, candidateLength) === 0;\n}\n/**\n * @returns the length of the common prefix of the two strings.\n */\nexport function commonPrefixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * @returns the length of the common suffix of the two strings.\n */\nexport function commonSuffixLength(a, b) {\n    const len = Math.min(a.length, b.length);\n    let i;\n    const aLastIndex = a.length - 1;\n    const bLastIndex = b.length - 1;\n    for (i = 0; i < len; i++) {\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\n            return i;\n        }\n    }\n    return len;\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isHighSurrogate(charCode) {\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function isLowSurrogate(charCode) {\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\n}\n/**\n * See http://en.wikipedia.org/wiki/Surrogate_pair\n */\nexport function computeCodePoint(highSurrogate, lowSurrogate) {\n    return ((highSurrogate - 0xD800) << 10) + (lowSurrogate - 0xDC00) + 0x10000;\n}\n/**\n * get the code point that begins at offset `offset`\n */\nexport function getNextCodePoint(str, len, offset) {\n    const charCode = str.charCodeAt(offset);\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\n        const nextCharCode = str.charCodeAt(offset + 1);\n        if (isLowSurrogate(nextCharCode)) {\n            return computeCodePoint(charCode, nextCharCode);\n        }\n    }\n    return charCode;\n}\n/**\n * get the code point that ends right before offset `offset`\n */\nfunction getPrevCodePoint(str, offset) {\n    const charCode = str.charCodeAt(offset - 1);\n    if (isLowSurrogate(charCode) && offset > 1) {\n        const prevCharCode = str.charCodeAt(offset - 2);\n        if (isHighSurrogate(prevCharCode)) {\n            return computeCodePoint(prevCharCode, charCode);\n        }\n    }\n    return charCode;\n}\nexport class CodePointIterator {\n    get offset() {\n        return this._offset;\n    }\n    constructor(str, offset = 0) {\n        this._str = str;\n        this._len = str.length;\n        this._offset = offset;\n    }\n    setOffset(offset) {\n        this._offset = offset;\n    }\n    prevCodePoint() {\n        const codePoint = getPrevCodePoint(this._str, this._offset);\n        this._offset -= (codePoint >= 65536 /* Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    nextCodePoint() {\n        const codePoint = getNextCodePoint(this._str, this._len, this._offset);\n        this._offset += (codePoint >= 65536 /* Constants.UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\n        return codePoint;\n    }\n    eol() {\n        return (this._offset >= this._len);\n    }\n}\nexport class GraphemeIterator {\n    get offset() {\n        return this._iterator.offset;\n    }\n    constructor(str, offset = 0) {\n        this._iterator = new CodePointIterator(str, offset);\n    }\n    nextGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n        while (!iterator.eol()) {\n            const offset = iterator.offset;\n            const nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.nextCodePoint());\n            if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = nextGraphemeBreakType;\n        }\n        return (iterator.offset - initialOffset);\n    }\n    prevGraphemeLength() {\n        const graphemeBreakTree = GraphemeBreakTree.getInstance();\n        const iterator = this._iterator;\n        const initialOffset = iterator.offset;\n        let graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n        while (iterator.offset > 0) {\n            const offset = iterator.offset;\n            const prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(iterator.prevCodePoint());\n            if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\n                // move iterator back\n                iterator.setOffset(offset);\n                break;\n            }\n            graphemeBreakType = prevGraphemeBreakType;\n        }\n        return (initialOffset - iterator.offset);\n    }\n    eol() {\n        return this._iterator.eol();\n    }\n}\nexport function nextCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.nextGraphemeLength();\n}\nexport function prevCharLength(str, initialOffset) {\n    const iterator = new GraphemeIterator(str, initialOffset);\n    return iterator.prevGraphemeLength();\n}\nexport function getCharContainingOffset(str, offset) {\n    if (offset > 0 && isLowSurrogate(str.charCodeAt(offset))) {\n        offset--;\n    }\n    const endOffset = offset + nextCharLength(str, offset);\n    const startOffset = endOffset - prevCharLength(str, endOffset);\n    return [startOffset, endOffset];\n}\nlet CONTAINS_RTL = undefined;\nfunction makeContainsRtl() {\n    // Generated using https://github.com/alexdima/unicode-utils/blob/main/rtl-test.js\n    return /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA\\u07FE-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u088E\\u08A0-\\u08C9\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDC7\\uFDF0-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE35\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDD23\\uDE80-\\uDEA9\\uDEAD-\\uDF45\\uDF51-\\uDF81\\uDF86-\\uDFF6]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD4B-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\n}\n/**\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\n */\nexport function containsRTL(str) {\n    if (!CONTAINS_RTL) {\n        CONTAINS_RTL = makeContainsRtl();\n    }\n    return CONTAINS_RTL.test(str);\n}\nconst IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\n/**\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\n */\nexport function isBasicASCII(str) {\n    return IS_BASIC_ASCII.test(str);\n}\nexport const UNUSUAL_LINE_TERMINATORS = /[\\u2028\\u2029]/; // LINE SEPARATOR (LS) or PARAGRAPH SEPARATOR (PS)\n/**\n * Returns true if `str` contains unusual line terminators, like LS or PS\n */\nexport function containsUnusualLineTerminators(str) {\n    return UNUSUAL_LINE_TERMINATORS.test(str);\n}\nexport function isFullWidthCharacter(charCode) {\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\n    // http://jrgraphix.net/research/unicode_blocks.php\n    //          2E80 - 2EFF   CJK Radicals Supplement\n    //          2F00 - 2FDF   Kangxi Radicals\n    //          2FF0 - 2FFF   Ideographic Description Characters\n    //          3000 - 303F   CJK Symbols and Punctuation\n    //          3040 - 309F   Hiragana\n    //          30A0 - 30FF   Katakana\n    //          3100 - 312F   Bopomofo\n    //          3130 - 318F   Hangul Compatibility Jamo\n    //          3190 - 319F   Kanbun\n    //          31A0 - 31BF   Bopomofo Extended\n    //          31F0 - 31FF   Katakana Phonetic Extensions\n    //          3200 - 32FF   Enclosed CJK Letters and Months\n    //          3300 - 33FF   CJK Compatibility\n    //          3400 - 4DBF   CJK Unified Ideographs Extension A\n    //          4DC0 - 4DFF   Yijing Hexagram Symbols\n    //          4E00 - 9FFF   CJK Unified Ideographs\n    //          A000 - A48F   Yi Syllables\n    //          A490 - A4CF   Yi Radicals\n    //          AC00 - D7AF   Hangul Syllables\n    // [IGNORE] D800 - DB7F   High Surrogates\n    // [IGNORE] DB80 - DBFF   High Private Use Surrogates\n    // [IGNORE] DC00 - DFFF   Low Surrogates\n    // [IGNORE] E000 - F8FF   Private Use Area\n    //          F900 - FAFF   CJK Compatibility Ideographs\n    // [IGNORE] FB00 - FB4F   Alphabetic Presentation Forms\n    // [IGNORE] FB50 - FDFF   Arabic Presentation Forms-A\n    // [IGNORE] FE00 - FE0F   Variation Selectors\n    // [IGNORE] FE20 - FE2F   Combining Half Marks\n    // [IGNORE] FE30 - FE4F   CJK Compatibility Forms\n    // [IGNORE] FE50 - FE6F   Small Form Variants\n    // [IGNORE] FE70 - FEFF   Arabic Presentation Forms-B\n    //          FF00 - FFEF   Halfwidth and Fullwidth Forms\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\n    // [IGNORE] FFF0 - FFFF   Specials\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\n}\n/**\n * A fast function (therefore imprecise) to check if code points are emojis.\n * Generated using https://github.com/alexdima/unicode-utils/blob/main/emoji-test.js\n */\nexport function isEmojiImprecise(x) {\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x === 8986) || (x === 8987) || (x === 9200)\n        || (x === 9203) || (x >= 9728 && x <= 10175) || (x === 11088) || (x === 11093)\n        || (x >= 127744 && x <= 128591) || (x >= 128640 && x <= 128764)\n        || (x >= 128992 && x <= 129008) || (x >= 129280 && x <= 129535)\n        || (x >= 129648 && x <= 129782));\n}\n// -- UTF-8 BOM\nexport const UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* CharCode.UTF8_BOM */);\nexport function startsWithUTF8BOM(str) {\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* CharCode.UTF8_BOM */);\n}\nexport function containsUppercaseCharacter(target, ignoreEscapedChars = false) {\n    if (!target) {\n        return false;\n    }\n    if (ignoreEscapedChars) {\n        target = target.replace(/\\\\./g, '');\n    }\n    return target.toLowerCase() !== target;\n}\n/**\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\n */\nexport function singleLetterHash(n) {\n    const LETTERS_CNT = (90 /* CharCode.Z */ - 65 /* CharCode.A */ + 1);\n    n = n % (2 * LETTERS_CNT);\n    if (n < LETTERS_CNT) {\n        return String.fromCharCode(97 /* CharCode.a */ + n);\n    }\n    return String.fromCharCode(65 /* CharCode.A */ + n - LETTERS_CNT);\n}\nfunction breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\n    // http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\n    // !!! Let's make the common case a bit faster\n    if (breakTypeA === 0 /* GraphemeBreakType.Other */) {\n        // see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\n        return (breakTypeB !== 5 /* GraphemeBreakType.Extend */ && breakTypeB !== 7 /* GraphemeBreakType.SpacingMark */);\n    }\n    // Do not break between a CR and LF. Otherwise, break before and after controls.\n    // GB3                                        CR × LF\n    // GB4                       (Control | CR | LF) ÷\n    // GB5                                           ÷ (Control | CR | LF)\n    if (breakTypeA === 2 /* GraphemeBreakType.CR */) {\n        if (breakTypeB === 3 /* GraphemeBreakType.LF */) {\n            return false; // GB3\n        }\n    }\n    if (breakTypeA === 4 /* GraphemeBreakType.Control */ || breakTypeA === 2 /* GraphemeBreakType.CR */ || breakTypeA === 3 /* GraphemeBreakType.LF */) {\n        return true; // GB4\n    }\n    if (breakTypeB === 4 /* GraphemeBreakType.Control */ || breakTypeB === 2 /* GraphemeBreakType.CR */ || breakTypeB === 3 /* GraphemeBreakType.LF */) {\n        return true; // GB5\n    }\n    // Do not break Hangul syllable sequences.\n    // GB6                                         L × (L | V | LV | LVT)\n    // GB7                                  (LV | V) × (V | T)\n    // GB8                                 (LVT | T) × T\n    if (breakTypeA === 8 /* GraphemeBreakType.L */) {\n        if (breakTypeB === 8 /* GraphemeBreakType.L */ || breakTypeB === 9 /* GraphemeBreakType.V */ || breakTypeB === 11 /* GraphemeBreakType.LV */ || breakTypeB === 12 /* GraphemeBreakType.LVT */) {\n            return false; // GB6\n        }\n    }\n    if (breakTypeA === 11 /* GraphemeBreakType.LV */ || breakTypeA === 9 /* GraphemeBreakType.V */) {\n        if (breakTypeB === 9 /* GraphemeBreakType.V */ || breakTypeB === 10 /* GraphemeBreakType.T */) {\n            return false; // GB7\n        }\n    }\n    if (breakTypeA === 12 /* GraphemeBreakType.LVT */ || breakTypeA === 10 /* GraphemeBreakType.T */) {\n        if (breakTypeB === 10 /* GraphemeBreakType.T */) {\n            return false; // GB8\n        }\n    }\n    // Do not break before extending characters or ZWJ.\n    // GB9                                           × (Extend | ZWJ)\n    if (breakTypeB === 5 /* GraphemeBreakType.Extend */ || breakTypeB === 13 /* GraphemeBreakType.ZWJ */) {\n        return false; // GB9\n    }\n    // The GB9a and GB9b rules only apply to extended grapheme clusters:\n    // Do not break before SpacingMarks, or after Prepend characters.\n    // GB9a                                          × SpacingMark\n    // GB9b                                  Prepend ×\n    if (breakTypeB === 7 /* GraphemeBreakType.SpacingMark */) {\n        return false; // GB9a\n    }\n    if (breakTypeA === 1 /* GraphemeBreakType.Prepend */) {\n        return false; // GB9b\n    }\n    // Do not break within emoji modifier sequences or emoji zwj sequences.\n    // GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\n    if (breakTypeA === 13 /* GraphemeBreakType.ZWJ */ && breakTypeB === 14 /* GraphemeBreakType.Extended_Pictographic */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB11\n    }\n    // GB12                          sot (RI RI)* RI × RI\n    // GB13                        [^RI] (RI RI)* RI × RI\n    if (breakTypeA === 6 /* GraphemeBreakType.Regional_Indicator */ && breakTypeB === 6 /* GraphemeBreakType.Regional_Indicator */) {\n        // Note: we are not implementing the rule entirely here to avoid introducing states\n        return false; // GB12 & GB13\n    }\n    // GB999                                     Any ÷ Any\n    return true;\n}\nclass GraphemeBreakTree {\n    static getInstance() {\n        if (!GraphemeBreakTree._INSTANCE) {\n            GraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\n        }\n        return GraphemeBreakTree._INSTANCE;\n    }\n    constructor() {\n        this._data = getGraphemeBreakRawData();\n    }\n    getGraphemeBreakType(codePoint) {\n        // !!! Let's make 7bit ASCII a bit faster: 0..31\n        if (codePoint < 32) {\n            if (codePoint === 10 /* CharCode.LineFeed */) {\n                return 3 /* GraphemeBreakType.LF */;\n            }\n            if (codePoint === 13 /* CharCode.CarriageReturn */) {\n                return 2 /* GraphemeBreakType.CR */;\n            }\n            return 4 /* GraphemeBreakType.Control */;\n        }\n        // !!! Let's make 7bit ASCII a bit faster: 32..126\n        if (codePoint < 127) {\n            return 0 /* GraphemeBreakType.Other */;\n        }\n        const data = this._data;\n        const nodeCount = data.length / 3;\n        let nodeIndex = 1;\n        while (nodeIndex <= nodeCount) {\n            if (codePoint < data[3 * nodeIndex]) {\n                // go left\n                nodeIndex = 2 * nodeIndex;\n            }\n            else if (codePoint > data[3 * nodeIndex + 1]) {\n                // go right\n                nodeIndex = 2 * nodeIndex + 1;\n            }\n            else {\n                // hit\n                return data[3 * nodeIndex + 2];\n            }\n        }\n        return 0 /* GraphemeBreakType.Other */;\n    }\n}\nGraphemeBreakTree._INSTANCE = null;\nfunction getGraphemeBreakRawData() {\n    // generated using https://github.com/alexdima/unicode-utils/blob/main/grapheme-break.js\n    return JSON.parse('[0,0,0,51229,51255,12,44061,44087,12,127462,127487,6,7083,7085,5,47645,47671,12,54813,54839,12,128678,128678,14,3270,3270,5,9919,9923,14,45853,45879,12,49437,49463,12,53021,53047,12,71216,71218,7,128398,128399,14,129360,129374,14,2519,2519,5,4448,4519,9,9742,9742,14,12336,12336,14,44957,44983,12,46749,46775,12,48541,48567,12,50333,50359,12,52125,52151,12,53917,53943,12,69888,69890,5,73018,73018,5,127990,127990,14,128558,128559,14,128759,128760,14,129653,129655,14,2027,2035,5,2891,2892,7,3761,3761,5,6683,6683,5,8293,8293,4,9825,9826,14,9999,9999,14,43452,43453,5,44509,44535,12,45405,45431,12,46301,46327,12,47197,47223,12,48093,48119,12,48989,49015,12,49885,49911,12,50781,50807,12,51677,51703,12,52573,52599,12,53469,53495,12,54365,54391,12,65279,65279,4,70471,70472,7,72145,72147,7,119173,119179,5,127799,127818,14,128240,128244,14,128512,128512,14,128652,128652,14,128721,128722,14,129292,129292,14,129445,129450,14,129734,129743,14,1476,1477,5,2366,2368,7,2750,2752,7,3076,3076,5,3415,3415,5,4141,4144,5,6109,6109,5,6964,6964,5,7394,7400,5,9197,9198,14,9770,9770,14,9877,9877,14,9968,9969,14,10084,10084,14,43052,43052,5,43713,43713,5,44285,44311,12,44733,44759,12,45181,45207,12,45629,45655,12,46077,46103,12,46525,46551,12,46973,46999,12,47421,47447,12,47869,47895,12,48317,48343,12,48765,48791,12,49213,49239,12,49661,49687,12,50109,50135,12,50557,50583,12,51005,51031,12,51453,51479,12,51901,51927,12,52349,52375,12,52797,52823,12,53245,53271,12,53693,53719,12,54141,54167,12,54589,54615,12,55037,55063,12,69506,69509,5,70191,70193,5,70841,70841,7,71463,71467,5,72330,72342,5,94031,94031,5,123628,123631,5,127763,127765,14,127941,127941,14,128043,128062,14,128302,128317,14,128465,128467,14,128539,128539,14,128640,128640,14,128662,128662,14,128703,128703,14,128745,128745,14,129004,129007,14,129329,129330,14,129402,129402,14,129483,129483,14,129686,129704,14,130048,131069,14,173,173,4,1757,1757,1,2200,2207,5,2434,2435,7,2631,2632,5,2817,2817,5,3008,3008,5,3201,3201,5,3387,3388,5,3542,3542,5,3902,3903,7,4190,4192,5,6002,6003,5,6439,6440,5,6765,6770,7,7019,7027,5,7154,7155,7,8205,8205,13,8505,8505,14,9654,9654,14,9757,9757,14,9792,9792,14,9852,9853,14,9890,9894,14,9937,9937,14,9981,9981,14,10035,10036,14,11035,11036,14,42654,42655,5,43346,43347,7,43587,43587,5,44006,44007,7,44173,44199,12,44397,44423,12,44621,44647,12,44845,44871,12,45069,45095,12,45293,45319,12,45517,45543,12,45741,45767,12,45965,45991,12,46189,46215,12,46413,46439,12,46637,46663,12,46861,46887,12,47085,47111,12,47309,47335,12,47533,47559,12,47757,47783,12,47981,48007,12,48205,48231,12,48429,48455,12,48653,48679,12,48877,48903,12,49101,49127,12,49325,49351,12,49549,49575,12,49773,49799,12,49997,50023,12,50221,50247,12,50445,50471,12,50669,50695,12,50893,50919,12,51117,51143,12,51341,51367,12,51565,51591,12,51789,51815,12,52013,52039,12,52237,52263,12,52461,52487,12,52685,52711,12,52909,52935,12,53133,53159,12,53357,53383,12,53581,53607,12,53805,53831,12,54029,54055,12,54253,54279,12,54477,54503,12,54701,54727,12,54925,54951,12,55149,55175,12,68101,68102,5,69762,69762,7,70067,70069,7,70371,70378,5,70720,70721,7,71087,71087,5,71341,71341,5,71995,71996,5,72249,72249,7,72850,72871,5,73109,73109,5,118576,118598,5,121505,121519,5,127245,127247,14,127568,127569,14,127777,127777,14,127872,127891,14,127956,127967,14,128015,128016,14,128110,128172,14,128259,128259,14,128367,128368,14,128424,128424,14,128488,128488,14,128530,128532,14,128550,128551,14,128566,128566,14,128647,128647,14,128656,128656,14,128667,128673,14,128691,128693,14,128715,128715,14,128728,128732,14,128752,128752,14,128765,128767,14,129096,129103,14,129311,129311,14,129344,129349,14,129394,129394,14,129413,129425,14,129466,129471,14,129511,129535,14,129664,129666,14,129719,129722,14,129760,129767,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2307,2307,7,2382,2383,7,2497,2500,5,2563,2563,7,2677,2677,5,2763,2764,7,2879,2879,5,2914,2915,5,3021,3021,5,3142,3144,5,3263,3263,5,3285,3286,5,3398,3400,7,3530,3530,5,3633,3633,5,3864,3865,5,3974,3975,5,4155,4156,7,4229,4230,5,5909,5909,7,6078,6085,7,6277,6278,5,6451,6456,7,6744,6750,5,6846,6846,5,6972,6972,5,7074,7077,5,7146,7148,7,7222,7223,5,7416,7417,5,8234,8238,4,8417,8417,5,9000,9000,14,9203,9203,14,9730,9731,14,9748,9749,14,9762,9763,14,9776,9783,14,9800,9811,14,9831,9831,14,9872,9873,14,9882,9882,14,9900,9903,14,9929,9933,14,9941,9960,14,9974,9974,14,9989,9989,14,10006,10006,14,10062,10062,14,10160,10160,14,11647,11647,5,12953,12953,14,43019,43019,5,43232,43249,5,43443,43443,5,43567,43568,7,43696,43696,5,43765,43765,7,44013,44013,5,44117,44143,12,44229,44255,12,44341,44367,12,44453,44479,12,44565,44591,12,44677,44703,12,44789,44815,12,44901,44927,12,45013,45039,12,45125,45151,12,45237,45263,12,45349,45375,12,45461,45487,12,45573,45599,12,45685,45711,12,45797,45823,12,45909,45935,12,46021,46047,12,46133,46159,12,46245,46271,12,46357,46383,12,46469,46495,12,46581,46607,12,46693,46719,12,46805,46831,12,46917,46943,12,47029,47055,12,47141,47167,12,47253,47279,12,47365,47391,12,47477,47503,12,47589,47615,12,47701,47727,12,47813,47839,12,47925,47951,12,48037,48063,12,48149,48175,12,48261,48287,12,48373,48399,12,48485,48511,12,48597,48623,12,48709,48735,12,48821,48847,12,48933,48959,12,49045,49071,12,49157,49183,12,49269,49295,12,49381,49407,12,49493,49519,12,49605,49631,12,49717,49743,12,49829,49855,12,49941,49967,12,50053,50079,12,50165,50191,12,50277,50303,12,50389,50415,12,50501,50527,12,50613,50639,12,50725,50751,12,50837,50863,12,50949,50975,12,51061,51087,12,51173,51199,12,51285,51311,12,51397,51423,12,51509,51535,12,51621,51647,12,51733,51759,12,51845,51871,12,51957,51983,12,52069,52095,12,52181,52207,12,52293,52319,12,52405,52431,12,52517,52543,12,52629,52655,12,52741,52767,12,52853,52879,12,52965,52991,12,53077,53103,12,53189,53215,12,53301,53327,12,53413,53439,12,53525,53551,12,53637,53663,12,53749,53775,12,53861,53887,12,53973,53999,12,54085,54111,12,54197,54223,12,54309,54335,12,54421,54447,12,54533,54559,12,54645,54671,12,54757,54783,12,54869,54895,12,54981,55007,12,55093,55119,12,55243,55291,10,66045,66045,5,68325,68326,5,69688,69702,5,69817,69818,5,69957,69958,7,70089,70092,5,70198,70199,5,70462,70462,5,70502,70508,5,70750,70750,5,70846,70846,7,71100,71101,5,71230,71230,7,71351,71351,5,71737,71738,5,72000,72000,7,72160,72160,5,72273,72278,5,72752,72758,5,72882,72883,5,73031,73031,5,73461,73462,7,94192,94193,7,119149,119149,7,121403,121452,5,122915,122916,5,126980,126980,14,127358,127359,14,127535,127535,14,127759,127759,14,127771,127771,14,127792,127793,14,127825,127867,14,127897,127899,14,127945,127945,14,127985,127986,14,128000,128007,14,128021,128021,14,128066,128100,14,128184,128235,14,128249,128252,14,128266,128276,14,128335,128335,14,128379,128390,14,128407,128419,14,128444,128444,14,128481,128481,14,128499,128499,14,128526,128526,14,128536,128536,14,128543,128543,14,128556,128556,14,128564,128564,14,128577,128580,14,128643,128645,14,128649,128649,14,128654,128654,14,128660,128660,14,128664,128664,14,128675,128675,14,128686,128689,14,128695,128696,14,128705,128709,14,128717,128719,14,128725,128725,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129009,129023,14,129160,129167,14,129296,129304,14,129320,129327,14,129340,129342,14,129356,129356,14,129388,129392,14,129399,129400,14,129404,129407,14,129432,129442,14,129454,129455,14,129473,129474,14,129485,129487,14,129648,129651,14,129659,129660,14,129671,129679,14,129709,129711,14,129728,129730,14,129751,129753,14,129776,129782,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2274,2274,1,2363,2363,7,2377,2380,7,2402,2403,5,2494,2494,5,2507,2508,7,2558,2558,5,2622,2624,7,2641,2641,5,2691,2691,7,2759,2760,5,2786,2787,5,2876,2876,5,2881,2884,5,2901,2902,5,3006,3006,5,3014,3016,7,3072,3072,5,3134,3136,5,3157,3158,5,3260,3260,5,3266,3266,5,3274,3275,7,3328,3329,5,3391,3392,7,3405,3405,5,3457,3457,5,3536,3537,7,3551,3551,5,3636,3642,5,3764,3772,5,3895,3895,5,3967,3967,7,3993,4028,5,4146,4151,5,4182,4183,7,4226,4226,5,4253,4253,5,4957,4959,5,5940,5940,7,6070,6070,7,6087,6088,7,6158,6158,4,6432,6434,5,6448,6449,7,6679,6680,5,6742,6742,5,6754,6754,5,6783,6783,5,6912,6915,5,6966,6970,5,6978,6978,5,7042,7042,7,7080,7081,5,7143,7143,7,7150,7150,7,7212,7219,5,7380,7392,5,7412,7412,5,8203,8203,4,8232,8232,4,8265,8265,14,8400,8412,5,8421,8432,5,8617,8618,14,9167,9167,14,9200,9200,14,9410,9410,14,9723,9726,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9774,14,9786,9786,14,9794,9794,14,9823,9823,14,9828,9828,14,9833,9850,14,9855,9855,14,9875,9875,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9935,9935,14,9939,9939,14,9962,9962,14,9972,9972,14,9978,9978,14,9986,9986,14,9997,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10133,10135,14,10548,10549,14,11093,11093,14,12330,12333,5,12441,12442,5,42608,42610,5,43010,43010,5,43045,43046,5,43188,43203,7,43302,43309,5,43392,43394,5,43446,43449,5,43493,43493,5,43571,43572,7,43597,43597,7,43703,43704,5,43756,43757,5,44003,44004,7,44009,44010,7,44033,44059,12,44089,44115,12,44145,44171,12,44201,44227,12,44257,44283,12,44313,44339,12,44369,44395,12,44425,44451,12,44481,44507,12,44537,44563,12,44593,44619,12,44649,44675,12,44705,44731,12,44761,44787,12,44817,44843,12,44873,44899,12,44929,44955,12,44985,45011,12,45041,45067,12,45097,45123,12,45153,45179,12,45209,45235,12,45265,45291,12,45321,45347,12,45377,45403,12,45433,45459,12,45489,45515,12,45545,45571,12,45601,45627,12,45657,45683,12,45713,45739,12,45769,45795,12,45825,45851,12,45881,45907,12,45937,45963,12,45993,46019,12,46049,46075,12,46105,46131,12,46161,46187,12,46217,46243,12,46273,46299,12,46329,46355,12,46385,46411,12,46441,46467,12,46497,46523,12,46553,46579,12,46609,46635,12,46665,46691,12,46721,46747,12,46777,46803,12,46833,46859,12,46889,46915,12,46945,46971,12,47001,47027,12,47057,47083,12,47113,47139,12,47169,47195,12,47225,47251,12,47281,47307,12,47337,47363,12,47393,47419,12,47449,47475,12,47505,47531,12,47561,47587,12,47617,47643,12,47673,47699,12,47729,47755,12,47785,47811,12,47841,47867,12,47897,47923,12,47953,47979,12,48009,48035,12,48065,48091,12,48121,48147,12,48177,48203,12,48233,48259,12,48289,48315,12,48345,48371,12,48401,48427,12,48457,48483,12,48513,48539,12,48569,48595,12,48625,48651,12,48681,48707,12,48737,48763,12,48793,48819,12,48849,48875,12,48905,48931,12,48961,48987,12,49017,49043,12,49073,49099,12,49129,49155,12,49185,49211,12,49241,49267,12,49297,49323,12,49353,49379,12,49409,49435,12,49465,49491,12,49521,49547,12,49577,49603,12,49633,49659,12,49689,49715,12,49745,49771,12,49801,49827,12,49857,49883,12,49913,49939,12,49969,49995,12,50025,50051,12,50081,50107,12,50137,50163,12,50193,50219,12,50249,50275,12,50305,50331,12,50361,50387,12,50417,50443,12,50473,50499,12,50529,50555,12,50585,50611,12,50641,50667,12,50697,50723,12,50753,50779,12,50809,50835,12,50865,50891,12,50921,50947,12,50977,51003,12,51033,51059,12,51089,51115,12,51145,51171,12,51201,51227,12,51257,51283,12,51313,51339,12,51369,51395,12,51425,51451,12,51481,51507,12,51537,51563,12,51593,51619,12,51649,51675,12,51705,51731,12,51761,51787,12,51817,51843,12,51873,51899,12,51929,51955,12,51985,52011,12,52041,52067,12,52097,52123,12,52153,52179,12,52209,52235,12,52265,52291,12,52321,52347,12,52377,52403,12,52433,52459,12,52489,52515,12,52545,52571,12,52601,52627,12,52657,52683,12,52713,52739,12,52769,52795,12,52825,52851,12,52881,52907,12,52937,52963,12,52993,53019,12,53049,53075,12,53105,53131,12,53161,53187,12,53217,53243,12,53273,53299,12,53329,53355,12,53385,53411,12,53441,53467,12,53497,53523,12,53553,53579,12,53609,53635,12,53665,53691,12,53721,53747,12,53777,53803,12,53833,53859,12,53889,53915,12,53945,53971,12,54001,54027,12,54057,54083,12,54113,54139,12,54169,54195,12,54225,54251,12,54281,54307,12,54337,54363,12,54393,54419,12,54449,54475,12,54505,54531,12,54561,54587,12,54617,54643,12,54673,54699,12,54729,54755,12,54785,54811,12,54841,54867,12,54897,54923,12,54953,54979,12,55009,55035,12,55065,55091,12,55121,55147,12,55177,55203,12,65024,65039,5,65520,65528,4,66422,66426,5,68152,68154,5,69291,69292,5,69633,69633,5,69747,69748,5,69811,69814,5,69826,69826,5,69932,69932,7,70016,70017,5,70079,70080,7,70095,70095,5,70196,70196,5,70367,70367,5,70402,70403,7,70464,70464,5,70487,70487,5,70709,70711,7,70725,70725,7,70833,70834,7,70843,70844,7,70849,70849,7,71090,71093,5,71103,71104,5,71227,71228,7,71339,71339,5,71344,71349,5,71458,71461,5,71727,71735,5,71985,71989,7,71998,71998,5,72002,72002,7,72154,72155,5,72193,72202,5,72251,72254,5,72281,72283,5,72344,72345,5,72766,72766,7,72874,72880,5,72885,72886,5,73023,73029,5,73104,73105,5,73111,73111,5,92912,92916,5,94095,94098,5,113824,113827,4,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,125252,125258,5,127183,127183,14,127340,127343,14,127377,127386,14,127491,127503,14,127548,127551,14,127744,127756,14,127761,127761,14,127769,127769,14,127773,127774,14,127780,127788,14,127796,127797,14,127820,127823,14,127869,127869,14,127894,127895,14,127902,127903,14,127943,127943,14,127947,127950,14,127972,127972,14,127988,127988,14,127992,127994,14,128009,128011,14,128019,128019,14,128023,128041,14,128064,128064,14,128102,128107,14,128174,128181,14,128238,128238,14,128246,128247,14,128254,128254,14,128264,128264,14,128278,128299,14,128329,128330,14,128348,128359,14,128371,128377,14,128392,128393,14,128401,128404,14,128421,128421,14,128433,128434,14,128450,128452,14,128476,128478,14,128483,128483,14,128495,128495,14,128506,128506,14,128519,128520,14,128528,128528,14,128534,128534,14,128538,128538,14,128540,128542,14,128544,128549,14,128552,128555,14,128557,128557,14,128560,128563,14,128565,128565,14,128567,128576,14,128581,128591,14,128641,128642,14,128646,128646,14,128648,128648,14,128650,128651,14,128653,128653,14,128655,128655,14,128657,128659,14,128661,128661,14,128663,128663,14,128665,128666,14,128674,128674,14,128676,128677,14,128679,128685,14,128690,128690,14,128694,128694,14,128697,128702,14,128704,128704,14,128710,128714,14,128716,128716,14,128720,128720,14,128723,128724,14,128726,128727,14,128733,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129008,129008,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129661,129663,14,129667,129670,14,129680,129685,14,129705,129708,14,129712,129718,14,129723,129727,14,129731,129733,14,129744,129750,14,129754,129759,14,129768,129775,14,129783,129791,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2192,2193,1,2250,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3132,3132,5,3137,3140,7,3146,3149,5,3170,3171,5,3202,3203,7,3262,3262,7,3264,3265,7,3267,3268,7,3271,3272,7,3276,3277,5,3298,3299,5,3330,3331,7,3390,3390,5,3393,3396,5,3402,3404,7,3406,3406,1,3426,3427,5,3458,3459,7,3535,3535,5,3538,3540,5,3544,3550,7,3570,3571,7,3635,3635,7,3655,3662,5,3763,3763,7,3784,3789,5,3893,3893,5,3897,3897,5,3953,3966,5,3968,3972,5,3981,3991,5,4038,4038,5,4145,4145,7,4153,4154,5,4157,4158,5,4184,4185,5,4209,4212,5,4228,4228,7,4237,4237,5,4352,4447,8,4520,4607,10,5906,5908,5,5938,5939,5,5970,5971,5,6068,6069,5,6071,6077,5,6086,6086,5,6089,6099,5,6155,6157,5,6159,6159,5,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6862,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7679,5,8204,8204,5,8206,8207,4,8233,8233,4,8252,8252,14,8288,8292,4,8294,8303,4,8413,8416,5,8418,8420,5,8482,8482,14,8596,8601,14,8986,8987,14,9096,9096,14,9193,9196,14,9199,9199,14,9201,9202,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9729,14,9732,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9775,9775,14,9784,9785,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9874,14,9876,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9934,14,9936,9936,14,9938,9938,14,9940,9940,14,9961,9961,14,9963,9967,14,9970,9971,14,9973,9973,14,9975,9977,14,9979,9980,14,9982,9985,14,9987,9988,14,9992,9996,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10083,14,10085,10087,14,10145,10145,14,10175,10175,14,11013,11015,14,11088,11088,14,11503,11505,5,11744,11775,5,12334,12335,5,12349,12349,14,12951,12951,14,42607,42607,5,42612,42621,5,42736,42737,5,43014,43014,5,43043,43044,7,43047,43047,7,43136,43137,7,43204,43205,5,43263,43263,5,43335,43345,5,43360,43388,8,43395,43395,7,43444,43445,7,43450,43451,7,43454,43456,7,43561,43566,5,43569,43570,5,43573,43574,5,43596,43596,5,43644,43644,5,43698,43700,5,43710,43711,5,43755,43755,7,43758,43759,7,43766,43766,5,44005,44005,5,44008,44008,5,44012,44012,7,44032,44032,11,44060,44060,11,44088,44088,11,44116,44116,11,44144,44144,11,44172,44172,11,44200,44200,11,44228,44228,11,44256,44256,11,44284,44284,11,44312,44312,11,44340,44340,11,44368,44368,11,44396,44396,11,44424,44424,11,44452,44452,11,44480,44480,11,44508,44508,11,44536,44536,11,44564,44564,11,44592,44592,11,44620,44620,11,44648,44648,11,44676,44676,11,44704,44704,11,44732,44732,11,44760,44760,11,44788,44788,11,44816,44816,11,44844,44844,11,44872,44872,11,44900,44900,11,44928,44928,11,44956,44956,11,44984,44984,11,45012,45012,11,45040,45040,11,45068,45068,11,45096,45096,11,45124,45124,11,45152,45152,11,45180,45180,11,45208,45208,11,45236,45236,11,45264,45264,11,45292,45292,11,45320,45320,11,45348,45348,11,45376,45376,11,45404,45404,11,45432,45432,11,45460,45460,11,45488,45488,11,45516,45516,11,45544,45544,11,45572,45572,11,45600,45600,11,45628,45628,11,45656,45656,11,45684,45684,11,45712,45712,11,45740,45740,11,45768,45768,11,45796,45796,11,45824,45824,11,45852,45852,11,45880,45880,11,45908,45908,11,45936,45936,11,45964,45964,11,45992,45992,11,46020,46020,11,46048,46048,11,46076,46076,11,46104,46104,11,46132,46132,11,46160,46160,11,46188,46188,11,46216,46216,11,46244,46244,11,46272,46272,11,46300,46300,11,46328,46328,11,46356,46356,11,46384,46384,11,46412,46412,11,46440,46440,11,46468,46468,11,46496,46496,11,46524,46524,11,46552,46552,11,46580,46580,11,46608,46608,11,46636,46636,11,46664,46664,11,46692,46692,11,46720,46720,11,46748,46748,11,46776,46776,11,46804,46804,11,46832,46832,11,46860,46860,11,46888,46888,11,46916,46916,11,46944,46944,11,46972,46972,11,47000,47000,11,47028,47028,11,47056,47056,11,47084,47084,11,47112,47112,11,47140,47140,11,47168,47168,11,47196,47196,11,47224,47224,11,47252,47252,11,47280,47280,11,47308,47308,11,47336,47336,11,47364,47364,11,47392,47392,11,47420,47420,11,47448,47448,11,47476,47476,11,47504,47504,11,47532,47532,11,47560,47560,11,47588,47588,11,47616,47616,11,47644,47644,11,47672,47672,11,47700,47700,11,47728,47728,11,47756,47756,11,47784,47784,11,47812,47812,11,47840,47840,11,47868,47868,11,47896,47896,11,47924,47924,11,47952,47952,11,47980,47980,11,48008,48008,11,48036,48036,11,48064,48064,11,48092,48092,11,48120,48120,11,48148,48148,11,48176,48176,11,48204,48204,11,48232,48232,11,48260,48260,11,48288,48288,11,48316,48316,11,48344,48344,11,48372,48372,11,48400,48400,11,48428,48428,11,48456,48456,11,48484,48484,11,48512,48512,11,48540,48540,11,48568,48568,11,48596,48596,11,48624,48624,11,48652,48652,11,48680,48680,11,48708,48708,11,48736,48736,11,48764,48764,11,48792,48792,11,48820,48820,11,48848,48848,11,48876,48876,11,48904,48904,11,48932,48932,11,48960,48960,11,48988,48988,11,49016,49016,11,49044,49044,11,49072,49072,11,49100,49100,11,49128,49128,11,49156,49156,11,49184,49184,11,49212,49212,11,49240,49240,11,49268,49268,11,49296,49296,11,49324,49324,11,49352,49352,11,49380,49380,11,49408,49408,11,49436,49436,11,49464,49464,11,49492,49492,11,49520,49520,11,49548,49548,11,49576,49576,11,49604,49604,11,49632,49632,11,49660,49660,11,49688,49688,11,49716,49716,11,49744,49744,11,49772,49772,11,49800,49800,11,49828,49828,11,49856,49856,11,49884,49884,11,49912,49912,11,49940,49940,11,49968,49968,11,49996,49996,11,50024,50024,11,50052,50052,11,50080,50080,11,50108,50108,11,50136,50136,11,50164,50164,11,50192,50192,11,50220,50220,11,50248,50248,11,50276,50276,11,50304,50304,11,50332,50332,11,50360,50360,11,50388,50388,11,50416,50416,11,50444,50444,11,50472,50472,11,50500,50500,11,50528,50528,11,50556,50556,11,50584,50584,11,50612,50612,11,50640,50640,11,50668,50668,11,50696,50696,11,50724,50724,11,50752,50752,11,50780,50780,11,50808,50808,11,50836,50836,11,50864,50864,11,50892,50892,11,50920,50920,11,50948,50948,11,50976,50976,11,51004,51004,11,51032,51032,11,51060,51060,11,51088,51088,11,51116,51116,11,51144,51144,11,51172,51172,11,51200,51200,11,51228,51228,11,51256,51256,11,51284,51284,11,51312,51312,11,51340,51340,11,51368,51368,11,51396,51396,11,51424,51424,11,51452,51452,11,51480,51480,11,51508,51508,11,51536,51536,11,51564,51564,11,51592,51592,11,51620,51620,11,51648,51648,11,51676,51676,11,51704,51704,11,51732,51732,11,51760,51760,11,51788,51788,11,51816,51816,11,51844,51844,11,51872,51872,11,51900,51900,11,51928,51928,11,51956,51956,11,51984,51984,11,52012,52012,11,52040,52040,11,52068,52068,11,52096,52096,11,52124,52124,11,52152,52152,11,52180,52180,11,52208,52208,11,52236,52236,11,52264,52264,11,52292,52292,11,52320,52320,11,52348,52348,11,52376,52376,11,52404,52404,11,52432,52432,11,52460,52460,11,52488,52488,11,52516,52516,11,52544,52544,11,52572,52572,11,52600,52600,11,52628,52628,11,52656,52656,11,52684,52684,11,52712,52712,11,52740,52740,11,52768,52768,11,52796,52796,11,52824,52824,11,52852,52852,11,52880,52880,11,52908,52908,11,52936,52936,11,52964,52964,11,52992,52992,11,53020,53020,11,53048,53048,11,53076,53076,11,53104,53104,11,53132,53132,11,53160,53160,11,53188,53188,11,53216,53216,11,53244,53244,11,53272,53272,11,53300,53300,11,53328,53328,11,53356,53356,11,53384,53384,11,53412,53412,11,53440,53440,11,53468,53468,11,53496,53496,11,53524,53524,11,53552,53552,11,53580,53580,11,53608,53608,11,53636,53636,11,53664,53664,11,53692,53692,11,53720,53720,11,53748,53748,11,53776,53776,11,53804,53804,11,53832,53832,11,53860,53860,11,53888,53888,11,53916,53916,11,53944,53944,11,53972,53972,11,54000,54000,11,54028,54028,11,54056,54056,11,54084,54084,11,54112,54112,11,54140,54140,11,54168,54168,11,54196,54196,11,54224,54224,11,54252,54252,11,54280,54280,11,54308,54308,11,54336,54336,11,54364,54364,11,54392,54392,11,54420,54420,11,54448,54448,11,54476,54476,11,54504,54504,11,54532,54532,11,54560,54560,11,54588,54588,11,54616,54616,11,54644,54644,11,54672,54672,11,54700,54700,11,54728,54728,11,54756,54756,11,54784,54784,11,54812,54812,11,54840,54840,11,54868,54868,11,54896,54896,11,54924,54924,11,54952,54952,11,54980,54980,11,55008,55008,11,55036,55036,11,55064,55064,11,55092,55092,11,55120,55120,11,55148,55148,11,55176,55176,11,55216,55238,9,64286,64286,5,65056,65071,5,65438,65439,5,65529,65531,4,66272,66272,5,68097,68099,5,68108,68111,5,68159,68159,5,68900,68903,5,69446,69456,5,69632,69632,7,69634,69634,7,69744,69744,5,69759,69761,5,69808,69810,7,69815,69816,7,69821,69821,1,69837,69837,1,69927,69931,5,69933,69940,5,70003,70003,5,70018,70018,7,70070,70078,5,70082,70083,1,70094,70094,7,70188,70190,7,70194,70195,7,70197,70197,7,70206,70206,5,70368,70370,7,70400,70401,5,70459,70460,5,70463,70463,7,70465,70468,7,70475,70477,7,70498,70499,7,70512,70516,5,70712,70719,5,70722,70724,5,70726,70726,5,70832,70832,5,70835,70840,5,70842,70842,5,70845,70845,5,70847,70848,5,70850,70851,5,71088,71089,7,71096,71099,7,71102,71102,7,71132,71133,5,71219,71226,5,71229,71229,5,71231,71232,5,71340,71340,7,71342,71343,7,71350,71350,7,71453,71455,5,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,118528,118573,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123566,123566,5,125136,125142,5,126976,126979,14,126981,127182,14,127184,127231,14,127279,127279,14,127344,127345,14,127374,127374,14,127405,127461,14,127489,127490,14,127514,127514,14,127538,127546,14,127561,127567,14,127570,127743,14,127757,127758,14,127760,127760,14,127762,127762,14,127766,127768,14,127770,127770,14,127772,127772,14,127775,127776,14,127778,127779,14,127789,127791,14,127794,127795,14,127798,127798,14,127819,127819,14,127824,127824,14,127868,127868,14,127870,127871,14,127892,127893,14,127896,127896,14,127900,127901,14,127904,127940,14,127942,127942,14,127944,127944,14,127946,127946,14,127951,127955,14,127968,127971,14,127973,127984,14,127987,127987,14,127989,127989,14,127991,127991,14,127995,127999,5,128008,128008,14,128012,128014,14,128017,128018,14,128020,128020,14,128022,128022,14,128042,128042,14,128063,128063,14,128065,128065,14,128101,128101,14,128108,128109,14,128173,128173,14,128182,128183,14,128236,128237,14,128239,128239,14,128245,128245,14,128248,128248,14,128253,128253,14,128255,128258,14,128260,128263,14,128265,128265,14,128277,128277,14,128300,128301,14,128326,128328,14,128331,128334,14,128336,128347,14,128360,128366,14,128369,128370,14,128378,128378,14,128391,128391,14,128394,128397,14,128400,128400,14,128405,128406,14,128420,128420,14,128422,128423,14,128425,128432,14,128435,128443,14,128445,128449,14,128453,128464,14,128468,128475,14,128479,128480,14,128482,128482,14,128484,128487,14,128489,128494,14,128496,128498,14,128500,128505,14,128507,128511,14,128513,128518,14,128521,128525,14,128527,128527,14,128529,128529,14,128533,128533,14,128535,128535,14,128537,128537,14]');\n}\n//#endregion\n/**\n * Computes the offset after performing a left delete on the given string,\n * while considering unicode grapheme/emoji rules.\n*/\nexport function getLeftDeleteOffset(offset, str) {\n    if (offset === 0) {\n        return 0;\n    }\n    // Try to delete emoji part.\n    const emojiOffset = getOffsetBeforeLastEmojiComponent(offset, str);\n    if (emojiOffset !== undefined) {\n        return emojiOffset;\n    }\n    // Otherwise, just skip a single code point.\n    const iterator = new CodePointIterator(str, offset);\n    iterator.prevCodePoint();\n    return iterator.offset;\n}\nfunction getOffsetBeforeLastEmojiComponent(initialOffset, str) {\n    // See https://www.unicode.org/reports/tr51/tr51-14.html#EBNF_and_Regex for the\n    // structure of emojis.\n    const iterator = new CodePointIterator(str, initialOffset);\n    let codePoint = iterator.prevCodePoint();\n    // Skip modifiers\n    while ((isEmojiModifier(codePoint) || codePoint === 65039 /* CodePoint.emojiVariantSelector */ || codePoint === 8419 /* CodePoint.enclosingKeyCap */)) {\n        if (iterator.offset === 0) {\n            // Cannot skip modifier, no preceding emoji base.\n            return undefined;\n        }\n        codePoint = iterator.prevCodePoint();\n    }\n    // Expect base emoji\n    if (!isEmojiImprecise(codePoint)) {\n        // Unexpected code point, not a valid emoji.\n        return undefined;\n    }\n    let resultOffset = iterator.offset;\n    if (resultOffset > 0) {\n        // Skip optional ZWJ code points that combine multiple emojis.\n        // In theory, we should check if that ZWJ actually combines multiple emojis\n        // to prevent deleting ZWJs in situations we didn't account for.\n        const optionalZwjCodePoint = iterator.prevCodePoint();\n        if (optionalZwjCodePoint === 8205 /* CodePoint.zwj */) {\n            resultOffset = iterator.offset;\n        }\n    }\n    return resultOffset;\n}\nfunction isEmojiModifier(codePoint) {\n    return 0x1F3FB <= codePoint && codePoint <= 0x1F3FF;\n}\nexport const noBreakWhitespace = '\\xa0';\nexport class AmbiguousCharacters {\n    static getInstance(locales) {\n        return _a.cache.get(Array.from(locales));\n    }\n    static getLocales() {\n        return _a._locales.value;\n    }\n    constructor(confusableDictionary) {\n        this.confusableDictionary = confusableDictionary;\n    }\n    isAmbiguous(codePoint) {\n        return this.confusableDictionary.has(codePoint);\n    }\n    /**\n     * Returns the non basic ASCII code point that the given code point can be confused,\n     * or undefined if such code point does note exist.\n     */\n    getPrimaryConfusable(codePoint) {\n        return this.confusableDictionary.get(codePoint);\n    }\n    getConfusableCodePoints() {\n        return new Set(this.confusableDictionary.keys());\n    }\n}\n_a = AmbiguousCharacters;\nAmbiguousCharacters.ambiguousCharacterData = new Lazy(() => {\n    // Generated using https://github.com/hediet/vscode-unicode-data\n    // Stored as key1, value1, key2, value2, ...\n    return JSON.parse('{\\\"_common\\\":[8232,32,8233,32,5760,32,8192,32,8193,32,8194,32,8195,32,8196,32,8197,32,8198,32,8200,32,8201,32,8202,32,8287,32,8199,32,8239,32,2042,95,65101,95,65102,95,65103,95,8208,45,8209,45,8210,45,65112,45,1748,45,8259,45,727,45,8722,45,10134,45,11450,45,1549,44,1643,44,8218,44,184,44,42233,44,894,59,2307,58,2691,58,1417,58,1795,58,1796,58,5868,58,65072,58,6147,58,6153,58,8282,58,1475,58,760,58,42889,58,8758,58,720,58,42237,58,451,33,11601,33,660,63,577,63,2429,63,5038,63,42731,63,119149,46,8228,46,1793,46,1794,46,42510,46,68176,46,1632,46,1776,46,42232,46,1373,96,65287,96,8219,96,8242,96,1370,96,1523,96,8175,96,65344,96,900,96,8189,96,8125,96,8127,96,8190,96,697,96,884,96,712,96,714,96,715,96,756,96,699,96,701,96,700,96,702,96,42892,96,1497,96,2036,96,2037,96,5194,96,5836,96,94033,96,94034,96,65339,91,10088,40,10098,40,12308,40,64830,40,65341,93,10089,41,10099,41,12309,41,64831,41,10100,123,119060,123,10101,125,65342,94,8270,42,1645,42,8727,42,66335,42,5941,47,8257,47,8725,47,8260,47,9585,47,10187,47,10744,47,119354,47,12755,47,12339,47,11462,47,20031,47,12035,47,65340,92,65128,92,8726,92,10189,92,10741,92,10745,92,119311,92,119355,92,12756,92,20022,92,12034,92,42872,38,708,94,710,94,5869,43,10133,43,66203,43,8249,60,10094,60,706,60,119350,60,5176,60,5810,60,5120,61,11840,61,12448,61,42239,61,8250,62,10095,62,707,62,119351,62,5171,62,94015,62,8275,126,732,126,8128,126,8764,126,65372,124,65293,45,120784,50,120794,50,120804,50,120814,50,120824,50,130034,50,42842,50,423,50,1000,50,42564,50,5311,50,42735,50,119302,51,120785,51,120795,51,120805,51,120815,51,120825,51,130035,51,42923,51,540,51,439,51,42858,51,11468,51,1248,51,94011,51,71882,51,120786,52,120796,52,120806,52,120816,52,120826,52,130036,52,5070,52,71855,52,120787,53,120797,53,120807,53,120817,53,120827,53,130037,53,444,53,71867,53,120788,54,120798,54,120808,54,120818,54,120828,54,130038,54,11474,54,5102,54,71893,54,119314,55,120789,55,120799,55,120809,55,120819,55,120829,55,130039,55,66770,55,71878,55,2819,56,2538,56,2666,56,125131,56,120790,56,120800,56,120810,56,120820,56,120830,56,130040,56,547,56,546,56,66330,56,2663,57,2920,57,2541,57,3437,57,120791,57,120801,57,120811,57,120821,57,120831,57,130041,57,42862,57,11466,57,71884,57,71852,57,71894,57,9082,97,65345,97,119834,97,119886,97,119938,97,119990,97,120042,97,120094,97,120146,97,120198,97,120250,97,120302,97,120354,97,120406,97,120458,97,593,97,945,97,120514,97,120572,97,120630,97,120688,97,120746,97,65313,65,119808,65,119860,65,119912,65,119964,65,120016,65,120068,65,120120,65,120172,65,120224,65,120276,65,120328,65,120380,65,120432,65,913,65,120488,65,120546,65,120604,65,120662,65,120720,65,5034,65,5573,65,42222,65,94016,65,66208,65,119835,98,119887,98,119939,98,119991,98,120043,98,120095,98,120147,98,120199,98,120251,98,120303,98,120355,98,120407,98,120459,98,388,98,5071,98,5234,98,5551,98,65314,66,8492,66,119809,66,119861,66,119913,66,120017,66,120069,66,120121,66,120173,66,120225,66,120277,66,120329,66,120381,66,120433,66,42932,66,914,66,120489,66,120547,66,120605,66,120663,66,120721,66,5108,66,5623,66,42192,66,66178,66,66209,66,66305,66,65347,99,8573,99,119836,99,119888,99,119940,99,119992,99,120044,99,120096,99,120148,99,120200,99,120252,99,120304,99,120356,99,120408,99,120460,99,7428,99,1010,99,11429,99,43951,99,66621,99,128844,67,71922,67,71913,67,65315,67,8557,67,8450,67,8493,67,119810,67,119862,67,119914,67,119966,67,120018,67,120174,67,120226,67,120278,67,120330,67,120382,67,120434,67,1017,67,11428,67,5087,67,42202,67,66210,67,66306,67,66581,67,66844,67,8574,100,8518,100,119837,100,119889,100,119941,100,119993,100,120045,100,120097,100,120149,100,120201,100,120253,100,120305,100,120357,100,120409,100,120461,100,1281,100,5095,100,5231,100,42194,100,8558,68,8517,68,119811,68,119863,68,119915,68,119967,68,120019,68,120071,68,120123,68,120175,68,120227,68,120279,68,120331,68,120383,68,120435,68,5024,68,5598,68,5610,68,42195,68,8494,101,65349,101,8495,101,8519,101,119838,101,119890,101,119942,101,120046,101,120098,101,120150,101,120202,101,120254,101,120306,101,120358,101,120410,101,120462,101,43826,101,1213,101,8959,69,65317,69,8496,69,119812,69,119864,69,119916,69,120020,69,120072,69,120124,69,120176,69,120228,69,120280,69,120332,69,120384,69,120436,69,917,69,120492,69,120550,69,120608,69,120666,69,120724,69,11577,69,5036,69,42224,69,71846,69,71854,69,66182,69,119839,102,119891,102,119943,102,119995,102,120047,102,120099,102,120151,102,120203,102,120255,102,120307,102,120359,102,120411,102,120463,102,43829,102,42905,102,383,102,7837,102,1412,102,119315,70,8497,70,119813,70,119865,70,119917,70,120021,70,120073,70,120125,70,120177,70,120229,70,120281,70,120333,70,120385,70,120437,70,42904,70,988,70,120778,70,5556,70,42205,70,71874,70,71842,70,66183,70,66213,70,66853,70,65351,103,8458,103,119840,103,119892,103,119944,103,120048,103,120100,103,120152,103,120204,103,120256,103,120308,103,120360,103,120412,103,120464,103,609,103,7555,103,397,103,1409,103,119814,71,119866,71,119918,71,119970,71,120022,71,120074,71,120126,71,120178,71,120230,71,120282,71,120334,71,120386,71,120438,71,1292,71,5056,71,5107,71,42198,71,65352,104,8462,104,119841,104,119945,104,119997,104,120049,104,120101,104,120153,104,120205,104,120257,104,120309,104,120361,104,120413,104,120465,104,1211,104,1392,104,5058,104,65320,72,8459,72,8460,72,8461,72,119815,72,119867,72,119919,72,120023,72,120179,72,120231,72,120283,72,120335,72,120387,72,120439,72,919,72,120494,72,120552,72,120610,72,120668,72,120726,72,11406,72,5051,72,5500,72,42215,72,66255,72,731,105,9075,105,65353,105,8560,105,8505,105,8520,105,119842,105,119894,105,119946,105,119998,105,120050,105,120102,105,120154,105,120206,105,120258,105,120310,105,120362,105,120414,105,120466,105,120484,105,618,105,617,105,953,105,8126,105,890,105,120522,105,120580,105,120638,105,120696,105,120754,105,1110,105,42567,105,1231,105,43893,105,5029,105,71875,105,65354,106,8521,106,119843,106,119895,106,119947,106,119999,106,120051,106,120103,106,120155,106,120207,106,120259,106,120311,106,120363,106,120415,106,120467,106,1011,106,1112,106,65322,74,119817,74,119869,74,119921,74,119973,74,120025,74,120077,74,120129,74,120181,74,120233,74,120285,74,120337,74,120389,74,120441,74,42930,74,895,74,1032,74,5035,74,5261,74,42201,74,119844,107,119896,107,119948,107,120000,107,120052,107,120104,107,120156,107,120208,107,120260,107,120312,107,120364,107,120416,107,120468,107,8490,75,65323,75,119818,75,119870,75,119922,75,119974,75,120026,75,120078,75,120130,75,120182,75,120234,75,120286,75,120338,75,120390,75,120442,75,922,75,120497,75,120555,75,120613,75,120671,75,120729,75,11412,75,5094,75,5845,75,42199,75,66840,75,1472,108,8739,73,9213,73,65512,73,1633,108,1777,73,66336,108,125127,108,120783,73,120793,73,120803,73,120813,73,120823,73,130033,73,65321,73,8544,73,8464,73,8465,73,119816,73,119868,73,119920,73,120024,73,120128,73,120180,73,120232,73,120284,73,120336,73,120388,73,120440,73,65356,108,8572,73,8467,108,119845,108,119897,108,119949,108,120001,108,120053,108,120105,73,120157,73,120209,73,120261,73,120313,73,120365,73,120417,73,120469,73,448,73,120496,73,120554,73,120612,73,120670,73,120728,73,11410,73,1030,73,1216,73,1493,108,1503,108,1575,108,126464,108,126592,108,65166,108,65165,108,1994,108,11599,73,5825,73,42226,73,93992,73,66186,124,66313,124,119338,76,8556,76,8466,76,119819,76,119871,76,119923,76,120027,76,120079,76,120131,76,120183,76,120235,76,120287,76,120339,76,120391,76,120443,76,11472,76,5086,76,5290,76,42209,76,93974,76,71843,76,71858,76,66587,76,66854,76,65325,77,8559,77,8499,77,119820,77,119872,77,119924,77,120028,77,120080,77,120132,77,120184,77,120236,77,120288,77,120340,77,120392,77,120444,77,924,77,120499,77,120557,77,120615,77,120673,77,120731,77,1018,77,11416,77,5047,77,5616,77,5846,77,42207,77,66224,77,66321,77,119847,110,119899,110,119951,110,120003,110,120055,110,120107,110,120159,110,120211,110,120263,110,120315,110,120367,110,120419,110,120471,110,1400,110,1404,110,65326,78,8469,78,119821,78,119873,78,119925,78,119977,78,120029,78,120081,78,120185,78,120237,78,120289,78,120341,78,120393,78,120445,78,925,78,120500,78,120558,78,120616,78,120674,78,120732,78,11418,78,42208,78,66835,78,3074,111,3202,111,3330,111,3458,111,2406,111,2662,111,2790,111,3046,111,3174,111,3302,111,3430,111,3664,111,3792,111,4160,111,1637,111,1781,111,65359,111,8500,111,119848,111,119900,111,119952,111,120056,111,120108,111,120160,111,120212,111,120264,111,120316,111,120368,111,120420,111,120472,111,7439,111,7441,111,43837,111,959,111,120528,111,120586,111,120644,111,120702,111,120760,111,963,111,120532,111,120590,111,120648,111,120706,111,120764,111,11423,111,4351,111,1413,111,1505,111,1607,111,126500,111,126564,111,126596,111,65259,111,65260,111,65258,111,65257,111,1726,111,64428,111,64429,111,64427,111,64426,111,1729,111,64424,111,64425,111,64423,111,64422,111,1749,111,3360,111,4125,111,66794,111,71880,111,71895,111,66604,111,1984,79,2534,79,2918,79,12295,79,70864,79,71904,79,120782,79,120792,79,120802,79,120812,79,120822,79,130032,79,65327,79,119822,79,119874,79,119926,79,119978,79,120030,79,120082,79,120134,79,120186,79,120238,79,120290,79,120342,79,120394,79,120446,79,927,79,120502,79,120560,79,120618,79,120676,79,120734,79,11422,79,1365,79,11604,79,4816,79,2848,79,66754,79,42227,79,71861,79,66194,79,66219,79,66564,79,66838,79,9076,112,65360,112,119849,112,119901,112,119953,112,120005,112,120057,112,120109,112,120161,112,120213,112,120265,112,120317,112,120369,112,120421,112,120473,112,961,112,120530,112,120544,112,120588,112,120602,112,120646,112,120660,112,120704,112,120718,112,120762,112,120776,112,11427,112,65328,80,8473,80,119823,80,119875,80,119927,80,119979,80,120031,80,120083,80,120187,80,120239,80,120291,80,120343,80,120395,80,120447,80,929,80,120504,80,120562,80,120620,80,120678,80,120736,80,11426,80,5090,80,5229,80,42193,80,66197,80,119850,113,119902,113,119954,113,120006,113,120058,113,120110,113,120162,113,120214,113,120266,113,120318,113,120370,113,120422,113,120474,113,1307,113,1379,113,1382,113,8474,81,119824,81,119876,81,119928,81,119980,81,120032,81,120084,81,120188,81,120240,81,120292,81,120344,81,120396,81,120448,81,11605,81,119851,114,119903,114,119955,114,120007,114,120059,114,120111,114,120163,114,120215,114,120267,114,120319,114,120371,114,120423,114,120475,114,43847,114,43848,114,7462,114,11397,114,43905,114,119318,82,8475,82,8476,82,8477,82,119825,82,119877,82,119929,82,120033,82,120189,82,120241,82,120293,82,120345,82,120397,82,120449,82,422,82,5025,82,5074,82,66740,82,5511,82,42211,82,94005,82,65363,115,119852,115,119904,115,119956,115,120008,115,120060,115,120112,115,120164,115,120216,115,120268,115,120320,115,120372,115,120424,115,120476,115,42801,115,445,115,1109,115,43946,115,71873,115,66632,115,65331,83,119826,83,119878,83,119930,83,119982,83,120034,83,120086,83,120138,83,120190,83,120242,83,120294,83,120346,83,120398,83,120450,83,1029,83,1359,83,5077,83,5082,83,42210,83,94010,83,66198,83,66592,83,119853,116,119905,116,119957,116,120009,116,120061,116,120113,116,120165,116,120217,116,120269,116,120321,116,120373,116,120425,116,120477,116,8868,84,10201,84,128872,84,65332,84,119827,84,119879,84,119931,84,119983,84,120035,84,120087,84,120139,84,120191,84,120243,84,120295,84,120347,84,120399,84,120451,84,932,84,120507,84,120565,84,120623,84,120681,84,120739,84,11430,84,5026,84,42196,84,93962,84,71868,84,66199,84,66225,84,66325,84,119854,117,119906,117,119958,117,120010,117,120062,117,120114,117,120166,117,120218,117,120270,117,120322,117,120374,117,120426,117,120478,117,42911,117,7452,117,43854,117,43858,117,651,117,965,117,120534,117,120592,117,120650,117,120708,117,120766,117,1405,117,66806,117,71896,117,8746,85,8899,85,119828,85,119880,85,119932,85,119984,85,120036,85,120088,85,120140,85,120192,85,120244,85,120296,85,120348,85,120400,85,120452,85,1357,85,4608,85,66766,85,5196,85,42228,85,94018,85,71864,85,8744,118,8897,118,65366,118,8564,118,119855,118,119907,118,119959,118,120011,118,120063,118,120115,118,120167,118,120219,118,120271,118,120323,118,120375,118,120427,118,120479,118,7456,118,957,118,120526,118,120584,118,120642,118,120700,118,120758,118,1141,118,1496,118,71430,118,43945,118,71872,118,119309,86,1639,86,1783,86,8548,86,119829,86,119881,86,119933,86,119985,86,120037,86,120089,86,120141,86,120193,86,120245,86,120297,86,120349,86,120401,86,120453,86,1140,86,11576,86,5081,86,5167,86,42719,86,42214,86,93960,86,71840,86,66845,86,623,119,119856,119,119908,119,119960,119,120012,119,120064,119,120116,119,120168,119,120220,119,120272,119,120324,119,120376,119,120428,119,120480,119,7457,119,1121,119,1309,119,1377,119,71434,119,71438,119,71439,119,43907,119,71919,87,71910,87,119830,87,119882,87,119934,87,119986,87,120038,87,120090,87,120142,87,120194,87,120246,87,120298,87,120350,87,120402,87,120454,87,1308,87,5043,87,5076,87,42218,87,5742,120,10539,120,10540,120,10799,120,65368,120,8569,120,119857,120,119909,120,119961,120,120013,120,120065,120,120117,120,120169,120,120221,120,120273,120,120325,120,120377,120,120429,120,120481,120,5441,120,5501,120,5741,88,9587,88,66338,88,71916,88,65336,88,8553,88,119831,88,119883,88,119935,88,119987,88,120039,88,120091,88,120143,88,120195,88,120247,88,120299,88,120351,88,120403,88,120455,88,42931,88,935,88,120510,88,120568,88,120626,88,120684,88,120742,88,11436,88,11613,88,5815,88,42219,88,66192,88,66228,88,66327,88,66855,88,611,121,7564,121,65369,121,119858,121,119910,121,119962,121,120014,121,120066,121,120118,121,120170,121,120222,121,120274,121,120326,121,120378,121,120430,121,120482,121,655,121,7935,121,43866,121,947,121,8509,121,120516,121,120574,121,120632,121,120690,121,120748,121,1199,121,4327,121,71900,121,65337,89,119832,89,119884,89,119936,89,119988,89,120040,89,120092,89,120144,89,120196,89,120248,89,120300,89,120352,89,120404,89,120456,89,933,89,978,89,120508,89,120566,89,120624,89,120682,89,120740,89,11432,89,1198,89,5033,89,5053,89,42220,89,94019,89,71844,89,66226,89,119859,122,119911,122,119963,122,120015,122,120067,122,120119,122,120171,122,120223,122,120275,122,120327,122,120379,122,120431,122,120483,122,7458,122,43923,122,71876,122,66293,90,71909,90,65338,90,8484,90,8488,90,119833,90,119885,90,119937,90,119989,90,120041,90,120197,90,120249,90,120301,90,120353,90,120405,90,120457,90,918,90,120493,90,120551,90,120609,90,120667,90,120725,90,5059,90,42204,90,71849,90,65282,34,65284,36,65285,37,65286,38,65290,42,65291,43,65294,46,65295,47,65296,48,65297,49,65298,50,65299,51,65300,52,65301,53,65302,54,65303,55,65304,56,65305,57,65308,60,65309,61,65310,62,65312,64,65316,68,65318,70,65319,71,65324,76,65329,81,65330,82,65333,85,65334,86,65335,87,65343,95,65346,98,65348,100,65350,102,65355,107,65357,109,65358,110,65361,113,65362,114,65364,116,65365,117,65367,119,65370,122,65371,123,65373,125,119846,109],\\\"_default\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"cs\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"de\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"es\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"fr\\\":[65374,126,65306,58,65281,33,8216,96,8245,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"it\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ja\\\":[8211,45,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65292,44,65307,59],\\\"ko\\\":[8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pl\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"pt-BR\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"qps-ploc\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"ru\\\":[65374,126,65306,58,65281,33,8216,96,8217,96,8245,96,180,96,12494,47,305,105,921,73,1009,112,215,120,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"tr\\\":[160,32,8211,45,65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65288,40,65289,41,65292,44,65307,59,65311,63],\\\"zh-hans\\\":[65374,126,65306,58,65281,33,8245,96,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65288,40,65289,41],\\\"zh-hant\\\":[8211,45,65374,126,180,96,12494,47,1047,51,1073,54,1072,97,1040,65,1068,98,1042,66,1089,99,1057,67,1077,101,1045,69,1053,72,305,105,1050,75,921,73,1052,77,1086,111,1054,79,1009,112,1088,112,1056,80,1075,114,1058,84,215,120,1093,120,1061,88,1091,121,1059,89,65283,35,65307,59]}');\n});\nAmbiguousCharacters.cache = new LRUCachedFunction((locales) => {\n    function arrayToMap(arr) {\n        const result = new Map();\n        for (let i = 0; i < arr.length; i += 2) {\n            result.set(arr[i], arr[i + 1]);\n        }\n        return result;\n    }\n    function mergeMaps(map1, map2) {\n        const result = new Map(map1);\n        for (const [key, value] of map2) {\n            result.set(key, value);\n        }\n        return result;\n    }\n    function intersectMaps(map1, map2) {\n        if (!map1) {\n            return map2;\n        }\n        const result = new Map();\n        for (const [key, value] of map1) {\n            if (map2.has(key)) {\n                result.set(key, value);\n            }\n        }\n        return result;\n    }\n    const data = _a.ambiguousCharacterData.value;\n    let filteredLocales = locales.filter((l) => !l.startsWith('_') && l in data);\n    if (filteredLocales.length === 0) {\n        filteredLocales = ['_default'];\n    }\n    let languageSpecificMap = undefined;\n    for (const locale of filteredLocales) {\n        const map = arrayToMap(data[locale]);\n        languageSpecificMap = intersectMaps(languageSpecificMap, map);\n    }\n    const commonMap = arrayToMap(data['_common']);\n    const map = mergeMaps(commonMap, languageSpecificMap);\n    return new _a(map);\n});\nAmbiguousCharacters._locales = new Lazy(() => Object.keys(_a.ambiguousCharacterData.value).filter((k) => !k.startsWith('_')));\nexport class InvisibleCharacters {\n    static getRawData() {\n        // Generated using https://github.com/hediet/vscode-unicode-data\n        return JSON.parse('[9,10,11,12,13,32,127,160,173,847,1564,4447,4448,6068,6069,6155,6156,6157,6158,7355,7356,8192,8193,8194,8195,8196,8197,8198,8199,8200,8201,8202,8203,8204,8205,8206,8207,8234,8235,8236,8237,8238,8239,8287,8288,8289,8290,8291,8292,8293,8294,8295,8296,8297,8298,8299,8300,8301,8302,8303,10240,12288,12644,65024,65025,65026,65027,65028,65029,65030,65031,65032,65033,65034,65035,65036,65037,65038,65039,65279,65440,65520,65521,65522,65523,65524,65525,65526,65527,65528,65532,78844,119155,119156,119157,119158,119159,119160,119161,119162,917504,917505,917506,917507,917508,917509,917510,917511,917512,917513,917514,917515,917516,917517,917518,917519,917520,917521,917522,917523,917524,917525,917526,917527,917528,917529,917530,917531,917532,917533,917534,917535,917536,917537,917538,917539,917540,917541,917542,917543,917544,917545,917546,917547,917548,917549,917550,917551,917552,917553,917554,917555,917556,917557,917558,917559,917560,917561,917562,917563,917564,917565,917566,917567,917568,917569,917570,917571,917572,917573,917574,917575,917576,917577,917578,917579,917580,917581,917582,917583,917584,917585,917586,917587,917588,917589,917590,917591,917592,917593,917594,917595,917596,917597,917598,917599,917600,917601,917602,917603,917604,917605,917606,917607,917608,917609,917610,917611,917612,917613,917614,917615,917616,917617,917618,917619,917620,917621,917622,917623,917624,917625,917626,917627,917628,917629,917630,917631,917760,917761,917762,917763,917764,917765,917766,917767,917768,917769,917770,917771,917772,917773,917774,917775,917776,917777,917778,917779,917780,917781,917782,917783,917784,917785,917786,917787,917788,917789,917790,917791,917792,917793,917794,917795,917796,917797,917798,917799,917800,917801,917802,917803,917804,917805,917806,917807,917808,917809,917810,917811,917812,917813,917814,917815,917816,917817,917818,917819,917820,917821,917822,917823,917824,917825,917826,917827,917828,917829,917830,917831,917832,917833,917834,917835,917836,917837,917838,917839,917840,917841,917842,917843,917844,917845,917846,917847,917848,917849,917850,917851,917852,917853,917854,917855,917856,917857,917858,917859,917860,917861,917862,917863,917864,917865,917866,917867,917868,917869,917870,917871,917872,917873,917874,917875,917876,917877,917878,917879,917880,917881,917882,917883,917884,917885,917886,917887,917888,917889,917890,917891,917892,917893,917894,917895,917896,917897,917898,917899,917900,917901,917902,917903,917904,917905,917906,917907,917908,917909,917910,917911,917912,917913,917914,917915,917916,917917,917918,917919,917920,917921,917922,917923,917924,917925,917926,917927,917928,917929,917930,917931,917932,917933,917934,917935,917936,917937,917938,917939,917940,917941,917942,917943,917944,917945,917946,917947,917948,917949,917950,917951,917952,917953,917954,917955,917956,917957,917958,917959,917960,917961,917962,917963,917964,917965,917966,917967,917968,917969,917970,917971,917972,917973,917974,917975,917976,917977,917978,917979,917980,917981,917982,917983,917984,917985,917986,917987,917988,917989,917990,917991,917992,917993,917994,917995,917996,917997,917998,917999]');\n    }\n    static getData() {\n        if (!this._data) {\n            this._data = new Set(InvisibleCharacters.getRawData());\n        }\n        return this._data;\n    }\n    static isInvisibleCharacter(codePoint) {\n        return InvisibleCharacters.getData().has(codePoint);\n    }\n    static get codePoints() {\n        return InvisibleCharacters.getData();\n    }\n}\nInvisibleCharacters._data = undefined;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * Can be passed into the Delayed to defer using a microtask\n * */\nexport const MicrotaskDelay = Symbol('MicrotaskDelay');\n","import { compare, compareIgnoreCase, compareSubstring, compareSubstringIgnoreCase } from './strings.js';\nexport class StringIterator {\n    constructor() {\n        this._value = '';\n        this._pos = 0;\n    }\n    reset(key) {\n        this._value = key;\n        this._pos = 0;\n        return this;\n    }\n    next() {\n        this._pos += 1;\n        return this;\n    }\n    hasNext() {\n        return this._pos < this._value.length - 1;\n    }\n    cmp(a) {\n        const aCode = a.charCodeAt(0);\n        const thisCode = this._value.charCodeAt(this._pos);\n        return aCode - thisCode;\n    }\n    value() {\n        return this._value[this._pos];\n    }\n}\nexport class ConfigKeysIterator {\n    constructor(_caseSensitive = true) {\n        this._caseSensitive = _caseSensitive;\n    }\n    reset(key) {\n        this._value = key;\n        this._from = 0;\n        this._to = 0;\n        return this.next();\n    }\n    hasNext() {\n        return this._to < this._value.length;\n    }\n    next() {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        let justSeps = true;\n        for (; this._to < this._value.length; this._to++) {\n            const ch = this._value.charCodeAt(this._to);\n            if (ch === 46 /* CharCode.Period */) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    }\n    cmp(a) {\n        return this._caseSensitive\n            ? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n            : compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n    }\n    value() {\n        return this._value.substring(this._from, this._to);\n    }\n}\nexport class PathIterator {\n    constructor(_splitOnBackslash = true, _caseSensitive = true) {\n        this._splitOnBackslash = _splitOnBackslash;\n        this._caseSensitive = _caseSensitive;\n    }\n    reset(key) {\n        this._from = 0;\n        this._to = 0;\n        this._value = key;\n        this._valueLen = key.length;\n        for (let pos = key.length - 1; pos >= 0; pos--, this._valueLen--) {\n            const ch = this._value.charCodeAt(pos);\n            if (!(ch === 47 /* CharCode.Slash */ || this._splitOnBackslash && ch === 92 /* CharCode.Backslash */)) {\n                break;\n            }\n        }\n        return this.next();\n    }\n    hasNext() {\n        return this._to < this._valueLen;\n    }\n    next() {\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\n        this._from = this._to;\n        let justSeps = true;\n        for (; this._to < this._valueLen; this._to++) {\n            const ch = this._value.charCodeAt(this._to);\n            if (ch === 47 /* CharCode.Slash */ || this._splitOnBackslash && ch === 92 /* CharCode.Backslash */) {\n                if (justSeps) {\n                    this._from++;\n                }\n                else {\n                    break;\n                }\n            }\n            else {\n                justSeps = false;\n            }\n        }\n        return this;\n    }\n    cmp(a) {\n        return this._caseSensitive\n            ? compareSubstring(a, this._value, 0, a.length, this._from, this._to)\n            : compareSubstringIgnoreCase(a, this._value, 0, a.length, this._from, this._to);\n    }\n    value() {\n        return this._value.substring(this._from, this._to);\n    }\n}\nexport class UriIterator {\n    constructor(_ignorePathCasing, _ignoreQueryAndFragment) {\n        this._ignorePathCasing = _ignorePathCasing;\n        this._ignoreQueryAndFragment = _ignoreQueryAndFragment;\n        this._states = [];\n        this._stateIdx = 0;\n    }\n    reset(key) {\n        this._value = key;\n        this._states = [];\n        if (this._value.scheme) {\n            this._states.push(1 /* UriIteratorState.Scheme */);\n        }\n        if (this._value.authority) {\n            this._states.push(2 /* UriIteratorState.Authority */);\n        }\n        if (this._value.path) {\n            this._pathIterator = new PathIterator(false, !this._ignorePathCasing(key));\n            this._pathIterator.reset(key.path);\n            if (this._pathIterator.value()) {\n                this._states.push(3 /* UriIteratorState.Path */);\n            }\n        }\n        if (!this._ignoreQueryAndFragment(key)) {\n            if (this._value.query) {\n                this._states.push(4 /* UriIteratorState.Query */);\n            }\n            if (this._value.fragment) {\n                this._states.push(5 /* UriIteratorState.Fragment */);\n            }\n        }\n        this._stateIdx = 0;\n        return this;\n    }\n    next() {\n        if (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */ && this._pathIterator.hasNext()) {\n            this._pathIterator.next();\n        }\n        else {\n            this._stateIdx += 1;\n        }\n        return this;\n    }\n    hasNext() {\n        return (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */ && this._pathIterator.hasNext())\n            || this._stateIdx < this._states.length - 1;\n    }\n    cmp(a) {\n        if (this._states[this._stateIdx] === 1 /* UriIteratorState.Scheme */) {\n            return compareIgnoreCase(a, this._value.scheme);\n        }\n        else if (this._states[this._stateIdx] === 2 /* UriIteratorState.Authority */) {\n            return compareIgnoreCase(a, this._value.authority);\n        }\n        else if (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */) {\n            return this._pathIterator.cmp(a);\n        }\n        else if (this._states[this._stateIdx] === 4 /* UriIteratorState.Query */) {\n            return compare(a, this._value.query);\n        }\n        else if (this._states[this._stateIdx] === 5 /* UriIteratorState.Fragment */) {\n            return compare(a, this._value.fragment);\n        }\n        throw new Error();\n    }\n    value() {\n        if (this._states[this._stateIdx] === 1 /* UriIteratorState.Scheme */) {\n            return this._value.scheme;\n        }\n        else if (this._states[this._stateIdx] === 2 /* UriIteratorState.Authority */) {\n            return this._value.authority;\n        }\n        else if (this._states[this._stateIdx] === 3 /* UriIteratorState.Path */) {\n            return this._pathIterator.value();\n        }\n        else if (this._states[this._stateIdx] === 4 /* UriIteratorState.Query */) {\n            return this._value.query;\n        }\n        else if (this._states[this._stateIdx] === 5 /* UriIteratorState.Fragment */) {\n            return this._value.fragment;\n        }\n        throw new Error();\n    }\n}\nclass TernarySearchTreeNode {\n    constructor() {\n        this.height = 1;\n    }\n    rotateLeft() {\n        const tmp = this.right;\n        this.right = tmp.left;\n        tmp.left = this;\n        this.updateHeight();\n        tmp.updateHeight();\n        return tmp;\n    }\n    rotateRight() {\n        const tmp = this.left;\n        this.left = tmp.right;\n        tmp.right = this;\n        this.updateHeight();\n        tmp.updateHeight();\n        return tmp;\n    }\n    updateHeight() {\n        this.height = 1 + Math.max(this.heightLeft, this.heightRight);\n    }\n    balanceFactor() {\n        return this.heightRight - this.heightLeft;\n    }\n    get heightLeft() {\n        var _a, _b;\n        return (_b = (_a = this.left) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : 0;\n    }\n    get heightRight() {\n        var _a, _b;\n        return (_b = (_a = this.right) === null || _a === void 0 ? void 0 : _a.height) !== null && _b !== void 0 ? _b : 0;\n    }\n}\nexport class TernarySearchTree {\n    static forUris(ignorePathCasing = () => false, ignoreQueryAndFragment = () => false) {\n        return new TernarySearchTree(new UriIterator(ignorePathCasing, ignoreQueryAndFragment));\n    }\n    static forStrings() {\n        return new TernarySearchTree(new StringIterator());\n    }\n    static forConfigKeys() {\n        return new TernarySearchTree(new ConfigKeysIterator());\n    }\n    constructor(segments) {\n        this._iter = segments;\n    }\n    clear() {\n        this._root = undefined;\n    }\n    set(key, element) {\n        const iter = this._iter.reset(key);\n        let node;\n        if (!this._root) {\n            this._root = new TernarySearchTreeNode();\n            this._root.segment = iter.value();\n        }\n        const stack = [];\n        // find insert_node\n        node = this._root;\n        while (true) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                if (!node.left) {\n                    node.left = new TernarySearchTreeNode();\n                    node.left.segment = iter.value();\n                }\n                stack.push([-1 /* Dir.Left */, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                if (!node.right) {\n                    node.right = new TernarySearchTreeNode();\n                    node.right.segment = iter.value();\n                }\n                stack.push([1 /* Dir.Right */, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                if (!node.mid) {\n                    node.mid = new TernarySearchTreeNode();\n                    node.mid.segment = iter.value();\n                }\n                stack.push([0 /* Dir.Mid */, node]);\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        // set value\n        const oldElement = node.value;\n        node.value = element;\n        node.key = key;\n        // balance\n        for (let i = stack.length - 1; i >= 0; i--) {\n            const node = stack[i][1];\n            node.updateHeight();\n            const bf = node.balanceFactor();\n            if (bf < -1 || bf > 1) {\n                // needs rotate\n                const d1 = stack[i][0];\n                const d2 = stack[i + 1][0];\n                if (d1 === 1 /* Dir.Right */ && d2 === 1 /* Dir.Right */) {\n                    //right, right -> rotate left\n                    stack[i][1] = node.rotateLeft();\n                }\n                else if (d1 === -1 /* Dir.Left */ && d2 === -1 /* Dir.Left */) {\n                    // left, left -> rotate right\n                    stack[i][1] = node.rotateRight();\n                }\n                else if (d1 === 1 /* Dir.Right */ && d2 === -1 /* Dir.Left */) {\n                    // right, left -> double rotate right, left\n                    node.right = stack[i + 1][1] = stack[i + 1][1].rotateRight();\n                    stack[i][1] = node.rotateLeft();\n                }\n                else if (d1 === -1 /* Dir.Left */ && d2 === 1 /* Dir.Right */) {\n                    // left, right -> double rotate left, right\n                    node.left = stack[i + 1][1] = stack[i + 1][1].rotateLeft();\n                    stack[i][1] = node.rotateRight();\n                }\n                else {\n                    throw new Error();\n                }\n                // patch path to parent\n                if (i > 0) {\n                    switch (stack[i - 1][0]) {\n                        case -1 /* Dir.Left */:\n                            stack[i - 1][1].left = stack[i][1];\n                            break;\n                        case 1 /* Dir.Right */:\n                            stack[i - 1][1].right = stack[i][1];\n                            break;\n                        case 0 /* Dir.Mid */:\n                            stack[i - 1][1].mid = stack[i][1];\n                            break;\n                    }\n                }\n                else {\n                    this._root = stack[0][1];\n                }\n            }\n        }\n        return oldElement;\n    }\n    get(key) {\n        var _a;\n        return (_a = this._getNode(key)) === null || _a === void 0 ? void 0 : _a.value;\n    }\n    _getNode(key) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node;\n    }\n    has(key) {\n        const node = this._getNode(key);\n        return !((node === null || node === void 0 ? void 0 : node.value) === undefined && (node === null || node === void 0 ? void 0 : node.mid) === undefined);\n    }\n    delete(key) {\n        return this._delete(key, false);\n    }\n    deleteSuperstr(key) {\n        return this._delete(key, true);\n    }\n    _delete(key, superStr) {\n        var _a;\n        const iter = this._iter.reset(key);\n        const stack = [];\n        let node = this._root;\n        // find node\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                stack.push([-1 /* Dir.Left */, node]);\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                stack.push([1 /* Dir.Right */, node]);\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                stack.push([0 /* Dir.Mid */, node]);\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        if (!node) {\n            // node not found\n            return;\n        }\n        if (superStr) {\n            // removing children, reset height\n            node.left = undefined;\n            node.mid = undefined;\n            node.right = undefined;\n            node.height = 1;\n        }\n        else {\n            // removing element\n            node.key = undefined;\n            node.value = undefined;\n        }\n        // BST node removal\n        if (!node.mid && !node.value) {\n            if (node.left && node.right) {\n                // full node\n                // replace deleted-node with the min-node of the right branch.\n                // If there is no true min-node leave things as they are\n                const min = this._min(node.right);\n                if (min.key) {\n                    const { key, value, segment } = min;\n                    this._delete(min.key, false);\n                    node.key = key;\n                    node.value = value;\n                    node.segment = segment;\n                }\n            }\n            else {\n                // empty or half empty\n                const newChild = (_a = node.left) !== null && _a !== void 0 ? _a : node.right;\n                if (stack.length > 0) {\n                    const [dir, parent] = stack[stack.length - 1];\n                    switch (dir) {\n                        case -1 /* Dir.Left */:\n                            parent.left = newChild;\n                            break;\n                        case 0 /* Dir.Mid */:\n                            parent.mid = newChild;\n                            break;\n                        case 1 /* Dir.Right */:\n                            parent.right = newChild;\n                            break;\n                    }\n                }\n                else {\n                    this._root = newChild;\n                }\n            }\n        }\n        // AVL balance\n        for (let i = stack.length - 1; i >= 0; i--) {\n            const node = stack[i][1];\n            node.updateHeight();\n            const bf = node.balanceFactor();\n            if (bf > 1) {\n                // right heavy\n                if (node.right.balanceFactor() >= 0) {\n                    // right, right -> rotate left\n                    stack[i][1] = node.rotateLeft();\n                }\n                else {\n                    // right, left -> double rotate\n                    node.right = node.right.rotateRight();\n                    stack[i][1] = node.rotateLeft();\n                }\n            }\n            else if (bf < -1) {\n                // left heavy\n                if (node.left.balanceFactor() <= 0) {\n                    // left, left -> rotate right\n                    stack[i][1] = node.rotateRight();\n                }\n                else {\n                    // left, right -> double rotate\n                    node.left = node.left.rotateLeft();\n                    stack[i][1] = node.rotateRight();\n                }\n            }\n            // patch path to parent\n            if (i > 0) {\n                switch (stack[i - 1][0]) {\n                    case -1 /* Dir.Left */:\n                        stack[i - 1][1].left = stack[i][1];\n                        break;\n                    case 1 /* Dir.Right */:\n                        stack[i - 1][1].right = stack[i][1];\n                        break;\n                    case 0 /* Dir.Mid */:\n                        stack[i - 1][1].mid = stack[i][1];\n                        break;\n                }\n            }\n            else {\n                this._root = stack[0][1];\n            }\n        }\n    }\n    _min(node) {\n        while (node.left) {\n            node = node.left;\n        }\n        return node;\n    }\n    findSubstr(key) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        let candidate = undefined;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                candidate = node.value || candidate;\n                node = node.mid;\n            }\n            else {\n                break;\n            }\n        }\n        return node && node.value || candidate;\n    }\n    findSuperstr(key) {\n        return this._findSuperstrOrElement(key, false);\n    }\n    _findSuperstrOrElement(key, allowValue) {\n        const iter = this._iter.reset(key);\n        let node = this._root;\n        while (node) {\n            const val = iter.cmp(node.segment);\n            if (val > 0) {\n                // left\n                node = node.left;\n            }\n            else if (val < 0) {\n                // right\n                node = node.right;\n            }\n            else if (iter.hasNext()) {\n                // mid\n                iter.next();\n                node = node.mid;\n            }\n            else {\n                // collect\n                if (!node.mid) {\n                    if (allowValue) {\n                        return node.value;\n                    }\n                    else {\n                        return undefined;\n                    }\n                }\n                else {\n                    return this._entries(node.mid);\n                }\n            }\n        }\n        return undefined;\n    }\n    forEach(callback) {\n        for (const [key, value] of this) {\n            callback(value, key);\n        }\n    }\n    *[Symbol.iterator]() {\n        yield* this._entries(this._root);\n    }\n    _entries(node) {\n        const result = [];\n        this._dfsEntries(node, result);\n        return result[Symbol.iterator]();\n    }\n    _dfsEntries(node, bucket) {\n        // DFS\n        if (!node) {\n            return;\n        }\n        if (node.left) {\n            this._dfsEntries(node.left, bucket);\n        }\n        if (node.value) {\n            bucket.push([node.key, node.value]);\n        }\n        if (node.mid) {\n            this._dfsEntries(node.mid, bucket);\n        }\n        if (node.right) {\n            this._dfsEntries(node.right, bucket);\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nfunction countMapFrom(values) {\n    var _a;\n    const map = new Map();\n    for (const value of values) {\n        map.set(value, ((_a = map.get(value)) !== null && _a !== void 0 ? _a : 0) + 1);\n    }\n    return map;\n}\n/**\n * Implementation of tf-idf (term frequency-inverse document frequency) for a set of\n * documents where each document contains one or more chunks of text.\n * Each document is identified by a key, and the score for each document is computed\n * by taking the max score over all the chunks in the document.\n */\nexport class TfIdfCalculator {\n    constructor() {\n        /**\n         * Total number of chunks\n         */\n        this.chunkCount = 0;\n        this.chunkOccurrences = new Map();\n        this.documents = new Map();\n    }\n    calculateScores(query, token) {\n        const embedding = this.computeEmbedding(query);\n        const idfCache = new Map();\n        const scores = [];\n        // For each document, generate one score\n        for (const [key, doc] of this.documents) {\n            if (token.isCancellationRequested) {\n                return [];\n            }\n            for (const chunk of doc.chunks) {\n                const score = this.computeSimilarityScore(chunk, embedding, idfCache);\n                if (score > 0) {\n                    scores.push({ key, score });\n                }\n            }\n        }\n        return scores;\n    }\n    /**\n     * Count how many times each term (word) appears in a string.\n     */\n    static termFrequencies(input) {\n        return countMapFrom(TfIdfCalculator.splitTerms(input));\n    }\n    /**\n     * Break a string into terms (words).\n     */\n    static *splitTerms(input) {\n        const normalize = (word) => word.toLowerCase();\n        // Only match on words that are at least 3 characters long and start with a letter\n        for (const [word] of input.matchAll(/\\b\\p{Letter}[\\p{Letter}\\d]{2,}\\b/gu)) {\n            yield normalize(word);\n            // eslint-disable-next-line local/code-no-look-behind-regex\n            const camelParts = word.split(/(?<=[a-z])(?=[A-Z])/g);\n            if (camelParts.length > 1) {\n                for (const part of camelParts) {\n                    // Require at least 3 letters in the parts of a camel case word\n                    if (part.length > 2 && /\\p{Letter}{3,}/gu.test(part)) {\n                        yield normalize(part);\n                    }\n                }\n            }\n        }\n    }\n    updateDocuments(documents) {\n        var _a;\n        for (const { key } of documents) {\n            this.deleteDocument(key);\n        }\n        for (const doc of documents) {\n            const chunks = [];\n            for (const text of doc.textChunks) {\n                // TODO: See if we can compute the tf lazily\n                // The challenge is that we need to also update the `chunkOccurrences`\n                // and all of those updates need to get flushed before the real TF-IDF of\n                // anything is computed.\n                const tf = TfIdfCalculator.termFrequencies(text);\n                // Update occurrences list\n                for (const term of tf.keys()) {\n                    this.chunkOccurrences.set(term, ((_a = this.chunkOccurrences.get(term)) !== null && _a !== void 0 ? _a : 0) + 1);\n                }\n                chunks.push({ text, tf });\n            }\n            this.chunkCount += chunks.length;\n            this.documents.set(doc.key, { chunks });\n        }\n        return this;\n    }\n    deleteDocument(key) {\n        const doc = this.documents.get(key);\n        if (!doc) {\n            return;\n        }\n        this.documents.delete(key);\n        this.chunkCount -= doc.chunks.length;\n        // Update term occurrences for the document\n        for (const chunk of doc.chunks) {\n            for (const term of chunk.tf.keys()) {\n                const currentOccurrences = this.chunkOccurrences.get(term);\n                if (typeof currentOccurrences === 'number') {\n                    const newOccurrences = currentOccurrences - 1;\n                    if (newOccurrences <= 0) {\n                        this.chunkOccurrences.delete(term);\n                    }\n                    else {\n                        this.chunkOccurrences.set(term, newOccurrences);\n                    }\n                }\n            }\n        }\n    }\n    computeSimilarityScore(chunk, queryEmbedding, idfCache) {\n        // Compute the dot product between the chunk's embedding and the query embedding\n        // Note that the chunk embedding is computed lazily on a per-term basis.\n        // This lets us skip a large number of calculations because the majority\n        // of chunks do not share any terms with the query.\n        let sum = 0;\n        for (const [term, termTfidf] of Object.entries(queryEmbedding)) {\n            const chunkTf = chunk.tf.get(term);\n            if (!chunkTf) {\n                // Term does not appear in chunk so it has no contribution\n                continue;\n            }\n            let chunkIdf = idfCache.get(term);\n            if (typeof chunkIdf !== 'number') {\n                chunkIdf = this.computeIdf(term);\n                idfCache.set(term, chunkIdf);\n            }\n            const chunkTfidf = chunkTf * chunkIdf;\n            sum += chunkTfidf * termTfidf;\n        }\n        return sum;\n    }\n    computeEmbedding(input) {\n        const tf = TfIdfCalculator.termFrequencies(input);\n        return this.computeTfidf(tf);\n    }\n    computeIdf(term) {\n        var _a;\n        const chunkOccurrences = (_a = this.chunkOccurrences.get(term)) !== null && _a !== void 0 ? _a : 0;\n        return chunkOccurrences > 0\n            ? Math.log((this.chunkCount + 1) / chunkOccurrences)\n            : 0;\n    }\n    computeTfidf(termFrequencies) {\n        const embedding = Object.create(null);\n        for (const [word, occurrences] of termFrequencies) {\n            const idf = this.computeIdf(word);\n            if (idf > 0) {\n                embedding[word] = occurrences * idf;\n            }\n        }\n        return embedding;\n    }\n}\n/**\n * Normalize the scores to be between 0 and 1 and sort them decending.\n * @param scores array of scores from {@link TfIdfCalculator.calculateScores}\n * @returns normalized scores\n */\nexport function normalizeTfIdfScores(scores) {\n    var _a, _b;\n    // copy of scores\n    const result = scores.slice(0);\n    // sort descending\n    result.sort((a, b) => b.score - a.score);\n    // normalize\n    const max = (_b = (_a = result[0]) === null || _a === void 0 ? void 0 : _a.score) !== null && _b !== void 0 ? _b : 0;\n    if (max > 0) {\n        for (const score of result) {\n            score.score /= max;\n        }\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Codicon } from './codicons.js';\nexport var ThemeColor;\n(function (ThemeColor) {\n    function isThemeColor(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string';\n    }\n    ThemeColor.isThemeColor = isThemeColor;\n})(ThemeColor || (ThemeColor = {}));\nexport var ThemeIcon;\n(function (ThemeIcon) {\n    ThemeIcon.iconNameSegment = '[A-Za-z0-9]+';\n    ThemeIcon.iconNameExpression = '[A-Za-z0-9-]+';\n    ThemeIcon.iconModifierExpression = '~[A-Za-z]+';\n    ThemeIcon.iconNameCharacter = '[A-Za-z0-9~-]';\n    const ThemeIconIdRegex = new RegExp(`^(${ThemeIcon.iconNameExpression})(${ThemeIcon.iconModifierExpression})?$`);\n    function asClassNameArray(icon) {\n        const match = ThemeIconIdRegex.exec(icon.id);\n        if (!match) {\n            return asClassNameArray(Codicon.error);\n        }\n        const [, id, modifier] = match;\n        const classNames = ['codicon', 'codicon-' + id];\n        if (modifier) {\n            classNames.push('codicon-modifier-' + modifier.substring(1));\n        }\n        return classNames;\n    }\n    ThemeIcon.asClassNameArray = asClassNameArray;\n    function asClassName(icon) {\n        return asClassNameArray(icon).join(' ');\n    }\n    ThemeIcon.asClassName = asClassName;\n    function asCSSSelector(icon) {\n        return '.' + asClassNameArray(icon).join('.');\n    }\n    ThemeIcon.asCSSSelector = asCSSSelector;\n    function isThemeIcon(obj) {\n        return obj && typeof obj === 'object' && typeof obj.id === 'string' && (typeof obj.color === 'undefined' || ThemeColor.isThemeColor(obj.color));\n    }\n    ThemeIcon.isThemeIcon = isThemeIcon;\n    const _regexFromString = new RegExp(`^\\\\$\\\\((${ThemeIcon.iconNameExpression}(?:${ThemeIcon.iconModifierExpression})?)\\\\)$`);\n    function fromString(str) {\n        const match = _regexFromString.exec(str);\n        if (!match) {\n            return undefined;\n        }\n        const [, name] = match;\n        return { id: name };\n    }\n    ThemeIcon.fromString = fromString;\n    function fromId(id) {\n        return { id };\n    }\n    ThemeIcon.fromId = fromId;\n    function modify(icon, modifier) {\n        let id = icon.id;\n        const tildeIndex = id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            id = id.substring(0, tildeIndex);\n        }\n        if (modifier) {\n            id = `${id}~${modifier}`;\n        }\n        return { id };\n    }\n    ThemeIcon.modify = modify;\n    function getModifier(icon) {\n        const tildeIndex = icon.id.lastIndexOf('~');\n        if (tildeIndex !== -1) {\n            return icon.id.substring(tildeIndex + 1);\n        }\n        return undefined;\n    }\n    ThemeIcon.getModifier = getModifier;\n    function isEqual(ti1, ti2) {\n        var _a, _b;\n        return ti1.id === ti2.id && ((_a = ti1.color) === null || _a === void 0 ? void 0 : _a.id) === ((_b = ti2.color) === null || _b === void 0 ? void 0 : _b.id);\n    }\n    ThemeIcon.isEqual = isEqual;\n})(ThemeIcon || (ThemeIcon = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * @returns whether the provided parameter is a JavaScript String or not.\n */\nexport function isString(str) {\n    return (typeof str === 'string');\n}\n/**\n * @returns whether the provided parameter is of type `object` but **not**\n *\t`null`, an `array`, a `regexp`, nor a `date`.\n */\nexport function isObject(obj) {\n    // The method can't do a type cast since there are type (like strings) which\n    // are subclasses of any put not positvely matched by the function. Hence type\n    // narrowing results in wrong results.\n    return typeof obj === 'object'\n        && obj !== null\n        && !Array.isArray(obj)\n        && !(obj instanceof RegExp)\n        && !(obj instanceof Date);\n}\n/**\n * @returns whether the provided parameter is of type `Buffer` or Uint8Array dervived type\n */\nexport function isTypedArray(obj) {\n    const TypedArray = Object.getPrototypeOf(Uint8Array);\n    return typeof obj === 'object'\n        && obj instanceof TypedArray;\n}\n/**\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\n * @returns whether the provided parameter is a JavaScript Number or not.\n */\nexport function isNumber(obj) {\n    return (typeof obj === 'number' && !isNaN(obj));\n}\n/**\n * @returns whether the provided parameter is an Iterable, casting to the given generic\n */\nexport function isIterable(obj) {\n    return !!obj && typeof obj[Symbol.iterator] === 'function';\n}\n/**\n * @returns whether the provided parameter is a JavaScript Boolean or not.\n */\nexport function isBoolean(obj) {\n    return (obj === true || obj === false);\n}\n/**\n * @returns whether the provided parameter is undefined.\n */\nexport function isUndefined(obj) {\n    return (typeof obj === 'undefined');\n}\n/**\n * @returns whether the provided parameter is defined.\n */\nexport function isDefined(arg) {\n    return !isUndefinedOrNull(arg);\n}\n/**\n * @returns whether the provided parameter is undefined or null.\n */\nexport function isUndefinedOrNull(obj) {\n    return (isUndefined(obj) || obj === null);\n}\nexport function assertType(condition, type) {\n    if (!condition) {\n        throw new Error(type ? `Unexpected type, expected '${type}'` : 'Unexpected type');\n    }\n}\n/**\n * Asserts that the argument passed in is neither undefined nor null.\n */\nexport function assertIsDefined(arg) {\n    if (isUndefinedOrNull(arg)) {\n        throw new Error('Assertion Failed: argument is undefined or null');\n    }\n    return arg;\n}\n/**\n * @returns whether the provided parameter is a JavaScript Function or not.\n */\nexport function isFunction(obj) {\n    return (typeof obj === 'function');\n}\nexport function validateConstraints(args, constraints) {\n    const len = Math.min(args.length, constraints.length);\n    for (let i = 0; i < len; i++) {\n        validateConstraint(args[i], constraints[i]);\n    }\n}\nexport function validateConstraint(arg, constraint) {\n    if (isString(constraint)) {\n        if (typeof arg !== constraint) {\n            throw new Error(`argument does not match constraint: typeof ${constraint}`);\n        }\n    }\n    else if (isFunction(constraint)) {\n        try {\n            if (arg instanceof constraint) {\n                return;\n            }\n        }\n        catch (_a) {\n            // ignore\n        }\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\n            return;\n        }\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\n            return;\n        }\n        throw new Error(`argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true`);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function toUint8(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 255 /* Constants.MAX_UINT_8 */) {\n        return 255 /* Constants.MAX_UINT_8 */;\n    }\n    return v | 0;\n}\nexport function toUint32(v) {\n    if (v < 0) {\n        return 0;\n    }\n    if (v > 4294967295 /* Constants.MAX_UINT_32 */) {\n        return 4294967295 /* Constants.MAX_UINT_32 */;\n    }\n    return v | 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as paths from './path.js';\nimport { isWindows } from './platform.js';\nconst _schemePattern = /^\\w[\\w\\d+.-]*$/;\nconst _singleSlashStart = /^\\//;\nconst _doubleSlashStart = /^\\/\\//;\nfunction _validateUri(ret, _strict) {\n    // scheme, must be set\n    if (!ret.scheme && _strict) {\n        throw new Error(`[UriError]: Scheme is missing: {scheme: \"\", authority: \"${ret.authority}\", path: \"${ret.path}\", query: \"${ret.query}\", fragment: \"${ret.fragment}\"}`);\n    }\n    // scheme, https://tools.ietf.org/html/rfc3986#section-3.1\n    // ALPHA *( ALPHA / DIGIT / \"+\" / \"-\" / \".\" )\n    if (ret.scheme && !_schemePattern.test(ret.scheme)) {\n        throw new Error('[UriError]: Scheme contains illegal characters.');\n    }\n    // path, http://tools.ietf.org/html/rfc3986#section-3.3\n    // If a URI contains an authority component, then the path component\n    // must either be empty or begin with a slash (\"/\") character.  If a URI\n    // does not contain an authority component, then the path cannot begin\n    // with two slash characters (\"//\").\n    if (ret.path) {\n        if (ret.authority) {\n            if (!_singleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI contains an authority component, then the path component must either be empty or begin with a slash (\"/\") character');\n            }\n        }\n        else {\n            if (_doubleSlashStart.test(ret.path)) {\n                throw new Error('[UriError]: If a URI does not contain an authority component, then the path cannot begin with two slash characters (\"//\")');\n            }\n        }\n    }\n}\n// for a while we allowed uris *without* schemes and this is the migration\n// for them, e.g. an uri without scheme and without strict-mode warns and falls\n// back to the file-scheme. that should cause the least carnage and still be a\n// clear warning\nfunction _schemeFix(scheme, _strict) {\n    if (!scheme && !_strict) {\n        return 'file';\n    }\n    return scheme;\n}\n// implements a bit of https://tools.ietf.org/html/rfc3986#section-5\nfunction _referenceResolution(scheme, path) {\n    // the slash-character is our 'default base' as we don't\n    // support constructing URIs relative to other URIs. This\n    // also means that we alter and potentially break paths.\n    // see https://tools.ietf.org/html/rfc3986#section-5.1.4\n    switch (scheme) {\n        case 'https':\n        case 'http':\n        case 'file':\n            if (!path) {\n                path = _slash;\n            }\n            else if (path[0] !== _slash) {\n                path = _slash + path;\n            }\n            break;\n    }\n    return path;\n}\nconst _empty = '';\nconst _slash = '/';\nconst _regexp = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/;\n/**\n * Uniform Resource Identifier (URI) http://tools.ietf.org/html/rfc3986.\n * This class is a simple parser which creates the basic component parts\n * (http://tools.ietf.org/html/rfc3986#section-3) with minimal validation\n * and encoding.\n *\n * ```txt\n *       foo://example.com:8042/over/there?name=ferret#nose\n *       \\_/   \\______________/\\_________/ \\_________/ \\__/\n *        |           |            |            |        |\n *     scheme     authority       path        query   fragment\n *        |   _____________________|__\n *       / \\ /                        \\\n *       urn:example:animal:ferret:nose\n * ```\n */\nexport class URI {\n    static isUri(thing) {\n        if (thing instanceof URI) {\n            return true;\n        }\n        if (!thing) {\n            return false;\n        }\n        return typeof thing.authority === 'string'\n            && typeof thing.fragment === 'string'\n            && typeof thing.path === 'string'\n            && typeof thing.query === 'string'\n            && typeof thing.scheme === 'string'\n            && typeof thing.fsPath === 'string'\n            && typeof thing.with === 'function'\n            && typeof thing.toString === 'function';\n    }\n    /**\n     * @internal\n     */\n    constructor(schemeOrData, authority, path, query, fragment, _strict = false) {\n        if (typeof schemeOrData === 'object') {\n            this.scheme = schemeOrData.scheme || _empty;\n            this.authority = schemeOrData.authority || _empty;\n            this.path = schemeOrData.path || _empty;\n            this.query = schemeOrData.query || _empty;\n            this.fragment = schemeOrData.fragment || _empty;\n            // no validation because it's this URI\n            // that creates uri components.\n            // _validateUri(this);\n        }\n        else {\n            this.scheme = _schemeFix(schemeOrData, _strict);\n            this.authority = authority || _empty;\n            this.path = _referenceResolution(this.scheme, path || _empty);\n            this.query = query || _empty;\n            this.fragment = fragment || _empty;\n            _validateUri(this, _strict);\n        }\n    }\n    // ---- filesystem path -----------------------\n    /**\n     * Returns a string representing the corresponding file system path of this URI.\n     * Will handle UNC paths, normalizes windows drive letters to lower-case, and uses the\n     * platform specific path separator.\n     *\n     * * Will *not* validate the path for invalid characters and semantics.\n     * * Will *not* look at the scheme of this URI.\n     * * The result shall *not* be used for display purposes but for accessing a file on disk.\n     *\n     *\n     * The *difference* to `URI#path` is the use of the platform specific separator and the handling\n     * of UNC paths. See the below sample of a file-uri with an authority (UNC path).\n     *\n     * ```ts\n        const u = URI.parse('file://server/c$/folder/file.txt')\n        u.authority === 'server'\n        u.path === '/shares/c$/file.txt'\n        u.fsPath === '\\\\server\\c$\\folder\\file.txt'\n    ```\n     *\n     * Using `URI#path` to read a file (using fs-apis) would not be enough because parts of the path,\n     * namely the server name, would be missing. Therefore `URI#fsPath` exists - it's sugar to ease working\n     * with URIs that represent files on disk (`file` scheme).\n     */\n    get fsPath() {\n        // if (this.scheme !== 'file') {\n        // \tconsole.warn(`[UriError] calling fsPath with scheme ${this.scheme}`);\n        // }\n        return uriToFsPath(this, false);\n    }\n    // ---- modify to new -------------------------\n    with(change) {\n        if (!change) {\n            return this;\n        }\n        let { scheme, authority, path, query, fragment } = change;\n        if (scheme === undefined) {\n            scheme = this.scheme;\n        }\n        else if (scheme === null) {\n            scheme = _empty;\n        }\n        if (authority === undefined) {\n            authority = this.authority;\n        }\n        else if (authority === null) {\n            authority = _empty;\n        }\n        if (path === undefined) {\n            path = this.path;\n        }\n        else if (path === null) {\n            path = _empty;\n        }\n        if (query === undefined) {\n            query = this.query;\n        }\n        else if (query === null) {\n            query = _empty;\n        }\n        if (fragment === undefined) {\n            fragment = this.fragment;\n        }\n        else if (fragment === null) {\n            fragment = _empty;\n        }\n        if (scheme === this.scheme\n            && authority === this.authority\n            && path === this.path\n            && query === this.query\n            && fragment === this.fragment) {\n            return this;\n        }\n        return new Uri(scheme, authority, path, query, fragment);\n    }\n    // ---- parse & validate ------------------------\n    /**\n     * Creates a new URI from a string, e.g. `http://www.example.com/some/path`,\n     * `file:///usr/home`, or `scheme:with/path`.\n     *\n     * @param value A string which represents an URI (see `URI#toString`).\n     */\n    static parse(value, _strict = false) {\n        const match = _regexp.exec(value);\n        if (!match) {\n            return new Uri(_empty, _empty, _empty, _empty, _empty);\n        }\n        return new Uri(match[2] || _empty, percentDecode(match[4] || _empty), percentDecode(match[5] || _empty), percentDecode(match[7] || _empty), percentDecode(match[9] || _empty), _strict);\n    }\n    /**\n     * Creates a new URI from a file system path, e.g. `c:\\my\\files`,\n     * `/usr/home`, or `\\\\server\\share\\some\\path`.\n     *\n     * The *difference* between `URI#parse` and `URI#file` is that the latter treats the argument\n     * as path, not as stringified-uri. E.g. `URI.file(path)` is **not the same as**\n     * `URI.parse('file://' + path)` because the path might contain characters that are\n     * interpreted (# and ?). See the following sample:\n     * ```ts\n    const good = URI.file('/coding/c#/project1');\n    good.scheme === 'file';\n    good.path === '/coding/c#/project1';\n    good.fragment === '';\n    const bad = URI.parse('file://' + '/coding/c#/project1');\n    bad.scheme === 'file';\n    bad.path === '/coding/c'; // path is now broken\n    bad.fragment === '/project1';\n    ```\n     *\n     * @param path A file system path (see `URI#fsPath`)\n     */\n    static file(path) {\n        let authority = _empty;\n        // normalize to fwd-slashes on windows,\n        // on other systems bwd-slashes are valid\n        // filename character, eg /f\\oo/ba\\r.txt\n        if (isWindows) {\n            path = path.replace(/\\\\/g, _slash);\n        }\n        // check for authority as used in UNC shares\n        // or use the path as given\n        if (path[0] === _slash && path[1] === _slash) {\n            const idx = path.indexOf(_slash, 2);\n            if (idx === -1) {\n                authority = path.substring(2);\n                path = _slash;\n            }\n            else {\n                authority = path.substring(2, idx);\n                path = path.substring(idx) || _slash;\n            }\n        }\n        return new Uri('file', authority, path, _empty, _empty);\n    }\n    /**\n     * Creates new URI from uri components.\n     *\n     * Unless `strict` is `true` the scheme is defaults to be `file`. This function performs\n     * validation and should be used for untrusted uri components retrieved from storage,\n     * user input, command arguments etc\n     */\n    static from(components, strict) {\n        const result = new Uri(components.scheme, components.authority, components.path, components.query, components.fragment, strict);\n        return result;\n    }\n    /**\n     * Join a URI path with path fragments and normalizes the resulting path.\n     *\n     * @param uri The input URI.\n     * @param pathFragment The path fragment to add to the URI path.\n     * @returns The resulting URI.\n     */\n    static joinPath(uri, ...pathFragment) {\n        if (!uri.path) {\n            throw new Error(`[UriError]: cannot call joinPath on URI without path`);\n        }\n        let newPath;\n        if (isWindows && uri.scheme === 'file') {\n            newPath = URI.file(paths.win32.join(uriToFsPath(uri, true), ...pathFragment)).path;\n        }\n        else {\n            newPath = paths.posix.join(uri.path, ...pathFragment);\n        }\n        return uri.with({ path: newPath });\n    }\n    // ---- printing/externalize ---------------------------\n    /**\n     * Creates a string representation for this URI. It's guaranteed that calling\n     * `URI.parse` with the result of this function creates an URI which is equal\n     * to this URI.\n     *\n     * * The result shall *not* be used for display purposes but for externalization or transport.\n     * * The result will be encoded using the percentage encoding and encoding happens mostly\n     * ignore the scheme-specific encoding rules.\n     *\n     * @param skipEncoding Do not encode the result, default is `false`\n     */\n    toString(skipEncoding = false) {\n        return _asFormatted(this, skipEncoding);\n    }\n    toJSON() {\n        return this;\n    }\n    static revive(data) {\n        var _a, _b;\n        if (!data) {\n            return data;\n        }\n        else if (data instanceof URI) {\n            return data;\n        }\n        else {\n            const result = new Uri(data);\n            result._formatted = (_a = data.external) !== null && _a !== void 0 ? _a : null;\n            result._fsPath = data._sep === _pathSepMarker ? (_b = data.fsPath) !== null && _b !== void 0 ? _b : null : null;\n            return result;\n        }\n    }\n}\nconst _pathSepMarker = isWindows ? 1 : undefined;\n// This class exists so that URI is compatible with vscode.Uri (API).\nclass Uri extends URI {\n    constructor() {\n        super(...arguments);\n        this._formatted = null;\n        this._fsPath = null;\n    }\n    get fsPath() {\n        if (!this._fsPath) {\n            this._fsPath = uriToFsPath(this, false);\n        }\n        return this._fsPath;\n    }\n    toString(skipEncoding = false) {\n        if (!skipEncoding) {\n            if (!this._formatted) {\n                this._formatted = _asFormatted(this, false);\n            }\n            return this._formatted;\n        }\n        else {\n            // we don't cache that\n            return _asFormatted(this, true);\n        }\n    }\n    toJSON() {\n        const res = {\n            $mid: 1 /* MarshalledId.Uri */\n        };\n        // cached state\n        if (this._fsPath) {\n            res.fsPath = this._fsPath;\n            res._sep = _pathSepMarker;\n        }\n        if (this._formatted) {\n            res.external = this._formatted;\n        }\n        //--- uri components\n        if (this.path) {\n            res.path = this.path;\n        }\n        // TODO\n        // this isn't correct and can violate the UriComponents contract but\n        // this is part of the vscode.Uri API and we shouldn't change how that\n        // works anymore\n        if (this.scheme) {\n            res.scheme = this.scheme;\n        }\n        if (this.authority) {\n            res.authority = this.authority;\n        }\n        if (this.query) {\n            res.query = this.query;\n        }\n        if (this.fragment) {\n            res.fragment = this.fragment;\n        }\n        return res;\n    }\n}\n// reserved characters: https://tools.ietf.org/html/rfc3986#section-2.2\nconst encodeTable = {\n    [58 /* CharCode.Colon */]: '%3A', // gen-delims\n    [47 /* CharCode.Slash */]: '%2F',\n    [63 /* CharCode.QuestionMark */]: '%3F',\n    [35 /* CharCode.Hash */]: '%23',\n    [91 /* CharCode.OpenSquareBracket */]: '%5B',\n    [93 /* CharCode.CloseSquareBracket */]: '%5D',\n    [64 /* CharCode.AtSign */]: '%40',\n    [33 /* CharCode.ExclamationMark */]: '%21', // sub-delims\n    [36 /* CharCode.DollarSign */]: '%24',\n    [38 /* CharCode.Ampersand */]: '%26',\n    [39 /* CharCode.SingleQuote */]: '%27',\n    [40 /* CharCode.OpenParen */]: '%28',\n    [41 /* CharCode.CloseParen */]: '%29',\n    [42 /* CharCode.Asterisk */]: '%2A',\n    [43 /* CharCode.Plus */]: '%2B',\n    [44 /* CharCode.Comma */]: '%2C',\n    [59 /* CharCode.Semicolon */]: '%3B',\n    [61 /* CharCode.Equals */]: '%3D',\n    [32 /* CharCode.Space */]: '%20',\n};\nfunction encodeURIComponentFast(uriComponent, isPath, isAuthority) {\n    let res = undefined;\n    let nativeEncodePos = -1;\n    for (let pos = 0; pos < uriComponent.length; pos++) {\n        const code = uriComponent.charCodeAt(pos);\n        // unreserved characters: https://tools.ietf.org/html/rfc3986#section-2.3\n        if ((code >= 97 /* CharCode.a */ && code <= 122 /* CharCode.z */)\n            || (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */)\n            || (code >= 48 /* CharCode.Digit0 */ && code <= 57 /* CharCode.Digit9 */)\n            || code === 45 /* CharCode.Dash */\n            || code === 46 /* CharCode.Period */\n            || code === 95 /* CharCode.Underline */\n            || code === 126 /* CharCode.Tilde */\n            || (isPath && code === 47 /* CharCode.Slash */)\n            || (isAuthority && code === 91 /* CharCode.OpenSquareBracket */)\n            || (isAuthority && code === 93 /* CharCode.CloseSquareBracket */)\n            || (isAuthority && code === 58 /* CharCode.Colon */)) {\n            // check if we are delaying native encode\n            if (nativeEncodePos !== -1) {\n                res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                nativeEncodePos = -1;\n            }\n            // check if we write into a new string (by default we try to return the param)\n            if (res !== undefined) {\n                res += uriComponent.charAt(pos);\n            }\n        }\n        else {\n            // encoding needed, we need to allocate a new string\n            if (res === undefined) {\n                res = uriComponent.substr(0, pos);\n            }\n            // check with default table first\n            const escaped = encodeTable[code];\n            if (escaped !== undefined) {\n                // check if we are delaying native encode\n                if (nativeEncodePos !== -1) {\n                    res += encodeURIComponent(uriComponent.substring(nativeEncodePos, pos));\n                    nativeEncodePos = -1;\n                }\n                // append escaped variant to result\n                res += escaped;\n            }\n            else if (nativeEncodePos === -1) {\n                // use native encode only when needed\n                nativeEncodePos = pos;\n            }\n        }\n    }\n    if (nativeEncodePos !== -1) {\n        res += encodeURIComponent(uriComponent.substring(nativeEncodePos));\n    }\n    return res !== undefined ? res : uriComponent;\n}\nfunction encodeURIComponentMinimal(path) {\n    let res = undefined;\n    for (let pos = 0; pos < path.length; pos++) {\n        const code = path.charCodeAt(pos);\n        if (code === 35 /* CharCode.Hash */ || code === 63 /* CharCode.QuestionMark */) {\n            if (res === undefined) {\n                res = path.substr(0, pos);\n            }\n            res += encodeTable[code];\n        }\n        else {\n            if (res !== undefined) {\n                res += path[pos];\n            }\n        }\n    }\n    return res !== undefined ? res : path;\n}\n/**\n * Compute `fsPath` for the given uri\n */\nexport function uriToFsPath(uri, keepDriveLetterCasing) {\n    let value;\n    if (uri.authority && uri.path.length > 1 && uri.scheme === 'file') {\n        // unc path: file://shares/c$/far/boo\n        value = `//${uri.authority}${uri.path}`;\n    }\n    else if (uri.path.charCodeAt(0) === 47 /* CharCode.Slash */\n        && (uri.path.charCodeAt(1) >= 65 /* CharCode.A */ && uri.path.charCodeAt(1) <= 90 /* CharCode.Z */ || uri.path.charCodeAt(1) >= 97 /* CharCode.a */ && uri.path.charCodeAt(1) <= 122 /* CharCode.z */)\n        && uri.path.charCodeAt(2) === 58 /* CharCode.Colon */) {\n        if (!keepDriveLetterCasing) {\n            // windows drive letter: file:///c:/far/boo\n            value = uri.path[1].toLowerCase() + uri.path.substr(2);\n        }\n        else {\n            value = uri.path.substr(1);\n        }\n    }\n    else {\n        // other path\n        value = uri.path;\n    }\n    if (isWindows) {\n        value = value.replace(/\\//g, '\\\\');\n    }\n    return value;\n}\n/**\n * Create the external version of a uri\n */\nfunction _asFormatted(uri, skipEncoding) {\n    const encoder = !skipEncoding\n        ? encodeURIComponentFast\n        : encodeURIComponentMinimal;\n    let res = '';\n    let { scheme, authority, path, query, fragment } = uri;\n    if (scheme) {\n        res += scheme;\n        res += ':';\n    }\n    if (authority || scheme === 'file') {\n        res += _slash;\n        res += _slash;\n    }\n    if (authority) {\n        let idx = authority.indexOf('@');\n        if (idx !== -1) {\n            // <user>@<auth>\n            const userinfo = authority.substr(0, idx);\n            authority = authority.substr(idx + 1);\n            idx = userinfo.lastIndexOf(':');\n            if (idx === -1) {\n                res += encoder(userinfo, false, false);\n            }\n            else {\n                // <user>:<pass>@<auth>\n                res += encoder(userinfo.substr(0, idx), false, false);\n                res += ':';\n                res += encoder(userinfo.substr(idx + 1), false, true);\n            }\n            res += '@';\n        }\n        authority = authority.toLowerCase();\n        idx = authority.lastIndexOf(':');\n        if (idx === -1) {\n            res += encoder(authority, false, true);\n        }\n        else {\n            // <auth>:<port>\n            res += encoder(authority.substr(0, idx), false, true);\n            res += authority.substr(idx);\n        }\n    }\n    if (path) {\n        // lower-case windows drive letters in /C:/fff or C:/fff\n        if (path.length >= 3 && path.charCodeAt(0) === 47 /* CharCode.Slash */ && path.charCodeAt(2) === 58 /* CharCode.Colon */) {\n            const code = path.charCodeAt(1);\n            if (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */) {\n                path = `/${String.fromCharCode(code + 32)}:${path.substr(3)}`; // \"/c:\".length === 3\n            }\n        }\n        else if (path.length >= 2 && path.charCodeAt(1) === 58 /* CharCode.Colon */) {\n            const code = path.charCodeAt(0);\n            if (code >= 65 /* CharCode.A */ && code <= 90 /* CharCode.Z */) {\n                path = `${String.fromCharCode(code + 32)}:${path.substr(2)}`; // \"/c:\".length === 3\n            }\n        }\n        // encode the rest of the path\n        res += encoder(path, true, false);\n    }\n    if (query) {\n        res += '?';\n        res += encoder(query, false, false);\n    }\n    if (fragment) {\n        res += '#';\n        res += !skipEncoding ? encodeURIComponentFast(fragment, false, false) : fragment;\n    }\n    return res;\n}\n// --- decode\nfunction decodeURIComponentGraceful(str) {\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (_a) {\n        if (str.length > 3) {\n            return str.substr(0, 3) + decodeURIComponentGraceful(str.substr(3));\n        }\n        else {\n            return str;\n        }\n    }\n}\nconst _rEncodedAsHex = /(%[0-9A-Za-z][0-9A-Za-z])+/g;\nfunction percentDecode(str) {\n    if (!str.match(_rEncodedAsHex)) {\n        return str;\n    }\n    return str.replace(_rEncodedAsHex, (match) => decodeURIComponentGraceful(match));\n}\n","export const generateUuid = (function () {\n    // use `randomUUID` if possible\n    if (typeof crypto === 'object' && typeof crypto.randomUUID === 'function') {\n        return crypto.randomUUID.bind(crypto);\n    }\n    // use `randomValues` if possible\n    let getRandomValues;\n    if (typeof crypto === 'object' && typeof crypto.getRandomValues === 'function') {\n        getRandomValues = crypto.getRandomValues.bind(crypto);\n    }\n    else {\n        getRandomValues = function (bucket) {\n            for (let i = 0; i < bucket.length; i++) {\n                bucket[i] = Math.floor(Math.random() * 256);\n            }\n            return bucket;\n        };\n    }\n    // prep-work\n    const _data = new Uint8Array(16);\n    const _hex = [];\n    for (let i = 0; i < 256; i++) {\n        _hex.push(i.toString(16).padStart(2, '0'));\n    }\n    return function generateUuid() {\n        // get data\n        getRandomValues(_data);\n        // set version bits\n        _data[6] = (_data[6] & 0x0f) | 0x40;\n        _data[8] = (_data[8] & 0x3f) | 0x80;\n        // print as string\n        let i = 0;\n        let result = '';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += '-';\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        result += _hex[_data[i++]];\n        return result;\n    };\n})();\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","GLOBSTAR","GLOB_SPLIT","PATH_REGEX","NO_PATH_REGEX","ALL_FORWARD_SLASHES","starsToRegExp","starCount","isLastPattern","concat","splitGlobAware","pattern","splitChar","segments","inBraces","inBrackets","curVal","char","push","parseRegExp","regEx","every","segment","previousSegmentWasGlobStar","forEach","index","length","braceVal","bracketVal","choices","braceRegExp","map","choice","join","escapeRegExpCharacters","res","T1","T2","T3","T3_2","T4","T5","CACHE","LRUCache","FALSE","NULL","parsePattern","arg1","options","trim","patternKey","trimForExclusions","match","parsedPattern","get","test","base","path","basename","endsWith","trivia1","substr","exec","slashBase","backslashBase","basenames","patterns","allBasenames","trivia2","parsedPatterns","aggregateBasenameMatches","slice","split","filter","patternsLength","i","n","withBasenames","find","allPaths","reduce","all","current","trivia3","trivia4and5","regExp","RegExp","lastIndex","error","toRegExp","set","wrapRelativePattern","arg2","wrappedPattern","isEqualOrParent","isLinux","ltrim","sep","targetPath","matchPathEnds","usingPosixSep","posix","nativePath","replace","nativePathEnd","targetPathEnd","hasSibling","parse","undefined","arguments","obj","rp","isRelativePattern","resultPattern","expression","Object","getOwnPropertyNames","when","name","matched","isThenable","requiresSiblings","parseExpressionPattern","some","resultExpression","resultPromises","this","resultPromise","extname","parsedExpression","basenamePatterns","aggregate","ch","charCodeAt","indexOf","aggregatedPatterns","hash","doHash","hashVal","numberHash","Array","isArray","arr","initialHashVal","item","keys","sort","key","stringHash","objectHash","b","booleanHash","val","s","leftRotate","bits","delta","fill","dest","count","byteLength","toHexString","bufferOrValue","bitsize","ArrayBuffer","from","Uint8Array","toString","padStart","leftPad","StringSHA1","constructor","_h0","_h1","_h2","_h3","_h4","_buff","_buffDV","DataView","buffer","_buffLen","_totalLen","_leftoverHighSurrogate","_finished","update","str","strLen","buff","charCode","offset","buffLen","leftoverHighSurrogate","codePoint","strings","nextCharCode","_push","_step","digest","_wrapUp","ml","setUint32","Math","floor","bigBlock32","_bigBlock32","data","j","getUint32","f","k","temp","a","c","d","ArrayNavigator","items","start","end","min","previous","max","first","last","HistoryNavigator","history","limit","_initialize","_limit","_onChange","getHistory","_elements","add","t","_history","delete","_navigator","_currentPosition","isLast","isNowhere","has","_reduceToLimit","elements","currentElement","Set","entry","isHotReloadEnabled","env","registerHotReloadHandler","handler","handlers","hotReloadHandlers","g","globalThis","$hotReload_applyNewExports","oldExports","h","registerGlobalHotReloadHandler","dispose","MarkdownString","isTrustedOrOptions","_a","_b","_c","illegalArgument","isTrusted","supportThemeIcons","supportHtml","appendText","newlineStyle","text","escapeIcons","_match","g1","repeat","appendMarkdown","appendCodeblock","langId","code","appendLink","target","label","title","_escape","String","r","charAt","isEmptyMarkdownString","oneOrMany","isMarkdownString","thing","markdownStringEqual","baseUri","isEqual","URI","escapeDoubleQuotes","input","removeMarkdownEscapes","parseHrefAndDimensions","href","dimensions","splitted","parameters","heightFromParams","widthFromParams","height","width","widthIsFinite","isFinite","parseInt","heightIsFinite","iconStartMarker","iconsRegex","ThemeIcon","iconNameExpression","iconModifierExpression","escapeIconsRegex","source","escaped","markdownEscapedIconsRegex","markdownEscapeEscapedIcons","stripIconsRegex","stripIcons","preWhitespace","postWhitespace","getCodiconAriaLabel","codiconName","_parseIconsRegex","iconNameCharacter","parseLabelWithIcons","iconOffsets","iconsOffset","pos","chars","substring","matchesFuzzyIconAware","query","enableSeparateSubstringMatching","matchesFuzzy","wordToMatchAgainstWithoutIconsTrimmed","leadingWhitespaceOffset","matches","iconOffset","IdGenerator","prefix","_prefix","_lastId","nextId","defaultGenerator","IME","_onDidChange","Emitter","onDidChange","event","_enabled","enabled","enable","fire","disable","Iterable","is","Symbol","iterator","_empty","freeze","single","element","empty","wrap","iterableOrElement","iterable","reverse","array","isEmpty","predicate","fn","_len","iterables","_key","reducer","initialValue","to","consume","atMost","Number","POSITIVE_INFINITY","consumed","KeyCodeStrMap","_keyCodeToStr","_strToKeyCode","create","define","keyCode","toLowerCase","keyCodeToStr","strToKeyCode","uiMap","userSettingsUSMap","userSettingsGeneralMap","EVENT_KEY_CODE_MAP","NATIVE_WINDOWS_KEY_CODE_TO_KEY_CODE","scanCodeIntToStr","scanCodeStrToInt","scanCodeLowerCaseStrToInt","IMMUTABLE_CODE_TO_KEY_CODE","IMMUTABLE_KEY_CODE_TO_CODE","KeyCodeUtils","KeyChord","firstPart","secondPart","mappings","seenKeyCode","seenScanCode","mapping","immutable","scanCode","scanCodeStr","keyCodeStr","eventKeyCode","vkey","usUserSettingsLabel","generalUserSettingsLabel","Error","fromString","toUserSettingsUS","toUserSettingsGeneral","fromUserSettings","toElectronAccelerator","ModifierLabelProvider","mac","windows","linux","modifierLabels","toLabel","OS","chords","keyLabelProvider","len","chord","keyLabel","_simpleAsString","UILabelProvider","ctrlKey","shiftKey","altKey","metaKey","separator","nls","comment","AriaLabelProvider","ElectronAcceleratorLabelProvider","UserSettingsLabelProvider","modifiers","labels","decodeKeybinding","keybinding","firstChord","secondChord","Keybinding","createSimpleKeybinding","ctrlCmd","winCtrl","KeyCodeChord","equals","other","isModifierKey","isDuplicateModifierCase","ResolvedChord","keyAriaLabel","ResolvedKeybinding","normalizeDriveLetter","isWindowsOS","isWindows","hasDriveLetter","toUpperCase","Lazy","executor","_didRun","_value","err","_error","rawValue","disposableTracker","trackDisposable","x","markAsDisposed","disposable","setParentOfDisposable","child","parent","setParent","markAsSingleton","singleton","isDisposable","arg","errors","AggregateError","combinedDisposable","disposables","toDisposable","children","setParentOfDisposables","self","createSingleCallFunction","DisposableStore","_toDispose","_isDisposed","clear","isDisposed","size","o","DISABLE_DISPOSED_WARNING","console","warn","stack","deleteAndLeak","Disposable","_store","_register","None","MutableDisposable","RefCountedDisposable","_disposable","_counter","acquire","release","ImmortalReference","object","DisposableMap","Map","clearAndDisposeAll","values","skipDisposeOnOverwrite","deleteAndDispose","Node","Undefined","prev","LinkedList","_first","_last","_size","node","unshift","_insert","atTheEnd","newNode","oldLast","oldFirst","didRemove","_remove","shift","pop","anchor","__decorate","decorators","desc","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","LinkedText","nodes","memoize","prototype","LINK_REGEX","parseLinkedText","ResourceMapEntry","uri","ResourceMap","toKey","defaultToKey","isEntries","resource","clb","bind","_","entries","toStringTag","LinkedMap","_map","_head","_tail","_state","touch","addItemLast","addItemFirst","remove","removeItem","callbackfn","state","trimOld","newSize","currentSize","toJSON","fromJSON","ratio","super","_ratio","checkTrim","peek","round","BidirectionalMap","_m1","_m2","getKey","SetMap","__marked_exports","deps","factory","global","amd","exports","_defineProperties","props","descriptor","enumerable","configurable","writable","_arrayLikeToArray","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","call","minLen","_unsupportedIterableToArray","TypeError","getDefaults","async","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","defaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","escape","html","encode","unescapeTest","unescape","fromCharCode","caret","edit","regex","opt","getRegex","nonWordAndColonTest","originIndependentUrl","cleanUrl","prot","decodeURIComponent","baseUrls","justDomain","rtrim","relativeBase","protocol","domain","resolveUrl","encodeURI","noopTest","merge","hasOwnProperty","splitCells","tableRow","cells","curr","splice","invert","l","suffLen","currChar","checkSanitizeDeprecation","repeatString","outputLink","cap","link","raw","lexer","inLink","token","type","tokens","inlineTokens","Tokenizer","_proto","space","src","rules","block","newline","codeBlockStyle","fences","matchIndentToCode","indentToCode","matchIndentInNode","indentCodeCompensation","lang","heading","trimmed","depth","inline","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","nextLine","rawLine","itemContents","endEarly","bull","isordered","ordered","loose","itemRegex","trimLeft","search","nextBulletRegex","hrRegex","fencesBeginRegex","headingBeginRegex","task","checked","trimRight","top","spacers","hasMultipleLineBreaks","lineBreaks","_iterator","pre","def","tag","table","header","align","rows","row","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","level","findClosingBracket","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","rDelim","rLength","lLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","_text","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","reflinkSearch","out","random","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Lexer","inlineQueue","lex","lexInline","Constructor","protoProps","staticProps","lastToken","cutSrc","lastParagraphClipped","_this","leading","tabs","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","getStartIndex","errMsg","_this2","keepPrevChar","includes","lastIndexOf","startInline","Renderer","_code","infostring","quote","_html","slugger","slug","body","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Parser","textRenderer","parseInline","l2","l3","cell","itemBody","ret","renderers","parser","marked","callback","pending","setTimeout","onError","message","_tokens","setOptions","newDefaults","use","args","hasExtensions","opts","childTokens","pack","ext","prevRenderer","_len2","_key2","_loop","prop","_len3","_key3","_loop2","prevTokenizer","_len4","_key4","_walkTokens","_loop3","_step2","_iterator2","_step3","_iterator3","_step4","_iterator4","_cell","stringify","JSON","replacer","revive","$mid","Date","VSBuffer","Mimes","binary","unknown","markdown","latex","uriList","Schemas","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","file","mailto","untitled","command","vscodeRemote","vscodeRemoteResource","vscodeManagedRemoteResource","vscodeUserData","vscodeCustomEditor","vscodeNotebookCell","vscodeNotebookCellMetadata","vscodeNotebookCellOutput","vscodeInteractiveInput","vscodeSettings","vscodeWorkspaceTrust","vscodeTerminal","vscodeChatSesssion","webviewPanel","vscodeWebview","extension","vscodeFileResource","tmp","vsls","vscodeSourceControl","RemoteAuthorities","_hosts","_ports","_connectionTokens","_preferredWebSchema","_delegate","_remoteResourcesPath","setPreferredWebSchema","schema","rewrite","authority","host","port","connectionToken","encodeURIComponent","scheme","platform","FileAccessImpl","uriToBrowserUri","origin","FALLBACK_AUTHORITY","with","fragment","FileAccess","COI","coiHeaders","CoopAndCoep","coiSearchParamName","getHeadersFromQuery","params","URL","searchParams","isUri","addSearchParam","urlOrSearch","coop","coep","crossOriginIsolated","URLSearchParams","clamp","MovingAverage","_n","_val","SlidingWindowAverage","_values","_index","_sum","oldValue","deepClone","_ref","deepFreeze","_hasOwnProperty","isFrozen","isTypedArray","cloneAndChange","changer","_cloneAndChange","isUndefinedOrNull","changed","r1","isObject","r2","i2","mixin","destination","overwrite","one","oneKeys","otherKeys","getAllMethodNames","methods","getPrototypeOf","getAllPropertyNames","createProxyObject","methodNames","invoke","createProxyMethod","method","methodName","globalObservableLogger","_derived","getLogger","ConvenientObservable","TChange","reportChanges","read","reader","readObservable","fnOrOwner","fnOrUndefined","owner","debugName","getFunctionName","BaseObservable","observers","addObserver","observer","onFirstObserverAdded","removeObserver","onLastObserverRemoved","transaction","getDebugName","tx","TransactionImpl","finish","subtransaction","_fn","_getDebugName","updatingObservers","handleBeginTransaction","updateObserver","observable","beginUpdate","endUpdate","handleEndTransaction","debugNameFn","fnSrc","observableValue","nameOrOwner","ObservableValue","_debugName","_owner","change","_tx","_setValue","handleObservableChanged","newValue","didChange","hadValue","handleChange","disposableObservableValue","DisposableObservableValue","defaultEqualityComparer","derived","computeFnOrOwner","computeFn","Derived","derivedOpts","equalityComparer","derivedHandleChanges","createEmptyChangeSummary","derivedWithStore","computeFnOrUndefined","store","_setDerivedOpts","_computeFn","createChangeSummary","_handleChange","_handleLastObserverRemoved","_equalityComparator","updateCount","dependencies","dependenciesToBeRemoved","changeSummary","handleDerivedCreated","_recomputeIfNeeded","emptySet","handleDerivedRecomputed","_observable","propagateBeginUpdate","handlePossibleChange","BugIndicatingError","shouldReact","changedObservable","wasUpToDate","shouldCallBeginUpdate","shouldCallEndUpdate","autorunOpts","AutorunObserver","autorun","autorunHandleChanges","autorunWithStore","_runFn","disposed","handleAutorunCreated","_runIfNeeded","handleAutorunTriggered","handleAutorunFinished","assertFn","constObservable","ConstObservable","Observer","waitForState","didRun","shouldDispose","currentState","observableFromEvent","getValue","FromEventObservable","_getValue","hasValue","handleEvent","handleFromEventObservableTriggered","subscription","observableSignalFromEvent","FromEventObservableSignal","observableSignal","debugNameOrOwner","ObservableSignal","trigger","recomputeInitiallyAndOnChange","KeepAliveObserver","forceRecompute","counter","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","ErrorInvalidArgType","expected","actual","determiner","msg","validateString","platformIsWin32","process","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","allowAboveRoot","lastSegmentLength","lastSlash","dots","lastSlashIndex","_format","pathObject","validateObject","dir","root","win32","resolvedDevice","resolvedTail","resolvedAbsolute","rootEnd","device","isAbsolute","normalize","tail","joined","needsReplace","slashCount","firstLen","relative","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","toNamespacedPath","resolvedPath","dirname","matchedSlash","extIdx","firstNonSlashEnd","startDot","startPart","preDotState","format","delimiter","posixCwd","regexp","cwd","trailingSeparator","hasRoot","LANGUAGE_DEFAULT","_locale","_userAgent","_isWindows","_isMacintosh","_isLinux","_isLinuxSnap","_isNative","_isWeb","_isElectron","_isIOS","_isCI","_isMobile","_language","_platformLocale","_translationsConfigFile","globals","nodeProcess","isElectronProcess","versions","electron","isElectronRenderer","navigator","rawNlsConfig","nlsConfig","resolved","availableLanguages","locale","osLocale","userAgent","maxTouchPoints","language","_platform","isMacintosh","isNative","isWeb","isWebWorker","importScripts","isIOS","isMobile","setTimeout0IsFaster","postMessage","setTimeout0","addEventListener","vscodeScheduleAsyncWork","candidate","id","lastId","myId","_isLittleEndian","_isLittleEndianComputed","isLittleEndian","view","Uint16Array","isChrome","isFirefox","isSafari","isEdge","safeProcess","sandboxProcess","arch","Range","intersect","range","intersects","relativeComplement","second","originalFSPath","uriToFsPath","ExtUri","_ignorePathCasing","compare","uri1","uri2","ignoreFragment","strCompare","getComparisonKey","parentCandidate","extpath","isEqualAuthority","joinPath","pathFragment","basenameOrAuthority","paths","normalizePath","normalizedPath","relativePath","fromPath","toPath","resolvePath","newURI","isAbsolutePath","a1","a2","equalsIgnoreCase","hasTrailingPathSeparator","fsp","p","fsPath","removeTrailingPathSeparator","addTrailingPathSeparator","isRootSep","extUri","DataUri","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","META_DATA_MIME","parseMetaData","dataUri","metadata","property","mime","ScrollState","_forceIntegerValues","scrollWidth","scrollLeft","scrollHeight","scrollTop","_scrollStateBrand","rawScrollLeft","rawScrollTop","withScrollDimensions","useRawScrollPositions","withScrollPosition","createScrollEvent","inSmoothScrolling","widthChanged","scrollWidthChanged","scrollLeftChanged","heightChanged","scrollHeightChanged","scrollTopChanged","oldWidth","oldScrollWidth","oldScrollLeft","oldHeight","oldScrollHeight","oldScrollTop","Scrollable","_scrollableBrand","_onScroll","onScroll","_smoothScrollDuration","smoothScrollDuration","_scheduleAtNextAnimationFrame","scheduleAtNextAnimationFrame","forceIntegerValues","_smoothScrolling","setSmoothScrollDuration","validateScrollPosition","scrollPosition","getScrollDimensions","setScrollDimensions","newState","_setState","Boolean","acceptScrollDimensions","getFutureScrollPosition","getCurrentScrollPosition","setScrollPositionNow","setScrollPositionSmooth","reuseAnimation","validTarget","newSmoothScrolling","SmoothScrollingOperation","startTime","duration","combine","animationFrameDisposable","_performSmoothScrolling","hasPendingScrollAnimation","tick","isDone","oldState","SmoothScrollingUpdate","createEaseOutCubic","completion","pow","easeInCubic","_initAnimations","_initAnimation","viewportSize","abs","stop1","stop2","cut","_tick","now","newScrollLeft","newScrollTop","buildReplaceStringWithCasePreserved","containsHyphens","validateSpecificSpecialCharacter","containsUnderscores","buildReplaceStringForSpecificSpecialCharacter","specialCharacter","splitPatternAtSpecialCharacter","splitMatchAtSpecialCharacter","replaceString","splitValue","Severity","_warning","_info","fromValue","Warning","Info","Ignore","severity","hasPerformanceNow","performance","StopWatch","highResolution","_now","_startTime","_stopTime","stop","elapsed","isFalsyOrWhitespace","_formatRegexp","group","idx","isNaN","haystack","needle","needleLen","haystackLen","convertSimple2RegExpPattern","stripWildcards","createRegExp","searchString","isRegex","wholeWord","matchCase","multiline","unicode","regExpLeadsToEndlessLoop","splitLines","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","compareSubstring","aStart","aEnd","bStart","bEnd","codeA","codeB","aLen","bLen","compareIgnoreCase","compareSubstringIgnoreCase","isLowerAsciiLetter","diff","isAsciiDigit","isUpperAsciiLetter","startsWithIgnoreCase","candidateLength","commonPrefixLength","commonSuffixLength","aLastIndex","bLastIndex","isHighSurrogate","isLowSurrogate","computeCodePoint","highSurrogate","lowSurrogate","getNextCodePoint","CodePointIterator","_offset","_str","setOffset","prevCodePoint","prevCharCode","getPrevCodePoint","nextCodePoint","eol","GraphemeIterator","nextGraphemeLength","graphemeBreakTree","GraphemeBreakTree","getInstance","initialOffset","graphemeBreakType","getGraphemeBreakType","nextGraphemeBreakType","breakBetweenGraphemeBreakType","prevGraphemeLength","prevGraphemeBreakType","nextCharLength","prevCharLength","getCharContainingOffset","endOffset","CONTAINS_RTL","containsRTL","IS_BASIC_ASCII","isBasicASCII","UNUSUAL_LINE_TERMINATORS","containsUnusualLineTerminators","isFullWidthCharacter","isEmojiImprecise","UTF8_BOM_CHARACTER","startsWithUTF8BOM","containsUppercaseCharacter","singleLetterHash","breakTypeA","breakTypeB","_INSTANCE","_data","nodeCount","nodeIndex","getLeftDeleteOffset","emojiOffset","isEmojiModifier","resultOffset","getOffsetBeforeLastEmojiComponent","noBreakWhitespace","AmbiguousCharacters","locales","cache","getLocales","_locales","confusableDictionary","isAmbiguous","getPrimaryConfusable","getConfusableCodePoints","ambiguousCharacterData","LRUCachedFunction","arrayToMap","intersectMaps","map1","map2","languageSpecificMap","filteredLocales","startsWith","mergeMaps","InvisibleCharacters","getRawData","getData","isInvisibleCharacter","codePoints","MicrotaskDelay","StringIterator","_pos","reset","hasNext","cmp","ConfigKeysIterator","_caseSensitive","_from","_to","justSeps","PathIterator","_splitOnBackslash","_valueLen","UriIterator","_ignoreQueryAndFragment","_states","_stateIdx","_pathIterator","TernarySearchTreeNode","rotateLeft","right","left","updateHeight","rotateRight","heightLeft","heightRight","balanceFactor","TernarySearchTree","forUris","forStrings","forConfigKeys","_iter","_root","iter","mid","oldElement","bf","d1","d2","_getNode","_delete","deleteSuperstr","superStr","_min","newChild","findSubstr","findSuperstr","_findSuperstrOrElement","allowValue","_entries","_dfsEntries","bucket","TfIdfCalculator","chunkCount","chunkOccurrences","documents","calculateScores","embedding","computeEmbedding","idfCache","scores","doc","isCancellationRequested","chunk","chunks","score","computeSimilarityScore","termFrequencies","countMapFrom","splitTerms","word","matchAll","camelParts","part","updateDocuments","deleteDocument","textChunks","tf","term","currentOccurrences","newOccurrences","queryEmbedding","sum","termTfidf","chunkTf","chunkIdf","computeIdf","computeTfidf","log","occurrences","idf","normalizeTfIdfScores","ThemeColor","isThemeColor","iconNameSegment","ThemeIconIdRegex","asClassNameArray","icon","Codicon","modifier","classNames","asClassName","asCSSSelector","isThemeIcon","color","_regexFromString","fromId","modify","tildeIndex","getModifier","ti1","ti2","isString","TypedArray","isNumber","isIterable","isBoolean","isUndefined","isDefined","assertType","condition","assertIsDefined","isFunction","validateConstraints","constraints","validateConstraint","constraint","toUint8","v","toUint32","_schemePattern","_singleSlashStart","_doubleSlashStart","_slash","_regexp","schemeOrData","_strict","_schemeFix","_referenceResolution","_validateUri","Uri","percentDecode","components","strict","newPath","_asFormatted","_formatted","external","_fsPath","_sep","_pathSepMarker","encodeTable","encodeURIComponentFast","uriComponent","isPath","isAuthority","nativeEncodePos","encodeURIComponentMinimal","keepDriveLetterCasing","skipEncoding","encoder","userinfo","decodeURIComponentGraceful","_rEncodedAsHex","generateUuid","crypto","randomUUID","getRandomValues","_hex"],"sourceRoot":""}