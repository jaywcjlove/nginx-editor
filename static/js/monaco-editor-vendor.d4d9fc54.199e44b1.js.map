{"version":3,"file":"static/js/monaco-editor-vendor.d4d9fc54.199e44b1.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHints.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsLocations.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsController.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/consts.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostText.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionToGhostText.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/suggestWidgetInlineCompletionProvider.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/suggestWidgetPreviewModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/utils.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextController.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsHoverParticipant.js","../node_modules/monaco-editor/esm/vs/editor/contrib/lineSelection/browser/lineSelection.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/copyLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/moveLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/sortLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/linesOperations.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linkedEditing/browser/linkedEditing.js","../node_modules/monaco-editor/esm/vs/editor/contrib/links/browser/getLinks.js","../node_modules/monaco-editor/esm/vs/editor/contrib/links/browser/links.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { InlayHintsProviderRegistry } from '../../../common/languages.js';\nexport class InlayHintAnchor {\n    constructor(range, direction) {\n        this.range = range;\n        this.direction = direction;\n    }\n}\nexport class InlayHintItem {\n    constructor(hint, anchor, provider) {\n        this.hint = hint;\n        this.anchor = anchor;\n        this.provider = provider;\n        this._isResolved = false;\n    }\n    with(delta) {\n        const result = new InlayHintItem(this.hint, delta.anchor, this.provider);\n        result._isResolved = this._isResolved;\n        result._currentResolve = this._currentResolve;\n        return result;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.provider.resolveInlayHint !== 'function') {\n                return;\n            }\n            if (this._currentResolve) {\n                // wait for an active resolve operation and try again\n                // when that's done.\n                yield this._currentResolve;\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                return this.resolve(token);\n            }\n            if (!this._isResolved) {\n                this._currentResolve = this._doResolve(token)\n                    .finally(() => this._currentResolve = undefined);\n            }\n            yield this._currentResolve;\n        });\n    }\n    _doResolve(token) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const newHint = yield Promise.resolve(this.provider.resolveInlayHint(this.hint, token));\n                this.hint.tooltip = (_a = newHint === null || newHint === void 0 ? void 0 : newHint.tooltip) !== null && _a !== void 0 ? _a : this.hint.tooltip;\n                this.hint.label = (_b = newHint === null || newHint === void 0 ? void 0 : newHint.label) !== null && _b !== void 0 ? _b : this.hint.label;\n                this._isResolved = true;\n            }\n            catch (err) {\n                onUnexpectedExternalError(err);\n                this._isResolved = false;\n            }\n        });\n    }\n}\nexport class InlayHintsFragments {\n    constructor(ranges, data, model) {\n        this._disposables = new DisposableStore();\n        this.ranges = ranges;\n        this.provider = new Set();\n        const items = [];\n        for (const [list, provider] of data) {\n            this._disposables.add(list);\n            this.provider.add(provider);\n            for (const hint of list.hints) {\n                // compute the range to which the item should be attached to\n                let position = model.validatePosition(hint.position);\n                let direction = 'before';\n                const wordRange = InlayHintsFragments._getRangeAtPosition(model, position);\n                let range;\n                if (wordRange.getStartPosition().isBefore(position)) {\n                    range = Range.fromPositions(wordRange.getStartPosition(), position);\n                    direction = 'after';\n                }\n                else {\n                    range = Range.fromPositions(position, wordRange.getEndPosition());\n                    direction = 'before';\n                }\n                items.push(new InlayHintItem(hint, new InlayHintAnchor(range, direction), provider));\n            }\n        }\n        this.items = items.sort((a, b) => Position.compare(a.hint.position, b.hint.position));\n    }\n    static create(model, ranges, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = [];\n            const promises = InlayHintsProviderRegistry.ordered(model).reverse().map(provider => ranges.map((range) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const result = yield provider.provideInlayHints(model, range, token);\n                    if (result === null || result === void 0 ? void 0 : result.hints.length) {\n                        data.push([result, provider]);\n                    }\n                }\n                catch (err) {\n                    onUnexpectedExternalError(err);\n                }\n            })));\n            yield Promise.all(promises.flat());\n            if (token.isCancellationRequested || model.isDisposed()) {\n                throw new CancellationError();\n            }\n            return new InlayHintsFragments(ranges, data, model);\n        });\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    static _getRangeAtPosition(model, position) {\n        const line = position.lineNumber;\n        const word = model.getWordAtPosition(position);\n        if (word) {\n            // always prefer the word range\n            return new Range(line, word.startColumn, line, word.endColumn);\n        }\n        model.tokenizeIfCheap(line);\n        const tokens = model.getLineTokens(line);\n        const offset = position.column - 1;\n        const idx = tokens.findTokenIndexAtOffset(offset);\n        let start = tokens.getStartOffset(idx);\n        let end = tokens.getEndOffset(idx);\n        if (end - start === 1) {\n            // single character token, when at its end try leading/trailing token instead\n            if (start === offset && idx > 1) {\n                // leading token\n                start = tokens.getStartOffset(idx - 1);\n                end = tokens.getEndOffset(idx - 1);\n            }\n            else if (end === offset && idx < tokens.getCount() - 1) {\n                // trailing token\n                start = tokens.getStartOffset(idx + 1);\n                end = tokens.getEndOffset(idx + 1);\n            }\n        }\n        return new Range(line, start + 1, line, end + 1);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Action, Separator } from '../../../../base/common/actions.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { EditorExtensionsRegistry } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { DefinitionAction, SymbolNavigationAction, SymbolNavigationAnchor } from '../../gotoSymbol/browser/goToCommands.js';\nimport { PeekContext } from '../../peekView/browser/peekView.js';\nimport { isIMenuItem, MenuId, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nexport function showGoToContextMenu(accessor, editor, anchor, part) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const resolverService = accessor.get(ITextModelService);\n        const contextMenuService = accessor.get(IContextMenuService);\n        const commandService = accessor.get(ICommandService);\n        const instaService = accessor.get(IInstantiationService);\n        const notificationService = accessor.get(INotificationService);\n        yield part.item.resolve(CancellationToken.None);\n        if (!part.part.location) {\n            return;\n        }\n        const location = part.part.location;\n        const menuActions = [];\n        // from all registered (not active) context menu actions select those\n        // that are a symbol navigation action\n        const filter = new Set(MenuRegistry.getMenuItems(MenuId.EditorContext)\n            .map(item => isIMenuItem(item) ? item.command.id : ''));\n        for (const delegate of EditorExtensionsRegistry.getEditorActions()) {\n            if (delegate instanceof SymbolNavigationAction && filter.has(delegate.id)) {\n                menuActions.push(new Action(delegate.id, delegate.label, undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                    const ref = yield resolverService.createModelReference(location.uri);\n                    try {\n                        yield instaService.invokeFunction(delegate.run.bind(delegate), editor, new SymbolNavigationAnchor(ref.object.textEditorModel, Range.getStartPosition(location.range)));\n                    }\n                    finally {\n                        ref.dispose();\n                    }\n                })));\n            }\n        }\n        if (part.part.command) {\n            const { command } = part.part;\n            menuActions.push(new Separator());\n            menuActions.push(new Action(command.id, command.title, undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                var _b;\n                try {\n                    yield commandService.executeCommand(command.id, ...((_b = command.arguments) !== null && _b !== void 0 ? _b : []));\n                }\n                catch (err) {\n                    notificationService.notify({\n                        severity: Severity.Error,\n                        source: part.item.provider.displayName,\n                        message: err\n                    });\n                }\n            })));\n        }\n        // show context menu\n        const useShadowDOM = editor.getOption(115 /* useShadowDOM */);\n        contextMenuService.showContextMenu({\n            domForShadowRoot: useShadowDOM ? (_a = editor.getDomNode()) !== null && _a !== void 0 ? _a : undefined : undefined,\n            getAnchor: () => {\n                const box = dom.getDomNodePagePosition(anchor);\n                return { x: box.left, y: box.top + box.height + 8 };\n            },\n            getActions: () => menuActions,\n            onHide: () => {\n                editor.focus();\n            },\n            autoSelectFirstItem: true,\n        });\n    });\n}\nexport function goToDefinitionWithLocation(accessor, event, editor, location) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const resolverService = accessor.get(ITextModelService);\n        const ref = yield resolverService.createModelReference(location.uri);\n        yield editor.invokeWithinContext((accessor) => __awaiter(this, void 0, void 0, function* () {\n            const openToSide = event.hasSideBySideModifier;\n            const contextKeyService = accessor.get(IContextKeyService);\n            const isInPeek = PeekContext.inPeekEditor.getValue(contextKeyService);\n            const canPeek = !openToSide && editor.getOption(78 /* definitionLinkOpensInPeek */) && !isInPeek;\n            const action = new DefinitionAction({ openToSide, openInPeek: canPeek, muteMessage: true }, { alias: '', label: '', id: '', precondition: undefined });\n            return action.run(accessor, editor, { model: ref.object.textEditorModel, position: Range.getStartPosition(location.range) });\n        }));\n        ref.dispose();\n    });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DynamicCssRules } from '../../../browser/editorDom.js';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { EDITOR_FONT_DEFAULTS } from '../../../common/config/editorOptions.js';\nimport { Range } from '../../../common/core/range.js';\nimport * as languages from '../../../common/languages.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { InlayHintAnchor, InlayHintsFragments } from './inlayHints.js';\nimport { goToDefinitionWithLocation, showGoToContextMenu } from './inlayHintsLocations.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport * as colors from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\n// --- hint caching service (per session)\nclass InlayHintsCache {\n    constructor() {\n        this._entries = new LRUCache(50);\n    }\n    get(model) {\n        const key = InlayHintsCache._key(model);\n        return this._entries.get(key);\n    }\n    set(model, value) {\n        const key = InlayHintsCache._key(model);\n        this._entries.set(key, value);\n    }\n    static _key(model) {\n        return `${model.uri.toString()}/${model.getVersionId()}`;\n    }\n}\nconst IInlayHintsCache = createDecorator('IInlayHintsCache');\nregisterSingleton(IInlayHintsCache, InlayHintsCache, true);\n// --- rendered label\nexport class RenderedInlayHintLabelPart {\n    constructor(item, index) {\n        this.item = item;\n        this.index = index;\n    }\n    get part() {\n        const label = this.item.hint.label;\n        if (typeof label === 'string') {\n            return { label };\n        }\n        else {\n            return label[this.index];\n        }\n    }\n}\n// --- controller\nlet InlayHintsController = class InlayHintsController {\n    constructor(_editor, _featureDebounce, _inlayHintsCache, _commandService, _notificationService, _instaService) {\n        this._editor = _editor;\n        this._inlayHintsCache = _inlayHintsCache;\n        this._commandService = _commandService;\n        this._notificationService = _notificationService;\n        this._instaService = _instaService;\n        this._disposables = new DisposableStore();\n        this._sessionDisposables = new DisposableStore();\n        this._decorationsMetadata = new Map();\n        this._ruleFactory = new DynamicCssRules(this._editor);\n        this._debounceInfo = _featureDebounce.for(languages.InlayHintsProviderRegistry, 'InlayHint', { min: 25 });\n        this._disposables.add(languages.InlayHintsProviderRegistry.onDidChange(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModel(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModelLanguage(() => this._update()));\n        this._disposables.add(_editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(127 /* inlayHints */)) {\n                this._update();\n            }\n        }));\n        this._update();\n    }\n    static get(editor) {\n        var _a;\n        return (_a = editor.getContribution(InlayHintsController.ID)) !== null && _a !== void 0 ? _a : undefined;\n    }\n    dispose() {\n        this._sessionDisposables.dispose();\n        this._removeAllDecorations();\n        this._disposables.dispose();\n    }\n    _update() {\n        this._sessionDisposables.clear();\n        this._removeAllDecorations();\n        if (!this._editor.getOption(127 /* inlayHints */).enabled) {\n            return;\n        }\n        const model = this._editor.getModel();\n        if (!model || !languages.InlayHintsProviderRegistry.has(model)) {\n            return;\n        }\n        // iff possible, quickly update from cache\n        const cached = this._inlayHintsCache.get(model);\n        if (cached) {\n            this._updateHintsDecorators([model.getFullModelRange()], cached);\n        }\n        this._sessionDisposables.add(toDisposable(() => {\n            // cache items when switching files etc\n            if (!model.isDisposed()) {\n                this._cacheHintsForFastRestore(model);\n            }\n        }));\n        let cts;\n        let watchedProviders = new Set();\n        const scheduler = new RunOnceScheduler(() => __awaiter(this, void 0, void 0, function* () {\n            const t1 = Date.now();\n            cts === null || cts === void 0 ? void 0 : cts.dispose(true);\n            cts = new CancellationTokenSource();\n            const listener = model.onWillDispose(() => cts === null || cts === void 0 ? void 0 : cts.cancel());\n            try {\n                const myToken = cts.token;\n                const inlayHints = yield InlayHintsFragments.create(model, this._getHintsRanges(), myToken);\n                scheduler.delay = this._debounceInfo.update(model, Date.now() - t1);\n                if (myToken.isCancellationRequested) {\n                    inlayHints.dispose();\n                    return;\n                }\n                // listen to provider changes\n                for (const provider of inlayHints.provider) {\n                    if (typeof provider.onDidChangeInlayHints === 'function' && !watchedProviders.has(provider)) {\n                        watchedProviders.add(provider);\n                        this._sessionDisposables.add(provider.onDidChangeInlayHints(() => {\n                            if (!scheduler.isScheduled()) { // ignore event when request is already scheduled\n                                scheduler.schedule();\n                            }\n                        }));\n                    }\n                }\n                this._sessionDisposables.add(inlayHints);\n                this._updateHintsDecorators(inlayHints.ranges, inlayHints.items);\n                this._cacheHintsForFastRestore(model);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                cts.dispose();\n                listener.dispose();\n            }\n        }), this._debounceInfo.get(model));\n        this._sessionDisposables.add(scheduler);\n        this._sessionDisposables.add(toDisposable(() => cts === null || cts === void 0 ? void 0 : cts.dispose(true)));\n        scheduler.schedule(0);\n        this._sessionDisposables.add(this._editor.onDidScrollChange((e) => {\n            // update when scroll position changes\n            // uses scrollTopChanged has weak heuristic to differenatiate between scrolling due to\n            // typing or due to \"actual\" scrolling\n            if (e.scrollTopChanged || !scheduler.isScheduled()) {\n                scheduler.schedule();\n            }\n        }));\n        this._sessionDisposables.add(this._editor.onDidChangeModelContent((e) => {\n            // update less aggressive when typing\n            const delay = Math.max(scheduler.delay, 1250);\n            scheduler.schedule(delay);\n        }));\n        // mouse gestures\n        this._sessionDisposables.add(this._installLinkGesture());\n        this._sessionDisposables.add(this._installContextMenu());\n    }\n    _installLinkGesture() {\n        let removeHighlight = () => { };\n        const gesture = new ClickLinkGesture(this._editor);\n        gesture.onMouseMoveOrRelevantKeyDown(e => {\n            const [mouseEvent] = e;\n            const labelPart = this._getInlayHintLabelPart(mouseEvent);\n            const model = this._editor.getModel();\n            if (!labelPart || !mouseEvent.hasTriggerModifier || !model) {\n                removeHighlight();\n                return;\n            }\n            // render link => when the modifier is pressed and when there is a command or location\n            if (mouseEvent.hasTriggerModifier && (labelPart.part.command || labelPart.part.location)) {\n                // resolve the item\n                const cts = new CancellationTokenSource();\n                labelPart.item.resolve(cts.token);\n                this._activeInlayHintPart = labelPart;\n                const lineNumber = this._activeInlayHintPart.item.hint.position.lineNumber;\n                const range = new Range(lineNumber, 1, lineNumber, model.getLineMaxColumn(lineNumber));\n                const lineHints = new Set();\n                for (const data of this._decorationsMetadata.values()) {\n                    if (range.containsRange(data.item.anchor.range)) {\n                        lineHints.add(data.item);\n                    }\n                }\n                this._updateHintsDecorators([range], Array.from(lineHints));\n                removeHighlight = () => {\n                    cts.dispose(true);\n                    this._activeInlayHintPart = undefined;\n                    this._updateHintsDecorators([range], Array.from(lineHints));\n                };\n            }\n        });\n        gesture.onCancel(removeHighlight);\n        gesture.onExecute((e) => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            const label = this._getInlayHintLabelPart(e);\n            if (label) {\n                const part = label.part;\n                if (part.location) {\n                    // location -> execute go to def\n                    this._instaService.invokeFunction(goToDefinitionWithLocation, e, this._editor, part.location);\n                }\n                else if (languages.Command.is(part.command)) {\n                    // command -> execute it\n                    try {\n                        yield this._commandService.executeCommand(part.command.id, ...((_a = part.command.arguments) !== null && _a !== void 0 ? _a : []));\n                    }\n                    catch (err) {\n                        this._notificationService.notify({\n                            severity: Severity.Error,\n                            source: label.item.provider.displayName,\n                            message: err\n                        });\n                    }\n                }\n            }\n        }));\n        return gesture;\n    }\n    _installContextMenu() {\n        return this._editor.onContextMenu((e) => __awaiter(this, void 0, void 0, function* () {\n            if (!(e.event.target instanceof HTMLElement)) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (part) {\n                yield this._instaService.invokeFunction(showGoToContextMenu, this._editor, e.event.target, part);\n            }\n        }));\n    }\n    _getInlayHintLabelPart(e) {\n        var _a;\n        if (e.target.type !== 6 /* CONTENT_TEXT */) {\n            return undefined;\n        }\n        const options = (_a = e.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n        if (options instanceof ModelDecorationInjectedTextOptions && (options === null || options === void 0 ? void 0 : options.attachedData) instanceof RenderedInlayHintLabelPart) {\n            return options.attachedData;\n        }\n        return undefined;\n    }\n    _cacheHintsForFastRestore(model) {\n        const items = new Map();\n        for (const [id, obj] of this._decorationsMetadata) {\n            if (items.has(obj.item)) {\n                // an inlay item can be rendered as multiple decorations\n                // but they will all uses the same range\n                continue;\n            }\n            let value = obj.item;\n            const range = model.getDecorationRange(id);\n            if (range) {\n                // update range with whatever the editor has tweaked it to\n                const anchor = new InlayHintAnchor(range, obj.item.anchor.direction);\n                value = obj.item.with({ anchor });\n            }\n            items.set(obj.item, value);\n        }\n        this._inlayHintsCache.set(model, Array.from(items.values()));\n    }\n    _getHintsRanges() {\n        const extra = 30;\n        const model = this._editor.getModel();\n        const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\n        const result = [];\n        for (const range of visibleRanges.sort(Range.compareRangesUsingStarts)) {\n            const extendedRange = model.validateRange(new Range(range.startLineNumber - extra, range.startColumn, range.endLineNumber + extra, range.endColumn));\n            if (result.length === 0 || !Range.areIntersectingOrTouching(result[result.length - 1], extendedRange)) {\n                result.push(extendedRange);\n            }\n            else {\n                result[result.length - 1] = Range.plusRange(result[result.length - 1], extendedRange);\n            }\n        }\n        return result;\n    }\n    _updateHintsDecorators(ranges, items) {\n        var _a, _b;\n        // utils to collect/create injected text decorations\n        const newDecorationsData = [];\n        const addInjectedText = (item, ref, content, cursorStops, attachedData) => {\n            newDecorationsData.push({\n                item,\n                classNameRef: ref,\n                decoration: {\n                    range: item.anchor.range,\n                    options: {\n                        // className: \"rangeHighlight\", // DEBUG highlight to see to what range a hint is attached\n                        description: 'InlayHint',\n                        showIfCollapsed: item.anchor.range.isEmpty(),\n                        collapseOnReplaceEdit: !item.anchor.range.isEmpty(),\n                        stickiness: 0 /* AlwaysGrowsWhenTypingAtEdges */,\n                        [item.anchor.direction]: {\n                            content,\n                            inlineClassNameAffectsLetterSpacing: true,\n                            inlineClassName: ref.className,\n                            cursorStops,\n                            attachedData\n                        }\n                    }\n                }\n            });\n        };\n        const addInjectedWhitespace = (item, isLast) => {\n            const marginRule = this._ruleFactory.createClassNameRef({\n                width: `${(fontSize / 3) | 0}px`,\n                display: 'inline-block'\n            });\n            addInjectedText(item, marginRule, '\\u200a', isLast ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None);\n        };\n        //\n        const { fontSize, fontFamily } = this._getLayoutInfo();\n        const fontFamilyVar = '--code-editorInlayHintsFontFamily';\n        this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily);\n        for (const item of items) {\n            // whitespace leading the actual label\n            if (item.hint.paddingLeft) {\n                addInjectedWhitespace(item, false);\n            }\n            // the label with its parts\n            const parts = typeof item.hint.label === 'string'\n                ? [{ label: item.hint.label }]\n                : item.hint.label;\n            for (let i = 0; i < parts.length; i++) {\n                const part = parts[i];\n                const isFirst = i === 0;\n                const isLast = i === parts.length - 1;\n                const cssProperties = {\n                    fontSize: `${fontSize}px`,\n                    fontFamily: `var(${fontFamilyVar}), ${EDITOR_FONT_DEFAULTS.fontFamily}`,\n                    verticalAlign: 'middle',\n                };\n                this._fillInColors(cssProperties, item.hint);\n                if ((part.command || part.location) && ((_a = this._activeInlayHintPart) === null || _a === void 0 ? void 0 : _a.item) === item && this._activeInlayHintPart.index === i) {\n                    // active link!\n                    cssProperties.textDecoration = 'underline';\n                    cssProperties.cursor = 'pointer';\n                    cssProperties.color = themeColorFromId(colors.editorActiveLinkForeground);\n                }\n                if (isFirst && isLast) {\n                    // only element\n                    cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px`;\n                    cssProperties.borderRadius = `${(fontSize / 4) | 0}px`;\n                }\n                else if (isFirst) {\n                    // first element\n                    cssProperties.padding = `1px 0 1px ${Math.max(1, fontSize / 4) | 0}px`;\n                    cssProperties.borderRadius = `${(fontSize / 4) | 0}px 0 0 ${(fontSize / 4) | 0}px`;\n                }\n                else if (isLast) {\n                    // last element\n                    cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px 1px 0`;\n                    cssProperties.borderRadius = `0 ${(fontSize / 4) | 0}px ${(fontSize / 4) | 0}px 0`;\n                }\n                else {\n                    cssProperties.padding = `1px 0 1px 0`;\n                }\n                addInjectedText(item, this._ruleFactory.createClassNameRef(cssProperties), fixSpace(part.label), isLast && !item.hint.paddingRight ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None, new RenderedInlayHintLabelPart(item, i));\n            }\n            // whitespace trailing the actual label\n            if (item.hint.paddingRight) {\n                addInjectedWhitespace(item, true);\n            }\n            if (newDecorationsData.length > InlayHintsController._MAX_DECORATORS) {\n                break;\n            }\n        }\n        // collect all decoration ids that are affected by the ranges\n        // and only update those decorations\n        const decorationIdsToReplace = [];\n        for (const range of ranges) {\n            for (const { id } of (_b = this._editor.getDecorationsInRange(range)) !== null && _b !== void 0 ? _b : []) {\n                const metadata = this._decorationsMetadata.get(id);\n                if (metadata) {\n                    decorationIdsToReplace.push(id);\n                    metadata.classNameRef.dispose();\n                    this._decorationsMetadata.delete(id);\n                }\n            }\n        }\n        const newDecorationIds = this._editor.deltaDecorations(decorationIdsToReplace, newDecorationsData.map(d => d.decoration));\n        for (let i = 0; i < newDecorationIds.length; i++) {\n            const data = newDecorationsData[i];\n            this._decorationsMetadata.set(newDecorationIds[i], { item: data.item, classNameRef: data.classNameRef });\n        }\n    }\n    _fillInColors(props, hint) {\n        if (hint.kind === languages.InlayHintKind.Parameter) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintParameterBackground);\n            props.color = themeColorFromId(colors.editorInlayHintParameterForeground);\n        }\n        else if (hint.kind === languages.InlayHintKind.Type) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintTypeBackground);\n            props.color = themeColorFromId(colors.editorInlayHintTypeForeground);\n        }\n        else {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintBackground);\n            props.color = themeColorFromId(colors.editorInlayHintForeground);\n        }\n    }\n    _getLayoutInfo() {\n        const options = this._editor.getOption(127 /* inlayHints */);\n        const editorFontSize = this._editor.getOption(46 /* fontSize */);\n        let fontSize = options.fontSize;\n        if (!fontSize || fontSize < 5 || fontSize > editorFontSize) {\n            fontSize = (editorFontSize * .9) | 0;\n        }\n        const fontFamily = options.fontFamily || this._editor.getOption(43 /* fontFamily */);\n        return { fontSize, fontFamily };\n    }\n    _removeAllDecorations() {\n        this._editor.deltaDecorations(Array.from(this._decorationsMetadata.keys()), []);\n        for (let obj of this._decorationsMetadata.values()) {\n            obj.classNameRef.dispose();\n        }\n        this._decorationsMetadata.clear();\n    }\n};\nInlayHintsController.ID = 'editor.contrib.InlayHints';\nInlayHintsController._MAX_DECORATORS = 1500;\nInlayHintsController = __decorate([\n    __param(1, ILanguageFeatureDebounceService),\n    __param(2, IInlayHintsCache),\n    __param(3, ICommandService),\n    __param(4, INotificationService),\n    __param(5, IInstantiationService)\n], InlayHintsController);\nexport { InlayHintsController };\n// Prevents the view from potentially visible whitespace\nfunction fixSpace(str) {\n    const noBreakWhitespace = '\\xa0';\n    return str.replace(/[ \\t]/g, noBreakWhitespace);\n}\nregisterEditorContribution(InlayHintsController.ID, InlayHintsController);\nCommandsRegistry.registerCommand('_executeInlayHintProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    const [uri, range] = args;\n    assertType(URI.isUri(uri));\n    assertType(Range.isIRange(range));\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\n    try {\n        const model = yield InlayHintsFragments.create(ref.object.textEditorModel, [Range.lift(range)], CancellationToken.None);\n        const result = model.items.map(i => i.hint);\n        setTimeout(() => model.dispose(), 0); // dispose after sending to ext host\n        return result;\n    }\n    finally {\n        ref.dispose();\n    }\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Position } from '../../../common/core/position.js';\nimport { HoverProviderRegistry } from '../../../common/languages.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { ILanguageService } from '../../../common/services/language.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { getHover } from '../../hover/browser/getHover.js';\nimport { MarkdownHover, MarkdownHoverParticipant } from '../../hover/browser/markdownHoverParticipant.js';\nimport { RenderedInlayHintLabelPart, InlayHintsController } from './inlayHintsController.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nclass InlayHintsHoverAnchor extends HoverForeignElementAnchor {\n    constructor(part, owner) {\n        super(10, owner, part.item.anchor.range);\n        this.part = part;\n    }\n}\nlet InlayHintsHover = class InlayHintsHover extends MarkdownHoverParticipant {\n    constructor(editor, languageService, openerService, configurationService, _resolverService) {\n        super(editor, languageService, openerService, configurationService);\n        this._resolverService = _resolverService;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        var _a;\n        const controller = InlayHintsController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        if (mouseEvent.target.type !== 6 /* CONTENT_TEXT */) {\n            return null;\n        }\n        const options = (_a = mouseEvent.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n        if (!(options instanceof ModelDecorationInjectedTextOptions && options.attachedData instanceof RenderedInlayHintLabelPart)) {\n            return null;\n        }\n        return new InlayHintsHoverAnchor(options.attachedData, this);\n    }\n    computeSync() {\n        return [];\n    }\n    computeAsync(anchor, _lineDecorations, token) {\n        if (!(anchor instanceof InlayHintsHoverAnchor)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        return new AsyncIterableObject((executor) => __awaiter(this, void 0, void 0, function* () {\n            var e_1, _a;\n            const { part } = anchor;\n            yield part.item.resolve(token);\n            if (token.isCancellationRequested) {\n                return;\n            }\n            // (1) Inlay Tooltip\n            let itemTooltip;\n            if (typeof part.item.hint.tooltip === 'string') {\n                itemTooltip = new MarkdownString().appendText(part.item.hint.tooltip);\n            }\n            else if (part.item.hint.tooltip) {\n                itemTooltip = part.item.hint.tooltip;\n            }\n            if (itemTooltip) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [itemTooltip], 0));\n            }\n            // (2) Inlay Label Part Tooltip\n            let partTooltip;\n            if (typeof part.part.tooltip === 'string') {\n                partTooltip = new MarkdownString().appendText(part.part.tooltip);\n            }\n            else if (part.part.tooltip) {\n                partTooltip = part.part.tooltip;\n            }\n            if (partTooltip) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [partTooltip], 1));\n            }\n            // (3) Inlay Label Part Location tooltip\n            const iterable = yield this._resolveInlayHintLabelPartHover(part, token);\n            try {\n                for (var iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = yield iterable_1.next(), !iterable_1_1.done;) {\n                    let item = iterable_1_1.value;\n                    executor.emitOne(item);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (iterable_1_1 && !iterable_1_1.done && (_a = iterable_1.return)) yield _a.call(iterable_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }));\n    }\n    _resolveInlayHintLabelPartHover(part, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!part.part.location) {\n                return AsyncIterableObject.EMPTY;\n            }\n            const { uri, range } = part.part.location;\n            const ref = yield this._resolverService.createModelReference(uri);\n            try {\n                const model = ref.object.textEditorModel;\n                if (!HoverProviderRegistry.has(model)) {\n                    return AsyncIterableObject.EMPTY;\n                }\n                return getHover(model, new Position(range.startLineNumber, range.startColumn), token)\n                    .filter(item => !isEmptyMarkdownString(item.hover.contents))\n                    .map(item => new MarkdownHover(this, part.item.anchor.range, item.hover.contents, 2 + item.ordinal));\n            }\n            finally {\n                ref.dispose();\n            }\n        });\n    }\n};\nInlayHintsHover = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService),\n    __param(4, ITextModelService)\n], InlayHintsHover);\nexport { InlayHintsHover };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const inlineSuggestCommitId = 'editor.action.inlineSuggest.commit';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Range } from '../../../common/core/range.js';\nexport class GhostText {\n    constructor(lineNumber, parts, additionalReservedLineCount = 0) {\n        this.lineNumber = lineNumber;\n        this.parts = parts;\n        this.additionalReservedLineCount = additionalReservedLineCount;\n    }\n    renderForScreenReader(lineText) {\n        if (this.parts.length === 0) {\n            return '';\n        }\n        const lastPart = this.parts[this.parts.length - 1];\n        const cappedLineText = lineText.substr(0, lastPart.column - 1);\n        const text = applyEdits(cappedLineText, this.parts.map(p => ({\n            range: { startLineNumber: 1, endLineNumber: 1, startColumn: p.column, endColumn: p.column },\n            text: p.lines.join('\\n')\n        })));\n        return text.substring(this.parts[0].column - 1);\n    }\n}\nclass PositionOffsetTransformer {\n    constructor(text) {\n        this.lineStartOffsetByLineIdx = [];\n        this.lineStartOffsetByLineIdx.push(0);\n        for (let i = 0; i < text.length; i++) {\n            if (text.charAt(i) === '\\n') {\n                this.lineStartOffsetByLineIdx.push(i + 1);\n            }\n        }\n    }\n    getOffset(position) {\n        return this.lineStartOffsetByLineIdx[position.lineNumber - 1] + position.column - 1;\n    }\n}\nfunction applyEdits(text, edits) {\n    const transformer = new PositionOffsetTransformer(text);\n    const offsetEdits = edits.map(e => {\n        const range = Range.lift(e.range);\n        return ({\n            startOffset: transformer.getOffset(range.getStartPosition()),\n            endOffset: transformer.getOffset(range.getEndPosition()),\n            text: e.text\n        });\n    });\n    offsetEdits.sort((a, b) => b.startOffset - a.startOffset);\n    for (const edit of offsetEdits) {\n        text = text.substring(0, edit.startOffset) + edit.text + text.substring(edit.endOffset);\n    }\n    return text;\n}\nexport class GhostTextPart {\n    constructor(column, lines, \n    /**\n     * Indicates if this part is a preview of an inline suggestion when a suggestion is previewed.\n    */\n    preview) {\n        this.column = column;\n        this.lines = lines;\n        this.preview = preview;\n    }\n}\nexport class BaseGhostTextWidgetModel extends Disposable {\n    constructor(editor) {\n        super();\n        this.editor = editor;\n        this._expanded = undefined;\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(106 /* suggest */) && this._expanded === undefined) {\n                this.onDidChangeEmitter.fire();\n            }\n        }));\n    }\n    setExpanded(expanded) {\n        this._expanded = true;\n        this.onDidChangeEmitter.fire();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../../base/common/diff/diff.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { GhostText, GhostTextPart } from './ghostText.js';\nexport function normalizedInlineCompletionsEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    return a.range.equalsRange(b.range) && a.text === b.text && a.command === b.command;\n}\n/**\n * @param previewSuffixLength Sets where to split `inlineCompletion.text`.\n * \tIf the text is `hello` and the suffix length is 2, the non-preview part is `hel` and the preview-part is `lo`.\n*/\nexport function inlineCompletionToGhostText(inlineCompletion, textModel, mode, cursorPosition, previewSuffixLength = 0) {\n    if (inlineCompletion.range.startLineNumber !== inlineCompletion.range.endLineNumber) {\n        // Only single line replacements are supported.\n        return undefined;\n    }\n    const sourceLine = textModel.getLineContent(inlineCompletion.range.startLineNumber);\n    const sourceIndentationLength = strings.getLeadingWhitespace(sourceLine).length;\n    const suggestionTouchesIndentation = inlineCompletion.range.startColumn - 1 <= sourceIndentationLength;\n    if (suggestionTouchesIndentation) {\n        // source:      ··········[······abc]\n        //                         ^^^^^^^^^ inlineCompletion.range\n        //              ^^^^^^^^^^ ^^^^^^ sourceIndentationLength\n        //                         ^^^^^^ replacedIndentation.length\n        //                               ^^^ rangeThatDoesNotReplaceIndentation\n        // inlineCompletion.text: '··foo'\n        //                         ^^ suggestionAddedIndentationLength\n        const suggestionAddedIndentationLength = strings.getLeadingWhitespace(inlineCompletion.text).length;\n        const replacedIndentation = sourceLine.substring(inlineCompletion.range.startColumn - 1, sourceIndentationLength);\n        const rangeThatDoesNotReplaceIndentation = Range.fromPositions(inlineCompletion.range.getStartPosition().delta(0, replacedIndentation.length), inlineCompletion.range.getEndPosition());\n        const suggestionWithoutIndentationChange = inlineCompletion.text.startsWith(replacedIndentation)\n            // Adds more indentation without changing existing indentation: We can add ghost text for this\n            ? inlineCompletion.text.substring(replacedIndentation.length)\n            // Changes or removes existing indentation. Only add ghost text for the non-indentation part.\n            : inlineCompletion.text.substring(suggestionAddedIndentationLength);\n        inlineCompletion = {\n            range: rangeThatDoesNotReplaceIndentation,\n            text: suggestionWithoutIndentationChange,\n            command: inlineCompletion.command\n        };\n    }\n    // This is a single line string\n    const valueToBeReplaced = textModel.getValueInRange(inlineCompletion.range);\n    const changes = cachingDiff(valueToBeReplaced, inlineCompletion.text);\n    if (!changes) {\n        // No ghost text in case the diff would be too slow to compute\n        return undefined;\n    }\n    const lineNumber = inlineCompletion.range.startLineNumber;\n    const parts = new Array();\n    if (mode === 'prefix') {\n        const filteredChanges = changes.filter(c => c.originalLength === 0);\n        if (filteredChanges.length > 1 || filteredChanges.length === 1 && filteredChanges[0].originalStart !== valueToBeReplaced.length) {\n            // Prefixes only have a single change.\n            return undefined;\n        }\n    }\n    const previewStartInCompletionText = inlineCompletion.text.length - previewSuffixLength;\n    for (const c of changes) {\n        const insertColumn = inlineCompletion.range.startColumn + c.originalStart + c.originalLength;\n        if (mode === 'subwordSmart' && cursorPosition && cursorPosition.lineNumber === inlineCompletion.range.startLineNumber && insertColumn < cursorPosition.column) {\n            // No ghost text before cursor\n            return undefined;\n        }\n        if (c.originalLength > 0) {\n            return undefined;\n        }\n        if (c.modifiedLength === 0) {\n            continue;\n        }\n        const modifiedEnd = c.modifiedStart + c.modifiedLength;\n        const nonPreviewTextEnd = Math.max(c.modifiedStart, Math.min(modifiedEnd, previewStartInCompletionText));\n        const nonPreviewText = inlineCompletion.text.substring(c.modifiedStart, nonPreviewTextEnd);\n        const italicText = inlineCompletion.text.substring(nonPreviewTextEnd, Math.max(c.modifiedStart, modifiedEnd));\n        if (nonPreviewText.length > 0) {\n            const lines = strings.splitLines(nonPreviewText);\n            parts.push(new GhostTextPart(insertColumn, lines, false));\n        }\n        if (italicText.length > 0) {\n            const lines = strings.splitLines(italicText);\n            parts.push(new GhostTextPart(insertColumn, lines, true));\n        }\n    }\n    return new GhostText(lineNumber, parts, 0);\n}\nlet lastRequest = undefined;\nfunction cachingDiff(originalValue, newValue) {\n    if ((lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.originalValue) === originalValue && (lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.newValue) === newValue) {\n        return lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.changes;\n    }\n    else {\n        const changes = smartDiff(originalValue, newValue);\n        lastRequest = {\n            originalValue,\n            newValue,\n            changes\n        };\n        return changes;\n    }\n}\n/**\n * When matching `if ()` with `if (f() = 1) { g(); }`,\n * align it like this:        `if (       )`\n * Not like this:\t\t\t  `if (  )`\n * Also not like this:\t\t  `if (             )`.\n *\n * The parenthesis are preprocessed to ensure that they match correctly.\n */\nfunction smartDiff(originalValue, newValue) {\n    if (originalValue.length > 5000 || newValue.length > 5000) {\n        // We don't want to work on strings that are too big\n        return undefined;\n    }\n    function getMaxCharCode(val) {\n        let maxCharCode = 0;\n        for (let i = 0, len = val.length; i < len; i++) {\n            const charCode = val.charCodeAt(i);\n            if (charCode > maxCharCode) {\n                maxCharCode = charCode;\n            }\n        }\n        return maxCharCode;\n    }\n    const maxCharCode = Math.max(getMaxCharCode(originalValue), getMaxCharCode(newValue));\n    function getUniqueCharCode(id) {\n        if (id < 0) {\n            throw new Error('unexpected');\n        }\n        return maxCharCode + id + 1;\n    }\n    function getElements(source) {\n        let level = 0;\n        let group = 0;\n        const characters = new Int32Array(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            const id = group * 100 + level;\n            // TODO support more brackets\n            if (source[i] === '(') {\n                characters[i] = getUniqueCharCode(2 * id);\n                level++;\n            }\n            else if (source[i] === ')') {\n                characters[i] = getUniqueCharCode(2 * id + 1);\n                if (level === 1) {\n                    group++;\n                }\n                level = Math.max(level - 1, 0);\n            }\n            else {\n                characters[i] = source.charCodeAt(i);\n            }\n        }\n        return characters;\n    }\n    const elements1 = getElements(originalValue);\n    const elements2 = getElements(newValue);\n    return new LcsDiff({ getElements: () => elements1 }, { getElements: () => elements2 }).ComputeDiff(false).changes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { commonPrefixLength, commonSuffixLength } from '../../../../base/common/strings.js';\nimport { CoreEditingCommands } from '../../../browser/controller/coreCommands.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport { InlineCompletionsProviderRegistry, InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { BaseGhostTextWidgetModel } from './ghostText.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { inlineSuggestCommitId } from './consts.js';\nimport { inlineCompletionToGhostText } from './inlineCompletionToGhostText.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { fixBracketsInLine } from '../../../common/model/bracketPairsTextModelPart/fixBrackets.js';\nlet InlineCompletionsModel = class InlineCompletionsModel extends Disposable {\n    constructor(editor, cache, commandService, languageConfigurationService) {\n        super();\n        this.editor = editor;\n        this.cache = cache;\n        this.commandService = commandService;\n        this.languageConfigurationService = languageConfigurationService;\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.completionSession = this._register(new MutableDisposable());\n        this.active = false;\n        this.disposed = false;\n        this._register(commandService.onDidExecuteCommand(e => {\n            // These commands don't trigger onDidType.\n            const commands = new Set([\n                CoreEditingCommands.Tab.id,\n                CoreEditingCommands.DeleteLeft.id,\n                CoreEditingCommands.DeleteRight.id,\n                inlineSuggestCommitId,\n                'acceptSelectedSuggestion'\n            ]);\n            if (commands.has(e.commandId) && editor.hasTextFocus()) {\n                this.handleUserInput();\n            }\n        }));\n        this._register(this.editor.onDidType((e) => {\n            this.handleUserInput();\n        }));\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\n            if (this.session && !this.session.isValid) {\n                this.hide();\n            }\n        }));\n        this._register(toDisposable(() => {\n            this.disposed = true;\n        }));\n        this._register(this.editor.onDidBlurEditorWidget(() => {\n            this.hide();\n        }));\n    }\n    handleUserInput() {\n        if (this.session && !this.session.isValid) {\n            this.hide();\n        }\n        setTimeout(() => {\n            if (this.disposed) {\n                return;\n            }\n            // Wait for the cursor update that happens in the same iteration loop iteration\n            this.startSessionIfTriggered();\n        }, 0);\n    }\n    get session() {\n        return this.completionSession.value;\n    }\n    get ghostText() {\n        var _a;\n        return (_a = this.session) === null || _a === void 0 ? void 0 : _a.ghostText;\n    }\n    get minReservedLineCount() {\n        return this.session ? this.session.minReservedLineCount : 0;\n    }\n    setExpanded(expanded) {\n        var _a;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.setExpanded(expanded);\n    }\n    setActive(active) {\n        var _a;\n        this.active = active;\n        if (active) {\n            (_a = this.session) === null || _a === void 0 ? void 0 : _a.scheduleAutomaticUpdate();\n        }\n    }\n    startSessionIfTriggered() {\n        const suggestOptions = this.editor.getOption(55 /* inlineSuggest */);\n        if (!suggestOptions.enabled) {\n            return;\n        }\n        if (this.session && this.session.isValid) {\n            return;\n        }\n        this.trigger(InlineCompletionTriggerKind.Automatic);\n    }\n    trigger(triggerKind) {\n        if (this.completionSession.value) {\n            if (triggerKind === InlineCompletionTriggerKind.Explicit) {\n                void this.completionSession.value.ensureUpdateWithExplicitContext();\n            }\n            return;\n        }\n        this.completionSession.value = new InlineCompletionsSession(this.editor, this.editor.getPosition(), () => this.active, this.commandService, this.cache, triggerKind, this.languageConfigurationService);\n        this.completionSession.value.takeOwnership(this.completionSession.value.onDidChange(() => {\n            this.onDidChangeEmitter.fire();\n        }));\n    }\n    hide() {\n        this.completionSession.clear();\n        this.onDidChangeEmitter.fire();\n    }\n    commitCurrentSuggestion() {\n        var _a;\n        // Don't dispose the session, so that after committing, more suggestions are shown.\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.commitCurrentCompletion();\n    }\n    showNext() {\n        var _a;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.showNextInlineCompletion();\n    }\n    showPrevious() {\n        var _a;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.showPreviousInlineCompletion();\n    }\n    hasMultipleInlineCompletions() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield ((_a = this.session) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\n            return result !== undefined ? result : false;\n        });\n    }\n};\nInlineCompletionsModel = __decorate([\n    __param(2, ICommandService),\n    __param(3, ILanguageConfigurationService)\n], InlineCompletionsModel);\nexport { InlineCompletionsModel };\nexport class InlineCompletionsSession extends BaseGhostTextWidgetModel {\n    constructor(editor, triggerPosition, shouldUpdate, commandService, cache, initialTriggerKind, languageConfigurationService) {\n        super(editor);\n        this.triggerPosition = triggerPosition;\n        this.shouldUpdate = shouldUpdate;\n        this.commandService = commandService;\n        this.cache = cache;\n        this.initialTriggerKind = initialTriggerKind;\n        this.languageConfigurationService = languageConfigurationService;\n        this.minReservedLineCount = 0;\n        this.updateOperation = this._register(new MutableDisposable());\n        this.updateSoon = this._register(new RunOnceScheduler(() => {\n            let triggerKind = this.initialTriggerKind;\n            // All subsequent triggers are automatic.\n            this.initialTriggerKind = InlineCompletionTriggerKind.Automatic;\n            return this.update(triggerKind);\n        }, 50));\n        //#region Selection\n        // We use a semantic id to track the selection even if the cache changes.\n        this.currentlySelectedCompletionId = undefined;\n        let lastCompletionItem = undefined;\n        this._register(this.onDidChange(() => {\n            const currentCompletion = this.currentCompletion;\n            if (currentCompletion && currentCompletion.sourceInlineCompletion !== lastCompletionItem) {\n                lastCompletionItem = currentCompletion.sourceInlineCompletion;\n                const provider = currentCompletion.sourceProvider;\n                if (provider.handleItemDidShow) {\n                    provider.handleItemDidShow(currentCompletion.sourceInlineCompletions, lastCompletionItem);\n                }\n            }\n        }));\n        this._register(toDisposable(() => {\n            this.cache.clear();\n        }));\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\n            if (this.cache.value) {\n                this.onDidChangeEmitter.fire();\n            }\n        }));\n        this._register(this.editor.onDidChangeModelContent((e) => {\n            this.scheduleAutomaticUpdate();\n        }));\n        this._register(InlineCompletionsProviderRegistry.onDidChange(() => {\n            this.updateSoon.schedule();\n        }));\n        this.scheduleAutomaticUpdate();\n    }\n    fixAndGetIndexOfCurrentSelection() {\n        if (!this.currentlySelectedCompletionId || !this.cache.value) {\n            return 0;\n        }\n        if (this.cache.value.completions.length === 0) {\n            // don't reset the selection in this case\n            return 0;\n        }\n        const idx = this.cache.value.completions.findIndex(v => v.semanticId === this.currentlySelectedCompletionId);\n        if (idx === -1) {\n            // Reset the selection so that the selection does not jump back when it appears again\n            this.currentlySelectedCompletionId = undefined;\n            return 0;\n        }\n        return idx;\n    }\n    get currentCachedCompletion() {\n        if (!this.cache.value) {\n            return undefined;\n        }\n        return this.cache.value.completions[this.fixAndGetIndexOfCurrentSelection()];\n    }\n    showNextInlineCompletion() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ensureUpdateWithExplicitContext();\n            const completions = ((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions) || [];\n            if (completions.length > 0) {\n                const newIdx = (this.fixAndGetIndexOfCurrentSelection() + 1) % completions.length;\n                this.currentlySelectedCompletionId = completions[newIdx].semanticId;\n            }\n            else {\n                this.currentlySelectedCompletionId = undefined;\n            }\n            this.onDidChangeEmitter.fire();\n        });\n    }\n    showPreviousInlineCompletion() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ensureUpdateWithExplicitContext();\n            const completions = ((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions) || [];\n            if (completions.length > 0) {\n                const newIdx = (this.fixAndGetIndexOfCurrentSelection() + completions.length - 1) % completions.length;\n                this.currentlySelectedCompletionId = completions[newIdx].semanticId;\n            }\n            else {\n                this.currentlySelectedCompletionId = undefined;\n            }\n            this.onDidChangeEmitter.fire();\n        });\n    }\n    ensureUpdateWithExplicitContext() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.updateOperation.value) {\n                // Restart or wait for current update operation\n                if (this.updateOperation.value.triggerKind === InlineCompletionTriggerKind.Explicit) {\n                    yield this.updateOperation.value.promise;\n                }\n                else {\n                    yield this.update(InlineCompletionTriggerKind.Explicit);\n                }\n            }\n            else if (((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.triggerKind) !== InlineCompletionTriggerKind.Explicit) {\n                // Refresh cache\n                yield this.update(InlineCompletionTriggerKind.Explicit);\n            }\n        });\n    }\n    hasMultipleInlineCompletions() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ensureUpdateWithExplicitContext();\n            return (((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions.length) || 0) > 1;\n        });\n    }\n    //#endregion\n    get ghostText() {\n        const currentCompletion = this.currentCompletion;\n        const mode = this.editor.getOptions().get(55 /* inlineSuggest */).mode;\n        return currentCompletion ? inlineCompletionToGhostText(currentCompletion, this.editor.getModel(), mode, this.editor.getPosition()) : undefined;\n    }\n    get currentCompletion() {\n        const completion = this.currentCachedCompletion;\n        if (!completion) {\n            return undefined;\n        }\n        return completion.toLiveInlineCompletion();\n    }\n    get isValid() {\n        return this.editor.getPosition().lineNumber === this.triggerPosition.lineNumber;\n    }\n    scheduleAutomaticUpdate() {\n        // Since updateSoon debounces, starvation can happen.\n        // To prevent stale cache, we clear the current update operation.\n        this.updateOperation.clear();\n        this.updateSoon.schedule();\n    }\n    update(triggerKind) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.shouldUpdate()) {\n                return;\n            }\n            const position = this.editor.getPosition();\n            const promise = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                let result;\n                try {\n                    result = yield provideInlineCompletions(position, this.editor.getModel(), { triggerKind, selectedSuggestionInfo: undefined }, token, this.languageConfigurationService);\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                    return;\n                }\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                this.cache.setValue(this.editor, result, triggerKind);\n                this.onDidChangeEmitter.fire();\n            }));\n            const operation = new UpdateOperation(promise, triggerKind);\n            this.updateOperation.value = operation;\n            yield promise;\n            if (this.updateOperation.value === operation) {\n                this.updateOperation.clear();\n            }\n        });\n    }\n    takeOwnership(disposable) {\n        this._register(disposable);\n    }\n    commitCurrentCompletion() {\n        if (!this.ghostText) {\n            // No ghost text was shown for this completion.\n            // Thus, we don't want to commit anything.\n            return;\n        }\n        const completion = this.currentCompletion;\n        if (completion) {\n            this.commit(completion);\n        }\n    }\n    commit(completion) {\n        // Mark the cache as stale, but don't dispose it yet,\n        // otherwise command args might get disposed.\n        const cache = this.cache.clearAndLeak();\n        this.editor.executeEdits('inlineSuggestion.accept', [\n            EditOperation.replaceMove(completion.range, completion.text)\n        ]);\n        if (completion.command) {\n            this.commandService\n                .executeCommand(completion.command.id, ...(completion.command.arguments || []))\n                .finally(() => {\n                cache === null || cache === void 0 ? void 0 : cache.dispose();\n            })\n                .then(undefined, onUnexpectedExternalError);\n        }\n        else {\n            cache === null || cache === void 0 ? void 0 : cache.dispose();\n        }\n        this.onDidChangeEmitter.fire();\n    }\n}\nexport class UpdateOperation {\n    constructor(promise, triggerKind) {\n        this.promise = promise;\n        this.triggerKind = triggerKind;\n    }\n    dispose() {\n        this.promise.cancel();\n    }\n}\n/**\n * The cache keeps itself in sync with the editor.\n * It also owns the completions result and disposes it when the cache is diposed.\n*/\nexport class SynchronizedInlineCompletionsCache extends Disposable {\n    constructor(editor, completionsSource, onChange, triggerKind) {\n        super();\n        this.triggerKind = triggerKind;\n        const decorationIds = editor.deltaDecorations([], completionsSource.items.map(i => ({\n            range: i.range,\n            options: {\n                description: 'inline-completion-tracking-range'\n            },\n        })));\n        this._register(toDisposable(() => {\n            editor.deltaDecorations(decorationIds, []);\n        }));\n        this.completions = completionsSource.items.map((c, idx) => new CachedInlineCompletion(c, decorationIds[idx]));\n        this._register(editor.onDidChangeModelContent(() => {\n            let hasChanged = false;\n            const model = editor.getModel();\n            for (const c of this.completions) {\n                const newRange = model.getDecorationRange(c.decorationId);\n                if (!newRange) {\n                    onUnexpectedError(new Error('Decoration has no range'));\n                    continue;\n                }\n                if (!c.synchronizedRange.equalsRange(newRange)) {\n                    hasChanged = true;\n                    c.synchronizedRange = newRange;\n                }\n            }\n            if (hasChanged) {\n                onChange();\n            }\n        }));\n        this._register(completionsSource);\n    }\n}\nclass CachedInlineCompletion {\n    constructor(inlineCompletion, decorationId) {\n        this.inlineCompletion = inlineCompletion;\n        this.decorationId = decorationId;\n        this.semanticId = JSON.stringify({\n            text: this.inlineCompletion.text,\n            startLine: this.inlineCompletion.range.startLineNumber,\n            startColumn: this.inlineCompletion.range.startColumn,\n            command: this.inlineCompletion.command\n        });\n        this.synchronizedRange = inlineCompletion.range;\n    }\n    toLiveInlineCompletion() {\n        return {\n            text: this.inlineCompletion.text,\n            range: this.synchronizedRange,\n            command: this.inlineCompletion.command,\n            sourceProvider: this.inlineCompletion.sourceProvider,\n            sourceInlineCompletions: this.inlineCompletion.sourceInlineCompletions,\n            sourceInlineCompletion: this.inlineCompletion.sourceInlineCompletion,\n        };\n    }\n}\nfunction getDefaultRange(position, model) {\n    const word = model.getWordAtPosition(position);\n    const maxColumn = model.getLineMaxColumn(position.lineNumber);\n    // By default, always replace up until the end of the current line.\n    // This default might be subject to change!\n    return word\n        ? new Range(position.lineNumber, word.startColumn, position.lineNumber, maxColumn)\n        : Range.fromPositions(position, position.with(undefined, maxColumn));\n}\nexport function provideInlineCompletions(position, model, context, token = CancellationToken.None, languageConfigurationService) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const defaultReplaceRange = getDefaultRange(position, model);\n        const providers = InlineCompletionsProviderRegistry.all(model);\n        const results = yield Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\n            const completions = yield provider.provideInlineCompletions(model, position, context, token);\n            return ({\n                completions,\n                provider,\n                dispose: () => {\n                    if (completions) {\n                        provider.freeInlineCompletions(completions);\n                    }\n                }\n            });\n        })));\n        const itemsByHash = new Map();\n        for (const result of results) {\n            const completions = result.completions;\n            if (completions) {\n                for (const item of completions.items) {\n                    const range = item.range ? Range.lift(item.range) : defaultReplaceRange;\n                    if (range.startLineNumber !== range.endLineNumber) {\n                        // Ignore invalid ranges.\n                        continue;\n                    }\n                    const text = languageConfigurationService && item.completeBracketPairs\n                        ? closeBrackets(item.text, range.getStartPosition(), model, languageConfigurationService)\n                        : item.text;\n                    const trackedItem = ({\n                        text,\n                        range,\n                        command: item.command,\n                        sourceProvider: result.provider,\n                        sourceInlineCompletions: completions,\n                        sourceInlineCompletion: item\n                    });\n                    itemsByHash.set(JSON.stringify({ text, range: item.range }), trackedItem);\n                }\n            }\n        }\n        return {\n            items: [...itemsByHash.values()],\n            dispose: () => {\n                for (const result of results) {\n                    result.dispose();\n                }\n            },\n        };\n    });\n}\nfunction closeBrackets(text, position, model, languageConfigurationService) {\n    const lineStart = model.getLineContent(position.lineNumber).substring(0, position.column - 1);\n    const newLine = lineStart + text;\n    const newTokens = model.tokenizeLineWithEdit(position, newLine.length - (position.column - 1), text);\n    const slicedTokens = newTokens === null || newTokens === void 0 ? void 0 : newTokens.sliceAndInflate(position.column - 1, newLine.length, 0);\n    if (!slicedTokens) {\n        return text;\n    }\n    console.log(slicedTokens);\n    const newText = fixBracketsInLine(slicedTokens, languageConfigurationService);\n    return newText;\n}\nexport function minimizeInlineCompletion(model, inlineCompletion) {\n    if (!inlineCompletion) {\n        return inlineCompletion;\n    }\n    const valueToReplace = model.getValueInRange(inlineCompletion.range);\n    const commonPrefixLen = commonPrefixLength(valueToReplace, inlineCompletion.text);\n    const startOffset = model.getOffsetAt(inlineCompletion.range.getStartPosition()) + commonPrefixLen;\n    const start = model.getPositionAt(startOffset);\n    const remainingValueToReplace = valueToReplace.substr(commonPrefixLen);\n    const commonSuffixLen = commonSuffixLength(remainingValueToReplace, inlineCompletion.text);\n    const end = model.getPositionAt(Math.max(startOffset, model.getOffsetAt(inlineCompletion.range.getEndPosition()) - commonSuffixLen));\n    return {\n        range: Range.fromPositions(start, end),\n        text: inlineCompletion.text.substr(commonPrefixLen, inlineCompletion.text.length - commonPrefixLen - commonSuffixLen),\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { compareBy, findMaxBy, numberComparator } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { SnippetSession } from '../../snippet/browser/snippetSession.js';\nimport { SuggestController } from '../../suggest/browser/suggestController.js';\nimport { minimizeInlineCompletion } from './inlineCompletionsModel.js';\nimport { normalizedInlineCompletionsEquals } from './inlineCompletionToGhostText.js';\nexport class SuggestWidgetInlineCompletionProvider extends Disposable {\n    constructor(editor, suggestControllerPreselector) {\n        super();\n        this.editor = editor;\n        this.suggestControllerPreselector = suggestControllerPreselector;\n        this.isSuggestWidgetVisible = false;\n        this.isShiftKeyPressed = false;\n        this._isActive = false;\n        this._currentSuggestItemInfo = undefined;\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        // This delay fixes a suggest widget issue when typing \".\" immediately restarts the suggestion session.\n        this.setInactiveDelayed = this._register(new RunOnceScheduler(() => {\n            if (!this.isSuggestWidgetVisible) {\n                if (this._isActive) {\n                    this._isActive = false;\n                    this.onDidChangeEmitter.fire();\n                }\n            }\n        }, 100));\n        // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\n        this._register(editor.onKeyDown(e => {\n            if (e.shiftKey && !this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = true;\n                this.update(this._isActive);\n            }\n        }));\n        this._register(editor.onKeyUp(e => {\n            if (e.shiftKey && this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = false;\n                this.update(this._isActive);\n            }\n        }));\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            this._register(suggestController.registerSelector({\n                priority: 100,\n                select: (model, pos, suggestItems) => {\n                    const textModel = this.editor.getModel();\n                    const normalizedItemToPreselect = minimizeInlineCompletion(textModel, this.suggestControllerPreselector());\n                    if (!normalizedItemToPreselect) {\n                        return -1;\n                    }\n                    const position = Position.lift(pos);\n                    const candidates = suggestItems\n                        .map((suggestItem, index) => {\n                        const inlineSuggestItem = suggestionToSuggestItemInfo(suggestController, position, suggestItem, this.isShiftKeyPressed);\n                        const normalizedSuggestItem = minimizeInlineCompletion(textModel, inlineSuggestItem === null || inlineSuggestItem === void 0 ? void 0 : inlineSuggestItem.normalizedInlineCompletion);\n                        if (!normalizedSuggestItem) {\n                            return undefined;\n                        }\n                        const valid = rangeStartsWith(normalizedItemToPreselect.range, normalizedSuggestItem.range) &&\n                            normalizedItemToPreselect.text.startsWith(normalizedSuggestItem.text);\n                        return { index, valid, prefixLength: normalizedSuggestItem.text.length, suggestItem };\n                    })\n                        .filter(item => item && item.valid);\n                    const result = findMaxBy(candidates, compareBy(s => s.prefixLength, numberComparator));\n                    return result ? result.index : -1;\n                }\n            }));\n            let isBoundToSuggestWidget = false;\n            const bindToSuggestWidget = () => {\n                if (isBoundToSuggestWidget) {\n                    return;\n                }\n                isBoundToSuggestWidget = true;\n                this._register(suggestController.widget.value.onDidShow(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n                this._register(suggestController.widget.value.onDidHide(() => {\n                    this.isSuggestWidgetVisible = false;\n                    this.setInactiveDelayed.schedule();\n                    this.update(this._isActive);\n                }));\n                this._register(suggestController.widget.value.onDidFocus(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n            };\n            this._register(Event.once(suggestController.model.onDidTrigger)(e => {\n                bindToSuggestWidget();\n            }));\n        }\n        this.update(this._isActive);\n    }\n    /**\n     * Returns undefined if the suggest widget is not active.\n    */\n    get state() {\n        if (!this._isActive) {\n            return undefined;\n        }\n        return { selectedItem: this._currentSuggestItemInfo };\n    }\n    update(newActive) {\n        const newInlineCompletion = this.getSuggestItemInfo();\n        let shouldFire = false;\n        if (!suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\n            this._currentSuggestItemInfo = newInlineCompletion;\n            shouldFire = true;\n        }\n        if (this._isActive !== newActive) {\n            this._isActive = newActive;\n            shouldFire = true;\n        }\n        if (shouldFire) {\n            this.onDidChangeEmitter.fire();\n        }\n    }\n    getSuggestItemInfo() {\n        const suggestController = SuggestController.get(this.editor);\n        if (!suggestController) {\n            return undefined;\n        }\n        if (!this.isSuggestWidgetVisible) {\n            return undefined;\n        }\n        const focusedItem = suggestController.widget.value.getFocusedItem();\n        if (!focusedItem) {\n            return undefined;\n        }\n        // TODO: item.isResolved\n        return suggestionToSuggestItemInfo(suggestController, this.editor.getPosition(), focusedItem.item, this.isShiftKeyPressed);\n    }\n    stopForceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            suggestController.stopForceRenderingAbove();\n        }\n    }\n    forceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            suggestController.forceRenderingAbove();\n        }\n    }\n}\nexport function rangeStartsWith(rangeToTest, prefix) {\n    return (prefix.startLineNumber === rangeToTest.startLineNumber &&\n        prefix.startColumn === rangeToTest.startColumn &&\n        (prefix.endLineNumber < rangeToTest.endLineNumber ||\n            (prefix.endLineNumber === rangeToTest.endLineNumber &&\n                prefix.endColumn <= rangeToTest.endColumn)));\n}\nfunction suggestItemInfoEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    return a.completionItemKind === b.completionItemKind &&\n        a.isSnippetText === b.isSnippetText &&\n        normalizedInlineCompletionsEquals(a.normalizedInlineCompletion, b.normalizedInlineCompletion);\n}\nfunction suggestionToSuggestItemInfo(suggestController, position, item, toggleMode) {\n    // additionalTextEdits might not be resolved here, this could be problematic.\n    if (Array.isArray(item.completion.additionalTextEdits) && item.completion.additionalTextEdits.length > 0) {\n        // cannot represent additional text edits\n        return {\n            completionItemKind: item.completion.kind,\n            isSnippetText: false,\n            normalizedInlineCompletion: {\n                // Dummy element, so that space is reserved, but no text is shown\n                range: Range.fromPositions(position, position),\n                text: ''\n            },\n        };\n    }\n    let { insertText } = item.completion;\n    let isSnippetText = false;\n    if (item.completion.insertTextRules & 4 /* InsertAsSnippet */) {\n        const snippet = new SnippetParser().parse(insertText);\n        const model = suggestController.editor.getModel();\n        // Ignore snippets that are too large.\n        // Adjust whitespace is expensive for them.\n        if (snippet.children.length > 100) {\n            return undefined;\n        }\n        SnippetSession.adjustWhitespace(model, position, snippet, true, true);\n        insertText = snippet.toString();\n        isSnippetText = true;\n    }\n    const info = suggestController.getOverwriteInfo(item, toggleMode);\n    return {\n        isSnippetText,\n        completionItemKind: item.completion.kind,\n        normalizedInlineCompletion: {\n            text: insertText,\n            range: Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0))),\n        }\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { BaseGhostTextWidgetModel, GhostText } from './ghostText.js';\nimport { minimizeInlineCompletion, provideInlineCompletions, UpdateOperation } from './inlineCompletionsModel.js';\nimport { inlineCompletionToGhostText } from './inlineCompletionToGhostText.js';\nimport { SuggestWidgetInlineCompletionProvider } from './suggestWidgetInlineCompletionProvider.js';\nexport class SuggestWidgetPreviewModel extends BaseGhostTextWidgetModel {\n    constructor(editor, cache) {\n        super(editor);\n        this.cache = cache;\n        this.suggestionInlineCompletionSource = this._register(new SuggestWidgetInlineCompletionProvider(this.editor, \n        // Use the first cache item (if any) as preselection.\n        () => { var _a, _b; return (_b = (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions[0]) === null || _b === void 0 ? void 0 : _b.toLiveInlineCompletion(); }));\n        this.updateOperation = this._register(new MutableDisposable());\n        this.updateCacheSoon = this._register(new RunOnceScheduler(() => this.updateCache(), 50));\n        this.minReservedLineCount = 0;\n        this._register(this.suggestionInlineCompletionSource.onDidChange(() => {\n            this.updateCacheSoon.schedule();\n            const suggestWidgetState = this.suggestionInlineCompletionSource.state;\n            if (!suggestWidgetState) {\n                this.minReservedLineCount = 0;\n            }\n            const newGhostText = this.ghostText;\n            if (newGhostText) {\n                this.minReservedLineCount = Math.max(this.minReservedLineCount, sum(newGhostText.parts.map(p => p.lines.length - 1)));\n            }\n            if (this.minReservedLineCount >= 1) {\n                this.suggestionInlineCompletionSource.forceRenderingAbove();\n            }\n            else {\n                this.suggestionInlineCompletionSource.stopForceRenderingAbove();\n            }\n            this.onDidChangeEmitter.fire();\n        }));\n        this._register(this.cache.onDidChange(() => {\n            this.onDidChangeEmitter.fire();\n        }));\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\n            this.minReservedLineCount = 0;\n            this.updateCacheSoon.schedule();\n            this.onDidChangeEmitter.fire();\n        }));\n        this._register(toDisposable(() => this.suggestionInlineCompletionSource.stopForceRenderingAbove()));\n    }\n    get isActive() {\n        return this.suggestionInlineCompletionSource.state !== undefined;\n    }\n    isSuggestionPreviewEnabled() {\n        const suggestOptions = this.editor.getOption(106 /* suggest */);\n        return suggestOptions.preview;\n    }\n    updateCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const state = this.suggestionInlineCompletionSource.state;\n            if (!state || !state.selectedItem) {\n                return;\n            }\n            const info = {\n                text: state.selectedItem.normalizedInlineCompletion.text,\n                range: state.selectedItem.normalizedInlineCompletion.range,\n                isSnippetText: state.selectedItem.isSnippetText,\n                completionKind: state.selectedItem.completionItemKind,\n            };\n            const position = this.editor.getPosition();\n            const promise = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                let result;\n                try {\n                    result = yield provideInlineCompletions(position, this.editor.getModel(), { triggerKind: InlineCompletionTriggerKind.Automatic, selectedSuggestionInfo: info }, token);\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                    return;\n                }\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                this.cache.setValue(this.editor, result, InlineCompletionTriggerKind.Automatic);\n                this.onDidChangeEmitter.fire();\n            }));\n            const operation = new UpdateOperation(promise, InlineCompletionTriggerKind.Automatic);\n            this.updateOperation.value = operation;\n            yield promise;\n            if (this.updateOperation.value === operation) {\n                this.updateOperation.clear();\n            }\n        });\n    }\n    get ghostText() {\n        var _a, _b, _c;\n        const isSuggestionPreviewEnabled = this.isSuggestionPreviewEnabled();\n        const augmentedCompletion = minimizeInlineCompletion(this.editor.getModel(), (_b = (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions[0]) === null || _b === void 0 ? void 0 : _b.toLiveInlineCompletion());\n        const suggestWidgetState = this.suggestionInlineCompletionSource.state;\n        const suggestInlineCompletion = minimizeInlineCompletion(this.editor.getModel(), (_c = suggestWidgetState === null || suggestWidgetState === void 0 ? void 0 : suggestWidgetState.selectedItem) === null || _c === void 0 ? void 0 : _c.normalizedInlineCompletion);\n        const isAugmentedCompletionValid = augmentedCompletion\n            && suggestInlineCompletion\n            && augmentedCompletion.text.startsWith(suggestInlineCompletion.text)\n            && augmentedCompletion.range.equalsRange(suggestInlineCompletion.range);\n        if (!isSuggestionPreviewEnabled && !isAugmentedCompletionValid) {\n            return undefined;\n        }\n        // If the augmented completion is not valid and there is no suggest inline completion, we still show the augmented completion.\n        const finalCompletion = isAugmentedCompletionValid ? augmentedCompletion : (suggestInlineCompletion || augmentedCompletion);\n        const inlineCompletionPreviewLength = isAugmentedCompletionValid ? finalCompletion.text.length - suggestInlineCompletion.text.length : 0;\n        const newGhostText = this.toGhostText(finalCompletion, inlineCompletionPreviewLength);\n        return newGhostText;\n    }\n    toGhostText(completion, inlineCompletionPreviewLength) {\n        const mode = this.editor.getOptions().get(106 /* suggest */).previewMode;\n        return completion\n            ? (inlineCompletionToGhostText(completion, this.editor.getModel(), mode, this.editor.getPosition(), inlineCompletionPreviewLength) ||\n                // Show an invisible ghost text to reserve space\n                new GhostText(completion.range.endLineNumber, [], this.minReservedLineCount))\n            : undefined;\n    }\n}\nfunction sum(arr) {\n    return arr.reduce((a, b) => a + b, 0);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { InlineCompletionsModel, SynchronizedInlineCompletionsCache } from './inlineCompletionsModel.js';\nimport { SuggestWidgetPreviewModel } from './suggestWidgetPreviewModel.js';\nimport { createDisposableRef } from './utils.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nexport class DelegatingModel extends Disposable {\n    constructor() {\n        super(...arguments);\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.hasCachedGhostText = false;\n        this.currentModelRef = this._register(new MutableDisposable());\n    }\n    get targetModel() {\n        var _a;\n        return (_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object;\n    }\n    setTargetModel(model) {\n        var _a;\n        if (((_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object) === model) {\n            return;\n        }\n        this.currentModelRef.clear();\n        this.currentModelRef.value = model ? createDisposableRef(model, model.onDidChange(() => {\n            this.hasCachedGhostText = false;\n            this.onDidChangeEmitter.fire();\n        })) : undefined;\n        this.hasCachedGhostText = false;\n        this.onDidChangeEmitter.fire();\n    }\n    get ghostText() {\n        var _a, _b;\n        if (!this.hasCachedGhostText) {\n            this.cachedGhostText = (_b = (_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object) === null || _b === void 0 ? void 0 : _b.ghostText;\n            this.hasCachedGhostText = true;\n        }\n        return this.cachedGhostText;\n    }\n    setExpanded(expanded) {\n        var _a;\n        (_a = this.targetModel) === null || _a === void 0 ? void 0 : _a.setExpanded(expanded);\n    }\n    get minReservedLineCount() {\n        return this.targetModel ? this.targetModel.minReservedLineCount : 0;\n    }\n}\n/**\n * A ghost text model that is both driven by inline completions and the suggest widget.\n*/\nlet GhostTextModel = class GhostTextModel extends DelegatingModel {\n    constructor(editor, commandService, languageConfigurationService) {\n        super();\n        this.editor = editor;\n        this.commandService = commandService;\n        this.languageConfigurationService = languageConfigurationService;\n        this.sharedCache = this._register(new SharedInlineCompletionCache());\n        this.suggestWidgetAdapterModel = this._register(new SuggestWidgetPreviewModel(this.editor, this.sharedCache));\n        this.inlineCompletionsModel = this._register(new InlineCompletionsModel(this.editor, this.sharedCache, this.commandService, this.languageConfigurationService));\n        this._register(this.suggestWidgetAdapterModel.onDidChange(() => {\n            this.updateModel();\n        }));\n        this.updateModel();\n    }\n    get activeInlineCompletionsModel() {\n        if (this.targetModel === this.inlineCompletionsModel) {\n            return this.inlineCompletionsModel;\n        }\n        return undefined;\n    }\n    updateModel() {\n        this.setTargetModel(this.suggestWidgetAdapterModel.isActive\n            ? this.suggestWidgetAdapterModel\n            : this.inlineCompletionsModel);\n        this.inlineCompletionsModel.setActive(this.targetModel === this.inlineCompletionsModel);\n    }\n    shouldShowHoverAt(hoverRange) {\n        var _a;\n        const ghostText = (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.ghostText;\n        if (ghostText) {\n            return ghostText.parts.some(p => hoverRange.containsPosition(new Position(ghostText.lineNumber, p.column)));\n        }\n        return false;\n    }\n    triggerInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.trigger(InlineCompletionTriggerKind.Explicit);\n    }\n    commitInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.commitCurrentSuggestion();\n    }\n    hideInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.hide();\n    }\n    showNextInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.showNext();\n    }\n    showPreviousInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.showPrevious();\n    }\n    hasMultipleInlineCompletions() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield ((_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\n            return result !== undefined ? result : false;\n        });\n    }\n};\nGhostTextModel = __decorate([\n    __param(1, ICommandService),\n    __param(2, ILanguageConfigurationService)\n], GhostTextModel);\nexport { GhostTextModel };\nexport class SharedInlineCompletionCache extends Disposable {\n    constructor() {\n        super(...arguments);\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.cache = this._register(new MutableDisposable());\n    }\n    get value() {\n        return this.cache.value;\n    }\n    setValue(editor, completionsSource, triggerKind) {\n        this.cache.value = new SynchronizedInlineCompletionsCache(editor, completionsSource, () => this.onDidChangeEmitter.fire(), triggerKind);\n    }\n    clearAndLeak() {\n        return this.cache.clearAndLeak();\n    }\n    clear() {\n        this.cache.clear();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function createDisposableRef(object, disposable) {\n    return {\n        object,\n        dispose: () => disposable === null || disposable === void 0 ? void 0 : disposable.dispose(),\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar _a;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './ghostText.css';\nimport { applyFontInfo } from '../../../browser/config/domFontInfo.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nimport { LineTokens } from '../../../common/tokens/lineTokens.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { createStringBuilder } from '../../../common/core/stringBuilder.js';\nimport { ILanguageService } from '../../../common/services/language.js';\nimport { ghostTextBackground, ghostTextBorder, ghostTextForeground } from '../../../common/core/editorColorRegistry.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('editorGhostText', { createHTML: value => value });\nlet GhostTextWidget = class GhostTextWidget extends Disposable {\n    constructor(editor, model, instantiationService, languageService) {\n        super();\n        this.editor = editor;\n        this.model = model;\n        this.instantiationService = instantiationService;\n        this.languageService = languageService;\n        this.disposed = false;\n        this.partsWidget = this._register(this.instantiationService.createInstance(DecorationsWidget, this.editor));\n        this.additionalLinesWidget = this._register(new AdditionalLinesWidget(this.editor, this.languageService.languageIdCodec));\n        this.viewMoreContentWidget = undefined;\n        this._register(this.editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(29 /* disableMonospaceOptimizations */)\n                || e.hasChanged(105 /* stopRenderingLineAfter */)\n                || e.hasChanged(88 /* renderWhitespace */)\n                || e.hasChanged(83 /* renderControlCharacters */)\n                || e.hasChanged(45 /* fontLigatures */)\n                || e.hasChanged(44 /* fontInfo */)\n                || e.hasChanged(59 /* lineHeight */)) {\n                this.update();\n            }\n        }));\n        this._register(toDisposable(() => {\n            var _a;\n            this.disposed = true;\n            this.update();\n            (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.viewMoreContentWidget = undefined;\n        }));\n        this._register(model.onDidChange(() => {\n            this.update();\n        }));\n        this.update();\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        return (this.additionalLinesWidget.viewZoneId === viewZoneId);\n    }\n    update() {\n        var _a;\n        const ghostText = this.model.ghostText;\n        if (!this.editor.hasModel() || !ghostText || this.disposed) {\n            this.partsWidget.clear();\n            this.additionalLinesWidget.clear();\n            return;\n        }\n        const inlineTexts = new Array();\n        const additionalLines = new Array();\n        function addToAdditionalLines(lines, className) {\n            if (additionalLines.length > 0) {\n                const lastLine = additionalLines[additionalLines.length - 1];\n                if (className) {\n                    lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* Regular */));\n                }\n                lastLine.content += lines[0];\n                lines = lines.slice(1);\n            }\n            for (const line of lines) {\n                additionalLines.push({\n                    content: line,\n                    decorations: className ? [new LineDecoration(1, line.length + 1, className, 0 /* Regular */)] : []\n                });\n            }\n        }\n        const textBufferLine = this.editor.getModel().getLineContent(ghostText.lineNumber);\n        this.editor.getModel().getLineTokens(ghostText.lineNumber);\n        let hiddenTextStartColumn = undefined;\n        let lastIdx = 0;\n        for (const part of ghostText.parts) {\n            let lines = part.lines;\n            if (hiddenTextStartColumn === undefined) {\n                inlineTexts.push({\n                    column: part.column,\n                    text: lines[0],\n                    preview: part.preview,\n                });\n                lines = lines.slice(1);\n            }\n            else {\n                addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\n            }\n            if (lines.length > 0) {\n                addToAdditionalLines(lines, 'ghost-text');\n                if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\n                    hiddenTextStartColumn = part.column;\n                }\n            }\n            lastIdx = part.column - 1;\n        }\n        if (hiddenTextStartColumn !== undefined) {\n            addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\n        }\n        this.partsWidget.setParts(ghostText.lineNumber, inlineTexts, hiddenTextStartColumn !== undefined ? { column: hiddenTextStartColumn, length: textBufferLine.length + 1 - hiddenTextStartColumn } : undefined);\n        this.additionalLinesWidget.updateLines(ghostText.lineNumber, additionalLines, ghostText.additionalReservedLineCount);\n        if (ghostText.parts.some(p => p.lines.length < 0)) {\n            // Not supported at the moment, condition is always false.\n            this.viewMoreContentWidget = this.renderViewMoreLines(new Position(ghostText.lineNumber, this.editor.getModel().getLineMaxColumn(ghostText.lineNumber)), '', 0);\n        }\n        else {\n            (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.viewMoreContentWidget = undefined;\n        }\n    }\n    renderViewMoreLines(position, firstLineText, remainingLinesLength) {\n        const fontInfo = this.editor.getOption(44 /* fontInfo */);\n        const domNode = document.createElement('div');\n        domNode.className = 'suggest-preview-additional-widget';\n        applyFontInfo(domNode, fontInfo);\n        const spacer = document.createElement('span');\n        spacer.className = 'content-spacer';\n        spacer.append(firstLineText);\n        domNode.append(spacer);\n        const newline = document.createElement('span');\n        newline.className = 'content-newline suggest-preview-text';\n        newline.append('⏎  ');\n        domNode.append(newline);\n        const disposableStore = new DisposableStore();\n        const button = document.createElement('div');\n        button.className = 'button suggest-preview-text';\n        button.append(`+${remainingLinesLength} lines…`);\n        disposableStore.add(dom.addStandardDisposableListener(button, 'mousedown', (e) => {\n            var _a;\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.setExpanded(true);\n            e.preventDefault();\n            this.editor.focus();\n        }));\n        domNode.append(button);\n        return new ViewMoreLinesContentWidget(this.editor, position, domNode, disposableStore);\n    }\n};\nGhostTextWidget = __decorate([\n    __param(2, IInstantiationService),\n    __param(3, ILanguageService)\n], GhostTextWidget);\nexport { GhostTextWidget };\nclass DecorationsWidget {\n    constructor(editor) {\n        this.editor = editor;\n        this.decorationIds = [];\n        this.disposableStore = new DisposableStore();\n    }\n    dispose() {\n        this.clear();\n        this.disposableStore.dispose();\n    }\n    clear() {\n        this.editor.deltaDecorations(this.decorationIds, []);\n        this.disposableStore.clear();\n    }\n    setParts(lineNumber, parts, hiddenText) {\n        this.disposableStore.clear();\n        const textModel = this.editor.getModel();\n        if (!textModel) {\n            return;\n        }\n        const hiddenTextDecorations = new Array();\n        if (hiddenText) {\n            hiddenTextDecorations.push({\n                range: Range.fromPositions(new Position(lineNumber, hiddenText.column), new Position(lineNumber, hiddenText.column + hiddenText.length)),\n                options: {\n                    inlineClassName: 'ghost-text-hidden',\n                    description: 'ghost-text-hidden'\n                }\n            });\n        }\n        this.decorationIds = this.editor.deltaDecorations(this.decorationIds, parts.map(p => {\n            return ({\n                range: Range.fromPositions(new Position(lineNumber, p.column)),\n                options: {\n                    description: 'ghost-text',\n                    after: { content: p.text, inlineClassName: p.preview ? 'ghost-text-decoration-preview' : 'ghost-text-decoration' },\n                    showIfCollapsed: true,\n                }\n            });\n        }).concat(hiddenTextDecorations));\n    }\n}\nclass AdditionalLinesWidget {\n    constructor(editor, languageIdCodec) {\n        this.editor = editor;\n        this.languageIdCodec = languageIdCodec;\n        this._viewZoneId = undefined;\n    }\n    get viewZoneId() { return this._viewZoneId; }\n    dispose() {\n        this.clear();\n    }\n    clear() {\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n        });\n    }\n    updateLines(lineNumber, additionalLines, minReservedLineCount) {\n        const textModel = this.editor.getModel();\n        if (!textModel) {\n            return;\n        }\n        const { tabSize } = textModel.getOptions();\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n            const heightInLines = Math.max(additionalLines.length, minReservedLineCount);\n            if (heightInLines > 0) {\n                const domNode = document.createElement('div');\n                renderLines(domNode, tabSize, additionalLines, this.editor.getOptions(), this.languageIdCodec);\n                this._viewZoneId = changeAccessor.addZone({\n                    afterLineNumber: lineNumber,\n                    heightInLines: heightInLines,\n                    domNode,\n                    afterColumnAffinity: 1 /* Right */\n                });\n            }\n        });\n    }\n}\nfunction renderLines(domNode, tabSize, lines, opts, languageIdCodec) {\n    const disableMonospaceOptimizations = opts.get(29 /* disableMonospaceOptimizations */);\n    const stopRenderingLineAfter = opts.get(105 /* stopRenderingLineAfter */);\n    // To avoid visual confusion, we don't want to render visible whitespace\n    const renderWhitespace = 'none';\n    const renderControlCharacters = opts.get(83 /* renderControlCharacters */);\n    const fontLigatures = opts.get(45 /* fontLigatures */);\n    const fontInfo = opts.get(44 /* fontInfo */);\n    const lineHeight = opts.get(59 /* lineHeight */);\n    const sb = createStringBuilder(10000);\n    sb.appendASCIIString('<div class=\"suggest-preview-text\">');\n    for (let i = 0, len = lines.length; i < len; i++) {\n        const lineData = lines[i];\n        const line = lineData.content;\n        sb.appendASCIIString('<div class=\"view-line');\n        sb.appendASCIIString('\" style=\"top:');\n        sb.appendASCIIString(String(i * lineHeight));\n        sb.appendASCIIString('px;width:1000000px;\">');\n        const isBasicASCII = strings.isBasicASCII(line);\n        const containsRTL = strings.containsRTL(line);\n        const lineTokens = LineTokens.createEmpty(line, languageIdCodec);\n        renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, line, false, isBasicASCII, containsRTL, 0, lineTokens, lineData.decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null), sb);\n        sb.appendASCIIString('</div>');\n    }\n    sb.appendASCIIString('</div>');\n    applyFontInfo(domNode, fontInfo);\n    const html = sb.build();\n    const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n    domNode.innerHTML = trustedhtml;\n}\nclass ViewMoreLinesContentWidget extends Disposable {\n    constructor(editor, position, domNode, disposableStore) {\n        super();\n        this.editor = editor;\n        this.position = position;\n        this.domNode = domNode;\n        this.allowEditorOverflow = false;\n        this.suppressMouseDown = false;\n        this._register(disposableStore);\n        this._register(toDisposable(() => {\n            this.editor.removeContentWidget(this);\n        }));\n        this.editor.addContentWidget(this);\n    }\n    getId() {\n        return 'editor.widget.viewMoreLinesWidget';\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    getPosition() {\n        return {\n            position: this.position,\n            preference: [0 /* EXACT */]\n        };\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const foreground = theme.getColor(ghostTextForeground);\n    if (foreground) {\n        // `!important` ensures that other decorations don't cause a style conflict (#132017).\n        collector.addRule(`.monaco-editor .ghost-text-decoration { color: ${foreground.toString()} !important; }`);\n        collector.addRule(`.monaco-editor .ghost-text-decoration-preview { color: ${foreground.toString()} !important; }`);\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { color: ${foreground.toString()} !important; }`);\n    }\n    const background = theme.getColor(ghostTextBackground);\n    if (background) {\n        collector.addRule(`.monaco-editor .ghost-text-decoration { background-color: ${background.toString()}; }`);\n        collector.addRule(`.monaco-editor .ghost-text-decoration-preview { background-color: ${background.toString()}; }`);\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { background-color: ${background.toString()}; }`);\n    }\n    const border = theme.getColor(ghostTextBorder);\n    if (border) {\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { border: 1px solid ${border}; }`);\n        collector.addRule(`.monaco-editor .ghost-text-decoration { border: 1px solid ${border}; }`);\n        collector.addRule(`.monaco-editor .ghost-text-decoration-preview { border: 1px solid ${border}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { firstNonWhitespaceIndex } from '../../../../base/common/strings.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { CursorColumns } from '../../../common/core/cursorColumns.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { inlineSuggestCommitId } from './consts.js';\nimport { GhostTextModel } from './ghostTextModel.js';\nimport { GhostTextWidget } from './ghostTextWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nlet GhostTextController = class GhostTextController extends Disposable {\n    constructor(editor, instantiationService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.triggeredExplicitly = false;\n        this.activeController = this._register(new MutableDisposable());\n        this._register(this.editor.onDidChangeModel(() => {\n            this.updateModelController();\n        }));\n        this._register(this.editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(106 /* suggest */)) {\n                this.updateModelController();\n            }\n            if (e.hasChanged(55 /* inlineSuggest */)) {\n                this.updateModelController();\n            }\n        }));\n        this.updateModelController();\n    }\n    static get(editor) {\n        return editor.getContribution(GhostTextController.ID);\n    }\n    get activeModel() {\n        var _a;\n        return (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.model;\n    }\n    // Don't call this method when not neccessary. It will recreate the activeController.\n    updateModelController() {\n        const suggestOptions = this.editor.getOption(106 /* suggest */);\n        const inlineSuggestOptions = this.editor.getOption(55 /* inlineSuggest */);\n        this.activeController.value = undefined;\n        // ActiveGhostTextController is only created if one of those settings is set or if the inline completions are triggered explicitly.\n        this.activeController.value =\n            this.editor.hasModel() && (suggestOptions.preview || inlineSuggestOptions.enabled || this.triggeredExplicitly)\n                ? this.instantiationService.createInstance(ActiveGhostTextController, this.editor)\n                : undefined;\n    }\n    shouldShowHoverAt(hoverRange) {\n        var _a;\n        return ((_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.shouldShowHoverAt(hoverRange)) || false;\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        var _a, _b;\n        return ((_b = (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.widget) === null || _b === void 0 ? void 0 : _b.shouldShowHoverAtViewZone(viewZoneId)) || false;\n    }\n    trigger() {\n        var _a;\n        this.triggeredExplicitly = true;\n        if (!this.activeController.value) {\n            this.updateModelController();\n        }\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.triggerInlineCompletion();\n    }\n    commit() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.commitInlineCompletion();\n    }\n    hide() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.hideInlineCompletion();\n    }\n    showNextInlineCompletion() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.showNextInlineCompletion();\n    }\n    showPreviousInlineCompletion() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.showPreviousInlineCompletion();\n    }\n    hasMultipleInlineCompletions() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield ((_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\n            return result !== undefined ? result : false;\n        });\n    }\n};\nGhostTextController.inlineSuggestionVisible = new RawContextKey('inlineSuggestionVisible', false, nls.localize('inlineSuggestionVisible', \"Whether an inline suggestion is visible\"));\nGhostTextController.inlineSuggestionHasIndentation = new RawContextKey('inlineSuggestionHasIndentation', false, nls.localize('inlineSuggestionHasIndentation', \"Whether the inline suggestion starts with whitespace\"));\nGhostTextController.inlineSuggestionHasIndentationLessThanTabSize = new RawContextKey('inlineSuggestionHasIndentationLessThanTabSize', true, nls.localize('inlineSuggestionHasIndentationLessThanTabSize', \"Whether the inline suggestion starts with whitespace that is less than what would be inserted by tab\"));\nGhostTextController.ID = 'editor.contrib.ghostTextController';\nGhostTextController = __decorate([\n    __param(1, IInstantiationService)\n], GhostTextController);\nexport { GhostTextController };\nclass GhostTextContextKeys {\n    constructor(contextKeyService) {\n        this.contextKeyService = contextKeyService;\n        this.inlineCompletionVisible = GhostTextController.inlineSuggestionVisible.bindTo(this.contextKeyService);\n        this.inlineCompletionSuggestsIndentation = GhostTextController.inlineSuggestionHasIndentation.bindTo(this.contextKeyService);\n        this.inlineCompletionSuggestsIndentationLessThanTabSize = GhostTextController.inlineSuggestionHasIndentationLessThanTabSize.bindTo(this.contextKeyService);\n    }\n}\n/**\n * The controller for a text editor with an initialized text model.\n * Must be disposed as soon as the model detaches from the editor.\n*/\nlet ActiveGhostTextController = class ActiveGhostTextController extends Disposable {\n    constructor(editor, instantiationService, contextKeyService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.contextKeys = new GhostTextContextKeys(this.contextKeyService);\n        this.model = this._register(this.instantiationService.createInstance(GhostTextModel, this.editor));\n        this.widget = this._register(this.instantiationService.createInstance(GhostTextWidget, this.editor, this.model));\n        this._register(toDisposable(() => {\n            this.contextKeys.inlineCompletionVisible.set(false);\n            this.contextKeys.inlineCompletionSuggestsIndentation.set(false);\n            this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(true);\n        }));\n        this._register(this.model.onDidChange(() => {\n            this.updateContextKeys();\n        }));\n        this.updateContextKeys();\n    }\n    updateContextKeys() {\n        var _a;\n        this.contextKeys.inlineCompletionVisible.set(((_a = this.model.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.ghostText) !== undefined);\n        let startsWithIndentation = false;\n        let startsWithIndentationLessThanTabSize = true;\n        const ghostText = this.model.inlineCompletionsModel.ghostText;\n        if (!!this.model.activeInlineCompletionsModel && ghostText && ghostText.parts.length > 0) {\n            const { column, lines } = ghostText.parts[0];\n            const firstLine = lines[0];\n            const indentationEndColumn = this.editor.getModel().getLineIndentColumn(ghostText.lineNumber);\n            const inIndentation = column <= indentationEndColumn;\n            if (inIndentation) {\n                let firstNonWsIdx = firstNonWhitespaceIndex(firstLine);\n                if (firstNonWsIdx === -1) {\n                    firstNonWsIdx = firstLine.length - 1;\n                }\n                startsWithIndentation = firstNonWsIdx > 0;\n                const tabSize = this.editor.getModel().getOptions().tabSize;\n                const visibleColumnIndentation = CursorColumns.visibleColumnFromColumn(firstLine, firstNonWsIdx + 1, tabSize);\n                startsWithIndentationLessThanTabSize = visibleColumnIndentation < tabSize;\n            }\n        }\n        this.contextKeys.inlineCompletionSuggestsIndentation.set(startsWithIndentation);\n        this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(startsWithIndentationLessThanTabSize);\n    }\n};\nActiveGhostTextController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IContextKeyService)\n], ActiveGhostTextController);\nexport { ActiveGhostTextController };\nconst GhostTextCommand = EditorCommand.bindToContribution(GhostTextController.get);\nexport const commitInlineSuggestionAction = new GhostTextCommand({\n    id: inlineSuggestCommitId,\n    precondition: GhostTextController.inlineSuggestionVisible,\n    handler(x) {\n        x.commit();\n        x.editor.focus();\n    }\n});\nregisterEditorCommand(commitInlineSuggestionAction);\nKeybindingsRegistry.registerKeybindingRule({\n    primary: 2 /* Tab */,\n    weight: 200,\n    id: commitInlineSuggestionAction.id,\n    when: ContextKeyExpr.and(commitInlineSuggestionAction.precondition, EditorContextKeys.tabMovesFocus.toNegated(), GhostTextController.inlineSuggestionHasIndentationLessThanTabSize),\n});\nregisterEditorCommand(new GhostTextCommand({\n    id: 'editor.action.inlineSuggest.hide',\n    precondition: GhostTextController.inlineSuggestionVisible,\n    kbOpts: {\n        weight: 100,\n        primary: 9 /* Escape */,\n    },\n    handler(x) {\n        x.hide();\n    }\n}));\nexport class ShowNextInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: ShowNextInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showNext', \"Show Next Inline Suggestion\"),\n            alias: 'Show Next Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* Alt */ | 89 /* BracketRight */,\n            },\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            if (controller) {\n                controller.showNextInlineCompletion();\n                editor.focus();\n            }\n        });\n    }\n}\nShowNextInlineSuggestionAction.ID = 'editor.action.inlineSuggest.showNext';\nexport class ShowPreviousInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: ShowPreviousInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showPrevious', \"Show Previous Inline Suggestion\"),\n            alias: 'Show Previous Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* Alt */ | 87 /* BracketLeft */,\n            },\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            if (controller) {\n                controller.showPreviousInlineCompletion();\n                editor.focus();\n            }\n        });\n    }\n}\nShowPreviousInlineSuggestionAction.ID = 'editor.action.inlineSuggest.showPrevious';\nexport class TriggerInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.trigger',\n            label: nls.localize('action.inlineSuggest.trigger', \"Trigger Inline Suggestion\"),\n            alias: 'Trigger Inline Suggestion',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            if (controller) {\n                controller.trigger();\n            }\n        });\n    }\n}\nregisterEditorContribution(GhostTextController.ID, GhostTextController);\nregisterEditorAction(TriggerInlineSuggestionAction);\nregisterEditorAction(ShowNextInlineSuggestionAction);\nregisterEditorAction(ShowPreviousInlineSuggestionAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/services/language.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { commitInlineSuggestionAction, GhostTextController, ShowNextInlineSuggestionAction, ShowPreviousInlineSuggestionAction } from './ghostTextController.js';\nimport * as nls from '../../../../nls.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { IMenuService, MenuId, MenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nexport class InlineCompletionsHover {\n    constructor(owner, range, controller) {\n        this.owner = owner;\n        this.range = range;\n        this.controller = controller;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n    hasMultipleSuggestions() {\n        return this.controller.hasMultipleInlineCompletions();\n    }\n}\nlet InlineCompletionsHoverParticipant = class InlineCompletionsHoverParticipant {\n    constructor(_editor, _commandService, _menuService, _contextKeyService, _languageService, _openerService, accessibilityService) {\n        this._editor = _editor;\n        this._commandService = _commandService;\n        this._menuService = _menuService;\n        this._contextKeyService = _contextKeyService;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this.accessibilityService = accessibilityService;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        const controller = GhostTextController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        const target = mouseEvent.target;\n        if (target.type === 8 /* CONTENT_VIEW_ZONE */) {\n            // handle the case where the mouse is over the view zone\n            const viewZoneData = target.detail;\n            if (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) {\n                return new HoverForeignElementAnchor(1000, this, Range.fromPositions(viewZoneData.positionBefore || viewZoneData.position, viewZoneData.positionBefore || viewZoneData.position));\n            }\n        }\n        if (target.type === 7 /* CONTENT_EMPTY */) {\n            // handle the case where the mouse is over the empty portion of a line following ghost text\n            if (controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range);\n            }\n        }\n        if (target.type === 6 /* CONTENT_TEXT */) {\n            // handle the case where the mouse is directly over ghost text\n            const mightBeForeignElement = target.detail.mightBeForeignElement;\n            if (mightBeForeignElement && controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range);\n            }\n        }\n        return null;\n    }\n    computeSync(anchor, lineDecorations) {\n        const controller = GhostTextController.get(this._editor);\n        if (controller && controller.shouldShowHoverAt(anchor.range)) {\n            return [new InlineCompletionsHover(this, anchor.range, controller)];\n        }\n        return [];\n    }\n    renderHoverParts(context, hoverParts) {\n        const disposableStore = new DisposableStore();\n        const part = hoverParts[0];\n        if (this.accessibilityService.isScreenReaderOptimized()) {\n            this.renderScreenReaderText(context, part, disposableStore);\n        }\n        const menu = disposableStore.add(this._menuService.createMenu(MenuId.InlineCompletionsActions, this._contextKeyService));\n        const previousAction = context.statusBar.addAction({\n            label: nls.localize('showNextInlineSuggestion', \"Next\"),\n            commandId: ShowNextInlineSuggestionAction.ID,\n            run: () => this._commandService.executeCommand(ShowNextInlineSuggestionAction.ID)\n        });\n        const nextAction = context.statusBar.addAction({\n            label: nls.localize('showPreviousInlineSuggestion', \"Previous\"),\n            commandId: ShowPreviousInlineSuggestionAction.ID,\n            run: () => this._commandService.executeCommand(ShowPreviousInlineSuggestionAction.ID)\n        });\n        context.statusBar.addAction({\n            label: nls.localize('acceptInlineSuggestion', \"Accept\"),\n            commandId: commitInlineSuggestionAction.id,\n            run: () => this._commandService.executeCommand(commitInlineSuggestionAction.id)\n        });\n        const actions = [previousAction, nextAction];\n        for (const action of actions) {\n            action.setEnabled(false);\n        }\n        part.hasMultipleSuggestions().then(hasMore => {\n            for (const action of actions) {\n                action.setEnabled(hasMore);\n            }\n        });\n        for (const [_, group] of menu.getActions()) {\n            for (const action of group) {\n                if (action instanceof MenuItemAction) {\n                    context.statusBar.addAction({\n                        label: action.label,\n                        commandId: action.item.id,\n                        run: () => this._commandService.executeCommand(action.item.id)\n                    });\n                }\n            }\n        }\n        return disposableStore;\n    }\n    renderScreenReaderText(context, part, disposableStore) {\n        var _a, _b;\n        const $ = dom.$;\n        const markdownHoverElement = $('div.hover-row.markdown-hover');\n        const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n        const renderer = disposableStore.add(new MarkdownRenderer({ editor: this._editor }, this._languageService, this._openerService));\n        const render = (code) => {\n            disposableStore.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const inlineSuggestionAvailable = nls.localize('inlineSuggestionFollows', \"Suggestion:\");\n            const renderedContents = disposableStore.add(renderer.render(new MarkdownString().appendText(inlineSuggestionAvailable).appendCodeblock('text', code)));\n            hoverContentsElement.replaceChildren(renderedContents.element);\n        };\n        const ghostText = (_b = (_a = part.controller.activeModel) === null || _a === void 0 ? void 0 : _a.inlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.ghostText;\n        if (ghostText) {\n            const lineText = this._editor.getModel().getLineContent(ghostText.lineNumber);\n            render(ghostText.renderForScreenReader(lineText));\n        }\n        context.fragment.appendChild(markdownHoverElement);\n    }\n};\nInlineCompletionsHoverParticipant = __decorate([\n    __param(1, ICommandService),\n    __param(2, IMenuService),\n    __param(3, IContextKeyService),\n    __param(4, ILanguageService),\n    __param(5, IOpenerService),\n    __param(6, IAccessibilityService)\n], InlineCompletionsHoverParticipant);\nexport { InlineCompletionsHoverParticipant };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { CursorMoveCommands } from '../../../common/cursor/cursorMoveCommands.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nexport class ExpandLineSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'expandLineSelection',\n            label: nls.localize('expandLineSelection', \"Expand Line Selection\"),\n            alias: 'Expand Line Selection',\n            precondition: undefined,\n            kbOpts: {\n                weight: 0 /* EditorCore */,\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* CtrlCmd */ | 42 /* KeyL */\n            },\n        });\n    }\n    run(_accessor, editor, args) {\n        args = args || {};\n        if (!editor.hasModel()) {\n            return;\n        }\n        const viewModel = editor._getViewModel();\n        viewModel.model.pushStackElement();\n        viewModel.setCursorStates(args.source, 3 /* Explicit */, CursorMoveCommands.expandLineSelection(viewModel, viewModel.getCursorStates()));\n        viewModel.revealPrimaryCursor(args.source, true);\n    }\n}\nregisterEditorAction(ExpandLineSelectionAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class CopyLinesCommand {\n    constructor(selection, isCopyingDown, noop) {\n        this._selection = selection;\n        this._isCopyingDown = isCopyingDown;\n        this._noop = noop || false;\n        this._selectionDirection = 0 /* LTR */;\n        this._selectionId = null;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n    }\n    getEditOperations(model, builder) {\n        let s = this._selection;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._endLineNumberDelta = 1;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        let sourceLines = [];\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            sourceLines.push(model.getLineContent(i));\n        }\n        const sourceText = sourceLines.join('\\n');\n        if (sourceText === '') {\n            // Duplicating empty line\n            if (this._isCopyingDown) {\n                this._startLineNumberDelta++;\n                this._endLineNumberDelta++;\n            }\n        }\n        if (this._noop) {\n            builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber + 1, 1), s.endLineNumber === model.getLineCount() ? '' : '\\n');\n        }\n        else {\n            if (!this._isCopyingDown) {\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + sourceText);\n            }\n            else {\n                builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), sourceText + '\\n');\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n        this._selectionDirection = this._selection.getDirection();\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._startLineNumberDelta !== 0 || this._endLineNumberDelta !== 0) {\n            let startLineNumber = result.startLineNumber;\n            let startColumn = result.startColumn;\n            let endLineNumber = result.endLineNumber;\n            let endColumn = result.endColumn;\n            if (this._startLineNumberDelta !== 0) {\n                startLineNumber = startLineNumber + this._startLineNumberDelta;\n                startColumn = 1;\n            }\n            if (this._endLineNumberDelta !== 0) {\n                endLineNumber = endLineNumber + this._endLineNumberDelta;\n                endColumn = 1;\n            }\n            result = Selection.createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, this._selectionDirection);\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../../base/common/strings.js';\nimport { ShiftCommand } from '../../../common/commands/shiftCommand.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IndentAction } from '../../../common/languages/languageConfiguration.js';\nimport { LanguageConfigurationRegistry } from '../../../common/languages/languageConfigurationRegistry.js';\nimport * as indentUtils from '../../indentation/browser/indentUtils.js';\nexport class MoveLinesCommand {\n    constructor(selection, isMovingDown, autoIndent) {\n        this._selection = selection;\n        this._isMovingDown = isMovingDown;\n        this._autoIndent = autoIndent;\n        this._selectionId = null;\n        this._moveEndLineSelectionShrink = false;\n    }\n    getEditOperations(model, builder) {\n        let modelLineCount = model.getLineCount();\n        if (this._isMovingDown && this._selection.endLineNumber === modelLineCount) {\n            this._selectionId = builder.trackSelection(this._selection);\n            return;\n        }\n        if (!this._isMovingDown && this._selection.startLineNumber === 1) {\n            this._selectionId = builder.trackSelection(this._selection);\n            return;\n        }\n        this._moveEndPositionDown = false;\n        let s = this._selection;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._moveEndPositionDown = true;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\n        let indentConverter = this.buildIndentConverter(tabSize, indentSize, insertSpaces);\n        let virtualModel = {\n            getLineTokens: (lineNumber) => {\n                return model.getLineTokens(lineNumber);\n            },\n            getLanguageId: () => {\n                return model.getLanguageId();\n            },\n            getLanguageIdAtPosition: (lineNumber, column) => {\n                return model.getLanguageIdAtPosition(lineNumber, column);\n            },\n            getLineContent: null,\n        };\n        if (s.startLineNumber === s.endLineNumber && model.getLineMaxColumn(s.startLineNumber) === 1) {\n            // Current line is empty\n            let lineNumber = s.startLineNumber;\n            let otherLineNumber = (this._isMovingDown ? lineNumber + 1 : lineNumber - 1);\n            if (model.getLineMaxColumn(otherLineNumber) === 1) {\n                // Other line number is empty too, so no editing is needed\n                // Add a no-op to force running by the model\n                builder.addEditOperation(new Range(1, 1, 1, 1), null);\n            }\n            else {\n                // Type content from other line number on line number\n                builder.addEditOperation(new Range(lineNumber, 1, lineNumber, 1), model.getLineContent(otherLineNumber));\n                // Remove content from other line number\n                builder.addEditOperation(new Range(otherLineNumber, 1, otherLineNumber, model.getLineMaxColumn(otherLineNumber)), null);\n            }\n            // Track selection at the other line number\n            s = new Selection(otherLineNumber, 1, otherLineNumber, 1);\n        }\n        else {\n            let movingLineNumber;\n            let movingLineText;\n            if (this._isMovingDown) {\n                movingLineNumber = s.endLineNumber + 1;\n                movingLineText = model.getLineContent(movingLineNumber);\n                // Delete line that needs to be moved\n                builder.addEditOperation(new Range(movingLineNumber - 1, model.getLineMaxColumn(movingLineNumber - 1), movingLineNumber, model.getLineMaxColumn(movingLineNumber)), null);\n                let insertingText = movingLineText;\n                if (this.shouldAutoIndent(model, s)) {\n                    let movingLineMatchResult = this.matchEnterRule(model, indentConverter, tabSize, movingLineNumber, s.startLineNumber - 1);\n                    // if s.startLineNumber - 1 matches onEnter rule, we still honor that.\n                    if (movingLineMatchResult !== null) {\n                        let oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\n                        let newSpaceCnt = movingLineMatchResult + indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                        let newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                        insertingText = newIndentation + this.trimLeft(movingLineText);\n                    }\n                    else {\n                        // no enter rule matches, let's check indentatin rules then.\n                        virtualModel.getLineContent = (lineNumber) => {\n                            if (lineNumber === s.startLineNumber) {\n                                return model.getLineContent(movingLineNumber);\n                            }\n                            else {\n                                return model.getLineContent(lineNumber);\n                            }\n                        };\n                        let indentOfMovingLine = LanguageConfigurationRegistry.getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber, indentConverter);\n                        if (indentOfMovingLine !== null) {\n                            let oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\n                            let newSpaceCnt = indentUtils.getSpaceCnt(indentOfMovingLine, tabSize);\n                            let oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                let newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                                insertingText = newIndentation + this.trimLeft(movingLineText);\n                            }\n                        }\n                    }\n                    // add edit operations for moving line first to make sure it's executed after we make indentation change\n                    // to s.startLineNumber\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\n                    let ret = this.matchEnterRuleMovingDown(model, indentConverter, tabSize, s.startLineNumber, movingLineNumber, insertingText);\n                    // check if the line being moved before matches onEnter rules, if so let's adjust the indentation by onEnter rules.\n                    if (ret !== null) {\n                        if (ret !== 0) {\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\n                        }\n                    }\n                    else {\n                        // it doesn't match onEnter rules, let's check indentation rules then.\n                        virtualModel.getLineContent = (lineNumber) => {\n                            if (lineNumber === s.startLineNumber) {\n                                return insertingText;\n                            }\n                            else if (lineNumber >= s.startLineNumber + 1 && lineNumber <= s.endLineNumber + 1) {\n                                return model.getLineContent(lineNumber - 1);\n                            }\n                            else {\n                                return model.getLineContent(lineNumber);\n                            }\n                        };\n                        let newIndentatOfMovingBlock = LanguageConfigurationRegistry.getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber + 1, indentConverter);\n                        if (newIndentatOfMovingBlock !== null) {\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(newIndentatOfMovingBlock, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\n                            }\n                        }\n                    }\n                }\n                else {\n                    // Insert line that needs to be moved before\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\n                }\n            }\n            else {\n                movingLineNumber = s.startLineNumber - 1;\n                movingLineText = model.getLineContent(movingLineNumber);\n                // Delete line that needs to be moved\n                builder.addEditOperation(new Range(movingLineNumber, 1, movingLineNumber + 1, 1), null);\n                // Insert line that needs to be moved after\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + movingLineText);\n                if (this.shouldAutoIndent(model, s)) {\n                    virtualModel.getLineContent = (lineNumber) => {\n                        if (lineNumber === movingLineNumber) {\n                            return model.getLineContent(s.startLineNumber);\n                        }\n                        else {\n                            return model.getLineContent(lineNumber);\n                        }\n                    };\n                    let ret = this.matchEnterRule(model, indentConverter, tabSize, s.startLineNumber, s.startLineNumber - 2);\n                    // check if s.startLineNumber - 2 matches onEnter rules, if so adjust the moving block by onEnter rules.\n                    if (ret !== null) {\n                        if (ret !== 0) {\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\n                        }\n                    }\n                    else {\n                        // it doesn't match any onEnter rule, let's check indentation rules then.\n                        let indentOfFirstLine = LanguageConfigurationRegistry.getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(s.startLineNumber, 1), movingLineNumber, indentConverter);\n                        if (indentOfFirstLine !== null) {\n                            // adjust the indentation of the moving block\n                            let oldIndent = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\n                            let newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\n                            let oldSpaceCnt = indentUtils.getSpaceCnt(oldIndent, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                let spaceCntOffset = newSpaceCnt - oldSpaceCnt;\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n    }\n    buildIndentConverter(tabSize, indentSize, insertSpaces) {\n        return {\n            shiftIndent: (indentation) => {\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            },\n            unshiftIndent: (indentation) => {\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            }\n        };\n    }\n    parseEnterResult(model, indentConverter, tabSize, line, enter) {\n        if (enter) {\n            let enterPrefix = enter.indentation;\n            if (enter.indentAction === IndentAction.None) {\n                enterPrefix = enter.indentation + enter.appendText;\n            }\n            else if (enter.indentAction === IndentAction.Indent) {\n                enterPrefix = enter.indentation + enter.appendText;\n            }\n            else if (enter.indentAction === IndentAction.IndentOutdent) {\n                enterPrefix = enter.indentation;\n            }\n            else if (enter.indentAction === IndentAction.Outdent) {\n                enterPrefix = indentConverter.unshiftIndent(enter.indentation) + enter.appendText;\n            }\n            let movingLineText = model.getLineContent(line);\n            if (this.trimLeft(movingLineText).indexOf(this.trimLeft(enterPrefix)) >= 0) {\n                let oldIndentation = strings.getLeadingWhitespace(model.getLineContent(line));\n                let newIndentation = strings.getLeadingWhitespace(enterPrefix);\n                let indentMetadataOfMovelingLine = LanguageConfigurationRegistry.getIndentMetadata(model, line);\n                if (indentMetadataOfMovelingLine !== null && indentMetadataOfMovelingLine & 2 /* DECREASE_MASK */) {\n                    newIndentation = indentConverter.unshiftIndent(newIndentation);\n                }\n                let newSpaceCnt = indentUtils.getSpaceCnt(newIndentation, tabSize);\n                let oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                return newSpaceCnt - oldSpaceCnt;\n            }\n        }\n        return null;\n    }\n    /**\n     *\n     * @param model\n     * @param indentConverter\n     * @param tabSize\n     * @param line the line moving down\n     * @param futureAboveLineNumber the line which will be at the `line` position\n     * @param futureAboveLineText\n     */\n    matchEnterRuleMovingDown(model, indentConverter, tabSize, line, futureAboveLineNumber, futureAboveLineText) {\n        if (strings.lastNonWhitespaceIndex(futureAboveLineText) >= 0) {\n            // break\n            let maxColumn = model.getLineMaxColumn(futureAboveLineNumber);\n            let enter = LanguageConfigurationRegistry.getEnterAction(this._autoIndent, model, new Range(futureAboveLineNumber, maxColumn, futureAboveLineNumber, maxColumn));\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n        }\n        else {\n            // go upwards, starting from `line - 1`\n            let validPrecedingLine = line - 1;\n            while (validPrecedingLine >= 1) {\n                let lineContent = model.getLineContent(validPrecedingLine);\n                let nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\n                if (nonWhitespaceIdx >= 0) {\n                    break;\n                }\n                validPrecedingLine--;\n            }\n            if (validPrecedingLine < 1 || line > model.getLineCount()) {\n                return null;\n            }\n            let maxColumn = model.getLineMaxColumn(validPrecedingLine);\n            let enter = LanguageConfigurationRegistry.getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn));\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n        }\n    }\n    matchEnterRule(model, indentConverter, tabSize, line, oneLineAbove, previousLineText) {\n        let validPrecedingLine = oneLineAbove;\n        while (validPrecedingLine >= 1) {\n            // ship empty lines as empty lines just inherit indentation\n            let lineContent;\n            if (validPrecedingLine === oneLineAbove && previousLineText !== undefined) {\n                lineContent = previousLineText;\n            }\n            else {\n                lineContent = model.getLineContent(validPrecedingLine);\n            }\n            let nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\n            if (nonWhitespaceIdx >= 0) {\n                break;\n            }\n            validPrecedingLine--;\n        }\n        if (validPrecedingLine < 1 || line > model.getLineCount()) {\n            return null;\n        }\n        let maxColumn = model.getLineMaxColumn(validPrecedingLine);\n        let enter = LanguageConfigurationRegistry.getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn));\n        return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n    }\n    trimLeft(str) {\n        return str.replace(/^\\s+/, '');\n    }\n    shouldAutoIndent(model, selection) {\n        if (this._autoIndent < 4 /* Full */) {\n            return false;\n        }\n        // if it's not easy to tokenize, we stop auto indent.\n        if (!model.isCheapToTokenize(selection.startLineNumber)) {\n            return false;\n        }\n        let languageAtSelectionStart = model.getLanguageIdAtPosition(selection.startLineNumber, 1);\n        let languageAtSelectionEnd = model.getLanguageIdAtPosition(selection.endLineNumber, 1);\n        if (languageAtSelectionStart !== languageAtSelectionEnd) {\n            return false;\n        }\n        if (LanguageConfigurationRegistry.getIndentRulesSupport(languageAtSelectionStart) === null) {\n            return false;\n        }\n        return true;\n    }\n    getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, offset) {\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            let lineContent = model.getLineContent(i);\n            let originalIndent = strings.getLeadingWhitespace(lineContent);\n            let originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\n            let newSpacesCnt = originalSpacesCnt + offset;\n            let newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\n            if (newIndent !== originalIndent) {\n                builder.addEditOperation(new Range(i, 1, i, originalIndent.length + 1), newIndent);\n                if (i === s.endLineNumber && s.endColumn <= originalIndent.length + 1 && newIndent === '') {\n                    // as users select part of the original indent white spaces\n                    // when we adjust the indentation of endLine, we should adjust the cursor position as well.\n                    this._moveEndLineSelectionShrink = true;\n                }\n            }\n        }\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._moveEndPositionDown) {\n            result = result.setEndPosition(result.endLineNumber + 1, 1);\n        }\n        if (this._moveEndLineSelectionShrink && result.startLineNumber < result.endLineNumber) {\n            result = result.setEndPosition(result.endLineNumber, 2);\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nexport class SortLinesCommand {\n    constructor(selection, descending) {\n        this.selection = selection;\n        this.descending = descending;\n        this.selectionId = null;\n    }\n    static getCollator() {\n        if (!SortLinesCommand._COLLATOR) {\n            SortLinesCommand._COLLATOR = new Intl.Collator();\n        }\n        return SortLinesCommand._COLLATOR;\n    }\n    getEditOperations(model, builder) {\n        let op = sortLines(model, this.selection, this.descending);\n        if (op) {\n            builder.addEditOperation(op.range, op.text);\n        }\n        this.selectionId = builder.trackSelection(this.selection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n    static canRun(model, selection, descending) {\n        if (model === null) {\n            return false;\n        }\n        let data = getSortData(model, selection, descending);\n        if (!data) {\n            return false;\n        }\n        for (let i = 0, len = data.before.length; i < len; i++) {\n            if (data.before[i] !== data.after[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nSortLinesCommand._COLLATOR = null;\nfunction getSortData(model, selection, descending) {\n    let startLineNumber = selection.startLineNumber;\n    let endLineNumber = selection.endLineNumber;\n    if (selection.endColumn === 1) {\n        endLineNumber--;\n    }\n    // Nothing to sort if user didn't select anything.\n    if (startLineNumber >= endLineNumber) {\n        return null;\n    }\n    let linesToSort = [];\n    // Get the contents of the selection to be sorted.\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        linesToSort.push(model.getLineContent(lineNumber));\n    }\n    let sorted = linesToSort.slice(0);\n    sorted.sort(SortLinesCommand.getCollator().compare);\n    // If descending, reverse the order.\n    if (descending === true) {\n        sorted = sorted.reverse();\n    }\n    return {\n        startLineNumber: startLineNumber,\n        endLineNumber: endLineNumber,\n        before: linesToSort,\n        after: sorted\n    };\n}\n/**\n * Generate commands for sorting lines on a model.\n */\nfunction sortLines(model, selection, descending) {\n    let data = getSortData(model, selection, descending);\n    if (!data) {\n        return null;\n    }\n    return EditOperation.replace(new Range(data.startLineNumber, 1, data.endLineNumber, model.getLineMaxColumn(data.endLineNumber)), data.after.join('\\n'));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { CoreEditingCommands } from '../../../browser/controller/coreCommands.js';\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection, ReplaceCommandThatSelectsText } from '../../../common/commands/replaceCommand.js';\nimport { TrimTrailingWhitespaceCommand } from '../../../common/commands/trimTrailingWhitespaceCommand.js';\nimport { TypeOperations } from '../../../common/cursor/cursorTypeOperations.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { CopyLinesCommand } from './copyLinesCommand.js';\nimport { MoveLinesCommand } from './moveLinesCommand.js';\nimport { SortLinesCommand } from './sortLinesCommand.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\n// copy lines\nclass AbstractCopyLinesAction extends EditorAction {\n    constructor(down, opts) {\n        super(opts);\n        this.down = down;\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections().map((selection, index) => ({ selection, index, ignore: false }));\n        selections.sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\n        // Remove selections that would result in copying the same line\n        let prev = selections[0];\n        for (let i = 1; i < selections.length; i++) {\n            const curr = selections[i];\n            if (prev.selection.endLineNumber === curr.selection.startLineNumber) {\n                // these two selections would copy the same line\n                if (prev.index < curr.index) {\n                    // prev wins\n                    curr.ignore = true;\n                }\n                else {\n                    // curr wins\n                    prev.ignore = true;\n                    prev = curr;\n                }\n            }\n        }\n        const commands = [];\n        for (const selection of selections) {\n            commands.push(new CopyLinesCommand(selection.selection, this.down, selection.ignore));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass CopyLinesUpAction extends AbstractCopyLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.copyLinesUpAction',\n            label: nls.localize('lines.copyUp', \"Copy Line Up\"),\n            alias: 'Copy Line Up',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* Alt */ | 1024 /* Shift */ | 16 /* UpArrow */,\n                linux: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 1024 /* Shift */ | 16 /* UpArrow */ },\n                weight: 100 /* EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miCopyLinesUp', comment: ['&& denotes a mnemonic'] }, \"&&Copy Line Up\"),\n                order: 1\n            }\n        });\n    }\n}\nclass CopyLinesDownAction extends AbstractCopyLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.copyLinesDownAction',\n            label: nls.localize('lines.copyDown', \"Copy Line Down\"),\n            alias: 'Copy Line Down',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* Alt */ | 1024 /* Shift */ | 18 /* DownArrow */,\n                linux: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 1024 /* Shift */ | 18 /* DownArrow */ },\n                weight: 100 /* EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miCopyLinesDown', comment: ['&& denotes a mnemonic'] }, \"Co&&py Line Down\"),\n                order: 2\n            }\n        });\n    }\n}\nexport class DuplicateSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.duplicateSelection',\n            label: nls.localize('duplicateSelection', \"Duplicate Selection\"),\n            alias: 'Duplicate Selection',\n            precondition: EditorContextKeys.writable,\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miDuplicateSelection', comment: ['&& denotes a mnemonic'] }, \"&&Duplicate Selection\"),\n                order: 5\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const commands = [];\n        const selections = editor.getSelections();\n        const model = editor.getModel();\n        for (const selection of selections) {\n            if (selection.isEmpty()) {\n                commands.push(new CopyLinesCommand(selection, true));\n            }\n            else {\n                const insertSelection = new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn);\n                commands.push(new ReplaceCommandThatSelectsText(insertSelection, model.getValueInRange(selection)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\n// move lines\nclass AbstractMoveLinesAction extends EditorAction {\n    constructor(down, opts) {\n        super(opts);\n        this.down = down;\n    }\n    run(_accessor, editor) {\n        let commands = [];\n        let selections = editor.getSelections() || [];\n        const autoIndent = editor.getOption(9 /* autoIndent */);\n        for (const selection of selections) {\n            commands.push(new MoveLinesCommand(selection, this.down, autoIndent));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass MoveLinesUpAction extends AbstractMoveLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.moveLinesUpAction',\n            label: nls.localize('lines.moveUp', \"Move Line Up\"),\n            alias: 'Move Line Up',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* Alt */ | 16 /* UpArrow */,\n                linux: { primary: 512 /* Alt */ | 16 /* UpArrow */ },\n                weight: 100 /* EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miMoveLinesUp', comment: ['&& denotes a mnemonic'] }, \"Mo&&ve Line Up\"),\n                order: 3\n            }\n        });\n    }\n}\nclass MoveLinesDownAction extends AbstractMoveLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.moveLinesDownAction',\n            label: nls.localize('lines.moveDown', \"Move Line Down\"),\n            alias: 'Move Line Down',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* Alt */ | 18 /* DownArrow */,\n                linux: { primary: 512 /* Alt */ | 18 /* DownArrow */ },\n                weight: 100 /* EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miMoveLinesDown', comment: ['&& denotes a mnemonic'] }, \"Move &&Line Down\"),\n                order: 4\n            }\n        });\n    }\n}\nexport class AbstractSortLinesAction extends EditorAction {\n    constructor(descending, opts) {\n        super(opts);\n        this.descending = descending;\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections() || [];\n        for (const selection of selections) {\n            if (!SortLinesCommand.canRun(editor.getModel(), selection, this.descending)) {\n                return;\n            }\n        }\n        let commands = [];\n        for (let i = 0, len = selections.length; i < len; i++) {\n            commands[i] = new SortLinesCommand(selections[i], this.descending);\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nexport class SortLinesAscendingAction extends AbstractSortLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.sortLinesAscending',\n            label: nls.localize('lines.sortAscending', \"Sort Lines Ascending\"),\n            alias: 'Sort Lines Ascending',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nexport class SortLinesDescendingAction extends AbstractSortLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.sortLinesDescending',\n            label: nls.localize('lines.sortDescending', \"Sort Lines Descending\"),\n            alias: 'Sort Lines Descending',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nexport class DeleteDuplicateLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.removeDuplicateLines',\n            label: nls.localize('lines.deleteDuplicates', \"Delete Duplicate Lines\"),\n            alias: 'Delete Duplicate Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        let model = editor.getModel();\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n            return;\n        }\n        let edits = [];\n        let endCursorState = [];\n        let linesDeleted = 0;\n        for (let selection of editor.getSelections()) {\n            let uniqueLines = new Set();\n            let lines = [];\n            for (let i = selection.startLineNumber; i <= selection.endLineNumber; i++) {\n                let line = model.getLineContent(i);\n                if (uniqueLines.has(line)) {\n                    continue;\n                }\n                lines.push(line);\n                uniqueLines.add(line);\n            }\n            let selectionToReplace = new Selection(selection.startLineNumber, 1, selection.endLineNumber, model.getLineMaxColumn(selection.endLineNumber));\n            let adjustedSelectionStart = selection.startLineNumber - linesDeleted;\n            let finalSelection = new Selection(adjustedSelectionStart, 1, adjustedSelectionStart + lines.length - 1, lines[lines.length - 1].length);\n            edits.push(EditOperation.replace(selectionToReplace, lines.join('\\n')));\n            endCursorState.push(finalSelection);\n            linesDeleted += (selection.endLineNumber - selection.startLineNumber + 1) - lines.length;\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class TrimTrailingWhitespaceAction extends EditorAction {\n    constructor() {\n        super({\n            id: TrimTrailingWhitespaceAction.ID,\n            label: nls.localize('lines.trimTrailingWhitespace', \"Trim Trailing Whitespace\"),\n            alias: 'Trim Trailing Whitespace',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KeyK */, 2048 /* CtrlCmd */ | 54 /* KeyX */),\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor, args) {\n        let cursors = [];\n        if (args.reason === 'auto-save') {\n            // See https://github.com/editorconfig/editorconfig-vscode/issues/47\n            // It is very convenient for the editor config extension to invoke this action.\n            // So, if we get a reason:'auto-save' passed in, let's preserve cursor positions.\n            cursors = (editor.getSelections() || []).map(s => new Position(s.positionLineNumber, s.positionColumn));\n        }\n        let selection = editor.getSelection();\n        if (selection === null) {\n            return;\n        }\n        let command = new TrimTrailingWhitespaceCommand(selection, cursors);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n    }\n}\nTrimTrailingWhitespaceAction.ID = 'editor.action.trimTrailingWhitespace';\nexport class DeleteLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.deleteLines',\n            label: nls.localize('lines.delete', \"Delete Line\"),\n            alias: 'Delete Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 41 /* KeyK */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        let ops = this._getLinesToRemove(editor);\n        let model = editor.getModel();\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n            // Model is empty\n            return;\n        }\n        let linesDeleted = 0;\n        let edits = [];\n        let cursorState = [];\n        for (let i = 0, len = ops.length; i < len; i++) {\n            const op = ops[i];\n            let startLineNumber = op.startLineNumber;\n            let endLineNumber = op.endLineNumber;\n            let startColumn = 1;\n            let endColumn = model.getLineMaxColumn(endLineNumber);\n            if (endLineNumber < model.getLineCount()) {\n                endLineNumber += 1;\n                endColumn = 1;\n            }\n            else if (startLineNumber > 1) {\n                startLineNumber -= 1;\n                startColumn = model.getLineMaxColumn(startLineNumber);\n            }\n            edits.push(EditOperation.replace(new Selection(startLineNumber, startColumn, endLineNumber, endColumn), ''));\n            cursorState.push(new Selection(startLineNumber - linesDeleted, op.positionColumn, startLineNumber - linesDeleted, op.positionColumn));\n            linesDeleted += (op.endLineNumber - op.startLineNumber + 1);\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, cursorState);\n        editor.pushUndoStop();\n    }\n    _getLinesToRemove(editor) {\n        // Construct delete operations\n        let operations = editor.getSelections().map((s) => {\n            let endLineNumber = s.endLineNumber;\n            if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n                endLineNumber -= 1;\n            }\n            return {\n                startLineNumber: s.startLineNumber,\n                selectionStartColumn: s.selectionStartColumn,\n                endLineNumber: endLineNumber,\n                positionColumn: s.positionColumn\n            };\n        });\n        // Sort delete operations\n        operations.sort((a, b) => {\n            if (a.startLineNumber === b.startLineNumber) {\n                return a.endLineNumber - b.endLineNumber;\n            }\n            return a.startLineNumber - b.startLineNumber;\n        });\n        // Merge delete operations which are adjacent or overlapping\n        let mergedOperations = [];\n        let previousOperation = operations[0];\n        for (let i = 1; i < operations.length; i++) {\n            if (previousOperation.endLineNumber + 1 >= operations[i].startLineNumber) {\n                // Merge current operations into the previous one\n                previousOperation.endLineNumber = operations[i].endLineNumber;\n            }\n            else {\n                // Push previous operation\n                mergedOperations.push(previousOperation);\n                previousOperation = operations[i];\n            }\n        }\n        // Push the last operation\n        mergedOperations.push(previousOperation);\n        return mergedOperations;\n    }\n}\nexport class IndentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.indentLines',\n            label: nls.localize('lines.indent', \"Indent Line\"),\n            alias: 'Indent Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* CtrlCmd */ | 89 /* BracketRight */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.indent(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n        editor.pushUndoStop();\n    }\n}\nclass OutdentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.outdentLines',\n            label: nls.localize('lines.outdent', \"Outdent Line\"),\n            alias: 'Outdent Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* CtrlCmd */ | 87 /* BracketLeft */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        CoreEditingCommands.Outdent.runEditorCommand(_accessor, editor, null);\n    }\n}\nexport class InsertLineBeforeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertLineBefore',\n            label: nls.localize('lines.insertBefore', \"Insert Line Above\"),\n            alias: 'Insert Line Above',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 3 /* Enter */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.lineInsertBefore(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n    }\n}\nexport class InsertLineAfterAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertLineAfter',\n            label: nls.localize('lines.insertAfter', \"Insert Line Below\"),\n            alias: 'Insert Line Below',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* CtrlCmd */ | 3 /* Enter */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.lineInsertAfter(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n    }\n}\nexport class AbstractDeleteAllToBoundaryAction extends EditorAction {\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const primaryCursor = editor.getSelection();\n        let rangesToDelete = this._getRangesToDelete(editor);\n        // merge overlapping selections\n        let effectiveRanges = [];\n        for (let i = 0, count = rangesToDelete.length - 1; i < count; i++) {\n            let range = rangesToDelete[i];\n            let nextRange = rangesToDelete[i + 1];\n            if (Range.intersectRanges(range, nextRange) === null) {\n                effectiveRanges.push(range);\n            }\n            else {\n                rangesToDelete[i + 1] = Range.plusRange(range, nextRange);\n            }\n        }\n        effectiveRanges.push(rangesToDelete[rangesToDelete.length - 1]);\n        let endCursorState = this._getEndCursorState(primaryCursor, effectiveRanges);\n        let edits = effectiveRanges.map(range => {\n            return EditOperation.replace(range, '');\n        });\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class DeleteAllLeftAction extends AbstractDeleteAllToBoundaryAction {\n    constructor() {\n        super({\n            id: 'deleteAllLeft',\n            label: nls.localize('lines.deleteAllLeft', \"Delete All Left\"),\n            alias: 'Delete All Left',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 2048 /* CtrlCmd */ | 1 /* Backspace */ },\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    _getEndCursorState(primaryCursor, rangesToDelete) {\n        let endPrimaryCursor = null;\n        let endCursorState = [];\n        let deletedLines = 0;\n        rangesToDelete.forEach(range => {\n            let endCursor;\n            if (range.endColumn === 1 && deletedLines > 0) {\n                let newStartLine = range.startLineNumber - deletedLines;\n                endCursor = new Selection(newStartLine, range.startColumn, newStartLine, range.startColumn);\n            }\n            else {\n                endCursor = new Selection(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n            }\n            deletedLines += range.endLineNumber - range.startLineNumber;\n            if (range.intersectRanges(primaryCursor)) {\n                endPrimaryCursor = endCursor;\n            }\n            else {\n                endCursorState.push(endCursor);\n            }\n        });\n        if (endPrimaryCursor) {\n            endCursorState.unshift(endPrimaryCursor);\n        }\n        return endCursorState;\n    }\n    _getRangesToDelete(editor) {\n        let selections = editor.getSelections();\n        if (selections === null) {\n            return [];\n        }\n        let rangesToDelete = selections;\n        let model = editor.getModel();\n        if (model === null) {\n            return [];\n        }\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\n        rangesToDelete = rangesToDelete.map(selection => {\n            if (selection.isEmpty()) {\n                if (selection.startColumn === 1) {\n                    let deleteFromLine = Math.max(1, selection.startLineNumber - 1);\n                    let deleteFromColumn = selection.startLineNumber === 1 ? 1 : model.getLineContent(deleteFromLine).length + 1;\n                    return new Range(deleteFromLine, deleteFromColumn, selection.startLineNumber, 1);\n                }\n                else {\n                    return new Range(selection.startLineNumber, 1, selection.startLineNumber, selection.startColumn);\n                }\n            }\n            else {\n                return new Range(selection.startLineNumber, 1, selection.endLineNumber, selection.endColumn);\n            }\n        });\n        return rangesToDelete;\n    }\n}\nexport class DeleteAllRightAction extends AbstractDeleteAllToBoundaryAction {\n    constructor() {\n        super({\n            id: 'deleteAllRight',\n            label: nls.localize('lines.deleteAllRight', \"Delete All Right\"),\n            alias: 'Delete All Right',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* WinCtrl */ | 41 /* KeyK */, secondary: [2048 /* CtrlCmd */ | 20 /* Delete */] },\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    _getEndCursorState(primaryCursor, rangesToDelete) {\n        let endPrimaryCursor = null;\n        let endCursorState = [];\n        for (let i = 0, len = rangesToDelete.length, offset = 0; i < len; i++) {\n            let range = rangesToDelete[i];\n            let endCursor = new Selection(range.startLineNumber - offset, range.startColumn, range.startLineNumber - offset, range.startColumn);\n            if (range.intersectRanges(primaryCursor)) {\n                endPrimaryCursor = endCursor;\n            }\n            else {\n                endCursorState.push(endCursor);\n            }\n        }\n        if (endPrimaryCursor) {\n            endCursorState.unshift(endPrimaryCursor);\n        }\n        return endCursorState;\n    }\n    _getRangesToDelete(editor) {\n        let model = editor.getModel();\n        if (model === null) {\n            return [];\n        }\n        let selections = editor.getSelections();\n        if (selections === null) {\n            return [];\n        }\n        let rangesToDelete = selections.map((sel) => {\n            if (sel.isEmpty()) {\n                const maxColumn = model.getLineMaxColumn(sel.startLineNumber);\n                if (sel.startColumn === maxColumn) {\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber + 1, 1);\n                }\n                else {\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber, maxColumn);\n                }\n            }\n            return sel;\n        });\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\n        return rangesToDelete;\n    }\n}\nexport class JoinLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.joinLines',\n            label: nls.localize('lines.joinLines', \"Join Lines\"),\n            alias: 'Join Lines',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 0,\n                mac: { primary: 256 /* WinCtrl */ | 40 /* KeyJ */ },\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        let selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        let primaryCursor = editor.getSelection();\n        if (primaryCursor === null) {\n            return;\n        }\n        selections.sort(Range.compareRangesUsingStarts);\n        let reducedSelections = [];\n        let lastSelection = selections.reduce((previousValue, currentValue) => {\n            if (previousValue.isEmpty()) {\n                if (previousValue.endLineNumber === currentValue.startLineNumber) {\n                    if (primaryCursor.equalsSelection(previousValue)) {\n                        primaryCursor = currentValue;\n                    }\n                    return currentValue;\n                }\n                if (currentValue.startLineNumber > previousValue.endLineNumber + 1) {\n                    reducedSelections.push(previousValue);\n                    return currentValue;\n                }\n                else {\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n                }\n            }\n            else {\n                if (currentValue.startLineNumber > previousValue.endLineNumber) {\n                    reducedSelections.push(previousValue);\n                    return currentValue;\n                }\n                else {\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n                }\n            }\n        });\n        reducedSelections.push(lastSelection);\n        let model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        let edits = [];\n        let endCursorState = [];\n        let endPrimaryCursor = primaryCursor;\n        let lineOffset = 0;\n        for (let i = 0, len = reducedSelections.length; i < len; i++) {\n            let selection = reducedSelections[i];\n            let startLineNumber = selection.startLineNumber;\n            let startColumn = 1;\n            let columnDeltaOffset = 0;\n            let endLineNumber, endColumn;\n            let selectionEndPositionOffset = model.getLineContent(selection.endLineNumber).length - selection.endColumn;\n            if (selection.isEmpty() || selection.startLineNumber === selection.endLineNumber) {\n                let position = selection.getStartPosition();\n                if (position.lineNumber < model.getLineCount()) {\n                    endLineNumber = startLineNumber + 1;\n                    endColumn = model.getLineMaxColumn(endLineNumber);\n                }\n                else {\n                    endLineNumber = position.lineNumber;\n                    endColumn = model.getLineMaxColumn(position.lineNumber);\n                }\n            }\n            else {\n                endLineNumber = selection.endLineNumber;\n                endColumn = model.getLineMaxColumn(endLineNumber);\n            }\n            let trimmedLinesContent = model.getLineContent(startLineNumber);\n            for (let i = startLineNumber + 1; i <= endLineNumber; i++) {\n                let lineText = model.getLineContent(i);\n                let firstNonWhitespaceIdx = model.getLineFirstNonWhitespaceColumn(i);\n                if (firstNonWhitespaceIdx >= 1) {\n                    let insertSpace = true;\n                    if (trimmedLinesContent === '') {\n                        insertSpace = false;\n                    }\n                    if (insertSpace && (trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === ' ' ||\n                        trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === '\\t')) {\n                        insertSpace = false;\n                        trimmedLinesContent = trimmedLinesContent.replace(/[\\s\\uFEFF\\xA0]+$/g, ' ');\n                    }\n                    let lineTextWithoutIndent = lineText.substr(firstNonWhitespaceIdx - 1);\n                    trimmedLinesContent += (insertSpace ? ' ' : '') + lineTextWithoutIndent;\n                    if (insertSpace) {\n                        columnDeltaOffset = lineTextWithoutIndent.length + 1;\n                    }\n                    else {\n                        columnDeltaOffset = lineTextWithoutIndent.length;\n                    }\n                }\n                else {\n                    columnDeltaOffset = 0;\n                }\n            }\n            let deleteSelection = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n            if (!deleteSelection.isEmpty()) {\n                let resultSelection;\n                if (selection.isEmpty()) {\n                    edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                    resultSelection = new Selection(deleteSelection.startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1, startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1);\n                }\n                else {\n                    if (selection.startLineNumber === selection.endLineNumber) {\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.endLineNumber - lineOffset, selection.endColumn);\n                    }\n                    else {\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.startLineNumber - lineOffset, trimmedLinesContent.length - selectionEndPositionOffset);\n                    }\n                }\n                if (Range.intersectRanges(deleteSelection, primaryCursor) !== null) {\n                    endPrimaryCursor = resultSelection;\n                }\n                else {\n                    endCursorState.push(resultSelection);\n                }\n            }\n            lineOffset += deleteSelection.endLineNumber - deleteSelection.startLineNumber;\n        }\n        endCursorState.unshift(endPrimaryCursor);\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class TransposeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.transpose',\n            label: nls.localize('editor.transpose', \"Transpose characters around the cursor\"),\n            alias: 'Transpose characters around the cursor',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(_accessor, editor) {\n        let selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        let model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        let commands = [];\n        for (let i = 0, len = selections.length; i < len; i++) {\n            let selection = selections[i];\n            if (!selection.isEmpty()) {\n                continue;\n            }\n            let cursor = selection.getStartPosition();\n            let maxColumn = model.getLineMaxColumn(cursor.lineNumber);\n            if (cursor.column >= maxColumn) {\n                if (cursor.lineNumber === model.getLineCount()) {\n                    continue;\n                }\n                // The cursor is at the end of current line and current line is not empty\n                // then we transpose the character before the cursor and the line break if there is any following line.\n                let deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1);\n                let chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n                commands.push(new ReplaceCommand(new Selection(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1), chars));\n            }\n            else {\n                let deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber, cursor.column + 1);\n                let chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n                commands.push(new ReplaceCommandThatPreservesSelection(deleteSelection, chars, new Selection(cursor.lineNumber, cursor.column + 1, cursor.lineNumber, cursor.column + 1)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nexport class AbstractCaseAction extends EditorAction {\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const wordSeparators = editor.getOption(117 /* wordSeparators */);\n        const textEdits = [];\n        for (const selection of selections) {\n            if (selection.isEmpty()) {\n                const cursor = selection.getStartPosition();\n                const word = editor.getConfiguredWordAtPosition(cursor);\n                if (!word) {\n                    continue;\n                }\n                const wordRange = new Range(cursor.lineNumber, word.startColumn, cursor.lineNumber, word.endColumn);\n                const text = model.getValueInRange(wordRange);\n                textEdits.push(EditOperation.replace(wordRange, this._modifyText(text, wordSeparators)));\n            }\n            else {\n                const text = model.getValueInRange(selection);\n                textEdits.push(EditOperation.replace(selection, this._modifyText(text, wordSeparators)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, textEdits);\n        editor.pushUndoStop();\n    }\n}\nexport class UpperCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToUppercase',\n            label: nls.localize('editor.transformToUppercase', \"Transform to Uppercase\"),\n            alias: 'Transform to Uppercase',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        return text.toLocaleUpperCase();\n    }\n}\nexport class LowerCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToLowercase',\n            label: nls.localize('editor.transformToLowercase', \"Transform to Lowercase\"),\n            alias: 'Transform to Lowercase',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        return text.toLocaleLowerCase();\n    }\n}\nclass BackwardsCompatibleRegExp {\n    constructor(_pattern, _flags) {\n        this._pattern = _pattern;\n        this._flags = _flags;\n        this._actual = null;\n        this._evaluated = false;\n    }\n    get() {\n        if (!this._evaluated) {\n            this._evaluated = true;\n            try {\n                this._actual = new RegExp(this._pattern, this._flags);\n            }\n            catch (err) {\n                // this browser does not support this regular expression\n            }\n        }\n        return this._actual;\n    }\n    isSupported() {\n        return (this.get() !== null);\n    }\n}\nexport class TitleCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToTitlecase',\n            label: nls.localize('editor.transformToTitlecase', \"Transform to Title Case\"),\n            alias: 'Transform to Title Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const titleBoundary = TitleCaseAction.titleBoundary.get();\n        if (!titleBoundary) {\n            // cannot support this\n            return text;\n        }\n        return text\n            .toLocaleLowerCase()\n            .replace(titleBoundary, (b) => b.toLocaleUpperCase());\n    }\n}\nTitleCaseAction.titleBoundary = new BackwardsCompatibleRegExp('(^|[^\\\\p{L}\\\\p{N}\\']|((^|\\\\P{L})\\'))\\\\p{L}', 'gmu');\nexport class SnakeCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToSnakecase',\n            label: nls.localize('editor.transformToSnakecase', \"Transform to Snake Case\"),\n            alias: 'Transform to Snake Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const caseBoundary = SnakeCaseAction.caseBoundary.get();\n        const singleLetters = SnakeCaseAction.singleLetters.get();\n        if (!caseBoundary || !singleLetters) {\n            // cannot support this\n            return text;\n        }\n        return (text\n            .replace(caseBoundary, '$1_$2')\n            .replace(singleLetters, '$1_$2$3')\n            .toLocaleLowerCase());\n    }\n}\nSnakeCaseAction.caseBoundary = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\nSnakeCaseAction.singleLetters = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu})(\\\\p{Ll})', 'gmu');\nregisterEditorAction(CopyLinesUpAction);\nregisterEditorAction(CopyLinesDownAction);\nregisterEditorAction(DuplicateSelectionAction);\nregisterEditorAction(MoveLinesUpAction);\nregisterEditorAction(MoveLinesDownAction);\nregisterEditorAction(SortLinesAscendingAction);\nregisterEditorAction(SortLinesDescendingAction);\nregisterEditorAction(DeleteDuplicateLinesAction);\nregisterEditorAction(TrimTrailingWhitespaceAction);\nregisterEditorAction(DeleteLinesAction);\nregisterEditorAction(IndentLinesAction);\nregisterEditorAction(OutdentLinesAction);\nregisterEditorAction(InsertLineBeforeAction);\nregisterEditorAction(InsertLineAfterAction);\nregisterEditorAction(DeleteAllLeftAction);\nregisterEditorAction(DeleteAllRightAction);\nregisterEditorAction(JoinLinesAction);\nregisterEditorAction(TransposeAction);\nregisterEditorAction(UpperCaseAction);\nregisterEditorAction(LowerCaseAction);\nif (SnakeCaseAction.caseBoundary.isSupported() && SnakeCaseAction.singleLetters.isSupported()) {\n    registerEditorAction(SnakeCaseAction);\n}\nif (TitleCaseAction.titleBoundary.isSupported()) {\n    registerEditorAction(TitleCaseAction);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, Delayer, first } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { isCancellationError, onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution, registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { LinkedEditingRangeProviderRegistry } from '../../../common/languages.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nexport const CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE = new RawContextKey('LinkedEditingInputVisible', false);\nconst DECORATION_CLASS_NAME = 'linked-editing-decoration';\nlet LinkedEditingContribution = class LinkedEditingContribution extends Disposable {\n    constructor(editor, contextKeyService, languageConfigurationService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        this._debounceDuration = 200;\n        this._localToDispose = this._register(new DisposableStore());\n        this._editor = editor;\n        this._enabled = false;\n        this._visibleContextKey = CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\n        this._currentDecorations = [];\n        this._languageWordPattern = null;\n        this._currentWordPattern = null;\n        this._ignoreChangeEvent = false;\n        this._localToDispose = this._register(new DisposableStore());\n        this._rangeUpdateTriggerPromise = null;\n        this._rangeSyncTriggerPromise = null;\n        this._currentRequest = null;\n        this._currentRequestPosition = null;\n        this._currentRequestModelVersion = null;\n        this._register(this._editor.onDidChangeModel(() => this.reinitialize(true)));\n        this._register(this._editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(62 /* linkedEditing */) || e.hasChanged(82 /* renameOnType */)) {\n                this.reinitialize(false);\n            }\n        }));\n        this._register(LinkedEditingRangeProviderRegistry.onDidChange(() => this.reinitialize(false)));\n        this._register(this._editor.onDidChangeModelLanguage(() => this.reinitialize(true)));\n        this.reinitialize(true);\n    }\n    static get(editor) {\n        return editor.getContribution(LinkedEditingContribution.ID);\n    }\n    reinitialize(forceRefresh) {\n        const model = this._editor.getModel();\n        const isEnabled = model !== null && (this._editor.getOption(62 /* linkedEditing */) || this._editor.getOption(82 /* renameOnType */)) && LinkedEditingRangeProviderRegistry.has(model);\n        if (isEnabled === this._enabled && !forceRefresh) {\n            return;\n        }\n        this._enabled = isEnabled;\n        this.clearRanges();\n        this._localToDispose.clear();\n        if (!isEnabled || model === null) {\n            return;\n        }\n        this._localToDispose.add(Event.runAndSubscribe(model.onDidChangeLanguageConfiguration, () => {\n            this._languageWordPattern = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n        }));\n        const rangeUpdateScheduler = new Delayer(this._debounceDuration);\n        const triggerRangeUpdate = () => {\n            this._rangeUpdateTriggerPromise = rangeUpdateScheduler.trigger(() => this.updateRanges(), this._debounceDuration);\n        };\n        const rangeSyncScheduler = new Delayer(0);\n        const triggerRangeSync = (decorations) => {\n            this._rangeSyncTriggerPromise = rangeSyncScheduler.trigger(() => this._syncRanges(decorations));\n        };\n        this._localToDispose.add(this._editor.onDidChangeCursorPosition(() => {\n            triggerRangeUpdate();\n        }));\n        this._localToDispose.add(this._editor.onDidChangeModelContent((e) => {\n            if (!this._ignoreChangeEvent) {\n                if (this._currentDecorations.length > 0) {\n                    const referenceRange = model.getDecorationRange(this._currentDecorations[0]);\n                    if (referenceRange && e.changes.every(c => referenceRange.intersectRanges(c.range))) {\n                        triggerRangeSync(this._currentDecorations);\n                        return;\n                    }\n                }\n            }\n            triggerRangeUpdate();\n        }));\n        this._localToDispose.add({\n            dispose: () => {\n                rangeUpdateScheduler.cancel();\n                rangeSyncScheduler.cancel();\n            }\n        });\n        this.updateRanges();\n    }\n    _syncRanges(decorations) {\n        // dalayed invocation, make sure we're still on\n        if (!this._editor.hasModel() || decorations !== this._currentDecorations || decorations.length === 0) {\n            // nothing to do\n            return;\n        }\n        const model = this._editor.getModel();\n        const referenceRange = model.getDecorationRange(decorations[0]);\n        if (!referenceRange || referenceRange.startLineNumber !== referenceRange.endLineNumber) {\n            return this.clearRanges();\n        }\n        const referenceValue = model.getValueInRange(referenceRange);\n        if (this._currentWordPattern) {\n            const match = referenceValue.match(this._currentWordPattern);\n            const matchLength = match ? match[0].length : 0;\n            if (matchLength !== referenceValue.length) {\n                return this.clearRanges();\n            }\n        }\n        let edits = [];\n        for (let i = 1, len = decorations.length; i < len; i++) {\n            const mirrorRange = model.getDecorationRange(decorations[i]);\n            if (!mirrorRange) {\n                continue;\n            }\n            if (mirrorRange.startLineNumber !== mirrorRange.endLineNumber) {\n                edits.push({\n                    range: mirrorRange,\n                    text: referenceValue\n                });\n            }\n            else {\n                let oldValue = model.getValueInRange(mirrorRange);\n                let newValue = referenceValue;\n                let rangeStartColumn = mirrorRange.startColumn;\n                let rangeEndColumn = mirrorRange.endColumn;\n                const commonPrefixLength = strings.commonPrefixLength(oldValue, newValue);\n                rangeStartColumn += commonPrefixLength;\n                oldValue = oldValue.substr(commonPrefixLength);\n                newValue = newValue.substr(commonPrefixLength);\n                const commonSuffixLength = strings.commonSuffixLength(oldValue, newValue);\n                rangeEndColumn -= commonSuffixLength;\n                oldValue = oldValue.substr(0, oldValue.length - commonSuffixLength);\n                newValue = newValue.substr(0, newValue.length - commonSuffixLength);\n                if (rangeStartColumn !== rangeEndColumn || newValue.length !== 0) {\n                    edits.push({\n                        range: new Range(mirrorRange.startLineNumber, rangeStartColumn, mirrorRange.endLineNumber, rangeEndColumn),\n                        text: newValue\n                    });\n                }\n            }\n        }\n        if (edits.length === 0) {\n            return;\n        }\n        try {\n            this._editor.popUndoStop();\n            this._ignoreChangeEvent = true;\n            const prevEditOperationType = this._editor._getViewModel().getPrevEditOperationType();\n            this._editor.executeEdits('linkedEditing', edits);\n            this._editor._getViewModel().setPrevEditOperationType(prevEditOperationType);\n        }\n        finally {\n            this._ignoreChangeEvent = false;\n        }\n    }\n    dispose() {\n        this.clearRanges();\n        super.dispose();\n    }\n    clearRanges() {\n        this._visibleContextKey.set(false);\n        this._currentDecorations = this._editor.deltaDecorations(this._currentDecorations, []);\n        if (this._currentRequest) {\n            this._currentRequest.cancel();\n            this._currentRequest = null;\n            this._currentRequestPosition = null;\n        }\n    }\n    updateRanges(force = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._editor.hasModel()) {\n                this.clearRanges();\n                return;\n            }\n            const position = this._editor.getPosition();\n            if (!this._enabled && !force || this._editor.getSelections().length > 1) {\n                // disabled or multicursor\n                this.clearRanges();\n                return;\n            }\n            const model = this._editor.getModel();\n            const modelVersionId = model.getVersionId();\n            if (this._currentRequestPosition && this._currentRequestModelVersion === modelVersionId) {\n                if (position.equals(this._currentRequestPosition)) {\n                    return; // same position\n                }\n                if (this._currentDecorations && this._currentDecorations.length > 0) {\n                    const range = model.getDecorationRange(this._currentDecorations[0]);\n                    if (range && range.containsPosition(position)) {\n                        return; // just moving inside the existing primary range\n                    }\n                }\n            }\n            this._currentRequestPosition = position;\n            this._currentRequestModelVersion = modelVersionId;\n            const request = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const response = yield getLinkedEditingRanges(model, position, token);\n                    if (request !== this._currentRequest) {\n                        return;\n                    }\n                    this._currentRequest = null;\n                    if (modelVersionId !== model.getVersionId()) {\n                        return;\n                    }\n                    let ranges = [];\n                    if (response === null || response === void 0 ? void 0 : response.ranges) {\n                        ranges = response.ranges;\n                    }\n                    this._currentWordPattern = (response === null || response === void 0 ? void 0 : response.wordPattern) || this._languageWordPattern;\n                    let foundReferenceRange = false;\n                    for (let i = 0, len = ranges.length; i < len; i++) {\n                        if (Range.containsPosition(ranges[i], position)) {\n                            foundReferenceRange = true;\n                            if (i !== 0) {\n                                const referenceRange = ranges[i];\n                                ranges.splice(i, 1);\n                                ranges.unshift(referenceRange);\n                            }\n                            break;\n                        }\n                    }\n                    if (!foundReferenceRange) {\n                        // Cannot do linked editing if the ranges are not where the cursor is...\n                        this.clearRanges();\n                        return;\n                    }\n                    const decorations = ranges.map(range => ({ range: range, options: LinkedEditingContribution.DECORATION }));\n                    this._visibleContextKey.set(true);\n                    this._currentDecorations = this._editor.deltaDecorations(this._currentDecorations, decorations);\n                }\n                catch (err) {\n                    if (!isCancellationError(err)) {\n                        onUnexpectedError(err);\n                    }\n                    if (this._currentRequest === request || !this._currentRequest) {\n                        // stop if we are still the latest request\n                        this.clearRanges();\n                    }\n                }\n            }));\n            this._currentRequest = request;\n            return request;\n        });\n    }\n};\nLinkedEditingContribution.ID = 'editor.contrib.linkedEditing';\nLinkedEditingContribution.DECORATION = ModelDecorationOptions.register({\n    description: 'linked-editing',\n    stickiness: 0 /* AlwaysGrowsWhenTypingAtEdges */,\n    className: DECORATION_CLASS_NAME\n});\nLinkedEditingContribution = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, ILanguageConfigurationService)\n], LinkedEditingContribution);\nexport { LinkedEditingContribution };\nexport class LinkedEditingAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.linkedEditing',\n            label: nls.localize('linkedEditing.label', \"Start Linked Editing\"),\n            alias: 'Start Linked Editing',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 60 /* F2 */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    runCommand(accessor, args) {\n        const editorService = accessor.get(ICodeEditorService);\n        const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\n        if (URI.isUri(uri) && Position.isIPosition(pos)) {\n            return editorService.openCodeEditor({ resource: uri }, editorService.getActiveCodeEditor()).then(editor => {\n                if (!editor) {\n                    return;\n                }\n                editor.setPosition(pos);\n                editor.invokeWithinContext(accessor => {\n                    this.reportTelemetry(accessor, editor);\n                    return this.run(accessor, editor);\n                });\n            }, onUnexpectedError);\n        }\n        return super.runCommand(accessor, args);\n    }\n    run(_accessor, editor) {\n        const controller = LinkedEditingContribution.get(editor);\n        if (controller) {\n            return Promise.resolve(controller.updateRanges(true));\n        }\n        return Promise.resolve();\n    }\n}\nconst LinkedEditingCommand = EditorCommand.bindToContribution(LinkedEditingContribution.get);\nregisterEditorCommand(new LinkedEditingCommand({\n    id: 'cancelLinkedEditingInput',\n    precondition: CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE,\n    handler: x => x.clearRanges(),\n    kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        weight: 100 /* EditorContrib */ + 99,\n        primary: 9 /* Escape */,\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\n    }\n}));\nfunction getLinkedEditingRanges(model, position, token) {\n    const orderedByScore = LinkedEditingRangeProviderRegistry.ordered(model);\n    // in order of score ask the linked editing range provider\n    // until someone response with a good result\n    // (good = not null)\n    return first(orderedByScore.map(provider => () => __awaiter(this, void 0, void 0, function* () {\n        try {\n            return yield provider.provideLinkedEditingRanges(model, position, token);\n        }\n        catch (e) {\n            onUnexpectedExternalError(e);\n            return undefined;\n        }\n    })), result => !!result && arrays.isNonEmptyArray(result === null || result === void 0 ? void 0 : result.ranges));\n}\nexport const editorLinkedEditingBackground = registerColor('editor.linkedEditingBackground', { dark: Color.fromHex('#f00').transparent(0.3), light: Color.fromHex('#f00').transparent(0.3), hc: Color.fromHex('#f00').transparent(0.3) }, nls.localize('editorLinkedEditingBackground', 'Background color when the editor auto renames on type.'));\nregisterThemingParticipant((theme, collector) => {\n    const editorLinkedEditingBackgroundColor = theme.getColor(editorLinkedEditingBackground);\n    if (editorLinkedEditingBackgroundColor) {\n        collector.addRule(`.monaco-editor .${DECORATION_CLASS_NAME} { background: ${editorLinkedEditingBackgroundColor}; border-left-color: ${editorLinkedEditingBackgroundColor}; }`);\n    }\n});\nregisterModelAndPositionCommand('_executeLinkedEditingProvider', (model, position) => getLinkedEditingRanges(model, position, CancellationToken.None));\nregisterEditorContribution(LinkedEditingContribution.ID, LinkedEditingContribution);\nregisterEditorAction(LinkedEditingAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore, isDisposable } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Range } from '../../../common/core/range.js';\nimport { LinkProviderRegistry } from '../../../common/languages.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nexport class Link {\n    constructor(link, provider) {\n        this._link = link;\n        this._provider = provider;\n    }\n    toJSON() {\n        return {\n            range: this.range,\n            url: this.url,\n            tooltip: this.tooltip\n        };\n    }\n    get range() {\n        return this._link.range;\n    }\n    get url() {\n        return this._link.url;\n    }\n    get tooltip() {\n        return this._link.tooltip;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._link.url) {\n                return this._link.url;\n            }\n            if (typeof this._provider.resolveLink === 'function') {\n                return Promise.resolve(this._provider.resolveLink(this._link, token)).then(value => {\n                    this._link = value || this._link;\n                    if (this._link.url) {\n                        // recurse\n                        return this.resolve(token);\n                    }\n                    return Promise.reject(new Error('missing'));\n                });\n            }\n            return Promise.reject(new Error('missing'));\n        });\n    }\n}\nexport class LinksList {\n    constructor(tuples) {\n        this._disposables = new DisposableStore();\n        let links = [];\n        for (const [list, provider] of tuples) {\n            // merge all links\n            const newLinks = list.links.map(link => new Link(link, provider));\n            links = LinksList._union(links, newLinks);\n            // register disposables\n            if (isDisposable(list)) {\n                this._disposables.add(list);\n            }\n        }\n        this.links = links;\n    }\n    dispose() {\n        this._disposables.dispose();\n        this.links.length = 0;\n    }\n    static _union(oldLinks, newLinks) {\n        // reunite oldLinks with newLinks and remove duplicates\n        let result = [];\n        let oldIndex;\n        let oldLen;\n        let newIndex;\n        let newLen;\n        for (oldIndex = 0, newIndex = 0, oldLen = oldLinks.length, newLen = newLinks.length; oldIndex < oldLen && newIndex < newLen;) {\n            const oldLink = oldLinks[oldIndex];\n            const newLink = newLinks[newIndex];\n            if (Range.areIntersectingOrTouching(oldLink.range, newLink.range)) {\n                // Remove the oldLink\n                oldIndex++;\n                continue;\n            }\n            const comparisonResult = Range.compareRangesUsingStarts(oldLink.range, newLink.range);\n            if (comparisonResult < 0) {\n                // oldLink is before\n                result.push(oldLink);\n                oldIndex++;\n            }\n            else {\n                // newLink is before\n                result.push(newLink);\n                newIndex++;\n            }\n        }\n        for (; oldIndex < oldLen; oldIndex++) {\n            result.push(oldLinks[oldIndex]);\n        }\n        for (; newIndex < newLen; newIndex++) {\n            result.push(newLinks[newIndex]);\n        }\n        return result;\n    }\n}\nexport function getLinks(model, token) {\n    const lists = [];\n    // ask all providers for links in parallel\n    const promises = LinkProviderRegistry.ordered(model).reverse().map((provider, i) => {\n        return Promise.resolve(provider.provideLinks(model, token)).then(result => {\n            if (result) {\n                lists[i] = [result, provider];\n            }\n        }, onUnexpectedExternalError);\n    });\n    return Promise.all(promises).then(() => {\n        const result = new LinksList(coalesce(lists));\n        if (!token.isCancellationRequested) {\n            return result;\n        }\n        result.dispose();\n        return new LinksList([]);\n    });\n}\nCommandsRegistry.registerCommand('_executeLinkProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    let [uri, resolveCount] = args;\n    assertType(uri instanceof URI);\n    if (typeof resolveCount !== 'number') {\n        resolveCount = 0;\n    }\n    const model = accessor.get(IModelService).getModel(uri);\n    if (!model) {\n        return [];\n    }\n    const list = yield getLinks(model, CancellationToken.None);\n    if (!list) {\n        return [];\n    }\n    // resolve links\n    for (let i = 0; i < Math.min(resolveCount, list.links.length); i++) {\n        yield list.links[i].resolve(CancellationToken.None);\n    }\n    const result = list.links.slice(0);\n    list.dispose();\n    return result;\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as async from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as resources from '../../../../base/common/resources.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport './links.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { LinkProviderRegistry } from '../../../common/languages.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { getLinks } from './getLinks.js';\nimport * as nls from '../../../../nls.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { editorActiveLinkForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nfunction getHoverMessage(link, useMetaKey) {\n    const executeCmd = link.url && /^command:/i.test(link.url.toString());\n    const label = link.tooltip\n        ? link.tooltip\n        : executeCmd\n            ? nls.localize('links.navigate.executeCmd', 'Execute command')\n            : nls.localize('links.navigate.follow', 'Follow link');\n    const kb = useMetaKey\n        ? platform.isMacintosh\n            ? nls.localize('links.navigate.kb.meta.mac', \"cmd + click\")\n            : nls.localize('links.navigate.kb.meta', \"ctrl + click\")\n        : platform.isMacintosh\n            ? nls.localize('links.navigate.kb.alt.mac', \"option + click\")\n            : nls.localize('links.navigate.kb.alt', \"alt + click\");\n    if (link.url) {\n        let nativeLabel = '';\n        if (/^command:/i.test(link.url.toString())) {\n            // Don't show complete command arguments in the native tooltip\n            const match = link.url.toString().match(/^command:([^?#]+)/);\n            if (match) {\n                const commandId = match[1];\n                const nativeLabelText = nls.localize('tooltip.explanation', \"Execute command {0}\", commandId);\n                nativeLabel = ` \"${nativeLabelText}\"`;\n            }\n        }\n        const hoverMessage = new MarkdownString('', true).appendMarkdown(`[${label}](${link.url.toString(true).replace(/ /g, '%20')}${nativeLabel}) (${kb})`);\n        return hoverMessage;\n    }\n    else {\n        return new MarkdownString().appendText(`${label} (${kb})`);\n    }\n}\nconst decoration = {\n    general: ModelDecorationOptions.register({\n        description: 'detected-link',\n        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\n        collapseOnReplaceEdit: true,\n        inlineClassName: 'detected-link'\n    }),\n    active: ModelDecorationOptions.register({\n        description: 'detected-link-active',\n        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\n        collapseOnReplaceEdit: true,\n        inlineClassName: 'detected-link-active'\n    })\n};\nclass LinkOccurrence {\n    constructor(link, decorationId) {\n        this.link = link;\n        this.decorationId = decorationId;\n    }\n    static decoration(link, useMetaKey) {\n        return {\n            range: link.range,\n            options: LinkOccurrence._getOptions(link, useMetaKey, false)\n        };\n    }\n    static _getOptions(link, useMetaKey, isActive) {\n        const options = Object.assign({}, (isActive ? decoration.active : decoration.general));\n        options.hoverMessage = getHoverMessage(link, useMetaKey);\n        return options;\n    }\n    activate(changeAccessor, useMetaKey) {\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, true));\n    }\n    deactivate(changeAccessor, useMetaKey) {\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, false));\n    }\n}\nlet LinkDetector = class LinkDetector {\n    constructor(editor, openerService, notificationService) {\n        this.listenersToRemove = new DisposableStore();\n        this.editor = editor;\n        this.openerService = openerService;\n        this.notificationService = notificationService;\n        let clickLinkGesture = new ClickLinkGesture(editor);\n        this.listenersToRemove.add(clickLinkGesture);\n        this.listenersToRemove.add(clickLinkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent]) => {\n            this._onEditorMouseMove(mouseEvent, keyboardEvent);\n        }));\n        this.listenersToRemove.add(clickLinkGesture.onExecute((e) => {\n            this.onEditorMouseUp(e);\n        }));\n        this.listenersToRemove.add(clickLinkGesture.onCancel((e) => {\n            this.cleanUpActiveLinkDecoration();\n        }));\n        this.enabled = editor.getOption(63 /* links */);\n        this.listenersToRemove.add(editor.onDidChangeConfiguration((e) => {\n            const enabled = editor.getOption(63 /* links */);\n            if (this.enabled === enabled) {\n                // No change in our configuration option\n                return;\n            }\n            this.enabled = enabled;\n            // Remove any links (for the getting disabled case)\n            this.updateDecorations([]);\n            // Stop any computation (for the getting disabled case)\n            this.stop();\n            // Start computing (for the getting enabled case)\n            this.beginCompute();\n        }));\n        this.listenersToRemove.add(editor.onDidChangeModelContent((e) => this.onChange()));\n        this.listenersToRemove.add(editor.onDidChangeModel((e) => this.onModelChanged()));\n        this.listenersToRemove.add(editor.onDidChangeModelLanguage((e) => this.onModelLanguageChanged()));\n        this.listenersToRemove.add(LinkProviderRegistry.onDidChange((e) => this.onModelLanguageChanged()));\n        this.timeout = new async.TimeoutTimer();\n        this.computePromise = null;\n        this.activeLinksList = null;\n        this.currentOccurrences = {};\n        this.activeLinkDecorationId = null;\n        this.beginCompute();\n    }\n    static get(editor) {\n        return editor.getContribution(LinkDetector.ID);\n    }\n    onModelChanged() {\n        this.currentOccurrences = {};\n        this.activeLinkDecorationId = null;\n        this.stop();\n        this.beginCompute();\n    }\n    onModelLanguageChanged() {\n        this.stop();\n        this.beginCompute();\n    }\n    onChange() {\n        this.timeout.setIfNotSet(() => this.beginCompute(), LinkDetector.RECOMPUTE_TIME);\n    }\n    beginCompute() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.editor.hasModel() || !this.enabled) {\n                return;\n            }\n            const model = this.editor.getModel();\n            if (!LinkProviderRegistry.has(model)) {\n                return;\n            }\n            if (this.activeLinksList) {\n                this.activeLinksList.dispose();\n                this.activeLinksList = null;\n            }\n            this.computePromise = async.createCancelablePromise(token => getLinks(model, token));\n            try {\n                this.activeLinksList = yield this.computePromise;\n                this.updateDecorations(this.activeLinksList.links);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                this.computePromise = null;\n            }\n        });\n    }\n    updateDecorations(links) {\n        const useMetaKey = (this.editor.getOption(70 /* multiCursorModifier */) === 'altKey');\n        let oldDecorations = [];\n        let keys = Object.keys(this.currentOccurrences);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            let decorationId = keys[i];\n            let occurance = this.currentOccurrences[decorationId];\n            oldDecorations.push(occurance.decorationId);\n        }\n        let newDecorations = [];\n        if (links) {\n            // Not sure why this is sometimes null\n            for (const link of links) {\n                newDecorations.push(LinkOccurrence.decoration(link, useMetaKey));\n            }\n        }\n        let decorations = this.editor.deltaDecorations(oldDecorations, newDecorations);\n        this.currentOccurrences = {};\n        this.activeLinkDecorationId = null;\n        for (let i = 0, len = decorations.length; i < len; i++) {\n            let occurance = new LinkOccurrence(links[i], decorations[i]);\n            this.currentOccurrences[occurance.decorationId] = occurance;\n        }\n    }\n    _onEditorMouseMove(mouseEvent, withKey) {\n        const useMetaKey = (this.editor.getOption(70 /* multiCursorModifier */) === 'altKey');\n        if (this.isEnabled(mouseEvent, withKey)) {\n            this.cleanUpActiveLinkDecoration(); // always remove previous link decoration as their can only be one\n            const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\n            if (occurrence) {\n                this.editor.changeDecorations((changeAccessor) => {\n                    occurrence.activate(changeAccessor, useMetaKey);\n                    this.activeLinkDecorationId = occurrence.decorationId;\n                });\n            }\n        }\n        else {\n            this.cleanUpActiveLinkDecoration();\n        }\n    }\n    cleanUpActiveLinkDecoration() {\n        const useMetaKey = (this.editor.getOption(70 /* multiCursorModifier */) === 'altKey');\n        if (this.activeLinkDecorationId) {\n            const occurrence = this.currentOccurrences[this.activeLinkDecorationId];\n            if (occurrence) {\n                this.editor.changeDecorations((changeAccessor) => {\n                    occurrence.deactivate(changeAccessor, useMetaKey);\n                });\n            }\n            this.activeLinkDecorationId = null;\n        }\n    }\n    onEditorMouseUp(mouseEvent) {\n        if (!this.isEnabled(mouseEvent)) {\n            return;\n        }\n        const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\n        if (!occurrence) {\n            return;\n        }\n        this.openLinkOccurrence(occurrence, mouseEvent.hasSideBySideModifier, true /* from user gesture */);\n    }\n    openLinkOccurrence(occurrence, openToSide, fromUserGesture = false) {\n        if (!this.openerService) {\n            return;\n        }\n        const { link } = occurrence;\n        link.resolve(CancellationToken.None).then(uri => {\n            // Support for relative file URIs of the shape file://./relativeFile.txt or file:///./relativeFile.txt\n            if (typeof uri === 'string' && this.editor.hasModel()) {\n                const modelUri = this.editor.getModel().uri;\n                if (modelUri.scheme === Schemas.file && uri.startsWith(`${Schemas.file}:`)) {\n                    const parsedUri = URI.parse(uri);\n                    if (parsedUri.scheme === Schemas.file) {\n                        const fsPath = resources.originalFSPath(parsedUri);\n                        let relativePath = null;\n                        if (fsPath.startsWith('/./')) {\n                            relativePath = `.${fsPath.substr(1)}`;\n                        }\n                        else if (fsPath.startsWith('//./')) {\n                            relativePath = `.${fsPath.substr(2)}`;\n                        }\n                        if (relativePath) {\n                            uri = resources.joinPath(modelUri, relativePath);\n                        }\n                    }\n                }\n            }\n            return this.openerService.open(uri, { openToSide, fromUserGesture, allowContributedOpeners: true, allowCommands: true });\n        }, err => {\n            const messageOrError = err instanceof Error ? err.message : err;\n            // different error cases\n            if (messageOrError === 'invalid') {\n                this.notificationService.warn(nls.localize('invalid.url', 'Failed to open this link because it is not well-formed: {0}', link.url.toString()));\n            }\n            else if (messageOrError === 'missing') {\n                this.notificationService.warn(nls.localize('missing.url', 'Failed to open this link because its target is missing.'));\n            }\n            else {\n                onUnexpectedError(err);\n            }\n        });\n    }\n    getLinkOccurrence(position) {\n        if (!this.editor.hasModel() || !position) {\n            return null;\n        }\n        const decorations = this.editor.getModel().getDecorationsInRange({\n            startLineNumber: position.lineNumber,\n            startColumn: position.column,\n            endLineNumber: position.lineNumber,\n            endColumn: position.column\n        }, 0, true);\n        for (const decoration of decorations) {\n            const currentOccurrence = this.currentOccurrences[decoration.id];\n            if (currentOccurrence) {\n                return currentOccurrence;\n            }\n        }\n        return null;\n    }\n    isEnabled(mouseEvent, withKey) {\n        return Boolean((mouseEvent.target.type === 6 /* CONTENT_TEXT */)\n            && (mouseEvent.hasTriggerModifier || (withKey && withKey.keyCodeIsTriggerKey)));\n    }\n    stop() {\n        var _a;\n        this.timeout.cancel();\n        if (this.activeLinksList) {\n            (_a = this.activeLinksList) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.activeLinksList = null;\n        }\n        if (this.computePromise) {\n            this.computePromise.cancel();\n            this.computePromise = null;\n        }\n    }\n    dispose() {\n        this.listenersToRemove.dispose();\n        this.stop();\n        this.timeout.dispose();\n    }\n};\nLinkDetector.ID = 'editor.linkDetector';\nLinkDetector.RECOMPUTE_TIME = 1000; // ms\nLinkDetector = __decorate([\n    __param(1, IOpenerService),\n    __param(2, INotificationService)\n], LinkDetector);\nexport { LinkDetector };\nclass OpenLinkAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.openLink',\n            label: nls.localize('label', \"Open Link\"),\n            alias: 'Open Link',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const linkDetector = LinkDetector.get(editor);\n        if (!linkDetector) {\n            return;\n        }\n        if (!editor.hasModel()) {\n            return;\n        }\n        let selections = editor.getSelections();\n        for (let sel of selections) {\n            let link = linkDetector.getLinkOccurrence(sel.getEndPosition());\n            if (link) {\n                linkDetector.openLinkOccurrence(link, false);\n            }\n        }\n    }\n}\nregisterEditorContribution(LinkDetector.ID, LinkDetector);\nregisterEditorAction(OpenLinkAction);\nregisterThemingParticipant((theme, collector) => {\n    const activeLinkForeground = theme.getColor(editorActiveLinkForeground);\n    if (activeLinkForeground) {\n        collector.addRule(`.monaco-editor .detected-link-active { color: ${activeLinkForeground} !important; }`);\n    }\n});\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","InlayHintAnchor","range","direction","this","InlayHintItem","hint","anchor","provider","_isResolved","delta","_currentResolve","token","resolveInlayHint","isCancellationRequested","_doResolve","finally","undefined","_a","_b","newHint","tooltip","label","onUnexpectedExternalError","InlayHintsFragments","ranges","data","model","_disposables","DisposableStore","Set","items","list","add","hints","position","validatePosition","wordRange","_getRangeAtPosition","getStartPosition","isBefore","Range","getEndPosition","push","sort","a","b","Position","dispose","promises","InlayHintsProviderRegistry","reverse","map","provideInlayHints","length","all","flat","isDisposed","CancellationError","line","lineNumber","word","getWordAtPosition","startColumn","endColumn","tokenizeIfCheap","tokens","getLineTokens","offset","column","idx","findTokenIndexAtOffset","start","getStartOffset","end","getEndOffset","getCount","showGoToContextMenu","accessor","editor","part","resolverService","get","ITextModelService","contextMenuService","IContextMenuService","commandService","ICommandService","instaService","IInstantiationService","notificationService","INotificationService","item","CancellationToken","location","menuActions","filter","MenuRegistry","MenuId","isIMenuItem","command","id","EditorExtensionsRegistry","delegate","SymbolNavigationAction","has","Action","createModelReference","uri","ref","invokeFunction","run","bind","SymbolNavigationAnchor","object","textEditorModel","f","Separator","title","executeCommand","arguments","notify","severity","Severity","source","displayName","message","useShadowDOM","getOption","showContextMenu","domForShadowRoot","getDomNode","getAnchor","box","dom","getDomNodePagePosition","x","left","y","top","height","getActions","onHide","focus","autoSelectFirstItem","goToDefinitionWithLocation","event","invokeWithinContext","openToSide","hasSideBySideModifier","contextKeyService","IContextKeyService","isInPeek","PeekContext","canPeek","action","DefinitionAction","openInPeek","muteMessage","alias","precondition","__decorate","decorators","target","key","desc","d","c","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","InlayHintsCache","_entries","LRUCache","_key","set","toString","getVersionId","IInlayHintsCache","createDecorator","registerSingleton","RenderedInlayHintLabelPart","index","InlayHintsController","_editor","_featureDebounce","_inlayHintsCache","_commandService","_notificationService","_instaService","_sessionDisposables","_decorationsMetadata","Map","_ruleFactory","DynamicCssRules","_debounceInfo","for","languages","min","_update","onDidChangeModel","onDidChangeModelLanguage","onDidChangeConfiguration","hasChanged","_removeAllDecorations","clear","enabled","getModel","cts","cached","_updateHintsDecorators","getFullModelRange","toDisposable","_cacheHintsForFastRestore","watchedProviders","scheduler","RunOnceScheduler","t1","Date","now","CancellationTokenSource","listener","onWillDispose","cancel","myToken","create","_getHintsRanges","inlayHints","delay","update","onDidChangeInlayHints","isScheduled","schedule","onUnexpectedError","onDidScrollChange","scrollTopChanged","onDidChangeModelContent","Math","max","_installLinkGesture","_installContextMenu","removeHighlight","gesture","ClickLinkGesture","onMouseMoveOrRelevantKeyDown","mouseEvent","labelPart","_getInlayHintLabelPart","hasTriggerModifier","_activeInlayHintPart","getLineMaxColumn","lineHints","values","containsRange","Array","from","onCancel","onExecute","onContextMenu","HTMLElement","type","options","detail","injectedText","ModelDecorationInjectedTextOptions","attachedData","obj","getDecorationRange","with","visibleRanges","getVisibleRangesPlusViewportAboveBelow","extendedRange","validateRange","startLineNumber","endLineNumber","newDecorationsData","addInjectedText","content","cursorStops","classNameRef","decoration","description","showIfCollapsed","isEmpty","collapseOnReplaceEdit","stickiness","inlineClassNameAffectsLetterSpacing","inlineClassName","className","addInjectedWhitespace","isLast","marginRule","createClassNameRef","width","fontSize","display","InjectedTextCursorStops","_getLayoutInfo","fontFamily","fontFamilyVar","getContainerDomNode","style","setProperty","paddingLeft","parts","isFirst","cssProperties","EDITOR_FONT_DEFAULTS","verticalAlign","_fillInColors","textDecoration","cursor","color","themeColorFromId","colors","padding","borderRadius","fixSpace","paddingRight","_MAX_DECORATORS","decorationIdsToReplace","getDecorationsInRange","metadata","delete","newDecorationIds","deltaDecorations","props","kind","backgroundColor","editorFontSize","keys","getContribution","ID","str","replace","ILanguageFeatureDebounceService","registerEditorContribution","CommandsRegistry","args","assertType","URI","setTimeout","__asyncValues","o","Symbol","asyncIterator","TypeError","m","call","__values","iterator","verb","n","v","settle","InlayHintsHoverAnchor","owner","HoverForeignElementAnchor","InlayHintsHover","languageService","openerService","configurationService","_resolverService","_lineDecorations","AsyncIterableObject","executor","itemTooltip","MarkdownString","appendText","emitOne","MarkdownHover","partTooltip","_resolveInlayHintLabelPartHover","iterable","iterable_1","iterable_1_1","e_1","error","return","HoverProviderRegistry","getHover","isEmptyMarkdownString","hover","contents","ordinal","MarkdownHoverParticipant","ILanguageService","IOpenerService","IConfigurationService","inlineSuggestCommitId","GhostText","additionalReservedLineCount","lineText","lastPart","text","edits","transformer","PositionOffsetTransformer","offsetEdits","startOffset","getOffset","endOffset","edit","substring","applyEdits","substr","p","lines","join","lineStartOffsetByLineIdx","charAt","GhostTextPart","preview","BaseGhostTextWidgetModel","_expanded","onDidChangeEmitter","Emitter","onDidChange","_register","fire","expanded","Disposable","inlineCompletionToGhostText","inlineCompletion","textModel","mode","cursorPosition","previewSuffixLength","sourceLine","getLineContent","sourceIndentationLength","strings","suggestionTouchesIndentation","suggestionAddedIndentationLength","replacedIndentation","rangeThatDoesNotReplaceIndentation","suggestionWithoutIndentationChange","startsWith","valueToBeReplaced","getValueInRange","changes","cachingDiff","filteredChanges","originalLength","originalStart","previewStartInCompletionText","insertColumn","modifiedLength","modifiedEnd","modifiedStart","nonPreviewTextEnd","nonPreviewText","italicText","lastRequest","originalValue","newValue","getMaxCharCode","val","maxCharCode","len","charCode","charCodeAt","getUniqueCharCode","Error","getElements","level","group","characters","Int32Array","elements1","elements2","LcsDiff","ComputeDiff","smartDiff","InlineCompletionsModel","cache","languageConfigurationService","completionSession","MutableDisposable","active","disposed","onDidExecuteCommand","CoreEditingCommands","commandId","hasTextFocus","handleUserInput","onDidType","onDidChangeCursorPosition","session","isValid","hide","onDidBlurEditorWidget","startSessionIfTriggered","ghostText","minReservedLineCount","setExpanded","scheduleAutomaticUpdate","trigger","InlineCompletionTriggerKind","triggerKind","ensureUpdateWithExplicitContext","InlineCompletionsSession","getPosition","takeOwnership","commitCurrentCompletion","showNextInlineCompletion","showPreviousInlineCompletion","hasMultipleInlineCompletions","ILanguageConfigurationService","triggerPosition","shouldUpdate","initialTriggerKind","updateOperation","updateSoon","currentlySelectedCompletionId","lastCompletionItem","currentCompletion","sourceInlineCompletion","sourceProvider","handleItemDidShow","sourceInlineCompletions","InlineCompletionsProviderRegistry","completions","findIndex","semanticId","fixAndGetIndexOfCurrentSelection","newIdx","promise","getOptions","completion","currentCachedCompletion","toLiveInlineCompletion","createCancelablePromise","provideInlineCompletions","selectedSuggestionInfo","setValue","operation","UpdateOperation","disposable","commit","clearAndLeak","executeEdits","EditOperation","SynchronizedInlineCompletionsCache","completionsSource","onChange","decorationIds","CachedInlineCompletion","newRange","decorationId","synchronizedRange","equalsRange","JSON","stringify","startLine","getDefaultRange","maxColumn","context","defaultReplaceRange","providers","freeInlineCompletions","results","itemsByHash","completeBracketPairs","closeBrackets","trackedItem","newLine","newTokens","tokenizeLineWithEdit","slicedTokens","sliceAndInflate","console","log","fixBracketsInLine","minimizeInlineCompletion","valueToReplace","commonPrefixLen","commonPrefixLength","getOffsetAt","getPositionAt","remainingValueToReplace","commonSuffixLen","commonSuffixLength","SuggestWidgetInlineCompletionProvider","suggestControllerPreselector","isSuggestWidgetVisible","isShiftKeyPressed","_isActive","_currentSuggestItemInfo","setInactiveDelayed","onKeyDown","shiftKey","onKeyUp","suggestController","SuggestController","registerSelector","priority","select","pos","suggestItems","normalizedItemToPreselect","candidates","suggestItem","rangeToTest","prefix","inlineSuggestItem","suggestionToSuggestItemInfo","normalizedSuggestItem","normalizedInlineCompletion","valid","prefixLength","findMaxBy","compareBy","s","numberComparator","isBoundToSuggestWidget","Event","onDidTrigger","widget","onDidShow","onDidHide","onDidFocus","selectedItem","newActive","newInlineCompletion","getSuggestItemInfo","shouldFire","completionItemKind","isSnippetText","normalizedInlineCompletionsEquals","suggestItemInfoEquals","focusedItem","getFocusedItem","stopForceRenderingAbove","forceRenderingAbove","toggleMode","isArray","additionalTextEdits","insertText","insertTextRules","snippet","SnippetParser","parse","children","SnippetSession","info","getOverwriteInfo","overwriteBefore","overwriteAfter","SuggestWidgetPreviewModel","suggestionInlineCompletionSource","updateCacheSoon","updateCache","state","newGhostText","reduce","completionKind","_c","isSuggestionPreviewEnabled","augmentedCompletion","suggestWidgetState","suggestInlineCompletion","isAugmentedCompletionValid","finalCompletion","inlineCompletionPreviewLength","toGhostText","previewMode","DelegatingModel","hasCachedGhostText","currentModelRef","cachedGhostText","targetModel","GhostTextModel","sharedCache","SharedInlineCompletionCache","suggestWidgetAdapterModel","inlineCompletionsModel","updateModel","setTargetModel","isActive","setActive","hoverRange","activeInlineCompletionsModel","some","containsPosition","commitCurrentSuggestion","showNext","showPrevious","ttPolicy","window","trustedTypes","createPolicy","createHTML","GhostTextWidget","instantiationService","partsWidget","createInstance","DecorationsWidget","additionalLinesWidget","AdditionalLinesWidget","languageIdCodec","viewMoreContentWidget","viewZoneId","hasModel","inlineTexts","additionalLines","addToAdditionalLines","lastLine","decorations","LineDecoration","slice","textBufferLine","hiddenTextStartColumn","lastIdx","setParts","updateLines","renderViewMoreLines","firstLineText","remainingLinesLength","fontInfo","domNode","document","createElement","applyFontInfo","spacer","append","newline","disposableStore","button","addStandardDisposableListener","preventDefault","ViewMoreLinesContentWidget","hiddenText","hiddenTextDecorations","after","concat","_viewZoneId","changeViewZones","changeAccessor","removeZone","tabSize","heightInLines","opts","disableMonospaceOptimizations","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","lineHeight","sb","createStringBuilder","appendASCIIString","lineData","String","isBasicASCII","containsRTL","lineTokens","LineTokens","renderViewLine","RenderLineInput","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","EditorFontLigatures","html","build","trustedhtml","innerHTML","renderLines","addZone","afterLineNumber","afterColumnAffinity","allowEditorOverflow","suppressMouseDown","removeContentWidget","addContentWidget","preference","registerThemingParticipant","theme","collector","foreground","getColor","ghostTextForeground","addRule","background","ghostTextBackground","border","ghostTextBorder","GhostTextController","triggeredExplicitly","activeController","updateModelController","suggestOptions","inlineSuggestOptions","ActiveGhostTextController","activeModel","shouldShowHoverAt","shouldShowHoverAtViewZone","triggerInlineCompletion","commitInlineCompletion","hideInlineCompletion","inlineSuggestionVisible","RawContextKey","nls","inlineSuggestionHasIndentation","inlineSuggestionHasIndentationLessThanTabSize","GhostTextContextKeys","inlineCompletionVisible","bindTo","inlineCompletionSuggestsIndentation","inlineCompletionSuggestsIndentationLessThanTabSize","contextKeys","updateContextKeys","startsWithIndentation","startsWithIndentationLessThanTabSize","firstLine","getLineIndentColumn","firstNonWsIdx","firstNonWhitespaceIndex","CursorColumns","GhostTextCommand","EditorCommand","commitInlineSuggestionAction","handler","registerEditorCommand","KeybindingsRegistry","primary","weight","when","ContextKeyExpr","EditorContextKeys","kbOpts","ShowNextInlineSuggestionAction","controller","EditorAction","ShowPreviousInlineSuggestionAction","TriggerInlineSuggestionAction","registerEditorAction","InlineCompletionsHover","InlineCompletionsHoverParticipant","_menuService","_contextKeyService","_languageService","_openerService","accessibilityService","viewZoneData","positionBefore","mightBeForeignElement","lineDecorations","hoverParts","isScreenReaderOptimized","renderScreenReaderText","menu","createMenu","previousAction","statusBar","addAction","nextAction","actions","setEnabled","hasMultipleSuggestions","hasMore","MenuItemAction","$","markdownHoverElement","hoverContentsElement","renderer","MarkdownRenderer","code","onDidRenderAsync","onContentsChanged","inlineSuggestionAvailable","renderedContents","render","appendCodeblock","replaceChildren","element","renderForScreenReader","fragment","appendChild","IMenuService","IAccessibilityService","ExpandLineSelectionAction","kbExpr","_accessor","viewModel","_getViewModel","pushStackElement","setCursorStates","CursorMoveCommands","getCursorStates","revealPrimaryCursor","CopyLinesCommand","selection","isCopyingDown","noop","_selection","_isCopyingDown","_noop","_selectionDirection","_selectionId","_startLineNumberDelta","_endLineNumberDelta","builder","setEndPosition","sourceLines","sourceText","addEditOperation","getLineCount","trackSelection","getDirection","helper","getTrackedSelection","Selection","MoveLinesCommand","isMovingDown","autoIndent","_isMovingDown","_autoIndent","_moveEndLineSelectionShrink","modelLineCount","_moveEndPositionDown","indentSize","insertSpaces","indentConverter","buildIndentConverter","virtualModel","getLanguageId","getLanguageIdAtPosition","otherLineNumber","movingLineNumber","movingLineText","insertingText","shouldAutoIndent","movingLineMatchResult","matchEnterRule","oldIndentation","newSpaceCnt","indentUtils","newIndentation","trimLeft","indentOfMovingLine","LanguageConfigurationRegistry","ret","matchEnterRuleMovingDown","getIndentEditsOfMovingBlock","newIndentatOfMovingBlock","oldSpaceCnt","spaceCntOffset","indentOfFirstLine","oldIndent","shiftIndent","indentation","ShiftCommand","unshiftIndent","enter","enterPrefix","indentAction","IndentAction","indexOf","indentMetadataOfMovelingLine","futureAboveLineNumber","futureAboveLineText","parseEnterResult","validPrecedingLine","lineContent","oneLineAbove","previousLineText","isCheapToTokenize","languageAtSelectionStart","originalIndent","newSpacesCnt","newIndent","SortLinesCommand","descending","selectionId","op","getSortData","sortLines","_COLLATOR","Intl","Collator","before","linesToSort","sorted","getCollator","compare","AbstractCopyLinesAction","down","selections","getSelections","ignore","prev","curr","commands","pushUndoStop","executeCommands","CopyLinesUpAction","linux","menuOpts","menuId","comment","order","CopyLinesDownAction","DuplicateSelectionAction","insertSelection","ReplaceCommandThatSelectsText","AbstractMoveLinesAction","MoveLinesUpAction","MoveLinesDownAction","AbstractSortLinesAction","canRun","SortLinesAscendingAction","SortLinesDescendingAction","DeleteDuplicateLinesAction","endCursorState","linesDeleted","uniqueLines","selectionToReplace","adjustedSelectionStart","finalSelection","TrimTrailingWhitespaceAction","KeyChord","cursors","reason","positionLineNumber","positionColumn","getSelection","TrimTrailingWhitespaceCommand","DeleteLinesAction","ops","_getLinesToRemove","cursorState","operations","selectionStartColumn","mergedOperations","previousOperation","IndentLinesAction","TypeOperations","cursorConfig","OutdentLinesAction","InsertLineBeforeAction","InsertLineAfterAction","AbstractDeleteAllToBoundaryAction","primaryCursor","rangesToDelete","_getRangesToDelete","effectiveRanges","count","nextRange","_getEndCursorState","DeleteAllLeftAction","mac","endPrimaryCursor","deletedLines","forEach","endCursor","newStartLine","intersectRanges","unshift","deleteFromLine","deleteFromColumn","DeleteAllRightAction","secondary","sel","JoinLinesAction","reducedSelections","lastSelection","previousValue","currentValue","equalsSelection","lineOffset","columnDeltaOffset","selectionEndPositionOffset","trimmedLinesContent","firstNonWhitespaceIdx","getLineFirstNonWhitespaceColumn","insertSpace","lineTextWithoutIndent","deleteSelection","resultSelection","TransposeAction","chars","split","ReplaceCommand","ReplaceCommandThatPreservesSelection","AbstractCaseAction","wordSeparators","textEdits","getConfiguredWordAtPosition","_modifyText","UpperCaseAction","toLocaleUpperCase","LowerCaseAction","toLocaleLowerCase","BackwardsCompatibleRegExp","_pattern","_flags","_actual","_evaluated","RegExp","err","TitleCaseAction","titleBoundary","SnakeCaseAction","caseBoundary","singleLetters","isSupported","CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE","DECORATION_CLASS_NAME","LinkedEditingContribution","_debounceDuration","_localToDispose","_enabled","_visibleContextKey","_currentDecorations","_languageWordPattern","_currentWordPattern","_ignoreChangeEvent","_rangeUpdateTriggerPromise","_rangeSyncTriggerPromise","_currentRequest","_currentRequestPosition","_currentRequestModelVersion","reinitialize","LinkedEditingRangeProviderRegistry","forceRefresh","isEnabled","clearRanges","onDidChangeLanguageConfiguration","getLanguageConfiguration","getWordDefinition","rangeUpdateScheduler","Delayer","triggerRangeUpdate","updateRanges","rangeSyncScheduler","referenceRange","every","_syncRanges","referenceValue","match","mirrorRange","oldValue","rangeStartColumn","rangeEndColumn","popUndoStop","prevEditOperationType","getPrevEditOperationType","setPrevEditOperationType","force","modelVersionId","equals","request","getLinkedEditingRanges","response","wordPattern","foundReferenceRange","splice","DECORATION","isCancellationError","ModelDecorationOptions","LinkedEditingAction","editorService","ICodeEditorService","openCodeEditor","resource","getActiveCodeEditor","setPosition","reportTelemetry","LinkedEditingCommand","orderedByScore","first","provideLinkedEditingRanges","arrays","editorLinkedEditingBackground","registerColor","dark","Color","transparent","light","hc","editorLinkedEditingBackgroundColor","registerModelAndPositionCommand","Link","link","_link","_provider","url","resolveLink","LinksList","tuples","links","newLinks","_union","isDisposable","oldLinks","oldIndex","oldLen","newIndex","newLen","oldLink","newLink","getLinks","lists","LinkProviderRegistry","provideLinks","coalesce","resolveCount","IModelService","general","LinkOccurrence","useMetaKey","changeDecorationOptions","_getOptions","assign","hoverMessage","executeCmd","test","kb","platform","nativeLabel","nativeLabelText","appendMarkdown","getHoverMessage","LinkDetector","listenersToRemove","clickLinkGesture","keyboardEvent","_onEditorMouseMove","onEditorMouseUp","cleanUpActiveLinkDecoration","updateDecorations","stop","beginCompute","onModelChanged","onModelLanguageChanged","timeout","async","computePromise","activeLinksList","currentOccurrences","activeLinkDecorationId","setIfNotSet","RECOMPUTE_TIME","oldDecorations","occurance","newDecorations","withKey","occurrence","getLinkOccurrence","changeDecorations","activate","deactivate","openLinkOccurrence","fromUserGesture","modelUri","scheme","Schemas","parsedUri","fsPath","resources","relativePath","open","allowContributedOpeners","allowCommands","messageOrError","warn","currentOccurrence","Boolean","keyCodeIsTriggerKey","OpenLinkAction","linkDetector","activeLinkForeground","editorActiveLinkForeground"],"sourceRoot":""}