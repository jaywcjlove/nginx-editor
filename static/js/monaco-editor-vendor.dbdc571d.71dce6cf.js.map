{"version":3,"file":"static/js/monaco-editor-vendor.dbdc571d.71dce6cf.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/getHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hoverOperation.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/contentHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/marginHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markerHoverParticipant.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/hoverTypes.js","../node_modules/monaco-editor/esm/vs/editor/contrib/hover/browser/markdownHoverParticipant.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplaceCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inPlaceReplace/browser/inPlaceReplace.js","../node_modules/monaco-editor/esm/vs/editor/contrib/indentation/browser/indentUtils.js","../node_modules/monaco-editor/esm/vs/editor/contrib/indentation/browser/indentation.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHints.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsLocations.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsController.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsHover.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlayHints/browser/inlayHintsContribution.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/consts.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostText.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionToGhostText.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/suggestWidgetInlineCompletionProvider.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/suggestWidgetPreviewModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/utils.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/ghostTextController.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsHoverParticipant.js","../node_modules/monaco-editor/esm/vs/editor/contrib/inlineCompletions/browser/inlineCompletionsContribution.js","../node_modules/monaco-editor/esm/vs/editor/contrib/lineSelection/browser/lineSelection.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/copyLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/moveLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/sortLinesCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linesOperations/browser/linesOperations.js","../node_modules/monaco-editor/esm/vs/editor/contrib/linkedEditing/browser/linkedEditing.js","../node_modules/monaco-editor/esm/vs/editor/contrib/links/browser/getLinks.js","../node_modules/monaco-editor/esm/vs/editor/contrib/links/browser/links.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class HoverProviderResult {\n    constructor(provider, hover, ordinal) {\n        this.provider = provider;\n        this.hover = hover;\n        this.ordinal = ordinal;\n    }\n}\nfunction executeProvider(provider, ordinal, model, position, token) {\n    return __awaiter(this, void 0, void 0, function* () {\n        try {\n            const result = yield Promise.resolve(provider.provideHover(model, position, token));\n            if (result && isValid(result)) {\n                return new HoverProviderResult(provider, result, ordinal);\n            }\n        }\n        catch (err) {\n            onUnexpectedExternalError(err);\n        }\n        return undefined;\n    });\n}\nexport function getHover(registry, model, position, token) {\n    const providers = registry.ordered(model);\n    const promises = providers.map((provider, index) => executeProvider(provider, index, model, position, token));\n    return AsyncIterableObject.fromPromises(promises).coalesce();\n}\nexport function getHoverPromise(registry, model, position, token) {\n    return getHover(registry, model, position, token).map(item => item.hover).toPromise();\n}\nregisterModelAndPositionCommand('_executeHoverProvider', (accessor, model, position) => {\n    const languageFeaturesService = accessor.get(ILanguageFeaturesService);\n    return getHoverPromise(languageFeaturesService.hoverProvider, model, position, CancellationToken.None);\n});\nfunction isValid(result) {\n    const hasRange = (typeof result.range !== 'undefined');\n    const hasHtmlContent = typeof result.contents !== 'undefined' && result.contents && result.contents.length > 0;\n    return hasRange && hasHtmlContent;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { createCancelableAsyncIterable, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nexport class HoverResult {\n    constructor(value, isComplete, hasLoadingMessage) {\n        this.value = value;\n        this.isComplete = isComplete;\n        this.hasLoadingMessage = hasLoadingMessage;\n    }\n}\n/**\n * Computing the hover is very fine tuned.\n *\n * Suppose the hover delay is 300ms (the default). Then, when resting the mouse at an anchor:\n * - at 150ms, the async computation is triggered (i.e. semantic hover)\n *   - if async results already come in, they are not rendered yet.\n * - at 300ms, the sync computation is triggered (i.e. decorations, markers)\n *   - if there are sync or async results, they are rendered.\n * - at 900ms, if the async computation hasn't finished, a \"Loading...\" result is added.\n */\nexport class HoverOperation extends Disposable {\n    constructor(_editor, _computer) {\n        super();\n        this._editor = _editor;\n        this._computer = _computer;\n        this._onResult = this._register(new Emitter());\n        this.onResult = this._onResult.event;\n        this._firstWaitScheduler = this._register(new RunOnceScheduler(() => this._triggerAsyncComputation(), 0));\n        this._secondWaitScheduler = this._register(new RunOnceScheduler(() => this._triggerSyncComputation(), 0));\n        this._loadingMessageScheduler = this._register(new RunOnceScheduler(() => this._triggerLoadingMessage(), 0));\n        this._state = 0 /* Idle */;\n        this._asyncIterable = null;\n        this._asyncIterableDone = false;\n        this._result = [];\n    }\n    dispose() {\n        if (this._asyncIterable) {\n            this._asyncIterable.cancel();\n            this._asyncIterable = null;\n        }\n        super.dispose();\n    }\n    get _hoverTime() {\n        return this._editor.getOption(53 /* hover */).delay;\n    }\n    get _firstWaitTime() {\n        return this._hoverTime / 2;\n    }\n    get _secondWaitTime() {\n        return this._hoverTime - this._firstWaitTime;\n    }\n    get _loadingMessageTime() {\n        return 3 * this._hoverTime;\n    }\n    _setState(state, fireResult = true) {\n        this._state = state;\n        if (fireResult) {\n            this._fireResult();\n        }\n    }\n    _triggerAsyncComputation() {\n        this._setState(2 /* SecondWait */);\n        this._secondWaitScheduler.schedule(this._secondWaitTime);\n        if (this._computer.computeAsync) {\n            this._asyncIterableDone = false;\n            this._asyncIterable = createCancelableAsyncIterable(token => this._computer.computeAsync(token));\n            (() => __awaiter(this, void 0, void 0, function* () {\n                var e_1, _a;\n                try {\n                    try {\n                        for (var _b = __asyncValues(this._asyncIterable), _c; _c = yield _b.next(), !_c.done;) {\n                            const item = _c.value;\n                            if (item) {\n                                this._result.push(item);\n                                this._fireResult();\n                            }\n                        }\n                    }\n                    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n                    finally {\n                        try {\n                            if (_c && !_c.done && (_a = _b.return)) yield _a.call(_b);\n                        }\n                        finally { if (e_1) throw e_1.error; }\n                    }\n                    this._asyncIterableDone = true;\n                    if (this._state === 3 /* WaitingForAsync */ || this._state === 4 /* WaitingForAsyncShowingLoading */) {\n                        this._setState(0 /* Idle */);\n                    }\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                }\n            }))();\n        }\n        else {\n            this._asyncIterableDone = true;\n        }\n    }\n    _triggerSyncComputation() {\n        if (this._computer.computeSync) {\n            this._result = this._result.concat(this._computer.computeSync());\n        }\n        this._setState(this._asyncIterableDone ? 0 /* Idle */ : 3 /* WaitingForAsync */);\n    }\n    _triggerLoadingMessage() {\n        if (this._state === 3 /* WaitingForAsync */) {\n            this._setState(4 /* WaitingForAsyncShowingLoading */);\n        }\n    }\n    _fireResult() {\n        if (this._state === 1 /* FirstWait */ || this._state === 2 /* SecondWait */) {\n            // Do not send out results before the hover time\n            return;\n        }\n        const isComplete = (this._state === 0 /* Idle */);\n        const hasLoadingMessage = (this._state === 4 /* WaitingForAsyncShowingLoading */);\n        this._onResult.fire(new HoverResult(this._result.slice(0), isComplete, hasLoadingMessage));\n    }\n    start(mode) {\n        if (mode === 0 /* Delayed */) {\n            if (this._state === 0 /* Idle */) {\n                this._setState(1 /* FirstWait */);\n                this._firstWaitScheduler.schedule(this._firstWaitTime);\n                this._loadingMessageScheduler.schedule(this._loadingMessageTime);\n            }\n        }\n        else {\n            switch (this._state) {\n                case 0 /* Idle */:\n                    this._triggerAsyncComputation();\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n                case 2 /* SecondWait */:\n                    this._secondWaitScheduler.cancel();\n                    this._triggerSyncComputation();\n                    break;\n            }\n        }\n    }\n    cancel() {\n        this._firstWaitScheduler.cancel();\n        this._secondWaitScheduler.cancel();\n        this._loadingMessageScheduler.cancel();\n        if (this._asyncIterable) {\n            this._asyncIterable.cancel();\n            this._asyncIterable = null;\n        }\n        this._result = [];\n        this._setState(0 /* Idle */, false);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { HoverAction, HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { TokenizationRegistry } from '../../../common/languages.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { HoverParticipantRegistry, HoverRangeAnchor } from './hoverTypes.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { Context as SuggestContext } from '../../suggest/browser/suggest.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { Emitter } from '../../../../base/common/event.js';\nconst $ = dom.$;\nlet ContentHoverController = class ContentHoverController extends Disposable {\n    constructor(_editor, _instantiationService, _keybindingService) {\n        super();\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._keybindingService = _keybindingService;\n        this._widget = this._register(this._instantiationService.createInstance(ContentHoverWidget, this._editor));\n        this._decorationsChangerListener = this._register(new EditorDecorationsChangerListener(this._editor));\n        this._messages = [];\n        this._messagesAreComplete = false;\n        // Instantiate participants and sort them by `hoverOrdinal` which is relevant for rendering order.\n        this._participants = [];\n        for (const participant of HoverParticipantRegistry.getAll()) {\n            this._participants.push(this._instantiationService.createInstance(participant, this._editor));\n        }\n        this._participants.sort((p1, p2) => p1.hoverOrdinal - p2.hoverOrdinal);\n        this._computer = new ContentHoverComputer(this._editor, this._participants);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            this._withResult(result.value, result.isComplete, result.hasLoadingMessage);\n        }));\n        this._register(this._decorationsChangerListener.onDidChangeModelDecorations(() => this._onModelDecorationsChanged()));\n        this._register(dom.addStandardDisposableListener(this._widget.getDomNode(), 'keydown', (e) => {\n            if (e.equals(9 /* Escape */)) {\n                this.hide();\n            }\n        }));\n        this._register(TokenizationRegistry.onDidChange(() => {\n            if (this._widget.position && this._computer.anchor && this._messages.length > 0) {\n                this._widget.clear();\n                this._renderMessages(this._computer.anchor, this._messages);\n            }\n        }));\n    }\n    _onModelDecorationsChanged() {\n        if (this._widget.position) {\n            // The decorations have changed and the hover is visible,\n            // we need to recompute the displayed text\n            this._hoverOperation.cancel();\n            if (!this._widget.isColorPickerVisible) { // TODO@Michel ensure that displayed text for other decorations is computed even if color picker is in place\n                this._hoverOperation.start(0 /* Delayed */);\n            }\n        }\n    }\n    maybeShowAt(mouseEvent) {\n        const anchorCandidates = [];\n        for (const participant of this._participants) {\n            if (participant.suggestHoverAnchor) {\n                const anchor = participant.suggestHoverAnchor(mouseEvent);\n                if (anchor) {\n                    anchorCandidates.push(anchor);\n                }\n            }\n        }\n        const target = mouseEvent.target;\n        if (target.type === 6 /* CONTENT_TEXT */) {\n            anchorCandidates.push(new HoverRangeAnchor(0, target.range));\n        }\n        if (target.type === 7 /* CONTENT_EMPTY */) {\n            const epsilon = this._editor.getOption(44 /* fontInfo */).typicalHalfwidthCharacterWidth / 2;\n            if (!target.detail.isAfterLines && typeof target.detail.horizontalDistanceToText === 'number' && target.detail.horizontalDistanceToText < epsilon) {\n                // Let hover kick in even when the mouse is technically in the empty area after a line, given the distance is small enough\n                anchorCandidates.push(new HoverRangeAnchor(0, target.range));\n            }\n        }\n        if (anchorCandidates.length === 0) {\n            return false;\n        }\n        anchorCandidates.sort((a, b) => b.priority - a.priority);\n        this._startShowingAt(anchorCandidates[0], 0 /* Delayed */, false);\n        return true;\n    }\n    startShowingAtRange(range, mode, focus) {\n        this._startShowingAt(new HoverRangeAnchor(0, range), mode, focus);\n    }\n    _startShowingAt(anchor, mode, focus) {\n        if (this._computer.anchor && this._computer.anchor.equals(anchor)) {\n            // We have to show the widget at the exact same range as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        if (this._widget.position) {\n            // The range might have changed, but the hover is visible\n            // Instead of hiding it completely, filter out messages that are still in the new range and\n            // kick off a new computation\n            if (!this._computer.anchor || !anchor.canAdoptVisibleHover(this._computer.anchor, this._widget.position)) {\n                this.hide();\n            }\n            else {\n                const filteredMessages = this._messages.filter((m) => m.isValidForHoverAnchor(anchor));\n                if (filteredMessages.length === 0) {\n                    this.hide();\n                }\n                else if (filteredMessages.length === this._messages.length && this._messagesAreComplete) {\n                    // no change\n                    return;\n                }\n                else {\n                    this._renderMessages(anchor, filteredMessages);\n                }\n            }\n        }\n        this._computer.anchor = anchor;\n        this._computer.shouldFocus = focus;\n        this._hoverOperation.start(mode);\n    }\n    hide() {\n        this._computer.anchor = null;\n        this._hoverOperation.cancel();\n        this._widget.hide();\n    }\n    isColorPickerVisible() {\n        return this._widget.isColorPickerVisible;\n    }\n    _addLoadingMessage(result) {\n        if (this._computer.anchor) {\n            for (const participant of this._participants) {\n                if (participant.createLoadingMessage) {\n                    const loadingMessage = participant.createLoadingMessage(this._computer.anchor);\n                    if (loadingMessage) {\n                        return result.slice(0).concat([loadingMessage]);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    _withResult(result, isComplete, hasLoadingMessage) {\n        this._messages = (hasLoadingMessage ? this._addLoadingMessage(result) : result);\n        this._messagesAreComplete = isComplete;\n        if (this._computer.anchor && this._messages.length > 0) {\n            this._renderMessages(this._computer.anchor, this._messages);\n        }\n        else if (isComplete) {\n            this.hide();\n        }\n    }\n    _renderMessages(anchor, messages) {\n        // update column from which to show\n        let renderColumn = 1073741824 /* MAX_SAFE_SMALL_INTEGER */;\n        let highlightRange = messages[0].range;\n        let forceShowAtRange = null;\n        for (const msg of messages) {\n            renderColumn = Math.min(renderColumn, msg.range.startColumn);\n            highlightRange = Range.plusRange(highlightRange, msg.range);\n            if (msg.forceShowAtRange) {\n                forceShowAtRange = msg.range;\n            }\n        }\n        const disposables = new DisposableStore();\n        const statusBar = disposables.add(new EditorHoverStatusBar(this._keybindingService));\n        const fragment = document.createDocumentFragment();\n        let colorPicker = null;\n        const context = {\n            fragment,\n            statusBar,\n            setColorPicker: (widget) => colorPicker = widget,\n            onContentsChanged: () => this._widget.onContentsChanged(),\n            hide: () => this.hide()\n        };\n        for (const participant of this._participants) {\n            const hoverParts = messages.filter(msg => msg.owner === participant);\n            if (hoverParts.length > 0) {\n                disposables.add(participant.renderHoverParts(context, hoverParts));\n            }\n        }\n        if (statusBar.hasContent) {\n            fragment.appendChild(statusBar.hoverElement);\n        }\n        if (fragment.hasChildNodes()) {\n            if (highlightRange) {\n                const highlightDecorations = this._decorationsChangerListener.deltaDecorations([], [{\n                        range: highlightRange,\n                        options: ContentHoverController._DECORATION_OPTIONS\n                    }]);\n                disposables.add(toDisposable(() => {\n                    this._decorationsChangerListener.deltaDecorations(highlightDecorations, []);\n                }));\n            }\n            this._widget.showAt(fragment, new ContentHoverVisibleData(colorPicker, forceShowAtRange ? forceShowAtRange.getStartPosition() : new Position(anchor.range.startLineNumber, renderColumn), forceShowAtRange ? forceShowAtRange : highlightRange, this._editor.getOption(53 /* hover */).above, this._computer.shouldFocus, disposables));\n        }\n        else {\n            disposables.dispose();\n        }\n    }\n};\nContentHoverController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n    description: 'content-hover-highlight',\n    className: 'hoverHighlight'\n});\nContentHoverController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IKeybindingService)\n], ContentHoverController);\nexport { ContentHoverController };\n/**\n * Allows listening to `ICodeEditor.onDidChangeModelDecorations` and ignores the change caused by itself.\n */\nclass EditorDecorationsChangerListener extends Disposable {\n    constructor(_editor) {\n        super();\n        this._editor = _editor;\n        this._onDidChangeModelDecorations = this._register(new Emitter());\n        this.onDidChangeModelDecorations = this._onDidChangeModelDecorations.event;\n        this._isChangingDecorations = false;\n        this._register(this._editor.onDidChangeModelDecorations((e) => {\n            if (this._isChangingDecorations) {\n                return;\n            }\n            this._onDidChangeModelDecorations.fire(e);\n        }));\n    }\n    deltaDecorations(oldDecorations, newDecorations) {\n        try {\n            this._isChangingDecorations = true;\n            return this._editor.deltaDecorations(oldDecorations, newDecorations);\n        }\n        finally {\n            this._isChangingDecorations = false;\n        }\n    }\n}\nclass ContentHoverVisibleData {\n    constructor(colorPicker, showAtPosition, showAtRange, preferAbove, stoleFocus, disposables) {\n        this.colorPicker = colorPicker;\n        this.showAtPosition = showAtPosition;\n        this.showAtRange = showAtRange;\n        this.preferAbove = preferAbove;\n        this.stoleFocus = stoleFocus;\n        this.disposables = disposables;\n    }\n}\nlet ContentHoverWidget = class ContentHoverWidget extends Disposable {\n    constructor(_editor, _contextKeyService) {\n        super();\n        this._editor = _editor;\n        this._contextKeyService = _contextKeyService;\n        this.allowEditorOverflow = true;\n        this._hoverVisibleKey = EditorContextKeys.hoverVisible.bindTo(this._contextKeyService);\n        this._hover = this._register(new HoverWidget());\n        this._visibleData = null;\n        this._register(this._editor.onDidLayoutChange(() => this._layout()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(44 /* fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._setVisibleData(null);\n        this._layout();\n        this._editor.addContentWidget(this);\n    }\n    /**\n     * Returns `null` if the hover is not visible.\n     */\n    get position() {\n        var _a, _b;\n        return (_b = (_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.showAtPosition) !== null && _b !== void 0 ? _b : null;\n    }\n    get isColorPickerVisible() {\n        var _a;\n        return Boolean((_a = this._visibleData) === null || _a === void 0 ? void 0 : _a.colorPicker);\n    }\n    dispose() {\n        this._editor.removeContentWidget(this);\n        if (this._visibleData) {\n            this._visibleData.disposables.dispose();\n        }\n        super.dispose();\n    }\n    getId() {\n        return ContentHoverWidget.ID;\n    }\n    getDomNode() {\n        return this._hover.containerDomNode;\n    }\n    getPosition() {\n        if (!this._visibleData) {\n            return null;\n        }\n        let preferAbove = this._visibleData.preferAbove;\n        if (!preferAbove && this._contextKeyService.getContextKeyValue(SuggestContext.Visible.key)) {\n            // Prefer rendering above if the suggest widget is visible\n            preferAbove = true;\n        }\n        return {\n            position: this._visibleData.showAtPosition,\n            range: this._visibleData.showAtRange,\n            preference: (preferAbove\n                ? [1 /* ABOVE */, 2 /* BELOW */]\n                : [2 /* BELOW */, 1 /* ABOVE */]),\n        };\n    }\n    _setVisibleData(visibleData) {\n        if (this._visibleData) {\n            this._visibleData.disposables.dispose();\n        }\n        this._visibleData = visibleData;\n        this._hoverVisibleKey.set(!!this._visibleData);\n        this._hover.containerDomNode.classList.toggle('hidden', !this._visibleData);\n    }\n    _layout() {\n        const height = Math.max(this._editor.getLayoutInfo().height / 4, 250);\n        const { fontSize, lineHeight } = this._editor.getOption(44 /* fontInfo */);\n        this._hover.contentsDomNode.style.fontSize = `${fontSize}px`;\n        this._hover.contentsDomNode.style.lineHeight = `${lineHeight / fontSize}`;\n        this._hover.contentsDomNode.style.maxHeight = `${height}px`;\n        this._hover.contentsDomNode.style.maxWidth = `${Math.max(this._editor.getLayoutInfo().width * 0.66, 500)}px`;\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    showAt(node, visibleData) {\n        this._setVisibleData(visibleData);\n        this._hover.contentsDomNode.textContent = '';\n        this._hover.contentsDomNode.appendChild(node);\n        this._hover.contentsDomNode.style.paddingBottom = '';\n        this._updateFont();\n        this._editor.layoutContentWidget(this);\n        this.onContentsChanged();\n        // Simply force a synchronous render on the editor\n        // such that the widget does not really render with left = '0px'\n        this._editor.render();\n        // See https://github.com/microsoft/vscode/issues/140339\n        // TODO: Doing a second layout of the hover after force rendering the editor\n        this._editor.layoutContentWidget(this);\n        this.onContentsChanged();\n        if (visibleData.stoleFocus) {\n            this._hover.containerDomNode.focus();\n        }\n        if (visibleData.colorPicker) {\n            visibleData.colorPicker.layout();\n        }\n    }\n    hide() {\n        if (this._visibleData) {\n            const stoleFocus = this._visibleData.stoleFocus;\n            this._setVisibleData(null);\n            this._editor.layoutContentWidget(this);\n            if (stoleFocus) {\n                this._editor.focus();\n            }\n        }\n    }\n    onContentsChanged() {\n        this._hover.onContentsChanged();\n        const scrollDimensions = this._hover.scrollbar.getScrollDimensions();\n        const hasHorizontalScrollbar = (scrollDimensions.scrollWidth > scrollDimensions.width);\n        if (hasHorizontalScrollbar) {\n            // There is just a horizontal scrollbar\n            const extraBottomPadding = `${this._hover.scrollbar.options.horizontalScrollbarSize}px`;\n            if (this._hover.contentsDomNode.style.paddingBottom !== extraBottomPadding) {\n                this._hover.contentsDomNode.style.paddingBottom = extraBottomPadding;\n                this._editor.layoutContentWidget(this);\n                this._hover.onContentsChanged();\n            }\n        }\n    }\n    clear() {\n        this._hover.contentsDomNode.textContent = '';\n    }\n};\nContentHoverWidget.ID = 'editor.contrib.contentHoverWidget';\nContentHoverWidget = __decorate([\n    __param(1, IContextKeyService)\n], ContentHoverWidget);\nexport { ContentHoverWidget };\nlet EditorHoverStatusBar = class EditorHoverStatusBar extends Disposable {\n    constructor(_keybindingService) {\n        super();\n        this._keybindingService = _keybindingService;\n        this._hasContent = false;\n        this.hoverElement = $('div.hover-row.status-bar');\n        this.actionsElement = dom.append(this.hoverElement, $('div.actions'));\n    }\n    get hasContent() {\n        return this._hasContent;\n    }\n    addAction(actionOptions) {\n        const keybinding = this._keybindingService.lookupKeybinding(actionOptions.commandId);\n        const keybindingLabel = keybinding ? keybinding.getLabel() : null;\n        this._hasContent = true;\n        return this._register(HoverAction.render(this.actionsElement, actionOptions, keybindingLabel));\n    }\n    append(element) {\n        const result = dom.append(this.actionsElement, element);\n        this._hasContent = true;\n        return result;\n    }\n};\nEditorHoverStatusBar = __decorate([\n    __param(0, IKeybindingService)\n], EditorHoverStatusBar);\nclass ContentHoverComputer {\n    constructor(_editor, _participants) {\n        this._editor = _editor;\n        this._participants = _participants;\n        this._anchor = null;\n        this._shouldFocus = false;\n    }\n    get anchor() { return this._anchor; }\n    set anchor(value) { this._anchor = value; }\n    get shouldFocus() { return this._shouldFocus; }\n    set shouldFocus(value) { this._shouldFocus = value; }\n    static _getLineDecorations(editor, anchor) {\n        if (anchor.type !== 1 /* Range */) {\n            return [];\n        }\n        const model = editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        return editor.getLineDecorations(lineNumber).filter((d) => {\n            if (d.options.isWholeLine) {\n                return true;\n            }\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            if (d.options.showIfCollapsed) {\n                // Relax check around `showIfCollapsed` decorations to also include +/- 1 character\n                if (startColumn > anchor.range.startColumn + 1 || anchor.range.endColumn - 1 > endColumn) {\n                    return false;\n                }\n            }\n            else {\n                if (startColumn > anchor.range.startColumn || anchor.range.endColumn > endColumn) {\n                    return false;\n                }\n            }\n            return true;\n        });\n    }\n    computeAsync(token) {\n        const anchor = this._anchor;\n        if (!this._editor.hasModel() || !anchor) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, anchor);\n        return AsyncIterableObject.merge(this._participants.map((participant) => {\n            if (!participant.computeAsync) {\n                return AsyncIterableObject.EMPTY;\n            }\n            return participant.computeAsync(anchor, lineDecorations, token);\n        }));\n    }\n    computeSync() {\n        if (!this._editor.hasModel() || !this._anchor) {\n            return [];\n        }\n        const lineDecorations = ContentHoverComputer._getLineDecorations(this._editor, this._anchor);\n        let result = [];\n        for (const participant of this._participants) {\n            result = result.concat(participant.computeSync(this._anchor, lineDecorations));\n        }\n        return coalesce(result);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { isEmptyMarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { HoverOperation } from './hoverOperation.js';\nimport { NullOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { HoverWidget } from '../../../../base/browser/ui/hover/hoverWidget.js';\nconst $ = dom.$;\nexport class MarginHoverWidget extends Disposable {\n    constructor(editor, languageService, openerService = NullOpenerService) {\n        super();\n        this._renderDisposeables = this._register(new DisposableStore());\n        this._editor = editor;\n        this._isVisible = false;\n        this._messages = [];\n        this._hover = this._register(new HoverWidget());\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        this._markdownRenderer = this._register(new MarkdownRenderer({ editor: this._editor }, languageService, openerService));\n        this._computer = new MarginHoverComputer(this._editor);\n        this._hoverOperation = this._register(new HoverOperation(this._editor, this._computer));\n        this._register(this._hoverOperation.onResult((result) => {\n            this._withResult(result.value);\n        }));\n        this._register(this._editor.onDidChangeModelDecorations(() => this._onModelDecorationsChanged()));\n        this._register(this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(44 /* fontInfo */)) {\n                this._updateFont();\n            }\n        }));\n        this._editor.addOverlayWidget(this);\n    }\n    dispose() {\n        this._editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n    getId() {\n        return MarginHoverWidget.ID;\n    }\n    getDomNode() {\n        return this._hover.containerDomNode;\n    }\n    getPosition() {\n        return null;\n    }\n    _updateFont() {\n        const codeClasses = Array.prototype.slice.call(this._hover.contentsDomNode.getElementsByClassName('code'));\n        codeClasses.forEach(node => this._editor.applyFontInfo(node));\n    }\n    _onModelDecorationsChanged() {\n        if (this._isVisible) {\n            // The decorations have changed and the hover is visible,\n            // we need to recompute the displayed text\n            this._hoverOperation.cancel();\n            this._hoverOperation.start(0 /* Delayed */);\n        }\n    }\n    startShowingAt(lineNumber) {\n        if (this._computer.lineNumber === lineNumber) {\n            // We have to show the widget at the exact same line number as before, so no work is needed\n            return;\n        }\n        this._hoverOperation.cancel();\n        this.hide();\n        this._computer.lineNumber = lineNumber;\n        this._hoverOperation.start(0 /* Delayed */);\n    }\n    hide() {\n        this._computer.lineNumber = -1;\n        this._hoverOperation.cancel();\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n    }\n    _withResult(result) {\n        this._messages = result;\n        if (this._messages.length > 0) {\n            this._renderMessages(this._computer.lineNumber, this._messages);\n        }\n        else {\n            this.hide();\n        }\n    }\n    _renderMessages(lineNumber, messages) {\n        this._renderDisposeables.clear();\n        const fragment = document.createDocumentFragment();\n        for (const msg of messages) {\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderedContents = this._renderDisposeables.add(this._markdownRenderer.render(msg.value));\n            hoverContentsElement.appendChild(renderedContents.element);\n            fragment.appendChild(markdownHoverElement);\n        }\n        this._updateContents(fragment);\n        this._showAt(lineNumber);\n    }\n    _updateContents(node) {\n        this._hover.contentsDomNode.textContent = '';\n        this._hover.contentsDomNode.appendChild(node);\n        this._updateFont();\n    }\n    _showAt(lineNumber) {\n        if (!this._isVisible) {\n            this._isVisible = true;\n            this._hover.containerDomNode.classList.toggle('hidden', !this._isVisible);\n        }\n        const editorLayout = this._editor.getLayoutInfo();\n        const topForLineNumber = this._editor.getTopForLineNumber(lineNumber);\n        const editorScrollTop = this._editor.getScrollTop();\n        const lineHeight = this._editor.getOption(59 /* lineHeight */);\n        const nodeHeight = this._hover.containerDomNode.clientHeight;\n        const top = topForLineNumber - editorScrollTop - ((nodeHeight - lineHeight) / 2);\n        this._hover.containerDomNode.style.left = `${editorLayout.glyphMarginLeft + editorLayout.glyphMarginWidth}px`;\n        this._hover.containerDomNode.style.top = `${Math.max(Math.round(top), 0)}px`;\n    }\n}\nMarginHoverWidget.ID = 'editor.contrib.modesGlyphHoverWidget';\nclass MarginHoverComputer {\n    constructor(_editor) {\n        this._editor = _editor;\n        this._lineNumber = -1;\n    }\n    get lineNumber() {\n        return this._lineNumber;\n    }\n    set lineNumber(value) {\n        this._lineNumber = value;\n    }\n    computeSync() {\n        const toHoverMessage = (contents) => {\n            return {\n                value: contents\n            };\n        };\n        const lineDecorations = this._editor.getLineDecorations(this._lineNumber);\n        const result = [];\n        if (!lineDecorations) {\n            return result;\n        }\n        for (const d of lineDecorations) {\n            if (!d.options.glyphMarginClassName) {\n                continue;\n            }\n            const hoverMessage = d.options.glyphMarginHoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            result.push(...asArray(hoverMessage).map(toHoverMessage));\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { isNonEmptyArray } from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, disposableTimeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { basename } from '../../../../base/common/resources.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IMarkerDecorationsService } from '../../../common/services/markerDecorations.js';\nimport { getCodeActions } from '../../codeAction/browser/codeAction.js';\nimport { QuickFixAction, QuickFixController } from '../../codeAction/browser/codeActionCommands.js';\nimport { CodeActionKind } from '../../codeAction/browser/types.js';\nimport { MarkerController, NextMarkerAction } from '../../gotoError/browser/gotoError.js';\nimport * as nls from '../../../../nls.js';\nimport { IMarkerData, MarkerSeverity } from '../../../../platform/markers/common/markers.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { Progress } from '../../../../platform/progress/common/progress.js';\nimport { textLinkActiveForeground, textLinkForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nconst $ = dom.$;\nexport class MarkerHover {\n    constructor(owner, range, marker) {\n        this.owner = owner;\n        this.range = range;\n        this.marker = marker;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nconst markerCodeActionTrigger = {\n    type: 1 /* Invoke */,\n    filter: { include: CodeActionKind.QuickFix }\n};\nlet MarkerHoverParticipant = class MarkerHoverParticipant {\n    constructor(_editor, _markerDecorationsService, _openerService, _languageFeaturesService) {\n        this._editor = _editor;\n        this._markerDecorationsService = _markerDecorationsService;\n        this._openerService = _openerService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this.hoverOrdinal = 5;\n        this.recentMarkerCodeActionsInfo = undefined;\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* Range */) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const marker = this._markerDecorationsService.getMarker(model.uri, d);\n            if (!marker) {\n                continue;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkerHover(this, range, marker));\n        }\n        return result;\n    }\n    renderHoverParts(context, hoverParts) {\n        if (!hoverParts.length) {\n            return Disposable.None;\n        }\n        const disposables = new DisposableStore();\n        hoverParts.forEach(msg => context.fragment.appendChild(this.renderMarkerHover(msg, disposables)));\n        const markerHoverForStatusbar = hoverParts.length === 1 ? hoverParts[0] : hoverParts.sort((a, b) => MarkerSeverity.compare(a.marker.severity, b.marker.severity))[0];\n        this.renderMarkerStatusbar(context, markerHoverForStatusbar, disposables);\n        return disposables;\n    }\n    renderMarkerHover(markerHover, disposables) {\n        const hoverElement = $('div.hover-row');\n        const markerElement = dom.append(hoverElement, $('div.marker.hover-contents'));\n        const { source, message, code, relatedInformation } = markerHover.marker;\n        this._editor.applyFontInfo(markerElement);\n        const messageElement = dom.append(markerElement, $('span'));\n        messageElement.style.whiteSpace = 'pre-wrap';\n        messageElement.innerText = message;\n        if (source || code) {\n            // Code has link\n            if (code && typeof code !== 'string') {\n                const sourceAndCodeElement = $('span');\n                if (source) {\n                    const sourceElement = dom.append(sourceAndCodeElement, $('span'));\n                    sourceElement.innerText = source;\n                }\n                const codeLink = dom.append(sourceAndCodeElement, $('a.code-link'));\n                codeLink.setAttribute('href', code.target.toString());\n                disposables.add(dom.addDisposableListener(codeLink, 'click', (e) => {\n                    this._openerService.open(code.target, { allowCommands: true });\n                    e.preventDefault();\n                    e.stopPropagation();\n                }));\n                const codeElement = dom.append(codeLink, $('span'));\n                codeElement.innerText = code.value;\n                const detailsElement = dom.append(markerElement, sourceAndCodeElement);\n                detailsElement.style.opacity = '0.6';\n                detailsElement.style.paddingLeft = '6px';\n            }\n            else {\n                const detailsElement = dom.append(markerElement, $('span'));\n                detailsElement.style.opacity = '0.6';\n                detailsElement.style.paddingLeft = '6px';\n                detailsElement.innerText = source && code ? `${source}(${code})` : source ? source : `(${code})`;\n            }\n        }\n        if (isNonEmptyArray(relatedInformation)) {\n            for (const { message, resource, startLineNumber, startColumn } of relatedInformation) {\n                const relatedInfoContainer = dom.append(markerElement, $('div'));\n                relatedInfoContainer.style.marginTop = '8px';\n                const a = dom.append(relatedInfoContainer, $('a'));\n                a.innerText = `${basename(resource)}(${startLineNumber}, ${startColumn}): `;\n                a.style.cursor = 'pointer';\n                disposables.add(dom.addDisposableListener(a, 'click', (e) => {\n                    e.stopPropagation();\n                    e.preventDefault();\n                    if (this._openerService) {\n                        this._openerService.open(resource, {\n                            fromUserGesture: true,\n                            editorOptions: { selection: { startLineNumber, startColumn } }\n                        }).catch(onUnexpectedError);\n                    }\n                }));\n                const messageElement = dom.append(relatedInfoContainer, $('span'));\n                messageElement.innerText = message;\n                this._editor.applyFontInfo(messageElement);\n            }\n        }\n        return hoverElement;\n    }\n    renderMarkerStatusbar(context, markerHover, disposables) {\n        if (markerHover.marker.severity === MarkerSeverity.Error || markerHover.marker.severity === MarkerSeverity.Warning || markerHover.marker.severity === MarkerSeverity.Info) {\n            context.statusBar.addAction({\n                label: nls.localize('view problem', \"View Problem\"),\n                commandId: NextMarkerAction.ID,\n                run: () => {\n                    var _a;\n                    context.hide();\n                    (_a = MarkerController.get(this._editor)) === null || _a === void 0 ? void 0 : _a.showAtMarker(markerHover.marker);\n                    this._editor.focus();\n                }\n            });\n        }\n        if (!this._editor.getOption(81 /* readOnly */)) {\n            const quickfixPlaceholderElement = context.statusBar.append($('div'));\n            if (this.recentMarkerCodeActionsInfo) {\n                if (IMarkerData.makeKey(this.recentMarkerCodeActionsInfo.marker) === IMarkerData.makeKey(markerHover.marker)) {\n                    if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\n                        quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\n                    }\n                }\n                else {\n                    this.recentMarkerCodeActionsInfo = undefined;\n                }\n            }\n            const updatePlaceholderDisposable = this.recentMarkerCodeActionsInfo && !this.recentMarkerCodeActionsInfo.hasCodeActions ? Disposable.None : disposables.add(disposableTimeout(() => quickfixPlaceholderElement.textContent = nls.localize('checkingForQuickFixes', \"Checking for quick fixes...\"), 200));\n            if (!quickfixPlaceholderElement.textContent) {\n                // Have some content in here to avoid flickering\n                quickfixPlaceholderElement.textContent = String.fromCharCode(0xA0); // &nbsp;\n            }\n            const codeActionsPromise = this.getCodeActions(markerHover.marker);\n            disposables.add(toDisposable(() => codeActionsPromise.cancel()));\n            codeActionsPromise.then(actions => {\n                updatePlaceholderDisposable.dispose();\n                this.recentMarkerCodeActionsInfo = { marker: markerHover.marker, hasCodeActions: actions.validActions.length > 0 };\n                if (!this.recentMarkerCodeActionsInfo.hasCodeActions) {\n                    actions.dispose();\n                    quickfixPlaceholderElement.textContent = nls.localize('noQuickFixes', \"No quick fixes available\");\n                    return;\n                }\n                quickfixPlaceholderElement.style.display = 'none';\n                let showing = false;\n                disposables.add(toDisposable(() => {\n                    if (!showing) {\n                        actions.dispose();\n                    }\n                }));\n                context.statusBar.addAction({\n                    label: nls.localize('quick fixes', \"Quick Fix...\"),\n                    commandId: QuickFixAction.Id,\n                    run: (target) => {\n                        showing = true;\n                        const controller = QuickFixController.get(this._editor);\n                        const elementPosition = dom.getDomNodePagePosition(target);\n                        // Hide the hover pre-emptively, otherwise the editor can close the code actions\n                        // context menu as well when using keyboard navigation\n                        context.hide();\n                        controller === null || controller === void 0 ? void 0 : controller.showCodeActions(markerCodeActionTrigger, actions, {\n                            x: elementPosition.left + 6,\n                            y: elementPosition.top + elementPosition.height + 6\n                        });\n                    }\n                });\n            }, onUnexpectedError);\n        }\n    }\n    getCodeActions(marker) {\n        return createCancelablePromise(cancellationToken => {\n            return getCodeActions(this._languageFeaturesService.codeActionProvider, this._editor.getModel(), new Range(marker.startLineNumber, marker.startColumn, marker.endLineNumber, marker.endColumn), markerCodeActionTrigger, Progress.None, cancellationToken);\n        });\n    }\n};\nMarkerHoverParticipant = __decorate([\n    __param(1, IMarkerDecorationsService),\n    __param(2, IOpenerService),\n    __param(3, ILanguageFeaturesService)\n], MarkerHoverParticipant);\nexport { MarkerHoverParticipant };\nregisterThemingParticipant((theme, collector) => {\n    const linkFg = theme.getColor(textLinkForeground);\n    if (linkFg) {\n        collector.addRule(`.monaco-hover .hover-contents a.code-link span { color: ${linkFg}; }`);\n    }\n    const activeLinkFg = theme.getColor(textLinkActiveForeground);\n    if (activeLinkFg) {\n        collector.addRule(`.monaco-hover .hover-contents a.code-link span:hover { color: ${activeLinkFg}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { GotoDefinitionAtPositionEditorContribution } from '../../gotoSymbol/browser/link/goToDefinitionAtPosition.js';\nimport { ContentHoverWidget, ContentHoverController } from './contentHover.js';\nimport { MarginHoverWidget } from './marginHover.js';\nimport * as nls from '../../../../nls.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { editorHoverBackground, editorHoverBorder, editorHoverForeground, editorHoverHighlight, editorHoverStatusBarBackground, textCodeBlockBackground, textLinkActiveForeground, textLinkForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { HoverParticipantRegistry } from './hoverTypes.js';\nimport { MarkdownHoverParticipant } from './markdownHoverParticipant.js';\nimport { MarkerHoverParticipant } from './markerHoverParticipant.js';\nlet ModesHoverController = class ModesHoverController {\n    constructor(_editor, _instantiationService, _openerService, _languageService, _contextKeyService) {\n        this._editor = _editor;\n        this._instantiationService = _instantiationService;\n        this._openerService = _openerService;\n        this._languageService = _languageService;\n        this._toUnhook = new DisposableStore();\n        this._isMouseDown = false;\n        this._hoverClicked = false;\n        this._contentWidget = null;\n        this._glyphWidget = null;\n        this._hookEvents();\n        this._didChangeConfigurationHandler = this._editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(53 /* hover */)) {\n                this._unhookEvents();\n                this._hookEvents();\n            }\n        });\n    }\n    static get(editor) {\n        return editor.getContribution(ModesHoverController.ID);\n    }\n    _hookEvents() {\n        const hideWidgetsEventHandler = () => this._hideWidgets();\n        const hoverOpts = this._editor.getOption(53 /* hover */);\n        this._isHoverEnabled = hoverOpts.enabled;\n        this._isHoverSticky = hoverOpts.sticky;\n        if (this._isHoverEnabled) {\n            this._toUnhook.add(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\n            this._toUnhook.add(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\n        }\n        else {\n            this._toUnhook.add(this._editor.onMouseMove((e) => this._onEditorMouseMove(e)));\n            this._toUnhook.add(this._editor.onKeyDown((e) => this._onKeyDown(e)));\n        }\n        this._toUnhook.add(this._editor.onMouseLeave(hideWidgetsEventHandler));\n        this._toUnhook.add(this._editor.onDidChangeModel(hideWidgetsEventHandler));\n        this._toUnhook.add(this._editor.onDidScrollChange((e) => this._onEditorScrollChanged(e)));\n    }\n    _unhookEvents() {\n        this._toUnhook.clear();\n    }\n    _onEditorScrollChanged(e) {\n        if (e.scrollTopChanged || e.scrollLeftChanged) {\n            this._hideWidgets();\n        }\n    }\n    _onEditorMouseDown(mouseEvent) {\n        this._isMouseDown = true;\n        const target = mouseEvent.target;\n        if (target.type === 9 /* CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID) {\n            this._hoverClicked = true;\n            // mouse down on top of content hover widget\n            return;\n        }\n        if (target.type === 12 /* OVERLAY_WIDGET */ && target.detail === MarginHoverWidget.ID) {\n            // mouse down on top of overlay hover widget\n            return;\n        }\n        if (target.type !== 12 /* OVERLAY_WIDGET */) {\n            this._hoverClicked = false;\n        }\n        this._hideWidgets();\n    }\n    _onEditorMouseUp(mouseEvent) {\n        this._isMouseDown = false;\n    }\n    _onEditorMouseMove(mouseEvent) {\n        var _a, _b, _c, _d, _e;\n        const target = mouseEvent.target;\n        if (this._isMouseDown && this._hoverClicked) {\n            return;\n        }\n        if (this._isHoverSticky && target.type === 9 /* CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID) {\n            // mouse moved on top of content hover widget\n            return;\n        }\n        if (this._isHoverSticky && !((_b = (_a = mouseEvent.event.browserEvent.view) === null || _a === void 0 ? void 0 : _a.getSelection()) === null || _b === void 0 ? void 0 : _b.isCollapsed)) {\n            // selected text within content hover widget\n            return;\n        }\n        if (!this._isHoverSticky && target.type === 9 /* CONTENT_WIDGET */ && target.detail === ContentHoverWidget.ID\n            && ((_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.isColorPickerVisible())) {\n            // though the hover is not sticky, the color picker needs to.\n            return;\n        }\n        if (this._isHoverSticky && target.type === 12 /* OVERLAY_WIDGET */ && target.detail === MarginHoverWidget.ID) {\n            // mouse moved on top of overlay hover widget\n            return;\n        }\n        if (!this._isHoverEnabled) {\n            this._hideWidgets();\n            return;\n        }\n        const contentWidget = this._getOrCreateContentWidget();\n        if (contentWidget.maybeShowAt(mouseEvent)) {\n            (_d = this._glyphWidget) === null || _d === void 0 ? void 0 : _d.hide();\n            return;\n        }\n        if (target.type === 2 /* GUTTER_GLYPH_MARGIN */ && target.position) {\n            (_e = this._contentWidget) === null || _e === void 0 ? void 0 : _e.hide();\n            if (!this._glyphWidget) {\n                this._glyphWidget = new MarginHoverWidget(this._editor, this._languageService, this._openerService);\n            }\n            this._glyphWidget.startShowingAt(target.position.lineNumber);\n            return;\n        }\n        this._hideWidgets();\n    }\n    _onKeyDown(e) {\n        if (e.keyCode !== 5 /* Ctrl */ && e.keyCode !== 6 /* Alt */ && e.keyCode !== 57 /* Meta */ && e.keyCode !== 4 /* Shift */) {\n            // Do not hide hover when a modifier key is pressed\n            this._hideWidgets();\n        }\n    }\n    _hideWidgets() {\n        var _a, _b, _c;\n        if ((this._isMouseDown && this._hoverClicked && ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible()))) {\n            return;\n        }\n        this._hoverClicked = false;\n        (_b = this._glyphWidget) === null || _b === void 0 ? void 0 : _b.hide();\n        (_c = this._contentWidget) === null || _c === void 0 ? void 0 : _c.hide();\n    }\n    _getOrCreateContentWidget() {\n        if (!this._contentWidget) {\n            this._contentWidget = this._instantiationService.createInstance(ContentHoverController, this._editor);\n        }\n        return this._contentWidget;\n    }\n    isColorPickerVisible() {\n        var _a;\n        return ((_a = this._contentWidget) === null || _a === void 0 ? void 0 : _a.isColorPickerVisible()) || false;\n    }\n    showContentHover(range, mode, focus) {\n        this._getOrCreateContentWidget().startShowingAtRange(range, mode, focus);\n    }\n    dispose() {\n        var _a, _b;\n        this._unhookEvents();\n        this._toUnhook.dispose();\n        this._didChangeConfigurationHandler.dispose();\n        (_a = this._glyphWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n        (_b = this._contentWidget) === null || _b === void 0 ? void 0 : _b.dispose();\n    }\n};\nModesHoverController.ID = 'editor.contrib.hover';\nModesHoverController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IOpenerService),\n    __param(3, ILanguageService),\n    __param(4, IContextKeyService)\n], ModesHoverController);\nexport { ModesHoverController };\nclass ShowHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.showHover',\n            label: nls.localize({\n                key: 'showHover',\n                comment: [\n                    'Label for action that will trigger the showing of a hover in the editor.',\n                    'This allows for users to show the hover without using the mouse.'\n                ]\n            }, \"Show Hover\"),\n            alias: 'Show Hover',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KeyK */, 2048 /* CtrlCmd */ | 39 /* KeyI */),\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        let controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const position = editor.getPosition();\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const focus = editor.getOption(2 /* accessibilitySupport */) === 2 /* Enabled */;\n        controller.showContentHover(range, 1 /* Immediate */, focus);\n    }\n}\nclass ShowDefinitionPreviewHoverAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.showDefinitionPreviewHover',\n            label: nls.localize({\n                key: 'showDefinitionPreviewHover',\n                comment: [\n                    'Label for action that will trigger the showing of definition preview hover in the editor.',\n                    'This allows for users to show the definition preview hover without using the mouse.'\n                ]\n            }, \"Show Definition Preview Hover\"),\n            alias: 'Show Definition Preview Hover',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const controller = ModesHoverController.get(editor);\n        if (!controller) {\n            return;\n        }\n        const position = editor.getPosition();\n        if (!position) {\n            return;\n        }\n        const range = new Range(position.lineNumber, position.column, position.lineNumber, position.column);\n        const goto = GotoDefinitionAtPositionEditorContribution.get(editor);\n        if (!goto) {\n            return;\n        }\n        const promise = goto.startFindDefinitionFromCursor(position);\n        promise.then(() => {\n            controller.showContentHover(range, 1 /* Immediate */, true);\n        });\n    }\n}\nregisterEditorContribution(ModesHoverController.ID, ModesHoverController);\nregisterEditorAction(ShowHoverAction);\nregisterEditorAction(ShowDefinitionPreviewHoverAction);\nHoverParticipantRegistry.register(MarkdownHoverParticipant);\nHoverParticipantRegistry.register(MarkerHoverParticipant);\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const editorHoverHighlightColor = theme.getColor(editorHoverHighlight);\n    if (editorHoverHighlightColor) {\n        collector.addRule(`.monaco-editor .hoverHighlight { background-color: ${editorHoverHighlightColor}; }`);\n    }\n    const hoverBackground = theme.getColor(editorHoverBackground);\n    if (hoverBackground) {\n        collector.addRule(`.monaco-editor .monaco-hover { background-color: ${hoverBackground}; }`);\n    }\n    const hoverBorder = theme.getColor(editorHoverBorder);\n    if (hoverBorder) {\n        collector.addRule(`.monaco-editor .monaco-hover { border: 1px solid ${hoverBorder}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover .hover-row:not(:first-child):not(:empty) { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-top: 1px solid ${hoverBorder.transparent(0.5)}; }`);\n        collector.addRule(`.monaco-editor .monaco-hover hr { border-bottom: 0px solid ${hoverBorder.transparent(0.5)}; }`);\n    }\n    const link = theme.getColor(textLinkForeground);\n    if (link) {\n        collector.addRule(`.monaco-editor .monaco-hover a { color: ${link}; }`);\n    }\n    const linkHover = theme.getColor(textLinkActiveForeground);\n    if (linkHover) {\n        collector.addRule(`.monaco-editor .monaco-hover a:hover { color: ${linkHover}; }`);\n    }\n    const hoverForeground = theme.getColor(editorHoverForeground);\n    if (hoverForeground) {\n        collector.addRule(`.monaco-editor .monaco-hover { color: ${hoverForeground}; }`);\n    }\n    const actionsBackground = theme.getColor(editorHoverStatusBarBackground);\n    if (actionsBackground) {\n        collector.addRule(`.monaco-editor .monaco-hover .hover-row .actions { background-color: ${actionsBackground}; }`);\n    }\n    const codeBackground = theme.getColor(textCodeBlockBackground);\n    if (codeBackground) {\n        collector.addRule(`.monaco-editor .monaco-hover code { background-color: ${codeBackground}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport class HoverRangeAnchor {\n    constructor(priority, range) {\n        this.priority = priority;\n        this.range = range;\n        this.type = 1 /* Range */;\n    }\n    equals(other) {\n        return (other.type === 1 /* Range */ && this.range.equalsRange(other.range));\n    }\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\n        return (lastAnchor.type === 1 /* Range */ && showAtPosition.lineNumber === this.range.startLineNumber);\n    }\n}\nexport class HoverForeignElementAnchor {\n    constructor(priority, owner, range) {\n        this.priority = priority;\n        this.owner = owner;\n        this.range = range;\n        this.type = 2 /* ForeignElement */;\n    }\n    equals(other) {\n        return (other.type === 2 /* ForeignElement */ && this.owner === other.owner);\n    }\n    canAdoptVisibleHover(lastAnchor, showAtPosition) {\n        return (lastAnchor.type === 2 /* ForeignElement */ && this.owner === lastAnchor.owner);\n    }\n}\nexport const HoverParticipantRegistry = (new class HoverParticipantRegistry {\n    constructor() {\n        this._participants = [];\n    }\n    register(ctor) {\n        this._participants.push(ctor);\n    }\n    getAll() {\n        return this._participants;\n    }\n}());\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { asArray } from '../../../../base/common/arrays.js';\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { getHover } from './getHover.js';\nimport * as nls from '../../../../nls.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nconst $ = dom.$;\nexport class MarkdownHover {\n    constructor(owner, range, contents, ordinal) {\n        this.owner = owner;\n        this.range = range;\n        this.contents = contents;\n        this.ordinal = ordinal;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n}\nlet MarkdownHoverParticipant = class MarkdownHoverParticipant {\n    constructor(_editor, _languageService, _openerService, _configurationService, _languageFeaturesService) {\n        this._editor = _editor;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this._configurationService = _configurationService;\n        this._languageFeaturesService = _languageFeaturesService;\n        this.hoverOrdinal = 2;\n    }\n    createLoadingMessage(anchor) {\n        return new MarkdownHover(this, anchor.range, [new MarkdownString().appendText(nls.localize('modesContentHover.loading', \"Loading...\"))], 2000);\n    }\n    computeSync(anchor, lineDecorations) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* Range */) {\n            return [];\n        }\n        const model = this._editor.getModel();\n        const lineNumber = anchor.range.startLineNumber;\n        const maxColumn = model.getLineMaxColumn(lineNumber);\n        const result = [];\n        let index = 1000;\n        const lineLength = model.getLineLength(lineNumber);\n        const languageId = model.getLanguageIdAtPosition(anchor.range.startLineNumber, anchor.range.startColumn);\n        const maxTokenizationLineLength = this._configurationService.getValue('editor.maxTokenizationLineLength', {\n            overrideIdentifier: languageId\n        });\n        if (typeof maxTokenizationLineLength === 'number' && lineLength >= maxTokenizationLineLength) {\n            result.push(new MarkdownHover(this, anchor.range, [{\n                    value: nls.localize('too many characters', \"Tokenization is skipped for long lines for performance reasons. This can be configured via `editor.maxTokenizationLineLength`.\")\n                }], index++));\n        }\n        for (const d of lineDecorations) {\n            const startColumn = (d.range.startLineNumber === lineNumber) ? d.range.startColumn : 1;\n            const endColumn = (d.range.endLineNumber === lineNumber) ? d.range.endColumn : maxColumn;\n            const hoverMessage = d.options.hoverMessage;\n            if (!hoverMessage || isEmptyMarkdownString(hoverMessage)) {\n                continue;\n            }\n            const range = new Range(anchor.range.startLineNumber, startColumn, anchor.range.startLineNumber, endColumn);\n            result.push(new MarkdownHover(this, range, asArray(hoverMessage), index++));\n        }\n        return result;\n    }\n    computeAsync(anchor, lineDecorations, token) {\n        if (!this._editor.hasModel() || anchor.type !== 1 /* Range */) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const model = this._editor.getModel();\n        if (!this._languageFeaturesService.hoverProvider.has(model)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        const position = new Position(anchor.range.startLineNumber, anchor.range.startColumn);\n        return getHover(this._languageFeaturesService.hoverProvider, model, position, token)\n            .filter(item => !isEmptyMarkdownString(item.hover.contents))\n            .map(item => {\n            const rng = item.hover.range ? Range.lift(item.hover.range) : anchor.range;\n            return new MarkdownHover(this, rng, item.hover.contents, item.ordinal);\n        });\n    }\n    renderHoverParts(context, hoverParts) {\n        return renderMarkdownHovers(context, hoverParts, this._editor, this._languageService, this._openerService);\n    }\n};\nMarkdownHoverParticipant = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService),\n    __param(4, ILanguageFeaturesService)\n], MarkdownHoverParticipant);\nexport { MarkdownHoverParticipant };\nexport function renderMarkdownHovers(context, hoverParts, editor, languageService, openerService) {\n    // Sort hover parts to keep them stable since they might come in async, out-of-order\n    hoverParts.sort((a, b) => a.ordinal - b.ordinal);\n    const disposables = new DisposableStore();\n    for (const hoverPart of hoverParts) {\n        for (const contents of hoverPart.contents) {\n            if (isEmptyMarkdownString(contents)) {\n                continue;\n            }\n            const markdownHoverElement = $('div.hover-row.markdown-hover');\n            const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n            const renderer = disposables.add(new MarkdownRenderer({ editor }, languageService, openerService));\n            disposables.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const renderedContents = disposables.add(renderer.render(contents));\n            hoverContentsElement.appendChild(renderedContents.element);\n            context.fragment.appendChild(markdownHoverElement);\n        }\n    }\n    return disposables;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Selection } from '../../../common/core/selection.js';\nexport class InPlaceReplaceCommand {\n    constructor(editRange, originalSelection, text) {\n        this._editRange = editRange;\n        this._originalSelection = originalSelection;\n        this._text = text;\n    }\n    getEditOperations(model, builder) {\n        builder.addTrackedEditOperation(this._editRange, this._text);\n    }\n    computeCursorState(model, helper) {\n        const inverseEditOperations = helper.getInverseEditOperations();\n        const srcRange = inverseEditOperations[0].range;\n        if (!this._originalSelection.isEmpty()) {\n            // Preserve selection and extends to typed text\n            return new Selection(srcRange.endLineNumber, srcRange.endColumn - this._text.length, srcRange.endLineNumber, srcRange.endColumn);\n        }\n        return new Selection(srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn), srcRange.endLineNumber, Math.min(this._originalSelection.positionColumn, srcRange.endColumn));\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport { createCancelablePromise, timeout } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { EditorState } from '../../editorState/browser/editorState.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../../common/services/editorWorker.js';\nimport { editorBracketMatchBorder } from '../../../common/core/editorColorRegistry.js';\nimport * as nls from '../../../../nls.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { InPlaceReplaceCommand } from './inPlaceReplaceCommand.js';\nlet InPlaceReplaceController = class InPlaceReplaceController {\n    constructor(editor, editorWorkerService) {\n        this.decorationIds = [];\n        this.editor = editor;\n        this.editorWorkerService = editorWorkerService;\n    }\n    static get(editor) {\n        return editor.getContribution(InPlaceReplaceController.ID);\n    }\n    dispose() {\n    }\n    run(source, up) {\n        // cancel any pending request\n        if (this.currentRequest) {\n            this.currentRequest.cancel();\n        }\n        const editorSelection = this.editor.getSelection();\n        const model = this.editor.getModel();\n        if (!model || !editorSelection) {\n            return undefined;\n        }\n        let selection = editorSelection;\n        if (selection.startLineNumber !== selection.endLineNumber) {\n            // Can't accept multiline selection\n            return undefined;\n        }\n        const state = new EditorState(this.editor, 1 /* Value */ | 4 /* Position */);\n        const modelURI = model.uri;\n        if (!this.editorWorkerService.canNavigateValueSet(modelURI)) {\n            return Promise.resolve(undefined);\n        }\n        this.currentRequest = createCancelablePromise(token => this.editorWorkerService.navigateValueSet(modelURI, selection, up));\n        return this.currentRequest.then(result => {\n            if (!result || !result.range || !result.value) {\n                // No proper result\n                return;\n            }\n            if (!state.validate(this.editor)) {\n                // state has changed\n                return;\n            }\n            // Selection\n            let editRange = Range.lift(result.range);\n            let highlightRange = result.range;\n            let diff = result.value.length - (selection.endColumn - selection.startColumn);\n            // highlight\n            highlightRange = {\n                startLineNumber: highlightRange.startLineNumber,\n                startColumn: highlightRange.startColumn,\n                endLineNumber: highlightRange.endLineNumber,\n                endColumn: highlightRange.startColumn + result.value.length\n            };\n            if (diff > 1) {\n                selection = new Selection(selection.startLineNumber, selection.startColumn, selection.endLineNumber, selection.endColumn + diff - 1);\n            }\n            // Insert new text\n            const command = new InPlaceReplaceCommand(editRange, selection, result.value);\n            this.editor.pushUndoStop();\n            this.editor.executeCommand(source, command);\n            this.editor.pushUndoStop();\n            // add decoration\n            this.decorationIds = this.editor.deltaDecorations(this.decorationIds, [{\n                    range: highlightRange,\n                    options: InPlaceReplaceController.DECORATION\n                }]);\n            // remove decoration after delay\n            if (this.decorationRemover) {\n                this.decorationRemover.cancel();\n            }\n            this.decorationRemover = timeout(350);\n            this.decorationRemover.then(() => this.decorationIds = this.editor.deltaDecorations(this.decorationIds, [])).catch(onUnexpectedError);\n        }).catch(onUnexpectedError);\n    }\n};\nInPlaceReplaceController.ID = 'editor.contrib.inPlaceReplaceController';\nInPlaceReplaceController.DECORATION = ModelDecorationOptions.register({\n    description: 'in-place-replace',\n    className: 'valueSetReplacement'\n});\nInPlaceReplaceController = __decorate([\n    __param(1, IEditorWorkerService)\n], InPlaceReplaceController);\nclass InPlaceReplaceUp extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.up',\n            label: nls.localize('InPlaceReplaceAction.previous.label', \"Replace with Previous Value\"),\n            alias: 'Replace with Previous Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 82 /* Comma */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, true);\n    }\n}\nclass InPlaceReplaceDown extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inPlaceReplace.down',\n            label: nls.localize('InPlaceReplaceAction.next.label', \"Replace with Next Value\"),\n            alias: 'Replace with Next Value',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 84 /* Period */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const controller = InPlaceReplaceController.get(editor);\n        if (!controller) {\n            return Promise.resolve(undefined);\n        }\n        return controller.run(this.id, false);\n    }\n}\nregisterEditorContribution(InPlaceReplaceController.ID, InPlaceReplaceController);\nregisterEditorAction(InPlaceReplaceUp);\nregisterEditorAction(InPlaceReplaceDown);\nregisterThemingParticipant((theme, collector) => {\n    const border = theme.getColor(editorBracketMatchBorder);\n    if (border) {\n        collector.addRule(`.monaco-editor.vs .valueSetReplacement { outline: solid 2px ${border}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function getSpaceCnt(str, tabSize) {\n    let spacesCnt = 0;\n    for (let i = 0; i < str.length; i++) {\n        if (str.charAt(i) === '\\t') {\n            spacesCnt += tabSize;\n        }\n        else {\n            spacesCnt++;\n        }\n    }\n    return spacesCnt;\n}\nexport function generateIndent(spacesCnt, tabSize, insertSpaces) {\n    spacesCnt = spacesCnt < 0 ? 0 : spacesCnt;\n    let result = '';\n    if (!insertSpaces) {\n        let tabsCnt = Math.floor(spacesCnt / tabSize);\n        spacesCnt = spacesCnt % tabSize;\n        for (let i = 0; i < tabsCnt; i++) {\n            result += '\\t';\n        }\n    }\n    for (let i = 0; i < spacesCnt; i++) {\n        result += ' ';\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ShiftCommand } from '../../../common/commands/shiftCommand.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ILanguageConfigurationService, LanguageConfigurationRegistry } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport * as indentUtils from './indentUtils.js';\nimport * as nls from '../../../../nls.js';\nimport { IQuickInputService } from '../../../../platform/quickinput/common/quickInput.js';\nimport { normalizeIndentation } from '../../../common/core/indentation.js';\nexport function getReindentEditOperations(model, languageConfigurationService, startLineNumber, endLineNumber, inheritedIndent) {\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n        // Model is empty\n        return [];\n    }\n    const indentationRules = languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).indentationRules;\n    if (!indentationRules) {\n        return [];\n    }\n    endLineNumber = Math.min(endLineNumber, model.getLineCount());\n    // Skip `unIndentedLinePattern` lines\n    while (startLineNumber <= endLineNumber) {\n        if (!indentationRules.unIndentedLinePattern) {\n            break;\n        }\n        let text = model.getLineContent(startLineNumber);\n        if (!indentationRules.unIndentedLinePattern.test(text)) {\n            break;\n        }\n        startLineNumber++;\n    }\n    if (startLineNumber > endLineNumber - 1) {\n        return [];\n    }\n    const { tabSize, indentSize, insertSpaces } = model.getOptions();\n    const shiftIndent = (indentation, count) => {\n        count = count || 1;\n        return ShiftCommand.shiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\n    };\n    const unshiftIndent = (indentation, count) => {\n        count = count || 1;\n        return ShiftCommand.unshiftIndent(indentation, indentation.length + count, tabSize, indentSize, insertSpaces);\n    };\n    let indentEdits = [];\n    // indentation being passed to lines below\n    let globalIndent;\n    // Calculate indentation for the first line\n    // If there is no passed-in indentation, we use the indentation of the first line as base.\n    let currentLineText = model.getLineContent(startLineNumber);\n    let adjustedLineContent = currentLineText;\n    if (inheritedIndent !== undefined && inheritedIndent !== null) {\n        globalIndent = inheritedIndent;\n        let oldIndentation = strings.getLeadingWhitespace(currentLineText);\n        adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\n            globalIndent = unshiftIndent(globalIndent);\n            adjustedLineContent = globalIndent + currentLineText.substring(oldIndentation.length);\n        }\n        if (currentLineText !== adjustedLineContent) {\n            indentEdits.push(EditOperation.replaceMove(new Selection(startLineNumber, 1, startLineNumber, oldIndentation.length + 1), normalizeIndentation(globalIndent, indentSize, insertSpaces)));\n        }\n    }\n    else {\n        globalIndent = strings.getLeadingWhitespace(currentLineText);\n    }\n    // idealIndentForNextLine doesn't equal globalIndent when there is a line matching `indentNextLinePattern`.\n    let idealIndentForNextLine = globalIndent;\n    if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n        globalIndent = shiftIndent(globalIndent);\n    }\n    else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\n        idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n    }\n    startLineNumber++;\n    // Calculate indentation adjustment for all following lines\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        let text = model.getLineContent(lineNumber);\n        let oldIndentation = strings.getLeadingWhitespace(text);\n        let adjustedLineContent = idealIndentForNextLine + text.substring(oldIndentation.length);\n        if (indentationRules.decreaseIndentPattern && indentationRules.decreaseIndentPattern.test(adjustedLineContent)) {\n            idealIndentForNextLine = unshiftIndent(idealIndentForNextLine);\n            globalIndent = unshiftIndent(globalIndent);\n        }\n        if (oldIndentation !== idealIndentForNextLine) {\n            indentEdits.push(EditOperation.replaceMove(new Selection(lineNumber, 1, lineNumber, oldIndentation.length + 1), normalizeIndentation(idealIndentForNextLine, indentSize, insertSpaces)));\n        }\n        // calculate idealIndentForNextLine\n        if (indentationRules.unIndentedLinePattern && indentationRules.unIndentedLinePattern.test(text)) {\n            // In reindent phase, if the line matches `unIndentedLinePattern` we inherit indentation from above lines\n            // but don't change globalIndent and idealIndentForNextLine.\n            continue;\n        }\n        else if (indentationRules.increaseIndentPattern && indentationRules.increaseIndentPattern.test(adjustedLineContent)) {\n            globalIndent = shiftIndent(globalIndent);\n            idealIndentForNextLine = globalIndent;\n        }\n        else if (indentationRules.indentNextLinePattern && indentationRules.indentNextLinePattern.test(adjustedLineContent)) {\n            idealIndentForNextLine = shiftIndent(idealIndentForNextLine);\n        }\n        else {\n            idealIndentForNextLine = globalIndent;\n        }\n    }\n    return indentEdits;\n}\nexport class IndentationToSpacesAction extends EditorAction {\n    constructor() {\n        super({\n            id: IndentationToSpacesAction.ID,\n            label: nls.localize('indentationToSpaces', \"Convert Indentation to Spaces\"),\n            alias: 'Convert Indentation to Spaces',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        let model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        let modelOpts = model.getOptions();\n        let selection = editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        const command = new IndentationToSpacesCommand(selection, modelOpts.tabSize);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n        model.updateOptions({\n            insertSpaces: true\n        });\n    }\n}\nIndentationToSpacesAction.ID = 'editor.action.indentationToSpaces';\nexport class IndentationToTabsAction extends EditorAction {\n    constructor() {\n        super({\n            id: IndentationToTabsAction.ID,\n            label: nls.localize('indentationToTabs', \"Convert Indentation to Tabs\"),\n            alias: 'Convert Indentation to Tabs',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        let model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        let modelOpts = model.getOptions();\n        let selection = editor.getSelection();\n        if (!selection) {\n            return;\n        }\n        const command = new IndentationToTabsCommand(selection, modelOpts.tabSize);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n        model.updateOptions({\n            insertSpaces: false\n        });\n    }\n}\nIndentationToTabsAction.ID = 'editor.action.indentationToTabs';\nexport class ChangeIndentationSizeAction extends EditorAction {\n    constructor(insertSpaces, opts) {\n        super(opts);\n        this.insertSpaces = insertSpaces;\n    }\n    run(accessor, editor) {\n        const quickInputService = accessor.get(IQuickInputService);\n        const modelService = accessor.get(IModelService);\n        let model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n        const picks = [1, 2, 3, 4, 5, 6, 7, 8].map(n => ({\n            id: n.toString(),\n            label: n.toString(),\n            // add description for tabSize value set in the configuration\n            description: n === creationOpts.tabSize ? nls.localize('configuredTabSize', \"Configured Tab Size\") : undefined\n        }));\n        // auto focus the tabSize set for the current editor\n        const autoFocusIndex = Math.min(model.getOptions().tabSize - 1, 7);\n        setTimeout(() => {\n            quickInputService.pick(picks, { placeHolder: nls.localize({ key: 'selectTabWidth', comment: ['Tab corresponds to the tab key'] }, \"Select Tab Size for Current File\"), activeItem: picks[autoFocusIndex] }).then(pick => {\n                if (pick) {\n                    if (model && !model.isDisposed()) {\n                        model.updateOptions({\n                            tabSize: parseInt(pick.label, 10),\n                            insertSpaces: this.insertSpaces\n                        });\n                    }\n                }\n            });\n        }, 50 /* quick input is sensitive to being opened so soon after another */);\n    }\n}\nexport class IndentUsingTabs extends ChangeIndentationSizeAction {\n    constructor() {\n        super(false, {\n            id: IndentUsingTabs.ID,\n            label: nls.localize('indentUsingTabs', \"Indent Using Tabs\"),\n            alias: 'Indent Using Tabs',\n            precondition: undefined\n        });\n    }\n}\nIndentUsingTabs.ID = 'editor.action.indentUsingTabs';\nexport class IndentUsingSpaces extends ChangeIndentationSizeAction {\n    constructor() {\n        super(true, {\n            id: IndentUsingSpaces.ID,\n            label: nls.localize('indentUsingSpaces', \"Indent Using Spaces\"),\n            alias: 'Indent Using Spaces',\n            precondition: undefined\n        });\n    }\n}\nIndentUsingSpaces.ID = 'editor.action.indentUsingSpaces';\nexport class DetectIndentation extends EditorAction {\n    constructor() {\n        super({\n            id: DetectIndentation.ID,\n            label: nls.localize('detectIndentation', \"Detect Indentation from Content\"),\n            alias: 'Detect Indentation from Content',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const modelService = accessor.get(IModelService);\n        let model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        const creationOpts = modelService.getCreationOptions(model.getLanguageId(), model.uri, model.isForSimpleWidget);\n        model.detectIndentation(creationOpts.insertSpaces, creationOpts.tabSize);\n    }\n}\nDetectIndentation.ID = 'editor.action.detectIndentation';\nexport class ReindentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.reindentlines',\n            label: nls.localize('editor.reindentlines', \"Reindent Lines\"),\n            alias: 'Reindent Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        let model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        let edits = getReindentEditOperations(model, languageConfigurationService, 1, model.getLineCount());\n        if (edits.length > 0) {\n            editor.pushUndoStop();\n            editor.executeEdits(this.id, edits);\n            editor.pushUndoStop();\n        }\n    }\n}\nexport class ReindentSelectedLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.reindentselectedlines',\n            label: nls.localize('editor.reindentselectedlines', \"Reindent Selected Lines\"),\n            alias: 'Reindent Selected Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        const languageConfigurationService = accessor.get(ILanguageConfigurationService);\n        let model = editor.getModel();\n        if (!model) {\n            return;\n        }\n        let selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        let edits = [];\n        for (let selection of selections) {\n            let startLineNumber = selection.startLineNumber;\n            let endLineNumber = selection.endLineNumber;\n            if (startLineNumber !== endLineNumber && selection.endColumn === 1) {\n                endLineNumber--;\n            }\n            if (startLineNumber === 1) {\n                if (startLineNumber === endLineNumber) {\n                    continue;\n                }\n            }\n            else {\n                startLineNumber--;\n            }\n            let editOperations = getReindentEditOperations(model, languageConfigurationService, startLineNumber, endLineNumber);\n            edits.push(...editOperations);\n        }\n        if (edits.length > 0) {\n            editor.pushUndoStop();\n            editor.executeEdits(this.id, edits);\n            editor.pushUndoStop();\n        }\n    }\n}\nexport class AutoIndentOnPasteCommand {\n    constructor(edits, initialSelection) {\n        this._initialSelection = initialSelection;\n        this._edits = [];\n        this._selectionId = null;\n        for (let edit of edits) {\n            if (edit.range && typeof edit.text === 'string') {\n                this._edits.push(edit);\n            }\n        }\n    }\n    getEditOperations(model, builder) {\n        for (let edit of this._edits) {\n            builder.addEditOperation(Range.lift(edit.range), edit.text);\n        }\n        let selectionIsSet = false;\n        if (Array.isArray(this._edits) && this._edits.length === 1 && this._initialSelection.isEmpty()) {\n            if (this._edits[0].range.startColumn === this._initialSelection.endColumn &&\n                this._edits[0].range.startLineNumber === this._initialSelection.endLineNumber) {\n                selectionIsSet = true;\n                this._selectionId = builder.trackSelection(this._initialSelection, true);\n            }\n            else if (this._edits[0].range.endColumn === this._initialSelection.startColumn &&\n                this._edits[0].range.endLineNumber === this._initialSelection.startLineNumber) {\n                selectionIsSet = true;\n                this._selectionId = builder.trackSelection(this._initialSelection, false);\n            }\n        }\n        if (!selectionIsSet) {\n            this._selectionId = builder.trackSelection(this._initialSelection);\n        }\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._selectionId);\n    }\n}\nexport class AutoIndentOnPaste {\n    constructor(editor) {\n        this.callOnDispose = new DisposableStore();\n        this.callOnModel = new DisposableStore();\n        this.editor = editor;\n        this.callOnDispose.add(editor.onDidChangeConfiguration(() => this.update()));\n        this.callOnDispose.add(editor.onDidChangeModel(() => this.update()));\n        this.callOnDispose.add(editor.onDidChangeModelLanguage(() => this.update()));\n    }\n    update() {\n        // clean up\n        this.callOnModel.clear();\n        // we are disabled\n        if (this.editor.getOption(9 /* autoIndent */) < 4 /* Full */ || this.editor.getOption(48 /* formatOnPaste */)) {\n            return;\n        }\n        // no model\n        if (!this.editor.hasModel()) {\n            return;\n        }\n        this.callOnModel.add(this.editor.onDidPaste(({ range }) => {\n            this.trigger(range);\n        }));\n    }\n    trigger(range) {\n        let selections = this.editor.getSelections();\n        if (selections === null || selections.length > 1) {\n            return;\n        }\n        const model = this.editor.getModel();\n        if (!model) {\n            return;\n        }\n        if (!model.isCheapToTokenize(range.getStartPosition().lineNumber)) {\n            return;\n        }\n        const autoIndent = this.editor.getOption(9 /* autoIndent */);\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\n        let textEdits = [];\n        let indentConverter = {\n            shiftIndent: (indentation) => {\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            },\n            unshiftIndent: (indentation) => {\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            }\n        };\n        let startLineNumber = range.startLineNumber;\n        while (startLineNumber <= range.endLineNumber) {\n            if (this.shouldIgnoreLine(model, startLineNumber)) {\n                startLineNumber++;\n                continue;\n            }\n            break;\n        }\n        if (startLineNumber > range.endLineNumber) {\n            return;\n        }\n        let firstLineText = model.getLineContent(startLineNumber);\n        if (!/\\S/.test(firstLineText.substring(0, range.startColumn - 1))) {\n            const indentOfFirstLine = LanguageConfigurationRegistry.getGoodIndentForLine(autoIndent, model, model.getLanguageId(), startLineNumber, indentConverter);\n            if (indentOfFirstLine !== null) {\n                let oldIndentation = strings.getLeadingWhitespace(firstLineText);\n                let newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\n                let oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                if (newSpaceCnt !== oldSpaceCnt) {\n                    let newIndent = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                    textEdits.push({\n                        range: new Range(startLineNumber, 1, startLineNumber, oldIndentation.length + 1),\n                        text: newIndent\n                    });\n                    firstLineText = newIndent + firstLineText.substr(oldIndentation.length);\n                }\n                else {\n                    let indentMetadata = LanguageConfigurationRegistry.getIndentMetadata(model, startLineNumber);\n                    if (indentMetadata === 0 || indentMetadata === 8 /* UNINDENT_MASK */) {\n                        // we paste content into a line where only contains whitespaces\n                        // after pasting, the indentation of the first line is already correct\n                        // the first line doesn't match any indentation rule\n                        // then no-op.\n                        return;\n                    }\n                }\n            }\n        }\n        const firstLineNumber = startLineNumber;\n        // ignore empty or ignored lines\n        while (startLineNumber < range.endLineNumber) {\n            if (!/\\S/.test(model.getLineContent(startLineNumber + 1))) {\n                startLineNumber++;\n                continue;\n            }\n            break;\n        }\n        if (startLineNumber !== range.endLineNumber) {\n            let virtualModel = {\n                getLineTokens: (lineNumber) => {\n                    return model.getLineTokens(lineNumber);\n                },\n                getLanguageId: () => {\n                    return model.getLanguageId();\n                },\n                getLanguageIdAtPosition: (lineNumber, column) => {\n                    return model.getLanguageIdAtPosition(lineNumber, column);\n                },\n                getLineContent: (lineNumber) => {\n                    if (lineNumber === firstLineNumber) {\n                        return firstLineText;\n                    }\n                    else {\n                        return model.getLineContent(lineNumber);\n                    }\n                }\n            };\n            let indentOfSecondLine = LanguageConfigurationRegistry.getGoodIndentForLine(autoIndent, virtualModel, model.getLanguageId(), startLineNumber + 1, indentConverter);\n            if (indentOfSecondLine !== null) {\n                let newSpaceCntOfSecondLine = indentUtils.getSpaceCnt(indentOfSecondLine, tabSize);\n                let oldSpaceCntOfSecondLine = indentUtils.getSpaceCnt(strings.getLeadingWhitespace(model.getLineContent(startLineNumber + 1)), tabSize);\n                if (newSpaceCntOfSecondLine !== oldSpaceCntOfSecondLine) {\n                    let spaceCntOffset = newSpaceCntOfSecondLine - oldSpaceCntOfSecondLine;\n                    for (let i = startLineNumber + 1; i <= range.endLineNumber; i++) {\n                        let lineContent = model.getLineContent(i);\n                        let originalIndent = strings.getLeadingWhitespace(lineContent);\n                        let originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\n                        let newSpacesCnt = originalSpacesCnt + spaceCntOffset;\n                        let newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\n                        if (newIndent !== originalIndent) {\n                            textEdits.push({\n                                range: new Range(i, 1, i, originalIndent.length + 1),\n                                text: newIndent\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        if (textEdits.length > 0) {\n            this.editor.pushUndoStop();\n            let cmd = new AutoIndentOnPasteCommand(textEdits, this.editor.getSelection());\n            this.editor.executeCommand('autoIndentOnPaste', cmd);\n            this.editor.pushUndoStop();\n        }\n    }\n    shouldIgnoreLine(model, lineNumber) {\n        model.forceTokenization(lineNumber);\n        let nonWhitespaceColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        if (nonWhitespaceColumn === 0) {\n            return true;\n        }\n        let tokens = model.getLineTokens(lineNumber);\n        if (tokens.getCount() > 0) {\n            let firstNonWhitespaceTokenIndex = tokens.findTokenIndexAtOffset(nonWhitespaceColumn);\n            if (firstNonWhitespaceTokenIndex >= 0 && tokens.getStandardTokenType(firstNonWhitespaceTokenIndex) === 1 /* Comment */) {\n                return true;\n            }\n        }\n        return false;\n    }\n    dispose() {\n        this.callOnDispose.dispose();\n        this.callOnModel.dispose();\n    }\n}\nAutoIndentOnPaste.ID = 'editor.contrib.autoIndentOnPaste';\nfunction getIndentationEditOperations(model, builder, tabSize, tabsToSpaces) {\n    if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n        // Model is empty\n        return;\n    }\n    let spaces = '';\n    for (let i = 0; i < tabSize; i++) {\n        spaces += ' ';\n    }\n    let spacesRegExp = new RegExp(spaces, 'gi');\n    for (let lineNumber = 1, lineCount = model.getLineCount(); lineNumber <= lineCount; lineNumber++) {\n        let lastIndentationColumn = model.getLineFirstNonWhitespaceColumn(lineNumber);\n        if (lastIndentationColumn === 0) {\n            lastIndentationColumn = model.getLineMaxColumn(lineNumber);\n        }\n        if (lastIndentationColumn === 1) {\n            continue;\n        }\n        const originalIndentationRange = new Range(lineNumber, 1, lineNumber, lastIndentationColumn);\n        const originalIndentation = model.getValueInRange(originalIndentationRange);\n        const newIndentation = (tabsToSpaces\n            ? originalIndentation.replace(/\\t/ig, spaces)\n            : originalIndentation.replace(spacesRegExp, '\\t'));\n        builder.addEditOperation(originalIndentationRange, newIndentation);\n    }\n}\nexport class IndentationToSpacesCommand {\n    constructor(selection, tabSize) {\n        this.selection = selection;\n        this.tabSize = tabSize;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        this.selectionId = builder.trackSelection(this.selection);\n        getIndentationEditOperations(model, builder, this.tabSize, true);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n}\nexport class IndentationToTabsCommand {\n    constructor(selection, tabSize) {\n        this.selection = selection;\n        this.tabSize = tabSize;\n        this.selectionId = null;\n    }\n    getEditOperations(model, builder) {\n        this.selectionId = builder.trackSelection(this.selection);\n        getIndentationEditOperations(model, builder, this.tabSize, false);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n}\nregisterEditorContribution(AutoIndentOnPaste.ID, AutoIndentOnPaste);\nregisterEditorAction(IndentationToSpacesAction);\nregisterEditorAction(IndentationToTabsAction);\nregisterEditorAction(IndentUsingTabs);\nregisterEditorAction(IndentUsingSpaces);\nregisterEditorAction(DetectIndentation);\nregisterEditorAction(ReindentLinesAction);\nregisterEditorAction(ReindentSelectedLinesAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport { URI } from '../../../../base/common/uri.js';\nexport class InlayHintAnchor {\n    constructor(range, direction) {\n        this.range = range;\n        this.direction = direction;\n    }\n}\nexport class InlayHintItem {\n    constructor(hint, anchor, provider) {\n        this.hint = hint;\n        this.anchor = anchor;\n        this.provider = provider;\n        this._isResolved = false;\n    }\n    with(delta) {\n        const result = new InlayHintItem(this.hint, delta.anchor, this.provider);\n        result._isResolved = this._isResolved;\n        result._currentResolve = this._currentResolve;\n        return result;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.provider.resolveInlayHint !== 'function') {\n                return;\n            }\n            if (this._currentResolve) {\n                // wait for an active resolve operation and try again\n                // when that's done.\n                yield this._currentResolve;\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                return this.resolve(token);\n            }\n            if (!this._isResolved) {\n                this._currentResolve = this._doResolve(token)\n                    .finally(() => this._currentResolve = undefined);\n            }\n            yield this._currentResolve;\n        });\n    }\n    _doResolve(token) {\n        var _a, _b;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                const newHint = yield Promise.resolve(this.provider.resolveInlayHint(this.hint, token));\n                this.hint.tooltip = (_a = newHint === null || newHint === void 0 ? void 0 : newHint.tooltip) !== null && _a !== void 0 ? _a : this.hint.tooltip;\n                this.hint.label = (_b = newHint === null || newHint === void 0 ? void 0 : newHint.label) !== null && _b !== void 0 ? _b : this.hint.label;\n                this._isResolved = true;\n            }\n            catch (err) {\n                onUnexpectedExternalError(err);\n                this._isResolved = false;\n            }\n        });\n    }\n}\nexport class InlayHintsFragments {\n    constructor(ranges, data, model) {\n        this._disposables = new DisposableStore();\n        this.ranges = ranges;\n        this.provider = new Set();\n        const items = [];\n        for (const [list, provider] of data) {\n            this._disposables.add(list);\n            this.provider.add(provider);\n            for (const hint of list.hints) {\n                // compute the range to which the item should be attached to\n                let position = model.validatePosition(hint.position);\n                let direction = 'before';\n                const wordRange = InlayHintsFragments._getRangeAtPosition(model, position);\n                let range;\n                if (wordRange.getStartPosition().isBefore(position)) {\n                    range = Range.fromPositions(wordRange.getStartPosition(), position);\n                    direction = 'after';\n                }\n                else {\n                    range = Range.fromPositions(position, wordRange.getEndPosition());\n                    direction = 'before';\n                }\n                items.push(new InlayHintItem(hint, new InlayHintAnchor(range, direction), provider));\n            }\n        }\n        this.items = items.sort((a, b) => Position.compare(a.hint.position, b.hint.position));\n    }\n    static create(registry, model, ranges, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const data = [];\n            const promises = registry.ordered(model).reverse().map(provider => ranges.map((range) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const result = yield provider.provideInlayHints(model, range, token);\n                    if (result === null || result === void 0 ? void 0 : result.hints.length) {\n                        data.push([result, provider]);\n                    }\n                }\n                catch (err) {\n                    onUnexpectedExternalError(err);\n                }\n            })));\n            yield Promise.all(promises.flat());\n            if (token.isCancellationRequested || model.isDisposed()) {\n                throw new CancellationError();\n            }\n            return new InlayHintsFragments(ranges, data, model);\n        });\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    static _getRangeAtPosition(model, position) {\n        const line = position.lineNumber;\n        const word = model.getWordAtPosition(position);\n        if (word) {\n            // always prefer the word range\n            return new Range(line, word.startColumn, line, word.endColumn);\n        }\n        model.tokenizeIfCheap(line);\n        const tokens = model.getLineTokens(line);\n        const offset = position.column - 1;\n        const idx = tokens.findTokenIndexAtOffset(offset);\n        let start = tokens.getStartOffset(idx);\n        let end = tokens.getEndOffset(idx);\n        if (end - start === 1) {\n            // single character token, when at its end try leading/trailing token instead\n            if (start === offset && idx > 1) {\n                // leading token\n                start = tokens.getStartOffset(idx - 1);\n                end = tokens.getEndOffset(idx - 1);\n            }\n            else if (end === offset && idx < tokens.getCount() - 1) {\n                // trailing token\n                start = tokens.getStartOffset(idx + 1);\n                end = tokens.getEndOffset(idx + 1);\n            }\n        }\n        return new Range(line, start + 1, line, end + 1);\n    }\n}\nexport function asCommandLink(command) {\n    return URI.from({\n        scheme: Schemas.command,\n        path: command.id,\n        query: command.arguments && encodeURIComponent(JSON.stringify(command.arguments))\n    }).toString();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Action, Separator } from '../../../../base/common/actions.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { EditorExtensionsRegistry } from '../../../browser/editorExtensions.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { DefinitionAction, SymbolNavigationAction, SymbolNavigationAnchor } from '../../gotoSymbol/browser/goToCommands.js';\nimport { PeekContext } from '../../peekView/browser/peekView.js';\nimport { isIMenuItem, MenuId, MenuRegistry } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextMenuService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nexport function showGoToContextMenu(accessor, editor, anchor, part) {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n        const resolverService = accessor.get(ITextModelService);\n        const contextMenuService = accessor.get(IContextMenuService);\n        const commandService = accessor.get(ICommandService);\n        const instaService = accessor.get(IInstantiationService);\n        const notificationService = accessor.get(INotificationService);\n        yield part.item.resolve(CancellationToken.None);\n        if (!part.part.location) {\n            return;\n        }\n        const location = part.part.location;\n        const menuActions = [];\n        // from all registered (not active) context menu actions select those\n        // that are a symbol navigation action\n        const filter = new Set(MenuRegistry.getMenuItems(MenuId.EditorContext)\n            .map(item => isIMenuItem(item) ? item.command.id : ''));\n        for (const delegate of EditorExtensionsRegistry.getEditorActions()) {\n            if (delegate instanceof SymbolNavigationAction && filter.has(delegate.id)) {\n                menuActions.push(new Action(delegate.id, delegate.label, undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                    const ref = yield resolverService.createModelReference(location.uri);\n                    try {\n                        yield instaService.invokeFunction(delegate.run.bind(delegate), editor, new SymbolNavigationAnchor(ref.object.textEditorModel, Range.getStartPosition(location.range)));\n                    }\n                    finally {\n                        ref.dispose();\n                    }\n                })));\n            }\n        }\n        if (part.part.command) {\n            const { command } = part.part;\n            menuActions.push(new Separator());\n            menuActions.push(new Action(command.id, command.title, undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                var _b;\n                try {\n                    yield commandService.executeCommand(command.id, ...((_b = command.arguments) !== null && _b !== void 0 ? _b : []));\n                }\n                catch (err) {\n                    notificationService.notify({\n                        severity: Severity.Error,\n                        source: part.item.provider.displayName,\n                        message: err\n                    });\n                }\n            })));\n        }\n        // show context menu\n        const useShadowDOM = editor.getOption(115 /* useShadowDOM */);\n        contextMenuService.showContextMenu({\n            domForShadowRoot: useShadowDOM ? (_a = editor.getDomNode()) !== null && _a !== void 0 ? _a : undefined : undefined,\n            getAnchor: () => {\n                const box = dom.getDomNodePagePosition(anchor);\n                return { x: box.left, y: box.top + box.height + 8 };\n            },\n            getActions: () => menuActions,\n            onHide: () => {\n                editor.focus();\n            },\n            autoSelectFirstItem: true,\n        });\n    });\n}\nexport function goToDefinitionWithLocation(accessor, event, editor, location) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const resolverService = accessor.get(ITextModelService);\n        const ref = yield resolverService.createModelReference(location.uri);\n        yield editor.invokeWithinContext((accessor) => __awaiter(this, void 0, void 0, function* () {\n            const openToSide = event.hasSideBySideModifier;\n            const contextKeyService = accessor.get(IContextKeyService);\n            const isInPeek = PeekContext.inPeekEditor.getValue(contextKeyService);\n            const canPeek = !openToSide && editor.getOption(78 /* definitionLinkOpensInPeek */) && !isInPeek;\n            const action = new DefinitionAction({ openToSide, openInPeek: canPeek, muteMessage: true }, { alias: '', label: '', id: '', precondition: undefined });\n            return action.run(accessor, editor, { model: ref.object.textEditorModel, position: Range.getStartPosition(location.range) });\n        }));\n        ref.dispose();\n    });\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken, CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { DynamicCssRules } from '../../../browser/editorDom.js';\nimport { EDITOR_FONT_DEFAULTS } from '../../../common/config/editorOptions.js';\nimport { Range } from '../../../common/core/range.js';\nimport * as languages from '../../../common/languages.js';\nimport { InjectedTextCursorStops } from '../../../common/model.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { InlayHintAnchor, InlayHintsFragments } from './inlayHints.js';\nimport { goToDefinitionWithLocation, showGoToContextMenu } from './inlayHintsLocations.js';\nimport { CommandsRegistry, ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { createDecorator, IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService, Severity } from '../../../../platform/notification/common/notification.js';\nimport * as colors from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\n// --- hint caching service (per session)\nclass InlayHintsCache {\n    constructor() {\n        this._entries = new LRUCache(50);\n    }\n    get(model) {\n        const key = InlayHintsCache._key(model);\n        return this._entries.get(key);\n    }\n    set(model, value) {\n        const key = InlayHintsCache._key(model);\n        this._entries.set(key, value);\n    }\n    static _key(model) {\n        return `${model.uri.toString()}/${model.getVersionId()}`;\n    }\n}\nconst IInlayHintsCache = createDecorator('IInlayHintsCache');\nregisterSingleton(IInlayHintsCache, InlayHintsCache, true);\n// --- rendered label\nexport class RenderedInlayHintLabelPart {\n    constructor(item, index) {\n        this.item = item;\n        this.index = index;\n    }\n    get part() {\n        const label = this.item.hint.label;\n        if (typeof label === 'string') {\n            return { label };\n        }\n        else {\n            return label[this.index];\n        }\n    }\n}\nclass ActiveInlayHintInfo {\n    constructor(part, hasTriggerModifier) {\n        this.part = part;\n        this.hasTriggerModifier = hasTriggerModifier;\n    }\n}\n// --- controller\nlet InlayHintsController = class InlayHintsController {\n    constructor(_editor, _languageFeaturesService, _featureDebounce, _inlayHintsCache, _commandService, _notificationService, _instaService) {\n        this._editor = _editor;\n        this._languageFeaturesService = _languageFeaturesService;\n        this._inlayHintsCache = _inlayHintsCache;\n        this._commandService = _commandService;\n        this._notificationService = _notificationService;\n        this._instaService = _instaService;\n        this._disposables = new DisposableStore();\n        this._sessionDisposables = new DisposableStore();\n        this._decorationsMetadata = new Map();\n        this._ruleFactory = new DynamicCssRules(this._editor);\n        this._debounceInfo = _featureDebounce.for(_languageFeaturesService.inlayHintsProvider, 'InlayHint', { min: 25 });\n        this._disposables.add(_languageFeaturesService.inlayHintsProvider.onDidChange(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModel(() => this._update()));\n        this._disposables.add(_editor.onDidChangeModelLanguage(() => this._update()));\n        this._disposables.add(_editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(127 /* inlayHints */)) {\n                this._update();\n            }\n        }));\n        this._update();\n    }\n    static get(editor) {\n        var _a;\n        return (_a = editor.getContribution(InlayHintsController.ID)) !== null && _a !== void 0 ? _a : undefined;\n    }\n    dispose() {\n        this._sessionDisposables.dispose();\n        this._removeAllDecorations();\n        this._disposables.dispose();\n    }\n    _update() {\n        this._sessionDisposables.clear();\n        this._removeAllDecorations();\n        if (!this._editor.getOption(127 /* inlayHints */).enabled) {\n            return;\n        }\n        const model = this._editor.getModel();\n        if (!model || !this._languageFeaturesService.inlayHintsProvider.has(model)) {\n            return;\n        }\n        // iff possible, quickly update from cache\n        const cached = this._inlayHintsCache.get(model);\n        if (cached) {\n            this._updateHintsDecorators([model.getFullModelRange()], cached);\n        }\n        this._sessionDisposables.add(toDisposable(() => {\n            // cache items when switching files etc\n            if (!model.isDisposed()) {\n                this._cacheHintsForFastRestore(model);\n            }\n        }));\n        let cts;\n        let watchedProviders = new Set();\n        const scheduler = new RunOnceScheduler(() => __awaiter(this, void 0, void 0, function* () {\n            const t1 = Date.now();\n            cts === null || cts === void 0 ? void 0 : cts.dispose(true);\n            cts = new CancellationTokenSource();\n            const listener = model.onWillDispose(() => cts === null || cts === void 0 ? void 0 : cts.cancel());\n            try {\n                const myToken = cts.token;\n                const inlayHints = yield InlayHintsFragments.create(this._languageFeaturesService.inlayHintsProvider, model, this._getHintsRanges(), myToken);\n                scheduler.delay = this._debounceInfo.update(model, Date.now() - t1);\n                if (myToken.isCancellationRequested) {\n                    inlayHints.dispose();\n                    return;\n                }\n                // listen to provider changes\n                for (const provider of inlayHints.provider) {\n                    if (typeof provider.onDidChangeInlayHints === 'function' && !watchedProviders.has(provider)) {\n                        watchedProviders.add(provider);\n                        this._sessionDisposables.add(provider.onDidChangeInlayHints(() => {\n                            if (!scheduler.isScheduled()) { // ignore event when request is already scheduled\n                                scheduler.schedule();\n                            }\n                        }));\n                    }\n                }\n                this._sessionDisposables.add(inlayHints);\n                this._updateHintsDecorators(inlayHints.ranges, inlayHints.items);\n                this._cacheHintsForFastRestore(model);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                cts.dispose();\n                listener.dispose();\n            }\n        }), this._debounceInfo.get(model));\n        this._sessionDisposables.add(scheduler);\n        this._sessionDisposables.add(toDisposable(() => cts === null || cts === void 0 ? void 0 : cts.dispose(true)));\n        scheduler.schedule(0);\n        this._sessionDisposables.add(this._editor.onDidScrollChange((e) => {\n            // update when scroll position changes\n            // uses scrollTopChanged has weak heuristic to differenatiate between scrolling due to\n            // typing or due to \"actual\" scrolling\n            if (e.scrollTopChanged || !scheduler.isScheduled()) {\n                scheduler.schedule();\n            }\n        }));\n        this._sessionDisposables.add(this._editor.onDidChangeModelContent((e) => {\n            // update less aggressive when typing\n            const delay = Math.max(scheduler.delay, 1250);\n            scheduler.schedule(delay);\n        }));\n        // mouse gestures\n        this._sessionDisposables.add(this._installLinkGesture());\n        this._sessionDisposables.add(this._installDblClickGesture());\n        this._sessionDisposables.add(this._installContextMenu());\n    }\n    _installLinkGesture() {\n        const store = new DisposableStore();\n        const gesture = store.add(new ClickLinkGesture(this._editor));\n        // let removeHighlight = () => { };\n        const sessionStore = new DisposableStore();\n        store.add(sessionStore);\n        store.add(gesture.onMouseMoveOrRelevantKeyDown(e => {\n            const [mouseEvent] = e;\n            const labelPart = this._getInlayHintLabelPart(mouseEvent);\n            const model = this._editor.getModel();\n            if (!labelPart || !model) {\n                sessionStore.clear();\n                return;\n            }\n            // resolve the item\n            const cts = new CancellationTokenSource();\n            sessionStore.add(toDisposable(() => cts.dispose(true)));\n            labelPart.item.resolve(cts.token);\n            // render link => when the modifier is pressed and when there is a command or location\n            this._activeInlayHintPart = labelPart.part.command || labelPart.part.location\n                ? new ActiveInlayHintInfo(labelPart, mouseEvent.hasTriggerModifier)\n                : undefined;\n            const lineNumber = labelPart.item.hint.position.lineNumber;\n            const range = new Range(lineNumber, 1, lineNumber, model.getLineMaxColumn(lineNumber));\n            const lineHints = new Set();\n            for (const data of this._decorationsMetadata.values()) {\n                if (range.containsRange(data.item.anchor.range)) {\n                    lineHints.add(data.item);\n                }\n            }\n            this._updateHintsDecorators([range], Array.from(lineHints));\n            sessionStore.add(toDisposable(() => {\n                this._activeInlayHintPart = undefined;\n                this._updateHintsDecorators([range], Array.from(lineHints));\n            }));\n        }));\n        store.add(gesture.onCancel(() => sessionStore.clear()));\n        store.add(gesture.onExecute((e) => __awaiter(this, void 0, void 0, function* () {\n            const label = this._getInlayHintLabelPart(e);\n            if (label) {\n                const part = label.part;\n                if (part.location) {\n                    // location -> execute go to def\n                    this._instaService.invokeFunction(goToDefinitionWithLocation, e, this._editor, part.location);\n                }\n                else if (languages.Command.is(part.command)) {\n                    // command -> execute it\n                    yield this._invokeCommand(part.command, label.item);\n                }\n            }\n        })));\n        return store;\n    }\n    _installDblClickGesture() {\n        return this._editor.onMouseUp((e) => __awaiter(this, void 0, void 0, function* () {\n            if (e.event.detail !== 2) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (!part) {\n                return;\n            }\n            e.event.preventDefault();\n            yield part.item.resolve(CancellationToken.None);\n            if (part.item.hint.command) {\n                yield this._invokeCommand(part.item.hint.command, part.item);\n            }\n        }));\n    }\n    _installContextMenu() {\n        return this._editor.onContextMenu((e) => __awaiter(this, void 0, void 0, function* () {\n            if (!(e.event.target instanceof HTMLElement)) {\n                return;\n            }\n            const part = this._getInlayHintLabelPart(e);\n            if (part) {\n                yield this._instaService.invokeFunction(showGoToContextMenu, this._editor, e.event.target, part);\n            }\n        }));\n    }\n    _getInlayHintLabelPart(e) {\n        var _a;\n        if (e.target.type !== 6 /* CONTENT_TEXT */) {\n            return undefined;\n        }\n        const options = (_a = e.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n        if (options instanceof ModelDecorationInjectedTextOptions && (options === null || options === void 0 ? void 0 : options.attachedData) instanceof RenderedInlayHintLabelPart) {\n            return options.attachedData;\n        }\n        return undefined;\n    }\n    _invokeCommand(command, item) {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this._commandService.executeCommand(command.id, ...((_a = command.arguments) !== null && _a !== void 0 ? _a : []));\n            }\n            catch (err) {\n                this._notificationService.notify({\n                    severity: Severity.Error,\n                    source: item.provider.displayName,\n                    message: err\n                });\n            }\n        });\n    }\n    _cacheHintsForFastRestore(model) {\n        const items = new Map();\n        for (const [id, obj] of this._decorationsMetadata) {\n            if (items.has(obj.item)) {\n                // an inlay item can be rendered as multiple decorations\n                // but they will all uses the same range\n                continue;\n            }\n            let value = obj.item;\n            const range = model.getDecorationRange(id);\n            if (range) {\n                // update range with whatever the editor has tweaked it to\n                const anchor = new InlayHintAnchor(range, obj.item.anchor.direction);\n                value = obj.item.with({ anchor });\n            }\n            items.set(obj.item, value);\n        }\n        this._inlayHintsCache.set(model, Array.from(items.values()));\n    }\n    _getHintsRanges() {\n        const extra = 30;\n        const model = this._editor.getModel();\n        const visibleRanges = this._editor.getVisibleRangesPlusViewportAboveBelow();\n        const result = [];\n        for (const range of visibleRanges.sort(Range.compareRangesUsingStarts)) {\n            const extendedRange = model.validateRange(new Range(range.startLineNumber - extra, range.startColumn, range.endLineNumber + extra, range.endColumn));\n            if (result.length === 0 || !Range.areIntersectingOrTouching(result[result.length - 1], extendedRange)) {\n                result.push(extendedRange);\n            }\n            else {\n                result[result.length - 1] = Range.plusRange(result[result.length - 1], extendedRange);\n            }\n        }\n        return result;\n    }\n    _updateHintsDecorators(ranges, items) {\n        var _a, _b;\n        // utils to collect/create injected text decorations\n        const newDecorationsData = [];\n        const addInjectedText = (item, ref, content, cursorStops, attachedData) => {\n            newDecorationsData.push({\n                item,\n                classNameRef: ref,\n                decoration: {\n                    range: item.anchor.range,\n                    options: {\n                        // className: \"rangeHighlight\", // DEBUG highlight to see to what range a hint is attached\n                        description: 'InlayHint',\n                        showIfCollapsed: item.anchor.range.isEmpty(),\n                        collapseOnReplaceEdit: !item.anchor.range.isEmpty(),\n                        stickiness: 0 /* AlwaysGrowsWhenTypingAtEdges */,\n                        [item.anchor.direction]: {\n                            content,\n                            inlineClassNameAffectsLetterSpacing: true,\n                            inlineClassName: ref.className,\n                            cursorStops,\n                            attachedData\n                        }\n                    }\n                }\n            });\n        };\n        const addInjectedWhitespace = (item, isLast) => {\n            const marginRule = this._ruleFactory.createClassNameRef({\n                width: `${(fontSize / 3) | 0}px`,\n                display: 'inline-block'\n            });\n            addInjectedText(item, marginRule, '\\u200a', isLast ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None);\n        };\n        //\n        const { fontSize, fontFamily } = this._getLayoutInfo();\n        const fontFamilyVar = '--code-editorInlayHintsFontFamily';\n        this._editor.getContainerDomNode().style.setProperty(fontFamilyVar, fontFamily);\n        for (const item of items) {\n            // whitespace leading the actual label\n            if (item.hint.paddingLeft) {\n                addInjectedWhitespace(item, false);\n            }\n            // the label with its parts\n            const parts = typeof item.hint.label === 'string'\n                ? [{ label: item.hint.label }]\n                : item.hint.label;\n            for (let i = 0; i < parts.length; i++) {\n                const part = parts[i];\n                const isFirst = i === 0;\n                const isLast = i === parts.length - 1;\n                const cssProperties = {\n                    fontSize: `${fontSize}px`,\n                    fontFamily: `var(${fontFamilyVar}), ${EDITOR_FONT_DEFAULTS.fontFamily}`,\n                    verticalAlign: 'middle',\n                };\n                if (item.hint.command) {\n                    // user pointer whenever an inlay hint has a command\n                    cssProperties.cursor = 'pointer';\n                }\n                this._fillInColors(cssProperties, item.hint);\n                if ((part.command || part.location) && ((_a = this._activeInlayHintPart) === null || _a === void 0 ? void 0 : _a.part.item) === item && this._activeInlayHintPart.part.index === i) {\n                    // active link!\n                    cssProperties.textDecoration = 'underline';\n                    if (this._activeInlayHintPart.hasTriggerModifier) {\n                        cssProperties.color = themeColorFromId(colors.editorActiveLinkForeground);\n                        cssProperties.cursor = 'pointer';\n                    }\n                }\n                if (isFirst && isLast) {\n                    // only element\n                    cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px`;\n                    cssProperties.borderRadius = `${(fontSize / 4) | 0}px`;\n                }\n                else if (isFirst) {\n                    // first element\n                    cssProperties.padding = `1px 0 1px ${Math.max(1, fontSize / 4) | 0}px`;\n                    cssProperties.borderRadius = `${(fontSize / 4) | 0}px 0 0 ${(fontSize / 4) | 0}px`;\n                }\n                else if (isLast) {\n                    // last element\n                    cssProperties.padding = `1px ${Math.max(1, fontSize / 4) | 0}px 1px 0`;\n                    cssProperties.borderRadius = `0 ${(fontSize / 4) | 0}px ${(fontSize / 4) | 0}px 0`;\n                }\n                else {\n                    cssProperties.padding = `1px 0 1px 0`;\n                }\n                addInjectedText(item, this._ruleFactory.createClassNameRef(cssProperties), fixSpace(part.label), isLast && !item.hint.paddingRight ? InjectedTextCursorStops.Right : InjectedTextCursorStops.None, new RenderedInlayHintLabelPart(item, i));\n            }\n            // whitespace trailing the actual label\n            if (item.hint.paddingRight) {\n                addInjectedWhitespace(item, true);\n            }\n            if (newDecorationsData.length > InlayHintsController._MAX_DECORATORS) {\n                break;\n            }\n        }\n        // collect all decoration ids that are affected by the ranges\n        // and only update those decorations\n        const decorationIdsToReplace = [];\n        for (const range of ranges) {\n            for (const { id } of (_b = this._editor.getDecorationsInRange(range)) !== null && _b !== void 0 ? _b : []) {\n                const metadata = this._decorationsMetadata.get(id);\n                if (metadata) {\n                    decorationIdsToReplace.push(id);\n                    metadata.classNameRef.dispose();\n                    this._decorationsMetadata.delete(id);\n                }\n            }\n        }\n        const newDecorationIds = this._editor.deltaDecorations(decorationIdsToReplace, newDecorationsData.map(d => d.decoration));\n        for (let i = 0; i < newDecorationIds.length; i++) {\n            const data = newDecorationsData[i];\n            this._decorationsMetadata.set(newDecorationIds[i], { item: data.item, classNameRef: data.classNameRef });\n        }\n    }\n    _fillInColors(props, hint) {\n        if (hint.kind === languages.InlayHintKind.Parameter) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintParameterBackground);\n            props.color = themeColorFromId(colors.editorInlayHintParameterForeground);\n        }\n        else if (hint.kind === languages.InlayHintKind.Type) {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintTypeBackground);\n            props.color = themeColorFromId(colors.editorInlayHintTypeForeground);\n        }\n        else {\n            props.backgroundColor = themeColorFromId(colors.editorInlayHintBackground);\n            props.color = themeColorFromId(colors.editorInlayHintForeground);\n        }\n    }\n    _getLayoutInfo() {\n        const options = this._editor.getOption(127 /* inlayHints */);\n        const editorFontSize = this._editor.getOption(46 /* fontSize */);\n        let fontSize = options.fontSize;\n        if (!fontSize || fontSize < 5 || fontSize > editorFontSize) {\n            fontSize = (editorFontSize * .9) | 0;\n        }\n        const fontFamily = options.fontFamily || this._editor.getOption(43 /* fontFamily */);\n        return { fontSize, fontFamily };\n    }\n    _removeAllDecorations() {\n        this._editor.deltaDecorations(Array.from(this._decorationsMetadata.keys()), []);\n        for (let obj of this._decorationsMetadata.values()) {\n            obj.classNameRef.dispose();\n        }\n        this._decorationsMetadata.clear();\n    }\n};\nInlayHintsController.ID = 'editor.contrib.InlayHints';\nInlayHintsController._MAX_DECORATORS = 1500;\nInlayHintsController = __decorate([\n    __param(1, ILanguageFeaturesService),\n    __param(2, ILanguageFeatureDebounceService),\n    __param(3, IInlayHintsCache),\n    __param(4, ICommandService),\n    __param(5, INotificationService),\n    __param(6, IInstantiationService)\n], InlayHintsController);\nexport { InlayHintsController };\n// Prevents the view from potentially visible whitespace\nfunction fixSpace(str) {\n    const noBreakWhitespace = '\\xa0';\n    return str.replace(/[ \\t]/g, noBreakWhitespace);\n}\nCommandsRegistry.registerCommand('_executeInlayHintProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    const [uri, range] = args;\n    assertType(URI.isUri(uri));\n    assertType(Range.isIRange(range));\n    const { inlayHintsProvider } = accessor.get(ILanguageFeaturesService);\n    const ref = yield accessor.get(ITextModelService).createModelReference(uri);\n    try {\n        const model = yield InlayHintsFragments.create(inlayHintsProvider, ref.object.textEditorModel, [Range.lift(range)], CancellationToken.None);\n        const result = model.items.map(i => i.hint);\n        setTimeout(() => model.dispose(), 0); // dispose after sending to ext host\n        return result;\n    }\n    finally {\n        ref.dispose();\n    }\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __asyncValues = (this && this.__asyncValues) || function (o) {\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n    var m = o[Symbol.asyncIterator], i;\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n};\nimport { AsyncIterableObject } from '../../../../base/common/async.js';\nimport { isEmptyMarkdownString, MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Position } from '../../../common/core/position.js';\nimport { ModelDecorationInjectedTextOptions } from '../../../common/model/textModel.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { getHover } from '../../hover/browser/getHover.js';\nimport { MarkdownHover, MarkdownHoverParticipant } from '../../hover/browser/markdownHoverParticipant.js';\nimport { RenderedInlayHintLabelPart, InlayHintsController } from './inlayHintsController.js';\nimport { IConfigurationService } from '../../../../platform/configuration/common/configuration.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { localize } from '../../../../nls.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport { asCommandLink } from './inlayHints.js';\nclass InlayHintsHoverAnchor extends HoverForeignElementAnchor {\n    constructor(part, owner) {\n        super(10, owner, part.item.anchor.range);\n        this.part = part;\n    }\n}\nlet InlayHintsHover = class InlayHintsHover extends MarkdownHoverParticipant {\n    constructor(editor, languageService, openerService, configurationService, _resolverService, languageFeaturesService) {\n        super(editor, languageService, openerService, configurationService, languageFeaturesService);\n        this._resolverService = _resolverService;\n        this.hoverOrdinal = 6;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        var _a;\n        const controller = InlayHintsController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        if (mouseEvent.target.type !== 6 /* CONTENT_TEXT */) {\n            return null;\n        }\n        const options = (_a = mouseEvent.target.detail.injectedText) === null || _a === void 0 ? void 0 : _a.options;\n        if (!(options instanceof ModelDecorationInjectedTextOptions && options.attachedData instanceof RenderedInlayHintLabelPart)) {\n            return null;\n        }\n        return new InlayHintsHoverAnchor(options.attachedData, this);\n    }\n    computeSync() {\n        return [];\n    }\n    computeAsync(anchor, _lineDecorations, token) {\n        if (!(anchor instanceof InlayHintsHoverAnchor)) {\n            return AsyncIterableObject.EMPTY;\n        }\n        return new AsyncIterableObject((executor) => __awaiter(this, void 0, void 0, function* () {\n            var e_1, _a;\n            const { part } = anchor;\n            yield part.item.resolve(token);\n            if (token.isCancellationRequested) {\n                return;\n            }\n            // (1) Inlay Tooltip\n            let itemTooltip;\n            if (typeof part.item.hint.tooltip === 'string') {\n                itemTooltip = new MarkdownString().appendText(part.item.hint.tooltip);\n            }\n            else if (part.item.hint.tooltip) {\n                itemTooltip = part.item.hint.tooltip;\n            }\n            if (itemTooltip) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [itemTooltip], 0));\n            }\n            // (2) Inlay Label Part Tooltip\n            let partTooltip;\n            if (typeof part.part.tooltip === 'string') {\n                partTooltip = new MarkdownString().appendText(part.part.tooltip);\n            }\n            else if (part.part.tooltip) {\n                partTooltip = part.part.tooltip;\n            }\n            if (partTooltip) {\n                executor.emitOne(new MarkdownHover(this, anchor.range, [partTooltip], 1));\n            }\n            // (2.2) Inlay Label Part Help Hover\n            if (part.part.location || part.part.command) {\n                let linkHint;\n                const useMetaKey = this._editor.getOption(70 /* multiCursorModifier */) === 'altKey';\n                const kb = useMetaKey\n                    ? platform.isMacintosh\n                        ? localize('links.navigate.kb.meta.mac', \"cmd + click\")\n                        : localize('links.navigate.kb.meta', \"ctrl + click\")\n                    : platform.isMacintosh\n                        ? localize('links.navigate.kb.alt.mac', \"option + click\")\n                        : localize('links.navigate.kb.alt', \"alt + click\");\n                if (part.part.location && part.part.command) {\n                    linkHint = new MarkdownString().appendText(localize('hint.defAndCommand', 'Go to Definition ({0}), right click for more', kb));\n                }\n                else if (part.part.location) {\n                    linkHint = new MarkdownString().appendText(localize('hint.def', 'Go to Definition ({0})', kb));\n                }\n                else if (part.part.command) {\n                    linkHint = new MarkdownString(`[${localize('hint.cmd', \"Execute Command\")}](${asCommandLink(part.part.command)} \"${part.part.command.title}\") (${kb})`, { isTrusted: true });\n                }\n                if (linkHint) {\n                    executor.emitOne(new MarkdownHover(this, anchor.range, [linkHint], 10000));\n                }\n            }\n            // (3) Inlay Label Part Location tooltip\n            const iterable = yield this._resolveInlayHintLabelPartHover(part, token);\n            try {\n                for (var iterable_1 = __asyncValues(iterable), iterable_1_1; iterable_1_1 = yield iterable_1.next(), !iterable_1_1.done;) {\n                    let item = iterable_1_1.value;\n                    executor.emitOne(item);\n                }\n            }\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\n            finally {\n                try {\n                    if (iterable_1_1 && !iterable_1_1.done && (_a = iterable_1.return)) yield _a.call(iterable_1);\n                }\n                finally { if (e_1) throw e_1.error; }\n            }\n        }));\n    }\n    _resolveInlayHintLabelPartHover(part, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!part.part.location) {\n                return AsyncIterableObject.EMPTY;\n            }\n            const { uri, range } = part.part.location;\n            const ref = yield this._resolverService.createModelReference(uri);\n            try {\n                const model = ref.object.textEditorModel;\n                if (!this._languageFeaturesService.hoverProvider.has(model)) {\n                    return AsyncIterableObject.EMPTY;\n                }\n                return getHover(this._languageFeaturesService.hoverProvider, model, new Position(range.startLineNumber, range.startColumn), token)\n                    .filter(item => !isEmptyMarkdownString(item.hover.contents))\n                    .map(item => new MarkdownHover(this, part.item.anchor.range, item.hover.contents, 2 + item.ordinal));\n            }\n            finally {\n                ref.dispose();\n            }\n        });\n    }\n};\nInlayHintsHover = __decorate([\n    __param(1, ILanguageService),\n    __param(2, IOpenerService),\n    __param(3, IConfigurationService),\n    __param(4, ITextModelService),\n    __param(5, ILanguageFeaturesService)\n], InlayHintsHover);\nexport { InlayHintsHover };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { InlayHintsController } from './inlayHintsController.js';\nimport { InlayHintsHover } from './inlayHintsHover.js';\nregisterEditorContribution(InlayHintsController.ID, InlayHintsController);\nHoverParticipantRegistry.register(InlayHintsHover);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport const inlineSuggestCommitId = 'editor.action.inlineSuggest.commit';\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Range } from '../../../common/core/range.js';\nexport class GhostText {\n    constructor(lineNumber, parts, additionalReservedLineCount = 0) {\n        this.lineNumber = lineNumber;\n        this.parts = parts;\n        this.additionalReservedLineCount = additionalReservedLineCount;\n    }\n    renderForScreenReader(lineText) {\n        if (this.parts.length === 0) {\n            return '';\n        }\n        const lastPart = this.parts[this.parts.length - 1];\n        const cappedLineText = lineText.substr(0, lastPart.column - 1);\n        const text = applyEdits(cappedLineText, this.parts.map(p => ({\n            range: { startLineNumber: 1, endLineNumber: 1, startColumn: p.column, endColumn: p.column },\n            text: p.lines.join('\\n')\n        })));\n        return text.substring(this.parts[0].column - 1);\n    }\n}\nclass PositionOffsetTransformer {\n    constructor(text) {\n        this.lineStartOffsetByLineIdx = [];\n        this.lineStartOffsetByLineIdx.push(0);\n        for (let i = 0; i < text.length; i++) {\n            if (text.charAt(i) === '\\n') {\n                this.lineStartOffsetByLineIdx.push(i + 1);\n            }\n        }\n    }\n    getOffset(position) {\n        return this.lineStartOffsetByLineIdx[position.lineNumber - 1] + position.column - 1;\n    }\n}\nfunction applyEdits(text, edits) {\n    const transformer = new PositionOffsetTransformer(text);\n    const offsetEdits = edits.map(e => {\n        const range = Range.lift(e.range);\n        return ({\n            startOffset: transformer.getOffset(range.getStartPosition()),\n            endOffset: transformer.getOffset(range.getEndPosition()),\n            text: e.text\n        });\n    });\n    offsetEdits.sort((a, b) => b.startOffset - a.startOffset);\n    for (const edit of offsetEdits) {\n        text = text.substring(0, edit.startOffset) + edit.text + text.substring(edit.endOffset);\n    }\n    return text;\n}\nexport class GhostTextPart {\n    constructor(column, lines, \n    /**\n     * Indicates if this part is a preview of an inline suggestion when a suggestion is previewed.\n    */\n    preview) {\n        this.column = column;\n        this.lines = lines;\n        this.preview = preview;\n    }\n}\nexport class BaseGhostTextWidgetModel extends Disposable {\n    constructor(editor) {\n        super();\n        this.editor = editor;\n        this._expanded = undefined;\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(106 /* suggest */) && this._expanded === undefined) {\n                this.onDidChangeEmitter.fire();\n            }\n        }));\n    }\n    setExpanded(expanded) {\n        this._expanded = true;\n        this.onDidChangeEmitter.fire();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { LcsDiff } from '../../../../base/common/diff/diff.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { GhostText, GhostTextPart } from './ghostText.js';\nexport function normalizedInlineCompletionsEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    return a.range.equalsRange(b.range) && a.text === b.text && a.command === b.command;\n}\n/**\n * @param previewSuffixLength Sets where to split `inlineCompletion.text`.\n * \tIf the text is `hello` and the suffix length is 2, the non-preview part is `hel` and the preview-part is `lo`.\n*/\nexport function inlineCompletionToGhostText(inlineCompletion, textModel, mode, cursorPosition, previewSuffixLength = 0) {\n    if (inlineCompletion.range.startLineNumber !== inlineCompletion.range.endLineNumber) {\n        // Only single line replacements are supported.\n        return undefined;\n    }\n    const sourceLine = textModel.getLineContent(inlineCompletion.range.startLineNumber);\n    const sourceIndentationLength = strings.getLeadingWhitespace(sourceLine).length;\n    const suggestionTouchesIndentation = inlineCompletion.range.startColumn - 1 <= sourceIndentationLength;\n    if (suggestionTouchesIndentation) {\n        // source:      ··········[······abc]\n        //                         ^^^^^^^^^ inlineCompletion.range\n        //              ^^^^^^^^^^ ^^^^^^ sourceIndentationLength\n        //                         ^^^^^^ replacedIndentation.length\n        //                               ^^^ rangeThatDoesNotReplaceIndentation\n        // inlineCompletion.text: '··foo'\n        //                         ^^ suggestionAddedIndentationLength\n        const suggestionAddedIndentationLength = strings.getLeadingWhitespace(inlineCompletion.text).length;\n        const replacedIndentation = sourceLine.substring(inlineCompletion.range.startColumn - 1, sourceIndentationLength);\n        const rangeThatDoesNotReplaceIndentation = Range.fromPositions(inlineCompletion.range.getStartPosition().delta(0, replacedIndentation.length), inlineCompletion.range.getEndPosition());\n        const suggestionWithoutIndentationChange = inlineCompletion.text.startsWith(replacedIndentation)\n            // Adds more indentation without changing existing indentation: We can add ghost text for this\n            ? inlineCompletion.text.substring(replacedIndentation.length)\n            // Changes or removes existing indentation. Only add ghost text for the non-indentation part.\n            : inlineCompletion.text.substring(suggestionAddedIndentationLength);\n        inlineCompletion = {\n            range: rangeThatDoesNotReplaceIndentation,\n            text: suggestionWithoutIndentationChange,\n            command: inlineCompletion.command\n        };\n    }\n    // This is a single line string\n    const valueToBeReplaced = textModel.getValueInRange(inlineCompletion.range);\n    const changes = cachingDiff(valueToBeReplaced, inlineCompletion.text);\n    if (!changes) {\n        // No ghost text in case the diff would be too slow to compute\n        return undefined;\n    }\n    const lineNumber = inlineCompletion.range.startLineNumber;\n    const parts = new Array();\n    if (mode === 'prefix') {\n        const filteredChanges = changes.filter(c => c.originalLength === 0);\n        if (filteredChanges.length > 1 || filteredChanges.length === 1 && filteredChanges[0].originalStart !== valueToBeReplaced.length) {\n            // Prefixes only have a single change.\n            return undefined;\n        }\n    }\n    const previewStartInCompletionText = inlineCompletion.text.length - previewSuffixLength;\n    for (const c of changes) {\n        const insertColumn = inlineCompletion.range.startColumn + c.originalStart + c.originalLength;\n        if (mode === 'subwordSmart' && cursorPosition && cursorPosition.lineNumber === inlineCompletion.range.startLineNumber && insertColumn < cursorPosition.column) {\n            // No ghost text before cursor\n            return undefined;\n        }\n        if (c.originalLength > 0) {\n            return undefined;\n        }\n        if (c.modifiedLength === 0) {\n            continue;\n        }\n        const modifiedEnd = c.modifiedStart + c.modifiedLength;\n        const nonPreviewTextEnd = Math.max(c.modifiedStart, Math.min(modifiedEnd, previewStartInCompletionText));\n        const nonPreviewText = inlineCompletion.text.substring(c.modifiedStart, nonPreviewTextEnd);\n        const italicText = inlineCompletion.text.substring(nonPreviewTextEnd, Math.max(c.modifiedStart, modifiedEnd));\n        if (nonPreviewText.length > 0) {\n            const lines = strings.splitLines(nonPreviewText);\n            parts.push(new GhostTextPart(insertColumn, lines, false));\n        }\n        if (italicText.length > 0) {\n            const lines = strings.splitLines(italicText);\n            parts.push(new GhostTextPart(insertColumn, lines, true));\n        }\n    }\n    return new GhostText(lineNumber, parts, 0);\n}\nlet lastRequest = undefined;\nfunction cachingDiff(originalValue, newValue) {\n    if ((lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.originalValue) === originalValue && (lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.newValue) === newValue) {\n        return lastRequest === null || lastRequest === void 0 ? void 0 : lastRequest.changes;\n    }\n    else {\n        const changes = smartDiff(originalValue, newValue);\n        lastRequest = {\n            originalValue,\n            newValue,\n            changes\n        };\n        return changes;\n    }\n}\n/**\n * When matching `if ()` with `if (f() = 1) { g(); }`,\n * align it like this:        `if (       )`\n * Not like this:\t\t\t  `if (  )`\n * Also not like this:\t\t  `if (             )`.\n *\n * The parenthesis are preprocessed to ensure that they match correctly.\n */\nfunction smartDiff(originalValue, newValue) {\n    if (originalValue.length > 5000 || newValue.length > 5000) {\n        // We don't want to work on strings that are too big\n        return undefined;\n    }\n    function getMaxCharCode(val) {\n        let maxCharCode = 0;\n        for (let i = 0, len = val.length; i < len; i++) {\n            const charCode = val.charCodeAt(i);\n            if (charCode > maxCharCode) {\n                maxCharCode = charCode;\n            }\n        }\n        return maxCharCode;\n    }\n    const maxCharCode = Math.max(getMaxCharCode(originalValue), getMaxCharCode(newValue));\n    function getUniqueCharCode(id) {\n        if (id < 0) {\n            throw new Error('unexpected');\n        }\n        return maxCharCode + id + 1;\n    }\n    function getElements(source) {\n        let level = 0;\n        let group = 0;\n        const characters = new Int32Array(source.length);\n        for (let i = 0, len = source.length; i < len; i++) {\n            const id = group * 100 + level;\n            // TODO support more brackets\n            if (source[i] === '(') {\n                characters[i] = getUniqueCharCode(2 * id);\n                level++;\n            }\n            else if (source[i] === ')') {\n                characters[i] = getUniqueCharCode(2 * id + 1);\n                if (level === 1) {\n                    group++;\n                }\n                level = Math.max(level - 1, 0);\n            }\n            else {\n                characters[i] = source.charCodeAt(i);\n            }\n        }\n        return characters;\n    }\n    const elements1 = getElements(originalValue);\n    const elements2 = getElements(newValue);\n    return new LcsDiff({ getElements: () => elements1 }, { getElements: () => elements2 }).ComputeDiff(false).changes;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { commonPrefixLength, commonSuffixLength } from '../../../../base/common/strings.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { BaseGhostTextWidgetModel } from './ghostText.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { inlineSuggestCommitId } from './consts.js';\nimport { inlineCompletionToGhostText } from './inlineCompletionToGhostText.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport { fixBracketsInLine } from '../../../common/model/bracketPairsTextModelPart/fixBrackets.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nlet InlineCompletionsModel = class InlineCompletionsModel extends Disposable {\n    constructor(editor, cache, commandService, languageConfigurationService, languageFeaturesService, debounceService) {\n        super();\n        this.editor = editor;\n        this.cache = cache;\n        this.commandService = commandService;\n        this.languageConfigurationService = languageConfigurationService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.debounceService = debounceService;\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.completionSession = this._register(new MutableDisposable());\n        this.active = false;\n        this.disposed = false;\n        this.debounceValue = this.debounceService.for(this.languageFeaturesService.inlineCompletionsProvider, 'InlineCompletionsDebounce', { min: 50, max: 200 });\n        this._register(commandService.onDidExecuteCommand((e) => {\n            // These commands don't trigger onDidType.\n            const commands = new Set([\n                CoreEditingCommands.Tab.id,\n                CoreEditingCommands.DeleteLeft.id,\n                CoreEditingCommands.DeleteRight.id,\n                inlineSuggestCommitId,\n                'acceptSelectedSuggestion',\n            ]);\n            if (commands.has(e.commandId) && editor.hasTextFocus()) {\n                this.handleUserInput();\n            }\n        }));\n        this._register(this.editor.onDidType((e) => {\n            this.handleUserInput();\n        }));\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\n            if (this.session && !this.session.isValid) {\n                this.hide();\n            }\n        }));\n        this._register(toDisposable(() => {\n            this.disposed = true;\n        }));\n        this._register(this.editor.onDidBlurEditorWidget(() => {\n            this.hide();\n        }));\n    }\n    handleUserInput() {\n        if (this.session && !this.session.isValid) {\n            this.hide();\n        }\n        setTimeout(() => {\n            if (this.disposed) {\n                return;\n            }\n            // Wait for the cursor update that happens in the same iteration loop iteration\n            this.startSessionIfTriggered();\n        }, 0);\n    }\n    get session() {\n        return this.completionSession.value;\n    }\n    get ghostText() {\n        var _a;\n        return (_a = this.session) === null || _a === void 0 ? void 0 : _a.ghostText;\n    }\n    get minReservedLineCount() {\n        return this.session ? this.session.minReservedLineCount : 0;\n    }\n    setExpanded(expanded) {\n        var _a;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.setExpanded(expanded);\n    }\n    setActive(active) {\n        var _a;\n        this.active = active;\n        if (active) {\n            (_a = this.session) === null || _a === void 0 ? void 0 : _a.scheduleAutomaticUpdate();\n        }\n    }\n    startSessionIfTriggered() {\n        const suggestOptions = this.editor.getOption(55 /* inlineSuggest */);\n        if (!suggestOptions.enabled) {\n            return;\n        }\n        if (this.session && this.session.isValid) {\n            return;\n        }\n        this.trigger(InlineCompletionTriggerKind.Automatic);\n    }\n    trigger(triggerKind) {\n        if (this.completionSession.value) {\n            if (triggerKind === InlineCompletionTriggerKind.Explicit) {\n                void this.completionSession.value.ensureUpdateWithExplicitContext();\n            }\n            return;\n        }\n        this.completionSession.value = new InlineCompletionsSession(this.editor, this.editor.getPosition(), () => this.active, this.commandService, this.cache, triggerKind, this.languageConfigurationService, this.languageFeaturesService.inlineCompletionsProvider, this.debounceValue);\n        this.completionSession.value.takeOwnership(this.completionSession.value.onDidChange(() => {\n            this.onDidChangeEmitter.fire();\n        }));\n    }\n    hide() {\n        this.completionSession.clear();\n        this.onDidChangeEmitter.fire();\n    }\n    commitCurrentSuggestion() {\n        var _a;\n        // Don't dispose the session, so that after committing, more suggestions are shown.\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.commitCurrentCompletion();\n    }\n    showNext() {\n        var _a;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.showNextInlineCompletion();\n    }\n    showPrevious() {\n        var _a;\n        (_a = this.session) === null || _a === void 0 ? void 0 : _a.showPreviousInlineCompletion();\n    }\n    hasMultipleInlineCompletions() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield ((_a = this.session) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\n            return result !== undefined ? result : false;\n        });\n    }\n};\nInlineCompletionsModel = __decorate([\n    __param(2, ICommandService),\n    __param(3, ILanguageConfigurationService),\n    __param(4, ILanguageFeaturesService),\n    __param(5, ILanguageFeatureDebounceService)\n], InlineCompletionsModel);\nexport { InlineCompletionsModel };\nexport class InlineCompletionsSession extends BaseGhostTextWidgetModel {\n    constructor(editor, triggerPosition, shouldUpdate, commandService, cache, initialTriggerKind, languageConfigurationService, registry, debounce) {\n        super(editor);\n        this.triggerPosition = triggerPosition;\n        this.shouldUpdate = shouldUpdate;\n        this.commandService = commandService;\n        this.cache = cache;\n        this.initialTriggerKind = initialTriggerKind;\n        this.languageConfigurationService = languageConfigurationService;\n        this.registry = registry;\n        this.debounce = debounce;\n        this.minReservedLineCount = 0;\n        this.updateOperation = this._register(new MutableDisposable());\n        this.updateSoon = this._register(new RunOnceScheduler(() => {\n            let triggerKind = this.initialTriggerKind;\n            // All subsequent triggers are automatic.\n            this.initialTriggerKind = InlineCompletionTriggerKind.Automatic;\n            return this.update(triggerKind);\n        }, 50));\n        //#region Selection\n        // We use a semantic id to track the selection even if the cache changes.\n        this.currentlySelectedCompletionId = undefined;\n        let lastCompletionItem = undefined;\n        this._register(this.onDidChange(() => {\n            const currentCompletion = this.currentCompletion;\n            if (currentCompletion && currentCompletion.sourceInlineCompletion !== lastCompletionItem) {\n                lastCompletionItem = currentCompletion.sourceInlineCompletion;\n                const provider = currentCompletion.sourceProvider;\n                if (provider.handleItemDidShow) {\n                    provider.handleItemDidShow(currentCompletion.sourceInlineCompletions, lastCompletionItem);\n                }\n            }\n        }));\n        this._register(toDisposable(() => {\n            this.cache.clear();\n        }));\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\n            if (this.cache.value) {\n                this.onDidChangeEmitter.fire();\n            }\n        }));\n        this._register(this.editor.onDidChangeModelContent((e) => {\n            this.scheduleAutomaticUpdate();\n        }));\n        this._register(this.registry.onDidChange(() => {\n            this.updateSoon.schedule(this.debounce.get(this.editor.getModel()));\n        }));\n        this.scheduleAutomaticUpdate();\n    }\n    fixAndGetIndexOfCurrentSelection() {\n        if (!this.currentlySelectedCompletionId || !this.cache.value) {\n            return 0;\n        }\n        if (this.cache.value.completions.length === 0) {\n            // don't reset the selection in this case\n            return 0;\n        }\n        const idx = this.cache.value.completions.findIndex(v => v.semanticId === this.currentlySelectedCompletionId);\n        if (idx === -1) {\n            // Reset the selection so that the selection does not jump back when it appears again\n            this.currentlySelectedCompletionId = undefined;\n            return 0;\n        }\n        return idx;\n    }\n    get currentCachedCompletion() {\n        if (!this.cache.value) {\n            return undefined;\n        }\n        return this.cache.value.completions[this.fixAndGetIndexOfCurrentSelection()];\n    }\n    showNextInlineCompletion() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ensureUpdateWithExplicitContext();\n            const completions = ((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions) || [];\n            if (completions.length > 0) {\n                const newIdx = (this.fixAndGetIndexOfCurrentSelection() + 1) % completions.length;\n                this.currentlySelectedCompletionId = completions[newIdx].semanticId;\n            }\n            else {\n                this.currentlySelectedCompletionId = undefined;\n            }\n            this.onDidChangeEmitter.fire();\n        });\n    }\n    showPreviousInlineCompletion() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ensureUpdateWithExplicitContext();\n            const completions = ((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions) || [];\n            if (completions.length > 0) {\n                const newIdx = (this.fixAndGetIndexOfCurrentSelection() + completions.length - 1) % completions.length;\n                this.currentlySelectedCompletionId = completions[newIdx].semanticId;\n            }\n            else {\n                this.currentlySelectedCompletionId = undefined;\n            }\n            this.onDidChangeEmitter.fire();\n        });\n    }\n    ensureUpdateWithExplicitContext() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this.updateOperation.value) {\n                // Restart or wait for current update operation\n                if (this.updateOperation.value.triggerKind === InlineCompletionTriggerKind.Explicit) {\n                    yield this.updateOperation.value.promise;\n                }\n                else {\n                    yield this.update(InlineCompletionTriggerKind.Explicit);\n                }\n            }\n            else if (((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.triggerKind) !== InlineCompletionTriggerKind.Explicit) {\n                // Refresh cache\n                yield this.update(InlineCompletionTriggerKind.Explicit);\n            }\n        });\n    }\n    hasMultipleInlineCompletions() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.ensureUpdateWithExplicitContext();\n            return (((_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions.length) || 0) > 1;\n        });\n    }\n    //#endregion\n    get ghostText() {\n        const currentCompletion = this.currentCompletion;\n        const mode = this.editor.getOptions().get(55 /* inlineSuggest */).mode;\n        return currentCompletion ? inlineCompletionToGhostText(currentCompletion, this.editor.getModel(), mode, this.editor.getPosition()) : undefined;\n    }\n    get currentCompletion() {\n        const completion = this.currentCachedCompletion;\n        if (!completion) {\n            return undefined;\n        }\n        return completion.toLiveInlineCompletion();\n    }\n    get isValid() {\n        return this.editor.getPosition().lineNumber === this.triggerPosition.lineNumber;\n    }\n    scheduleAutomaticUpdate() {\n        // Since updateSoon debounces, starvation can happen.\n        // To prevent stale cache, we clear the current update operation.\n        this.updateOperation.clear();\n        this.updateSoon.schedule(this.debounce.get(this.editor.getModel()));\n    }\n    update(triggerKind) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.shouldUpdate()) {\n                return;\n            }\n            const position = this.editor.getPosition();\n            const startTime = new Date();\n            const promise = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                let result;\n                try {\n                    result = yield provideInlineCompletions(this.registry, position, this.editor.getModel(), { triggerKind, selectedSuggestionInfo: undefined }, token, this.languageConfigurationService);\n                    const endTime = new Date();\n                    this.debounce.update(this.editor.getModel(), endTime.getTime() - startTime.getTime());\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                    return;\n                }\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                this.cache.setValue(this.editor, result, triggerKind);\n                this.onDidChangeEmitter.fire();\n            }));\n            const operation = new UpdateOperation(promise, triggerKind);\n            this.updateOperation.value = operation;\n            yield promise;\n            if (this.updateOperation.value === operation) {\n                this.updateOperation.clear();\n            }\n        });\n    }\n    takeOwnership(disposable) {\n        this._register(disposable);\n    }\n    commitCurrentCompletion() {\n        if (!this.ghostText) {\n            // No ghost text was shown for this completion.\n            // Thus, we don't want to commit anything.\n            return;\n        }\n        const completion = this.currentCompletion;\n        if (completion) {\n            this.commit(completion);\n        }\n    }\n    commit(completion) {\n        // Mark the cache as stale, but don't dispose it yet,\n        // otherwise command args might get disposed.\n        const cache = this.cache.clearAndLeak();\n        this.editor.executeEdits('inlineSuggestion.accept', [\n            EditOperation.replaceMove(completion.range, completion.text)\n        ]);\n        if (completion.command) {\n            this.commandService\n                .executeCommand(completion.command.id, ...(completion.command.arguments || []))\n                .finally(() => {\n                cache === null || cache === void 0 ? void 0 : cache.dispose();\n            })\n                .then(undefined, onUnexpectedExternalError);\n        }\n        else {\n            cache === null || cache === void 0 ? void 0 : cache.dispose();\n        }\n        this.onDidChangeEmitter.fire();\n    }\n}\nexport class UpdateOperation {\n    constructor(promise, triggerKind) {\n        this.promise = promise;\n        this.triggerKind = triggerKind;\n    }\n    dispose() {\n        this.promise.cancel();\n    }\n}\n/**\n * The cache keeps itself in sync with the editor.\n * It also owns the completions result and disposes it when the cache is diposed.\n*/\nexport class SynchronizedInlineCompletionsCache extends Disposable {\n    constructor(editor, completionsSource, onChange, triggerKind) {\n        super();\n        this.triggerKind = triggerKind;\n        const decorationIds = editor.deltaDecorations([], completionsSource.items.map(i => ({\n            range: i.range,\n            options: {\n                description: 'inline-completion-tracking-range'\n            },\n        })));\n        this._register(toDisposable(() => {\n            editor.deltaDecorations(decorationIds, []);\n        }));\n        this.completions = completionsSource.items.map((c, idx) => new CachedInlineCompletion(c, decorationIds[idx]));\n        this._register(editor.onDidChangeModelContent(() => {\n            let hasChanged = false;\n            const model = editor.getModel();\n            for (const c of this.completions) {\n                const newRange = model.getDecorationRange(c.decorationId);\n                if (!newRange) {\n                    onUnexpectedError(new Error('Decoration has no range'));\n                    continue;\n                }\n                if (!c.synchronizedRange.equalsRange(newRange)) {\n                    hasChanged = true;\n                    c.synchronizedRange = newRange;\n                }\n            }\n            if (hasChanged) {\n                onChange();\n            }\n        }));\n        this._register(completionsSource);\n    }\n}\nclass CachedInlineCompletion {\n    constructor(inlineCompletion, decorationId) {\n        this.inlineCompletion = inlineCompletion;\n        this.decorationId = decorationId;\n        this.semanticId = JSON.stringify({\n            text: this.inlineCompletion.text,\n            startLine: this.inlineCompletion.range.startLineNumber,\n            startColumn: this.inlineCompletion.range.startColumn,\n            command: this.inlineCompletion.command\n        });\n        this.synchronizedRange = inlineCompletion.range;\n    }\n    toLiveInlineCompletion() {\n        return {\n            text: this.inlineCompletion.text,\n            range: this.synchronizedRange,\n            command: this.inlineCompletion.command,\n            sourceProvider: this.inlineCompletion.sourceProvider,\n            sourceInlineCompletions: this.inlineCompletion.sourceInlineCompletions,\n            sourceInlineCompletion: this.inlineCompletion.sourceInlineCompletion,\n        };\n    }\n}\nfunction getDefaultRange(position, model) {\n    const word = model.getWordAtPosition(position);\n    const maxColumn = model.getLineMaxColumn(position.lineNumber);\n    // By default, always replace up until the end of the current line.\n    // This default might be subject to change!\n    return word\n        ? new Range(position.lineNumber, word.startColumn, position.lineNumber, maxColumn)\n        : Range.fromPositions(position, position.with(undefined, maxColumn));\n}\nexport function provideInlineCompletions(registry, position, model, context, token = CancellationToken.None, languageConfigurationService) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const defaultReplaceRange = getDefaultRange(position, model);\n        const providers = registry.all(model);\n        const results = yield Promise.all(providers.map((provider) => __awaiter(this, void 0, void 0, function* () {\n            const completions = yield Promise.resolve(provider.provideInlineCompletions(model, position, context, token)).catch(onUnexpectedExternalError);\n            return ({\n                completions,\n                provider,\n                dispose: () => {\n                    if (completions) {\n                        provider.freeInlineCompletions(completions);\n                    }\n                }\n            });\n        })));\n        const itemsByHash = new Map();\n        for (const result of results) {\n            const completions = result.completions;\n            if (completions) {\n                for (const item of completions.items) {\n                    const range = item.range ? Range.lift(item.range) : defaultReplaceRange;\n                    if (range.startLineNumber !== range.endLineNumber) {\n                        // Ignore invalid ranges.\n                        continue;\n                    }\n                    const text = languageConfigurationService && item.completeBracketPairs\n                        ? closeBrackets(item.text, range.getStartPosition(), model, languageConfigurationService)\n                        : item.text;\n                    const trackedItem = ({\n                        text,\n                        range,\n                        command: item.command,\n                        sourceProvider: result.provider,\n                        sourceInlineCompletions: completions,\n                        sourceInlineCompletion: item\n                    });\n                    itemsByHash.set(JSON.stringify({ text, range: item.range }), trackedItem);\n                }\n            }\n        }\n        return {\n            items: [...itemsByHash.values()],\n            dispose: () => {\n                for (const result of results) {\n                    result.dispose();\n                }\n            },\n        };\n    });\n}\nfunction closeBrackets(text, position, model, languageConfigurationService) {\n    const lineStart = model.getLineContent(position.lineNumber).substring(0, position.column - 1);\n    const newLine = lineStart + text;\n    const newTokens = model.tokenizeLineWithEdit(position, newLine.length - (position.column - 1), text);\n    const slicedTokens = newTokens === null || newTokens === void 0 ? void 0 : newTokens.sliceAndInflate(position.column - 1, newLine.length, 0);\n    if (!slicedTokens) {\n        return text;\n    }\n    console.log(slicedTokens);\n    const newText = fixBracketsInLine(slicedTokens, languageConfigurationService);\n    return newText;\n}\nexport function minimizeInlineCompletion(model, inlineCompletion) {\n    if (!inlineCompletion) {\n        return inlineCompletion;\n    }\n    const valueToReplace = model.getValueInRange(inlineCompletion.range);\n    const commonPrefixLen = commonPrefixLength(valueToReplace, inlineCompletion.text);\n    const startOffset = model.getOffsetAt(inlineCompletion.range.getStartPosition()) + commonPrefixLen;\n    const start = model.getPositionAt(startOffset);\n    const remainingValueToReplace = valueToReplace.substr(commonPrefixLen);\n    const commonSuffixLen = commonSuffixLength(remainingValueToReplace, inlineCompletion.text);\n    const end = model.getPositionAt(Math.max(startOffset, model.getOffsetAt(inlineCompletion.range.getEndPosition()) - commonSuffixLen));\n    return {\n        range: Range.fromPositions(start, end),\n        text: inlineCompletion.text.substr(commonPrefixLen, inlineCompletion.text.length - commonPrefixLen - commonSuffixLen),\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { compareBy, findMaxBy, numberComparator } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { Emitter, Event } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { SnippetParser } from '../../snippet/browser/snippetParser.js';\nimport { SnippetSession } from '../../snippet/browser/snippetSession.js';\nimport { SuggestController } from '../../suggest/browser/suggestController.js';\nimport { minimizeInlineCompletion } from './inlineCompletionsModel.js';\nimport { normalizedInlineCompletionsEquals } from './inlineCompletionToGhostText.js';\nexport class SuggestWidgetInlineCompletionProvider extends Disposable {\n    constructor(editor, suggestControllerPreselector) {\n        super();\n        this.editor = editor;\n        this.suggestControllerPreselector = suggestControllerPreselector;\n        this.isSuggestWidgetVisible = false;\n        this.isShiftKeyPressed = false;\n        this._isActive = false;\n        this._currentSuggestItemInfo = undefined;\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        // This delay fixes a suggest widget issue when typing \".\" immediately restarts the suggestion session.\n        this.setInactiveDelayed = this._register(new RunOnceScheduler(() => {\n            if (!this.isSuggestWidgetVisible) {\n                if (this._isActive) {\n                    this._isActive = false;\n                    this.onDidChangeEmitter.fire();\n                }\n            }\n        }, 100));\n        // See the command acceptAlternativeSelectedSuggestion that is bound to shift+tab\n        this._register(editor.onKeyDown(e => {\n            if (e.shiftKey && !this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = true;\n                this.update(this._isActive);\n            }\n        }));\n        this._register(editor.onKeyUp(e => {\n            if (e.shiftKey && this.isShiftKeyPressed) {\n                this.isShiftKeyPressed = false;\n                this.update(this._isActive);\n            }\n        }));\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            this._register(suggestController.registerSelector({\n                priority: 100,\n                select: (model, pos, suggestItems) => {\n                    const textModel = this.editor.getModel();\n                    const normalizedItemToPreselect = minimizeInlineCompletion(textModel, this.suggestControllerPreselector());\n                    if (!normalizedItemToPreselect) {\n                        return -1;\n                    }\n                    const position = Position.lift(pos);\n                    const candidates = suggestItems\n                        .map((suggestItem, index) => {\n                        const inlineSuggestItem = suggestionToSuggestItemInfo(suggestController, position, suggestItem, this.isShiftKeyPressed);\n                        const normalizedSuggestItem = minimizeInlineCompletion(textModel, inlineSuggestItem === null || inlineSuggestItem === void 0 ? void 0 : inlineSuggestItem.normalizedInlineCompletion);\n                        if (!normalizedSuggestItem) {\n                            return undefined;\n                        }\n                        const valid = rangeStartsWith(normalizedItemToPreselect.range, normalizedSuggestItem.range) &&\n                            normalizedItemToPreselect.text.startsWith(normalizedSuggestItem.text);\n                        return { index, valid, prefixLength: normalizedSuggestItem.text.length, suggestItem };\n                    })\n                        .filter(item => item && item.valid);\n                    const result = findMaxBy(candidates, compareBy(s => s.prefixLength, numberComparator));\n                    return result ? result.index : -1;\n                }\n            }));\n            let isBoundToSuggestWidget = false;\n            const bindToSuggestWidget = () => {\n                if (isBoundToSuggestWidget) {\n                    return;\n                }\n                isBoundToSuggestWidget = true;\n                this._register(suggestController.widget.value.onDidShow(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n                this._register(suggestController.widget.value.onDidHide(() => {\n                    this.isSuggestWidgetVisible = false;\n                    this.setInactiveDelayed.schedule();\n                    this.update(this._isActive);\n                }));\n                this._register(suggestController.widget.value.onDidFocus(() => {\n                    this.isSuggestWidgetVisible = true;\n                    this.update(true);\n                }));\n            };\n            this._register(Event.once(suggestController.model.onDidTrigger)(e => {\n                bindToSuggestWidget();\n            }));\n        }\n        this.update(this._isActive);\n    }\n    /**\n     * Returns undefined if the suggest widget is not active.\n    */\n    get state() {\n        if (!this._isActive) {\n            return undefined;\n        }\n        return { selectedItem: this._currentSuggestItemInfo };\n    }\n    update(newActive) {\n        const newInlineCompletion = this.getSuggestItemInfo();\n        let shouldFire = false;\n        if (!suggestItemInfoEquals(this._currentSuggestItemInfo, newInlineCompletion)) {\n            this._currentSuggestItemInfo = newInlineCompletion;\n            shouldFire = true;\n        }\n        if (this._isActive !== newActive) {\n            this._isActive = newActive;\n            shouldFire = true;\n        }\n        if (shouldFire) {\n            this.onDidChangeEmitter.fire();\n        }\n    }\n    getSuggestItemInfo() {\n        const suggestController = SuggestController.get(this.editor);\n        if (!suggestController) {\n            return undefined;\n        }\n        if (!this.isSuggestWidgetVisible) {\n            return undefined;\n        }\n        const focusedItem = suggestController.widget.value.getFocusedItem();\n        if (!focusedItem) {\n            return undefined;\n        }\n        // TODO: item.isResolved\n        return suggestionToSuggestItemInfo(suggestController, this.editor.getPosition(), focusedItem.item, this.isShiftKeyPressed);\n    }\n    stopForceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            suggestController.stopForceRenderingAbove();\n        }\n    }\n    forceRenderingAbove() {\n        const suggestController = SuggestController.get(this.editor);\n        if (suggestController) {\n            suggestController.forceRenderingAbove();\n        }\n    }\n}\nexport function rangeStartsWith(rangeToTest, prefix) {\n    return (prefix.startLineNumber === rangeToTest.startLineNumber &&\n        prefix.startColumn === rangeToTest.startColumn &&\n        (prefix.endLineNumber < rangeToTest.endLineNumber ||\n            (prefix.endLineNumber === rangeToTest.endLineNumber &&\n                prefix.endColumn <= rangeToTest.endColumn)));\n}\nfunction suggestItemInfoEquals(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (!a || !b) {\n        return false;\n    }\n    return a.completionItemKind === b.completionItemKind &&\n        a.isSnippetText === b.isSnippetText &&\n        normalizedInlineCompletionsEquals(a.normalizedInlineCompletion, b.normalizedInlineCompletion);\n}\nfunction suggestionToSuggestItemInfo(suggestController, position, item, toggleMode) {\n    // additionalTextEdits might not be resolved here, this could be problematic.\n    if (Array.isArray(item.completion.additionalTextEdits) && item.completion.additionalTextEdits.length > 0) {\n        // cannot represent additional text edits\n        return {\n            completionItemKind: item.completion.kind,\n            isSnippetText: false,\n            normalizedInlineCompletion: {\n                // Dummy element, so that space is reserved, but no text is shown\n                range: Range.fromPositions(position, position),\n                text: ''\n            },\n        };\n    }\n    let { insertText } = item.completion;\n    let isSnippetText = false;\n    if (item.completion.insertTextRules & 4 /* InsertAsSnippet */) {\n        const snippet = new SnippetParser().parse(insertText);\n        const model = suggestController.editor.getModel();\n        // Ignore snippets that are too large.\n        // Adjust whitespace is expensive for them.\n        if (snippet.children.length > 100) {\n            return undefined;\n        }\n        SnippetSession.adjustWhitespace(model, position, snippet, true, true);\n        insertText = snippet.toString();\n        isSnippetText = true;\n    }\n    const info = suggestController.getOverwriteInfo(item, toggleMode);\n    return {\n        isSnippetText,\n        completionItemKind: item.completion.kind,\n        normalizedInlineCompletion: {\n            text: insertText,\n            range: Range.fromPositions(position.delta(0, -info.overwriteBefore), position.delta(0, Math.max(info.overwriteAfter, 0))),\n        }\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { BaseGhostTextWidgetModel, GhostText } from './ghostText.js';\nimport { minimizeInlineCompletion, provideInlineCompletions, UpdateOperation } from './inlineCompletionsModel.js';\nimport { inlineCompletionToGhostText } from './inlineCompletionToGhostText.js';\nimport { SuggestWidgetInlineCompletionProvider } from './suggestWidgetInlineCompletionProvider.js';\nlet SuggestWidgetPreviewModel = class SuggestWidgetPreviewModel extends BaseGhostTextWidgetModel {\n    constructor(editor, cache, languageFeaturesService) {\n        super(editor);\n        this.cache = cache;\n        this.languageFeaturesService = languageFeaturesService;\n        this.suggestionInlineCompletionSource = this._register(new SuggestWidgetInlineCompletionProvider(this.editor, \n        // Use the first cache item (if any) as preselection.\n        () => { var _a, _b; return (_b = (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions[0]) === null || _b === void 0 ? void 0 : _b.toLiveInlineCompletion(); }));\n        this.updateOperation = this._register(new MutableDisposable());\n        this.updateCacheSoon = this._register(new RunOnceScheduler(() => this.updateCache(), 50));\n        this.minReservedLineCount = 0;\n        this._register(this.suggestionInlineCompletionSource.onDidChange(() => {\n            this.updateCacheSoon.schedule();\n            const suggestWidgetState = this.suggestionInlineCompletionSource.state;\n            if (!suggestWidgetState) {\n                this.minReservedLineCount = 0;\n            }\n            const newGhostText = this.ghostText;\n            if (newGhostText) {\n                this.minReservedLineCount = Math.max(this.minReservedLineCount, sum(newGhostText.parts.map(p => p.lines.length - 1)));\n            }\n            if (this.minReservedLineCount >= 1) {\n                this.suggestionInlineCompletionSource.forceRenderingAbove();\n            }\n            else {\n                this.suggestionInlineCompletionSource.stopForceRenderingAbove();\n            }\n            this.onDidChangeEmitter.fire();\n        }));\n        this._register(this.cache.onDidChange(() => {\n            this.onDidChangeEmitter.fire();\n        }));\n        this._register(this.editor.onDidChangeCursorPosition((e) => {\n            this.minReservedLineCount = 0;\n            this.updateCacheSoon.schedule();\n            this.onDidChangeEmitter.fire();\n        }));\n        this._register(toDisposable(() => this.suggestionInlineCompletionSource.stopForceRenderingAbove()));\n    }\n    get isActive() {\n        return this.suggestionInlineCompletionSource.state !== undefined;\n    }\n    isSuggestionPreviewEnabled() {\n        const suggestOptions = this.editor.getOption(106 /* suggest */);\n        return suggestOptions.preview;\n    }\n    updateCache() {\n        return __awaiter(this, void 0, void 0, function* () {\n            const state = this.suggestionInlineCompletionSource.state;\n            if (!state || !state.selectedItem) {\n                return;\n            }\n            const info = {\n                text: state.selectedItem.normalizedInlineCompletion.text,\n                range: state.selectedItem.normalizedInlineCompletion.range,\n                isSnippetText: state.selectedItem.isSnippetText,\n                completionKind: state.selectedItem.completionItemKind,\n            };\n            const position = this.editor.getPosition();\n            const promise = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                let result;\n                try {\n                    result = yield provideInlineCompletions(this.languageFeaturesService.inlineCompletionsProvider, position, this.editor.getModel(), { triggerKind: InlineCompletionTriggerKind.Automatic, selectedSuggestionInfo: info }, token);\n                }\n                catch (e) {\n                    onUnexpectedError(e);\n                    return;\n                }\n                if (token.isCancellationRequested) {\n                    return;\n                }\n                this.cache.setValue(this.editor, result, InlineCompletionTriggerKind.Automatic);\n                this.onDidChangeEmitter.fire();\n            }));\n            const operation = new UpdateOperation(promise, InlineCompletionTriggerKind.Automatic);\n            this.updateOperation.value = operation;\n            yield promise;\n            if (this.updateOperation.value === operation) {\n                this.updateOperation.clear();\n            }\n        });\n    }\n    get ghostText() {\n        var _a, _b, _c;\n        const isSuggestionPreviewEnabled = this.isSuggestionPreviewEnabled();\n        const augmentedCompletion = minimizeInlineCompletion(this.editor.getModel(), (_b = (_a = this.cache.value) === null || _a === void 0 ? void 0 : _a.completions[0]) === null || _b === void 0 ? void 0 : _b.toLiveInlineCompletion());\n        const suggestWidgetState = this.suggestionInlineCompletionSource.state;\n        const suggestInlineCompletion = minimizeInlineCompletion(this.editor.getModel(), (_c = suggestWidgetState === null || suggestWidgetState === void 0 ? void 0 : suggestWidgetState.selectedItem) === null || _c === void 0 ? void 0 : _c.normalizedInlineCompletion);\n        const isAugmentedCompletionValid = augmentedCompletion\n            && suggestInlineCompletion\n            && augmentedCompletion.text.startsWith(suggestInlineCompletion.text)\n            && augmentedCompletion.range.equalsRange(suggestInlineCompletion.range);\n        if (!isSuggestionPreviewEnabled && !isAugmentedCompletionValid) {\n            return undefined;\n        }\n        // If the augmented completion is not valid and there is no suggest inline completion, we still show the augmented completion.\n        const finalCompletion = isAugmentedCompletionValid ? augmentedCompletion : (suggestInlineCompletion || augmentedCompletion);\n        const inlineCompletionPreviewLength = isAugmentedCompletionValid ? finalCompletion.text.length - suggestInlineCompletion.text.length : 0;\n        const newGhostText = this.toGhostText(finalCompletion, inlineCompletionPreviewLength);\n        return newGhostText;\n    }\n    toGhostText(completion, inlineCompletionPreviewLength) {\n        const mode = this.editor.getOptions().get(106 /* suggest */).previewMode;\n        return completion\n            ? (inlineCompletionToGhostText(completion, this.editor.getModel(), mode, this.editor.getPosition(), inlineCompletionPreviewLength) ||\n                // Show an invisible ghost text to reserve space\n                new GhostText(completion.range.endLineNumber, [], this.minReservedLineCount))\n            : undefined;\n    }\n};\nSuggestWidgetPreviewModel = __decorate([\n    __param(2, ILanguageFeaturesService)\n], SuggestWidgetPreviewModel);\nexport { SuggestWidgetPreviewModel };\nfunction sum(arr) {\n    return arr.reduce((a, b) => a + b, 0);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable } from '../../../../base/common/lifecycle.js';\nimport { Position } from '../../../common/core/position.js';\nimport { InlineCompletionTriggerKind } from '../../../common/languages.js';\nimport { InlineCompletionsModel, SynchronizedInlineCompletionsCache } from './inlineCompletionsModel.js';\nimport { SuggestWidgetPreviewModel } from './suggestWidgetPreviewModel.js';\nimport { createDisposableRef } from './utils.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nexport class DelegatingModel extends Disposable {\n    constructor() {\n        super(...arguments);\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.hasCachedGhostText = false;\n        this.currentModelRef = this._register(new MutableDisposable());\n    }\n    get targetModel() {\n        var _a;\n        return (_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object;\n    }\n    setTargetModel(model) {\n        var _a;\n        if (((_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object) === model) {\n            return;\n        }\n        this.currentModelRef.clear();\n        this.currentModelRef.value = model ? createDisposableRef(model, model.onDidChange(() => {\n            this.hasCachedGhostText = false;\n            this.onDidChangeEmitter.fire();\n        })) : undefined;\n        this.hasCachedGhostText = false;\n        this.onDidChangeEmitter.fire();\n    }\n    get ghostText() {\n        var _a, _b;\n        if (!this.hasCachedGhostText) {\n            this.cachedGhostText = (_b = (_a = this.currentModelRef.value) === null || _a === void 0 ? void 0 : _a.object) === null || _b === void 0 ? void 0 : _b.ghostText;\n            this.hasCachedGhostText = true;\n        }\n        return this.cachedGhostText;\n    }\n    setExpanded(expanded) {\n        var _a;\n        (_a = this.targetModel) === null || _a === void 0 ? void 0 : _a.setExpanded(expanded);\n    }\n    get minReservedLineCount() {\n        return this.targetModel ? this.targetModel.minReservedLineCount : 0;\n    }\n}\n/**\n * A ghost text model that is both driven by inline completions and the suggest widget.\n*/\nlet GhostTextModel = class GhostTextModel extends DelegatingModel {\n    constructor(editor, instantiationService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.sharedCache = this._register(new SharedInlineCompletionCache());\n        this.suggestWidgetAdapterModel = this._register(this.instantiationService.createInstance(SuggestWidgetPreviewModel, this.editor, this.sharedCache));\n        this.inlineCompletionsModel = this._register(this.instantiationService.createInstance(InlineCompletionsModel, this.editor, this.sharedCache));\n        this._register(this.suggestWidgetAdapterModel.onDidChange(() => {\n            this.updateModel();\n        }));\n        this.updateModel();\n    }\n    get activeInlineCompletionsModel() {\n        if (this.targetModel === this.inlineCompletionsModel) {\n            return this.inlineCompletionsModel;\n        }\n        return undefined;\n    }\n    updateModel() {\n        this.setTargetModel(this.suggestWidgetAdapterModel.isActive\n            ? this.suggestWidgetAdapterModel\n            : this.inlineCompletionsModel);\n        this.inlineCompletionsModel.setActive(this.targetModel === this.inlineCompletionsModel);\n    }\n    shouldShowHoverAt(hoverRange) {\n        var _a;\n        const ghostText = (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.ghostText;\n        if (ghostText) {\n            return ghostText.parts.some(p => hoverRange.containsPosition(new Position(ghostText.lineNumber, p.column)));\n        }\n        return false;\n    }\n    triggerInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.trigger(InlineCompletionTriggerKind.Explicit);\n    }\n    commitInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.commitCurrentSuggestion();\n    }\n    hideInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.hide();\n    }\n    showNextInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.showNext();\n    }\n    showPreviousInlineCompletion() {\n        var _a;\n        (_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.showPrevious();\n    }\n    hasMultipleInlineCompletions() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield ((_a = this.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\n            return result !== undefined ? result : false;\n        });\n    }\n};\nGhostTextModel = __decorate([\n    __param(1, IInstantiationService)\n], GhostTextModel);\nexport { GhostTextModel };\nexport class SharedInlineCompletionCache extends Disposable {\n    constructor() {\n        super(...arguments);\n        this.onDidChangeEmitter = new Emitter();\n        this.onDidChange = this.onDidChangeEmitter.event;\n        this.cache = this._register(new MutableDisposable());\n    }\n    get value() {\n        return this.cache.value;\n    }\n    setValue(editor, completionsSource, triggerKind) {\n        this.cache.value = new SynchronizedInlineCompletionsCache(editor, completionsSource, () => this.onDidChangeEmitter.fire(), triggerKind);\n    }\n    clearAndLeak() {\n        return this.cache.clearAndLeak();\n    }\n    clear() {\n        this.cache.clear();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport function createDisposableRef(object, disposable) {\n    return {\n        object,\n        dispose: () => disposable === null || disposable === void 0 ? void 0 : disposable.dispose(),\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar _a;\nimport * as dom from '../../../../base/browser/dom.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './ghostText.css';\nimport { applyFontInfo } from '../../../browser/config/domFontInfo.js';\nimport { EditorFontLigatures } from '../../../common/config/editorOptions.js';\nimport { LineTokens } from '../../../common/tokens/lineTokens.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { createStringBuilder } from '../../../common/core/stringBuilder.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { ghostTextBackground, ghostTextBorder, ghostTextForeground } from '../../../common/core/editorColorRegistry.js';\nimport { LineDecoration } from '../../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../../common/viewLayout/viewLineRenderer.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('editorGhostText', { createHTML: value => value });\nlet GhostTextWidget = class GhostTextWidget extends Disposable {\n    constructor(editor, model, instantiationService, languageService) {\n        super();\n        this.editor = editor;\n        this.model = model;\n        this.instantiationService = instantiationService;\n        this.languageService = languageService;\n        this.disposed = false;\n        this.partsWidget = this._register(this.instantiationService.createInstance(DecorationsWidget, this.editor));\n        this.additionalLinesWidget = this._register(new AdditionalLinesWidget(this.editor, this.languageService.languageIdCodec));\n        this.viewMoreContentWidget = undefined;\n        this._register(this.editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(29 /* disableMonospaceOptimizations */)\n                || e.hasChanged(105 /* stopRenderingLineAfter */)\n                || e.hasChanged(88 /* renderWhitespace */)\n                || e.hasChanged(83 /* renderControlCharacters */)\n                || e.hasChanged(45 /* fontLigatures */)\n                || e.hasChanged(44 /* fontInfo */)\n                || e.hasChanged(59 /* lineHeight */)) {\n                this.update();\n            }\n        }));\n        this._register(toDisposable(() => {\n            var _a;\n            this.disposed = true;\n            this.update();\n            (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.viewMoreContentWidget = undefined;\n        }));\n        this._register(model.onDidChange(() => {\n            this.update();\n        }));\n        this.update();\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        return (this.additionalLinesWidget.viewZoneId === viewZoneId);\n    }\n    update() {\n        var _a;\n        const ghostText = this.model.ghostText;\n        if (!this.editor.hasModel() || !ghostText || this.disposed) {\n            this.partsWidget.clear();\n            this.additionalLinesWidget.clear();\n            return;\n        }\n        const inlineTexts = new Array();\n        const additionalLines = new Array();\n        function addToAdditionalLines(lines, className) {\n            if (additionalLines.length > 0) {\n                const lastLine = additionalLines[additionalLines.length - 1];\n                if (className) {\n                    lastLine.decorations.push(new LineDecoration(lastLine.content.length + 1, lastLine.content.length + 1 + lines[0].length, className, 0 /* Regular */));\n                }\n                lastLine.content += lines[0];\n                lines = lines.slice(1);\n            }\n            for (const line of lines) {\n                additionalLines.push({\n                    content: line,\n                    decorations: className ? [new LineDecoration(1, line.length + 1, className, 0 /* Regular */)] : []\n                });\n            }\n        }\n        const textBufferLine = this.editor.getModel().getLineContent(ghostText.lineNumber);\n        this.editor.getModel().getLineTokens(ghostText.lineNumber);\n        let hiddenTextStartColumn = undefined;\n        let lastIdx = 0;\n        for (const part of ghostText.parts) {\n            let lines = part.lines;\n            if (hiddenTextStartColumn === undefined) {\n                inlineTexts.push({\n                    column: part.column,\n                    text: lines[0],\n                    preview: part.preview,\n                });\n                lines = lines.slice(1);\n            }\n            else {\n                addToAdditionalLines([textBufferLine.substring(lastIdx, part.column - 1)], undefined);\n            }\n            if (lines.length > 0) {\n                addToAdditionalLines(lines, 'ghost-text');\n                if (hiddenTextStartColumn === undefined && part.column <= textBufferLine.length) {\n                    hiddenTextStartColumn = part.column;\n                }\n            }\n            lastIdx = part.column - 1;\n        }\n        if (hiddenTextStartColumn !== undefined) {\n            addToAdditionalLines([textBufferLine.substring(lastIdx)], undefined);\n        }\n        this.partsWidget.setParts(ghostText.lineNumber, inlineTexts, hiddenTextStartColumn !== undefined ? { column: hiddenTextStartColumn, length: textBufferLine.length + 1 - hiddenTextStartColumn } : undefined);\n        this.additionalLinesWidget.updateLines(ghostText.lineNumber, additionalLines, ghostText.additionalReservedLineCount);\n        if (ghostText.parts.some(p => p.lines.length < 0)) {\n            // Not supported at the moment, condition is always false.\n            this.viewMoreContentWidget = this.renderViewMoreLines(new Position(ghostText.lineNumber, this.editor.getModel().getLineMaxColumn(ghostText.lineNumber)), '', 0);\n        }\n        else {\n            (_a = this.viewMoreContentWidget) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.viewMoreContentWidget = undefined;\n        }\n    }\n    renderViewMoreLines(position, firstLineText, remainingLinesLength) {\n        const fontInfo = this.editor.getOption(44 /* fontInfo */);\n        const domNode = document.createElement('div');\n        domNode.className = 'suggest-preview-additional-widget';\n        applyFontInfo(domNode, fontInfo);\n        const spacer = document.createElement('span');\n        spacer.className = 'content-spacer';\n        spacer.append(firstLineText);\n        domNode.append(spacer);\n        const newline = document.createElement('span');\n        newline.className = 'content-newline suggest-preview-text';\n        newline.append('⏎  ');\n        domNode.append(newline);\n        const disposableStore = new DisposableStore();\n        const button = document.createElement('div');\n        button.className = 'button suggest-preview-text';\n        button.append(`+${remainingLinesLength} lines…`);\n        disposableStore.add(dom.addStandardDisposableListener(button, 'mousedown', (e) => {\n            var _a;\n            (_a = this.model) === null || _a === void 0 ? void 0 : _a.setExpanded(true);\n            e.preventDefault();\n            this.editor.focus();\n        }));\n        domNode.append(button);\n        return new ViewMoreLinesContentWidget(this.editor, position, domNode, disposableStore);\n    }\n};\nGhostTextWidget = __decorate([\n    __param(2, IInstantiationService),\n    __param(3, ILanguageService)\n], GhostTextWidget);\nexport { GhostTextWidget };\nclass DecorationsWidget {\n    constructor(editor) {\n        this.editor = editor;\n        this.decorationIds = [];\n        this.disposableStore = new DisposableStore();\n    }\n    dispose() {\n        this.clear();\n        this.disposableStore.dispose();\n    }\n    clear() {\n        this.editor.deltaDecorations(this.decorationIds, []);\n        this.disposableStore.clear();\n    }\n    setParts(lineNumber, parts, hiddenText) {\n        this.disposableStore.clear();\n        const textModel = this.editor.getModel();\n        if (!textModel) {\n            return;\n        }\n        const hiddenTextDecorations = new Array();\n        if (hiddenText) {\n            hiddenTextDecorations.push({\n                range: Range.fromPositions(new Position(lineNumber, hiddenText.column), new Position(lineNumber, hiddenText.column + hiddenText.length)),\n                options: {\n                    inlineClassName: 'ghost-text-hidden',\n                    description: 'ghost-text-hidden'\n                }\n            });\n        }\n        this.decorationIds = this.editor.deltaDecorations(this.decorationIds, parts.map(p => {\n            return ({\n                range: Range.fromPositions(new Position(lineNumber, p.column)),\n                options: {\n                    description: 'ghost-text',\n                    after: { content: p.text, inlineClassName: p.preview ? 'ghost-text-decoration-preview' : 'ghost-text-decoration' },\n                    showIfCollapsed: true,\n                }\n            });\n        }).concat(hiddenTextDecorations));\n    }\n}\nclass AdditionalLinesWidget {\n    constructor(editor, languageIdCodec) {\n        this.editor = editor;\n        this.languageIdCodec = languageIdCodec;\n        this._viewZoneId = undefined;\n    }\n    get viewZoneId() { return this._viewZoneId; }\n    dispose() {\n        this.clear();\n    }\n    clear() {\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n        });\n    }\n    updateLines(lineNumber, additionalLines, minReservedLineCount) {\n        const textModel = this.editor.getModel();\n        if (!textModel) {\n            return;\n        }\n        const { tabSize } = textModel.getOptions();\n        this.editor.changeViewZones((changeAccessor) => {\n            if (this._viewZoneId) {\n                changeAccessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n            }\n            const heightInLines = Math.max(additionalLines.length, minReservedLineCount);\n            if (heightInLines > 0) {\n                const domNode = document.createElement('div');\n                renderLines(domNode, tabSize, additionalLines, this.editor.getOptions(), this.languageIdCodec);\n                this._viewZoneId = changeAccessor.addZone({\n                    afterLineNumber: lineNumber,\n                    heightInLines: heightInLines,\n                    domNode,\n                    afterColumnAffinity: 1 /* Right */\n                });\n            }\n        });\n    }\n}\nfunction renderLines(domNode, tabSize, lines, opts, languageIdCodec) {\n    const disableMonospaceOptimizations = opts.get(29 /* disableMonospaceOptimizations */);\n    const stopRenderingLineAfter = opts.get(105 /* stopRenderingLineAfter */);\n    // To avoid visual confusion, we don't want to render visible whitespace\n    const renderWhitespace = 'none';\n    const renderControlCharacters = opts.get(83 /* renderControlCharacters */);\n    const fontLigatures = opts.get(45 /* fontLigatures */);\n    const fontInfo = opts.get(44 /* fontInfo */);\n    const lineHeight = opts.get(59 /* lineHeight */);\n    const sb = createStringBuilder(10000);\n    sb.appendASCIIString('<div class=\"suggest-preview-text\">');\n    for (let i = 0, len = lines.length; i < len; i++) {\n        const lineData = lines[i];\n        const line = lineData.content;\n        sb.appendASCIIString('<div class=\"view-line');\n        sb.appendASCIIString('\" style=\"top:');\n        sb.appendASCIIString(String(i * lineHeight));\n        sb.appendASCIIString('px;width:1000000px;\">');\n        const isBasicASCII = strings.isBasicASCII(line);\n        const containsRTL = strings.containsRTL(line);\n        const lineTokens = LineTokens.createEmpty(line, languageIdCodec);\n        renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, line, false, isBasicASCII, containsRTL, 0, lineTokens, lineData.decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null), sb);\n        sb.appendASCIIString('</div>');\n    }\n    sb.appendASCIIString('</div>');\n    applyFontInfo(domNode, fontInfo);\n    const html = sb.build();\n    const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n    domNode.innerHTML = trustedhtml;\n}\nclass ViewMoreLinesContentWidget extends Disposable {\n    constructor(editor, position, domNode, disposableStore) {\n        super();\n        this.editor = editor;\n        this.position = position;\n        this.domNode = domNode;\n        this.allowEditorOverflow = false;\n        this.suppressMouseDown = false;\n        this._register(disposableStore);\n        this._register(toDisposable(() => {\n            this.editor.removeContentWidget(this);\n        }));\n        this.editor.addContentWidget(this);\n    }\n    getId() {\n        return 'editor.widget.viewMoreLinesWidget';\n    }\n    getDomNode() {\n        return this.domNode;\n    }\n    getPosition() {\n        return {\n            position: this.position,\n            preference: [0 /* EXACT */]\n        };\n    }\n}\nregisterThemingParticipant((theme, collector) => {\n    const foreground = theme.getColor(ghostTextForeground);\n    if (foreground) {\n        // `!important` ensures that other decorations don't cause a style conflict (#132017).\n        collector.addRule(`.monaco-editor .ghost-text-decoration { color: ${foreground.toString()} !important; }`);\n        collector.addRule(`.monaco-editor .ghost-text-decoration-preview { color: ${foreground.toString()} !important; }`);\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { color: ${foreground.toString()} !important; }`);\n    }\n    const background = theme.getColor(ghostTextBackground);\n    if (background) {\n        collector.addRule(`.monaco-editor .ghost-text-decoration { background-color: ${background.toString()}; }`);\n        collector.addRule(`.monaco-editor .ghost-text-decoration-preview { background-color: ${background.toString()}; }`);\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { background-color: ${background.toString()}; }`);\n    }\n    const border = theme.getColor(ghostTextBorder);\n    if (border) {\n        collector.addRule(`.monaco-editor .suggest-preview-text .ghost-text { border: 1px solid ${border}; }`);\n        collector.addRule(`.monaco-editor .ghost-text-decoration { border: 1px solid ${border}; }`);\n        collector.addRule(`.monaco-editor .ghost-text-decoration-preview { border: 1px solid ${border}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable, MutableDisposable, toDisposable } from '../../../../base/common/lifecycle.js';\nimport { firstNonWhitespaceIndex } from '../../../../base/common/strings.js';\nimport { EditorAction, EditorCommand, registerEditorCommand } from '../../../browser/editorExtensions.js';\nimport { CursorColumns } from '../../../common/core/cursorColumns.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { inlineSuggestCommitId } from './consts.js';\nimport { GhostTextModel } from './ghostTextModel.js';\nimport { GhostTextWidget } from './ghostTextWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../../platform/instantiation/common/instantiation.js';\nimport { KeybindingsRegistry } from '../../../../platform/keybinding/common/keybindingsRegistry.js';\nlet GhostTextController = class GhostTextController extends Disposable {\n    constructor(editor, instantiationService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.triggeredExplicitly = false;\n        this.activeController = this._register(new MutableDisposable());\n        this.activeModelDidChangeEmitter = this._register(new Emitter());\n        this._register(this.editor.onDidChangeModel(() => {\n            this.updateModelController();\n        }));\n        this._register(this.editor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(106 /* suggest */)) {\n                this.updateModelController();\n            }\n            if (e.hasChanged(55 /* inlineSuggest */)) {\n                this.updateModelController();\n            }\n        }));\n        this.updateModelController();\n    }\n    static get(editor) {\n        return editor.getContribution(GhostTextController.ID);\n    }\n    get activeModel() {\n        var _a;\n        return (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.model;\n    }\n    // Don't call this method when not necessary. It will recreate the activeController.\n    updateModelController() {\n        const suggestOptions = this.editor.getOption(106 /* suggest */);\n        const inlineSuggestOptions = this.editor.getOption(55 /* inlineSuggest */);\n        this.activeController.value = undefined;\n        // ActiveGhostTextController is only created if one of those settings is set or if the inline completions are triggered explicitly.\n        this.activeController.value =\n            this.editor.hasModel() && (suggestOptions.preview || inlineSuggestOptions.enabled || this.triggeredExplicitly)\n                ? this.instantiationService.createInstance(ActiveGhostTextController, this.editor)\n                : undefined;\n        this.activeModelDidChangeEmitter.fire();\n    }\n    shouldShowHoverAt(hoverRange) {\n        var _a;\n        return ((_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.shouldShowHoverAt(hoverRange)) || false;\n    }\n    shouldShowHoverAtViewZone(viewZoneId) {\n        var _a, _b;\n        return ((_b = (_a = this.activeController.value) === null || _a === void 0 ? void 0 : _a.widget) === null || _b === void 0 ? void 0 : _b.shouldShowHoverAtViewZone(viewZoneId)) || false;\n    }\n    trigger() {\n        var _a;\n        this.triggeredExplicitly = true;\n        if (!this.activeController.value) {\n            this.updateModelController();\n        }\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.triggerInlineCompletion();\n    }\n    commit() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.commitInlineCompletion();\n    }\n    hide() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.hideInlineCompletion();\n    }\n    showNextInlineCompletion() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.showNextInlineCompletion();\n    }\n    showPreviousInlineCompletion() {\n        var _a;\n        (_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.showPreviousInlineCompletion();\n    }\n    hasMultipleInlineCompletions() {\n        var _a;\n        return __awaiter(this, void 0, void 0, function* () {\n            const result = yield ((_a = this.activeModel) === null || _a === void 0 ? void 0 : _a.hasMultipleInlineCompletions());\n            return result !== undefined ? result : false;\n        });\n    }\n};\nGhostTextController.inlineSuggestionVisible = new RawContextKey('inlineSuggestionVisible', false, nls.localize('inlineSuggestionVisible', \"Whether an inline suggestion is visible\"));\nGhostTextController.inlineSuggestionHasIndentation = new RawContextKey('inlineSuggestionHasIndentation', false, nls.localize('inlineSuggestionHasIndentation', \"Whether the inline suggestion starts with whitespace\"));\nGhostTextController.inlineSuggestionHasIndentationLessThanTabSize = new RawContextKey('inlineSuggestionHasIndentationLessThanTabSize', true, nls.localize('inlineSuggestionHasIndentationLessThanTabSize', \"Whether the inline suggestion starts with whitespace that is less than what would be inserted by tab\"));\nGhostTextController.ID = 'editor.contrib.ghostTextController';\nGhostTextController = __decorate([\n    __param(1, IInstantiationService)\n], GhostTextController);\nexport { GhostTextController };\nclass GhostTextContextKeys {\n    constructor(contextKeyService) {\n        this.contextKeyService = contextKeyService;\n        this.inlineCompletionVisible = GhostTextController.inlineSuggestionVisible.bindTo(this.contextKeyService);\n        this.inlineCompletionSuggestsIndentation = GhostTextController.inlineSuggestionHasIndentation.bindTo(this.contextKeyService);\n        this.inlineCompletionSuggestsIndentationLessThanTabSize = GhostTextController.inlineSuggestionHasIndentationLessThanTabSize.bindTo(this.contextKeyService);\n    }\n}\n/**\n * The controller for a text editor with an initialized text model.\n * Must be disposed as soon as the model detaches from the editor.\n*/\nlet ActiveGhostTextController = class ActiveGhostTextController extends Disposable {\n    constructor(editor, instantiationService, contextKeyService) {\n        super();\n        this.editor = editor;\n        this.instantiationService = instantiationService;\n        this.contextKeyService = contextKeyService;\n        this.contextKeys = new GhostTextContextKeys(this.contextKeyService);\n        this.model = this._register(this.instantiationService.createInstance(GhostTextModel, this.editor));\n        this.widget = this._register(this.instantiationService.createInstance(GhostTextWidget, this.editor, this.model));\n        this._register(toDisposable(() => {\n            this.contextKeys.inlineCompletionVisible.set(false);\n            this.contextKeys.inlineCompletionSuggestsIndentation.set(false);\n            this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(true);\n        }));\n        this._register(this.model.onDidChange(() => {\n            this.updateContextKeys();\n        }));\n        this.updateContextKeys();\n    }\n    updateContextKeys() {\n        var _a;\n        this.contextKeys.inlineCompletionVisible.set(((_a = this.model.activeInlineCompletionsModel) === null || _a === void 0 ? void 0 : _a.ghostText) !== undefined);\n        let startsWithIndentation = false;\n        let startsWithIndentationLessThanTabSize = true;\n        const ghostText = this.model.inlineCompletionsModel.ghostText;\n        if (!!this.model.activeInlineCompletionsModel && ghostText && ghostText.parts.length > 0) {\n            const { column, lines } = ghostText.parts[0];\n            const firstLine = lines[0];\n            const indentationEndColumn = this.editor.getModel().getLineIndentColumn(ghostText.lineNumber);\n            const inIndentation = column <= indentationEndColumn;\n            if (inIndentation) {\n                let firstNonWsIdx = firstNonWhitespaceIndex(firstLine);\n                if (firstNonWsIdx === -1) {\n                    firstNonWsIdx = firstLine.length - 1;\n                }\n                startsWithIndentation = firstNonWsIdx > 0;\n                const tabSize = this.editor.getModel().getOptions().tabSize;\n                const visibleColumnIndentation = CursorColumns.visibleColumnFromColumn(firstLine, firstNonWsIdx + 1, tabSize);\n                startsWithIndentationLessThanTabSize = visibleColumnIndentation < tabSize;\n            }\n        }\n        this.contextKeys.inlineCompletionSuggestsIndentation.set(startsWithIndentation);\n        this.contextKeys.inlineCompletionSuggestsIndentationLessThanTabSize.set(startsWithIndentationLessThanTabSize);\n    }\n};\nActiveGhostTextController = __decorate([\n    __param(1, IInstantiationService),\n    __param(2, IContextKeyService)\n], ActiveGhostTextController);\nexport { ActiveGhostTextController };\nconst GhostTextCommand = EditorCommand.bindToContribution(GhostTextController.get);\nexport const commitInlineSuggestionAction = new GhostTextCommand({\n    id: inlineSuggestCommitId,\n    precondition: GhostTextController.inlineSuggestionVisible,\n    handler(x) {\n        x.commit();\n        x.editor.focus();\n    }\n});\nregisterEditorCommand(commitInlineSuggestionAction);\nKeybindingsRegistry.registerKeybindingRule({\n    primary: 2 /* Tab */,\n    weight: 200,\n    id: commitInlineSuggestionAction.id,\n    when: ContextKeyExpr.and(commitInlineSuggestionAction.precondition, EditorContextKeys.tabMovesFocus.toNegated(), GhostTextController.inlineSuggestionHasIndentationLessThanTabSize),\n});\nregisterEditorCommand(new GhostTextCommand({\n    id: 'editor.action.inlineSuggest.hide',\n    precondition: GhostTextController.inlineSuggestionVisible,\n    kbOpts: {\n        weight: 100,\n        primary: 9 /* Escape */,\n    },\n    handler(x) {\n        x.hide();\n    }\n}));\nexport class ShowNextInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: ShowNextInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showNext', \"Show Next Inline Suggestion\"),\n            alias: 'Show Next Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* Alt */ | 89 /* BracketRight */,\n            },\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            if (controller) {\n                controller.showNextInlineCompletion();\n                editor.focus();\n            }\n        });\n    }\n}\nShowNextInlineSuggestionAction.ID = 'editor.action.inlineSuggest.showNext';\nexport class ShowPreviousInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: ShowPreviousInlineSuggestionAction.ID,\n            label: nls.localize('action.inlineSuggest.showPrevious', \"Show Previous Inline Suggestion\"),\n            alias: 'Show Previous Inline Suggestion',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, GhostTextController.inlineSuggestionVisible),\n            kbOpts: {\n                weight: 100,\n                primary: 512 /* Alt */ | 87 /* BracketLeft */,\n            },\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            if (controller) {\n                controller.showPreviousInlineCompletion();\n                editor.focus();\n            }\n        });\n    }\n}\nShowPreviousInlineSuggestionAction.ID = 'editor.action.inlineSuggest.showPrevious';\nexport class TriggerInlineSuggestionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.inlineSuggest.trigger',\n            label: nls.localize('action.inlineSuggest.trigger', \"Trigger Inline Suggestion\"),\n            alias: 'Trigger Inline Suggestion',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = GhostTextController.get(editor);\n            if (controller) {\n                controller.trigger();\n            }\n        });\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { MarkdownRenderer } from '../../markdownRenderer/browser/markdownRenderer.js';\nimport { Range } from '../../../common/core/range.js';\nimport { ILanguageService } from '../../../common/languages/language.js';\nimport { HoverForeignElementAnchor } from '../../hover/browser/hoverTypes.js';\nimport { commitInlineSuggestionAction, GhostTextController, ShowNextInlineSuggestionAction, ShowPreviousInlineSuggestionAction } from './ghostTextController.js';\nimport * as nls from '../../../../nls.js';\nimport { IAccessibilityService } from '../../../../platform/accessibility/common/accessibility.js';\nimport { IMenuService, MenuId, MenuItemAction } from '../../../../platform/actions/common/actions.js';\nimport { ICommandService } from '../../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nexport class InlineCompletionsHover {\n    constructor(owner, range, controller) {\n        this.owner = owner;\n        this.range = range;\n        this.controller = controller;\n    }\n    isValidForHoverAnchor(anchor) {\n        return (anchor.type === 1 /* Range */\n            && this.range.startColumn <= anchor.range.startColumn\n            && this.range.endColumn >= anchor.range.endColumn);\n    }\n    hasMultipleSuggestions() {\n        return this.controller.hasMultipleInlineCompletions();\n    }\n}\nlet InlineCompletionsHoverParticipant = class InlineCompletionsHoverParticipant {\n    constructor(_editor, _commandService, _menuService, _contextKeyService, _languageService, _openerService, accessibilityService) {\n        this._editor = _editor;\n        this._commandService = _commandService;\n        this._menuService = _menuService;\n        this._contextKeyService = _contextKeyService;\n        this._languageService = _languageService;\n        this._openerService = _openerService;\n        this.accessibilityService = accessibilityService;\n        this.hoverOrdinal = 3;\n    }\n    suggestHoverAnchor(mouseEvent) {\n        const controller = GhostTextController.get(this._editor);\n        if (!controller) {\n            return null;\n        }\n        const target = mouseEvent.target;\n        if (target.type === 8 /* CONTENT_VIEW_ZONE */) {\n            // handle the case where the mouse is over the view zone\n            const viewZoneData = target.detail;\n            if (controller.shouldShowHoverAtViewZone(viewZoneData.viewZoneId)) {\n                return new HoverForeignElementAnchor(1000, this, Range.fromPositions(viewZoneData.positionBefore || viewZoneData.position, viewZoneData.positionBefore || viewZoneData.position));\n            }\n        }\n        if (target.type === 7 /* CONTENT_EMPTY */) {\n            // handle the case where the mouse is over the empty portion of a line following ghost text\n            if (controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range);\n            }\n        }\n        if (target.type === 6 /* CONTENT_TEXT */) {\n            // handle the case where the mouse is directly over ghost text\n            const mightBeForeignElement = target.detail.mightBeForeignElement;\n            if (mightBeForeignElement && controller.shouldShowHoverAt(target.range)) {\n                return new HoverForeignElementAnchor(1000, this, target.range);\n            }\n        }\n        return null;\n    }\n    computeSync(anchor, lineDecorations) {\n        const controller = GhostTextController.get(this._editor);\n        if (controller && controller.shouldShowHoverAt(anchor.range)) {\n            return [new InlineCompletionsHover(this, anchor.range, controller)];\n        }\n        return [];\n    }\n    renderHoverParts(context, hoverParts) {\n        const disposableStore = new DisposableStore();\n        const part = hoverParts[0];\n        if (this.accessibilityService.isScreenReaderOptimized()) {\n            this.renderScreenReaderText(context, part, disposableStore);\n        }\n        const menu = disposableStore.add(this._menuService.createMenu(MenuId.InlineCompletionsActions, this._contextKeyService));\n        const previousAction = context.statusBar.addAction({\n            label: nls.localize('showNextInlineSuggestion', \"Next\"),\n            commandId: ShowNextInlineSuggestionAction.ID,\n            run: () => this._commandService.executeCommand(ShowNextInlineSuggestionAction.ID)\n        });\n        const nextAction = context.statusBar.addAction({\n            label: nls.localize('showPreviousInlineSuggestion', \"Previous\"),\n            commandId: ShowPreviousInlineSuggestionAction.ID,\n            run: () => this._commandService.executeCommand(ShowPreviousInlineSuggestionAction.ID)\n        });\n        context.statusBar.addAction({\n            label: nls.localize('acceptInlineSuggestion', \"Accept\"),\n            commandId: commitInlineSuggestionAction.id,\n            run: () => this._commandService.executeCommand(commitInlineSuggestionAction.id)\n        });\n        const actions = [previousAction, nextAction];\n        for (const action of actions) {\n            action.setEnabled(false);\n        }\n        part.hasMultipleSuggestions().then(hasMore => {\n            for (const action of actions) {\n                action.setEnabled(hasMore);\n            }\n        });\n        for (const [_, group] of menu.getActions()) {\n            for (const action of group) {\n                if (action instanceof MenuItemAction) {\n                    context.statusBar.addAction({\n                        label: action.label,\n                        commandId: action.item.id,\n                        run: () => this._commandService.executeCommand(action.item.id)\n                    });\n                }\n            }\n        }\n        return disposableStore;\n    }\n    renderScreenReaderText(context, part, disposableStore) {\n        var _a, _b;\n        const $ = dom.$;\n        const markdownHoverElement = $('div.hover-row.markdown-hover');\n        const hoverContentsElement = dom.append(markdownHoverElement, $('div.hover-contents'));\n        const renderer = disposableStore.add(new MarkdownRenderer({ editor: this._editor }, this._languageService, this._openerService));\n        const render = (code) => {\n            disposableStore.add(renderer.onDidRenderAsync(() => {\n                hoverContentsElement.className = 'hover-contents code-hover-contents';\n                context.onContentsChanged();\n            }));\n            const inlineSuggestionAvailable = nls.localize('inlineSuggestionFollows', \"Suggestion:\");\n            const renderedContents = disposableStore.add(renderer.render(new MarkdownString().appendText(inlineSuggestionAvailable).appendCodeblock('text', code)));\n            hoverContentsElement.replaceChildren(renderedContents.element);\n        };\n        const ghostText = (_b = (_a = part.controller.activeModel) === null || _a === void 0 ? void 0 : _a.inlineCompletionsModel) === null || _b === void 0 ? void 0 : _b.ghostText;\n        if (ghostText) {\n            const lineText = this._editor.getModel().getLineContent(ghostText.lineNumber);\n            render(ghostText.renderForScreenReader(lineText));\n        }\n        context.fragment.appendChild(markdownHoverElement);\n    }\n};\nInlineCompletionsHoverParticipant = __decorate([\n    __param(1, ICommandService),\n    __param(2, IMenuService),\n    __param(3, IContextKeyService),\n    __param(4, ILanguageService),\n    __param(5, IOpenerService),\n    __param(6, IAccessibilityService)\n], InlineCompletionsHoverParticipant);\nexport { InlineCompletionsHoverParticipant };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { HoverParticipantRegistry } from '../../hover/browser/hoverTypes.js';\nimport { GhostTextController, ShowNextInlineSuggestionAction, ShowPreviousInlineSuggestionAction, TriggerInlineSuggestionAction } from './ghostTextController.js';\nimport { InlineCompletionsHoverParticipant } from './inlineCompletionsHoverParticipant.js';\nregisterEditorContribution(GhostTextController.ID, GhostTextController);\nregisterEditorAction(TriggerInlineSuggestionAction);\nregisterEditorAction(ShowNextInlineSuggestionAction);\nregisterEditorAction(ShowPreviousInlineSuggestionAction);\nHoverParticipantRegistry.register(InlineCompletionsHoverParticipant);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { CursorMoveCommands } from '../../../common/cursor/cursorMoveCommands.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport * as nls from '../../../../nls.js';\nexport class ExpandLineSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'expandLineSelection',\n            label: nls.localize('expandLineSelection', \"Expand Line Selection\"),\n            alias: 'Expand Line Selection',\n            precondition: undefined,\n            kbOpts: {\n                weight: 0 /* EditorCore */,\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* CtrlCmd */ | 42 /* KeyL */\n            },\n        });\n    }\n    run(_accessor, editor, args) {\n        args = args || {};\n        if (!editor.hasModel()) {\n            return;\n        }\n        const viewModel = editor._getViewModel();\n        viewModel.model.pushStackElement();\n        viewModel.setCursorStates(args.source, 3 /* Explicit */, CursorMoveCommands.expandLineSelection(viewModel, viewModel.getCursorStates()));\n        viewModel.revealPrimaryCursor(args.source, true);\n    }\n}\nregisterEditorAction(ExpandLineSelectionAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class CopyLinesCommand {\n    constructor(selection, isCopyingDown, noop) {\n        this._selection = selection;\n        this._isCopyingDown = isCopyingDown;\n        this._noop = noop || false;\n        this._selectionDirection = 0 /* LTR */;\n        this._selectionId = null;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n    }\n    getEditOperations(model, builder) {\n        let s = this._selection;\n        this._startLineNumberDelta = 0;\n        this._endLineNumberDelta = 0;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._endLineNumberDelta = 1;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        let sourceLines = [];\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            sourceLines.push(model.getLineContent(i));\n        }\n        const sourceText = sourceLines.join('\\n');\n        if (sourceText === '') {\n            // Duplicating empty line\n            if (this._isCopyingDown) {\n                this._startLineNumberDelta++;\n                this._endLineNumberDelta++;\n            }\n        }\n        if (this._noop) {\n            builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber + 1, 1), s.endLineNumber === model.getLineCount() ? '' : '\\n');\n        }\n        else {\n            if (!this._isCopyingDown) {\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + sourceText);\n            }\n            else {\n                builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), sourceText + '\\n');\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n        this._selectionDirection = this._selection.getDirection();\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._startLineNumberDelta !== 0 || this._endLineNumberDelta !== 0) {\n            let startLineNumber = result.startLineNumber;\n            let startColumn = result.startColumn;\n            let endLineNumber = result.endLineNumber;\n            let endColumn = result.endColumn;\n            if (this._startLineNumberDelta !== 0) {\n                startLineNumber = startLineNumber + this._startLineNumberDelta;\n                startColumn = 1;\n            }\n            if (this._endLineNumberDelta !== 0) {\n                endLineNumber = endLineNumber + this._endLineNumberDelta;\n                endColumn = 1;\n            }\n            result = Selection.createWithDirection(startLineNumber, startColumn, endLineNumber, endColumn, this._selectionDirection);\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../../base/common/strings.js';\nimport { ShiftCommand } from '../../../common/commands/shiftCommand.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { IndentAction } from '../../../common/languages/languageConfiguration.js';\nimport { LanguageConfigurationRegistry } from '../../../common/languages/languageConfigurationRegistry.js';\nimport * as indentUtils from '../../indentation/browser/indentUtils.js';\nexport class MoveLinesCommand {\n    constructor(selection, isMovingDown, autoIndent) {\n        this._selection = selection;\n        this._isMovingDown = isMovingDown;\n        this._autoIndent = autoIndent;\n        this._selectionId = null;\n        this._moveEndLineSelectionShrink = false;\n    }\n    getEditOperations(model, builder) {\n        let modelLineCount = model.getLineCount();\n        if (this._isMovingDown && this._selection.endLineNumber === modelLineCount) {\n            this._selectionId = builder.trackSelection(this._selection);\n            return;\n        }\n        if (!this._isMovingDown && this._selection.startLineNumber === 1) {\n            this._selectionId = builder.trackSelection(this._selection);\n            return;\n        }\n        this._moveEndPositionDown = false;\n        let s = this._selection;\n        if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n            this._moveEndPositionDown = true;\n            s = s.setEndPosition(s.endLineNumber - 1, model.getLineMaxColumn(s.endLineNumber - 1));\n        }\n        const { tabSize, indentSize, insertSpaces } = model.getOptions();\n        let indentConverter = this.buildIndentConverter(tabSize, indentSize, insertSpaces);\n        let virtualModel = {\n            getLineTokens: (lineNumber) => {\n                return model.getLineTokens(lineNumber);\n            },\n            getLanguageId: () => {\n                return model.getLanguageId();\n            },\n            getLanguageIdAtPosition: (lineNumber, column) => {\n                return model.getLanguageIdAtPosition(lineNumber, column);\n            },\n            getLineContent: null,\n        };\n        if (s.startLineNumber === s.endLineNumber && model.getLineMaxColumn(s.startLineNumber) === 1) {\n            // Current line is empty\n            let lineNumber = s.startLineNumber;\n            let otherLineNumber = (this._isMovingDown ? lineNumber + 1 : lineNumber - 1);\n            if (model.getLineMaxColumn(otherLineNumber) === 1) {\n                // Other line number is empty too, so no editing is needed\n                // Add a no-op to force running by the model\n                builder.addEditOperation(new Range(1, 1, 1, 1), null);\n            }\n            else {\n                // Type content from other line number on line number\n                builder.addEditOperation(new Range(lineNumber, 1, lineNumber, 1), model.getLineContent(otherLineNumber));\n                // Remove content from other line number\n                builder.addEditOperation(new Range(otherLineNumber, 1, otherLineNumber, model.getLineMaxColumn(otherLineNumber)), null);\n            }\n            // Track selection at the other line number\n            s = new Selection(otherLineNumber, 1, otherLineNumber, 1);\n        }\n        else {\n            let movingLineNumber;\n            let movingLineText;\n            if (this._isMovingDown) {\n                movingLineNumber = s.endLineNumber + 1;\n                movingLineText = model.getLineContent(movingLineNumber);\n                // Delete line that needs to be moved\n                builder.addEditOperation(new Range(movingLineNumber - 1, model.getLineMaxColumn(movingLineNumber - 1), movingLineNumber, model.getLineMaxColumn(movingLineNumber)), null);\n                let insertingText = movingLineText;\n                if (this.shouldAutoIndent(model, s)) {\n                    let movingLineMatchResult = this.matchEnterRule(model, indentConverter, tabSize, movingLineNumber, s.startLineNumber - 1);\n                    // if s.startLineNumber - 1 matches onEnter rule, we still honor that.\n                    if (movingLineMatchResult !== null) {\n                        let oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\n                        let newSpaceCnt = movingLineMatchResult + indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                        let newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                        insertingText = newIndentation + this.trimLeft(movingLineText);\n                    }\n                    else {\n                        // no enter rule matches, let's check indentatin rules then.\n                        virtualModel.getLineContent = (lineNumber) => {\n                            if (lineNumber === s.startLineNumber) {\n                                return model.getLineContent(movingLineNumber);\n                            }\n                            else {\n                                return model.getLineContent(lineNumber);\n                            }\n                        };\n                        let indentOfMovingLine = LanguageConfigurationRegistry.getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber, indentConverter);\n                        if (indentOfMovingLine !== null) {\n                            let oldIndentation = strings.getLeadingWhitespace(model.getLineContent(movingLineNumber));\n                            let newSpaceCnt = indentUtils.getSpaceCnt(indentOfMovingLine, tabSize);\n                            let oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                let newIndentation = indentUtils.generateIndent(newSpaceCnt, tabSize, insertSpaces);\n                                insertingText = newIndentation + this.trimLeft(movingLineText);\n                            }\n                        }\n                    }\n                    // add edit operations for moving line first to make sure it's executed after we make indentation change\n                    // to s.startLineNumber\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\n                    let ret = this.matchEnterRuleMovingDown(model, indentConverter, tabSize, s.startLineNumber, movingLineNumber, insertingText);\n                    // check if the line being moved before matches onEnter rules, if so let's adjust the indentation by onEnter rules.\n                    if (ret !== null) {\n                        if (ret !== 0) {\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\n                        }\n                    }\n                    else {\n                        // it doesn't match onEnter rules, let's check indentation rules then.\n                        virtualModel.getLineContent = (lineNumber) => {\n                            if (lineNumber === s.startLineNumber) {\n                                return insertingText;\n                            }\n                            else if (lineNumber >= s.startLineNumber + 1 && lineNumber <= s.endLineNumber + 1) {\n                                return model.getLineContent(lineNumber - 1);\n                            }\n                            else {\n                                return model.getLineContent(lineNumber);\n                            }\n                        };\n                        let newIndentatOfMovingBlock = LanguageConfigurationRegistry.getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(movingLineNumber, 1), s.startLineNumber + 1, indentConverter);\n                        if (newIndentatOfMovingBlock !== null) {\n                            const oldIndentation = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\n                            const newSpaceCnt = indentUtils.getSpaceCnt(newIndentatOfMovingBlock, tabSize);\n                            const oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                const spaceCntOffset = newSpaceCnt - oldSpaceCnt;\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\n                            }\n                        }\n                    }\n                }\n                else {\n                    // Insert line that needs to be moved before\n                    builder.addEditOperation(new Range(s.startLineNumber, 1, s.startLineNumber, 1), insertingText + '\\n');\n                }\n            }\n            else {\n                movingLineNumber = s.startLineNumber - 1;\n                movingLineText = model.getLineContent(movingLineNumber);\n                // Delete line that needs to be moved\n                builder.addEditOperation(new Range(movingLineNumber, 1, movingLineNumber + 1, 1), null);\n                // Insert line that needs to be moved after\n                builder.addEditOperation(new Range(s.endLineNumber, model.getLineMaxColumn(s.endLineNumber), s.endLineNumber, model.getLineMaxColumn(s.endLineNumber)), '\\n' + movingLineText);\n                if (this.shouldAutoIndent(model, s)) {\n                    virtualModel.getLineContent = (lineNumber) => {\n                        if (lineNumber === movingLineNumber) {\n                            return model.getLineContent(s.startLineNumber);\n                        }\n                        else {\n                            return model.getLineContent(lineNumber);\n                        }\n                    };\n                    let ret = this.matchEnterRule(model, indentConverter, tabSize, s.startLineNumber, s.startLineNumber - 2);\n                    // check if s.startLineNumber - 2 matches onEnter rules, if so adjust the moving block by onEnter rules.\n                    if (ret !== null) {\n                        if (ret !== 0) {\n                            this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, ret);\n                        }\n                    }\n                    else {\n                        // it doesn't match any onEnter rule, let's check indentation rules then.\n                        let indentOfFirstLine = LanguageConfigurationRegistry.getGoodIndentForLine(this._autoIndent, virtualModel, model.getLanguageIdAtPosition(s.startLineNumber, 1), movingLineNumber, indentConverter);\n                        if (indentOfFirstLine !== null) {\n                            // adjust the indentation of the moving block\n                            let oldIndent = strings.getLeadingWhitespace(model.getLineContent(s.startLineNumber));\n                            let newSpaceCnt = indentUtils.getSpaceCnt(indentOfFirstLine, tabSize);\n                            let oldSpaceCnt = indentUtils.getSpaceCnt(oldIndent, tabSize);\n                            if (newSpaceCnt !== oldSpaceCnt) {\n                                let spaceCntOffset = newSpaceCnt - oldSpaceCnt;\n                                this.getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, spaceCntOffset);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        this._selectionId = builder.trackSelection(s);\n    }\n    buildIndentConverter(tabSize, indentSize, insertSpaces) {\n        return {\n            shiftIndent: (indentation) => {\n                return ShiftCommand.shiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            },\n            unshiftIndent: (indentation) => {\n                return ShiftCommand.unshiftIndent(indentation, indentation.length + 1, tabSize, indentSize, insertSpaces);\n            }\n        };\n    }\n    parseEnterResult(model, indentConverter, tabSize, line, enter) {\n        if (enter) {\n            let enterPrefix = enter.indentation;\n            if (enter.indentAction === IndentAction.None) {\n                enterPrefix = enter.indentation + enter.appendText;\n            }\n            else if (enter.indentAction === IndentAction.Indent) {\n                enterPrefix = enter.indentation + enter.appendText;\n            }\n            else if (enter.indentAction === IndentAction.IndentOutdent) {\n                enterPrefix = enter.indentation;\n            }\n            else if (enter.indentAction === IndentAction.Outdent) {\n                enterPrefix = indentConverter.unshiftIndent(enter.indentation) + enter.appendText;\n            }\n            let movingLineText = model.getLineContent(line);\n            if (this.trimLeft(movingLineText).indexOf(this.trimLeft(enterPrefix)) >= 0) {\n                let oldIndentation = strings.getLeadingWhitespace(model.getLineContent(line));\n                let newIndentation = strings.getLeadingWhitespace(enterPrefix);\n                let indentMetadataOfMovelingLine = LanguageConfigurationRegistry.getIndentMetadata(model, line);\n                if (indentMetadataOfMovelingLine !== null && indentMetadataOfMovelingLine & 2 /* DECREASE_MASK */) {\n                    newIndentation = indentConverter.unshiftIndent(newIndentation);\n                }\n                let newSpaceCnt = indentUtils.getSpaceCnt(newIndentation, tabSize);\n                let oldSpaceCnt = indentUtils.getSpaceCnt(oldIndentation, tabSize);\n                return newSpaceCnt - oldSpaceCnt;\n            }\n        }\n        return null;\n    }\n    /**\n     *\n     * @param model\n     * @param indentConverter\n     * @param tabSize\n     * @param line the line moving down\n     * @param futureAboveLineNumber the line which will be at the `line` position\n     * @param futureAboveLineText\n     */\n    matchEnterRuleMovingDown(model, indentConverter, tabSize, line, futureAboveLineNumber, futureAboveLineText) {\n        if (strings.lastNonWhitespaceIndex(futureAboveLineText) >= 0) {\n            // break\n            let maxColumn = model.getLineMaxColumn(futureAboveLineNumber);\n            let enter = LanguageConfigurationRegistry.getEnterAction(this._autoIndent, model, new Range(futureAboveLineNumber, maxColumn, futureAboveLineNumber, maxColumn));\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n        }\n        else {\n            // go upwards, starting from `line - 1`\n            let validPrecedingLine = line - 1;\n            while (validPrecedingLine >= 1) {\n                let lineContent = model.getLineContent(validPrecedingLine);\n                let nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\n                if (nonWhitespaceIdx >= 0) {\n                    break;\n                }\n                validPrecedingLine--;\n            }\n            if (validPrecedingLine < 1 || line > model.getLineCount()) {\n                return null;\n            }\n            let maxColumn = model.getLineMaxColumn(validPrecedingLine);\n            let enter = LanguageConfigurationRegistry.getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn));\n            return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n        }\n    }\n    matchEnterRule(model, indentConverter, tabSize, line, oneLineAbove, previousLineText) {\n        let validPrecedingLine = oneLineAbove;\n        while (validPrecedingLine >= 1) {\n            // ship empty lines as empty lines just inherit indentation\n            let lineContent;\n            if (validPrecedingLine === oneLineAbove && previousLineText !== undefined) {\n                lineContent = previousLineText;\n            }\n            else {\n                lineContent = model.getLineContent(validPrecedingLine);\n            }\n            let nonWhitespaceIdx = strings.lastNonWhitespaceIndex(lineContent);\n            if (nonWhitespaceIdx >= 0) {\n                break;\n            }\n            validPrecedingLine--;\n        }\n        if (validPrecedingLine < 1 || line > model.getLineCount()) {\n            return null;\n        }\n        let maxColumn = model.getLineMaxColumn(validPrecedingLine);\n        let enter = LanguageConfigurationRegistry.getEnterAction(this._autoIndent, model, new Range(validPrecedingLine, maxColumn, validPrecedingLine, maxColumn));\n        return this.parseEnterResult(model, indentConverter, tabSize, line, enter);\n    }\n    trimLeft(str) {\n        return str.replace(/^\\s+/, '');\n    }\n    shouldAutoIndent(model, selection) {\n        if (this._autoIndent < 4 /* Full */) {\n            return false;\n        }\n        // if it's not easy to tokenize, we stop auto indent.\n        if (!model.isCheapToTokenize(selection.startLineNumber)) {\n            return false;\n        }\n        let languageAtSelectionStart = model.getLanguageIdAtPosition(selection.startLineNumber, 1);\n        let languageAtSelectionEnd = model.getLanguageIdAtPosition(selection.endLineNumber, 1);\n        if (languageAtSelectionStart !== languageAtSelectionEnd) {\n            return false;\n        }\n        if (LanguageConfigurationRegistry.getIndentRulesSupport(languageAtSelectionStart) === null) {\n            return false;\n        }\n        return true;\n    }\n    getIndentEditsOfMovingBlock(model, builder, s, tabSize, insertSpaces, offset) {\n        for (let i = s.startLineNumber; i <= s.endLineNumber; i++) {\n            let lineContent = model.getLineContent(i);\n            let originalIndent = strings.getLeadingWhitespace(lineContent);\n            let originalSpacesCnt = indentUtils.getSpaceCnt(originalIndent, tabSize);\n            let newSpacesCnt = originalSpacesCnt + offset;\n            let newIndent = indentUtils.generateIndent(newSpacesCnt, tabSize, insertSpaces);\n            if (newIndent !== originalIndent) {\n                builder.addEditOperation(new Range(i, 1, i, originalIndent.length + 1), newIndent);\n                if (i === s.endLineNumber && s.endColumn <= originalIndent.length + 1 && newIndent === '') {\n                    // as users select part of the original indent white spaces\n                    // when we adjust the indentation of endLine, we should adjust the cursor position as well.\n                    this._moveEndLineSelectionShrink = true;\n                }\n            }\n        }\n    }\n    computeCursorState(model, helper) {\n        let result = helper.getTrackedSelection(this._selectionId);\n        if (this._moveEndPositionDown) {\n            result = result.setEndPosition(result.endLineNumber + 1, 1);\n        }\n        if (this._moveEndLineSelectionShrink && result.startLineNumber < result.endLineNumber) {\n            result = result.setEndPosition(result.endLineNumber, 2);\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Range } from '../../../common/core/range.js';\nexport class SortLinesCommand {\n    constructor(selection, descending) {\n        this.selection = selection;\n        this.descending = descending;\n        this.selectionId = null;\n    }\n    static getCollator() {\n        if (!SortLinesCommand._COLLATOR) {\n            SortLinesCommand._COLLATOR = new Intl.Collator();\n        }\n        return SortLinesCommand._COLLATOR;\n    }\n    getEditOperations(model, builder) {\n        let op = sortLines(model, this.selection, this.descending);\n        if (op) {\n            builder.addEditOperation(op.range, op.text);\n        }\n        this.selectionId = builder.trackSelection(this.selection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this.selectionId);\n    }\n    static canRun(model, selection, descending) {\n        if (model === null) {\n            return false;\n        }\n        let data = getSortData(model, selection, descending);\n        if (!data) {\n            return false;\n        }\n        for (let i = 0, len = data.before.length; i < len; i++) {\n            if (data.before[i] !== data.after[i]) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\nSortLinesCommand._COLLATOR = null;\nfunction getSortData(model, selection, descending) {\n    let startLineNumber = selection.startLineNumber;\n    let endLineNumber = selection.endLineNumber;\n    if (selection.endColumn === 1) {\n        endLineNumber--;\n    }\n    // Nothing to sort if user didn't select anything.\n    if (startLineNumber >= endLineNumber) {\n        return null;\n    }\n    let linesToSort = [];\n    // Get the contents of the selection to be sorted.\n    for (let lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\n        linesToSort.push(model.getLineContent(lineNumber));\n    }\n    let sorted = linesToSort.slice(0);\n    sorted.sort(SortLinesCommand.getCollator().compare);\n    // If descending, reverse the order.\n    if (descending === true) {\n        sorted = sorted.reverse();\n    }\n    return {\n        startLineNumber: startLineNumber,\n        endLineNumber: endLineNumber,\n        before: linesToSort,\n        after: sorted\n    };\n}\n/**\n * Generate commands for sorting lines on a model.\n */\nfunction sortLines(model, selection, descending) {\n    let data = getSortData(model, selection, descending);\n    if (!data) {\n        return null;\n    }\n    return EditOperation.replace(new Range(data.startLineNumber, 1, data.endLineNumber, model.getLineMaxColumn(data.endLineNumber)), data.after.join('\\n'));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { KeyChord } from '../../../../base/common/keyCodes.js';\nimport { CoreEditingCommands } from '../../../browser/coreCommands.js';\nimport { EditorAction, registerEditorAction } from '../../../browser/editorExtensions.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection, ReplaceCommandThatSelectsText } from '../../../common/commands/replaceCommand.js';\nimport { TrimTrailingWhitespaceCommand } from '../../../common/commands/trimTrailingWhitespaceCommand.js';\nimport { TypeOperations } from '../../../common/cursor/cursorTypeOperations.js';\nimport { EditOperation } from '../../../common/core/editOperation.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { CopyLinesCommand } from './copyLinesCommand.js';\nimport { MoveLinesCommand } from './moveLinesCommand.js';\nimport { SortLinesCommand } from './sortLinesCommand.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\n// copy lines\nclass AbstractCopyLinesAction extends EditorAction {\n    constructor(down, opts) {\n        super(opts);\n        this.down = down;\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections().map((selection, index) => ({ selection, index, ignore: false }));\n        selections.sort((a, b) => Range.compareRangesUsingStarts(a.selection, b.selection));\n        // Remove selections that would result in copying the same line\n        let prev = selections[0];\n        for (let i = 1; i < selections.length; i++) {\n            const curr = selections[i];\n            if (prev.selection.endLineNumber === curr.selection.startLineNumber) {\n                // these two selections would copy the same line\n                if (prev.index < curr.index) {\n                    // prev wins\n                    curr.ignore = true;\n                }\n                else {\n                    // curr wins\n                    prev.ignore = true;\n                    prev = curr;\n                }\n            }\n        }\n        const commands = [];\n        for (const selection of selections) {\n            commands.push(new CopyLinesCommand(selection.selection, this.down, selection.ignore));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass CopyLinesUpAction extends AbstractCopyLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.copyLinesUpAction',\n            label: nls.localize('lines.copyUp', \"Copy Line Up\"),\n            alias: 'Copy Line Up',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* Alt */ | 1024 /* Shift */ | 16 /* UpArrow */,\n                linux: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 1024 /* Shift */ | 16 /* UpArrow */ },\n                weight: 100 /* EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miCopyLinesUp', comment: ['&& denotes a mnemonic'] }, \"&&Copy Line Up\"),\n                order: 1\n            }\n        });\n    }\n}\nclass CopyLinesDownAction extends AbstractCopyLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.copyLinesDownAction',\n            label: nls.localize('lines.copyDown', \"Copy Line Down\"),\n            alias: 'Copy Line Down',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* Alt */ | 1024 /* Shift */ | 18 /* DownArrow */,\n                linux: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 1024 /* Shift */ | 18 /* DownArrow */ },\n                weight: 100 /* EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miCopyLinesDown', comment: ['&& denotes a mnemonic'] }, \"Co&&py Line Down\"),\n                order: 2\n            }\n        });\n    }\n}\nexport class DuplicateSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.duplicateSelection',\n            label: nls.localize('duplicateSelection', \"Duplicate Selection\"),\n            alias: 'Duplicate Selection',\n            precondition: EditorContextKeys.writable,\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miDuplicateSelection', comment: ['&& denotes a mnemonic'] }, \"&&Duplicate Selection\"),\n                order: 5\n            }\n        });\n    }\n    run(accessor, editor, args) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const commands = [];\n        const selections = editor.getSelections();\n        const model = editor.getModel();\n        for (const selection of selections) {\n            if (selection.isEmpty()) {\n                commands.push(new CopyLinesCommand(selection, true));\n            }\n            else {\n                const insertSelection = new Selection(selection.endLineNumber, selection.endColumn, selection.endLineNumber, selection.endColumn);\n                commands.push(new ReplaceCommandThatSelectsText(insertSelection, model.getValueInRange(selection)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\n// move lines\nclass AbstractMoveLinesAction extends EditorAction {\n    constructor(down, opts) {\n        super(opts);\n        this.down = down;\n    }\n    run(_accessor, editor) {\n        let commands = [];\n        let selections = editor.getSelections() || [];\n        const autoIndent = editor.getOption(9 /* autoIndent */);\n        for (const selection of selections) {\n            commands.push(new MoveLinesCommand(selection, this.down, autoIndent));\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nclass MoveLinesUpAction extends AbstractMoveLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.moveLinesUpAction',\n            label: nls.localize('lines.moveUp', \"Move Line Up\"),\n            alias: 'Move Line Up',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* Alt */ | 16 /* UpArrow */,\n                linux: { primary: 512 /* Alt */ | 16 /* UpArrow */ },\n                weight: 100 /* EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miMoveLinesUp', comment: ['&& denotes a mnemonic'] }, \"Mo&&ve Line Up\"),\n                order: 3\n            }\n        });\n    }\n}\nclass MoveLinesDownAction extends AbstractMoveLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.moveLinesDownAction',\n            label: nls.localize('lines.moveDown', \"Move Line Down\"),\n            alias: 'Move Line Down',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 512 /* Alt */ | 18 /* DownArrow */,\n                linux: { primary: 512 /* Alt */ | 18 /* DownArrow */ },\n                weight: 100 /* EditorContrib */\n            },\n            menuOpts: {\n                menuId: MenuId.MenubarSelectionMenu,\n                group: '2_line',\n                title: nls.localize({ key: 'miMoveLinesDown', comment: ['&& denotes a mnemonic'] }, \"Move &&Line Down\"),\n                order: 4\n            }\n        });\n    }\n}\nexport class AbstractSortLinesAction extends EditorAction {\n    constructor(descending, opts) {\n        super(opts);\n        this.descending = descending;\n    }\n    run(_accessor, editor) {\n        const selections = editor.getSelections() || [];\n        for (const selection of selections) {\n            if (!SortLinesCommand.canRun(editor.getModel(), selection, this.descending)) {\n                return;\n            }\n        }\n        let commands = [];\n        for (let i = 0, len = selections.length; i < len; i++) {\n            commands[i] = new SortLinesCommand(selections[i], this.descending);\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nexport class SortLinesAscendingAction extends AbstractSortLinesAction {\n    constructor() {\n        super(false, {\n            id: 'editor.action.sortLinesAscending',\n            label: nls.localize('lines.sortAscending', \"Sort Lines Ascending\"),\n            alias: 'Sort Lines Ascending',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nexport class SortLinesDescendingAction extends AbstractSortLinesAction {\n    constructor() {\n        super(true, {\n            id: 'editor.action.sortLinesDescending',\n            label: nls.localize('lines.sortDescending', \"Sort Lines Descending\"),\n            alias: 'Sort Lines Descending',\n            precondition: EditorContextKeys.writable\n        });\n    }\n}\nexport class DeleteDuplicateLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.removeDuplicateLines',\n            label: nls.localize('lines.deleteDuplicates', \"Delete Duplicate Lines\"),\n            alias: 'Delete Duplicate Lines',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        let model = editor.getModel();\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n            return;\n        }\n        let edits = [];\n        let endCursorState = [];\n        let linesDeleted = 0;\n        for (let selection of editor.getSelections()) {\n            let uniqueLines = new Set();\n            let lines = [];\n            for (let i = selection.startLineNumber; i <= selection.endLineNumber; i++) {\n                let line = model.getLineContent(i);\n                if (uniqueLines.has(line)) {\n                    continue;\n                }\n                lines.push(line);\n                uniqueLines.add(line);\n            }\n            let selectionToReplace = new Selection(selection.startLineNumber, 1, selection.endLineNumber, model.getLineMaxColumn(selection.endLineNumber));\n            let adjustedSelectionStart = selection.startLineNumber - linesDeleted;\n            let finalSelection = new Selection(adjustedSelectionStart, 1, adjustedSelectionStart + lines.length - 1, lines[lines.length - 1].length);\n            edits.push(EditOperation.replace(selectionToReplace, lines.join('\\n')));\n            endCursorState.push(finalSelection);\n            linesDeleted += (selection.endLineNumber - selection.startLineNumber + 1) - lines.length;\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class TrimTrailingWhitespaceAction extends EditorAction {\n    constructor() {\n        super({\n            id: TrimTrailingWhitespaceAction.ID,\n            label: nls.localize('lines.trimTrailingWhitespace', \"Trim Trailing Whitespace\"),\n            alias: 'Trim Trailing Whitespace',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: KeyChord(2048 /* CtrlCmd */ | 41 /* KeyK */, 2048 /* CtrlCmd */ | 54 /* KeyX */),\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor, args) {\n        let cursors = [];\n        if (args.reason === 'auto-save') {\n            // See https://github.com/editorconfig/editorconfig-vscode/issues/47\n            // It is very convenient for the editor config extension to invoke this action.\n            // So, if we get a reason:'auto-save' passed in, let's preserve cursor positions.\n            cursors = (editor.getSelections() || []).map(s => new Position(s.positionLineNumber, s.positionColumn));\n        }\n        let selection = editor.getSelection();\n        if (selection === null) {\n            return;\n        }\n        let command = new TrimTrailingWhitespaceCommand(selection, cursors);\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, [command]);\n        editor.pushUndoStop();\n    }\n}\nTrimTrailingWhitespaceAction.ID = 'editor.action.trimTrailingWhitespace';\nexport class DeleteLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.deleteLines',\n            label: nls.localize('lines.delete', \"Delete Line\"),\n            alias: 'Delete Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 41 /* KeyK */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        let ops = this._getLinesToRemove(editor);\n        let model = editor.getModel();\n        if (model.getLineCount() === 1 && model.getLineMaxColumn(1) === 1) {\n            // Model is empty\n            return;\n        }\n        let linesDeleted = 0;\n        let edits = [];\n        let cursorState = [];\n        for (let i = 0, len = ops.length; i < len; i++) {\n            const op = ops[i];\n            let startLineNumber = op.startLineNumber;\n            let endLineNumber = op.endLineNumber;\n            let startColumn = 1;\n            let endColumn = model.getLineMaxColumn(endLineNumber);\n            if (endLineNumber < model.getLineCount()) {\n                endLineNumber += 1;\n                endColumn = 1;\n            }\n            else if (startLineNumber > 1) {\n                startLineNumber -= 1;\n                startColumn = model.getLineMaxColumn(startLineNumber);\n            }\n            edits.push(EditOperation.replace(new Selection(startLineNumber, startColumn, endLineNumber, endColumn), ''));\n            cursorState.push(new Selection(startLineNumber - linesDeleted, op.positionColumn, startLineNumber - linesDeleted, op.positionColumn));\n            linesDeleted += (op.endLineNumber - op.startLineNumber + 1);\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, cursorState);\n        editor.pushUndoStop();\n    }\n    _getLinesToRemove(editor) {\n        // Construct delete operations\n        let operations = editor.getSelections().map((s) => {\n            let endLineNumber = s.endLineNumber;\n            if (s.startLineNumber < s.endLineNumber && s.endColumn === 1) {\n                endLineNumber -= 1;\n            }\n            return {\n                startLineNumber: s.startLineNumber,\n                selectionStartColumn: s.selectionStartColumn,\n                endLineNumber: endLineNumber,\n                positionColumn: s.positionColumn\n            };\n        });\n        // Sort delete operations\n        operations.sort((a, b) => {\n            if (a.startLineNumber === b.startLineNumber) {\n                return a.endLineNumber - b.endLineNumber;\n            }\n            return a.startLineNumber - b.startLineNumber;\n        });\n        // Merge delete operations which are adjacent or overlapping\n        let mergedOperations = [];\n        let previousOperation = operations[0];\n        for (let i = 1; i < operations.length; i++) {\n            if (previousOperation.endLineNumber + 1 >= operations[i].startLineNumber) {\n                // Merge current operations into the previous one\n                previousOperation.endLineNumber = operations[i].endLineNumber;\n            }\n            else {\n                // Push previous operation\n                mergedOperations.push(previousOperation);\n                previousOperation = operations[i];\n            }\n        }\n        // Push the last operation\n        mergedOperations.push(previousOperation);\n        return mergedOperations;\n    }\n}\nexport class IndentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.indentLines',\n            label: nls.localize('lines.indent', \"Indent Line\"),\n            alias: 'Indent Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* CtrlCmd */ | 89 /* BracketRight */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.indent(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n        editor.pushUndoStop();\n    }\n}\nclass OutdentLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.outdentLines',\n            label: nls.localize('lines.outdent', \"Outdent Line\"),\n            alias: 'Outdent Line',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* CtrlCmd */ | 87 /* BracketLeft */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        CoreEditingCommands.Outdent.runEditorCommand(_accessor, editor, null);\n    }\n}\nexport class InsertLineBeforeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertLineBefore',\n            label: nls.localize('lines.insertBefore', \"Insert Line Above\"),\n            alias: 'Insert Line Above',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 3 /* Enter */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.lineInsertBefore(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n    }\n}\nexport class InsertLineAfterAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.insertLineAfter',\n            label: nls.localize('lines.insertAfter', \"Insert Line Below\"),\n            alias: 'Insert Line Below',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* CtrlCmd */ | 3 /* Enter */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        const viewModel = editor._getViewModel();\n        if (!viewModel) {\n            return;\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, TypeOperations.lineInsertAfter(viewModel.cursorConfig, editor.getModel(), editor.getSelections()));\n    }\n}\nexport class AbstractDeleteAllToBoundaryAction extends EditorAction {\n    run(_accessor, editor) {\n        if (!editor.hasModel()) {\n            return;\n        }\n        const primaryCursor = editor.getSelection();\n        let rangesToDelete = this._getRangesToDelete(editor);\n        // merge overlapping selections\n        let effectiveRanges = [];\n        for (let i = 0, count = rangesToDelete.length - 1; i < count; i++) {\n            let range = rangesToDelete[i];\n            let nextRange = rangesToDelete[i + 1];\n            if (Range.intersectRanges(range, nextRange) === null) {\n                effectiveRanges.push(range);\n            }\n            else {\n                rangesToDelete[i + 1] = Range.plusRange(range, nextRange);\n            }\n        }\n        effectiveRanges.push(rangesToDelete[rangesToDelete.length - 1]);\n        let endCursorState = this._getEndCursorState(primaryCursor, effectiveRanges);\n        let edits = effectiveRanges.map(range => {\n            return EditOperation.replace(range, '');\n        });\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class DeleteAllLeftAction extends AbstractDeleteAllToBoundaryAction {\n    constructor() {\n        super({\n            id: 'deleteAllLeft',\n            label: nls.localize('lines.deleteAllLeft', \"Delete All Left\"),\n            alias: 'Delete All Left',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 2048 /* CtrlCmd */ | 1 /* Backspace */ },\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    _getEndCursorState(primaryCursor, rangesToDelete) {\n        let endPrimaryCursor = null;\n        let endCursorState = [];\n        let deletedLines = 0;\n        rangesToDelete.forEach(range => {\n            let endCursor;\n            if (range.endColumn === 1 && deletedLines > 0) {\n                let newStartLine = range.startLineNumber - deletedLines;\n                endCursor = new Selection(newStartLine, range.startColumn, newStartLine, range.startColumn);\n            }\n            else {\n                endCursor = new Selection(range.startLineNumber, range.startColumn, range.startLineNumber, range.startColumn);\n            }\n            deletedLines += range.endLineNumber - range.startLineNumber;\n            if (range.intersectRanges(primaryCursor)) {\n                endPrimaryCursor = endCursor;\n            }\n            else {\n                endCursorState.push(endCursor);\n            }\n        });\n        if (endPrimaryCursor) {\n            endCursorState.unshift(endPrimaryCursor);\n        }\n        return endCursorState;\n    }\n    _getRangesToDelete(editor) {\n        let selections = editor.getSelections();\n        if (selections === null) {\n            return [];\n        }\n        let rangesToDelete = selections;\n        let model = editor.getModel();\n        if (model === null) {\n            return [];\n        }\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\n        rangesToDelete = rangesToDelete.map(selection => {\n            if (selection.isEmpty()) {\n                if (selection.startColumn === 1) {\n                    let deleteFromLine = Math.max(1, selection.startLineNumber - 1);\n                    let deleteFromColumn = selection.startLineNumber === 1 ? 1 : model.getLineContent(deleteFromLine).length + 1;\n                    return new Range(deleteFromLine, deleteFromColumn, selection.startLineNumber, 1);\n                }\n                else {\n                    return new Range(selection.startLineNumber, 1, selection.startLineNumber, selection.startColumn);\n                }\n            }\n            else {\n                return new Range(selection.startLineNumber, 1, selection.endLineNumber, selection.endColumn);\n            }\n        });\n        return rangesToDelete;\n    }\n}\nexport class DeleteAllRightAction extends AbstractDeleteAllToBoundaryAction {\n    constructor() {\n        super({\n            id: 'deleteAllRight',\n            label: nls.localize('lines.deleteAllRight', \"Delete All Right\"),\n            alias: 'Delete All Right',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.textInputFocus,\n                primary: 0,\n                mac: { primary: 256 /* WinCtrl */ | 41 /* KeyK */, secondary: [2048 /* CtrlCmd */ | 20 /* Delete */] },\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    _getEndCursorState(primaryCursor, rangesToDelete) {\n        let endPrimaryCursor = null;\n        let endCursorState = [];\n        for (let i = 0, len = rangesToDelete.length, offset = 0; i < len; i++) {\n            let range = rangesToDelete[i];\n            let endCursor = new Selection(range.startLineNumber - offset, range.startColumn, range.startLineNumber - offset, range.startColumn);\n            if (range.intersectRanges(primaryCursor)) {\n                endPrimaryCursor = endCursor;\n            }\n            else {\n                endCursorState.push(endCursor);\n            }\n        }\n        if (endPrimaryCursor) {\n            endCursorState.unshift(endPrimaryCursor);\n        }\n        return endCursorState;\n    }\n    _getRangesToDelete(editor) {\n        let model = editor.getModel();\n        if (model === null) {\n            return [];\n        }\n        let selections = editor.getSelections();\n        if (selections === null) {\n            return [];\n        }\n        let rangesToDelete = selections.map((sel) => {\n            if (sel.isEmpty()) {\n                const maxColumn = model.getLineMaxColumn(sel.startLineNumber);\n                if (sel.startColumn === maxColumn) {\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber + 1, 1);\n                }\n                else {\n                    return new Range(sel.startLineNumber, sel.startColumn, sel.startLineNumber, maxColumn);\n                }\n            }\n            return sel;\n        });\n        rangesToDelete.sort(Range.compareRangesUsingStarts);\n        return rangesToDelete;\n    }\n}\nexport class JoinLinesAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.joinLines',\n            label: nls.localize('lines.joinLines', \"Join Lines\"),\n            alias: 'Join Lines',\n            precondition: EditorContextKeys.writable,\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 0,\n                mac: { primary: 256 /* WinCtrl */ | 40 /* KeyJ */ },\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(_accessor, editor) {\n        let selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        let primaryCursor = editor.getSelection();\n        if (primaryCursor === null) {\n            return;\n        }\n        selections.sort(Range.compareRangesUsingStarts);\n        let reducedSelections = [];\n        let lastSelection = selections.reduce((previousValue, currentValue) => {\n            if (previousValue.isEmpty()) {\n                if (previousValue.endLineNumber === currentValue.startLineNumber) {\n                    if (primaryCursor.equalsSelection(previousValue)) {\n                        primaryCursor = currentValue;\n                    }\n                    return currentValue;\n                }\n                if (currentValue.startLineNumber > previousValue.endLineNumber + 1) {\n                    reducedSelections.push(previousValue);\n                    return currentValue;\n                }\n                else {\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n                }\n            }\n            else {\n                if (currentValue.startLineNumber > previousValue.endLineNumber) {\n                    reducedSelections.push(previousValue);\n                    return currentValue;\n                }\n                else {\n                    return new Selection(previousValue.startLineNumber, previousValue.startColumn, currentValue.endLineNumber, currentValue.endColumn);\n                }\n            }\n        });\n        reducedSelections.push(lastSelection);\n        let model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        let edits = [];\n        let endCursorState = [];\n        let endPrimaryCursor = primaryCursor;\n        let lineOffset = 0;\n        for (let i = 0, len = reducedSelections.length; i < len; i++) {\n            let selection = reducedSelections[i];\n            let startLineNumber = selection.startLineNumber;\n            let startColumn = 1;\n            let columnDeltaOffset = 0;\n            let endLineNumber, endColumn;\n            let selectionEndPositionOffset = model.getLineContent(selection.endLineNumber).length - selection.endColumn;\n            if (selection.isEmpty() || selection.startLineNumber === selection.endLineNumber) {\n                let position = selection.getStartPosition();\n                if (position.lineNumber < model.getLineCount()) {\n                    endLineNumber = startLineNumber + 1;\n                    endColumn = model.getLineMaxColumn(endLineNumber);\n                }\n                else {\n                    endLineNumber = position.lineNumber;\n                    endColumn = model.getLineMaxColumn(position.lineNumber);\n                }\n            }\n            else {\n                endLineNumber = selection.endLineNumber;\n                endColumn = model.getLineMaxColumn(endLineNumber);\n            }\n            let trimmedLinesContent = model.getLineContent(startLineNumber);\n            for (let i = startLineNumber + 1; i <= endLineNumber; i++) {\n                let lineText = model.getLineContent(i);\n                let firstNonWhitespaceIdx = model.getLineFirstNonWhitespaceColumn(i);\n                if (firstNonWhitespaceIdx >= 1) {\n                    let insertSpace = true;\n                    if (trimmedLinesContent === '') {\n                        insertSpace = false;\n                    }\n                    if (insertSpace && (trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === ' ' ||\n                        trimmedLinesContent.charAt(trimmedLinesContent.length - 1) === '\\t')) {\n                        insertSpace = false;\n                        trimmedLinesContent = trimmedLinesContent.replace(/[\\s\\uFEFF\\xA0]+$/g, ' ');\n                    }\n                    let lineTextWithoutIndent = lineText.substr(firstNonWhitespaceIdx - 1);\n                    trimmedLinesContent += (insertSpace ? ' ' : '') + lineTextWithoutIndent;\n                    if (insertSpace) {\n                        columnDeltaOffset = lineTextWithoutIndent.length + 1;\n                    }\n                    else {\n                        columnDeltaOffset = lineTextWithoutIndent.length;\n                    }\n                }\n                else {\n                    columnDeltaOffset = 0;\n                }\n            }\n            let deleteSelection = new Range(startLineNumber, startColumn, endLineNumber, endColumn);\n            if (!deleteSelection.isEmpty()) {\n                let resultSelection;\n                if (selection.isEmpty()) {\n                    edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                    resultSelection = new Selection(deleteSelection.startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1, startLineNumber - lineOffset, trimmedLinesContent.length - columnDeltaOffset + 1);\n                }\n                else {\n                    if (selection.startLineNumber === selection.endLineNumber) {\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.endLineNumber - lineOffset, selection.endColumn);\n                    }\n                    else {\n                        edits.push(EditOperation.replace(deleteSelection, trimmedLinesContent));\n                        resultSelection = new Selection(selection.startLineNumber - lineOffset, selection.startColumn, selection.startLineNumber - lineOffset, trimmedLinesContent.length - selectionEndPositionOffset);\n                    }\n                }\n                if (Range.intersectRanges(deleteSelection, primaryCursor) !== null) {\n                    endPrimaryCursor = resultSelection;\n                }\n                else {\n                    endCursorState.push(resultSelection);\n                }\n            }\n            lineOffset += deleteSelection.endLineNumber - deleteSelection.startLineNumber;\n        }\n        endCursorState.unshift(endPrimaryCursor);\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, edits, endCursorState);\n        editor.pushUndoStop();\n    }\n}\nexport class TransposeAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.transpose',\n            label: nls.localize('editor.transpose', \"Transpose characters around the cursor\"),\n            alias: 'Transpose characters around the cursor',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    run(_accessor, editor) {\n        let selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        let model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        let commands = [];\n        for (let i = 0, len = selections.length; i < len; i++) {\n            let selection = selections[i];\n            if (!selection.isEmpty()) {\n                continue;\n            }\n            let cursor = selection.getStartPosition();\n            let maxColumn = model.getLineMaxColumn(cursor.lineNumber);\n            if (cursor.column >= maxColumn) {\n                if (cursor.lineNumber === model.getLineCount()) {\n                    continue;\n                }\n                // The cursor is at the end of current line and current line is not empty\n                // then we transpose the character before the cursor and the line break if there is any following line.\n                let deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1);\n                let chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n                commands.push(new ReplaceCommand(new Selection(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber + 1, 1), chars));\n            }\n            else {\n                let deleteSelection = new Range(cursor.lineNumber, Math.max(1, cursor.column - 1), cursor.lineNumber, cursor.column + 1);\n                let chars = model.getValueInRange(deleteSelection).split('').reverse().join('');\n                commands.push(new ReplaceCommandThatPreservesSelection(deleteSelection, chars, new Selection(cursor.lineNumber, cursor.column + 1, cursor.lineNumber, cursor.column + 1)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeCommands(this.id, commands);\n        editor.pushUndoStop();\n    }\n}\nexport class AbstractCaseAction extends EditorAction {\n    run(_accessor, editor) {\n        const selections = editor.getSelections();\n        if (selections === null) {\n            return;\n        }\n        const model = editor.getModel();\n        if (model === null) {\n            return;\n        }\n        const wordSeparators = editor.getOption(117 /* wordSeparators */);\n        const textEdits = [];\n        for (const selection of selections) {\n            if (selection.isEmpty()) {\n                const cursor = selection.getStartPosition();\n                const word = editor.getConfiguredWordAtPosition(cursor);\n                if (!word) {\n                    continue;\n                }\n                const wordRange = new Range(cursor.lineNumber, word.startColumn, cursor.lineNumber, word.endColumn);\n                const text = model.getValueInRange(wordRange);\n                textEdits.push(EditOperation.replace(wordRange, this._modifyText(text, wordSeparators)));\n            }\n            else {\n                const text = model.getValueInRange(selection);\n                textEdits.push(EditOperation.replace(selection, this._modifyText(text, wordSeparators)));\n            }\n        }\n        editor.pushUndoStop();\n        editor.executeEdits(this.id, textEdits);\n        editor.pushUndoStop();\n    }\n}\nexport class UpperCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToUppercase',\n            label: nls.localize('editor.transformToUppercase', \"Transform to Uppercase\"),\n            alias: 'Transform to Uppercase',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        return text.toLocaleUpperCase();\n    }\n}\nexport class LowerCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToLowercase',\n            label: nls.localize('editor.transformToLowercase', \"Transform to Lowercase\"),\n            alias: 'Transform to Lowercase',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        return text.toLocaleLowerCase();\n    }\n}\nclass BackwardsCompatibleRegExp {\n    constructor(_pattern, _flags) {\n        this._pattern = _pattern;\n        this._flags = _flags;\n        this._actual = null;\n        this._evaluated = false;\n    }\n    get() {\n        if (!this._evaluated) {\n            this._evaluated = true;\n            try {\n                this._actual = new RegExp(this._pattern, this._flags);\n            }\n            catch (err) {\n                // this browser does not support this regular expression\n            }\n        }\n        return this._actual;\n    }\n    isSupported() {\n        return (this.get() !== null);\n    }\n}\nexport class TitleCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToTitlecase',\n            label: nls.localize('editor.transformToTitlecase', \"Transform to Title Case\"),\n            alias: 'Transform to Title Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const titleBoundary = TitleCaseAction.titleBoundary.get();\n        if (!titleBoundary) {\n            // cannot support this\n            return text;\n        }\n        return text\n            .toLocaleLowerCase()\n            .replace(titleBoundary, (b) => b.toLocaleUpperCase());\n    }\n}\nTitleCaseAction.titleBoundary = new BackwardsCompatibleRegExp('(^|[^\\\\p{L}\\\\p{N}\\']|((^|\\\\P{L})\\'))\\\\p{L}', 'gmu');\nexport class SnakeCaseAction extends AbstractCaseAction {\n    constructor() {\n        super({\n            id: 'editor.action.transformToSnakecase',\n            label: nls.localize('editor.transformToSnakecase', \"Transform to Snake Case\"),\n            alias: 'Transform to Snake Case',\n            precondition: EditorContextKeys.writable\n        });\n    }\n    _modifyText(text, wordSeparators) {\n        const caseBoundary = SnakeCaseAction.caseBoundary.get();\n        const singleLetters = SnakeCaseAction.singleLetters.get();\n        if (!caseBoundary || !singleLetters) {\n            // cannot support this\n            return text;\n        }\n        return (text\n            .replace(caseBoundary, '$1_$2')\n            .replace(singleLetters, '$1_$2$3')\n            .toLocaleLowerCase());\n    }\n}\nSnakeCaseAction.caseBoundary = new BackwardsCompatibleRegExp('(\\\\p{Ll})(\\\\p{Lu})', 'gmu');\nSnakeCaseAction.singleLetters = new BackwardsCompatibleRegExp('(\\\\p{Lu}|\\\\p{N})(\\\\p{Lu})(\\\\p{Ll})', 'gmu');\nregisterEditorAction(CopyLinesUpAction);\nregisterEditorAction(CopyLinesDownAction);\nregisterEditorAction(DuplicateSelectionAction);\nregisterEditorAction(MoveLinesUpAction);\nregisterEditorAction(MoveLinesDownAction);\nregisterEditorAction(SortLinesAscendingAction);\nregisterEditorAction(SortLinesDescendingAction);\nregisterEditorAction(DeleteDuplicateLinesAction);\nregisterEditorAction(TrimTrailingWhitespaceAction);\nregisterEditorAction(DeleteLinesAction);\nregisterEditorAction(IndentLinesAction);\nregisterEditorAction(OutdentLinesAction);\nregisterEditorAction(InsertLineBeforeAction);\nregisterEditorAction(InsertLineAfterAction);\nregisterEditorAction(DeleteAllLeftAction);\nregisterEditorAction(DeleteAllRightAction);\nregisterEditorAction(JoinLinesAction);\nregisterEditorAction(TransposeAction);\nregisterEditorAction(UpperCaseAction);\nregisterEditorAction(LowerCaseAction);\nif (SnakeCaseAction.caseBoundary.isSupported() && SnakeCaseAction.singleLetters.isSupported()) {\n    registerEditorAction(SnakeCaseAction);\n}\nif (TitleCaseAction.titleBoundary.isSupported()) {\n    registerEditorAction(TitleCaseAction);\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as arrays from '../../../../base/common/arrays.js';\nimport { createCancelablePromise, Delayer, first } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { Color } from '../../../../base/common/color.js';\nimport { isCancellationError, onUnexpectedError, onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Event } from '../../../../base/common/event.js';\nimport { Disposable, DisposableStore } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { EditorAction, EditorCommand, registerEditorAction, registerEditorCommand, registerEditorContribution, registerModelAndPositionCommand } from '../../../browser/editorExtensions.js';\nimport { ICodeEditorService } from '../../../browser/services/codeEditorService.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageConfigurationService } from '../../../common/languages/languageConfigurationRegistry.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { registerColor } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nexport const CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE = new RawContextKey('LinkedEditingInputVisible', false);\nconst DECORATION_CLASS_NAME = 'linked-editing-decoration';\nlet LinkedEditingContribution = class LinkedEditingContribution extends Disposable {\n    constructor(editor, contextKeyService, languageFeaturesService, languageConfigurationService, languageFeatureDebounceService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        this._localToDispose = this._register(new DisposableStore());\n        this._editor = editor;\n        this._providers = languageFeaturesService.linkedEditingRangeProvider;\n        this._enabled = false;\n        this._visibleContextKey = CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE.bindTo(contextKeyService);\n        this._debounceInformation = languageFeatureDebounceService.for(this._providers, 'Linked Editing', { min: 200 });\n        this._currentDecorations = [];\n        this._languageWordPattern = null;\n        this._currentWordPattern = null;\n        this._ignoreChangeEvent = false;\n        this._localToDispose = this._register(new DisposableStore());\n        this._rangeUpdateTriggerPromise = null;\n        this._rangeSyncTriggerPromise = null;\n        this._currentRequest = null;\n        this._currentRequestPosition = null;\n        this._currentRequestModelVersion = null;\n        this._register(this._editor.onDidChangeModel(() => this.reinitialize(true)));\n        this._register(this._editor.onDidChangeConfiguration(e => {\n            if (e.hasChanged(62 /* linkedEditing */) || e.hasChanged(82 /* renameOnType */)) {\n                this.reinitialize(false);\n            }\n        }));\n        this._register(this._providers.onDidChange(() => this.reinitialize(false)));\n        this._register(this._editor.onDidChangeModelLanguage(() => this.reinitialize(true)));\n        this.reinitialize(true);\n    }\n    static get(editor) {\n        return editor.getContribution(LinkedEditingContribution.ID);\n    }\n    reinitialize(forceRefresh) {\n        const model = this._editor.getModel();\n        const isEnabled = model !== null && (this._editor.getOption(62 /* linkedEditing */) || this._editor.getOption(82 /* renameOnType */)) && this._providers.has(model);\n        if (isEnabled === this._enabled && !forceRefresh) {\n            return;\n        }\n        this._enabled = isEnabled;\n        this.clearRanges();\n        this._localToDispose.clear();\n        if (!isEnabled || model === null) {\n            return;\n        }\n        this._localToDispose.add(Event.runAndSubscribe(model.onDidChangeLanguageConfiguration, () => {\n            this._languageWordPattern = this.languageConfigurationService.getLanguageConfiguration(model.getLanguageId()).getWordDefinition();\n        }));\n        const rangeUpdateScheduler = new Delayer(this._debounceInformation.get(model));\n        const triggerRangeUpdate = () => {\n            var _a;\n            this._rangeUpdateTriggerPromise = rangeUpdateScheduler.trigger(() => this.updateRanges(), (_a = this._debounceDuration) !== null && _a !== void 0 ? _a : this._debounceInformation.get(model));\n        };\n        const rangeSyncScheduler = new Delayer(0);\n        const triggerRangeSync = (decorations) => {\n            this._rangeSyncTriggerPromise = rangeSyncScheduler.trigger(() => this._syncRanges(decorations));\n        };\n        this._localToDispose.add(this._editor.onDidChangeCursorPosition(() => {\n            triggerRangeUpdate();\n        }));\n        this._localToDispose.add(this._editor.onDidChangeModelContent((e) => {\n            if (!this._ignoreChangeEvent) {\n                if (this._currentDecorations.length > 0) {\n                    const referenceRange = model.getDecorationRange(this._currentDecorations[0]);\n                    if (referenceRange && e.changes.every(c => referenceRange.intersectRanges(c.range))) {\n                        triggerRangeSync(this._currentDecorations);\n                        return;\n                    }\n                }\n            }\n            triggerRangeUpdate();\n        }));\n        this._localToDispose.add({\n            dispose: () => {\n                rangeUpdateScheduler.dispose();\n                rangeSyncScheduler.dispose();\n            }\n        });\n        this.updateRanges();\n    }\n    _syncRanges(decorations) {\n        // dalayed invocation, make sure we're still on\n        if (!this._editor.hasModel() || decorations !== this._currentDecorations || decorations.length === 0) {\n            // nothing to do\n            return;\n        }\n        const model = this._editor.getModel();\n        const referenceRange = model.getDecorationRange(decorations[0]);\n        if (!referenceRange || referenceRange.startLineNumber !== referenceRange.endLineNumber) {\n            return this.clearRanges();\n        }\n        const referenceValue = model.getValueInRange(referenceRange);\n        if (this._currentWordPattern) {\n            const match = referenceValue.match(this._currentWordPattern);\n            const matchLength = match ? match[0].length : 0;\n            if (matchLength !== referenceValue.length) {\n                return this.clearRanges();\n            }\n        }\n        let edits = [];\n        for (let i = 1, len = decorations.length; i < len; i++) {\n            const mirrorRange = model.getDecorationRange(decorations[i]);\n            if (!mirrorRange) {\n                continue;\n            }\n            if (mirrorRange.startLineNumber !== mirrorRange.endLineNumber) {\n                edits.push({\n                    range: mirrorRange,\n                    text: referenceValue\n                });\n            }\n            else {\n                let oldValue = model.getValueInRange(mirrorRange);\n                let newValue = referenceValue;\n                let rangeStartColumn = mirrorRange.startColumn;\n                let rangeEndColumn = mirrorRange.endColumn;\n                const commonPrefixLength = strings.commonPrefixLength(oldValue, newValue);\n                rangeStartColumn += commonPrefixLength;\n                oldValue = oldValue.substr(commonPrefixLength);\n                newValue = newValue.substr(commonPrefixLength);\n                const commonSuffixLength = strings.commonSuffixLength(oldValue, newValue);\n                rangeEndColumn -= commonSuffixLength;\n                oldValue = oldValue.substr(0, oldValue.length - commonSuffixLength);\n                newValue = newValue.substr(0, newValue.length - commonSuffixLength);\n                if (rangeStartColumn !== rangeEndColumn || newValue.length !== 0) {\n                    edits.push({\n                        range: new Range(mirrorRange.startLineNumber, rangeStartColumn, mirrorRange.endLineNumber, rangeEndColumn),\n                        text: newValue\n                    });\n                }\n            }\n        }\n        if (edits.length === 0) {\n            return;\n        }\n        try {\n            this._editor.popUndoStop();\n            this._ignoreChangeEvent = true;\n            const prevEditOperationType = this._editor._getViewModel().getPrevEditOperationType();\n            this._editor.executeEdits('linkedEditing', edits);\n            this._editor._getViewModel().setPrevEditOperationType(prevEditOperationType);\n        }\n        finally {\n            this._ignoreChangeEvent = false;\n        }\n    }\n    dispose() {\n        this.clearRanges();\n        super.dispose();\n    }\n    clearRanges() {\n        this._visibleContextKey.set(false);\n        this._currentDecorations = this._editor.deltaDecorations(this._currentDecorations, []);\n        if (this._currentRequest) {\n            this._currentRequest.cancel();\n            this._currentRequest = null;\n            this._currentRequestPosition = null;\n        }\n    }\n    updateRanges(force = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._editor.hasModel()) {\n                this.clearRanges();\n                return;\n            }\n            const position = this._editor.getPosition();\n            if (!this._enabled && !force || this._editor.getSelections().length > 1) {\n                // disabled or multicursor\n                this.clearRanges();\n                return;\n            }\n            const model = this._editor.getModel();\n            const modelVersionId = model.getVersionId();\n            if (this._currentRequestPosition && this._currentRequestModelVersion === modelVersionId) {\n                if (position.equals(this._currentRequestPosition)) {\n                    return; // same position\n                }\n                if (this._currentDecorations && this._currentDecorations.length > 0) {\n                    const range = model.getDecorationRange(this._currentDecorations[0]);\n                    if (range && range.containsPosition(position)) {\n                        return; // just moving inside the existing primary range\n                    }\n                }\n            }\n            this._currentRequestPosition = position;\n            this._currentRequestModelVersion = modelVersionId;\n            const request = createCancelablePromise((token) => __awaiter(this, void 0, void 0, function* () {\n                try {\n                    const sw = new StopWatch(false);\n                    const response = yield getLinkedEditingRanges(this._providers, model, position, token);\n                    this._debounceInformation.update(model, sw.elapsed());\n                    if (request !== this._currentRequest) {\n                        return;\n                    }\n                    this._currentRequest = null;\n                    if (modelVersionId !== model.getVersionId()) {\n                        return;\n                    }\n                    let ranges = [];\n                    if (response === null || response === void 0 ? void 0 : response.ranges) {\n                        ranges = response.ranges;\n                    }\n                    this._currentWordPattern = (response === null || response === void 0 ? void 0 : response.wordPattern) || this._languageWordPattern;\n                    let foundReferenceRange = false;\n                    for (let i = 0, len = ranges.length; i < len; i++) {\n                        if (Range.containsPosition(ranges[i], position)) {\n                            foundReferenceRange = true;\n                            if (i !== 0) {\n                                const referenceRange = ranges[i];\n                                ranges.splice(i, 1);\n                                ranges.unshift(referenceRange);\n                            }\n                            break;\n                        }\n                    }\n                    if (!foundReferenceRange) {\n                        // Cannot do linked editing if the ranges are not where the cursor is...\n                        this.clearRanges();\n                        return;\n                    }\n                    const decorations = ranges.map(range => ({ range: range, options: LinkedEditingContribution.DECORATION }));\n                    this._visibleContextKey.set(true);\n                    this._currentDecorations = this._editor.deltaDecorations(this._currentDecorations, decorations);\n                }\n                catch (err) {\n                    if (!isCancellationError(err)) {\n                        onUnexpectedError(err);\n                    }\n                    if (this._currentRequest === request || !this._currentRequest) {\n                        // stop if we are still the latest request\n                        this.clearRanges();\n                    }\n                }\n            }));\n            this._currentRequest = request;\n            return request;\n        });\n    }\n};\nLinkedEditingContribution.ID = 'editor.contrib.linkedEditing';\nLinkedEditingContribution.DECORATION = ModelDecorationOptions.register({\n    description: 'linked-editing',\n    stickiness: 0 /* AlwaysGrowsWhenTypingAtEdges */,\n    className: DECORATION_CLASS_NAME\n});\nLinkedEditingContribution = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, ILanguageFeaturesService),\n    __param(3, ILanguageConfigurationService),\n    __param(4, ILanguageFeatureDebounceService)\n], LinkedEditingContribution);\nexport { LinkedEditingContribution };\nexport class LinkedEditingAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.linkedEditing',\n            label: nls.localize('linkedEditing.label', \"Start Linked Editing\"),\n            alias: 'Start Linked Editing',\n            precondition: ContextKeyExpr.and(EditorContextKeys.writable, EditorContextKeys.hasRenameProvider),\n            kbOpts: {\n                kbExpr: EditorContextKeys.editorTextFocus,\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 60 /* F2 */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    runCommand(accessor, args) {\n        const editorService = accessor.get(ICodeEditorService);\n        const [uri, pos] = Array.isArray(args) && args || [undefined, undefined];\n        if (URI.isUri(uri) && Position.isIPosition(pos)) {\n            return editorService.openCodeEditor({ resource: uri }, editorService.getActiveCodeEditor()).then(editor => {\n                if (!editor) {\n                    return;\n                }\n                editor.setPosition(pos);\n                editor.invokeWithinContext(accessor => {\n                    this.reportTelemetry(accessor, editor);\n                    return this.run(accessor, editor);\n                });\n            }, onUnexpectedError);\n        }\n        return super.runCommand(accessor, args);\n    }\n    run(_accessor, editor) {\n        const controller = LinkedEditingContribution.get(editor);\n        if (controller) {\n            return Promise.resolve(controller.updateRanges(true));\n        }\n        return Promise.resolve();\n    }\n}\nconst LinkedEditingCommand = EditorCommand.bindToContribution(LinkedEditingContribution.get);\nregisterEditorCommand(new LinkedEditingCommand({\n    id: 'cancelLinkedEditingInput',\n    precondition: CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE,\n    handler: x => x.clearRanges(),\n    kbOpts: {\n        kbExpr: EditorContextKeys.editorTextFocus,\n        weight: 100 /* EditorContrib */ + 99,\n        primary: 9 /* Escape */,\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\n    }\n}));\nfunction getLinkedEditingRanges(providers, model, position, token) {\n    const orderedByScore = providers.ordered(model);\n    // in order of score ask the linked editing range provider\n    // until someone response with a good result\n    // (good = not null)\n    return first(orderedByScore.map(provider => () => __awaiter(this, void 0, void 0, function* () {\n        try {\n            return yield provider.provideLinkedEditingRanges(model, position, token);\n        }\n        catch (e) {\n            onUnexpectedExternalError(e);\n            return undefined;\n        }\n    })), result => !!result && arrays.isNonEmptyArray(result === null || result === void 0 ? void 0 : result.ranges));\n}\nexport const editorLinkedEditingBackground = registerColor('editor.linkedEditingBackground', { dark: Color.fromHex('#f00').transparent(0.3), light: Color.fromHex('#f00').transparent(0.3), hc: Color.fromHex('#f00').transparent(0.3) }, nls.localize('editorLinkedEditingBackground', 'Background color when the editor auto renames on type.'));\nregisterThemingParticipant((theme, collector) => {\n    const editorLinkedEditingBackgroundColor = theme.getColor(editorLinkedEditingBackground);\n    if (editorLinkedEditingBackgroundColor) {\n        collector.addRule(`.monaco-editor .${DECORATION_CLASS_NAME} { background: ${editorLinkedEditingBackgroundColor}; border-left-color: ${editorLinkedEditingBackgroundColor}; }`);\n    }\n});\nregisterModelAndPositionCommand('_executeLinkedEditingProvider', (_accessor, model, position) => {\n    const { linkedEditingRangeProvider } = _accessor.get(ILanguageFeaturesService);\n    return getLinkedEditingRanges(linkedEditingRangeProvider, model, position, CancellationToken.None);\n});\nregisterEditorContribution(LinkedEditingContribution.ID, LinkedEditingContribution);\nregisterEditorAction(LinkedEditingAction);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { coalesce } from '../../../../base/common/arrays.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { DisposableStore, isDisposable } from '../../../../base/common/lifecycle.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { Range } from '../../../common/core/range.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nexport class Link {\n    constructor(link, provider) {\n        this._link = link;\n        this._provider = provider;\n    }\n    toJSON() {\n        return {\n            range: this.range,\n            url: this.url,\n            tooltip: this.tooltip\n        };\n    }\n    get range() {\n        return this._link.range;\n    }\n    get url() {\n        return this._link.url;\n    }\n    get tooltip() {\n        return this._link.tooltip;\n    }\n    resolve(token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._link.url) {\n                return this._link.url;\n            }\n            if (typeof this._provider.resolveLink === 'function') {\n                return Promise.resolve(this._provider.resolveLink(this._link, token)).then(value => {\n                    this._link = value || this._link;\n                    if (this._link.url) {\n                        // recurse\n                        return this.resolve(token);\n                    }\n                    return Promise.reject(new Error('missing'));\n                });\n            }\n            return Promise.reject(new Error('missing'));\n        });\n    }\n}\nexport class LinksList {\n    constructor(tuples) {\n        this._disposables = new DisposableStore();\n        let links = [];\n        for (const [list, provider] of tuples) {\n            // merge all links\n            const newLinks = list.links.map(link => new Link(link, provider));\n            links = LinksList._union(links, newLinks);\n            // register disposables\n            if (isDisposable(list)) {\n                this._disposables.add(list);\n            }\n        }\n        this.links = links;\n    }\n    dispose() {\n        this._disposables.dispose();\n        this.links.length = 0;\n    }\n    static _union(oldLinks, newLinks) {\n        // reunite oldLinks with newLinks and remove duplicates\n        let result = [];\n        let oldIndex;\n        let oldLen;\n        let newIndex;\n        let newLen;\n        for (oldIndex = 0, newIndex = 0, oldLen = oldLinks.length, newLen = newLinks.length; oldIndex < oldLen && newIndex < newLen;) {\n            const oldLink = oldLinks[oldIndex];\n            const newLink = newLinks[newIndex];\n            if (Range.areIntersectingOrTouching(oldLink.range, newLink.range)) {\n                // Remove the oldLink\n                oldIndex++;\n                continue;\n            }\n            const comparisonResult = Range.compareRangesUsingStarts(oldLink.range, newLink.range);\n            if (comparisonResult < 0) {\n                // oldLink is before\n                result.push(oldLink);\n                oldIndex++;\n            }\n            else {\n                // newLink is before\n                result.push(newLink);\n                newIndex++;\n            }\n        }\n        for (; oldIndex < oldLen; oldIndex++) {\n            result.push(oldLinks[oldIndex]);\n        }\n        for (; newIndex < newLen; newIndex++) {\n            result.push(newLinks[newIndex]);\n        }\n        return result;\n    }\n}\nexport function getLinks(providers, model, token) {\n    const lists = [];\n    // ask all providers for links in parallel\n    const promises = providers.ordered(model).reverse().map((provider, i) => {\n        return Promise.resolve(provider.provideLinks(model, token)).then(result => {\n            if (result) {\n                lists[i] = [result, provider];\n            }\n        }, onUnexpectedExternalError);\n    });\n    return Promise.all(promises).then(() => {\n        const result = new LinksList(coalesce(lists));\n        if (!token.isCancellationRequested) {\n            return result;\n        }\n        result.dispose();\n        return new LinksList([]);\n    });\n}\nCommandsRegistry.registerCommand('_executeLinkProvider', (accessor, ...args) => __awaiter(void 0, void 0, void 0, function* () {\n    let [uri, resolveCount] = args;\n    assertType(uri instanceof URI);\n    if (typeof resolveCount !== 'number') {\n        resolveCount = 0;\n    }\n    const { linkProvider } = accessor.get(ILanguageFeaturesService);\n    const model = accessor.get(IModelService).getModel(uri);\n    if (!model) {\n        return [];\n    }\n    const list = yield getLinks(linkProvider, model, CancellationToken.None);\n    if (!list) {\n        return [];\n    }\n    // resolve links\n    for (let i = 0; i < Math.min(resolveCount, list.links.length); i++) {\n        yield list.links[i].resolve(CancellationToken.None);\n    }\n    const result = list.links.slice(0);\n    list.dispose();\n    return result;\n}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { createCancelablePromise, RunOnceScheduler } from '../../../../base/common/async.js';\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { MarkdownString } from '../../../../base/common/htmlContent.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../../base/common/network.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as resources from '../../../../base/common/resources.js';\nimport { StopWatch } from '../../../../base/common/stopwatch.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport './links.css';\nimport { EditorAction, registerEditorAction, registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { ILanguageFeaturesService } from '../../../common/services/languageFeatures.js';\nimport { ClickLinkGesture } from '../../gotoSymbol/browser/link/clickLinkGesture.js';\nimport { getLinks } from './getLinks.js';\nimport * as nls from '../../../../nls.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IOpenerService } from '../../../../platform/opener/common/opener.js';\nimport { editorActiveLinkForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nlet LinkDetector = class LinkDetector extends Disposable {\n    constructor(editor, openerService, notificationService, languageFeaturesService, languageFeatureDebounceService) {\n        super();\n        this.editor = editor;\n        this.openerService = openerService;\n        this.notificationService = notificationService;\n        this.languageFeaturesService = languageFeaturesService;\n        this.providers = this.languageFeaturesService.linkProvider;\n        this.debounceInformation = languageFeatureDebounceService.for(this.providers, 'Links', { min: 1000, max: 4000 });\n        this.computeLinks = this._register(new RunOnceScheduler(() => this.computeLinksNow(), 1000));\n        this.computePromise = null;\n        this.activeLinksList = null;\n        this.currentOccurrences = {};\n        this.activeLinkDecorationId = null;\n        const clickLinkGesture = this._register(new ClickLinkGesture(editor));\n        this._register(clickLinkGesture.onMouseMoveOrRelevantKeyDown(([mouseEvent, keyboardEvent]) => {\n            this._onEditorMouseMove(mouseEvent, keyboardEvent);\n        }));\n        this._register(clickLinkGesture.onExecute((e) => {\n            this.onEditorMouseUp(e);\n        }));\n        this._register(clickLinkGesture.onCancel((e) => {\n            this.cleanUpActiveLinkDecoration();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!e.hasChanged(63 /* links */)) {\n                return;\n            }\n            // Remove any links (for the getting disabled case)\n            this.updateDecorations([]);\n            // Stop any computation (for the getting disabled case)\n            this.stop();\n            // Start computing (for the getting enabled case)\n            this.computeLinks.schedule(0);\n        }));\n        this._register(editor.onDidChangeModelContent((e) => {\n            if (!this.editor.hasModel()) {\n                return;\n            }\n            this.computeLinks.schedule(this.debounceInformation.get(this.editor.getModel()));\n        }));\n        this._register(editor.onDidChangeModel((e) => {\n            this.currentOccurrences = {};\n            this.activeLinkDecorationId = null;\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this._register(editor.onDidChangeModelLanguage((e) => {\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this._register(this.providers.onDidChange((e) => {\n            this.stop();\n            this.computeLinks.schedule(0);\n        }));\n        this.computeLinks.schedule(0);\n    }\n    static get(editor) {\n        return editor.getContribution(LinkDetector.ID);\n    }\n    computeLinksNow() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this.editor.hasModel() || !this.editor.getOption(63 /* links */)) {\n                return;\n            }\n            const model = this.editor.getModel();\n            if (!this.providers.has(model)) {\n                return;\n            }\n            if (this.activeLinksList) {\n                this.activeLinksList.dispose();\n                this.activeLinksList = null;\n            }\n            this.computePromise = createCancelablePromise(token => getLinks(this.providers, model, token));\n            try {\n                const sw = new StopWatch(false);\n                this.activeLinksList = yield this.computePromise;\n                this.debounceInformation.update(model, sw.elapsed());\n                if (model.isDisposed()) {\n                    return;\n                }\n                this.updateDecorations(this.activeLinksList.links);\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n            finally {\n                this.computePromise = null;\n            }\n        });\n    }\n    updateDecorations(links) {\n        const useMetaKey = (this.editor.getOption(70 /* multiCursorModifier */) === 'altKey');\n        const oldDecorations = [];\n        const keys = Object.keys(this.currentOccurrences);\n        for (const decorationId of keys) {\n            const occurence = this.currentOccurrences[decorationId];\n            oldDecorations.push(occurence.decorationId);\n        }\n        const newDecorations = [];\n        if (links) {\n            // Not sure why this is sometimes null\n            for (const link of links) {\n                newDecorations.push(LinkOccurrence.decoration(link, useMetaKey));\n            }\n        }\n        const decorations = this.editor.deltaDecorations(oldDecorations, newDecorations);\n        this.currentOccurrences = {};\n        this.activeLinkDecorationId = null;\n        for (let i = 0, len = decorations.length; i < len; i++) {\n            const occurence = new LinkOccurrence(links[i], decorations[i]);\n            this.currentOccurrences[occurence.decorationId] = occurence;\n        }\n    }\n    _onEditorMouseMove(mouseEvent, withKey) {\n        const useMetaKey = (this.editor.getOption(70 /* multiCursorModifier */) === 'altKey');\n        if (this.isEnabled(mouseEvent, withKey)) {\n            this.cleanUpActiveLinkDecoration(); // always remove previous link decoration as their can only be one\n            const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\n            if (occurrence) {\n                this.editor.changeDecorations((changeAccessor) => {\n                    occurrence.activate(changeAccessor, useMetaKey);\n                    this.activeLinkDecorationId = occurrence.decorationId;\n                });\n            }\n        }\n        else {\n            this.cleanUpActiveLinkDecoration();\n        }\n    }\n    cleanUpActiveLinkDecoration() {\n        const useMetaKey = (this.editor.getOption(70 /* multiCursorModifier */) === 'altKey');\n        if (this.activeLinkDecorationId) {\n            const occurrence = this.currentOccurrences[this.activeLinkDecorationId];\n            if (occurrence) {\n                this.editor.changeDecorations((changeAccessor) => {\n                    occurrence.deactivate(changeAccessor, useMetaKey);\n                });\n            }\n            this.activeLinkDecorationId = null;\n        }\n    }\n    onEditorMouseUp(mouseEvent) {\n        if (!this.isEnabled(mouseEvent)) {\n            return;\n        }\n        const occurrence = this.getLinkOccurrence(mouseEvent.target.position);\n        if (!occurrence) {\n            return;\n        }\n        this.openLinkOccurrence(occurrence, mouseEvent.hasSideBySideModifier, true /* from user gesture */);\n    }\n    openLinkOccurrence(occurrence, openToSide, fromUserGesture = false) {\n        if (!this.openerService) {\n            return;\n        }\n        const { link } = occurrence;\n        link.resolve(CancellationToken.None).then(uri => {\n            // Support for relative file URIs of the shape file://./relativeFile.txt or file:///./relativeFile.txt\n            if (typeof uri === 'string' && this.editor.hasModel()) {\n                const modelUri = this.editor.getModel().uri;\n                if (modelUri.scheme === Schemas.file && uri.startsWith(`${Schemas.file}:`)) {\n                    const parsedUri = URI.parse(uri);\n                    if (parsedUri.scheme === Schemas.file) {\n                        const fsPath = resources.originalFSPath(parsedUri);\n                        let relativePath = null;\n                        if (fsPath.startsWith('/./')) {\n                            relativePath = `.${fsPath.substr(1)}`;\n                        }\n                        else if (fsPath.startsWith('//./')) {\n                            relativePath = `.${fsPath.substr(2)}`;\n                        }\n                        if (relativePath) {\n                            uri = resources.joinPath(modelUri, relativePath);\n                        }\n                    }\n                }\n            }\n            return this.openerService.open(uri, { openToSide, fromUserGesture, allowContributedOpeners: true, allowCommands: true });\n        }, err => {\n            const messageOrError = err instanceof Error ? err.message : err;\n            // different error cases\n            if (messageOrError === 'invalid') {\n                this.notificationService.warn(nls.localize('invalid.url', 'Failed to open this link because it is not well-formed: {0}', link.url.toString()));\n            }\n            else if (messageOrError === 'missing') {\n                this.notificationService.warn(nls.localize('missing.url', 'Failed to open this link because its target is missing.'));\n            }\n            else {\n                onUnexpectedError(err);\n            }\n        });\n    }\n    getLinkOccurrence(position) {\n        if (!this.editor.hasModel() || !position) {\n            return null;\n        }\n        const decorations = this.editor.getModel().getDecorationsInRange({\n            startLineNumber: position.lineNumber,\n            startColumn: position.column,\n            endLineNumber: position.lineNumber,\n            endColumn: position.column\n        }, 0, true);\n        for (const decoration of decorations) {\n            const currentOccurrence = this.currentOccurrences[decoration.id];\n            if (currentOccurrence) {\n                return currentOccurrence;\n            }\n        }\n        return null;\n    }\n    isEnabled(mouseEvent, withKey) {\n        return Boolean((mouseEvent.target.type === 6 /* CONTENT_TEXT */)\n            && (mouseEvent.hasTriggerModifier || (withKey && withKey.keyCodeIsTriggerKey)));\n    }\n    stop() {\n        var _a;\n        this.computeLinks.cancel();\n        if (this.activeLinksList) {\n            (_a = this.activeLinksList) === null || _a === void 0 ? void 0 : _a.dispose();\n            this.activeLinksList = null;\n        }\n        if (this.computePromise) {\n            this.computePromise.cancel();\n            this.computePromise = null;\n        }\n    }\n    dispose() {\n        super.dispose();\n        this.stop();\n    }\n};\nLinkDetector.ID = 'editor.linkDetector';\nLinkDetector = __decorate([\n    __param(1, IOpenerService),\n    __param(2, INotificationService),\n    __param(3, ILanguageFeaturesService),\n    __param(4, ILanguageFeatureDebounceService)\n], LinkDetector);\nexport { LinkDetector };\nconst decoration = {\n    general: ModelDecorationOptions.register({\n        description: 'detected-link',\n        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\n        collapseOnReplaceEdit: true,\n        inlineClassName: 'detected-link'\n    }),\n    active: ModelDecorationOptions.register({\n        description: 'detected-link-active',\n        stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\n        collapseOnReplaceEdit: true,\n        inlineClassName: 'detected-link-active'\n    })\n};\nclass LinkOccurrence {\n    constructor(link, decorationId) {\n        this.link = link;\n        this.decorationId = decorationId;\n    }\n    static decoration(link, useMetaKey) {\n        return {\n            range: link.range,\n            options: LinkOccurrence._getOptions(link, useMetaKey, false)\n        };\n    }\n    static _getOptions(link, useMetaKey, isActive) {\n        const options = Object.assign({}, (isActive ? decoration.active : decoration.general));\n        options.hoverMessage = getHoverMessage(link, useMetaKey);\n        return options;\n    }\n    activate(changeAccessor, useMetaKey) {\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, true));\n    }\n    deactivate(changeAccessor, useMetaKey) {\n        changeAccessor.changeDecorationOptions(this.decorationId, LinkOccurrence._getOptions(this.link, useMetaKey, false));\n    }\n}\nfunction getHoverMessage(link, useMetaKey) {\n    const executeCmd = link.url && /^command:/i.test(link.url.toString());\n    const label = link.tooltip\n        ? link.tooltip\n        : executeCmd\n            ? nls.localize('links.navigate.executeCmd', 'Execute command')\n            : nls.localize('links.navigate.follow', 'Follow link');\n    const kb = useMetaKey\n        ? platform.isMacintosh\n            ? nls.localize('links.navigate.kb.meta.mac', \"cmd + click\")\n            : nls.localize('links.navigate.kb.meta', \"ctrl + click\")\n        : platform.isMacintosh\n            ? nls.localize('links.navigate.kb.alt.mac', \"option + click\")\n            : nls.localize('links.navigate.kb.alt', \"alt + click\");\n    if (link.url) {\n        let nativeLabel = '';\n        if (/^command:/i.test(link.url.toString())) {\n            // Don't show complete command arguments in the native tooltip\n            const match = link.url.toString().match(/^command:([^?#]+)/);\n            if (match) {\n                const commandId = match[1];\n                const nativeLabelText = nls.localize('tooltip.explanation', \"Execute command {0}\", commandId);\n                nativeLabel = ` \"${nativeLabelText}\"`;\n            }\n        }\n        const hoverMessage = new MarkdownString('', true).appendMarkdown(`[${label}](${link.url.toString(true).replace(/ /g, '%20')}${nativeLabel}) (${kb})`);\n        return hoverMessage;\n    }\n    else {\n        return new MarkdownString().appendText(`${label} (${kb})`);\n    }\n}\nclass OpenLinkAction extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.openLink',\n            label: nls.localize('label', \"Open Link\"),\n            alias: 'Open Link',\n            precondition: undefined\n        });\n    }\n    run(accessor, editor) {\n        const linkDetector = LinkDetector.get(editor);\n        if (!linkDetector) {\n            return;\n        }\n        if (!editor.hasModel()) {\n            return;\n        }\n        const selections = editor.getSelections();\n        for (const sel of selections) {\n            const link = linkDetector.getLinkOccurrence(sel.getEndPosition());\n            if (link) {\n                linkDetector.openLinkOccurrence(link, false);\n            }\n        }\n    }\n}\nregisterEditorContribution(LinkDetector.ID, LinkDetector);\nregisterEditorAction(OpenLinkAction);\nregisterThemingParticipant((theme, collector) => {\n    const activeLinkForeground = theme.getColor(editorActiveLinkForeground);\n    if (activeLinkForeground) {\n        collector.addRule(`.monaco-editor .detected-link-active { color: ${activeLinkForeground} !important; }`);\n    }\n});\n"],"names":["__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","e","rejected","result","done","then","apply","HoverProviderResult","provider","hover","ordinal","this","getHover","registry","model","position","token","promises","ordered","map","index","provideHover","isValid","onUnexpectedExternalError","undefined","executeProvider","AsyncIterableObject","coalesce","hasRange","range","hasHtmlContent","contents","length","registerModelAndPositionCommand","accessor","item","toPromise","getHoverPromise","get","ILanguageFeaturesService","hoverProvider","CancellationToken","__asyncValues","o","Symbol","asyncIterator","TypeError","i","m","call","__values","iterator","verb","n","v","d","settle","HoverResult","isComplete","hasLoadingMessage","HoverOperation","_editor","_computer","_onResult","_register","Emitter","onResult","event","_firstWaitScheduler","RunOnceScheduler","_triggerAsyncComputation","_secondWaitScheduler","_triggerSyncComputation","_loadingMessageScheduler","_triggerLoadingMessage","_state","_asyncIterable","_asyncIterableDone","_result","cancel","getOption","delay","_hoverTime","_firstWaitTime","state","fireResult","_fireResult","_setState","schedule","_secondWaitTime","computeAsync","createCancelableAsyncIterable","_b","_c","push","e_1","error","_a","return","onUnexpectedError","computeSync","concat","fire","slice","mode","_loadingMessageTime","Disposable","__decorate","decorators","target","key","desc","c","arguments","r","Object","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","__param","paramIndex","decorator","$","dom","ContentHoverController","_instantiationService","_keybindingService","_widget","createInstance","ContentHoverWidget","_decorationsChangerListener","EditorDecorationsChangerListener","_messages","_messagesAreComplete","_participants","HoverParticipantRegistry","participant","sort","p1","p2","hoverOrdinal","ContentHoverComputer","_hoverOperation","_withResult","onDidChangeModelDecorations","_onModelDecorationsChanged","addStandardDisposableListener","getDomNode","equals","hide","TokenizationRegistry","anchor","clear","_renderMessages","isColorPickerVisible","start","mouseEvent","anchorCandidates","suggestHoverAnchor","type","HoverRangeAnchor","epsilon","typicalHalfwidthCharacterWidth","detail","isAfterLines","horizontalDistanceToText","a","b","priority","_startShowingAt","focus","canAdoptVisibleHover","filteredMessages","filter","isValidForHoverAnchor","shouldFocus","createLoadingMessage","loadingMessage","_addLoadingMessage","messages","renderColumn","highlightRange","forceShowAtRange","msg","Math","min","startColumn","Range","disposables","DisposableStore","statusBar","add","EditorHoverStatusBar","fragment","document","createDocumentFragment","colorPicker","context","setColorPicker","widget","onContentsChanged","hoverParts","owner","renderHoverParts","hasContent","appendChild","hoverElement","hasChildNodes","highlightDecorations","deltaDecorations","options","_DECORATION_OPTIONS","toDisposable","showAt","ContentHoverVisibleData","getStartPosition","Position","startLineNumber","above","dispose","ModelDecorationOptions","description","className","IInstantiationService","IKeybindingService","_onDidChangeModelDecorations","_isChangingDecorations","oldDecorations","newDecorations","showAtPosition","showAtRange","preferAbove","stoleFocus","_contextKeyService","allowEditorOverflow","_hoverVisibleKey","EditorContextKeys","_hover","HoverWidget","_visibleData","onDidLayoutChange","_layout","onDidChangeConfiguration","hasChanged","_updateFont","_setVisibleData","addContentWidget","Boolean","removeContentWidget","ID","containerDomNode","getContextKeyValue","SuggestContext","preference","visibleData","set","classList","toggle","height","max","getLayoutInfo","fontSize","lineHeight","contentsDomNode","style","maxHeight","maxWidth","width","Array","prototype","getElementsByClassName","forEach","node","applyFontInfo","textContent","paddingBottom","layoutContentWidget","render","layout","scrollDimensions","scrollbar","getScrollDimensions","scrollWidth","extraBottomPadding","horizontalScrollbarSize","IContextKeyService","_hasContent","actionsElement","append","actionOptions","keybinding","lookupKeybinding","commandId","keybindingLabel","getLabel","HoverAction","element","_anchor","_shouldFocus","hasModel","lineDecorations","_getLineDecorations","editor","getModel","lineNumber","maxColumn","getLineMaxColumn","getLineDecorations","isWholeLine","endColumn","endLineNumber","showIfCollapsed","MarginHoverWidget","languageService","openerService","NullOpenerService","_renderDisposeables","_isVisible","_markdownRenderer","MarkdownRenderer","MarginHoverComputer","addOverlayWidget","removeOverlayWidget","markdownHoverElement","hoverContentsElement","renderedContents","_updateContents","_showAt","editorLayout","topForLineNumber","getTopForLineNumber","editorScrollTop","getScrollTop","top","clientHeight","left","glyphMarginLeft","glyphMarginWidth","round","_lineNumber","toHoverMessage","glyphMarginClassName","hoverMessage","glyphMarginHoverMessage","isEmptyMarkdownString","asArray","MarkerHover","marker","markerCodeActionTrigger","include","CodeActionKind","MarkerHoverParticipant","_markerDecorationsService","_openerService","_languageFeaturesService","recentMarkerCodeActionsInfo","getMarker","uri","renderMarkerHover","markerHoverForStatusbar","MarkerSeverity","severity","renderMarkerStatusbar","markerHover","markerElement","source","message","code","relatedInformation","messageElement","whiteSpace","innerText","sourceAndCodeElement","codeLink","setAttribute","toString","addDisposableListener","open","allowCommands","preventDefault","stopPropagation","detailsElement","opacity","paddingLeft","isNonEmptyArray","resource","relatedInfoContainer","marginTop","basename","cursor","fromUserGesture","editorOptions","selection","catch","addAction","label","nls","NextMarkerAction","run","MarkerController","showAtMarker","quickfixPlaceholderElement","IMarkerData","hasCodeActions","updatePlaceholderDisposable","disposableTimeout","String","fromCharCode","codeActionsPromise","getCodeActions","actions","validActions","display","showing","QuickFixAction","controller","QuickFixController","elementPosition","getDomNodePagePosition","showCodeActions","x","y","createCancelablePromise","cancellationToken","codeActionProvider","Progress","IMarkerDecorationsService","IOpenerService","registerThemingParticipant","theme","collector","linkFg","getColor","textLinkForeground","addRule","activeLinkFg","textLinkActiveForeground","ModesHoverController","_languageService","_toUnhook","_isMouseDown","_hoverClicked","_contentWidget","_glyphWidget","_hookEvents","_didChangeConfigurationHandler","_unhookEvents","hideWidgetsEventHandler","_hideWidgets","hoverOpts","_isHoverEnabled","enabled","_isHoverSticky","sticky","onMouseDown","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onMouseMove","_onEditorMouseMove","onKeyDown","_onKeyDown","onMouseLeave","onDidChangeModel","onDidScrollChange","_onEditorScrollChanged","scrollTopChanged","scrollLeftChanged","_d","_e","browserEvent","view","getSelection","isCollapsed","_getOrCreateContentWidget","maybeShowAt","startShowingAt","keyCode","startShowingAtRange","getContribution","ILanguageService","ShowHoverAction","id","comment","alias","precondition","kbOpts","kbExpr","primary","KeyChord","weight","getPosition","column","showContentHover","EditorAction","ShowDefinitionPreviewHoverAction","goto","GotoDefinitionAtPositionEditorContribution","startFindDefinitionFromCursor","registerEditorContribution","registerEditorAction","MarkdownHoverParticipant","editorHoverHighlightColor","editorHoverHighlight","hoverBackground","editorHoverBackground","hoverBorder","editorHoverBorder","transparent","link","linkHover","hoverForeground","editorHoverForeground","actionsBackground","editorHoverStatusBarBackground","codeBackground","textCodeBlockBackground","other","equalsRange","lastAnchor","HoverForeignElementAnchor","ctor","MarkdownHover","_configurationService","MarkdownString","appendText","lineLength","getLineLength","languageId","getLanguageIdAtPosition","maxTokenizationLineLength","getValue","overrideIdentifier","has","rng","renderMarkdownHovers","hoverPart","renderer","onDidRenderAsync","IConfigurationService","InPlaceReplaceCommand","editRange","originalSelection","text","_editRange","_originalSelection","_text","builder","addTrackedEditOperation","helper","srcRange","getInverseEditOperations","isEmpty","Selection","positionColumn","InPlaceReplaceController","editorWorkerService","decorationIds","up","currentRequest","editorSelection","EditorState","modelURI","canNavigateValueSet","navigateValueSet","validate","diff","command","pushUndoStop","executeCommand","DECORATION","decorationRemover","timeout","IEditorWorkerService","InPlaceReplaceUp","InPlaceReplaceDown","border","editorBracketMatchBorder","getSpaceCnt","str","tabSize","spacesCnt","charAt","generateIndent","insertSpaces","tabsCnt","floor","getReindentEditOperations","languageConfigurationService","inheritedIndent","getLineCount","indentationRules","getLanguageConfiguration","getLanguageId","unIndentedLinePattern","getLineContent","test","globalIndent","getOptions","indentSize","shiftIndent","indentation","count","ShiftCommand","unshiftIndent","indentEdits","currentLineText","adjustedLineContent","oldIndentation","strings","substring","decreaseIndentPattern","EditOperation","normalizeIndentation","idealIndentForNextLine","increaseIndentPattern","indentNextLinePattern","IndentationToSpacesAction","modelOpts","IndentationToSpacesCommand","executeCommands","updateOptions","IndentationToTabsAction","IndentationToTabsCommand","ChangeIndentationSizeAction","opts","quickInputService","IQuickInputService","modelService","IModelService","creationOpts","getCreationOptions","isForSimpleWidget","picks","autoFocusIndex","setTimeout","pick","placeHolder","activeItem","isDisposed","parseInt","IndentUsingTabs","IndentUsingSpaces","DetectIndentation","detectIndentation","ReindentLinesAction","ILanguageConfigurationService","edits","executeEdits","ReindentSelectedLinesAction","selections","getSelections","editOperations","AutoIndentOnPasteCommand","initialSelection","_initialSelection","_edits","_selectionId","edit","addEditOperation","selectionIsSet","isArray","trackSelection","getTrackedSelection","AutoIndentOnPaste","callOnDispose","callOnModel","update","onDidChangeModelLanguage","onDidPaste","trigger","isCheapToTokenize","autoIndent","textEdits","indentConverter","shouldIgnoreLine","firstLineText","indentOfFirstLine","LanguageConfigurationRegistry","newSpaceCnt","indentUtils","newIndent","substr","indentMetadata","firstLineNumber","virtualModel","getLineTokens","indentOfSecondLine","newSpaceCntOfSecondLine","oldSpaceCntOfSecondLine","spaceCntOffset","lineContent","originalIndent","newSpacesCnt","cmd","forceTokenization","nonWhitespaceColumn","getLineFirstNonWhitespaceColumn","tokens","getCount","firstNonWhitespaceTokenIndex","findTokenIndexAtOffset","getStandardTokenType","getIndentationEditOperations","tabsToSpaces","spaces","spacesRegExp","RegExp","lineCount","lastIndentationColumn","originalIndentationRange","originalIndentation","getValueInRange","newIndentation","replace","selectionId","InlayHintAnchor","direction","InlayHintItem","hint","_isResolved","delta","_currentResolve","resolveInlayHint","isCancellationRequested","_doResolve","finally","newHint","tooltip","InlayHintsFragments","ranges","data","_disposables","Set","items","list","hints","validatePosition","wordRange","_getRangeAtPosition","isBefore","getEndPosition","reverse","provideInlayHints","all","flat","CancellationError","line","word","getWordAtPosition","tokenizeIfCheap","offset","idx","getStartOffset","end","getEndOffset","showGoToContextMenu","part","resolverService","ITextModelService","contextMenuService","IContextMenuService","commandService","ICommandService","instaService","notificationService","INotificationService","location","menuActions","MenuRegistry","MenuId","isIMenuItem","EditorExtensionsRegistry","delegate","SymbolNavigationAction","Action","createModelReference","ref","invokeFunction","bind","SymbolNavigationAnchor","object","textEditorModel","f","Separator","title","notify","Severity","displayName","useShadowDOM","showContextMenu","domForShadowRoot","getAnchor","box","getActions","onHide","autoSelectFirstItem","goToDefinitionWithLocation","invokeWithinContext","openToSide","hasSideBySideModifier","contextKeyService","isInPeek","PeekContext","canPeek","action","DefinitionAction","openInPeek","muteMessage","InlayHintsCache","_entries","LRUCache","_key","getVersionId","IInlayHintsCache","createDecorator","registerSingleton","RenderedInlayHintLabelPart","ActiveInlayHintInfo","hasTriggerModifier","InlayHintsController","_featureDebounce","_inlayHintsCache","_commandService","_notificationService","_instaService","_sessionDisposables","_decorationsMetadata","Map","_ruleFactory","DynamicCssRules","_debounceInfo","for","inlayHintsProvider","onDidChange","_update","_removeAllDecorations","cts","cached","_updateHintsDecorators","getFullModelRange","_cacheHintsForFastRestore","watchedProviders","scheduler","t1","Date","now","CancellationTokenSource","listener","onWillDispose","myToken","create","_getHintsRanges","inlayHints","onDidChangeInlayHints","isScheduled","onDidChangeModelContent","_installLinkGesture","_installDblClickGesture","_installContextMenu","store","gesture","ClickLinkGesture","sessionStore","onMouseMoveOrRelevantKeyDown","labelPart","_getInlayHintLabelPart","_activeInlayHintPart","lineHints","values","containsRange","from","onCancel","onExecute","languages","_invokeCommand","onContextMenu","HTMLElement","injectedText","ModelDecorationInjectedTextOptions","attachedData","obj","getDecorationRange","with","visibleRanges","getVisibleRangesPlusViewportAboveBelow","extendedRange","validateRange","newDecorationsData","addInjectedText","content","cursorStops","classNameRef","decoration","collapseOnReplaceEdit","stickiness","inlineClassNameAffectsLetterSpacing","inlineClassName","addInjectedWhitespace","isLast","marginRule","createClassNameRef","InjectedTextCursorStops","_getLayoutInfo","fontFamily","fontFamilyVar","getContainerDomNode","setProperty","parts","isFirst","cssProperties","EDITOR_FONT_DEFAULTS","verticalAlign","_fillInColors","textDecoration","color","themeColorFromId","colors","padding","borderRadius","fixSpace","paddingRight","_MAX_DECORATORS","decorationIdsToReplace","getDecorationsInRange","metadata","delete","newDecorationIds","props","kind","backgroundColor","editorFontSize","keys","ILanguageFeatureDebounceService","CommandsRegistry","args","assertType","URI","InlayHintsHoverAnchor","InlayHintsHover","configurationService","_resolverService","languageFeaturesService","_lineDecorations","executor","itemTooltip","emitOne","partTooltip","useMetaKey","kb","platform","localize","linkHint","scheme","Schemas","path","query","encodeURIComponent","JSON","stringify","isTrusted","_resolveInlayHintLabelPartHover","iterable","iterable_1","iterable_1_1","inlineSuggestCommitId","GhostText","additionalReservedLineCount","lineText","lastPart","transformer","PositionOffsetTransformer","offsetEdits","startOffset","getOffset","endOffset","applyEdits","p","lines","join","lineStartOffsetByLineIdx","GhostTextPart","preview","BaseGhostTextWidgetModel","_expanded","onDidChangeEmitter","expanded","inlineCompletionToGhostText","inlineCompletion","textModel","cursorPosition","previewSuffixLength","sourceLine","sourceIndentationLength","suggestionTouchesIndentation","suggestionAddedIndentationLength","replacedIndentation","rangeThatDoesNotReplaceIndentation","suggestionWithoutIndentationChange","startsWith","valueToBeReplaced","changes","cachingDiff","filteredChanges","originalLength","originalStart","previewStartInCompletionText","insertColumn","modifiedLength","modifiedEnd","modifiedStart","nonPreviewTextEnd","nonPreviewText","italicText","lastRequest","originalValue","newValue","getMaxCharCode","val","maxCharCode","len","charCode","charCodeAt","getUniqueCharCode","Error","getElements","level","group","characters","Int32Array","elements1","elements2","LcsDiff","ComputeDiff","smartDiff","InlineCompletionsModel","cache","debounceService","completionSession","MutableDisposable","active","disposed","debounceValue","inlineCompletionsProvider","onDidExecuteCommand","CoreEditingCommands","hasTextFocus","handleUserInput","onDidType","onDidChangeCursorPosition","session","onDidBlurEditorWidget","startSessionIfTriggered","ghostText","minReservedLineCount","setExpanded","scheduleAutomaticUpdate","InlineCompletionTriggerKind","triggerKind","ensureUpdateWithExplicitContext","InlineCompletionsSession","takeOwnership","commitCurrentCompletion","showNextInlineCompletion","showPreviousInlineCompletion","hasMultipleInlineCompletions","triggerPosition","shouldUpdate","initialTriggerKind","debounce","updateOperation","updateSoon","currentlySelectedCompletionId","lastCompletionItem","currentCompletion","sourceInlineCompletion","sourceProvider","handleItemDidShow","sourceInlineCompletions","completions","findIndex","semanticId","fixAndGetIndexOfCurrentSelection","newIdx","promise","completion","currentCachedCompletion","toLiveInlineCompletion","startTime","provideInlineCompletions","selectedSuggestionInfo","endTime","getTime","setValue","operation","UpdateOperation","disposable","commit","clearAndLeak","SynchronizedInlineCompletionsCache","completionsSource","onChange","CachedInlineCompletion","newRange","decorationId","synchronizedRange","startLine","getDefaultRange","defaultReplaceRange","providers","freeInlineCompletions","results","itemsByHash","completeBracketPairs","closeBrackets","trackedItem","newLine","newTokens","tokenizeLineWithEdit","slicedTokens","sliceAndInflate","console","log","fixBracketsInLine","minimizeInlineCompletion","valueToReplace","commonPrefixLen","commonPrefixLength","getOffsetAt","getPositionAt","remainingValueToReplace","commonSuffixLen","commonSuffixLength","SuggestWidgetInlineCompletionProvider","suggestControllerPreselector","isSuggestWidgetVisible","isShiftKeyPressed","_isActive","_currentSuggestItemInfo","setInactiveDelayed","shiftKey","onKeyUp","suggestController","SuggestController","registerSelector","select","pos","suggestItems","normalizedItemToPreselect","candidates","suggestItem","rangeToTest","prefix","inlineSuggestItem","suggestionToSuggestItemInfo","normalizedSuggestItem","normalizedInlineCompletion","valid","prefixLength","findMaxBy","compareBy","s","numberComparator","isBoundToSuggestWidget","Event","onDidTrigger","onDidShow","onDidHide","onDidFocus","selectedItem","newActive","newInlineCompletion","getSuggestItemInfo","shouldFire","completionItemKind","isSnippetText","normalizedInlineCompletionsEquals","suggestItemInfoEquals","focusedItem","getFocusedItem","stopForceRenderingAbove","forceRenderingAbove","toggleMode","additionalTextEdits","insertText","insertTextRules","snippet","SnippetParser","parse","children","SnippetSession","info","getOverwriteInfo","overwriteBefore","overwriteAfter","SuggestWidgetPreviewModel","suggestionInlineCompletionSource","updateCacheSoon","updateCache","newGhostText","reduce","completionKind","isSuggestionPreviewEnabled","augmentedCompletion","suggestWidgetState","suggestInlineCompletion","isAugmentedCompletionValid","finalCompletion","inlineCompletionPreviewLength","toGhostText","previewMode","DelegatingModel","hasCachedGhostText","currentModelRef","cachedGhostText","targetModel","GhostTextModel","instantiationService","sharedCache","SharedInlineCompletionCache","suggestWidgetAdapterModel","inlineCompletionsModel","updateModel","setTargetModel","isActive","setActive","hoverRange","activeInlineCompletionsModel","some","containsPosition","commitCurrentSuggestion","showNext","showPrevious","ttPolicy","window","trustedTypes","createPolicy","createHTML","GhostTextWidget","partsWidget","DecorationsWidget","additionalLinesWidget","AdditionalLinesWidget","languageIdCodec","viewMoreContentWidget","viewZoneId","inlineTexts","additionalLines","addToAdditionalLines","lastLine","decorations","LineDecoration","textBufferLine","hiddenTextStartColumn","lastIdx","setParts","updateLines","renderViewMoreLines","remainingLinesLength","fontInfo","domNode","createElement","spacer","newline","disposableStore","button","ViewMoreLinesContentWidget","hiddenText","hiddenTextDecorations","after","_viewZoneId","changeViewZones","changeAccessor","removeZone","heightInLines","disableMonospaceOptimizations","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","sb","createStringBuilder","appendASCIIString","lineData","isBasicASCII","containsRTL","lineTokens","LineTokens","renderViewLine","RenderLineInput","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","EditorFontLigatures","html","build","trustedhtml","innerHTML","renderLines","addZone","afterLineNumber","afterColumnAffinity","suppressMouseDown","foreground","ghostTextForeground","background","ghostTextBackground","ghostTextBorder","GhostTextController","triggeredExplicitly","activeController","activeModelDidChangeEmitter","updateModelController","suggestOptions","inlineSuggestOptions","ActiveGhostTextController","activeModel","shouldShowHoverAt","shouldShowHoverAtViewZone","triggerInlineCompletion","commitInlineCompletion","hideInlineCompletion","inlineSuggestionVisible","RawContextKey","inlineSuggestionHasIndentation","inlineSuggestionHasIndentationLessThanTabSize","GhostTextContextKeys","inlineCompletionVisible","bindTo","inlineCompletionSuggestsIndentation","inlineCompletionSuggestsIndentationLessThanTabSize","contextKeys","updateContextKeys","startsWithIndentation","startsWithIndentationLessThanTabSize","firstLine","getLineIndentColumn","firstNonWsIdx","firstNonWhitespaceIndex","CursorColumns","GhostTextCommand","EditorCommand","commitInlineSuggestionAction","handler","registerEditorCommand","KeybindingsRegistry","when","ContextKeyExpr","ShowNextInlineSuggestionAction","ShowPreviousInlineSuggestionAction","TriggerInlineSuggestionAction","InlineCompletionsHover","InlineCompletionsHoverParticipant","_menuService","accessibilityService","viewZoneData","positionBefore","mightBeForeignElement","isScreenReaderOptimized","renderScreenReaderText","menu","createMenu","previousAction","nextAction","setEnabled","hasMultipleSuggestions","hasMore","MenuItemAction","inlineSuggestionAvailable","appendCodeblock","replaceChildren","renderForScreenReader","IMenuService","IAccessibilityService","ExpandLineSelectionAction","_accessor","viewModel","_getViewModel","pushStackElement","setCursorStates","CursorMoveCommands","getCursorStates","revealPrimaryCursor","CopyLinesCommand","isCopyingDown","noop","_selection","_isCopyingDown","_noop","_selectionDirection","_startLineNumberDelta","_endLineNumberDelta","setEndPosition","sourceLines","sourceText","getDirection","MoveLinesCommand","isMovingDown","_isMovingDown","_autoIndent","_moveEndLineSelectionShrink","modelLineCount","_moveEndPositionDown","buildIndentConverter","otherLineNumber","movingLineNumber","movingLineText","insertingText","shouldAutoIndent","movingLineMatchResult","matchEnterRule","trimLeft","indentOfMovingLine","ret","matchEnterRuleMovingDown","getIndentEditsOfMovingBlock","newIndentatOfMovingBlock","oldSpaceCnt","oldIndent","enter","enterPrefix","indentAction","IndentAction","indexOf","indentMetadataOfMovelingLine","futureAboveLineNumber","futureAboveLineText","parseEnterResult","validPrecedingLine","oneLineAbove","previousLineText","languageAtSelectionStart","SortLinesCommand","descending","op","getSortData","sortLines","_COLLATOR","Intl","Collator","before","linesToSort","sorted","getCollator","compare","AbstractCopyLinesAction","down","ignore","prev","curr","commands","CopyLinesUpAction","linux","menuOpts","menuId","order","CopyLinesDownAction","DuplicateSelectionAction","insertSelection","ReplaceCommandThatSelectsText","AbstractMoveLinesAction","MoveLinesUpAction","MoveLinesDownAction","AbstractSortLinesAction","canRun","SortLinesAscendingAction","SortLinesDescendingAction","DeleteDuplicateLinesAction","endCursorState","linesDeleted","uniqueLines","selectionToReplace","adjustedSelectionStart","finalSelection","TrimTrailingWhitespaceAction","cursors","reason","positionLineNumber","TrimTrailingWhitespaceCommand","DeleteLinesAction","ops","_getLinesToRemove","cursorState","operations","selectionStartColumn","mergedOperations","previousOperation","IndentLinesAction","TypeOperations","cursorConfig","OutdentLinesAction","InsertLineBeforeAction","InsertLineAfterAction","AbstractDeleteAllToBoundaryAction","primaryCursor","rangesToDelete","_getRangesToDelete","effectiveRanges","nextRange","_getEndCursorState","DeleteAllLeftAction","mac","endPrimaryCursor","deletedLines","endCursor","newStartLine","intersectRanges","unshift","deleteFromLine","deleteFromColumn","DeleteAllRightAction","secondary","sel","JoinLinesAction","reducedSelections","lastSelection","previousValue","currentValue","equalsSelection","lineOffset","columnDeltaOffset","selectionEndPositionOffset","trimmedLinesContent","firstNonWhitespaceIdx","insertSpace","lineTextWithoutIndent","deleteSelection","resultSelection","TransposeAction","chars","split","ReplaceCommand","ReplaceCommandThatPreservesSelection","AbstractCaseAction","wordSeparators","getConfiguredWordAtPosition","_modifyText","UpperCaseAction","toLocaleUpperCase","LowerCaseAction","toLocaleLowerCase","BackwardsCompatibleRegExp","_pattern","_flags","_actual","_evaluated","err","TitleCaseAction","titleBoundary","SnakeCaseAction","caseBoundary","singleLetters","isSupported","CONTEXT_ONTYPE_RENAME_INPUT_VISIBLE","DECORATION_CLASS_NAME","LinkedEditingContribution","languageFeatureDebounceService","_localToDispose","_providers","linkedEditingRangeProvider","_enabled","_visibleContextKey","_debounceInformation","_currentDecorations","_languageWordPattern","_currentWordPattern","_ignoreChangeEvent","_rangeUpdateTriggerPromise","_rangeSyncTriggerPromise","_currentRequest","_currentRequestPosition","_currentRequestModelVersion","reinitialize","forceRefresh","isEnabled","clearRanges","onDidChangeLanguageConfiguration","getWordDefinition","rangeUpdateScheduler","Delayer","triggerRangeUpdate","updateRanges","_debounceDuration","rangeSyncScheduler","referenceRange","every","_syncRanges","referenceValue","match","mirrorRange","oldValue","rangeStartColumn","rangeEndColumn","popUndoStop","prevEditOperationType","getPrevEditOperationType","setPrevEditOperationType","force","modelVersionId","request","sw","StopWatch","getLinkedEditingRanges","response","elapsed","wordPattern","foundReferenceRange","splice","isCancellationError","LinkedEditingAction","editorService","ICodeEditorService","openCodeEditor","getActiveCodeEditor","setPosition","reportTelemetry","LinkedEditingCommand","orderedByScore","first","provideLinkedEditingRanges","arrays","editorLinkedEditingBackground","registerColor","dark","Color","light","hc","editorLinkedEditingBackgroundColor","Link","_link","_provider","url","resolveLink","LinksList","tuples","links","newLinks","_union","isDisposable","oldLinks","oldIndex","oldLen","newIndex","newLen","oldLink","newLink","getLinks","lists","provideLinks","resolveCount","linkProvider","LinkDetector","debounceInformation","computeLinks","computeLinksNow","computePromise","activeLinksList","currentOccurrences","activeLinkDecorationId","clickLinkGesture","keyboardEvent","onEditorMouseUp","cleanUpActiveLinkDecoration","updateDecorations","stop","occurence","LinkOccurrence","withKey","occurrence","getLinkOccurrence","changeDecorations","activate","deactivate","openLinkOccurrence","modelUri","parsedUri","fsPath","resources","relativePath","allowContributedOpeners","messageOrError","warn","currentOccurrence","keyCodeIsTriggerKey","general","changeDecorationOptions","_getOptions","assign","executeCmd","nativeLabel","nativeLabelText","appendMarkdown","getHoverMessage","OpenLinkAction","linkDetector","activeLinkForeground","editorActiveLinkForeground"],"sourceRoot":""}