{"version":3,"file":"static/js/monaco-editor-vendor.4743ffc1.b1680d93.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/base/browser/ui/mouseCursor/mouseCursor.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/progressbar/progressbar.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/sash/sash.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollbarArrow.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollbarVisibilityController.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/abstractScrollbar.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollbarState.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/horizontalScrollbar.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/verticalScrollbar.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/scrollbar/scrollableElement.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/splitview/splitview.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/table/tableWidget.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/abstractTree.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/asyncDataTree.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/dataTree.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/indexTreeModel.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/compressedObjectTreeModel.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/objectTree.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/objectTreeModel.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/tree/tree.js","../node_modules/monaco-editor/esm/vs/base/browser/ui/widget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport './mouseCursor.css';\nexport const MOUSE_CURSOR_TEXT_CSS_CLASS_NAME = `monaco-mouse-cursor-text`;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { show } from '../../dom.js';\nimport { RunOnceScheduler } from '../../../common/async.js';\nimport { Color } from '../../../common/color.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nimport { mixin } from '../../../common/objects.js';\nimport './progressbar.css';\nconst CSS_DONE = 'done';\nconst CSS_ACTIVE = 'active';\nconst CSS_INFINITE = 'infinite';\nconst CSS_INFINITE_LONG_RUNNING = 'infinite-long-running';\nconst CSS_DISCRETE = 'discrete';\nconst defaultOpts = {\n    progressBarBackground: Color.fromHex('#0E70C0')\n};\n/**\n * A progress bar with support for infinite or discrete progress.\n */\nexport class ProgressBar extends Disposable {\n    constructor(container, options) {\n        super();\n        this.options = options || Object.create(null);\n        mixin(this.options, defaultOpts, false);\n        this.workedVal = 0;\n        this.progressBarBackground = this.options.progressBarBackground;\n        this.showDelayedScheduler = this._register(new RunOnceScheduler(() => show(this.element), 0));\n        this.longRunningScheduler = this._register(new RunOnceScheduler(() => this.infiniteLongRunning(), ProgressBar.LONG_RUNNING_INFINITE_THRESHOLD));\n        this.create(container);\n    }\n    create(container) {\n        this.element = document.createElement('div');\n        this.element.classList.add('monaco-progress-container');\n        this.element.setAttribute('role', 'progressbar');\n        this.element.setAttribute('aria-valuemin', '0');\n        container.appendChild(this.element);\n        this.bit = document.createElement('div');\n        this.bit.classList.add('progress-bit');\n        this.element.appendChild(this.bit);\n        this.applyStyles();\n    }\n    off() {\n        this.bit.style.width = 'inherit';\n        this.bit.style.opacity = '1';\n        this.element.classList.remove(CSS_ACTIVE, CSS_INFINITE, CSS_INFINITE_LONG_RUNNING, CSS_DISCRETE);\n        this.workedVal = 0;\n        this.totalWork = undefined;\n        this.longRunningScheduler.cancel();\n    }\n    /**\n     * Stops the progressbar from showing any progress instantly without fading out.\n     */\n    stop() {\n        return this.doDone(false);\n    }\n    doDone(delayed) {\n        this.element.classList.add(CSS_DONE);\n        // discrete: let it grow to 100% width and hide afterwards\n        if (!this.element.classList.contains(CSS_INFINITE)) {\n            this.bit.style.width = 'inherit';\n            if (delayed) {\n                setTimeout(() => this.off(), 200);\n            }\n            else {\n                this.off();\n            }\n        }\n        // infinite: let it fade out and hide afterwards\n        else {\n            this.bit.style.opacity = '0';\n            if (delayed) {\n                setTimeout(() => this.off(), 200);\n            }\n            else {\n                this.off();\n            }\n        }\n        return this;\n    }\n    /**\n     * Use this mode to indicate progress that has no total number of work units.\n     */\n    infinite() {\n        this.bit.style.width = '2%';\n        this.bit.style.opacity = '1';\n        this.element.classList.remove(CSS_DISCRETE, CSS_DONE, CSS_INFINITE_LONG_RUNNING);\n        this.element.classList.add(CSS_ACTIVE, CSS_INFINITE);\n        this.longRunningScheduler.schedule();\n        return this;\n    }\n    infiniteLongRunning() {\n        this.element.classList.add(CSS_INFINITE_LONG_RUNNING);\n    }\n    getContainer() {\n        return this.element;\n    }\n    style(styles) {\n        this.progressBarBackground = styles.progressBarBackground;\n        this.applyStyles();\n    }\n    applyStyles() {\n        if (this.bit) {\n            const background = this.progressBarBackground ? this.progressBarBackground.toString() : '';\n            this.bit.style.backgroundColor = background;\n        }\n    }\n}\n/**\n * After a certain time of showing the progress bar, switch\n * to long-running mode and throttle animations to reduce\n * the pressure on the GPU process.\n *\n * https://github.com/microsoft/vscode/issues/97900\n * https://github.com/microsoft/vscode/issues/138396\n */\nProgressBar.LONG_RUNNING_INFINITE_THRESHOLD = 10000;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { $, append, createStyleSheet, EventHelper, getElementsByTagName } from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { EventType, Gesture } from '../../touch.js';\nimport { Delayer } from '../../../common/async.js';\nimport { memoize } from '../../../common/decorators.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { Disposable, DisposableStore, toDisposable } from '../../../common/lifecycle.js';\nimport { isMacintosh } from '../../../common/platform.js';\nimport './sash.css';\n/**\n * Allow the sashes to be visible at runtime.\n * @remark Use for development purposes only.\n */\nlet DEBUG = false;\nexport var OrthogonalEdge;\n(function (OrthogonalEdge) {\n    OrthogonalEdge[\"North\"] = \"north\";\n    OrthogonalEdge[\"South\"] = \"south\";\n    OrthogonalEdge[\"East\"] = \"east\";\n    OrthogonalEdge[\"West\"] = \"west\";\n})(OrthogonalEdge || (OrthogonalEdge = {}));\nlet globalSize = 4;\nconst onDidChangeGlobalSize = new Emitter();\nlet globalHoverDelay = 300;\nconst onDidChangeHoverDelay = new Emitter();\nclass MouseEventFactory {\n    constructor() {\n        this.disposables = new DisposableStore();\n    }\n    get onPointerMove() {\n        return this.disposables.add(new DomEmitter(window, 'mousemove')).event;\n    }\n    get onPointerUp() {\n        return this.disposables.add(new DomEmitter(window, 'mouseup')).event;\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\n__decorate([\n    memoize\n], MouseEventFactory.prototype, \"onPointerMove\", null);\n__decorate([\n    memoize\n], MouseEventFactory.prototype, \"onPointerUp\", null);\nclass GestureEventFactory {\n    constructor(el) {\n        this.el = el;\n        this.disposables = new DisposableStore();\n    }\n    get onPointerMove() {\n        return this.disposables.add(new DomEmitter(this.el, EventType.Change)).event;\n    }\n    get onPointerUp() {\n        return this.disposables.add(new DomEmitter(this.el, EventType.End)).event;\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\n__decorate([\n    memoize\n], GestureEventFactory.prototype, \"onPointerMove\", null);\n__decorate([\n    memoize\n], GestureEventFactory.prototype, \"onPointerUp\", null);\nclass OrthogonalPointerEventFactory {\n    constructor(factory) {\n        this.factory = factory;\n    }\n    get onPointerMove() {\n        return this.factory.onPointerMove;\n    }\n    get onPointerUp() {\n        return this.factory.onPointerUp;\n    }\n    dispose() {\n        // noop\n    }\n}\n__decorate([\n    memoize\n], OrthogonalPointerEventFactory.prototype, \"onPointerMove\", null);\n__decorate([\n    memoize\n], OrthogonalPointerEventFactory.prototype, \"onPointerUp\", null);\nconst PointerEventsDisabledCssClass = 'pointer-events-disabled';\n/**\n * The {@link Sash} is the UI component which allows the user to resize other\n * components. It's usually an invisible horizontal or vertical line which, when\n * hovered, becomes highlighted and can be dragged along the perpendicular dimension\n * to its direction.\n *\n * Features:\n * - Touch event handling\n * - Corner sash support\n * - Hover with different mouse cursor support\n * - Configurable hover size\n * - Linked sash support, for 2x2 corner sashes\n */\nexport class Sash extends Disposable {\n    constructor(container, layoutProvider, options) {\n        super();\n        this.hoverDelay = globalHoverDelay;\n        this.hoverDelayer = this._register(new Delayer(this.hoverDelay));\n        this._state = 3 /* Enabled */;\n        this.onDidEnablementChange = this._register(new Emitter());\n        this._onDidStart = this._register(new Emitter());\n        this._onDidChange = this._register(new Emitter());\n        this._onDidReset = this._register(new Emitter());\n        this._onDidEnd = this._register(new Emitter());\n        this.orthogonalStartSashDisposables = this._register(new DisposableStore());\n        this.orthogonalStartDragHandleDisposables = this._register(new DisposableStore());\n        this.orthogonalEndSashDisposables = this._register(new DisposableStore());\n        this.orthogonalEndDragHandleDisposables = this._register(new DisposableStore());\n        /**\n         * An event which fires whenever the user starts dragging this sash.\n         */\n        this.onDidStart = this._onDidStart.event;\n        /**\n         * An event which fires whenever the user moves the mouse while\n         * dragging this sash.\n         */\n        this.onDidChange = this._onDidChange.event;\n        /**\n         * An event which fires whenever the user double clicks this sash.\n         */\n        this.onDidReset = this._onDidReset.event;\n        /**\n         * An event which fires whenever the user stops dragging this sash.\n         */\n        this.onDidEnd = this._onDidEnd.event;\n        /**\n         * A linked sash will be forwarded the same user interactions and events\n         * so it moves exactly the same way as this sash.\n         *\n         * Useful in 2x2 grids. Not meant for widespread usage.\n         */\n        this.linkedSash = undefined;\n        this.el = append(container, $('.monaco-sash'));\n        if (options.orthogonalEdge) {\n            this.el.classList.add(`orthogonal-edge-${options.orthogonalEdge}`);\n        }\n        if (isMacintosh) {\n            this.el.classList.add('mac');\n        }\n        const onMouseDown = this._register(new DomEmitter(this.el, 'mousedown')).event;\n        this._register(onMouseDown(e => this.onPointerStart(e, new MouseEventFactory()), this));\n        const onMouseDoubleClick = this._register(new DomEmitter(this.el, 'dblclick')).event;\n        this._register(onMouseDoubleClick(this.onPointerDoublePress, this));\n        const onMouseEnter = this._register(new DomEmitter(this.el, 'mouseenter')).event;\n        this._register(onMouseEnter(() => Sash.onMouseEnter(this)));\n        const onMouseLeave = this._register(new DomEmitter(this.el, 'mouseleave')).event;\n        this._register(onMouseLeave(() => Sash.onMouseLeave(this)));\n        this._register(Gesture.addTarget(this.el));\n        const onTouchStart = Event.map(this._register(new DomEmitter(this.el, EventType.Start)).event, e => { var _a; return (Object.assign(Object.assign({}, e), { target: (_a = e.initialTarget) !== null && _a !== void 0 ? _a : null })); });\n        this._register(onTouchStart(e => this.onPointerStart(e, new GestureEventFactory(this.el)), this));\n        const onTap = this._register(new DomEmitter(this.el, EventType.Tap)).event;\n        const onDoubleTap = Event.map(Event.filter(Event.debounce(onTap, (res, event) => { var _a; return ({ event, count: ((_a = res === null || res === void 0 ? void 0 : res.count) !== null && _a !== void 0 ? _a : 0) + 1 }); }, 250), ({ count }) => count === 2), ({ event }) => { var _a; return (Object.assign(Object.assign({}, event), { target: (_a = event.initialTarget) !== null && _a !== void 0 ? _a : null })); });\n        this._register(onDoubleTap(this.onPointerDoublePress, this));\n        if (typeof options.size === 'number') {\n            this.size = options.size;\n            if (options.orientation === 0 /* VERTICAL */) {\n                this.el.style.width = `${this.size}px`;\n            }\n            else {\n                this.el.style.height = `${this.size}px`;\n            }\n        }\n        else {\n            this.size = globalSize;\n            this._register(onDidChangeGlobalSize.event(size => {\n                this.size = size;\n                this.layout();\n            }));\n        }\n        this._register(onDidChangeHoverDelay.event(delay => this.hoverDelay = delay));\n        this.layoutProvider = layoutProvider;\n        this.orthogonalStartSash = options.orthogonalStartSash;\n        this.orthogonalEndSash = options.orthogonalEndSash;\n        this.orientation = options.orientation || 0 /* VERTICAL */;\n        if (this.orientation === 1 /* HORIZONTAL */) {\n            this.el.classList.add('horizontal');\n            this.el.classList.remove('vertical');\n        }\n        else {\n            this.el.classList.remove('horizontal');\n            this.el.classList.add('vertical');\n        }\n        this.el.classList.toggle('debug', DEBUG);\n        this.layout();\n    }\n    get state() { return this._state; }\n    get orthogonalStartSash() { return this._orthogonalStartSash; }\n    get orthogonalEndSash() { return this._orthogonalEndSash; }\n    /**\n     * The state of a sash defines whether it can be interacted with by the user\n     * as well as what mouse cursor to use, when hovered.\n     */\n    set state(state) {\n        if (this._state === state) {\n            return;\n        }\n        this.el.classList.toggle('disabled', state === 0 /* Disabled */);\n        this.el.classList.toggle('minimum', state === 1 /* AtMinimum */);\n        this.el.classList.toggle('maximum', state === 2 /* AtMaximum */);\n        this._state = state;\n        this.onDidEnablementChange.fire(state);\n    }\n    /**\n     * A reference to another sash, perpendicular to this one, which\n     * aligns at the start of this one. A corner sash will be created\n     * automatically at that location.\n     *\n     * The start of a horizontal sash is its left-most position.\n     * The start of a vertical sash is its top-most position.\n     */\n    set orthogonalStartSash(sash) {\n        this.orthogonalStartDragHandleDisposables.clear();\n        this.orthogonalStartSashDisposables.clear();\n        if (sash) {\n            const onChange = (state) => {\n                this.orthogonalStartDragHandleDisposables.clear();\n                if (state !== 0 /* Disabled */) {\n                    this._orthogonalStartDragHandle = append(this.el, $('.orthogonal-drag-handle.start'));\n                    this.orthogonalStartDragHandleDisposables.add(toDisposable(() => this._orthogonalStartDragHandle.remove()));\n                    this.orthogonalStartDragHandleDisposables.add(new DomEmitter(this._orthogonalStartDragHandle, 'mouseenter')).event(() => Sash.onMouseEnter(sash), undefined, this.orthogonalStartDragHandleDisposables);\n                    this.orthogonalStartDragHandleDisposables.add(new DomEmitter(this._orthogonalStartDragHandle, 'mouseleave')).event(() => Sash.onMouseLeave(sash), undefined, this.orthogonalStartDragHandleDisposables);\n                }\n            };\n            this.orthogonalStartSashDisposables.add(sash.onDidEnablementChange.event(onChange, this));\n            onChange(sash.state);\n        }\n        this._orthogonalStartSash = sash;\n    }\n    /**\n     * A reference to another sash, perpendicular to this one, which\n     * aligns at the end of this one. A corner sash will be created\n     * automatically at that location.\n     *\n     * The end of a horizontal sash is its right-most position.\n     * The end of a vertical sash is its bottom-most position.\n     */\n    set orthogonalEndSash(sash) {\n        this.orthogonalEndDragHandleDisposables.clear();\n        this.orthogonalEndSashDisposables.clear();\n        if (sash) {\n            const onChange = (state) => {\n                this.orthogonalEndDragHandleDisposables.clear();\n                if (state !== 0 /* Disabled */) {\n                    this._orthogonalEndDragHandle = append(this.el, $('.orthogonal-drag-handle.end'));\n                    this.orthogonalEndDragHandleDisposables.add(toDisposable(() => this._orthogonalEndDragHandle.remove()));\n                    this.orthogonalEndDragHandleDisposables.add(new DomEmitter(this._orthogonalEndDragHandle, 'mouseenter')).event(() => Sash.onMouseEnter(sash), undefined, this.orthogonalEndDragHandleDisposables);\n                    this.orthogonalEndDragHandleDisposables.add(new DomEmitter(this._orthogonalEndDragHandle, 'mouseleave')).event(() => Sash.onMouseLeave(sash), undefined, this.orthogonalEndDragHandleDisposables);\n                }\n            };\n            this.orthogonalEndSashDisposables.add(sash.onDidEnablementChange.event(onChange, this));\n            onChange(sash.state);\n        }\n        this._orthogonalEndSash = sash;\n    }\n    onPointerStart(event, pointerEventFactory) {\n        EventHelper.stop(event);\n        let isMultisashResize = false;\n        if (!event.__orthogonalSashEvent) {\n            const orthogonalSash = this.getOrthogonalSash(event);\n            if (orthogonalSash) {\n                isMultisashResize = true;\n                event.__orthogonalSashEvent = true;\n                orthogonalSash.onPointerStart(event, new OrthogonalPointerEventFactory(pointerEventFactory));\n            }\n        }\n        if (this.linkedSash && !event.__linkedSashEvent) {\n            event.__linkedSashEvent = true;\n            this.linkedSash.onPointerStart(event, new OrthogonalPointerEventFactory(pointerEventFactory));\n        }\n        if (!this.state) {\n            return;\n        }\n        const iframes = getElementsByTagName('iframe');\n        for (const iframe of iframes) {\n            iframe.classList.add(PointerEventsDisabledCssClass); // disable mouse events on iframes as long as we drag the sash\n        }\n        const startX = event.pageX;\n        const startY = event.pageY;\n        const altKey = event.altKey;\n        const startEvent = { startX, currentX: startX, startY, currentY: startY, altKey };\n        this.el.classList.add('active');\n        this._onDidStart.fire(startEvent);\n        // fix https://github.com/microsoft/vscode/issues/21675\n        const style = createStyleSheet(this.el);\n        const updateStyle = () => {\n            let cursor = '';\n            if (isMultisashResize) {\n                cursor = 'all-scroll';\n            }\n            else if (this.orientation === 1 /* HORIZONTAL */) {\n                if (this.state === 1 /* AtMinimum */) {\n                    cursor = 's-resize';\n                }\n                else if (this.state === 2 /* AtMaximum */) {\n                    cursor = 'n-resize';\n                }\n                else {\n                    cursor = isMacintosh ? 'row-resize' : 'ns-resize';\n                }\n            }\n            else {\n                if (this.state === 1 /* AtMinimum */) {\n                    cursor = 'e-resize';\n                }\n                else if (this.state === 2 /* AtMaximum */) {\n                    cursor = 'w-resize';\n                }\n                else {\n                    cursor = isMacintosh ? 'col-resize' : 'ew-resize';\n                }\n            }\n            style.textContent = `* { cursor: ${cursor} !important; }`;\n        };\n        const disposables = new DisposableStore();\n        updateStyle();\n        if (!isMultisashResize) {\n            this.onDidEnablementChange.event(updateStyle, null, disposables);\n        }\n        const onPointerMove = (e) => {\n            EventHelper.stop(e, false);\n            const event = { startX, currentX: e.pageX, startY, currentY: e.pageY, altKey };\n            this._onDidChange.fire(event);\n        };\n        const onPointerUp = (e) => {\n            EventHelper.stop(e, false);\n            this.el.removeChild(style);\n            this.el.classList.remove('active');\n            this._onDidEnd.fire();\n            disposables.dispose();\n            for (const iframe of iframes) {\n                iframe.classList.remove(PointerEventsDisabledCssClass);\n            }\n        };\n        pointerEventFactory.onPointerMove(onPointerMove, null, disposables);\n        pointerEventFactory.onPointerUp(onPointerUp, null, disposables);\n        disposables.add(pointerEventFactory);\n    }\n    onPointerDoublePress(e) {\n        const orthogonalSash = this.getOrthogonalSash(e);\n        if (orthogonalSash) {\n            orthogonalSash._onDidReset.fire();\n        }\n        if (this.linkedSash) {\n            this.linkedSash._onDidReset.fire();\n        }\n        this._onDidReset.fire();\n    }\n    static onMouseEnter(sash, fromLinkedSash = false) {\n        if (sash.el.classList.contains('active')) {\n            sash.hoverDelayer.cancel();\n            sash.el.classList.add('hover');\n        }\n        else {\n            sash.hoverDelayer.trigger(() => sash.el.classList.add('hover'), sash.hoverDelay).then(undefined, () => { });\n        }\n        if (!fromLinkedSash && sash.linkedSash) {\n            Sash.onMouseEnter(sash.linkedSash, true);\n        }\n    }\n    static onMouseLeave(sash, fromLinkedSash = false) {\n        sash.hoverDelayer.cancel();\n        sash.el.classList.remove('hover');\n        if (!fromLinkedSash && sash.linkedSash) {\n            Sash.onMouseLeave(sash.linkedSash, true);\n        }\n    }\n    /**\n     * Forcefully stop any user interactions with this sash.\n     * Useful when hiding a parent component, while the user is still\n     * interacting with the sash.\n     */\n    clearSashHoverState() {\n        Sash.onMouseLeave(this);\n    }\n    /**\n     * Layout the sash. The sash will size and position itself\n     * based on its provided {@link ISashLayoutProvider layout provider}.\n     */\n    layout() {\n        if (this.orientation === 0 /* VERTICAL */) {\n            const verticalProvider = this.layoutProvider;\n            this.el.style.left = verticalProvider.getVerticalSashLeft(this) - (this.size / 2) + 'px';\n            if (verticalProvider.getVerticalSashTop) {\n                this.el.style.top = verticalProvider.getVerticalSashTop(this) + 'px';\n            }\n            if (verticalProvider.getVerticalSashHeight) {\n                this.el.style.height = verticalProvider.getVerticalSashHeight(this) + 'px';\n            }\n        }\n        else {\n            const horizontalProvider = this.layoutProvider;\n            this.el.style.top = horizontalProvider.getHorizontalSashTop(this) - (this.size / 2) + 'px';\n            if (horizontalProvider.getHorizontalSashLeft) {\n                this.el.style.left = horizontalProvider.getHorizontalSashLeft(this) + 'px';\n            }\n            if (horizontalProvider.getHorizontalSashWidth) {\n                this.el.style.width = horizontalProvider.getHorizontalSashWidth(this) + 'px';\n            }\n        }\n    }\n    getOrthogonalSash(e) {\n        if (!e.target || !(e.target instanceof HTMLElement)) {\n            return undefined;\n        }\n        if (e.target.classList.contains('orthogonal-drag-handle')) {\n            return e.target.classList.contains('start') ? this.orthogonalStartSash : this.orthogonalEndSash;\n        }\n        return undefined;\n    }\n    dispose() {\n        super.dispose();\n        this.el.remove();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { GlobalMouseMoveMonitor, standardMouseMoveMerger } from '../../globalMouseMoveMonitor.js';\nimport { Widget } from '../widget.js';\nimport { IntervalTimer, TimeoutTimer } from '../../../common/async.js';\n/**\n * The arrow image size.\n */\nexport const ARROW_IMG_SIZE = 11;\nexport class ScrollbarArrow extends Widget {\n    constructor(opts) {\n        super();\n        this._onActivate = opts.onActivate;\n        this.bgDomNode = document.createElement('div');\n        this.bgDomNode.className = 'arrow-background';\n        this.bgDomNode.style.position = 'absolute';\n        this.bgDomNode.style.width = opts.bgWidth + 'px';\n        this.bgDomNode.style.height = opts.bgHeight + 'px';\n        if (typeof opts.top !== 'undefined') {\n            this.bgDomNode.style.top = '0px';\n        }\n        if (typeof opts.left !== 'undefined') {\n            this.bgDomNode.style.left = '0px';\n        }\n        if (typeof opts.bottom !== 'undefined') {\n            this.bgDomNode.style.bottom = '0px';\n        }\n        if (typeof opts.right !== 'undefined') {\n            this.bgDomNode.style.right = '0px';\n        }\n        this.domNode = document.createElement('div');\n        this.domNode.className = opts.className;\n        this.domNode.classList.add(...opts.icon.classNamesArray);\n        this.domNode.style.position = 'absolute';\n        this.domNode.style.width = ARROW_IMG_SIZE + 'px';\n        this.domNode.style.height = ARROW_IMG_SIZE + 'px';\n        if (typeof opts.top !== 'undefined') {\n            this.domNode.style.top = opts.top + 'px';\n        }\n        if (typeof opts.left !== 'undefined') {\n            this.domNode.style.left = opts.left + 'px';\n        }\n        if (typeof opts.bottom !== 'undefined') {\n            this.domNode.style.bottom = opts.bottom + 'px';\n        }\n        if (typeof opts.right !== 'undefined') {\n            this.domNode.style.right = opts.right + 'px';\n        }\n        this._mouseMoveMonitor = this._register(new GlobalMouseMoveMonitor());\n        this.onmousedown(this.bgDomNode, (e) => this._arrowMouseDown(e));\n        this.onmousedown(this.domNode, (e) => this._arrowMouseDown(e));\n        this._mousedownRepeatTimer = this._register(new IntervalTimer());\n        this._mousedownScheduleRepeatTimer = this._register(new TimeoutTimer());\n    }\n    _arrowMouseDown(e) {\n        const scheduleRepeater = () => {\n            this._mousedownRepeatTimer.cancelAndSet(() => this._onActivate(), 1000 / 24);\n        };\n        this._onActivate();\n        this._mousedownRepeatTimer.cancel();\n        this._mousedownScheduleRepeatTimer.cancelAndSet(scheduleRepeater, 200);\n        this._mouseMoveMonitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, (mouseMoveData) => {\n            /* Intentional empty */\n        }, () => {\n            this._mousedownRepeatTimer.cancel();\n            this._mousedownScheduleRepeatTimer.cancel();\n        });\n        e.preventDefault();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { TimeoutTimer } from '../../../common/async.js';\nimport { Disposable } from '../../../common/lifecycle.js';\nexport class ScrollbarVisibilityController extends Disposable {\n    constructor(visibility, visibleClassName, invisibleClassName) {\n        super();\n        this._visibility = visibility;\n        this._visibleClassName = visibleClassName;\n        this._invisibleClassName = invisibleClassName;\n        this._domNode = null;\n        this._isVisible = false;\n        this._isNeeded = false;\n        this._rawShouldBeVisible = false;\n        this._shouldBeVisible = false;\n        this._revealTimer = this._register(new TimeoutTimer());\n    }\n    setVisibility(visibility) {\n        if (this._visibility !== visibility) {\n            this._visibility = visibility;\n            this._updateShouldBeVisible();\n        }\n    }\n    // ----------------- Hide / Reveal\n    setShouldBeVisible(rawShouldBeVisible) {\n        this._rawShouldBeVisible = rawShouldBeVisible;\n        this._updateShouldBeVisible();\n    }\n    _applyVisibilitySetting() {\n        if (this._visibility === 2 /* Hidden */) {\n            return false;\n        }\n        if (this._visibility === 3 /* Visible */) {\n            return true;\n        }\n        return this._rawShouldBeVisible;\n    }\n    _updateShouldBeVisible() {\n        const shouldBeVisible = this._applyVisibilitySetting();\n        if (this._shouldBeVisible !== shouldBeVisible) {\n            this._shouldBeVisible = shouldBeVisible;\n            this.ensureVisibility();\n        }\n    }\n    setIsNeeded(isNeeded) {\n        if (this._isNeeded !== isNeeded) {\n            this._isNeeded = isNeeded;\n            this.ensureVisibility();\n        }\n    }\n    setDomNode(domNode) {\n        this._domNode = domNode;\n        this._domNode.setClassName(this._invisibleClassName);\n        // Now that the flags & the dom node are in a consistent state, ensure the Hidden/Visible configuration\n        this.setShouldBeVisible(false);\n    }\n    ensureVisibility() {\n        if (!this._isNeeded) {\n            // Nothing to be rendered\n            this._hide(false);\n            return;\n        }\n        if (this._shouldBeVisible) {\n            this._reveal();\n        }\n        else {\n            this._hide(true);\n        }\n    }\n    _reveal() {\n        if (this._isVisible) {\n            return;\n        }\n        this._isVisible = true;\n        // The CSS animation doesn't play otherwise\n        this._revealTimer.setIfNotSet(() => {\n            if (this._domNode) {\n                this._domNode.setClassName(this._visibleClassName);\n            }\n        }, 0);\n    }\n    _hide(withFadeAway) {\n        this._revealTimer.cancel();\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        if (this._domNode) {\n            this._domNode.setClassName(this._invisibleClassName + (withFadeAway ? ' fade' : ''));\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../dom.js';\nimport { createFastDomNode } from '../../fastDomNode.js';\nimport { GlobalMouseMoveMonitor, standardMouseMoveMerger } from '../../globalMouseMoveMonitor.js';\nimport { ScrollbarArrow } from './scrollbarArrow.js';\nimport { ScrollbarVisibilityController } from './scrollbarVisibilityController.js';\nimport { Widget } from '../widget.js';\nimport * as platform from '../../../common/platform.js';\n/**\n * The orthogonal distance to the slider at which dragging \"resets\". This implements \"snapping\"\n */\nconst MOUSE_DRAG_RESET_DISTANCE = 140;\nexport class AbstractScrollbar extends Widget {\n    constructor(opts) {\n        super();\n        this._lazyRender = opts.lazyRender;\n        this._host = opts.host;\n        this._scrollable = opts.scrollable;\n        this._scrollByPage = opts.scrollByPage;\n        this._scrollbarState = opts.scrollbarState;\n        this._visibilityController = this._register(new ScrollbarVisibilityController(opts.visibility, 'visible scrollbar ' + opts.extraScrollbarClassName, 'invisible scrollbar ' + opts.extraScrollbarClassName));\n        this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n        this._mouseMoveMonitor = this._register(new GlobalMouseMoveMonitor());\n        this._shouldRender = true;\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setAttribute('role', 'presentation');\n        this.domNode.setAttribute('aria-hidden', 'true');\n        this._visibilityController.setDomNode(this.domNode);\n        this.domNode.setPosition('absolute');\n        this.onmousedown(this.domNode.domNode, (e) => this._domNodeMouseDown(e));\n    }\n    // ----------------- creation\n    /**\n     * Creates the dom node for an arrow & adds it to the container\n     */\n    _createArrow(opts) {\n        const arrow = this._register(new ScrollbarArrow(opts));\n        this.domNode.domNode.appendChild(arrow.bgDomNode);\n        this.domNode.domNode.appendChild(arrow.domNode);\n    }\n    /**\n     * Creates the slider dom node, adds it to the container & hooks up the events\n     */\n    _createSlider(top, left, width, height) {\n        this.slider = createFastDomNode(document.createElement('div'));\n        this.slider.setClassName('slider');\n        this.slider.setPosition('absolute');\n        this.slider.setTop(top);\n        this.slider.setLeft(left);\n        if (typeof width === 'number') {\n            this.slider.setWidth(width);\n        }\n        if (typeof height === 'number') {\n            this.slider.setHeight(height);\n        }\n        this.slider.setLayerHinting(true);\n        this.slider.setContain('strict');\n        this.domNode.domNode.appendChild(this.slider.domNode);\n        this.onmousedown(this.slider.domNode, (e) => {\n            if (e.leftButton) {\n                e.preventDefault();\n                this._sliderMouseDown(e, () => { });\n            }\n        });\n        this.onclick(this.slider.domNode, e => {\n            if (e.leftButton) {\n                e.stopPropagation();\n            }\n        });\n    }\n    // ----------------- Update state\n    _onElementSize(visibleSize) {\n        if (this._scrollbarState.setVisibleSize(visibleSize)) {\n            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n            this._shouldRender = true;\n            if (!this._lazyRender) {\n                this.render();\n            }\n        }\n        return this._shouldRender;\n    }\n    _onElementScrollSize(elementScrollSize) {\n        if (this._scrollbarState.setScrollSize(elementScrollSize)) {\n            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n            this._shouldRender = true;\n            if (!this._lazyRender) {\n                this.render();\n            }\n        }\n        return this._shouldRender;\n    }\n    _onElementScrollPosition(elementScrollPosition) {\n        if (this._scrollbarState.setScrollPosition(elementScrollPosition)) {\n            this._visibilityController.setIsNeeded(this._scrollbarState.isNeeded());\n            this._shouldRender = true;\n            if (!this._lazyRender) {\n                this.render();\n            }\n        }\n        return this._shouldRender;\n    }\n    // ----------------- rendering\n    beginReveal() {\n        this._visibilityController.setShouldBeVisible(true);\n    }\n    beginHide() {\n        this._visibilityController.setShouldBeVisible(false);\n    }\n    render() {\n        if (!this._shouldRender) {\n            return;\n        }\n        this._shouldRender = false;\n        this._renderDomNode(this._scrollbarState.getRectangleLargeSize(), this._scrollbarState.getRectangleSmallSize());\n        this._updateSlider(this._scrollbarState.getSliderSize(), this._scrollbarState.getArrowSize() + this._scrollbarState.getSliderPosition());\n    }\n    // ----------------- DOM events\n    _domNodeMouseDown(e) {\n        if (e.target !== this.domNode.domNode) {\n            return;\n        }\n        this._onMouseDown(e);\n    }\n    delegateMouseDown(e) {\n        const domTop = this.domNode.domNode.getClientRects()[0].top;\n        const sliderStart = domTop + this._scrollbarState.getSliderPosition();\n        const sliderStop = domTop + this._scrollbarState.getSliderPosition() + this._scrollbarState.getSliderSize();\n        const mousePos = this._sliderMousePosition(e);\n        if (sliderStart <= mousePos && mousePos <= sliderStop) {\n            // Act as if it was a mouse down on the slider\n            if (e.leftButton) {\n                e.preventDefault();\n                this._sliderMouseDown(e, () => { });\n            }\n        }\n        else {\n            // Act as if it was a mouse down on the scrollbar\n            this._onMouseDown(e);\n        }\n    }\n    _onMouseDown(e) {\n        let offsetX;\n        let offsetY;\n        if (e.target === this.domNode.domNode && typeof e.browserEvent.offsetX === 'number' && typeof e.browserEvent.offsetY === 'number') {\n            offsetX = e.browserEvent.offsetX;\n            offsetY = e.browserEvent.offsetY;\n        }\n        else {\n            const domNodePosition = dom.getDomNodePagePosition(this.domNode.domNode);\n            offsetX = e.posx - domNodePosition.left;\n            offsetY = e.posy - domNodePosition.top;\n        }\n        const offset = this._mouseDownRelativePosition(offsetX, offsetY);\n        this._setDesiredScrollPositionNow(this._scrollByPage\n            ? this._scrollbarState.getDesiredScrollPositionFromOffsetPaged(offset)\n            : this._scrollbarState.getDesiredScrollPositionFromOffset(offset));\n        if (e.leftButton) {\n            e.preventDefault();\n            this._sliderMouseDown(e, () => { });\n        }\n    }\n    _sliderMouseDown(e, onDragFinished) {\n        const initialMousePosition = this._sliderMousePosition(e);\n        const initialMouseOrthogonalPosition = this._sliderOrthogonalMousePosition(e);\n        const initialScrollbarState = this._scrollbarState.clone();\n        this.slider.toggleClassName('active', true);\n        this._mouseMoveMonitor.startMonitoring(e.target, e.buttons, standardMouseMoveMerger, (mouseMoveData) => {\n            const mouseOrthogonalPosition = this._sliderOrthogonalMousePosition(mouseMoveData);\n            const mouseOrthogonalDelta = Math.abs(mouseOrthogonalPosition - initialMouseOrthogonalPosition);\n            if (platform.isWindows && mouseOrthogonalDelta > MOUSE_DRAG_RESET_DISTANCE) {\n                // The mouse has wondered away from the scrollbar => reset dragging\n                this._setDesiredScrollPositionNow(initialScrollbarState.getScrollPosition());\n                return;\n            }\n            const mousePosition = this._sliderMousePosition(mouseMoveData);\n            const mouseDelta = mousePosition - initialMousePosition;\n            this._setDesiredScrollPositionNow(initialScrollbarState.getDesiredScrollPositionFromDelta(mouseDelta));\n        }, () => {\n            this.slider.toggleClassName('active', false);\n            this._host.onDragEnd();\n            onDragFinished();\n        });\n        this._host.onDragStart();\n    }\n    _setDesiredScrollPositionNow(_desiredScrollPosition) {\n        const desiredScrollPosition = {};\n        this.writeScrollPosition(desiredScrollPosition, _desiredScrollPosition);\n        this._scrollable.setScrollPositionNow(desiredScrollPosition);\n    }\n    updateScrollbarSize(scrollbarSize) {\n        this._updateScrollbarSize(scrollbarSize);\n        this._scrollbarState.setScrollbarSize(scrollbarSize);\n        this._shouldRender = true;\n        if (!this._lazyRender) {\n            this.render();\n        }\n    }\n    isNeeded() {\n        return this._scrollbarState.isNeeded();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\n/**\n * The minimal size of the slider (such that it can still be clickable) -- it is artificially enlarged.\n */\nconst MINIMUM_SLIDER_SIZE = 20;\nexport class ScrollbarState {\n    constructor(arrowSize, scrollbarSize, oppositeScrollbarSize, visibleSize, scrollSize, scrollPosition) {\n        this._scrollbarSize = Math.round(scrollbarSize);\n        this._oppositeScrollbarSize = Math.round(oppositeScrollbarSize);\n        this._arrowSize = Math.round(arrowSize);\n        this._visibleSize = visibleSize;\n        this._scrollSize = scrollSize;\n        this._scrollPosition = scrollPosition;\n        this._computedAvailableSize = 0;\n        this._computedIsNeeded = false;\n        this._computedSliderSize = 0;\n        this._computedSliderRatio = 0;\n        this._computedSliderPosition = 0;\n        this._refreshComputedValues();\n    }\n    clone() {\n        return new ScrollbarState(this._arrowSize, this._scrollbarSize, this._oppositeScrollbarSize, this._visibleSize, this._scrollSize, this._scrollPosition);\n    }\n    setVisibleSize(visibleSize) {\n        const iVisibleSize = Math.round(visibleSize);\n        if (this._visibleSize !== iVisibleSize) {\n            this._visibleSize = iVisibleSize;\n            this._refreshComputedValues();\n            return true;\n        }\n        return false;\n    }\n    setScrollSize(scrollSize) {\n        const iScrollSize = Math.round(scrollSize);\n        if (this._scrollSize !== iScrollSize) {\n            this._scrollSize = iScrollSize;\n            this._refreshComputedValues();\n            return true;\n        }\n        return false;\n    }\n    setScrollPosition(scrollPosition) {\n        const iScrollPosition = Math.round(scrollPosition);\n        if (this._scrollPosition !== iScrollPosition) {\n            this._scrollPosition = iScrollPosition;\n            this._refreshComputedValues();\n            return true;\n        }\n        return false;\n    }\n    setScrollbarSize(scrollbarSize) {\n        this._scrollbarSize = Math.round(scrollbarSize);\n    }\n    setOppositeScrollbarSize(oppositeScrollbarSize) {\n        this._oppositeScrollbarSize = Math.round(oppositeScrollbarSize);\n    }\n    static _computeValues(oppositeScrollbarSize, arrowSize, visibleSize, scrollSize, scrollPosition) {\n        const computedAvailableSize = Math.max(0, visibleSize - oppositeScrollbarSize);\n        const computedRepresentableSize = Math.max(0, computedAvailableSize - 2 * arrowSize);\n        const computedIsNeeded = (scrollSize > 0 && scrollSize > visibleSize);\n        if (!computedIsNeeded) {\n            // There is no need for a slider\n            return {\n                computedAvailableSize: Math.round(computedAvailableSize),\n                computedIsNeeded: computedIsNeeded,\n                computedSliderSize: Math.round(computedRepresentableSize),\n                computedSliderRatio: 0,\n                computedSliderPosition: 0,\n            };\n        }\n        // We must artificially increase the size of the slider if needed, since the slider would be too small to grab with the mouse otherwise\n        const computedSliderSize = Math.round(Math.max(MINIMUM_SLIDER_SIZE, Math.floor(visibleSize * computedRepresentableSize / scrollSize)));\n        // The slider can move from 0 to `computedRepresentableSize` - `computedSliderSize`\n        // in the same way `scrollPosition` can move from 0 to `scrollSize` - `visibleSize`.\n        const computedSliderRatio = (computedRepresentableSize - computedSliderSize) / (scrollSize - visibleSize);\n        const computedSliderPosition = (scrollPosition * computedSliderRatio);\n        return {\n            computedAvailableSize: Math.round(computedAvailableSize),\n            computedIsNeeded: computedIsNeeded,\n            computedSliderSize: Math.round(computedSliderSize),\n            computedSliderRatio: computedSliderRatio,\n            computedSliderPosition: Math.round(computedSliderPosition),\n        };\n    }\n    _refreshComputedValues() {\n        const r = ScrollbarState._computeValues(this._oppositeScrollbarSize, this._arrowSize, this._visibleSize, this._scrollSize, this._scrollPosition);\n        this._computedAvailableSize = r.computedAvailableSize;\n        this._computedIsNeeded = r.computedIsNeeded;\n        this._computedSliderSize = r.computedSliderSize;\n        this._computedSliderRatio = r.computedSliderRatio;\n        this._computedSliderPosition = r.computedSliderPosition;\n    }\n    getArrowSize() {\n        return this._arrowSize;\n    }\n    getScrollPosition() {\n        return this._scrollPosition;\n    }\n    getRectangleLargeSize() {\n        return this._computedAvailableSize;\n    }\n    getRectangleSmallSize() {\n        return this._scrollbarSize;\n    }\n    isNeeded() {\n        return this._computedIsNeeded;\n    }\n    getSliderSize() {\n        return this._computedSliderSize;\n    }\n    getSliderPosition() {\n        return this._computedSliderPosition;\n    }\n    /**\n     * Compute a desired `scrollPosition` such that `offset` ends up in the center of the slider.\n     * `offset` is based on the same coordinate system as the `sliderPosition`.\n     */\n    getDesiredScrollPositionFromOffset(offset) {\n        if (!this._computedIsNeeded) {\n            // no need for a slider\n            return 0;\n        }\n        const desiredSliderPosition = offset - this._arrowSize - this._computedSliderSize / 2;\n        return Math.round(desiredSliderPosition / this._computedSliderRatio);\n    }\n    /**\n     * Compute a desired `scrollPosition` from if offset is before or after the slider position.\n     * If offset is before slider, treat as a page up (or left).  If after, page down (or right).\n     * `offset` and `_computedSliderPosition` are based on the same coordinate system.\n     * `_visibleSize` corresponds to a \"page\" of lines in the returned coordinate system.\n     */\n    getDesiredScrollPositionFromOffsetPaged(offset) {\n        if (!this._computedIsNeeded) {\n            // no need for a slider\n            return 0;\n        }\n        const correctedOffset = offset - this._arrowSize; // compensate if has arrows\n        let desiredScrollPosition = this._scrollPosition;\n        if (correctedOffset < this._computedSliderPosition) {\n            desiredScrollPosition -= this._visibleSize; // page up/left\n        }\n        else {\n            desiredScrollPosition += this._visibleSize; // page down/right\n        }\n        return desiredScrollPosition;\n    }\n    /**\n     * Compute a desired `scrollPosition` such that the slider moves by `delta`.\n     */\n    getDesiredScrollPositionFromDelta(delta) {\n        if (!this._computedIsNeeded) {\n            // no need for a slider\n            return 0;\n        }\n        const desiredSliderPosition = this._computedSliderPosition + delta;\n        return Math.round(desiredSliderPosition / this._computedSliderRatio);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { StandardWheelEvent } from '../../mouseEvent.js';\nimport { AbstractScrollbar } from './abstractScrollbar.js';\nimport { ARROW_IMG_SIZE } from './scrollbarArrow.js';\nimport { ScrollbarState } from './scrollbarState.js';\nimport { Codicon } from '../../../common/codicons.js';\nexport class HorizontalScrollbar extends AbstractScrollbar {\n    constructor(scrollable, options, host) {\n        const scrollDimensions = scrollable.getScrollDimensions();\n        const scrollPosition = scrollable.getCurrentScrollPosition();\n        super({\n            lazyRender: options.lazyRender,\n            host: host,\n            scrollbarState: new ScrollbarState((options.horizontalHasArrows ? options.arrowSize : 0), (options.horizontal === 2 /* Hidden */ ? 0 : options.horizontalScrollbarSize), (options.vertical === 2 /* Hidden */ ? 0 : options.verticalScrollbarSize), scrollDimensions.width, scrollDimensions.scrollWidth, scrollPosition.scrollLeft),\n            visibility: options.horizontal,\n            extraScrollbarClassName: 'horizontal',\n            scrollable: scrollable,\n            scrollByPage: options.scrollByPage\n        });\n        if (options.horizontalHasArrows) {\n            const arrowDelta = (options.arrowSize - ARROW_IMG_SIZE) / 2;\n            const scrollbarDelta = (options.horizontalScrollbarSize - ARROW_IMG_SIZE) / 2;\n            this._createArrow({\n                className: 'scra',\n                icon: Codicon.scrollbarButtonLeft,\n                top: scrollbarDelta,\n                left: arrowDelta,\n                bottom: undefined,\n                right: undefined,\n                bgWidth: options.arrowSize,\n                bgHeight: options.horizontalScrollbarSize,\n                onActivate: () => this._host.onMouseWheel(new StandardWheelEvent(null, 1, 0)),\n            });\n            this._createArrow({\n                className: 'scra',\n                icon: Codicon.scrollbarButtonRight,\n                top: scrollbarDelta,\n                left: undefined,\n                bottom: undefined,\n                right: arrowDelta,\n                bgWidth: options.arrowSize,\n                bgHeight: options.horizontalScrollbarSize,\n                onActivate: () => this._host.onMouseWheel(new StandardWheelEvent(null, -1, 0)),\n            });\n        }\n        this._createSlider(Math.floor((options.horizontalScrollbarSize - options.horizontalSliderSize) / 2), 0, undefined, options.horizontalSliderSize);\n    }\n    _updateSlider(sliderSize, sliderPosition) {\n        this.slider.setWidth(sliderSize);\n        this.slider.setLeft(sliderPosition);\n    }\n    _renderDomNode(largeSize, smallSize) {\n        this.domNode.setWidth(largeSize);\n        this.domNode.setHeight(smallSize);\n        this.domNode.setLeft(0);\n        this.domNode.setBottom(0);\n    }\n    onDidScroll(e) {\n        this._shouldRender = this._onElementScrollSize(e.scrollWidth) || this._shouldRender;\n        this._shouldRender = this._onElementScrollPosition(e.scrollLeft) || this._shouldRender;\n        this._shouldRender = this._onElementSize(e.width) || this._shouldRender;\n        return this._shouldRender;\n    }\n    _mouseDownRelativePosition(offsetX, offsetY) {\n        return offsetX;\n    }\n    _sliderMousePosition(e) {\n        return e.posx;\n    }\n    _sliderOrthogonalMousePosition(e) {\n        return e.posy;\n    }\n    _updateScrollbarSize(size) {\n        this.slider.setHeight(size);\n    }\n    writeScrollPosition(target, scrollPosition) {\n        target.scrollLeft = scrollPosition;\n    }\n    updateOptions(options) {\n        this.updateScrollbarSize(options.horizontal === 2 /* Hidden */ ? 0 : options.horizontalScrollbarSize);\n        this._scrollbarState.setOppositeScrollbarSize(options.vertical === 2 /* Hidden */ ? 0 : options.verticalScrollbarSize);\n        this._visibilityController.setVisibility(options.horizontal);\n        this._scrollByPage = options.scrollByPage;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { StandardWheelEvent } from '../../mouseEvent.js';\nimport { AbstractScrollbar } from './abstractScrollbar.js';\nimport { ARROW_IMG_SIZE } from './scrollbarArrow.js';\nimport { ScrollbarState } from './scrollbarState.js';\nimport { Codicon } from '../../../common/codicons.js';\nexport class VerticalScrollbar extends AbstractScrollbar {\n    constructor(scrollable, options, host) {\n        const scrollDimensions = scrollable.getScrollDimensions();\n        const scrollPosition = scrollable.getCurrentScrollPosition();\n        super({\n            lazyRender: options.lazyRender,\n            host: host,\n            scrollbarState: new ScrollbarState((options.verticalHasArrows ? options.arrowSize : 0), (options.vertical === 2 /* Hidden */ ? 0 : options.verticalScrollbarSize), \n            // give priority to vertical scroll bar over horizontal and let it scroll all the way to the bottom\n            0, scrollDimensions.height, scrollDimensions.scrollHeight, scrollPosition.scrollTop),\n            visibility: options.vertical,\n            extraScrollbarClassName: 'vertical',\n            scrollable: scrollable,\n            scrollByPage: options.scrollByPage\n        });\n        if (options.verticalHasArrows) {\n            const arrowDelta = (options.arrowSize - ARROW_IMG_SIZE) / 2;\n            const scrollbarDelta = (options.verticalScrollbarSize - ARROW_IMG_SIZE) / 2;\n            this._createArrow({\n                className: 'scra',\n                icon: Codicon.scrollbarButtonUp,\n                top: arrowDelta,\n                left: scrollbarDelta,\n                bottom: undefined,\n                right: undefined,\n                bgWidth: options.verticalScrollbarSize,\n                bgHeight: options.arrowSize,\n                onActivate: () => this._host.onMouseWheel(new StandardWheelEvent(null, 0, 1)),\n            });\n            this._createArrow({\n                className: 'scra',\n                icon: Codicon.scrollbarButtonDown,\n                top: undefined,\n                left: scrollbarDelta,\n                bottom: arrowDelta,\n                right: undefined,\n                bgWidth: options.verticalScrollbarSize,\n                bgHeight: options.arrowSize,\n                onActivate: () => this._host.onMouseWheel(new StandardWheelEvent(null, 0, -1)),\n            });\n        }\n        this._createSlider(0, Math.floor((options.verticalScrollbarSize - options.verticalSliderSize) / 2), options.verticalSliderSize, undefined);\n    }\n    _updateSlider(sliderSize, sliderPosition) {\n        this.slider.setHeight(sliderSize);\n        this.slider.setTop(sliderPosition);\n    }\n    _renderDomNode(largeSize, smallSize) {\n        this.domNode.setWidth(smallSize);\n        this.domNode.setHeight(largeSize);\n        this.domNode.setRight(0);\n        this.domNode.setTop(0);\n    }\n    onDidScroll(e) {\n        this._shouldRender = this._onElementScrollSize(e.scrollHeight) || this._shouldRender;\n        this._shouldRender = this._onElementScrollPosition(e.scrollTop) || this._shouldRender;\n        this._shouldRender = this._onElementSize(e.height) || this._shouldRender;\n        return this._shouldRender;\n    }\n    _mouseDownRelativePosition(offsetX, offsetY) {\n        return offsetY;\n    }\n    _sliderMousePosition(e) {\n        return e.posy;\n    }\n    _sliderOrthogonalMousePosition(e) {\n        return e.posx;\n    }\n    _updateScrollbarSize(size) {\n        this.slider.setWidth(size);\n    }\n    writeScrollPosition(target, scrollPosition) {\n        target.scrollTop = scrollPosition;\n    }\n    updateOptions(options) {\n        this.updateScrollbarSize(options.vertical === 2 /* Hidden */ ? 0 : options.verticalScrollbarSize);\n        // give priority to vertical scroll bar over horizontal and let it scroll all the way to the bottom\n        this._scrollbarState.setOppositeScrollbarSize(0);\n        this._visibilityController.setVisibility(options.vertical);\n        this._scrollByPage = options.scrollByPage;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { getZoomFactor } from '../../browser.js';\nimport * as dom from '../../dom.js';\nimport { createFastDomNode } from '../../fastDomNode.js';\nimport { StandardWheelEvent } from '../../mouseEvent.js';\nimport { HorizontalScrollbar } from './horizontalScrollbar.js';\nimport { VerticalScrollbar } from './verticalScrollbar.js';\nimport { Widget } from '../widget.js';\nimport { TimeoutTimer } from '../../../common/async.js';\nimport { Emitter } from '../../../common/event.js';\nimport { dispose } from '../../../common/lifecycle.js';\nimport * as platform from '../../../common/platform.js';\nimport { Scrollable } from '../../../common/scrollable.js';\nimport './media/scrollbars.css';\nconst HIDE_TIMEOUT = 500;\nconst SCROLL_WHEEL_SENSITIVITY = 50;\nconst SCROLL_WHEEL_SMOOTH_SCROLL_ENABLED = true;\nclass MouseWheelClassifierItem {\n    constructor(timestamp, deltaX, deltaY) {\n        this.timestamp = timestamp;\n        this.deltaX = deltaX;\n        this.deltaY = deltaY;\n        this.score = 0;\n    }\n}\nexport class MouseWheelClassifier {\n    constructor() {\n        this._capacity = 5;\n        this._memory = [];\n        this._front = -1;\n        this._rear = -1;\n    }\n    isPhysicalMouseWheel() {\n        if (this._front === -1 && this._rear === -1) {\n            // no elements\n            return false;\n        }\n        // 0.5 * last + 0.25 * 2nd last + 0.125 * 3rd last + ...\n        let remainingInfluence = 1;\n        let score = 0;\n        let iteration = 1;\n        let index = this._rear;\n        do {\n            const influence = (index === this._front ? remainingInfluence : Math.pow(2, -iteration));\n            remainingInfluence -= influence;\n            score += this._memory[index].score * influence;\n            if (index === this._front) {\n                break;\n            }\n            index = (this._capacity + index - 1) % this._capacity;\n            iteration++;\n        } while (true);\n        return (score <= 0.5);\n    }\n    accept(timestamp, deltaX, deltaY) {\n        const item = new MouseWheelClassifierItem(timestamp, deltaX, deltaY);\n        item.score = this._computeScore(item);\n        if (this._front === -1 && this._rear === -1) {\n            this._memory[0] = item;\n            this._front = 0;\n            this._rear = 0;\n        }\n        else {\n            this._rear = (this._rear + 1) % this._capacity;\n            if (this._rear === this._front) {\n                // Drop oldest\n                this._front = (this._front + 1) % this._capacity;\n            }\n            this._memory[this._rear] = item;\n        }\n    }\n    /**\n     * A score between 0 and 1 for `item`.\n     *  - a score towards 0 indicates that the source appears to be a physical mouse wheel\n     *  - a score towards 1 indicates that the source appears to be a touchpad or magic mouse, etc.\n     */\n    _computeScore(item) {\n        if (Math.abs(item.deltaX) > 0 && Math.abs(item.deltaY) > 0) {\n            // both axes exercised => definitely not a physical mouse wheel\n            return 1;\n        }\n        let score = 0.5;\n        const prev = (this._front === -1 && this._rear === -1 ? null : this._memory[this._rear]);\n        if (prev) {\n            // const deltaT = item.timestamp - prev.timestamp;\n            // if (deltaT < 1000 / 30) {\n            // \t// sooner than X times per second => indicator that this is not a physical mouse wheel\n            // \tscore += 0.25;\n            // }\n            // if (item.deltaX === prev.deltaX && item.deltaY === prev.deltaY) {\n            // \t// equal amplitude => indicator that this is a physical mouse wheel\n            // \tscore -= 0.25;\n            // }\n        }\n        if (!this._isAlmostInt(item.deltaX) || !this._isAlmostInt(item.deltaY)) {\n            // non-integer deltas => indicator that this is not a physical mouse wheel\n            score += 0.25;\n        }\n        return Math.min(Math.max(score, 0), 1);\n    }\n    _isAlmostInt(value) {\n        const delta = Math.abs(Math.round(value) - value);\n        return (delta < 0.01);\n    }\n}\nMouseWheelClassifier.INSTANCE = new MouseWheelClassifier();\nexport class AbstractScrollableElement extends Widget {\n    constructor(element, options, scrollable) {\n        super();\n        this._onScroll = this._register(new Emitter());\n        this.onScroll = this._onScroll.event;\n        this._onWillScroll = this._register(new Emitter());\n        element.style.overflow = 'hidden';\n        this._options = resolveOptions(options);\n        this._scrollable = scrollable;\n        this._register(this._scrollable.onScroll((e) => {\n            this._onWillScroll.fire(e);\n            this._onDidScroll(e);\n            this._onScroll.fire(e);\n        }));\n        const scrollbarHost = {\n            onMouseWheel: (mouseWheelEvent) => this._onMouseWheel(mouseWheelEvent),\n            onDragStart: () => this._onDragStart(),\n            onDragEnd: () => this._onDragEnd(),\n        };\n        this._verticalScrollbar = this._register(new VerticalScrollbar(this._scrollable, this._options, scrollbarHost));\n        this._horizontalScrollbar = this._register(new HorizontalScrollbar(this._scrollable, this._options, scrollbarHost));\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'monaco-scrollable-element ' + this._options.className;\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.style.position = 'relative';\n        this._domNode.style.overflow = 'hidden';\n        this._domNode.appendChild(element);\n        this._domNode.appendChild(this._horizontalScrollbar.domNode.domNode);\n        this._domNode.appendChild(this._verticalScrollbar.domNode.domNode);\n        if (this._options.useShadows) {\n            this._leftShadowDomNode = createFastDomNode(document.createElement('div'));\n            this._leftShadowDomNode.setClassName('shadow');\n            this._domNode.appendChild(this._leftShadowDomNode.domNode);\n            this._topShadowDomNode = createFastDomNode(document.createElement('div'));\n            this._topShadowDomNode.setClassName('shadow');\n            this._domNode.appendChild(this._topShadowDomNode.domNode);\n            this._topLeftShadowDomNode = createFastDomNode(document.createElement('div'));\n            this._topLeftShadowDomNode.setClassName('shadow');\n            this._domNode.appendChild(this._topLeftShadowDomNode.domNode);\n        }\n        else {\n            this._leftShadowDomNode = null;\n            this._topShadowDomNode = null;\n            this._topLeftShadowDomNode = null;\n        }\n        this._listenOnDomNode = this._options.listenOnDomNode || this._domNode;\n        this._mouseWheelToDispose = [];\n        this._setListeningToMouseWheel(this._options.handleMouseWheel);\n        this.onmouseover(this._listenOnDomNode, (e) => this._onMouseOver(e));\n        this.onnonbubblingmouseout(this._listenOnDomNode, (e) => this._onMouseOut(e));\n        this._hideTimeout = this._register(new TimeoutTimer());\n        this._isDragging = false;\n        this._mouseIsOver = false;\n        this._shouldRender = true;\n        this._revealOnScroll = true;\n    }\n    get options() {\n        return this._options;\n    }\n    dispose() {\n        this._mouseWheelToDispose = dispose(this._mouseWheelToDispose);\n        super.dispose();\n    }\n    /**\n     * Get the generated 'scrollable' dom node\n     */\n    getDomNode() {\n        return this._domNode;\n    }\n    getOverviewRulerLayoutInfo() {\n        return {\n            parent: this._domNode,\n            insertBefore: this._verticalScrollbar.domNode.domNode,\n        };\n    }\n    /**\n     * Delegate a mouse down event to the vertical scrollbar.\n     * This is to help with clicking somewhere else and having the scrollbar react.\n     */\n    delegateVerticalScrollbarMouseDown(browserEvent) {\n        this._verticalScrollbar.delegateMouseDown(browserEvent);\n    }\n    getScrollDimensions() {\n        return this._scrollable.getScrollDimensions();\n    }\n    setScrollDimensions(dimensions) {\n        this._scrollable.setScrollDimensions(dimensions, false);\n    }\n    /**\n     * Update the class name of the scrollable element.\n     */\n    updateClassName(newClassName) {\n        this._options.className = newClassName;\n        // Defaults are different on Macs\n        if (platform.isMacintosh) {\n            this._options.className += ' mac';\n        }\n        this._domNode.className = 'monaco-scrollable-element ' + this._options.className;\n    }\n    /**\n     * Update configuration options for the scrollbar.\n     */\n    updateOptions(newOptions) {\n        if (typeof newOptions.handleMouseWheel !== 'undefined') {\n            this._options.handleMouseWheel = newOptions.handleMouseWheel;\n            this._setListeningToMouseWheel(this._options.handleMouseWheel);\n        }\n        if (typeof newOptions.mouseWheelScrollSensitivity !== 'undefined') {\n            this._options.mouseWheelScrollSensitivity = newOptions.mouseWheelScrollSensitivity;\n        }\n        if (typeof newOptions.fastScrollSensitivity !== 'undefined') {\n            this._options.fastScrollSensitivity = newOptions.fastScrollSensitivity;\n        }\n        if (typeof newOptions.scrollPredominantAxis !== 'undefined') {\n            this._options.scrollPredominantAxis = newOptions.scrollPredominantAxis;\n        }\n        if (typeof newOptions.horizontal !== 'undefined') {\n            this._options.horizontal = newOptions.horizontal;\n        }\n        if (typeof newOptions.vertical !== 'undefined') {\n            this._options.vertical = newOptions.vertical;\n        }\n        if (typeof newOptions.horizontalScrollbarSize !== 'undefined') {\n            this._options.horizontalScrollbarSize = newOptions.horizontalScrollbarSize;\n        }\n        if (typeof newOptions.verticalScrollbarSize !== 'undefined') {\n            this._options.verticalScrollbarSize = newOptions.verticalScrollbarSize;\n        }\n        if (typeof newOptions.scrollByPage !== 'undefined') {\n            this._options.scrollByPage = newOptions.scrollByPage;\n        }\n        this._horizontalScrollbar.updateOptions(this._options);\n        this._verticalScrollbar.updateOptions(this._options);\n        if (!this._options.lazyRender) {\n            this._render();\n        }\n    }\n    // -------------------- mouse wheel scrolling --------------------\n    _setListeningToMouseWheel(shouldListen) {\n        const isListening = (this._mouseWheelToDispose.length > 0);\n        if (isListening === shouldListen) {\n            // No change\n            return;\n        }\n        // Stop listening (if necessary)\n        this._mouseWheelToDispose = dispose(this._mouseWheelToDispose);\n        // Start listening (if necessary)\n        if (shouldListen) {\n            const onMouseWheel = (browserEvent) => {\n                this._onMouseWheel(new StandardWheelEvent(browserEvent));\n            };\n            this._mouseWheelToDispose.push(dom.addDisposableListener(this._listenOnDomNode, dom.EventType.MOUSE_WHEEL, onMouseWheel, { passive: false }));\n        }\n    }\n    _onMouseWheel(e) {\n        const classifier = MouseWheelClassifier.INSTANCE;\n        if (SCROLL_WHEEL_SMOOTH_SCROLL_ENABLED) {\n            const osZoomFactor = window.devicePixelRatio / getZoomFactor();\n            if (platform.isWindows || platform.isLinux) {\n                // On Windows and Linux, the incoming delta events are multiplied with the OS zoom factor.\n                // The OS zoom factor can be reverse engineered by using the device pixel ratio and the configured zoom factor into account.\n                classifier.accept(Date.now(), e.deltaX / osZoomFactor, e.deltaY / osZoomFactor);\n            }\n            else {\n                classifier.accept(Date.now(), e.deltaX, e.deltaY);\n            }\n        }\n        // console.log(`${Date.now()}, ${e.deltaY}, ${e.deltaX}`);\n        let didScroll = false;\n        if (e.deltaY || e.deltaX) {\n            let deltaY = e.deltaY * this._options.mouseWheelScrollSensitivity;\n            let deltaX = e.deltaX * this._options.mouseWheelScrollSensitivity;\n            if (this._options.scrollPredominantAxis) {\n                if (Math.abs(deltaY) >= Math.abs(deltaX)) {\n                    deltaX = 0;\n                }\n                else {\n                    deltaY = 0;\n                }\n            }\n            if (this._options.flipAxes) {\n                [deltaY, deltaX] = [deltaX, deltaY];\n            }\n            // Convert vertical scrolling to horizontal if shift is held, this\n            // is handled at a higher level on Mac\n            const shiftConvert = !platform.isMacintosh && e.browserEvent && e.browserEvent.shiftKey;\n            if ((this._options.scrollYToX || shiftConvert) && !deltaX) {\n                deltaX = deltaY;\n                deltaY = 0;\n            }\n            if (e.browserEvent && e.browserEvent.altKey) {\n                // fastScrolling\n                deltaX = deltaX * this._options.fastScrollSensitivity;\n                deltaY = deltaY * this._options.fastScrollSensitivity;\n            }\n            const futureScrollPosition = this._scrollable.getFutureScrollPosition();\n            let desiredScrollPosition = {};\n            if (deltaY) {\n                const deltaScrollTop = SCROLL_WHEEL_SENSITIVITY * deltaY;\n                // Here we convert values such as -0.3 to -1 or 0.3 to 1, otherwise low speed scrolling will never scroll\n                const desiredScrollTop = futureScrollPosition.scrollTop - (deltaScrollTop < 0 ? Math.floor(deltaScrollTop) : Math.ceil(deltaScrollTop));\n                this._verticalScrollbar.writeScrollPosition(desiredScrollPosition, desiredScrollTop);\n            }\n            if (deltaX) {\n                const deltaScrollLeft = SCROLL_WHEEL_SENSITIVITY * deltaX;\n                // Here we convert values such as -0.3 to -1 or 0.3 to 1, otherwise low speed scrolling will never scroll\n                const desiredScrollLeft = futureScrollPosition.scrollLeft - (deltaScrollLeft < 0 ? Math.floor(deltaScrollLeft) : Math.ceil(deltaScrollLeft));\n                this._horizontalScrollbar.writeScrollPosition(desiredScrollPosition, desiredScrollLeft);\n            }\n            // Check that we are scrolling towards a location which is valid\n            desiredScrollPosition = this._scrollable.validateScrollPosition(desiredScrollPosition);\n            if (futureScrollPosition.scrollLeft !== desiredScrollPosition.scrollLeft || futureScrollPosition.scrollTop !== desiredScrollPosition.scrollTop) {\n                const canPerformSmoothScroll = (SCROLL_WHEEL_SMOOTH_SCROLL_ENABLED\n                    && this._options.mouseWheelSmoothScroll\n                    && classifier.isPhysicalMouseWheel());\n                if (canPerformSmoothScroll) {\n                    this._scrollable.setScrollPositionSmooth(desiredScrollPosition);\n                }\n                else {\n                    this._scrollable.setScrollPositionNow(desiredScrollPosition);\n                }\n                didScroll = true;\n            }\n        }\n        let consumeMouseWheel = didScroll;\n        if (!consumeMouseWheel && this._options.alwaysConsumeMouseWheel) {\n            consumeMouseWheel = true;\n        }\n        if (!consumeMouseWheel && this._options.consumeMouseWheelIfScrollbarIsNeeded && (this._verticalScrollbar.isNeeded() || this._horizontalScrollbar.isNeeded())) {\n            consumeMouseWheel = true;\n        }\n        if (consumeMouseWheel) {\n            e.preventDefault();\n            e.stopPropagation();\n        }\n    }\n    _onDidScroll(e) {\n        this._shouldRender = this._horizontalScrollbar.onDidScroll(e) || this._shouldRender;\n        this._shouldRender = this._verticalScrollbar.onDidScroll(e) || this._shouldRender;\n        if (this._options.useShadows) {\n            this._shouldRender = true;\n        }\n        if (this._revealOnScroll) {\n            this._reveal();\n        }\n        if (!this._options.lazyRender) {\n            this._render();\n        }\n    }\n    /**\n     * Render / mutate the DOM now.\n     * Should be used together with the ctor option `lazyRender`.\n     */\n    renderNow() {\n        if (!this._options.lazyRender) {\n            throw new Error('Please use `lazyRender` together with `renderNow`!');\n        }\n        this._render();\n    }\n    _render() {\n        if (!this._shouldRender) {\n            return;\n        }\n        this._shouldRender = false;\n        this._horizontalScrollbar.render();\n        this._verticalScrollbar.render();\n        if (this._options.useShadows) {\n            const scrollState = this._scrollable.getCurrentScrollPosition();\n            const enableTop = scrollState.scrollTop > 0;\n            const enableLeft = scrollState.scrollLeft > 0;\n            const leftClassName = (enableLeft ? ' left' : '');\n            const topClassName = (enableTop ? ' top' : '');\n            const topLeftClassName = (enableLeft || enableTop ? ' top-left-corner' : '');\n            this._leftShadowDomNode.setClassName(`shadow${leftClassName}`);\n            this._topShadowDomNode.setClassName(`shadow${topClassName}`);\n            this._topLeftShadowDomNode.setClassName(`shadow${topLeftClassName}${topClassName}${leftClassName}`);\n        }\n    }\n    // -------------------- fade in / fade out --------------------\n    _onDragStart() {\n        this._isDragging = true;\n        this._reveal();\n    }\n    _onDragEnd() {\n        this._isDragging = false;\n        this._hide();\n    }\n    _onMouseOut(e) {\n        this._mouseIsOver = false;\n        this._hide();\n    }\n    _onMouseOver(e) {\n        this._mouseIsOver = true;\n        this._reveal();\n    }\n    _reveal() {\n        this._verticalScrollbar.beginReveal();\n        this._horizontalScrollbar.beginReveal();\n        this._scheduleHide();\n    }\n    _hide() {\n        if (!this._mouseIsOver && !this._isDragging) {\n            this._verticalScrollbar.beginHide();\n            this._horizontalScrollbar.beginHide();\n        }\n    }\n    _scheduleHide() {\n        if (!this._mouseIsOver && !this._isDragging) {\n            this._hideTimeout.cancelAndSet(() => this._hide(), HIDE_TIMEOUT);\n        }\n    }\n}\nexport class ScrollableElement extends AbstractScrollableElement {\n    constructor(element, options) {\n        options = options || {};\n        options.mouseWheelSmoothScroll = false;\n        const scrollable = new Scrollable({\n            forceIntegerValues: true,\n            smoothScrollDuration: 0,\n            scheduleAtNextAnimationFrame: (callback) => dom.scheduleAtNextAnimationFrame(callback)\n        });\n        super(element, options, scrollable);\n        this._register(scrollable);\n    }\n    setScrollPosition(update) {\n        this._scrollable.setScrollPositionNow(update);\n    }\n}\nexport class SmoothScrollableElement extends AbstractScrollableElement {\n    constructor(element, options, scrollable) {\n        super(element, options, scrollable);\n    }\n    setScrollPosition(update) {\n        if (update.reuseAnimation) {\n            this._scrollable.setScrollPositionSmooth(update, update.reuseAnimation);\n        }\n        else {\n            this._scrollable.setScrollPositionNow(update);\n        }\n    }\n    getScrollPosition() {\n        return this._scrollable.getCurrentScrollPosition();\n    }\n}\nexport class DomScrollableElement extends AbstractScrollableElement {\n    constructor(element, options) {\n        options = options || {};\n        options.mouseWheelSmoothScroll = false;\n        const scrollable = new Scrollable({\n            forceIntegerValues: false,\n            smoothScrollDuration: 0,\n            scheduleAtNextAnimationFrame: (callback) => dom.scheduleAtNextAnimationFrame(callback)\n        });\n        super(element, options, scrollable);\n        this._register(scrollable);\n        this._element = element;\n        this.onScroll((e) => {\n            if (e.scrollTopChanged) {\n                this._element.scrollTop = e.scrollTop;\n            }\n            if (e.scrollLeftChanged) {\n                this._element.scrollLeft = e.scrollLeft;\n            }\n        });\n        this.scanDomNode();\n    }\n    setScrollPosition(update) {\n        this._scrollable.setScrollPositionNow(update);\n    }\n    getScrollPosition() {\n        return this._scrollable.getCurrentScrollPosition();\n    }\n    scanDomNode() {\n        // width, scrollLeft, scrollWidth, height, scrollTop, scrollHeight\n        this.setScrollDimensions({\n            width: this._element.clientWidth,\n            scrollWidth: this._element.scrollWidth,\n            height: this._element.clientHeight,\n            scrollHeight: this._element.scrollHeight\n        });\n        this.setScrollPosition({\n            scrollLeft: this._element.scrollLeft,\n            scrollTop: this._element.scrollTop,\n        });\n    }\n}\nfunction resolveOptions(opts) {\n    const result = {\n        lazyRender: (typeof opts.lazyRender !== 'undefined' ? opts.lazyRender : false),\n        className: (typeof opts.className !== 'undefined' ? opts.className : ''),\n        useShadows: (typeof opts.useShadows !== 'undefined' ? opts.useShadows : true),\n        handleMouseWheel: (typeof opts.handleMouseWheel !== 'undefined' ? opts.handleMouseWheel : true),\n        flipAxes: (typeof opts.flipAxes !== 'undefined' ? opts.flipAxes : false),\n        consumeMouseWheelIfScrollbarIsNeeded: (typeof opts.consumeMouseWheelIfScrollbarIsNeeded !== 'undefined' ? opts.consumeMouseWheelIfScrollbarIsNeeded : false),\n        alwaysConsumeMouseWheel: (typeof opts.alwaysConsumeMouseWheel !== 'undefined' ? opts.alwaysConsumeMouseWheel : false),\n        scrollYToX: (typeof opts.scrollYToX !== 'undefined' ? opts.scrollYToX : false),\n        mouseWheelScrollSensitivity: (typeof opts.mouseWheelScrollSensitivity !== 'undefined' ? opts.mouseWheelScrollSensitivity : 1),\n        fastScrollSensitivity: (typeof opts.fastScrollSensitivity !== 'undefined' ? opts.fastScrollSensitivity : 5),\n        scrollPredominantAxis: (typeof opts.scrollPredominantAxis !== 'undefined' ? opts.scrollPredominantAxis : true),\n        mouseWheelSmoothScroll: (typeof opts.mouseWheelSmoothScroll !== 'undefined' ? opts.mouseWheelSmoothScroll : true),\n        arrowSize: (typeof opts.arrowSize !== 'undefined' ? opts.arrowSize : 11),\n        listenOnDomNode: (typeof opts.listenOnDomNode !== 'undefined' ? opts.listenOnDomNode : null),\n        horizontal: (typeof opts.horizontal !== 'undefined' ? opts.horizontal : 1 /* Auto */),\n        horizontalScrollbarSize: (typeof opts.horizontalScrollbarSize !== 'undefined' ? opts.horizontalScrollbarSize : 10),\n        horizontalSliderSize: (typeof opts.horizontalSliderSize !== 'undefined' ? opts.horizontalSliderSize : 0),\n        horizontalHasArrows: (typeof opts.horizontalHasArrows !== 'undefined' ? opts.horizontalHasArrows : false),\n        vertical: (typeof opts.vertical !== 'undefined' ? opts.vertical : 1 /* Auto */),\n        verticalScrollbarSize: (typeof opts.verticalScrollbarSize !== 'undefined' ? opts.verticalScrollbarSize : 10),\n        verticalHasArrows: (typeof opts.verticalHasArrows !== 'undefined' ? opts.verticalHasArrows : false),\n        verticalSliderSize: (typeof opts.verticalSliderSize !== 'undefined' ? opts.verticalSliderSize : 0),\n        scrollByPage: (typeof opts.scrollByPage !== 'undefined' ? opts.scrollByPage : false)\n    };\n    result.horizontalSliderSize = (typeof opts.horizontalSliderSize !== 'undefined' ? opts.horizontalSliderSize : result.horizontalScrollbarSize);\n    result.verticalSliderSize = (typeof opts.verticalSliderSize !== 'undefined' ? opts.verticalSliderSize : result.verticalScrollbarSize);\n    // Defaults are different on Macs\n    if (platform.isMacintosh) {\n        result.className += ' mac';\n    }\n    return result;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, addDisposableListener, append, scheduleAtNextAnimationFrame } from '../../dom.js';\nimport { Sash } from '../sash/sash.js';\nimport { SmoothScrollableElement } from '../scrollbar/scrollableElement.js';\nimport { pushToEnd, pushToStart, range } from '../../../common/arrays.js';\nimport { Color } from '../../../common/color.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { combinedDisposable, Disposable, dispose, toDisposable } from '../../../common/lifecycle.js';\nimport { clamp } from '../../../common/numbers.js';\nimport { Scrollable } from '../../../common/scrollable.js';\nimport * as types from '../../../common/types.js';\nimport './splitview.css';\nconst defaultStyles = {\n    separatorBorder: Color.transparent\n};\nclass ViewItem {\n    constructor(container, view, size, disposable) {\n        this.container = container;\n        this.view = view;\n        this.disposable = disposable;\n        this._cachedVisibleSize = undefined;\n        if (typeof size === 'number') {\n            this._size = size;\n            this._cachedVisibleSize = undefined;\n            container.classList.add('visible');\n        }\n        else {\n            this._size = 0;\n            this._cachedVisibleSize = size.cachedVisibleSize;\n        }\n    }\n    set size(size) {\n        this._size = size;\n    }\n    get size() {\n        return this._size;\n    }\n    get visible() {\n        return typeof this._cachedVisibleSize === 'undefined';\n    }\n    setVisible(visible, size) {\n        if (visible === this.visible) {\n            return;\n        }\n        if (visible) {\n            this.size = clamp(this._cachedVisibleSize, this.viewMinimumSize, this.viewMaximumSize);\n            this._cachedVisibleSize = undefined;\n        }\n        else {\n            this._cachedVisibleSize = typeof size === 'number' ? size : this.size;\n            this.size = 0;\n        }\n        this.container.classList.toggle('visible', visible);\n        if (this.view.setVisible) {\n            this.view.setVisible(visible);\n        }\n    }\n    get minimumSize() { return this.visible ? this.view.minimumSize : 0; }\n    get viewMinimumSize() { return this.view.minimumSize; }\n    get maximumSize() { return this.visible ? this.view.maximumSize : 0; }\n    get viewMaximumSize() { return this.view.maximumSize; }\n    get priority() { return this.view.priority; }\n    get snap() { return !!this.view.snap; }\n    set enabled(enabled) {\n        this.container.style.pointerEvents = enabled ? '' : 'none';\n    }\n    layout(offset, layoutContext) {\n        this.layoutContainer(offset);\n        this.view.layout(this.size, offset, layoutContext);\n    }\n    dispose() {\n        this.disposable.dispose();\n        return this.view;\n    }\n}\nclass VerticalViewItem extends ViewItem {\n    layoutContainer(offset) {\n        this.container.style.top = `${offset}px`;\n        this.container.style.height = `${this.size}px`;\n    }\n}\nclass HorizontalViewItem extends ViewItem {\n    layoutContainer(offset) {\n        this.container.style.left = `${offset}px`;\n        this.container.style.width = `${this.size}px`;\n    }\n}\nvar State;\n(function (State) {\n    State[State[\"Idle\"] = 0] = \"Idle\";\n    State[State[\"Busy\"] = 1] = \"Busy\";\n})(State || (State = {}));\nexport var Sizing;\n(function (Sizing) {\n    /**\n     * When adding or removing views, distribute the delta space among\n     * all other views.\n     */\n    Sizing.Distribute = { type: 'distribute' };\n    /**\n     * When adding or removing views, split the delta space with another\n     * specific view, indexed by the provided `index`.\n     */\n    function Split(index) { return { type: 'split', index }; }\n    Sizing.Split = Split;\n    /**\n     * When adding or removing views, assume the view is invisible.\n     */\n    function Invisible(cachedVisibleSize) { return { type: 'invisible', cachedVisibleSize }; }\n    Sizing.Invisible = Invisible;\n})(Sizing || (Sizing = {}));\n/**\n * The {@link SplitView} is the UI component which implements a one dimensional\n * flex-like layout algorithm for a collection of {@link IView} instances, which\n * are essentially HTMLElement instances with the following size constraints:\n *\n * - {@link IView.minimumSize}\n * - {@link IView.maximumSize}\n * - {@link IView.priority}\n * - {@link IView.snap}\n *\n * In case the SplitView doesn't have enough size to fit all views, it will overflow\n * its content with a scrollbar.\n *\n * In between each pair of views there will be a {@link Sash} allowing the user\n * to resize the views, making sure the constraints are respected.\n *\n * An optional {@link TLayoutContext layout context type} may be used in order to\n * pass along layout contextual data from the {@link SplitView.layout} method down\n * to each view's {@link IView.layout} calls.\n *\n * Features:\n * - Flex-like layout algorithm\n * - Snap support\n * - Orthogonal sash support, for corner sashes\n * - View hide/show support\n * - View swap/move support\n * - Alt key modifier behavior, macOS style\n */\nexport class SplitView extends Disposable {\n    /**\n     * Create a new {@link SplitView} instance.\n     */\n    constructor(container, options = {}) {\n        var _a, _b, _c, _d, _e;\n        super();\n        this.size = 0;\n        this.contentSize = 0;\n        this.proportions = undefined;\n        this.viewItems = [];\n        this.sashItems = [];\n        this.state = State.Idle;\n        this._onDidSashChange = this._register(new Emitter());\n        this._onDidSashReset = this._register(new Emitter());\n        this._startSnappingEnabled = true;\n        this._endSnappingEnabled = true;\n        /**\n         * Fires whenever the user resizes a {@link Sash sash}.\n         */\n        this.onDidSashChange = this._onDidSashChange.event;\n        /**\n         * Fires whenever the user double clicks a {@link Sash sash}.\n         */\n        this.onDidSashReset = this._onDidSashReset.event;\n        this.orientation = (_a = options.orientation) !== null && _a !== void 0 ? _a : 0 /* VERTICAL */;\n        this.inverseAltBehavior = (_b = options.inverseAltBehavior) !== null && _b !== void 0 ? _b : false;\n        this.proportionalLayout = (_c = options.proportionalLayout) !== null && _c !== void 0 ? _c : true;\n        this.getSashOrthogonalSize = options.getSashOrthogonalSize;\n        this.el = document.createElement('div');\n        this.el.classList.add('monaco-split-view2');\n        this.el.classList.add(this.orientation === 0 /* VERTICAL */ ? 'vertical' : 'horizontal');\n        container.appendChild(this.el);\n        this.sashContainer = append(this.el, $('.sash-container'));\n        this.viewContainer = $('.split-view-container');\n        this.scrollable = new Scrollable({\n            forceIntegerValues: true,\n            smoothScrollDuration: 125,\n            scheduleAtNextAnimationFrame\n        });\n        this.scrollableElement = this._register(new SmoothScrollableElement(this.viewContainer, {\n            vertical: this.orientation === 0 /* VERTICAL */ ? ((_d = options.scrollbarVisibility) !== null && _d !== void 0 ? _d : 1 /* Auto */) : 2 /* Hidden */,\n            horizontal: this.orientation === 1 /* HORIZONTAL */ ? ((_e = options.scrollbarVisibility) !== null && _e !== void 0 ? _e : 1 /* Auto */) : 2 /* Hidden */\n        }, this.scrollable));\n        this.onDidScroll = this.scrollableElement.onScroll;\n        this._register(this.onDidScroll(e => {\n            this.viewContainer.scrollTop = e.scrollTop;\n            this.viewContainer.scrollLeft = e.scrollLeft;\n        }));\n        append(this.el, this.scrollableElement.getDomNode());\n        this.style(options.styles || defaultStyles);\n        // We have an existing set of view, add them now\n        if (options.descriptor) {\n            this.size = options.descriptor.size;\n            options.descriptor.views.forEach((viewDescriptor, index) => {\n                const sizing = types.isUndefined(viewDescriptor.visible) || viewDescriptor.visible ? viewDescriptor.size : { type: 'invisible', cachedVisibleSize: viewDescriptor.size };\n                const view = viewDescriptor.view;\n                this.doAddView(view, sizing, index, true);\n            });\n            // Initialize content size and proportions for first layout\n            this.contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n            this.saveProportions();\n        }\n    }\n    get orthogonalStartSash() { return this._orthogonalStartSash; }\n    get orthogonalEndSash() { return this._orthogonalEndSash; }\n    get startSnappingEnabled() { return this._startSnappingEnabled; }\n    get endSnappingEnabled() { return this._endSnappingEnabled; }\n    /**\n     * A reference to a sash, perpendicular to all sashes in this {@link SplitView},\n     * located at the left- or top-most side of the SplitView.\n     * Corner sashes will be created automatically at the intersections.\n     */\n    set orthogonalStartSash(sash) {\n        for (const sashItem of this.sashItems) {\n            sashItem.sash.orthogonalStartSash = sash;\n        }\n        this._orthogonalStartSash = sash;\n    }\n    /**\n     * A reference to a sash, perpendicular to all sashes in this {@link SplitView},\n     * located at the right- or bottom-most side of the SplitView.\n     * Corner sashes will be created automatically at the intersections.\n     */\n    set orthogonalEndSash(sash) {\n        for (const sashItem of this.sashItems) {\n            sashItem.sash.orthogonalEndSash = sash;\n        }\n        this._orthogonalEndSash = sash;\n    }\n    /**\n     * Enable/disable snapping at the beginning of this {@link SplitView}.\n     */\n    set startSnappingEnabled(startSnappingEnabled) {\n        if (this._startSnappingEnabled === startSnappingEnabled) {\n            return;\n        }\n        this._startSnappingEnabled = startSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    /**\n     * Enable/disable snapping at the end of this {@link SplitView}.\n     */\n    set endSnappingEnabled(endSnappingEnabled) {\n        if (this._endSnappingEnabled === endSnappingEnabled) {\n            return;\n        }\n        this._endSnappingEnabled = endSnappingEnabled;\n        this.updateSashEnablement();\n    }\n    style(styles) {\n        if (styles.separatorBorder.isTransparent()) {\n            this.el.classList.remove('separator-border');\n            this.el.style.removeProperty('--separator-border');\n        }\n        else {\n            this.el.classList.add('separator-border');\n            this.el.style.setProperty('--separator-border', styles.separatorBorder.toString());\n        }\n    }\n    /**\n     * Add a {@link IView view} to this {@link SplitView}.\n     *\n     * @param view The view to add.\n     * @param size Either a fixed size, or a dynamic {@link Sizing} strategy.\n     * @param index The index to insert the view on.\n     * @param skipLayout Whether layout should be skipped.\n     */\n    addView(view, size, index = this.viewItems.length, skipLayout) {\n        this.doAddView(view, size, index, skipLayout);\n    }\n    /**\n     * Layout the {@link SplitView}.\n     *\n     * @param size The entire size of the {@link SplitView}.\n     * @param layoutContext An optional layout context to pass along to {@link IView views}.\n     */\n    layout(size, layoutContext) {\n        const previousSize = Math.max(this.size, this.contentSize);\n        this.size = size;\n        this.layoutContext = layoutContext;\n        if (!this.proportions) {\n            const indexes = range(this.viewItems.length);\n            const lowPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 1 /* Low */);\n            const highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 2 /* High */);\n            this.resize(this.viewItems.length - 1, size - previousSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        }\n        else {\n            for (let i = 0; i < this.viewItems.length; i++) {\n                const item = this.viewItems[i];\n                item.size = clamp(Math.round(this.proportions[i] * size), item.minimumSize, item.maximumSize);\n            }\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    saveProportions() {\n        if (this.proportionalLayout && this.contentSize > 0) {\n            this.proportions = this.viewItems.map(i => i.size / this.contentSize);\n        }\n    }\n    onSashStart({ sash, start, alt }) {\n        for (const item of this.viewItems) {\n            item.enabled = false;\n        }\n        const index = this.sashItems.findIndex(item => item.sash === sash);\n        // This way, we can press Alt while we resize a sash, macOS style!\n        const disposable = combinedDisposable(addDisposableListener(document.body, 'keydown', e => resetSashDragState(this.sashDragState.current, e.altKey)), addDisposableListener(document.body, 'keyup', () => resetSashDragState(this.sashDragState.current, false)));\n        const resetSashDragState = (start, alt) => {\n            const sizes = this.viewItems.map(i => i.size);\n            let minDelta = Number.NEGATIVE_INFINITY;\n            let maxDelta = Number.POSITIVE_INFINITY;\n            if (this.inverseAltBehavior) {\n                alt = !alt;\n            }\n            if (alt) {\n                // When we're using the last sash with Alt, we're resizing\n                // the view to the left/up, instead of right/down as usual\n                // Thus, we must do the inverse of the usual\n                const isLastSash = index === this.sashItems.length - 1;\n                if (isLastSash) {\n                    const viewItem = this.viewItems[index];\n                    minDelta = (viewItem.minimumSize - viewItem.size) / 2;\n                    maxDelta = (viewItem.maximumSize - viewItem.size) / 2;\n                }\n                else {\n                    const viewItem = this.viewItems[index + 1];\n                    minDelta = (viewItem.size - viewItem.maximumSize) / 2;\n                    maxDelta = (viewItem.size - viewItem.minimumSize) / 2;\n                }\n            }\n            let snapBefore;\n            let snapAfter;\n            if (!alt) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n                const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].viewMaximumSize - sizes[i]), 0);\n                const maxDeltaDown = downIndexes.length === 0 ? Number.POSITIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].minimumSize), 0);\n                const minDeltaDown = downIndexes.length === 0 ? Number.NEGATIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].viewMaximumSize), 0);\n                const minDelta = Math.max(minDeltaUp, minDeltaDown);\n                const maxDelta = Math.min(maxDeltaDown, maxDeltaUp);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number') {\n                    const viewItem = this.viewItems[snapBeforeIndex];\n                    const halfSize = Math.floor(viewItem.viewMinimumSize / 2);\n                    snapBefore = {\n                        index: snapBeforeIndex,\n                        limitDelta: viewItem.visible ? minDelta - halfSize : minDelta + halfSize,\n                        size: viewItem.size\n                    };\n                }\n                if (typeof snapAfterIndex === 'number') {\n                    const viewItem = this.viewItems[snapAfterIndex];\n                    const halfSize = Math.floor(viewItem.viewMinimumSize / 2);\n                    snapAfter = {\n                        index: snapAfterIndex,\n                        limitDelta: viewItem.visible ? maxDelta + halfSize : maxDelta - halfSize,\n                        size: viewItem.size\n                    };\n                }\n            }\n            this.sashDragState = { start, current: start, index, sizes, minDelta, maxDelta, alt, snapBefore, snapAfter, disposable };\n        };\n        resetSashDragState(start, alt);\n    }\n    onSashChange({ current }) {\n        const { index, start, sizes, alt, minDelta, maxDelta, snapBefore, snapAfter } = this.sashDragState;\n        this.sashDragState.current = current;\n        const delta = current - start;\n        const newDelta = this.resize(index, delta, sizes, undefined, undefined, minDelta, maxDelta, snapBefore, snapAfter);\n        if (alt) {\n            const isLastSash = index === this.sashItems.length - 1;\n            const newSizes = this.viewItems.map(i => i.size);\n            const viewItemIndex = isLastSash ? index : index + 1;\n            const viewItem = this.viewItems[viewItemIndex];\n            const newMinDelta = viewItem.size - viewItem.maximumSize;\n            const newMaxDelta = viewItem.size - viewItem.minimumSize;\n            const resizeIndex = isLastSash ? index - 1 : index + 1;\n            this.resize(resizeIndex, -newDelta, newSizes, undefined, undefined, newMinDelta, newMaxDelta);\n        }\n        this.distributeEmptySpace();\n        this.layoutViews();\n    }\n    onSashEnd(index) {\n        this._onDidSashChange.fire(index);\n        this.sashDragState.disposable.dispose();\n        this.saveProportions();\n        for (const item of this.viewItems) {\n            item.enabled = true;\n        }\n    }\n    onViewChange(item, size) {\n        const index = this.viewItems.indexOf(item);\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        size = typeof size === 'number' ? size : item.size;\n        size = clamp(size, item.minimumSize, item.maximumSize);\n        if (this.inverseAltBehavior && index > 0) {\n            // In this case, we want the view to grow or shrink both sides equally\n            // so we just resize the \"left\" side by half and let `resize` do the clamping magic\n            this.resize(index - 1, Math.floor((item.size - size) / 2));\n            this.distributeEmptySpace();\n            this.layoutViews();\n        }\n        else {\n            item.size = size;\n            this.relayout([index], undefined);\n        }\n    }\n    /**\n     * Resize a {@link IView view} within the {@link SplitView}.\n     *\n     * @param index The {@link IView view} index.\n     * @param size The {@link IView view} size.\n     */\n    resizeView(index, size) {\n        if (this.state !== State.Idle) {\n            throw new Error('Cant modify splitview');\n        }\n        this.state = State.Busy;\n        if (index < 0 || index >= this.viewItems.length) {\n            return;\n        }\n        const indexes = range(this.viewItems.length).filter(i => i !== index);\n        const lowPriorityIndexes = [...indexes.filter(i => this.viewItems[i].priority === 1 /* Low */), index];\n        const highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 2 /* High */);\n        const item = this.viewItems[index];\n        size = Math.round(size);\n        size = clamp(size, item.minimumSize, Math.min(item.maximumSize, this.size));\n        item.size = size;\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n        this.state = State.Idle;\n    }\n    /**\n     * Distribute the entire {@link SplitView} size among all {@link IView views}.\n     */\n    distributeViewSizes() {\n        const flexibleViewItems = [];\n        let flexibleSize = 0;\n        for (const item of this.viewItems) {\n            if (item.maximumSize - item.minimumSize > 0) {\n                flexibleViewItems.push(item);\n                flexibleSize += item.size;\n            }\n        }\n        const size = Math.floor(flexibleSize / flexibleViewItems.length);\n        for (const item of flexibleViewItems) {\n            item.size = clamp(size, item.minimumSize, item.maximumSize);\n        }\n        const indexes = range(this.viewItems.length);\n        const lowPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 1 /* Low */);\n        const highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 2 /* High */);\n        this.relayout(lowPriorityIndexes, highPriorityIndexes);\n    }\n    /**\n     * Returns the size of a {@link IView view}.\n     */\n    getViewSize(index) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return -1;\n        }\n        return this.viewItems[index].size;\n    }\n    doAddView(view, size, index = this.viewItems.length, skipLayout) {\n        if (this.state !== State.Idle) {\n            throw new Error('Cant modify splitview');\n        }\n        this.state = State.Busy;\n        // Add view\n        const container = $('.split-view-view');\n        if (index === this.viewItems.length) {\n            this.viewContainer.appendChild(container);\n        }\n        else {\n            this.viewContainer.insertBefore(container, this.viewContainer.children.item(index));\n        }\n        const onChangeDisposable = view.onDidChange(size => this.onViewChange(item, size));\n        const containerDisposable = toDisposable(() => this.viewContainer.removeChild(container));\n        const disposable = combinedDisposable(onChangeDisposable, containerDisposable);\n        let viewSize;\n        if (typeof size === 'number') {\n            viewSize = size;\n        }\n        else if (size.type === 'split') {\n            viewSize = this.getViewSize(size.index) / 2;\n        }\n        else if (size.type === 'invisible') {\n            viewSize = { cachedVisibleSize: size.cachedVisibleSize };\n        }\n        else {\n            viewSize = view.minimumSize;\n        }\n        const item = this.orientation === 0 /* VERTICAL */\n            ? new VerticalViewItem(container, view, viewSize, disposable)\n            : new HorizontalViewItem(container, view, viewSize, disposable);\n        this.viewItems.splice(index, 0, item);\n        // Add sash\n        if (this.viewItems.length > 1) {\n            let opts = { orthogonalStartSash: this.orthogonalStartSash, orthogonalEndSash: this.orthogonalEndSash };\n            const sash = this.orientation === 0 /* VERTICAL */\n                ? new Sash(this.sashContainer, { getHorizontalSashTop: s => this.getSashPosition(s), getHorizontalSashWidth: this.getSashOrthogonalSize }, Object.assign(Object.assign({}, opts), { orientation: 1 /* HORIZONTAL */ }))\n                : new Sash(this.sashContainer, { getVerticalSashLeft: s => this.getSashPosition(s), getVerticalSashHeight: this.getSashOrthogonalSize }, Object.assign(Object.assign({}, opts), { orientation: 0 /* VERTICAL */ }));\n            const sashEventMapper = this.orientation === 0 /* VERTICAL */\n                ? (e) => ({ sash, start: e.startY, current: e.currentY, alt: e.altKey })\n                : (e) => ({ sash, start: e.startX, current: e.currentX, alt: e.altKey });\n            const onStart = Event.map(sash.onDidStart, sashEventMapper);\n            const onStartDisposable = onStart(this.onSashStart, this);\n            const onChange = Event.map(sash.onDidChange, sashEventMapper);\n            const onChangeDisposable = onChange(this.onSashChange, this);\n            const onEnd = Event.map(sash.onDidEnd, () => this.sashItems.findIndex(item => item.sash === sash));\n            const onEndDisposable = onEnd(this.onSashEnd, this);\n            const onDidResetDisposable = sash.onDidReset(() => {\n                const index = this.sashItems.findIndex(item => item.sash === sash);\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                if (typeof snapBeforeIndex === 'number' && !this.viewItems[snapBeforeIndex].visible) {\n                    return;\n                }\n                if (typeof snapAfterIndex === 'number' && !this.viewItems[snapAfterIndex].visible) {\n                    return;\n                }\n                this._onDidSashReset.fire(index);\n            });\n            const disposable = combinedDisposable(onStartDisposable, onChangeDisposable, onEndDisposable, onDidResetDisposable, sash);\n            const sashItem = { sash, disposable };\n            this.sashItems.splice(index - 1, 0, sashItem);\n        }\n        container.appendChild(view.element);\n        let highPriorityIndexes;\n        if (typeof size !== 'number' && size.type === 'split') {\n            highPriorityIndexes = [size.index];\n        }\n        if (!skipLayout) {\n            this.relayout([index], highPriorityIndexes);\n        }\n        this.state = State.Idle;\n        if (!skipLayout && typeof size !== 'number' && size.type === 'distribute') {\n            this.distributeViewSizes();\n        }\n    }\n    relayout(lowPriorityIndexes, highPriorityIndexes) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        this.resize(this.viewItems.length - 1, this.size - contentSize, undefined, lowPriorityIndexes, highPriorityIndexes);\n        this.distributeEmptySpace();\n        this.layoutViews();\n        this.saveProportions();\n    }\n    resize(index, delta, sizes = this.viewItems.map(i => i.size), lowPriorityIndexes, highPriorityIndexes, overloadMinDelta = Number.NEGATIVE_INFINITY, overloadMaxDelta = Number.POSITIVE_INFINITY, snapBefore, snapAfter) {\n        if (index < 0 || index >= this.viewItems.length) {\n            return 0;\n        }\n        const upIndexes = range(index, -1);\n        const downIndexes = range(index + 1, this.viewItems.length);\n        if (highPriorityIndexes) {\n            for (const index of highPriorityIndexes) {\n                pushToStart(upIndexes, index);\n                pushToStart(downIndexes, index);\n            }\n        }\n        if (lowPriorityIndexes) {\n            for (const index of lowPriorityIndexes) {\n                pushToEnd(upIndexes, index);\n                pushToEnd(downIndexes, index);\n            }\n        }\n        const upItems = upIndexes.map(i => this.viewItems[i]);\n        const upSizes = upIndexes.map(i => sizes[i]);\n        const downItems = downIndexes.map(i => this.viewItems[i]);\n        const downSizes = downIndexes.map(i => sizes[i]);\n        const minDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].minimumSize - sizes[i]), 0);\n        const maxDeltaUp = upIndexes.reduce((r, i) => r + (this.viewItems[i].maximumSize - sizes[i]), 0);\n        const maxDeltaDown = downIndexes.length === 0 ? Number.POSITIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].minimumSize), 0);\n        const minDeltaDown = downIndexes.length === 0 ? Number.NEGATIVE_INFINITY : downIndexes.reduce((r, i) => r + (sizes[i] - this.viewItems[i].maximumSize), 0);\n        const minDelta = Math.max(minDeltaUp, minDeltaDown, overloadMinDelta);\n        const maxDelta = Math.min(maxDeltaDown, maxDeltaUp, overloadMaxDelta);\n        let snapped = false;\n        if (snapBefore) {\n            const snapView = this.viewItems[snapBefore.index];\n            const visible = delta >= snapBefore.limitDelta;\n            snapped = visible !== snapView.visible;\n            snapView.setVisible(visible, snapBefore.size);\n        }\n        if (!snapped && snapAfter) {\n            const snapView = this.viewItems[snapAfter.index];\n            const visible = delta < snapAfter.limitDelta;\n            snapped = visible !== snapView.visible;\n            snapView.setVisible(visible, snapAfter.size);\n        }\n        if (snapped) {\n            return this.resize(index, delta, sizes, lowPriorityIndexes, highPriorityIndexes, overloadMinDelta, overloadMaxDelta);\n        }\n        delta = clamp(delta, minDelta, maxDelta);\n        for (let i = 0, deltaUp = delta; i < upItems.length; i++) {\n            const item = upItems[i];\n            const size = clamp(upSizes[i] + deltaUp, item.minimumSize, item.maximumSize);\n            const viewDelta = size - upSizes[i];\n            deltaUp -= viewDelta;\n            item.size = size;\n        }\n        for (let i = 0, deltaDown = delta; i < downItems.length; i++) {\n            const item = downItems[i];\n            const size = clamp(downSizes[i] - deltaDown, item.minimumSize, item.maximumSize);\n            const viewDelta = size - downSizes[i];\n            deltaDown += viewDelta;\n            item.size = size;\n        }\n        return delta;\n    }\n    distributeEmptySpace(lowPriorityIndex) {\n        const contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        let emptyDelta = this.size - contentSize;\n        const indexes = range(this.viewItems.length - 1, -1);\n        const lowPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 1 /* Low */);\n        const highPriorityIndexes = indexes.filter(i => this.viewItems[i].priority === 2 /* High */);\n        for (const index of highPriorityIndexes) {\n            pushToStart(indexes, index);\n        }\n        for (const index of lowPriorityIndexes) {\n            pushToEnd(indexes, index);\n        }\n        if (typeof lowPriorityIndex === 'number') {\n            pushToEnd(indexes, lowPriorityIndex);\n        }\n        for (let i = 0; emptyDelta !== 0 && i < indexes.length; i++) {\n            const item = this.viewItems[indexes[i]];\n            const size = clamp(item.size + emptyDelta, item.minimumSize, item.maximumSize);\n            const viewDelta = size - item.size;\n            emptyDelta -= viewDelta;\n            item.size = size;\n        }\n    }\n    layoutViews() {\n        // Save new content size\n        this.contentSize = this.viewItems.reduce((r, i) => r + i.size, 0);\n        // Layout views\n        let offset = 0;\n        for (const viewItem of this.viewItems) {\n            viewItem.layout(offset, this.layoutContext);\n            offset += viewItem.size;\n        }\n        // Layout sashes\n        this.sashItems.forEach(item => item.sash.layout());\n        this.updateSashEnablement();\n        this.updateScrollableElement();\n    }\n    updateScrollableElement() {\n        if (this.orientation === 0 /* VERTICAL */) {\n            this.scrollableElement.setScrollDimensions({\n                height: this.size,\n                scrollHeight: this.contentSize\n            });\n        }\n        else {\n            this.scrollableElement.setScrollDimensions({\n                width: this.size,\n                scrollWidth: this.contentSize\n            });\n        }\n    }\n    updateSashEnablement() {\n        let previous = false;\n        const collapsesDown = this.viewItems.map(i => previous = (i.size - i.minimumSize > 0) || previous);\n        previous = false;\n        const expandsDown = this.viewItems.map(i => previous = (i.maximumSize - i.size > 0) || previous);\n        const reverseViews = [...this.viewItems].reverse();\n        previous = false;\n        const collapsesUp = reverseViews.map(i => previous = (i.size - i.minimumSize > 0) || previous).reverse();\n        previous = false;\n        const expandsUp = reverseViews.map(i => previous = (i.maximumSize - i.size > 0) || previous).reverse();\n        let position = 0;\n        for (let index = 0; index < this.sashItems.length; index++) {\n            const { sash } = this.sashItems[index];\n            const viewItem = this.viewItems[index];\n            position += viewItem.size;\n            const min = !(collapsesDown[index] && expandsUp[index + 1]);\n            const max = !(expandsDown[index] && collapsesUp[index + 1]);\n            if (min && max) {\n                const upIndexes = range(index, -1);\n                const downIndexes = range(index + 1, this.viewItems.length);\n                const snapBeforeIndex = this.findFirstSnapIndex(upIndexes);\n                const snapAfterIndex = this.findFirstSnapIndex(downIndexes);\n                const snappedBefore = typeof snapBeforeIndex === 'number' && !this.viewItems[snapBeforeIndex].visible;\n                const snappedAfter = typeof snapAfterIndex === 'number' && !this.viewItems[snapAfterIndex].visible;\n                if (snappedBefore && collapsesUp[index] && (position > 0 || this.startSnappingEnabled)) {\n                    sash.state = 1 /* AtMinimum */;\n                }\n                else if (snappedAfter && collapsesDown[index] && (position < this.contentSize || this.endSnappingEnabled)) {\n                    sash.state = 2 /* AtMaximum */;\n                }\n                else {\n                    sash.state = 0 /* Disabled */;\n                }\n            }\n            else if (min && !max) {\n                sash.state = 1 /* AtMinimum */;\n            }\n            else if (!min && max) {\n                sash.state = 2 /* AtMaximum */;\n            }\n            else {\n                sash.state = 3 /* Enabled */;\n            }\n        }\n    }\n    getSashPosition(sash) {\n        let position = 0;\n        for (let i = 0; i < this.sashItems.length; i++) {\n            position += this.viewItems[i].size;\n            if (this.sashItems[i].sash === sash) {\n                return position;\n            }\n        }\n        return 0;\n    }\n    findFirstSnapIndex(indexes) {\n        // visible views first\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (!viewItem.visible) {\n                continue;\n            }\n            if (viewItem.snap) {\n                return index;\n            }\n        }\n        // then, hidden views\n        for (const index of indexes) {\n            const viewItem = this.viewItems[index];\n            if (viewItem.visible && viewItem.maximumSize - viewItem.minimumSize > 0) {\n                return undefined;\n            }\n            if (!viewItem.visible && viewItem.snap) {\n                return index;\n            }\n        }\n        return undefined;\n    }\n    dispose() {\n        super.dispose();\n        dispose(this.viewItems);\n        this.viewItems = [];\n        this.sashItems.forEach(i => i.disposable.dispose());\n        this.sashItems = [];\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { $, append, clearNode, createStyleSheet } from '../../dom.js';\nimport { List } from '../list/listWidget.js';\nimport { SplitView } from '../splitview/splitview.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { DisposableStore } from '../../../common/lifecycle.js';\nimport './table.css';\nclass TableListRenderer {\n    constructor(columns, renderers, getColumnSize) {\n        this.columns = columns;\n        this.getColumnSize = getColumnSize;\n        this.templateId = TableListRenderer.TemplateId;\n        this.renderedTemplates = new Set();\n        const rendererMap = new Map(renderers.map(r => [r.templateId, r]));\n        this.renderers = [];\n        for (const column of columns) {\n            const renderer = rendererMap.get(column.templateId);\n            if (!renderer) {\n                throw new Error(`Table cell renderer for template id ${column.templateId} not found.`);\n            }\n            this.renderers.push(renderer);\n        }\n    }\n    renderTemplate(container) {\n        const rowContainer = append(container, $('.monaco-table-tr'));\n        const cellContainers = [];\n        const cellTemplateData = [];\n        for (let i = 0; i < this.columns.length; i++) {\n            const renderer = this.renderers[i];\n            const cellContainer = append(rowContainer, $('.monaco-table-td', { 'data-col-index': i }));\n            cellContainer.style.width = `${this.getColumnSize(i)}px`;\n            cellContainers.push(cellContainer);\n            cellTemplateData.push(renderer.renderTemplate(cellContainer));\n        }\n        const result = { container, cellContainers, cellTemplateData };\n        this.renderedTemplates.add(result);\n        return result;\n    }\n    renderElement(element, index, templateData, height) {\n        for (let i = 0; i < this.columns.length; i++) {\n            const column = this.columns[i];\n            const cell = column.project(element);\n            const renderer = this.renderers[i];\n            renderer.renderElement(cell, index, templateData.cellTemplateData[i], height);\n        }\n    }\n    disposeElement(element, index, templateData, height) {\n        for (let i = 0; i < this.columns.length; i++) {\n            const renderer = this.renderers[i];\n            if (renderer.disposeElement) {\n                const column = this.columns[i];\n                const cell = column.project(element);\n                renderer.disposeElement(cell, index, templateData.cellTemplateData[i], height);\n            }\n        }\n    }\n    disposeTemplate(templateData) {\n        for (let i = 0; i < this.columns.length; i++) {\n            const renderer = this.renderers[i];\n            renderer.disposeTemplate(templateData.cellTemplateData[i]);\n        }\n        clearNode(templateData.container);\n        this.renderedTemplates.delete(templateData);\n    }\n    layoutColumn(index, size) {\n        for (const { cellContainers } of this.renderedTemplates) {\n            cellContainers[index].style.width = `${size}px`;\n        }\n    }\n}\nTableListRenderer.TemplateId = 'row';\nfunction asListVirtualDelegate(delegate) {\n    return {\n        getHeight(row) { return delegate.getHeight(row); },\n        getTemplateId() { return TableListRenderer.TemplateId; },\n    };\n}\nclass ColumnHeader {\n    constructor(column, index) {\n        this.column = column;\n        this.index = index;\n        this._onDidLayout = new Emitter();\n        this.onDidLayout = this._onDidLayout.event;\n        this.element = $('.monaco-table-th', { 'data-col-index': index, title: column.tooltip }, column.label);\n    }\n    get minimumSize() { var _a; return (_a = this.column.minimumWidth) !== null && _a !== void 0 ? _a : 120; }\n    get maximumSize() { var _a; return (_a = this.column.maximumWidth) !== null && _a !== void 0 ? _a : Number.POSITIVE_INFINITY; }\n    get onDidChange() { var _a; return (_a = this.column.onDidChangeWidthConstraints) !== null && _a !== void 0 ? _a : Event.None; }\n    layout(size) {\n        this._onDidLayout.fire([this.index, size]);\n    }\n}\nexport class Table {\n    constructor(user, container, virtualDelegate, columns, renderers, _options) {\n        this.virtualDelegate = virtualDelegate;\n        this.domId = `table_id_${++Table.InstanceCount}`;\n        this.disposables = new DisposableStore();\n        this.cachedWidth = 0;\n        this.cachedHeight = 0;\n        this.domNode = append(container, $(`.monaco-table.${this.domId}`));\n        const headers = columns.map((c, i) => new ColumnHeader(c, i));\n        const descriptor = {\n            size: headers.reduce((a, b) => a + b.column.weight, 0),\n            views: headers.map(view => ({ size: view.column.weight, view }))\n        };\n        this.splitview = this.disposables.add(new SplitView(this.domNode, {\n            orientation: 1 /* HORIZONTAL */,\n            scrollbarVisibility: 2 /* Hidden */,\n            getSashOrthogonalSize: () => this.cachedHeight,\n            descriptor\n        }));\n        this.splitview.el.style.height = `${virtualDelegate.headerRowHeight}px`;\n        this.splitview.el.style.lineHeight = `${virtualDelegate.headerRowHeight}px`;\n        const renderer = new TableListRenderer(columns, renderers, i => this.splitview.getViewSize(i));\n        this.list = this.disposables.add(new List(user, this.domNode, asListVirtualDelegate(virtualDelegate), [renderer], _options));\n        Event.any(...headers.map(h => h.onDidLayout))(([index, size]) => renderer.layoutColumn(index, size), null, this.disposables);\n        this.splitview.onDidSashReset(index => {\n            const totalWeight = columns.reduce((r, c) => r + c.weight, 0);\n            const size = columns[index].weight / totalWeight * this.cachedWidth;\n            this.splitview.resizeView(index, size);\n        }, null, this.disposables);\n        this.styleElement = createStyleSheet(this.domNode);\n        this.style({});\n    }\n    get onDidChangeFocus() { return this.list.onDidChangeFocus; }\n    get onDidChangeSelection() { return this.list.onDidChangeSelection; }\n    get onMouseDblClick() { return this.list.onMouseDblClick; }\n    get onPointer() { return this.list.onPointer; }\n    get onDidFocus() { return this.list.onDidFocus; }\n    get onDidDispose() { return this.list.onDidDispose; }\n    updateOptions(options) {\n        this.list.updateOptions(options);\n    }\n    splice(start, deleteCount, elements = []) {\n        this.list.splice(start, deleteCount, elements);\n    }\n    getHTMLElement() {\n        return this.domNode;\n    }\n    style(styles) {\n        const content = [];\n        content.push(`.monaco-table.${this.domId} > .monaco-split-view2 .monaco-sash.vertical::before {\n\t\t\ttop: ${this.virtualDelegate.headerRowHeight + 1}px;\n\t\t\theight: calc(100% - ${this.virtualDelegate.headerRowHeight}px);\n\t\t}`);\n        this.styleElement.textContent = content.join('\\n');\n        this.list.style(styles);\n    }\n    getSelectedElements() {\n        return this.list.getSelectedElements();\n    }\n    getSelection() {\n        return this.list.getSelection();\n    }\n    getFocus() {\n        return this.list.getFocus();\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\nTable.InstanceCount = 0;\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { DragAndDropData, StaticDND } from '../../dnd.js';\nimport { $, addDisposableListener, append, clearNode, createStyleSheet, getDomNodePagePosition, hasParentWithClass } from '../../dom.js';\nimport { DomEmitter } from '../../event.js';\nimport { StandardKeyboardEvent } from '../../keyboardEvent.js';\nimport { ElementsDragAndDropData } from '../list/listView.js';\nimport { DefaultKeyboardNavigationDelegate, isInputElement, isMonacoEditor, List, MouseController } from '../list/listWidget.js';\nimport { getVisibleState, isFilterResult } from './indexTreeModel.js';\nimport { TreeMouseEventTarget } from './tree.js';\nimport { distinct, equals, range } from '../../../common/arrays.js';\nimport { disposableTimeout } from '../../../common/async.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { SetMap } from '../../../common/collections.js';\nimport { Emitter, Event, EventBufferer, Relay } from '../../../common/event.js';\nimport { fuzzyScore, FuzzyScore } from '../../../common/filters.js';\nimport { Disposable, DisposableStore, dispose, toDisposable } from '../../../common/lifecycle.js';\nimport { clamp } from '../../../common/numbers.js';\nimport { isMacintosh } from '../../../common/platform.js';\nimport './media/tree.css';\nimport { localize } from '../../../../nls.js';\nclass TreeElementsDragAndDropData extends ElementsDragAndDropData {\n    constructor(data) {\n        super(data.elements.map(node => node.element));\n        this.data = data;\n    }\n}\nfunction asTreeDragAndDropData(data) {\n    if (data instanceof ElementsDragAndDropData) {\n        return new TreeElementsDragAndDropData(data);\n    }\n    return data;\n}\nclass TreeNodeListDragAndDrop {\n    constructor(modelProvider, dnd) {\n        this.modelProvider = modelProvider;\n        this.dnd = dnd;\n        this.autoExpandDisposable = Disposable.None;\n    }\n    getDragURI(node) {\n        return this.dnd.getDragURI(node.element);\n    }\n    getDragLabel(nodes, originalEvent) {\n        if (this.dnd.getDragLabel) {\n            return this.dnd.getDragLabel(nodes.map(node => node.element), originalEvent);\n        }\n        return undefined;\n    }\n    onDragStart(data, originalEvent) {\n        if (this.dnd.onDragStart) {\n            this.dnd.onDragStart(asTreeDragAndDropData(data), originalEvent);\n        }\n    }\n    onDragOver(data, targetNode, targetIndex, originalEvent, raw = true) {\n        const result = this.dnd.onDragOver(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n        const didChangeAutoExpandNode = this.autoExpandNode !== targetNode;\n        if (didChangeAutoExpandNode) {\n            this.autoExpandDisposable.dispose();\n            this.autoExpandNode = targetNode;\n        }\n        if (typeof targetNode === 'undefined') {\n            return result;\n        }\n        if (didChangeAutoExpandNode && typeof result !== 'boolean' && result.autoExpand) {\n            this.autoExpandDisposable = disposableTimeout(() => {\n                const model = this.modelProvider();\n                const ref = model.getNodeLocation(targetNode);\n                if (model.isCollapsed(ref)) {\n                    model.setCollapsed(ref, false);\n                }\n                this.autoExpandNode = undefined;\n            }, 500);\n        }\n        if (typeof result === 'boolean' || !result.accept || typeof result.bubble === 'undefined' || result.feedback) {\n            if (!raw) {\n                const accept = typeof result === 'boolean' ? result : result.accept;\n                const effect = typeof result === 'boolean' ? undefined : result.effect;\n                return { accept, effect, feedback: [targetIndex] };\n            }\n            return result;\n        }\n        if (result.bubble === 1 /* Up */) {\n            const model = this.modelProvider();\n            const ref = model.getNodeLocation(targetNode);\n            const parentRef = model.getParentNodeLocation(ref);\n            const parentNode = model.getNode(parentRef);\n            const parentIndex = parentRef && model.getListIndex(parentRef);\n            return this.onDragOver(data, parentNode, parentIndex, originalEvent, false);\n        }\n        const model = this.modelProvider();\n        const ref = model.getNodeLocation(targetNode);\n        const start = model.getListIndex(ref);\n        const length = model.getListRenderCount(ref);\n        return Object.assign(Object.assign({}, result), { feedback: range(start, start + length) });\n    }\n    drop(data, targetNode, targetIndex, originalEvent) {\n        this.autoExpandDisposable.dispose();\n        this.autoExpandNode = undefined;\n        this.dnd.drop(asTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n    }\n    onDragEnd(originalEvent) {\n        if (this.dnd.onDragEnd) {\n            this.dnd.onDragEnd(originalEvent);\n        }\n    }\n}\nfunction asListOptions(modelProvider, options) {\n    return options && Object.assign(Object.assign({}, options), { identityProvider: options.identityProvider && {\n            getId(el) {\n                return options.identityProvider.getId(el.element);\n            }\n        }, dnd: options.dnd && new TreeNodeListDragAndDrop(modelProvider, options.dnd), multipleSelectionController: options.multipleSelectionController && {\n            isSelectionSingleChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionSingleChangeEvent(Object.assign(Object.assign({}, e), { element: e.element }));\n            },\n            isSelectionRangeChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionRangeChangeEvent(Object.assign(Object.assign({}, e), { element: e.element }));\n            }\n        }, accessibilityProvider: options.accessibilityProvider && Object.assign(Object.assign({}, options.accessibilityProvider), { getSetSize(node) {\n                const model = modelProvider();\n                const ref = model.getNodeLocation(node);\n                const parentRef = model.getParentNodeLocation(ref);\n                const parentNode = model.getNode(parentRef);\n                return parentNode.visibleChildrenCount;\n            },\n            getPosInSet(node) {\n                return node.visibleChildIndex + 1;\n            }, isChecked: options.accessibilityProvider && options.accessibilityProvider.isChecked ? (node) => {\n                return options.accessibilityProvider.isChecked(node.element);\n            } : undefined, getRole: options.accessibilityProvider && options.accessibilityProvider.getRole ? (node) => {\n                return options.accessibilityProvider.getRole(node.element);\n            } : () => 'treeitem', getAriaLabel(e) {\n                return options.accessibilityProvider.getAriaLabel(e.element);\n            },\n            getWidgetAriaLabel() {\n                return options.accessibilityProvider.getWidgetAriaLabel();\n            }, getWidgetRole: options.accessibilityProvider && options.accessibilityProvider.getWidgetRole ? () => options.accessibilityProvider.getWidgetRole() : () => 'tree', getAriaLevel: options.accessibilityProvider && options.accessibilityProvider.getAriaLevel ? (node) => options.accessibilityProvider.getAriaLevel(node.element) : (node) => {\n                return node.depth;\n            }, getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && (node => {\n                return options.accessibilityProvider.getActiveDescendantId(node.element);\n            }) }), keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && Object.assign(Object.assign({}, options.keyboardNavigationLabelProvider), { getKeyboardNavigationLabel(node) {\n                return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(node.element);\n            } }), enableKeyboardNavigation: options.simpleKeyboardNavigation });\n}\nexport class ComposedTreeDelegate {\n    constructor(delegate) {\n        this.delegate = delegate;\n    }\n    getHeight(element) {\n        return this.delegate.getHeight(element.element);\n    }\n    getTemplateId(element) {\n        return this.delegate.getTemplateId(element.element);\n    }\n    hasDynamicHeight(element) {\n        return !!this.delegate.hasDynamicHeight && this.delegate.hasDynamicHeight(element.element);\n    }\n    setDynamicHeight(element, height) {\n        if (this.delegate.setDynamicHeight) {\n            this.delegate.setDynamicHeight(element.element, height);\n        }\n    }\n}\nexport var RenderIndentGuides;\n(function (RenderIndentGuides) {\n    RenderIndentGuides[\"None\"] = \"none\";\n    RenderIndentGuides[\"OnHover\"] = \"onHover\";\n    RenderIndentGuides[\"Always\"] = \"always\";\n})(RenderIndentGuides || (RenderIndentGuides = {}));\nclass EventCollection {\n    constructor(onDidChange, _elements = []) {\n        this._elements = _elements;\n        this.onDidChange = Event.forEach(onDidChange, elements => this._elements = elements);\n    }\n    get elements() {\n        return this._elements;\n    }\n}\nclass TreeRenderer {\n    constructor(renderer, modelProvider, onDidChangeCollapseState, activeNodes, options = {}) {\n        this.renderer = renderer;\n        this.modelProvider = modelProvider;\n        this.activeNodes = activeNodes;\n        this.renderedElements = new Map();\n        this.renderedNodes = new Map();\n        this.indent = TreeRenderer.DefaultIndent;\n        this.hideTwistiesOfChildlessElements = false;\n        this.shouldRenderIndentGuides = false;\n        this.renderedIndentGuides = new SetMap();\n        this.activeIndentNodes = new Set();\n        this.indentGuidesDisposable = Disposable.None;\n        this.disposables = new DisposableStore();\n        this.templateId = renderer.templateId;\n        this.updateOptions(options);\n        Event.map(onDidChangeCollapseState, e => e.node)(this.onDidChangeNodeTwistieState, this, this.disposables);\n        if (renderer.onDidChangeTwistieState) {\n            renderer.onDidChangeTwistieState(this.onDidChangeTwistieState, this, this.disposables);\n        }\n    }\n    updateOptions(options = {}) {\n        if (typeof options.indent !== 'undefined') {\n            this.indent = clamp(options.indent, 0, 40);\n        }\n        if (typeof options.renderIndentGuides !== 'undefined') {\n            const shouldRenderIndentGuides = options.renderIndentGuides !== RenderIndentGuides.None;\n            if (shouldRenderIndentGuides !== this.shouldRenderIndentGuides) {\n                this.shouldRenderIndentGuides = shouldRenderIndentGuides;\n                this.indentGuidesDisposable.dispose();\n                if (shouldRenderIndentGuides) {\n                    const disposables = new DisposableStore();\n                    this.activeNodes.onDidChange(this._onDidChangeActiveNodes, this, disposables);\n                    this.indentGuidesDisposable = disposables;\n                    this._onDidChangeActiveNodes(this.activeNodes.elements);\n                }\n            }\n        }\n        if (typeof options.hideTwistiesOfChildlessElements !== 'undefined') {\n            this.hideTwistiesOfChildlessElements = options.hideTwistiesOfChildlessElements;\n        }\n    }\n    renderTemplate(container) {\n        const el = append(container, $('.monaco-tl-row'));\n        const indent = append(el, $('.monaco-tl-indent'));\n        const twistie = append(el, $('.monaco-tl-twistie'));\n        const contents = append(el, $('.monaco-tl-contents'));\n        const templateData = this.renderer.renderTemplate(contents);\n        return { container, indent, twistie, indentGuidesDisposable: Disposable.None, templateData };\n    }\n    renderElement(node, index, templateData, height) {\n        if (typeof height === 'number') {\n            this.renderedNodes.set(node, { templateData, height });\n            this.renderedElements.set(node.element, node);\n        }\n        const indent = TreeRenderer.DefaultIndent + (node.depth - 1) * this.indent;\n        templateData.twistie.style.paddingLeft = `${indent}px`;\n        templateData.indent.style.width = `${indent + this.indent - 16}px`;\n        this.renderTwistie(node, templateData);\n        if (typeof height === 'number') {\n            this.renderIndentGuides(node, templateData);\n        }\n        this.renderer.renderElement(node, index, templateData.templateData, height);\n    }\n    disposeElement(node, index, templateData, height) {\n        templateData.indentGuidesDisposable.dispose();\n        if (this.renderer.disposeElement) {\n            this.renderer.disposeElement(node, index, templateData.templateData, height);\n        }\n        if (typeof height === 'number') {\n            this.renderedNodes.delete(node);\n            this.renderedElements.delete(node.element);\n        }\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.templateData);\n    }\n    onDidChangeTwistieState(element) {\n        const node = this.renderedElements.get(element);\n        if (!node) {\n            return;\n        }\n        this.onDidChangeNodeTwistieState(node);\n    }\n    onDidChangeNodeTwistieState(node) {\n        const data = this.renderedNodes.get(node);\n        if (!data) {\n            return;\n        }\n        this.renderTwistie(node, data.templateData);\n        this._onDidChangeActiveNodes(this.activeNodes.elements);\n        this.renderIndentGuides(node, data.templateData);\n    }\n    renderTwistie(node, templateData) {\n        templateData.twistie.classList.remove(...Codicon.treeItemExpanded.classNamesArray);\n        let twistieRendered = false;\n        if (this.renderer.renderTwistie) {\n            twistieRendered = this.renderer.renderTwistie(node.element, templateData.twistie);\n        }\n        if (node.collapsible && (!this.hideTwistiesOfChildlessElements || node.visibleChildrenCount > 0)) {\n            if (!twistieRendered) {\n                templateData.twistie.classList.add(...Codicon.treeItemExpanded.classNamesArray);\n            }\n            templateData.twistie.classList.add('collapsible');\n            templateData.twistie.classList.toggle('collapsed', node.collapsed);\n        }\n        else {\n            templateData.twistie.classList.remove('collapsible', 'collapsed');\n        }\n        if (node.collapsible) {\n            templateData.container.setAttribute('aria-expanded', String(!node.collapsed));\n        }\n        else {\n            templateData.container.removeAttribute('aria-expanded');\n        }\n    }\n    renderIndentGuides(target, templateData) {\n        clearNode(templateData.indent);\n        templateData.indentGuidesDisposable.dispose();\n        if (!this.shouldRenderIndentGuides) {\n            return;\n        }\n        const disposableStore = new DisposableStore();\n        const model = this.modelProvider();\n        let node = target;\n        while (true) {\n            const ref = model.getNodeLocation(node);\n            const parentRef = model.getParentNodeLocation(ref);\n            if (!parentRef) {\n                break;\n            }\n            const parent = model.getNode(parentRef);\n            const guide = $('.indent-guide', { style: `width: ${this.indent}px` });\n            if (this.activeIndentNodes.has(parent)) {\n                guide.classList.add('active');\n            }\n            if (templateData.indent.childElementCount === 0) {\n                templateData.indent.appendChild(guide);\n            }\n            else {\n                templateData.indent.insertBefore(guide, templateData.indent.firstElementChild);\n            }\n            this.renderedIndentGuides.add(parent, guide);\n            disposableStore.add(toDisposable(() => this.renderedIndentGuides.delete(parent, guide)));\n            node = parent;\n        }\n        templateData.indentGuidesDisposable = disposableStore;\n    }\n    _onDidChangeActiveNodes(nodes) {\n        if (!this.shouldRenderIndentGuides) {\n            return;\n        }\n        const set = new Set();\n        const model = this.modelProvider();\n        nodes.forEach(node => {\n            const ref = model.getNodeLocation(node);\n            try {\n                const parentRef = model.getParentNodeLocation(ref);\n                if (node.collapsible && node.children.length > 0 && !node.collapsed) {\n                    set.add(node);\n                }\n                else if (parentRef) {\n                    set.add(model.getNode(parentRef));\n                }\n            }\n            catch (_a) {\n                // noop\n            }\n        });\n        this.activeIndentNodes.forEach(node => {\n            if (!set.has(node)) {\n                this.renderedIndentGuides.forEach(node, line => line.classList.remove('active'));\n            }\n        });\n        set.forEach(node => {\n            if (!this.activeIndentNodes.has(node)) {\n                this.renderedIndentGuides.forEach(node, line => line.classList.add('active'));\n            }\n        });\n        this.activeIndentNodes = set;\n    }\n    dispose() {\n        this.renderedNodes.clear();\n        this.renderedElements.clear();\n        this.indentGuidesDisposable.dispose();\n        dispose(this.disposables);\n    }\n}\nTreeRenderer.DefaultIndent = 8;\nclass TypeFilter {\n    constructor(tree, keyboardNavigationLabelProvider, _filter) {\n        this.tree = tree;\n        this.keyboardNavigationLabelProvider = keyboardNavigationLabelProvider;\n        this._filter = _filter;\n        this._totalCount = 0;\n        this._matchCount = 0;\n        this._pattern = '';\n        this._lowercasePattern = '';\n        this.disposables = new DisposableStore();\n        tree.onWillRefilter(this.reset, this, this.disposables);\n    }\n    get totalCount() { return this._totalCount; }\n    get matchCount() { return this._matchCount; }\n    set pattern(pattern) {\n        this._pattern = pattern;\n        this._lowercasePattern = pattern.toLowerCase();\n    }\n    filter(element, parentVisibility) {\n        if (this._filter) {\n            const result = this._filter.filter(element, parentVisibility);\n            if (this.tree.options.simpleKeyboardNavigation) {\n                return result;\n            }\n            let visibility;\n            if (typeof result === 'boolean') {\n                visibility = result ? 1 /* Visible */ : 0 /* Hidden */;\n            }\n            else if (isFilterResult(result)) {\n                visibility = getVisibleState(result.visibility);\n            }\n            else {\n                visibility = result;\n            }\n            if (visibility === 0 /* Hidden */) {\n                return false;\n            }\n        }\n        this._totalCount++;\n        if (this.tree.options.simpleKeyboardNavigation || !this._pattern) {\n            this._matchCount++;\n            return { data: FuzzyScore.Default, visibility: true };\n        }\n        const label = this.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(element);\n        const labels = Array.isArray(label) ? label : [label];\n        for (const l of labels) {\n            const labelStr = l && l.toString();\n            if (typeof labelStr === 'undefined') {\n                return { data: FuzzyScore.Default, visibility: true };\n            }\n            const score = fuzzyScore(this._pattern, this._lowercasePattern, 0, labelStr, labelStr.toLowerCase(), 0, true);\n            if (score) {\n                this._matchCount++;\n                return labels.length === 1 ?\n                    { data: score, visibility: true } :\n                    { data: { label: labelStr, score: score }, visibility: true };\n            }\n        }\n        if (this.tree.options.filterOnType) {\n            return 2 /* Recurse */;\n        }\n        else {\n            return { data: FuzzyScore.Default, visibility: true };\n        }\n    }\n    reset() {\n        this._totalCount = 0;\n        this._matchCount = 0;\n    }\n    dispose() {\n        dispose(this.disposables);\n    }\n}\nclass TypeFilterController {\n    constructor(tree, model, view, filter, keyboardNavigationDelegate) {\n        this.tree = tree;\n        this.view = view;\n        this.filter = filter;\n        this.keyboardNavigationDelegate = keyboardNavigationDelegate;\n        this._enabled = false;\n        this._pattern = '';\n        this._empty = false;\n        this._onDidChangeEmptyState = new Emitter();\n        this.positionClassName = 'ne';\n        this.automaticKeyboardNavigation = true;\n        this.triggered = false;\n        this._onDidChangePattern = new Emitter();\n        this.enabledDisposables = new DisposableStore();\n        this.disposables = new DisposableStore();\n        this.domNode = $(`.monaco-list-type-filter.${this.positionClassName}`);\n        this.domNode.draggable = true;\n        this.disposables.add(addDisposableListener(this.domNode, 'dragstart', () => this.onDragStart()));\n        this.messageDomNode = append(view.getHTMLElement(), $(`.monaco-list-type-filter-message`));\n        this.labelDomNode = append(this.domNode, $('span.label'));\n        const controls = append(this.domNode, $('.controls'));\n        this._filterOnType = !!tree.options.filterOnType;\n        this.filterOnTypeDomNode = append(controls, $('input.filter'));\n        this.filterOnTypeDomNode.type = 'checkbox';\n        this.filterOnTypeDomNode.checked = this._filterOnType;\n        this.filterOnTypeDomNode.tabIndex = -1;\n        this.updateFilterOnTypeTitleAndIcon();\n        this.disposables.add(addDisposableListener(this.filterOnTypeDomNode, 'input', () => this.onDidChangeFilterOnType()));\n        this.clearDomNode = append(controls, $('button.clear' + Codicon.treeFilterClear.cssSelector));\n        this.clearDomNode.tabIndex = -1;\n        this.clearDomNode.title = localize('clear', \"Clear\");\n        this.keyboardNavigationEventFilter = tree.options.keyboardNavigationEventFilter;\n        model.onDidSplice(this.onDidSpliceModel, this, this.disposables);\n        this.updateOptions(tree.options);\n    }\n    get enabled() { return this._enabled; }\n    get pattern() { return this._pattern; }\n    get filterOnType() { return this._filterOnType; }\n    updateOptions(options) {\n        if (options.simpleKeyboardNavigation) {\n            this.disable();\n        }\n        else {\n            this.enable();\n        }\n        if (typeof options.filterOnType !== 'undefined') {\n            this._filterOnType = !!options.filterOnType;\n            this.filterOnTypeDomNode.checked = this._filterOnType;\n            this.updateFilterOnTypeTitleAndIcon();\n        }\n        if (typeof options.automaticKeyboardNavigation !== 'undefined') {\n            this.automaticKeyboardNavigation = options.automaticKeyboardNavigation;\n        }\n        this.tree.refilter();\n        this.render();\n        if (!this.automaticKeyboardNavigation) {\n            this.onEventOrInput('');\n        }\n    }\n    enable() {\n        if (this._enabled) {\n            return;\n        }\n        const onRawKeyDown = this.enabledDisposables.add(new DomEmitter(this.view.getHTMLElement(), 'keydown'));\n        const onKeyDown = Event.chain(onRawKeyDown.event)\n            .filter(e => !isInputElement(e.target) || e.target === this.filterOnTypeDomNode)\n            .filter(e => e.key !== 'Dead' && !/^Media/.test(e.key))\n            .map(e => new StandardKeyboardEvent(e))\n            .filter(this.keyboardNavigationEventFilter || (() => true))\n            .filter(() => this.automaticKeyboardNavigation || this.triggered)\n            .filter(e => (this.keyboardNavigationDelegate.mightProducePrintableCharacter(e) && !(e.keyCode === 18 /* DownArrow */ || e.keyCode === 16 /* UpArrow */ || e.keyCode === 15 /* LeftArrow */ || e.keyCode === 17 /* RightArrow */)) || ((this.pattern.length > 0 || this.triggered) && ((e.keyCode === 9 /* Escape */ || e.keyCode === 1 /* Backspace */) && !e.altKey && !e.ctrlKey && !e.metaKey) || (e.keyCode === 1 /* Backspace */ && (isMacintosh ? (e.altKey && !e.metaKey) : e.ctrlKey) && !e.shiftKey)))\n            .forEach(e => { e.stopPropagation(); e.preventDefault(); })\n            .event;\n        const onClearClick = this.enabledDisposables.add(new DomEmitter(this.clearDomNode, 'click'));\n        Event.chain(Event.any(onKeyDown, onClearClick.event))\n            .event(this.onEventOrInput, this, this.enabledDisposables);\n        this.filter.pattern = '';\n        this.tree.refilter();\n        this.render();\n        this._enabled = true;\n        this.triggered = false;\n    }\n    disable() {\n        if (!this._enabled) {\n            return;\n        }\n        this.domNode.remove();\n        this.enabledDisposables.clear();\n        this.tree.refilter();\n        this.render();\n        this._enabled = false;\n        this.triggered = false;\n    }\n    onEventOrInput(e) {\n        if (typeof e === 'string') {\n            this.onInput(e);\n        }\n        else if (e instanceof MouseEvent || e.keyCode === 9 /* Escape */ || (e.keyCode === 1 /* Backspace */ && (isMacintosh ? e.altKey : e.ctrlKey))) {\n            this.onInput('');\n        }\n        else if (e.keyCode === 1 /* Backspace */) {\n            this.onInput(this.pattern.length === 0 ? '' : this.pattern.substr(0, this.pattern.length - 1));\n        }\n        else {\n            this.onInput(this.pattern + e.browserEvent.key);\n        }\n    }\n    onInput(pattern) {\n        const container = this.view.getHTMLElement();\n        if (pattern && !this.domNode.parentElement) {\n            container.append(this.domNode);\n        }\n        else if (!pattern && this.domNode.parentElement) {\n            this.domNode.remove();\n            this.tree.domFocus();\n        }\n        this._pattern = pattern;\n        this._onDidChangePattern.fire(pattern);\n        this.filter.pattern = pattern;\n        this.tree.refilter();\n        if (pattern) {\n            this.tree.focusNext(0, true, undefined, node => !FuzzyScore.isDefault(node.filterData));\n        }\n        const focus = this.tree.getFocus();\n        if (focus.length > 0) {\n            const element = focus[0];\n            if (this.tree.getRelativeTop(element) === null) {\n                this.tree.reveal(element, 0.5);\n            }\n        }\n        this.render();\n        if (!pattern) {\n            this.triggered = false;\n        }\n    }\n    onDragStart() {\n        const container = this.view.getHTMLElement();\n        const { left } = getDomNodePagePosition(container);\n        const containerWidth = container.clientWidth;\n        const midContainerWidth = containerWidth / 2;\n        const width = this.domNode.clientWidth;\n        const disposables = new DisposableStore();\n        let positionClassName = this.positionClassName;\n        const updatePosition = () => {\n            switch (positionClassName) {\n                case 'nw':\n                    this.domNode.style.top = `4px`;\n                    this.domNode.style.left = `4px`;\n                    break;\n                case 'ne':\n                    this.domNode.style.top = `4px`;\n                    this.domNode.style.left = `${containerWidth - width - 6}px`;\n                    break;\n            }\n        };\n        const onDragOver = (event) => {\n            event.preventDefault(); // needed so that the drop event fires (https://stackoverflow.com/questions/21339924/drop-event-not-firing-in-chrome)\n            const x = event.clientX - left;\n            if (event.dataTransfer) {\n                event.dataTransfer.dropEffect = 'none';\n            }\n            if (x < midContainerWidth) {\n                positionClassName = 'nw';\n            }\n            else {\n                positionClassName = 'ne';\n            }\n            updatePosition();\n        };\n        const onDragEnd = () => {\n            this.positionClassName = positionClassName;\n            this.domNode.className = `monaco-list-type-filter ${this.positionClassName}`;\n            this.domNode.style.top = '';\n            this.domNode.style.left = '';\n            dispose(disposables);\n        };\n        updatePosition();\n        this.domNode.classList.remove(positionClassName);\n        this.domNode.classList.add('dragging');\n        disposables.add(toDisposable(() => this.domNode.classList.remove('dragging')));\n        disposables.add(addDisposableListener(document, 'dragover', e => onDragOver(e)));\n        disposables.add(addDisposableListener(this.domNode, 'dragend', () => onDragEnd()));\n        StaticDND.CurrentDragAndDropData = new DragAndDropData('vscode-ui');\n        disposables.add(toDisposable(() => StaticDND.CurrentDragAndDropData = undefined));\n    }\n    onDidSpliceModel() {\n        if (!this._enabled || this.pattern.length === 0) {\n            return;\n        }\n        this.tree.refilter();\n        this.render();\n    }\n    onDidChangeFilterOnType() {\n        this.tree.updateOptions({ filterOnType: this.filterOnTypeDomNode.checked });\n        this.tree.refilter();\n        this.tree.domFocus();\n        this.render();\n        this.updateFilterOnTypeTitleAndIcon();\n    }\n    updateFilterOnTypeTitleAndIcon() {\n        if (this.filterOnType) {\n            this.filterOnTypeDomNode.classList.remove(...Codicon.treeFilterOnTypeOff.classNamesArray);\n            this.filterOnTypeDomNode.classList.add(...Codicon.treeFilterOnTypeOn.classNamesArray);\n            this.filterOnTypeDomNode.title = localize('disable filter on type', \"Disable Filter on Type\");\n        }\n        else {\n            this.filterOnTypeDomNode.classList.remove(...Codicon.treeFilterOnTypeOn.classNamesArray);\n            this.filterOnTypeDomNode.classList.add(...Codicon.treeFilterOnTypeOff.classNamesArray);\n            this.filterOnTypeDomNode.title = localize('enable filter on type', \"Enable Filter on Type\");\n        }\n    }\n    render() {\n        const noMatches = this.filter.totalCount > 0 && this.filter.matchCount === 0;\n        if (this.pattern && this.tree.options.filterOnType && noMatches) {\n            this.messageDomNode.textContent = localize('empty', \"No elements found\");\n            this._empty = true;\n        }\n        else {\n            this.messageDomNode.innerText = '';\n            this._empty = false;\n        }\n        this.domNode.classList.toggle('no-matches', noMatches);\n        this.domNode.title = localize('found', \"Matched {0} out of {1} elements\", this.filter.matchCount, this.filter.totalCount);\n        this.labelDomNode.textContent = this.pattern.length > 16 ? '…' + this.pattern.substr(this.pattern.length - 16) : this.pattern;\n        this._onDidChangeEmptyState.fire(this._empty);\n    }\n    shouldAllowFocus(node) {\n        if (!this.enabled || !this.pattern || this.filterOnType) {\n            return true;\n        }\n        if (this.filter.totalCount > 0 && this.filter.matchCount <= 1) {\n            return true;\n        }\n        return !FuzzyScore.isDefault(node.filterData);\n    }\n    dispose() {\n        if (this._enabled) {\n            this.domNode.remove();\n            this.enabledDisposables.dispose();\n            this._enabled = false;\n            this.triggered = false;\n        }\n        this._onDidChangePattern.dispose();\n        dispose(this.disposables);\n    }\n}\nfunction asTreeMouseEvent(event) {\n    let target = TreeMouseEventTarget.Unknown;\n    if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-twistie', 'monaco-tl-row')) {\n        target = TreeMouseEventTarget.Twistie;\n    }\n    else if (hasParentWithClass(event.browserEvent.target, 'monaco-tl-contents', 'monaco-tl-row')) {\n        target = TreeMouseEventTarget.Element;\n    }\n    return {\n        browserEvent: event.browserEvent,\n        element: event.element ? event.element.element : null,\n        target\n    };\n}\nfunction dfs(node, fn) {\n    fn(node);\n    node.children.forEach(child => dfs(child, fn));\n}\n/**\n * The trait concept needs to exist at the tree level, because collapsed\n * tree nodes will not be known by the list.\n */\nclass Trait {\n    constructor(getFirstViewElementWithTrait, identityProvider) {\n        this.getFirstViewElementWithTrait = getFirstViewElementWithTrait;\n        this.identityProvider = identityProvider;\n        this.nodes = [];\n        this._onDidChange = new Emitter();\n        this.onDidChange = this._onDidChange.event;\n    }\n    get nodeSet() {\n        if (!this._nodeSet) {\n            this._nodeSet = this.createNodeSet();\n        }\n        return this._nodeSet;\n    }\n    set(nodes, browserEvent) {\n        if (!(browserEvent === null || browserEvent === void 0 ? void 0 : browserEvent.__forceEvent) && equals(this.nodes, nodes)) {\n            return;\n        }\n        this._set(nodes, false, browserEvent);\n    }\n    _set(nodes, silent, browserEvent) {\n        this.nodes = [...nodes];\n        this.elements = undefined;\n        this._nodeSet = undefined;\n        if (!silent) {\n            const that = this;\n            this._onDidChange.fire({ get elements() { return that.get(); }, browserEvent });\n        }\n    }\n    get() {\n        if (!this.elements) {\n            this.elements = this.nodes.map(node => node.element);\n        }\n        return [...this.elements];\n    }\n    getNodes() {\n        return this.nodes;\n    }\n    has(node) {\n        return this.nodeSet.has(node);\n    }\n    onDidModelSplice({ insertedNodes, deletedNodes }) {\n        if (!this.identityProvider) {\n            const set = this.createNodeSet();\n            const visit = (node) => set.delete(node);\n            deletedNodes.forEach(node => dfs(node, visit));\n            this.set([...set.values()]);\n            return;\n        }\n        const deletedNodesIdSet = new Set();\n        const deletedNodesVisitor = (node) => deletedNodesIdSet.add(this.identityProvider.getId(node.element).toString());\n        deletedNodes.forEach(node => dfs(node, deletedNodesVisitor));\n        const insertedNodesMap = new Map();\n        const insertedNodesVisitor = (node) => insertedNodesMap.set(this.identityProvider.getId(node.element).toString(), node);\n        insertedNodes.forEach(node => dfs(node, insertedNodesVisitor));\n        const nodes = [];\n        for (const node of this.nodes) {\n            const id = this.identityProvider.getId(node.element).toString();\n            const wasDeleted = deletedNodesIdSet.has(id);\n            if (!wasDeleted) {\n                nodes.push(node);\n            }\n            else {\n                const insertedNode = insertedNodesMap.get(id);\n                if (insertedNode) {\n                    nodes.push(insertedNode);\n                }\n            }\n        }\n        if (this.nodes.length > 0 && nodes.length === 0) {\n            const node = this.getFirstViewElementWithTrait();\n            if (node) {\n                nodes.push(node);\n            }\n        }\n        this._set(nodes, true);\n    }\n    createNodeSet() {\n        const set = new Set();\n        for (const node of this.nodes) {\n            set.add(node);\n        }\n        return set;\n    }\n}\nclass TreeNodeListMouseController extends MouseController {\n    constructor(list, tree) {\n        super(list);\n        this.tree = tree;\n    }\n    onViewPointer(e) {\n        if (isInputElement(e.browserEvent.target) || isMonacoEditor(e.browserEvent.target)) {\n            return;\n        }\n        const node = e.element;\n        if (!node) {\n            return super.onViewPointer(e);\n        }\n        if (this.isSelectionRangeChangeEvent(e) || this.isSelectionSingleChangeEvent(e)) {\n            return super.onViewPointer(e);\n        }\n        const target = e.browserEvent.target;\n        const onTwistie = target.classList.contains('monaco-tl-twistie')\n            || (target.classList.contains('monaco-icon-label') && target.classList.contains('folder-icon') && e.browserEvent.offsetX < 16);\n        let expandOnlyOnTwistieClick = false;\n        if (typeof this.tree.expandOnlyOnTwistieClick === 'function') {\n            expandOnlyOnTwistieClick = this.tree.expandOnlyOnTwistieClick(node.element);\n        }\n        else {\n            expandOnlyOnTwistieClick = !!this.tree.expandOnlyOnTwistieClick;\n        }\n        if (expandOnlyOnTwistieClick && !onTwistie && e.browserEvent.detail !== 2) {\n            return super.onViewPointer(e);\n        }\n        if (!this.tree.expandOnDoubleClick && e.browserEvent.detail === 2) {\n            return super.onViewPointer(e);\n        }\n        if (node.collapsible) {\n            const model = this.tree.model; // internal\n            const location = model.getNodeLocation(node);\n            const recursive = e.browserEvent.altKey;\n            this.tree.setFocus([location]);\n            model.setCollapsed(location, undefined, recursive);\n            if (expandOnlyOnTwistieClick && onTwistie) {\n                return;\n            }\n        }\n        super.onViewPointer(e);\n    }\n    onDoubleClick(e) {\n        const onTwistie = e.browserEvent.target.classList.contains('monaco-tl-twistie');\n        if (onTwistie || !this.tree.expandOnDoubleClick) {\n            return;\n        }\n        super.onDoubleClick(e);\n    }\n}\n/**\n * We use this List subclass to restore selection and focus as nodes\n * get rendered in the list, possibly due to a node expand() call.\n */\nclass TreeNodeList extends List {\n    constructor(user, container, virtualDelegate, renderers, focusTrait, selectionTrait, anchorTrait, options) {\n        super(user, container, virtualDelegate, renderers, options);\n        this.focusTrait = focusTrait;\n        this.selectionTrait = selectionTrait;\n        this.anchorTrait = anchorTrait;\n    }\n    createMouseController(options) {\n        return new TreeNodeListMouseController(this, options.tree);\n    }\n    splice(start, deleteCount, elements = []) {\n        super.splice(start, deleteCount, elements);\n        if (elements.length === 0) {\n            return;\n        }\n        const additionalFocus = [];\n        const additionalSelection = [];\n        let anchor;\n        elements.forEach((node, index) => {\n            if (this.focusTrait.has(node)) {\n                additionalFocus.push(start + index);\n            }\n            if (this.selectionTrait.has(node)) {\n                additionalSelection.push(start + index);\n            }\n            if (this.anchorTrait.has(node)) {\n                anchor = start + index;\n            }\n        });\n        if (additionalFocus.length > 0) {\n            super.setFocus(distinct([...super.getFocus(), ...additionalFocus]));\n        }\n        if (additionalSelection.length > 0) {\n            super.setSelection(distinct([...super.getSelection(), ...additionalSelection]));\n        }\n        if (typeof anchor === 'number') {\n            super.setAnchor(anchor);\n        }\n    }\n    setFocus(indexes, browserEvent, fromAPI = false) {\n        super.setFocus(indexes, browserEvent);\n        if (!fromAPI) {\n            this.focusTrait.set(indexes.map(i => this.element(i)), browserEvent);\n        }\n    }\n    setSelection(indexes, browserEvent, fromAPI = false) {\n        super.setSelection(indexes, browserEvent);\n        if (!fromAPI) {\n            this.selectionTrait.set(indexes.map(i => this.element(i)), browserEvent);\n        }\n    }\n    setAnchor(index, fromAPI = false) {\n        super.setAnchor(index);\n        if (!fromAPI) {\n            if (typeof index === 'undefined') {\n                this.anchorTrait.set([]);\n            }\n            else {\n                this.anchorTrait.set([this.element(index)]);\n            }\n        }\n    }\n}\nexport class AbstractTree {\n    constructor(_user, container, delegate, renderers, _options = {}) {\n        this._user = _user;\n        this._options = _options;\n        this.eventBufferer = new EventBufferer();\n        this.disposables = new DisposableStore();\n        this._onWillRefilter = new Emitter();\n        this.onWillRefilter = this._onWillRefilter.event;\n        this._onDidUpdateOptions = new Emitter();\n        const treeDelegate = new ComposedTreeDelegate(delegate);\n        const onDidChangeCollapseStateRelay = new Relay();\n        const onDidChangeActiveNodes = new Relay();\n        const activeNodes = new EventCollection(onDidChangeActiveNodes.event);\n        this.renderers = renderers.map(r => new TreeRenderer(r, () => this.model, onDidChangeCollapseStateRelay.event, activeNodes, _options));\n        for (let r of this.renderers) {\n            this.disposables.add(r);\n        }\n        let filter;\n        if (_options.keyboardNavigationLabelProvider) {\n            filter = new TypeFilter(this, _options.keyboardNavigationLabelProvider, _options.filter);\n            _options = Object.assign(Object.assign({}, _options), { filter: filter }); // TODO need typescript help here\n            this.disposables.add(filter);\n        }\n        this.focus = new Trait(() => this.view.getFocusedElements()[0], _options.identityProvider);\n        this.selection = new Trait(() => this.view.getSelectedElements()[0], _options.identityProvider);\n        this.anchor = new Trait(() => this.view.getAnchorElement(), _options.identityProvider);\n        this.view = new TreeNodeList(_user, container, treeDelegate, this.renderers, this.focus, this.selection, this.anchor, Object.assign(Object.assign({}, asListOptions(() => this.model, _options)), { tree: this }));\n        this.model = this.createModel(_user, this.view, _options);\n        onDidChangeCollapseStateRelay.input = this.model.onDidChangeCollapseState;\n        const onDidModelSplice = Event.forEach(this.model.onDidSplice, e => {\n            this.eventBufferer.bufferEvents(() => {\n                this.focus.onDidModelSplice(e);\n                this.selection.onDidModelSplice(e);\n            });\n        });\n        // Make sure the `forEach` always runs\n        onDidModelSplice(() => null, null, this.disposables);\n        // Active nodes can change when the model changes or when focus or selection change.\n        // We debounce it with 0 delay since these events may fire in the same stack and we only\n        // want to run this once. It also doesn't matter if it runs on the next tick since it's only\n        // a nice to have UI feature.\n        onDidChangeActiveNodes.input = Event.chain(Event.any(onDidModelSplice, this.focus.onDidChange, this.selection.onDidChange))\n            .debounce(() => null, 0)\n            .map(() => {\n            const set = new Set();\n            for (const node of this.focus.getNodes()) {\n                set.add(node);\n            }\n            for (const node of this.selection.getNodes()) {\n                set.add(node);\n            }\n            return [...set.values()];\n        }).event;\n        if (_options.keyboardSupport !== false) {\n            const onKeyDown = Event.chain(this.view.onKeyDown)\n                .filter(e => !isInputElement(e.target))\n                .map(e => new StandardKeyboardEvent(e));\n            onKeyDown.filter(e => e.keyCode === 15 /* LeftArrow */).on(this.onLeftArrow, this, this.disposables);\n            onKeyDown.filter(e => e.keyCode === 17 /* RightArrow */).on(this.onRightArrow, this, this.disposables);\n            onKeyDown.filter(e => e.keyCode === 10 /* Space */).on(this.onSpace, this, this.disposables);\n        }\n        if (_options.keyboardNavigationLabelProvider) {\n            const delegate = _options.keyboardNavigationDelegate || DefaultKeyboardNavigationDelegate;\n            this.typeFilterController = new TypeFilterController(this, this.model, this.view, filter, delegate);\n            this.focusNavigationFilter = node => this.typeFilterController.shouldAllowFocus(node);\n            this.disposables.add(this.typeFilterController);\n        }\n        this.styleElement = createStyleSheet(this.view.getHTMLElement());\n        this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n    }\n    get onDidChangeFocus() { return this.eventBufferer.wrapEvent(this.focus.onDidChange); }\n    get onDidChangeSelection() { return this.eventBufferer.wrapEvent(this.selection.onDidChange); }\n    get onMouseDblClick() { return Event.map(this.view.onMouseDblClick, asTreeMouseEvent); }\n    get onPointer() { return Event.map(this.view.onPointer, asTreeMouseEvent); }\n    get onDidFocus() { return this.view.onDidFocus; }\n    get onDidChangeModel() { return Event.signal(this.model.onDidSplice); }\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\n    get expandOnDoubleClick() { return typeof this._options.expandOnDoubleClick === 'undefined' ? true : this._options.expandOnDoubleClick; }\n    get expandOnlyOnTwistieClick() { return typeof this._options.expandOnlyOnTwistieClick === 'undefined' ? true : this._options.expandOnlyOnTwistieClick; }\n    get onDidDispose() { return this.view.onDidDispose; }\n    updateOptions(optionsUpdate = {}) {\n        this._options = Object.assign(Object.assign({}, this._options), optionsUpdate);\n        for (const renderer of this.renderers) {\n            renderer.updateOptions(optionsUpdate);\n        }\n        this.view.updateOptions(Object.assign(Object.assign({}, this._options), { enableKeyboardNavigation: this._options.simpleKeyboardNavigation }));\n        if (this.typeFilterController) {\n            this.typeFilterController.updateOptions(this._options);\n        }\n        this._onDidUpdateOptions.fire(this._options);\n        this.getHTMLElement().classList.toggle('always', this._options.renderIndentGuides === RenderIndentGuides.Always);\n    }\n    get options() {\n        return this._options;\n    }\n    // Widget\n    getHTMLElement() {\n        return this.view.getHTMLElement();\n    }\n    get scrollTop() {\n        return this.view.scrollTop;\n    }\n    set scrollTop(scrollTop) {\n        this.view.scrollTop = scrollTop;\n    }\n    domFocus() {\n        this.view.domFocus();\n    }\n    layout(height, width) {\n        this.view.layout(height, width);\n    }\n    style(styles) {\n        const suffix = `.${this.view.domId}`;\n        const content = [];\n        if (styles.treeIndentGuidesStroke) {\n            content.push(`.monaco-list${suffix}:hover .monaco-tl-indent > .indent-guide, .monaco-list${suffix}.always .monaco-tl-indent > .indent-guide  { border-color: ${styles.treeIndentGuidesStroke.transparent(0.4)}; }`);\n            content.push(`.monaco-list${suffix} .monaco-tl-indent > .indent-guide.active { border-color: ${styles.treeIndentGuidesStroke}; }`);\n        }\n        this.styleElement.textContent = content.join('\\n');\n        this.view.style(styles);\n    }\n    // Tree navigation\n    getParentElement(location) {\n        const parentRef = this.model.getParentNodeLocation(location);\n        const parentNode = this.model.getNode(parentRef);\n        return parentNode.element;\n    }\n    getFirstElementChild(location) {\n        return this.model.getFirstElementChild(location);\n    }\n    // Tree\n    getNode(location) {\n        return this.model.getNode(location);\n    }\n    collapse(location, recursive = false) {\n        return this.model.setCollapsed(location, true, recursive);\n    }\n    expand(location, recursive = false) {\n        return this.model.setCollapsed(location, false, recursive);\n    }\n    isCollapsible(location) {\n        return this.model.isCollapsible(location);\n    }\n    setCollapsible(location, collapsible) {\n        return this.model.setCollapsible(location, collapsible);\n    }\n    isCollapsed(location) {\n        return this.model.isCollapsed(location);\n    }\n    refilter() {\n        this._onWillRefilter.fire(undefined);\n        this.model.refilter();\n    }\n    setSelection(elements, browserEvent) {\n        const nodes = elements.map(e => this.model.getNode(e));\n        this.selection.set(nodes, browserEvent);\n        const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n        this.view.setSelection(indexes, browserEvent, true);\n    }\n    getSelection() {\n        return this.selection.get();\n    }\n    setFocus(elements, browserEvent) {\n        const nodes = elements.map(e => this.model.getNode(e));\n        this.focus.set(nodes, browserEvent);\n        const indexes = elements.map(e => this.model.getListIndex(e)).filter(i => i > -1);\n        this.view.setFocus(indexes, browserEvent, true);\n    }\n    focusNext(n = 1, loop = false, browserEvent, filter = this.focusNavigationFilter) {\n        this.view.focusNext(n, loop, browserEvent, filter);\n    }\n    getFocus() {\n        return this.focus.get();\n    }\n    reveal(location, relativeTop) {\n        this.model.expandTo(location);\n        const index = this.model.getListIndex(location);\n        if (index === -1) {\n            return;\n        }\n        this.view.reveal(index, relativeTop);\n    }\n    /**\n     * Returns the relative position of an element rendered in the list.\n     * Returns `null` if the element isn't *entirely* in the visible viewport.\n     */\n    getRelativeTop(location) {\n        const index = this.model.getListIndex(location);\n        if (index === -1) {\n            return null;\n        }\n        return this.view.getRelativeTop(index);\n    }\n    // List\n    onLeftArrow(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const didChange = this.model.setCollapsed(location, true);\n        if (!didChange) {\n            const parentLocation = this.model.getParentNodeLocation(location);\n            if (!parentLocation) {\n                return;\n            }\n            const parentListIndex = this.model.getListIndex(parentLocation);\n            this.view.reveal(parentListIndex);\n            this.view.setFocus([parentListIndex]);\n        }\n    }\n    onRightArrow(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const didChange = this.model.setCollapsed(location, false);\n        if (!didChange) {\n            if (!node.children.some(child => child.visible)) {\n                return;\n            }\n            const [focusedIndex] = this.view.getFocus();\n            const firstChildIndex = focusedIndex + 1;\n            this.view.reveal(firstChildIndex);\n            this.view.setFocus([firstChildIndex]);\n        }\n    }\n    onSpace(e) {\n        e.preventDefault();\n        e.stopPropagation();\n        const nodes = this.view.getFocusedElements();\n        if (nodes.length === 0) {\n            return;\n        }\n        const node = nodes[0];\n        const location = this.model.getNodeLocation(node);\n        const recursive = e.browserEvent.altKey;\n        this.model.setCollapsed(location, undefined, recursive);\n    }\n    dispose() {\n        dispose(this.disposables);\n        this.view.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { ElementsDragAndDropData } from '../list/listView.js';\nimport { ComposedTreeDelegate } from './abstractTree.js';\nimport { getVisibleState, isFilterResult } from './indexTreeModel.js';\nimport { CompressibleObjectTree, ObjectTree } from './objectTree.js';\nimport { TreeError, WeakMapper } from './tree.js';\nimport { createCancelablePromise, Promises, timeout } from '../../../common/async.js';\nimport { Codicon } from '../../../common/codicons.js';\nimport { isCancellationError, onUnexpectedError } from '../../../common/errors.js';\nimport { Emitter, Event } from '../../../common/event.js';\nimport { Iterable } from '../../../common/iterator.js';\nimport { DisposableStore, dispose } from '../../../common/lifecycle.js';\nimport { isIterable } from '../../../common/types.js';\nfunction createAsyncDataTreeNode(props) {\n    return Object.assign(Object.assign({}, props), { children: [], refreshPromise: undefined, stale: true, slow: false, collapsedByDefault: undefined });\n}\nfunction isAncestor(ancestor, descendant) {\n    if (!descendant.parent) {\n        return false;\n    }\n    else if (descendant.parent === ancestor) {\n        return true;\n    }\n    else {\n        return isAncestor(ancestor, descendant.parent);\n    }\n}\nfunction intersects(node, other) {\n    return node === other || isAncestor(node, other) || isAncestor(other, node);\n}\nclass AsyncDataTreeNodeWrapper {\n    constructor(node) {\n        this.node = node;\n    }\n    get element() { return this.node.element.element; }\n    get children() { return this.node.children.map(node => new AsyncDataTreeNodeWrapper(node)); }\n    get depth() { return this.node.depth; }\n    get visibleChildrenCount() { return this.node.visibleChildrenCount; }\n    get visibleChildIndex() { return this.node.visibleChildIndex; }\n    get collapsible() { return this.node.collapsible; }\n    get collapsed() { return this.node.collapsed; }\n    get visible() { return this.node.visible; }\n    get filterData() { return this.node.filterData; }\n}\nclass AsyncDataTreeRenderer {\n    constructor(renderer, nodeMapper, onDidChangeTwistieState) {\n        this.renderer = renderer;\n        this.nodeMapper = nodeMapper;\n        this.onDidChangeTwistieState = onDidChangeTwistieState;\n        this.renderedNodes = new Map();\n        this.templateId = renderer.templateId;\n    }\n    renderTemplate(container) {\n        const templateData = this.renderer.renderTemplate(container);\n        return { templateData };\n    }\n    renderElement(node, index, templateData, height) {\n        this.renderer.renderElement(this.nodeMapper.map(node), index, templateData.templateData, height);\n    }\n    renderTwistie(element, twistieElement) {\n        if (element.slow) {\n            twistieElement.classList.add(...Codicon.treeItemLoading.classNamesArray);\n            return true;\n        }\n        else {\n            twistieElement.classList.remove(...Codicon.treeItemLoading.classNamesArray);\n            return false;\n        }\n    }\n    disposeElement(node, index, templateData, height) {\n        if (this.renderer.disposeElement) {\n            this.renderer.disposeElement(this.nodeMapper.map(node), index, templateData.templateData, height);\n        }\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.templateData);\n    }\n    dispose() {\n        this.renderedNodes.clear();\n    }\n}\nfunction asTreeEvent(e) {\n    return {\n        browserEvent: e.browserEvent,\n        elements: e.elements.map(e => e.element)\n    };\n}\nfunction asTreeMouseEvent(e) {\n    return {\n        browserEvent: e.browserEvent,\n        element: e.element && e.element.element,\n        target: e.target\n    };\n}\nclass AsyncDataTreeElementsDragAndDropData extends ElementsDragAndDropData {\n    constructor(data) {\n        super(data.elements.map(node => node.element));\n        this.data = data;\n    }\n}\nfunction asAsyncDataTreeDragAndDropData(data) {\n    if (data instanceof ElementsDragAndDropData) {\n        return new AsyncDataTreeElementsDragAndDropData(data);\n    }\n    return data;\n}\nclass AsyncDataTreeNodeListDragAndDrop {\n    constructor(dnd) {\n        this.dnd = dnd;\n    }\n    getDragURI(node) {\n        return this.dnd.getDragURI(node.element);\n    }\n    getDragLabel(nodes, originalEvent) {\n        if (this.dnd.getDragLabel) {\n            return this.dnd.getDragLabel(nodes.map(node => node.element), originalEvent);\n        }\n        return undefined;\n    }\n    onDragStart(data, originalEvent) {\n        if (this.dnd.onDragStart) {\n            this.dnd.onDragStart(asAsyncDataTreeDragAndDropData(data), originalEvent);\n        }\n    }\n    onDragOver(data, targetNode, targetIndex, originalEvent, raw = true) {\n        return this.dnd.onDragOver(asAsyncDataTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n    }\n    drop(data, targetNode, targetIndex, originalEvent) {\n        this.dnd.drop(asAsyncDataTreeDragAndDropData(data), targetNode && targetNode.element, targetIndex, originalEvent);\n    }\n    onDragEnd(originalEvent) {\n        if (this.dnd.onDragEnd) {\n            this.dnd.onDragEnd(originalEvent);\n        }\n    }\n}\nfunction asObjectTreeOptions(options) {\n    return options && Object.assign(Object.assign({}, options), { collapseByDefault: true, identityProvider: options.identityProvider && {\n            getId(el) {\n                return options.identityProvider.getId(el.element);\n            }\n        }, dnd: options.dnd && new AsyncDataTreeNodeListDragAndDrop(options.dnd), multipleSelectionController: options.multipleSelectionController && {\n            isSelectionSingleChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionSingleChangeEvent(Object.assign(Object.assign({}, e), { element: e.element }));\n            },\n            isSelectionRangeChangeEvent(e) {\n                return options.multipleSelectionController.isSelectionRangeChangeEvent(Object.assign(Object.assign({}, e), { element: e.element }));\n            }\n        }, accessibilityProvider: options.accessibilityProvider && Object.assign(Object.assign({}, options.accessibilityProvider), { getPosInSet: undefined, getSetSize: undefined, getRole: options.accessibilityProvider.getRole ? (el) => {\n                return options.accessibilityProvider.getRole(el.element);\n            } : () => 'treeitem', isChecked: options.accessibilityProvider.isChecked ? (e) => {\n                var _a;\n                return !!((_a = options.accessibilityProvider) === null || _a === void 0 ? void 0 : _a.isChecked(e.element));\n            } : undefined, getAriaLabel(e) {\n                return options.accessibilityProvider.getAriaLabel(e.element);\n            },\n            getWidgetAriaLabel() {\n                return options.accessibilityProvider.getWidgetAriaLabel();\n            }, getWidgetRole: options.accessibilityProvider.getWidgetRole ? () => options.accessibilityProvider.getWidgetRole() : () => 'tree', getAriaLevel: options.accessibilityProvider.getAriaLevel && (node => {\n                return options.accessibilityProvider.getAriaLevel(node.element);\n            }), getActiveDescendantId: options.accessibilityProvider.getActiveDescendantId && (node => {\n                return options.accessibilityProvider.getActiveDescendantId(node.element);\n            }) }), filter: options.filter && {\n            filter(e, parentVisibility) {\n                return options.filter.filter(e.element, parentVisibility);\n            }\n        }, keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && Object.assign(Object.assign({}, options.keyboardNavigationLabelProvider), { getKeyboardNavigationLabel(e) {\n                return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e.element);\n            } }), sorter: undefined, expandOnlyOnTwistieClick: typeof options.expandOnlyOnTwistieClick === 'undefined' ? undefined : (typeof options.expandOnlyOnTwistieClick !== 'function' ? options.expandOnlyOnTwistieClick : (e => options.expandOnlyOnTwistieClick(e.element))), additionalScrollHeight: options.additionalScrollHeight });\n}\nfunction dfs(node, fn) {\n    fn(node);\n    node.children.forEach(child => dfs(child, fn));\n}\nexport class AsyncDataTree {\n    constructor(user, container, delegate, renderers, dataSource, options = {}) {\n        this.user = user;\n        this.dataSource = dataSource;\n        this.nodes = new Map();\n        this.subTreeRefreshPromises = new Map();\n        this.refreshPromises = new Map();\n        this._onDidRender = new Emitter();\n        this._onDidChangeNodeSlowState = new Emitter();\n        this.nodeMapper = new WeakMapper(node => new AsyncDataTreeNodeWrapper(node));\n        this.disposables = new DisposableStore();\n        this.identityProvider = options.identityProvider;\n        this.autoExpandSingleChildren = typeof options.autoExpandSingleChildren === 'undefined' ? false : options.autoExpandSingleChildren;\n        this.sorter = options.sorter;\n        this.collapseByDefault = options.collapseByDefault;\n        this.tree = this.createTree(user, container, delegate, renderers, options);\n        this.root = createAsyncDataTreeNode({\n            element: undefined,\n            parent: null,\n            hasChildren: true\n        });\n        if (this.identityProvider) {\n            this.root = Object.assign(Object.assign({}, this.root), { id: null });\n        }\n        this.nodes.set(null, this.root);\n        this.tree.onDidChangeCollapseState(this._onDidChangeCollapseState, this, this.disposables);\n    }\n    get onDidChangeFocus() { return Event.map(this.tree.onDidChangeFocus, asTreeEvent); }\n    get onDidChangeSelection() { return Event.map(this.tree.onDidChangeSelection, asTreeEvent); }\n    get onMouseDblClick() { return Event.map(this.tree.onMouseDblClick, asTreeMouseEvent); }\n    get onPointer() { return Event.map(this.tree.onPointer, asTreeMouseEvent); }\n    get onDidFocus() { return this.tree.onDidFocus; }\n    get onDidChangeModel() { return this.tree.onDidChangeModel; }\n    get onDidChangeCollapseState() { return this.tree.onDidChangeCollapseState; }\n    get onDidDispose() { return this.tree.onDidDispose; }\n    createTree(user, container, delegate, renderers, options) {\n        const objectTreeDelegate = new ComposedTreeDelegate(delegate);\n        const objectTreeRenderers = renderers.map(r => new AsyncDataTreeRenderer(r, this.nodeMapper, this._onDidChangeNodeSlowState.event));\n        const objectTreeOptions = asObjectTreeOptions(options) || {};\n        return new ObjectTree(user, container, objectTreeDelegate, objectTreeRenderers, objectTreeOptions);\n    }\n    updateOptions(options = {}) {\n        this.tree.updateOptions(options);\n    }\n    // Widget\n    getHTMLElement() {\n        return this.tree.getHTMLElement();\n    }\n    get scrollTop() {\n        return this.tree.scrollTop;\n    }\n    set scrollTop(scrollTop) {\n        this.tree.scrollTop = scrollTop;\n    }\n    domFocus() {\n        this.tree.domFocus();\n    }\n    layout(height, width) {\n        this.tree.layout(height, width);\n    }\n    style(styles) {\n        this.tree.style(styles);\n    }\n    // Model\n    getInput() {\n        return this.root.element;\n    }\n    setInput(input, viewState) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.refreshPromises.forEach(promise => promise.cancel());\n            this.refreshPromises.clear();\n            this.root.element = input;\n            const viewStateContext = viewState && { viewState, focus: [], selection: [] };\n            yield this._updateChildren(input, true, false, viewStateContext);\n            if (viewStateContext) {\n                this.tree.setFocus(viewStateContext.focus);\n                this.tree.setSelection(viewStateContext.selection);\n            }\n            if (viewState && typeof viewState.scrollTop === 'number') {\n                this.scrollTop = viewState.scrollTop;\n            }\n        });\n    }\n    _updateChildren(element = this.root.element, recursive = true, rerender = false, viewStateContext, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.root.element === 'undefined') {\n                throw new TreeError(this.user, 'Tree input not set');\n            }\n            if (this.root.refreshPromise) {\n                yield this.root.refreshPromise;\n                yield Event.toPromise(this._onDidRender.event);\n            }\n            const node = this.getDataNode(element);\n            yield this.refreshAndRenderNode(node, recursive, viewStateContext, options);\n            if (rerender) {\n                try {\n                    this.tree.rerender(node);\n                }\n                catch (_a) {\n                    // missing nodes are fine, this could've resulted from\n                    // parallel refresh calls, removing `node` altogether\n                }\n            }\n        });\n    }\n    // View\n    rerender(element) {\n        if (element === undefined || element === this.root.element) {\n            this.tree.rerender();\n            return;\n        }\n        const node = this.getDataNode(element);\n        this.tree.rerender(node);\n    }\n    // Tree\n    getNode(element = this.root.element) {\n        const dataNode = this.getDataNode(element);\n        const node = this.tree.getNode(dataNode === this.root ? null : dataNode);\n        return this.nodeMapper.map(node);\n    }\n    collapse(element, recursive = false) {\n        const node = this.getDataNode(element);\n        return this.tree.collapse(node === this.root ? null : node, recursive);\n    }\n    expand(element, recursive = false) {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (typeof this.root.element === 'undefined') {\n                throw new TreeError(this.user, 'Tree input not set');\n            }\n            if (this.root.refreshPromise) {\n                yield this.root.refreshPromise;\n                yield Event.toPromise(this._onDidRender.event);\n            }\n            const node = this.getDataNode(element);\n            if (this.tree.hasElement(node) && !this.tree.isCollapsible(node)) {\n                return false;\n            }\n            if (node.refreshPromise) {\n                yield this.root.refreshPromise;\n                yield Event.toPromise(this._onDidRender.event);\n            }\n            if (node !== this.root && !node.refreshPromise && !this.tree.isCollapsed(node)) {\n                return false;\n            }\n            const result = this.tree.expand(node === this.root ? null : node, recursive);\n            if (node.refreshPromise) {\n                yield this.root.refreshPromise;\n                yield Event.toPromise(this._onDidRender.event);\n            }\n            return result;\n        });\n    }\n    setSelection(elements, browserEvent) {\n        const nodes = elements.map(e => this.getDataNode(e));\n        this.tree.setSelection(nodes, browserEvent);\n    }\n    getSelection() {\n        const nodes = this.tree.getSelection();\n        return nodes.map(n => n.element);\n    }\n    setFocus(elements, browserEvent) {\n        const nodes = elements.map(e => this.getDataNode(e));\n        this.tree.setFocus(nodes, browserEvent);\n    }\n    getFocus() {\n        const nodes = this.tree.getFocus();\n        return nodes.map(n => n.element);\n    }\n    reveal(element, relativeTop) {\n        this.tree.reveal(this.getDataNode(element), relativeTop);\n    }\n    // Tree navigation\n    getParentElement(element) {\n        const node = this.tree.getParentElement(this.getDataNode(element));\n        return (node && node.element);\n    }\n    getFirstElementChild(element = this.root.element) {\n        const dataNode = this.getDataNode(element);\n        const node = this.tree.getFirstElementChild(dataNode === this.root ? null : dataNode);\n        return (node && node.element);\n    }\n    // Implementation\n    getDataNode(element) {\n        const node = this.nodes.get((element === this.root.element ? null : element));\n        if (!node) {\n            throw new TreeError(this.user, `Data tree node not found: ${element}`);\n        }\n        return node;\n    }\n    refreshAndRenderNode(node, recursive, viewStateContext, options) {\n        return __awaiter(this, void 0, void 0, function* () {\n            yield this.refreshNode(node, recursive, viewStateContext);\n            this.render(node, viewStateContext, options);\n        });\n    }\n    refreshNode(node, recursive, viewStateContext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let result;\n            this.subTreeRefreshPromises.forEach((refreshPromise, refreshNode) => {\n                if (!result && intersects(refreshNode, node)) {\n                    result = refreshPromise.then(() => this.refreshNode(node, recursive, viewStateContext));\n                }\n            });\n            if (result) {\n                return result;\n            }\n            return this.doRefreshSubTree(node, recursive, viewStateContext);\n        });\n    }\n    doRefreshSubTree(node, recursive, viewStateContext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let done;\n            node.refreshPromise = new Promise(c => done = c);\n            this.subTreeRefreshPromises.set(node, node.refreshPromise);\n            node.refreshPromise.finally(() => {\n                node.refreshPromise = undefined;\n                this.subTreeRefreshPromises.delete(node);\n            });\n            try {\n                const childrenToRefresh = yield this.doRefreshNode(node, recursive, viewStateContext);\n                node.stale = false;\n                yield Promises.settled(childrenToRefresh.map(child => this.doRefreshSubTree(child, recursive, viewStateContext)));\n            }\n            finally {\n                done();\n            }\n        });\n    }\n    doRefreshNode(node, recursive, viewStateContext) {\n        return __awaiter(this, void 0, void 0, function* () {\n            node.hasChildren = !!this.dataSource.hasChildren(node.element);\n            let childrenPromise;\n            if (!node.hasChildren) {\n                childrenPromise = Promise.resolve(Iterable.empty());\n            }\n            else {\n                const children = this.doGetChildren(node);\n                if (isIterable(children)) {\n                    childrenPromise = Promise.resolve(children);\n                }\n                else {\n                    const slowTimeout = timeout(800);\n                    slowTimeout.then(() => {\n                        node.slow = true;\n                        this._onDidChangeNodeSlowState.fire(node);\n                    }, _ => null);\n                    childrenPromise = children.finally(() => slowTimeout.cancel());\n                }\n            }\n            try {\n                const children = yield childrenPromise;\n                return this.setChildren(node, children, recursive, viewStateContext);\n            }\n            catch (err) {\n                if (node !== this.root && this.tree.hasElement(node)) {\n                    this.tree.collapse(node);\n                }\n                if (isCancellationError(err)) {\n                    return [];\n                }\n                throw err;\n            }\n            finally {\n                if (node.slow) {\n                    node.slow = false;\n                    this._onDidChangeNodeSlowState.fire(node);\n                }\n            }\n        });\n    }\n    doGetChildren(node) {\n        let result = this.refreshPromises.get(node);\n        if (result) {\n            return result;\n        }\n        const children = this.dataSource.getChildren(node.element);\n        if (isIterable(children)) {\n            return this.processChildren(children);\n        }\n        else {\n            result = createCancelablePromise(() => __awaiter(this, void 0, void 0, function* () { return this.processChildren(yield children); }));\n            this.refreshPromises.set(node, result);\n            return result.finally(() => { this.refreshPromises.delete(node); });\n        }\n    }\n    _onDidChangeCollapseState({ node, deep }) {\n        if (node.element === null) {\n            return;\n        }\n        if (!node.collapsed && node.element.stale) {\n            if (deep) {\n                this.collapse(node.element.element);\n            }\n            else {\n                this.refreshAndRenderNode(node.element, false)\n                    .catch(onUnexpectedError);\n            }\n        }\n    }\n    setChildren(node, childrenElementsIterable, recursive, viewStateContext) {\n        const childrenElements = [...childrenElementsIterable];\n        // perf: if the node was and still is a leaf, avoid all this hassle\n        if (node.children.length === 0 && childrenElements.length === 0) {\n            return [];\n        }\n        const nodesToForget = new Map();\n        const childrenTreeNodesById = new Map();\n        for (const child of node.children) {\n            nodesToForget.set(child.element, child);\n            if (this.identityProvider) {\n                const collapsed = this.tree.isCollapsed(child);\n                childrenTreeNodesById.set(child.id, { node: child, collapsed });\n            }\n        }\n        const childrenToRefresh = [];\n        const children = childrenElements.map(element => {\n            const hasChildren = !!this.dataSource.hasChildren(element);\n            if (!this.identityProvider) {\n                const asyncDataTreeNode = createAsyncDataTreeNode({ element, parent: node, hasChildren });\n                if (hasChildren && this.collapseByDefault && !this.collapseByDefault(element)) {\n                    asyncDataTreeNode.collapsedByDefault = false;\n                    childrenToRefresh.push(asyncDataTreeNode);\n                }\n                return asyncDataTreeNode;\n            }\n            const id = this.identityProvider.getId(element).toString();\n            const result = childrenTreeNodesById.get(id);\n            if (result) {\n                const asyncDataTreeNode = result.node;\n                nodesToForget.delete(asyncDataTreeNode.element);\n                this.nodes.delete(asyncDataTreeNode.element);\n                this.nodes.set(element, asyncDataTreeNode);\n                asyncDataTreeNode.element = element;\n                asyncDataTreeNode.hasChildren = hasChildren;\n                if (recursive) {\n                    if (result.collapsed) {\n                        asyncDataTreeNode.children.forEach(node => dfs(node, node => this.nodes.delete(node.element)));\n                        asyncDataTreeNode.children.splice(0, asyncDataTreeNode.children.length);\n                        asyncDataTreeNode.stale = true;\n                    }\n                    else {\n                        childrenToRefresh.push(asyncDataTreeNode);\n                    }\n                }\n                else if (hasChildren && this.collapseByDefault && !this.collapseByDefault(element)) {\n                    asyncDataTreeNode.collapsedByDefault = false;\n                    childrenToRefresh.push(asyncDataTreeNode);\n                }\n                return asyncDataTreeNode;\n            }\n            const childAsyncDataTreeNode = createAsyncDataTreeNode({ element, parent: node, id, hasChildren });\n            if (viewStateContext && viewStateContext.viewState.focus && viewStateContext.viewState.focus.indexOf(id) > -1) {\n                viewStateContext.focus.push(childAsyncDataTreeNode);\n            }\n            if (viewStateContext && viewStateContext.viewState.selection && viewStateContext.viewState.selection.indexOf(id) > -1) {\n                viewStateContext.selection.push(childAsyncDataTreeNode);\n            }\n            if (viewStateContext && viewStateContext.viewState.expanded && viewStateContext.viewState.expanded.indexOf(id) > -1) {\n                childrenToRefresh.push(childAsyncDataTreeNode);\n            }\n            else if (hasChildren && this.collapseByDefault && !this.collapseByDefault(element)) {\n                childAsyncDataTreeNode.collapsedByDefault = false;\n                childrenToRefresh.push(childAsyncDataTreeNode);\n            }\n            return childAsyncDataTreeNode;\n        });\n        for (const node of nodesToForget.values()) {\n            dfs(node, node => this.nodes.delete(node.element));\n        }\n        for (const child of children) {\n            this.nodes.set(child.element, child);\n        }\n        node.children.splice(0, node.children.length, ...children);\n        // TODO@joao this doesn't take filter into account\n        if (node !== this.root && this.autoExpandSingleChildren && children.length === 1 && childrenToRefresh.length === 0) {\n            children[0].collapsedByDefault = false;\n            childrenToRefresh.push(children[0]);\n        }\n        return childrenToRefresh;\n    }\n    render(node, viewStateContext, options) {\n        const children = node.children.map(node => this.asTreeElement(node, viewStateContext));\n        const objectTreeOptions = options && Object.assign(Object.assign({}, options), { diffIdentityProvider: options.diffIdentityProvider && {\n                getId(node) {\n                    return options.diffIdentityProvider.getId(node.element);\n                }\n            } });\n        this.tree.setChildren(node === this.root ? null : node, children, objectTreeOptions);\n        if (node !== this.root) {\n            this.tree.setCollapsible(node, node.hasChildren);\n        }\n        this._onDidRender.fire();\n    }\n    asTreeElement(node, viewStateContext) {\n        if (node.stale) {\n            return {\n                element: node,\n                collapsible: node.hasChildren,\n                collapsed: true\n            };\n        }\n        let collapsed;\n        if (viewStateContext && viewStateContext.viewState.expanded && node.id && viewStateContext.viewState.expanded.indexOf(node.id) > -1) {\n            collapsed = false;\n        }\n        else {\n            collapsed = node.collapsedByDefault;\n        }\n        node.collapsedByDefault = undefined;\n        return {\n            element: node,\n            children: node.hasChildren ? Iterable.map(node.children, child => this.asTreeElement(child, viewStateContext)) : [],\n            collapsible: node.hasChildren,\n            collapsed\n        };\n    }\n    processChildren(children) {\n        if (this.sorter) {\n            children = [...children].sort(this.sorter.compare.bind(this.sorter));\n        }\n        return children;\n    }\n    dispose() {\n        this.disposables.dispose();\n    }\n}\nclass CompressibleAsyncDataTreeNodeWrapper {\n    constructor(node) {\n        this.node = node;\n    }\n    get element() {\n        return {\n            elements: this.node.element.elements.map(e => e.element),\n            incompressible: this.node.element.incompressible\n        };\n    }\n    get children() { return this.node.children.map(node => new CompressibleAsyncDataTreeNodeWrapper(node)); }\n    get depth() { return this.node.depth; }\n    get visibleChildrenCount() { return this.node.visibleChildrenCount; }\n    get visibleChildIndex() { return this.node.visibleChildIndex; }\n    get collapsible() { return this.node.collapsible; }\n    get collapsed() { return this.node.collapsed; }\n    get visible() { return this.node.visible; }\n    get filterData() { return this.node.filterData; }\n}\nclass CompressibleAsyncDataTreeRenderer {\n    constructor(renderer, nodeMapper, compressibleNodeMapperProvider, onDidChangeTwistieState) {\n        this.renderer = renderer;\n        this.nodeMapper = nodeMapper;\n        this.compressibleNodeMapperProvider = compressibleNodeMapperProvider;\n        this.onDidChangeTwistieState = onDidChangeTwistieState;\n        this.renderedNodes = new Map();\n        this.disposables = [];\n        this.templateId = renderer.templateId;\n    }\n    renderTemplate(container) {\n        const templateData = this.renderer.renderTemplate(container);\n        return { templateData };\n    }\n    renderElement(node, index, templateData, height) {\n        this.renderer.renderElement(this.nodeMapper.map(node), index, templateData.templateData, height);\n    }\n    renderCompressedElements(node, index, templateData, height) {\n        this.renderer.renderCompressedElements(this.compressibleNodeMapperProvider().map(node), index, templateData.templateData, height);\n    }\n    renderTwistie(element, twistieElement) {\n        if (element.slow) {\n            twistieElement.classList.add(...Codicon.treeItemLoading.classNamesArray);\n            return true;\n        }\n        else {\n            twistieElement.classList.remove(...Codicon.treeItemLoading.classNamesArray);\n            return false;\n        }\n    }\n    disposeElement(node, index, templateData, height) {\n        if (this.renderer.disposeElement) {\n            this.renderer.disposeElement(this.nodeMapper.map(node), index, templateData.templateData, height);\n        }\n    }\n    disposeCompressedElements(node, index, templateData, height) {\n        if (this.renderer.disposeCompressedElements) {\n            this.renderer.disposeCompressedElements(this.compressibleNodeMapperProvider().map(node), index, templateData.templateData, height);\n        }\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.templateData);\n    }\n    dispose() {\n        this.renderedNodes.clear();\n        this.disposables = dispose(this.disposables);\n    }\n}\nfunction asCompressibleObjectTreeOptions(options) {\n    const objectTreeOptions = options && asObjectTreeOptions(options);\n    return objectTreeOptions && Object.assign(Object.assign({}, objectTreeOptions), { keyboardNavigationLabelProvider: objectTreeOptions.keyboardNavigationLabelProvider && Object.assign(Object.assign({}, objectTreeOptions.keyboardNavigationLabelProvider), { getCompressedNodeKeyboardNavigationLabel(els) {\n                return options.keyboardNavigationLabelProvider.getCompressedNodeKeyboardNavigationLabel(els.map(e => e.element));\n            } }) });\n}\nexport class CompressibleAsyncDataTree extends AsyncDataTree {\n    constructor(user, container, virtualDelegate, compressionDelegate, renderers, dataSource, options = {}) {\n        super(user, container, virtualDelegate, renderers, dataSource, options);\n        this.compressionDelegate = compressionDelegate;\n        this.compressibleNodeMapper = new WeakMapper(node => new CompressibleAsyncDataTreeNodeWrapper(node));\n        this.filter = options.filter;\n    }\n    createTree(user, container, delegate, renderers, options) {\n        const objectTreeDelegate = new ComposedTreeDelegate(delegate);\n        const objectTreeRenderers = renderers.map(r => new CompressibleAsyncDataTreeRenderer(r, this.nodeMapper, () => this.compressibleNodeMapper, this._onDidChangeNodeSlowState.event));\n        const objectTreeOptions = asCompressibleObjectTreeOptions(options) || {};\n        return new CompressibleObjectTree(user, container, objectTreeDelegate, objectTreeRenderers, objectTreeOptions);\n    }\n    asTreeElement(node, viewStateContext) {\n        return Object.assign({ incompressible: this.compressionDelegate.isIncompressible(node.element) }, super.asTreeElement(node, viewStateContext));\n    }\n    updateOptions(options = {}) {\n        this.tree.updateOptions(options);\n    }\n    render(node, viewStateContext) {\n        if (!this.identityProvider) {\n            return super.render(node, viewStateContext);\n        }\n        // Preserve traits across compressions. Hacky but does the trick.\n        // This is hard to fix properly since it requires rewriting the traits\n        // across trees and lists. Let's just keep it this way for now.\n        const getId = (element) => this.identityProvider.getId(element).toString();\n        const getUncompressedIds = (nodes) => {\n            const result = new Set();\n            for (const node of nodes) {\n                const compressedNode = this.tree.getCompressedTreeNode(node === this.root ? null : node);\n                if (!compressedNode.element) {\n                    continue;\n                }\n                for (const node of compressedNode.element.elements) {\n                    result.add(getId(node.element));\n                }\n            }\n            return result;\n        };\n        const oldSelection = getUncompressedIds(this.tree.getSelection());\n        const oldFocus = getUncompressedIds(this.tree.getFocus());\n        super.render(node, viewStateContext);\n        const selection = this.getSelection();\n        let didChangeSelection = false;\n        const focus = this.getFocus();\n        let didChangeFocus = false;\n        const visit = (node) => {\n            const compressedNode = node.element;\n            if (compressedNode) {\n                for (let i = 0; i < compressedNode.elements.length; i++) {\n                    const id = getId(compressedNode.elements[i].element);\n                    const element = compressedNode.elements[compressedNode.elements.length - 1].element;\n                    // github.com/microsoft/vscode/issues/85938\n                    if (oldSelection.has(id) && selection.indexOf(element) === -1) {\n                        selection.push(element);\n                        didChangeSelection = true;\n                    }\n                    if (oldFocus.has(id) && focus.indexOf(element) === -1) {\n                        focus.push(element);\n                        didChangeFocus = true;\n                    }\n                }\n            }\n            node.children.forEach(visit);\n        };\n        visit(this.tree.getCompressedTreeNode(node === this.root ? null : node));\n        if (didChangeSelection) {\n            this.setSelection(selection);\n        }\n        if (didChangeFocus) {\n            this.setFocus(focus);\n        }\n    }\n    // For compressed async data trees, `TreeVisibility.Recurse` doesn't currently work\n    // and we have to filter everything beforehand\n    // Related to #85193 and #85835\n    processChildren(children) {\n        if (this.filter) {\n            children = Iterable.filter(children, e => {\n                const result = this.filter.filter(e, 1 /* Visible */);\n                const visibility = getVisibility(result);\n                if (visibility === 2 /* Recurse */) {\n                    throw new Error('Recursive tree visibility not supported in async data compressed trees');\n                }\n                return visibility === 1 /* Visible */;\n            });\n        }\n        return super.processChildren(children);\n    }\n}\nfunction getVisibility(filterResult) {\n    if (typeof filterResult === 'boolean') {\n        return filterResult ? 1 /* Visible */ : 0 /* Hidden */;\n    }\n    else if (isFilterResult(filterResult)) {\n        return getVisibleState(filterResult.visibility);\n    }\n    else {\n        return getVisibleState(filterResult);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { AbstractTree } from './abstractTree.js';\nimport { ObjectTreeModel } from './objectTreeModel.js';\nexport class DataTree extends AbstractTree {\n    constructor(user, container, delegate, renderers, dataSource, options = {}) {\n        super(user, container, delegate, renderers, options);\n        this.user = user;\n        this.dataSource = dataSource;\n        this.identityProvider = options.identityProvider;\n    }\n    createModel(user, view, options) {\n        return new ObjectTreeModel(user, view, options);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { TreeError } from './tree.js';\nimport { splice, tail2 } from '../../../common/arrays.js';\nimport { Delayer, MicrotaskDelay } from '../../../common/async.js';\nimport { LcsDiff } from '../../../common/diff/diff.js';\nimport { Emitter, EventBufferer } from '../../../common/event.js';\nimport { Iterable } from '../../../common/iterator.js';\nexport function isFilterResult(obj) {\n    return typeof obj === 'object' && 'visibility' in obj && 'data' in obj;\n}\nexport function getVisibleState(visibility) {\n    switch (visibility) {\n        case true: return 1 /* Visible */;\n        case false: return 0 /* Hidden */;\n        default: return visibility;\n    }\n}\nfunction isCollapsibleStateUpdate(update) {\n    return typeof update.collapsible === 'boolean';\n}\nexport class IndexTreeModel {\n    constructor(user, list, rootElement, options = {}) {\n        this.user = user;\n        this.list = list;\n        this.rootRef = [];\n        this.eventBufferer = new EventBufferer();\n        this._onDidChangeCollapseState = new Emitter();\n        this.onDidChangeCollapseState = this.eventBufferer.wrapEvent(this._onDidChangeCollapseState.event);\n        this._onDidChangeRenderNodeCount = new Emitter();\n        this.onDidChangeRenderNodeCount = this.eventBufferer.wrapEvent(this._onDidChangeRenderNodeCount.event);\n        this._onDidSplice = new Emitter();\n        this.onDidSplice = this._onDidSplice.event;\n        this.refilterDelayer = new Delayer(MicrotaskDelay);\n        this.collapseByDefault = typeof options.collapseByDefault === 'undefined' ? false : options.collapseByDefault;\n        this.filter = options.filter;\n        this.autoExpandSingleChildren = typeof options.autoExpandSingleChildren === 'undefined' ? false : options.autoExpandSingleChildren;\n        this.root = {\n            parent: undefined,\n            element: rootElement,\n            children: [],\n            depth: 0,\n            visibleChildrenCount: 0,\n            visibleChildIndex: -1,\n            collapsible: false,\n            collapsed: false,\n            renderNodeCount: 0,\n            visibility: 1 /* Visible */,\n            visible: true,\n            filterData: undefined\n        };\n    }\n    splice(location, deleteCount, toInsert = Iterable.empty(), options = {}) {\n        if (location.length === 0) {\n            throw new TreeError(this.user, 'Invalid tree location');\n        }\n        if (options.diffIdentityProvider) {\n            this.spliceSmart(options.diffIdentityProvider, location, deleteCount, toInsert, options);\n        }\n        else {\n            this.spliceSimple(location, deleteCount, toInsert, options);\n        }\n    }\n    spliceSmart(identity, location, deleteCount, toInsertIterable, options, recurseLevels) {\n        var _a;\n        if (toInsertIterable === void 0) { toInsertIterable = Iterable.empty(); }\n        if (recurseLevels === void 0) { recurseLevels = (_a = options.diffDepth) !== null && _a !== void 0 ? _a : 0; }\n        const { parentNode } = this.getParentNodeWithListIndex(location);\n        if (!parentNode.lastDiffIds) {\n            return this.spliceSimple(location, deleteCount, toInsertIterable, options);\n        }\n        const toInsert = [...toInsertIterable];\n        const index = location[location.length - 1];\n        const diff = new LcsDiff({ getElements: () => parentNode.lastDiffIds }, {\n            getElements: () => [\n                ...parentNode.children.slice(0, index),\n                ...toInsert,\n                ...parentNode.children.slice(index + deleteCount),\n            ].map(e => identity.getId(e.element).toString())\n        }).ComputeDiff(false);\n        // if we were given a 'best effort' diff, use default behavior\n        if (diff.quitEarly) {\n            parentNode.lastDiffIds = undefined;\n            return this.spliceSimple(location, deleteCount, toInsert, options);\n        }\n        const locationPrefix = location.slice(0, -1);\n        const recurseSplice = (fromOriginal, fromModified, count) => {\n            if (recurseLevels > 0) {\n                for (let i = 0; i < count; i++) {\n                    fromOriginal--;\n                    fromModified--;\n                    this.spliceSmart(identity, [...locationPrefix, fromOriginal, 0], Number.MAX_SAFE_INTEGER, toInsert[fromModified].children, options, recurseLevels - 1);\n                }\n            }\n        };\n        let lastStartO = Math.min(parentNode.children.length, index + deleteCount);\n        let lastStartM = toInsert.length;\n        for (const change of diff.changes.sort((a, b) => b.originalStart - a.originalStart)) {\n            recurseSplice(lastStartO, lastStartM, lastStartO - (change.originalStart + change.originalLength));\n            lastStartO = change.originalStart;\n            lastStartM = change.modifiedStart - index;\n            this.spliceSimple([...locationPrefix, lastStartO], change.originalLength, Iterable.slice(toInsert, lastStartM, lastStartM + change.modifiedLength), options);\n        }\n        // at this point, startO === startM === count since any remaining prefix should match\n        recurseSplice(lastStartO, lastStartM, lastStartO);\n    }\n    spliceSimple(location, deleteCount, toInsert = Iterable.empty(), { onDidCreateNode, onDidDeleteNode, diffIdentityProvider }) {\n        const { parentNode, listIndex, revealed, visible } = this.getParentNodeWithListIndex(location);\n        const treeListElementsToInsert = [];\n        const nodesToInsertIterator = Iterable.map(toInsert, el => this.createTreeNode(el, parentNode, parentNode.visible ? 1 /* Visible */ : 0 /* Hidden */, revealed, treeListElementsToInsert, onDidCreateNode));\n        const lastIndex = location[location.length - 1];\n        const lastHadChildren = parentNode.children.length > 0;\n        // figure out what's the visible child start index right before the\n        // splice point\n        let visibleChildStartIndex = 0;\n        for (let i = lastIndex; i >= 0 && i < parentNode.children.length; i--) {\n            const child = parentNode.children[i];\n            if (child.visible) {\n                visibleChildStartIndex = child.visibleChildIndex;\n                break;\n            }\n        }\n        const nodesToInsert = [];\n        let insertedVisibleChildrenCount = 0;\n        let renderNodeCount = 0;\n        for (const child of nodesToInsertIterator) {\n            nodesToInsert.push(child);\n            renderNodeCount += child.renderNodeCount;\n            if (child.visible) {\n                child.visibleChildIndex = visibleChildStartIndex + insertedVisibleChildrenCount++;\n            }\n        }\n        const deletedNodes = splice(parentNode.children, lastIndex, deleteCount, nodesToInsert);\n        if (!diffIdentityProvider) {\n            parentNode.lastDiffIds = undefined;\n        }\n        else if (parentNode.lastDiffIds) {\n            splice(parentNode.lastDiffIds, lastIndex, deleteCount, nodesToInsert.map(n => diffIdentityProvider.getId(n.element).toString()));\n        }\n        else {\n            parentNode.lastDiffIds = parentNode.children.map(n => diffIdentityProvider.getId(n.element).toString());\n        }\n        // figure out what is the count of deleted visible children\n        let deletedVisibleChildrenCount = 0;\n        for (const child of deletedNodes) {\n            if (child.visible) {\n                deletedVisibleChildrenCount++;\n            }\n        }\n        // and adjust for all visible children after the splice point\n        if (deletedVisibleChildrenCount !== 0) {\n            for (let i = lastIndex + nodesToInsert.length; i < parentNode.children.length; i++) {\n                const child = parentNode.children[i];\n                if (child.visible) {\n                    child.visibleChildIndex -= deletedVisibleChildrenCount;\n                }\n            }\n        }\n        // update parent's visible children count\n        parentNode.visibleChildrenCount += insertedVisibleChildrenCount - deletedVisibleChildrenCount;\n        if (revealed && visible) {\n            const visibleDeleteCount = deletedNodes.reduce((r, node) => r + (node.visible ? node.renderNodeCount : 0), 0);\n            this._updateAncestorsRenderNodeCount(parentNode, renderNodeCount - visibleDeleteCount);\n            this.list.splice(listIndex, visibleDeleteCount, treeListElementsToInsert);\n        }\n        if (deletedNodes.length > 0 && onDidDeleteNode) {\n            const visit = (node) => {\n                onDidDeleteNode(node);\n                node.children.forEach(visit);\n            };\n            deletedNodes.forEach(visit);\n        }\n        this._onDidSplice.fire({ insertedNodes: nodesToInsert, deletedNodes });\n        const currentlyHasChildren = parentNode.children.length > 0;\n        if (lastHadChildren !== currentlyHasChildren) {\n            this.setCollapsible(location.slice(0, -1), currentlyHasChildren);\n        }\n        let node = parentNode;\n        while (node) {\n            if (node.visibility === 2 /* Recurse */) {\n                // delayed to avoid excessive refiltering, see #135941\n                this.refilterDelayer.trigger(() => this.refilter());\n                break;\n            }\n            node = node.parent;\n        }\n    }\n    rerender(location) {\n        if (location.length === 0) {\n            throw new TreeError(this.user, 'Invalid tree location');\n        }\n        const { node, listIndex, revealed } = this.getTreeNodeWithListIndex(location);\n        if (node.visible && revealed) {\n            this.list.splice(listIndex, 1, [node]);\n        }\n    }\n    has(location) {\n        return this.hasTreeNode(location);\n    }\n    getListIndex(location) {\n        const { listIndex, visible, revealed } = this.getTreeNodeWithListIndex(location);\n        return visible && revealed ? listIndex : -1;\n    }\n    getListRenderCount(location) {\n        return this.getTreeNode(location).renderNodeCount;\n    }\n    isCollapsible(location) {\n        return this.getTreeNode(location).collapsible;\n    }\n    setCollapsible(location, collapsible) {\n        const node = this.getTreeNode(location);\n        if (typeof collapsible === 'undefined') {\n            collapsible = !node.collapsible;\n        }\n        const update = { collapsible };\n        return this.eventBufferer.bufferEvents(() => this._setCollapseState(location, update));\n    }\n    isCollapsed(location) {\n        return this.getTreeNode(location).collapsed;\n    }\n    setCollapsed(location, collapsed, recursive) {\n        const node = this.getTreeNode(location);\n        if (typeof collapsed === 'undefined') {\n            collapsed = !node.collapsed;\n        }\n        const update = { collapsed, recursive: recursive || false };\n        return this.eventBufferer.bufferEvents(() => this._setCollapseState(location, update));\n    }\n    _setCollapseState(location, update) {\n        const { node, listIndex, revealed } = this.getTreeNodeWithListIndex(location);\n        const result = this._setListNodeCollapseState(node, listIndex, revealed, update);\n        if (node !== this.root && this.autoExpandSingleChildren && result && !isCollapsibleStateUpdate(update) && node.collapsible && !node.collapsed && !update.recursive) {\n            let onlyVisibleChildIndex = -1;\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                if (child.visible) {\n                    if (onlyVisibleChildIndex > -1) {\n                        onlyVisibleChildIndex = -1;\n                        break;\n                    }\n                    else {\n                        onlyVisibleChildIndex = i;\n                    }\n                }\n            }\n            if (onlyVisibleChildIndex > -1) {\n                this._setCollapseState([...location, onlyVisibleChildIndex], update);\n            }\n        }\n        return result;\n    }\n    _setListNodeCollapseState(node, listIndex, revealed, update) {\n        const result = this._setNodeCollapseState(node, update, false);\n        if (!revealed || !node.visible || !result) {\n            return result;\n        }\n        const previousRenderNodeCount = node.renderNodeCount;\n        const toInsert = this.updateNodeAfterCollapseChange(node);\n        const deleteCount = previousRenderNodeCount - (listIndex === -1 ? 0 : 1);\n        this.list.splice(listIndex + 1, deleteCount, toInsert.slice(1));\n        return result;\n    }\n    _setNodeCollapseState(node, update, deep) {\n        let result;\n        if (node === this.root) {\n            result = false;\n        }\n        else {\n            if (isCollapsibleStateUpdate(update)) {\n                result = node.collapsible !== update.collapsible;\n                node.collapsible = update.collapsible;\n            }\n            else if (!node.collapsible) {\n                result = false;\n            }\n            else {\n                result = node.collapsed !== update.collapsed;\n                node.collapsed = update.collapsed;\n            }\n            if (result) {\n                this._onDidChangeCollapseState.fire({ node, deep });\n            }\n        }\n        if (!isCollapsibleStateUpdate(update) && update.recursive) {\n            for (const child of node.children) {\n                result = this._setNodeCollapseState(child, update, true) || result;\n            }\n        }\n        return result;\n    }\n    expandTo(location) {\n        this.eventBufferer.bufferEvents(() => {\n            let node = this.getTreeNode(location);\n            while (node.parent) {\n                node = node.parent;\n                location = location.slice(0, location.length - 1);\n                if (node.collapsed) {\n                    this._setCollapseState(location, { collapsed: false, recursive: false });\n                }\n            }\n        });\n    }\n    refilter() {\n        const previousRenderNodeCount = this.root.renderNodeCount;\n        const toInsert = this.updateNodeAfterFilterChange(this.root);\n        this.list.splice(0, previousRenderNodeCount, toInsert);\n        this.refilterDelayer.cancel();\n    }\n    createTreeNode(treeElement, parent, parentVisibility, revealed, treeListElements, onDidCreateNode) {\n        const node = {\n            parent,\n            element: treeElement.element,\n            children: [],\n            depth: parent.depth + 1,\n            visibleChildrenCount: 0,\n            visibleChildIndex: -1,\n            collapsible: typeof treeElement.collapsible === 'boolean' ? treeElement.collapsible : (typeof treeElement.collapsed !== 'undefined'),\n            collapsed: typeof treeElement.collapsed === 'undefined' ? this.collapseByDefault : treeElement.collapsed,\n            renderNodeCount: 1,\n            visibility: 1 /* Visible */,\n            visible: true,\n            filterData: undefined\n        };\n        const visibility = this._filterNode(node, parentVisibility);\n        node.visibility = visibility;\n        if (revealed) {\n            treeListElements.push(node);\n        }\n        const childElements = treeElement.children || Iterable.empty();\n        const childRevealed = revealed && visibility !== 0 /* Hidden */ && !node.collapsed;\n        const childNodes = Iterable.map(childElements, el => this.createTreeNode(el, node, visibility, childRevealed, treeListElements, onDidCreateNode));\n        let visibleChildrenCount = 0;\n        let renderNodeCount = 1;\n        for (const child of childNodes) {\n            node.children.push(child);\n            renderNodeCount += child.renderNodeCount;\n            if (child.visible) {\n                child.visibleChildIndex = visibleChildrenCount++;\n            }\n        }\n        node.collapsible = node.collapsible || node.children.length > 0;\n        node.visibleChildrenCount = visibleChildrenCount;\n        node.visible = visibility === 2 /* Recurse */ ? visibleChildrenCount > 0 : (visibility === 1 /* Visible */);\n        if (!node.visible) {\n            node.renderNodeCount = 0;\n            if (revealed) {\n                treeListElements.pop();\n            }\n        }\n        else if (!node.collapsed) {\n            node.renderNodeCount = renderNodeCount;\n        }\n        if (onDidCreateNode) {\n            onDidCreateNode(node);\n        }\n        return node;\n    }\n    updateNodeAfterCollapseChange(node) {\n        const previousRenderNodeCount = node.renderNodeCount;\n        const result = [];\n        this._updateNodeAfterCollapseChange(node, result);\n        this._updateAncestorsRenderNodeCount(node.parent, result.length - previousRenderNodeCount);\n        return result;\n    }\n    _updateNodeAfterCollapseChange(node, result) {\n        if (node.visible === false) {\n            return 0;\n        }\n        result.push(node);\n        node.renderNodeCount = 1;\n        if (!node.collapsed) {\n            for (const child of node.children) {\n                node.renderNodeCount += this._updateNodeAfterCollapseChange(child, result);\n            }\n        }\n        this._onDidChangeRenderNodeCount.fire(node);\n        return node.renderNodeCount;\n    }\n    updateNodeAfterFilterChange(node) {\n        const previousRenderNodeCount = node.renderNodeCount;\n        const result = [];\n        this._updateNodeAfterFilterChange(node, node.visible ? 1 /* Visible */ : 0 /* Hidden */, result);\n        this._updateAncestorsRenderNodeCount(node.parent, result.length - previousRenderNodeCount);\n        return result;\n    }\n    _updateNodeAfterFilterChange(node, parentVisibility, result, revealed = true) {\n        let visibility;\n        if (node !== this.root) {\n            visibility = this._filterNode(node, parentVisibility);\n            if (visibility === 0 /* Hidden */) {\n                node.visible = false;\n                node.renderNodeCount = 0;\n                return false;\n            }\n            if (revealed) {\n                result.push(node);\n            }\n        }\n        const resultStartLength = result.length;\n        node.renderNodeCount = node === this.root ? 0 : 1;\n        let hasVisibleDescendants = false;\n        if (!node.collapsed || visibility !== 0 /* Hidden */) {\n            let visibleChildIndex = 0;\n            for (const child of node.children) {\n                hasVisibleDescendants = this._updateNodeAfterFilterChange(child, visibility, result, revealed && !node.collapsed) || hasVisibleDescendants;\n                if (child.visible) {\n                    child.visibleChildIndex = visibleChildIndex++;\n                }\n            }\n            node.visibleChildrenCount = visibleChildIndex;\n        }\n        else {\n            node.visibleChildrenCount = 0;\n        }\n        if (node !== this.root) {\n            node.visible = visibility === 2 /* Recurse */ ? hasVisibleDescendants : (visibility === 1 /* Visible */);\n            node.visibility = visibility;\n        }\n        if (!node.visible) {\n            node.renderNodeCount = 0;\n            if (revealed) {\n                result.pop();\n            }\n        }\n        else if (!node.collapsed) {\n            node.renderNodeCount += result.length - resultStartLength;\n        }\n        this._onDidChangeRenderNodeCount.fire(node);\n        return node.visible;\n    }\n    _updateAncestorsRenderNodeCount(node, diff) {\n        if (diff === 0) {\n            return;\n        }\n        while (node) {\n            node.renderNodeCount += diff;\n            this._onDidChangeRenderNodeCount.fire(node);\n            node = node.parent;\n        }\n    }\n    _filterNode(node, parentVisibility) {\n        const result = this.filter ? this.filter.filter(node.element, parentVisibility) : 1 /* Visible */;\n        if (typeof result === 'boolean') {\n            node.filterData = undefined;\n            return result ? 1 /* Visible */ : 0 /* Hidden */;\n        }\n        else if (isFilterResult(result)) {\n            node.filterData = result.data;\n            return getVisibleState(result.visibility);\n        }\n        else {\n            node.filterData = undefined;\n            return getVisibleState(result);\n        }\n    }\n    // cheap\n    hasTreeNode(location, node = this.root) {\n        if (!location || location.length === 0) {\n            return true;\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index > node.children.length) {\n            return false;\n        }\n        return this.hasTreeNode(rest, node.children[index]);\n    }\n    // cheap\n    getTreeNode(location, node = this.root) {\n        if (!location || location.length === 0) {\n            return node;\n        }\n        const [index, ...rest] = location;\n        if (index < 0 || index > node.children.length) {\n            throw new TreeError(this.user, 'Invalid tree location');\n        }\n        return this.getTreeNode(rest, node.children[index]);\n    }\n    // expensive\n    getTreeNodeWithListIndex(location) {\n        if (location.length === 0) {\n            return { node: this.root, listIndex: -1, revealed: true, visible: false };\n        }\n        const { parentNode, listIndex, revealed, visible } = this.getParentNodeWithListIndex(location);\n        const index = location[location.length - 1];\n        if (index < 0 || index > parentNode.children.length) {\n            throw new TreeError(this.user, 'Invalid tree location');\n        }\n        const node = parentNode.children[index];\n        return { node, listIndex, revealed, visible: visible && node.visible };\n    }\n    getParentNodeWithListIndex(location, node = this.root, listIndex = 0, revealed = true, visible = true) {\n        const [index, ...rest] = location;\n        if (index < 0 || index > node.children.length) {\n            throw new TreeError(this.user, 'Invalid tree location');\n        }\n        // TODO@joao perf!\n        for (let i = 0; i < index; i++) {\n            listIndex += node.children[i].renderNodeCount;\n        }\n        revealed = revealed && !node.collapsed;\n        visible = visible && node.visible;\n        if (rest.length === 0) {\n            return { parentNode: node, listIndex, revealed, visible };\n        }\n        return this.getParentNodeWithListIndex(rest, node.children[index], listIndex + 1, revealed, visible);\n    }\n    getNode(location = []) {\n        return this.getTreeNode(location);\n    }\n    // TODO@joao perf!\n    getNodeLocation(node) {\n        const location = [];\n        let indexTreeNode = node; // typing woes\n        while (indexTreeNode.parent) {\n            location.push(indexTreeNode.parent.children.indexOf(indexTreeNode));\n            indexTreeNode = indexTreeNode.parent;\n        }\n        return location.reverse();\n    }\n    getParentNodeLocation(location) {\n        if (location.length === 0) {\n            return undefined;\n        }\n        else if (location.length === 1) {\n            return [];\n        }\n        else {\n            return tail2(location)[0];\n        }\n    }\n    getFirstElementChild(location) {\n        const node = this.getTreeNode(location);\n        if (node.children.length === 0) {\n            return undefined;\n        }\n        return node.children[0].element;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { ObjectTreeModel } from './objectTreeModel.js';\nimport { TreeError, WeakMapper } from './tree.js';\nimport { Event } from '../../../common/event.js';\nimport { Iterable } from '../../../common/iterator.js';\nfunction noCompress(element) {\n    const elements = [element.element];\n    const incompressible = element.incompressible || false;\n    return {\n        element: { elements, incompressible },\n        children: Iterable.map(Iterable.from(element.children), noCompress),\n        collapsible: element.collapsible,\n        collapsed: element.collapsed\n    };\n}\n// Exported only for test reasons, do not use directly\nexport function compress(element) {\n    const elements = [element.element];\n    const incompressible = element.incompressible || false;\n    let childrenIterator;\n    let children;\n    while (true) {\n        [children, childrenIterator] = Iterable.consume(Iterable.from(element.children), 2);\n        if (children.length !== 1) {\n            break;\n        }\n        if (children[0].incompressible) {\n            break;\n        }\n        element = children[0];\n        elements.push(element.element);\n    }\n    return {\n        element: { elements, incompressible },\n        children: Iterable.map(Iterable.concat(children, childrenIterator), compress),\n        collapsible: element.collapsible,\n        collapsed: element.collapsed\n    };\n}\nfunction _decompress(element, index = 0) {\n    let children;\n    if (index < element.element.elements.length - 1) {\n        children = [_decompress(element, index + 1)];\n    }\n    else {\n        children = Iterable.map(Iterable.from(element.children), el => _decompress(el, 0));\n    }\n    if (index === 0 && element.element.incompressible) {\n        return {\n            element: element.element.elements[index],\n            children,\n            incompressible: true,\n            collapsible: element.collapsible,\n            collapsed: element.collapsed\n        };\n    }\n    return {\n        element: element.element.elements[index],\n        children,\n        collapsible: element.collapsible,\n        collapsed: element.collapsed\n    };\n}\n// Exported only for test reasons, do not use directly\nexport function decompress(element) {\n    return _decompress(element, 0);\n}\nfunction splice(treeElement, element, children) {\n    if (treeElement.element === element) {\n        return Object.assign(Object.assign({}, treeElement), { children });\n    }\n    return Object.assign(Object.assign({}, treeElement), { children: Iterable.map(Iterable.from(treeElement.children), e => splice(e, element, children)) });\n}\nconst wrapIdentityProvider = (base) => ({\n    getId(node) {\n        return node.elements.map(e => base.getId(e).toString()).join('\\0');\n    }\n});\n// Exported only for test reasons, do not use directly\nexport class CompressedObjectTreeModel {\n    constructor(user, list, options = {}) {\n        this.user = user;\n        this.rootRef = null;\n        this.nodes = new Map();\n        this.model = new ObjectTreeModel(user, list, options);\n        this.enabled = typeof options.compressionEnabled === 'undefined' ? true : options.compressionEnabled;\n        this.identityProvider = options.identityProvider;\n    }\n    get onDidSplice() { return this.model.onDidSplice; }\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\n    get onDidChangeRenderNodeCount() { return this.model.onDidChangeRenderNodeCount; }\n    setChildren(element, children = Iterable.empty(), options) {\n        // Diffs must be deem, since the compression can affect nested elements.\n        // @see https://github.com/microsoft/vscode/pull/114237#issuecomment-759425034\n        const diffIdentityProvider = options.diffIdentityProvider && wrapIdentityProvider(options.diffIdentityProvider);\n        if (element === null) {\n            const compressedChildren = Iterable.map(children, this.enabled ? compress : noCompress);\n            this._setChildren(null, compressedChildren, { diffIdentityProvider, diffDepth: Infinity });\n            return;\n        }\n        const compressedNode = this.nodes.get(element);\n        if (!compressedNode) {\n            throw new Error('Unknown compressed tree node');\n        }\n        const node = this.model.getNode(compressedNode);\n        const compressedParentNode = this.model.getParentNodeLocation(compressedNode);\n        const parent = this.model.getNode(compressedParentNode);\n        const decompressedElement = decompress(node);\n        const splicedElement = splice(decompressedElement, element, children);\n        const recompressedElement = (this.enabled ? compress : noCompress)(splicedElement);\n        const parentChildren = parent.children\n            .map(child => child === node ? recompressedElement : child);\n        this._setChildren(parent.element, parentChildren, {\n            diffIdentityProvider,\n            diffDepth: node.depth - parent.depth,\n        });\n    }\n    setCompressionEnabled(enabled) {\n        if (enabled === this.enabled) {\n            return;\n        }\n        this.enabled = enabled;\n        const root = this.model.getNode();\n        const rootChildren = root.children;\n        const decompressedRootChildren = Iterable.map(rootChildren, decompress);\n        const recompressedRootChildren = Iterable.map(decompressedRootChildren, enabled ? compress : noCompress);\n        // it should be safe to always use deep diff mode here if an identity\n        // provider is available, since we know the raw nodes are unchanged.\n        this._setChildren(null, recompressedRootChildren, {\n            diffIdentityProvider: this.identityProvider,\n            diffDepth: Infinity,\n        });\n    }\n    _setChildren(node, children, options) {\n        const insertedElements = new Set();\n        const onDidCreateNode = (node) => {\n            for (const element of node.element.elements) {\n                insertedElements.add(element);\n                this.nodes.set(element, node.element);\n            }\n        };\n        const onDidDeleteNode = (node) => {\n            for (const element of node.element.elements) {\n                if (!insertedElements.has(element)) {\n                    this.nodes.delete(element);\n                }\n            }\n        };\n        this.model.setChildren(node, children, Object.assign(Object.assign({}, options), { onDidCreateNode, onDidDeleteNode }));\n    }\n    has(element) {\n        return this.nodes.has(element);\n    }\n    getListIndex(location) {\n        const node = this.getCompressedNode(location);\n        return this.model.getListIndex(node);\n    }\n    getListRenderCount(location) {\n        const node = this.getCompressedNode(location);\n        return this.model.getListRenderCount(node);\n    }\n    getNode(location) {\n        if (typeof location === 'undefined') {\n            return this.model.getNode();\n        }\n        const node = this.getCompressedNode(location);\n        return this.model.getNode(node);\n    }\n    // TODO: review this\n    getNodeLocation(node) {\n        const compressedNode = this.model.getNodeLocation(node);\n        if (compressedNode === null) {\n            return null;\n        }\n        return compressedNode.elements[compressedNode.elements.length - 1];\n    }\n    // TODO: review this\n    getParentNodeLocation(location) {\n        const compressedNode = this.getCompressedNode(location);\n        const parentNode = this.model.getParentNodeLocation(compressedNode);\n        if (parentNode === null) {\n            return null;\n        }\n        return parentNode.elements[parentNode.elements.length - 1];\n    }\n    getFirstElementChild(location) {\n        const compressedNode = this.getCompressedNode(location);\n        return this.model.getFirstElementChild(compressedNode);\n    }\n    isCollapsible(location) {\n        const compressedNode = this.getCompressedNode(location);\n        return this.model.isCollapsible(compressedNode);\n    }\n    setCollapsible(location, collapsible) {\n        const compressedNode = this.getCompressedNode(location);\n        return this.model.setCollapsible(compressedNode, collapsible);\n    }\n    isCollapsed(location) {\n        const compressedNode = this.getCompressedNode(location);\n        return this.model.isCollapsed(compressedNode);\n    }\n    setCollapsed(location, collapsed, recursive) {\n        const compressedNode = this.getCompressedNode(location);\n        return this.model.setCollapsed(compressedNode, collapsed, recursive);\n    }\n    expandTo(location) {\n        const compressedNode = this.getCompressedNode(location);\n        this.model.expandTo(compressedNode);\n    }\n    rerender(location) {\n        const compressedNode = this.getCompressedNode(location);\n        this.model.rerender(compressedNode);\n    }\n    refilter() {\n        this.model.refilter();\n    }\n    getCompressedNode(element) {\n        if (element === null) {\n            return null;\n        }\n        const node = this.nodes.get(element);\n        if (!node) {\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\n        }\n        return node;\n    }\n}\nexport const DefaultElementMapper = elements => elements[elements.length - 1];\nclass CompressedTreeNodeWrapper {\n    constructor(unwrapper, node) {\n        this.unwrapper = unwrapper;\n        this.node = node;\n    }\n    get element() { return this.node.element === null ? null : this.unwrapper(this.node.element); }\n    get children() { return this.node.children.map(node => new CompressedTreeNodeWrapper(this.unwrapper, node)); }\n    get depth() { return this.node.depth; }\n    get visibleChildrenCount() { return this.node.visibleChildrenCount; }\n    get visibleChildIndex() { return this.node.visibleChildIndex; }\n    get collapsible() { return this.node.collapsible; }\n    get collapsed() { return this.node.collapsed; }\n    get visible() { return this.node.visible; }\n    get filterData() { return this.node.filterData; }\n}\nfunction mapList(nodeMapper, list) {\n    return {\n        splice(start, deleteCount, toInsert) {\n            list.splice(start, deleteCount, toInsert.map(node => nodeMapper.map(node)));\n        },\n        updateElementHeight(index, height) {\n            list.updateElementHeight(index, height);\n        }\n    };\n}\nfunction mapOptions(compressedNodeUnwrapper, options) {\n    return Object.assign(Object.assign({}, options), { identityProvider: options.identityProvider && {\n            getId(node) {\n                return options.identityProvider.getId(compressedNodeUnwrapper(node));\n            }\n        }, sorter: options.sorter && {\n            compare(node, otherNode) {\n                return options.sorter.compare(node.elements[0], otherNode.elements[0]);\n            }\n        }, filter: options.filter && {\n            filter(node, parentVisibility) {\n                return options.filter.filter(compressedNodeUnwrapper(node), parentVisibility);\n            }\n        } });\n}\nexport class CompressibleObjectTreeModel {\n    constructor(user, list, options = {}) {\n        this.rootRef = null;\n        this.elementMapper = options.elementMapper || DefaultElementMapper;\n        const compressedNodeUnwrapper = node => this.elementMapper(node.elements);\n        this.nodeMapper = new WeakMapper(node => new CompressedTreeNodeWrapper(compressedNodeUnwrapper, node));\n        this.model = new CompressedObjectTreeModel(user, mapList(this.nodeMapper, list), mapOptions(compressedNodeUnwrapper, options));\n    }\n    get onDidSplice() {\n        return Event.map(this.model.onDidSplice, ({ insertedNodes, deletedNodes }) => ({\n            insertedNodes: insertedNodes.map(node => this.nodeMapper.map(node)),\n            deletedNodes: deletedNodes.map(node => this.nodeMapper.map(node)),\n        }));\n    }\n    get onDidChangeCollapseState() {\n        return Event.map(this.model.onDidChangeCollapseState, ({ node, deep }) => ({\n            node: this.nodeMapper.map(node),\n            deep\n        }));\n    }\n    get onDidChangeRenderNodeCount() {\n        return Event.map(this.model.onDidChangeRenderNodeCount, node => this.nodeMapper.map(node));\n    }\n    setChildren(element, children = Iterable.empty(), options = {}) {\n        this.model.setChildren(element, children, options);\n    }\n    setCompressionEnabled(enabled) {\n        this.model.setCompressionEnabled(enabled);\n    }\n    has(location) {\n        return this.model.has(location);\n    }\n    getListIndex(location) {\n        return this.model.getListIndex(location);\n    }\n    getListRenderCount(location) {\n        return this.model.getListRenderCount(location);\n    }\n    getNode(location) {\n        return this.nodeMapper.map(this.model.getNode(location));\n    }\n    getNodeLocation(node) {\n        return node.element;\n    }\n    getParentNodeLocation(location) {\n        return this.model.getParentNodeLocation(location);\n    }\n    getFirstElementChild(location) {\n        const result = this.model.getFirstElementChild(location);\n        if (result === null || typeof result === 'undefined') {\n            return result;\n        }\n        return this.elementMapper(result.elements);\n    }\n    isCollapsible(location) {\n        return this.model.isCollapsible(location);\n    }\n    setCollapsible(location, collapsed) {\n        return this.model.setCollapsible(location, collapsed);\n    }\n    isCollapsed(location) {\n        return this.model.isCollapsed(location);\n    }\n    setCollapsed(location, collapsed, recursive) {\n        return this.model.setCollapsed(location, collapsed, recursive);\n    }\n    expandTo(location) {\n        return this.model.expandTo(location);\n    }\n    rerender(location) {\n        return this.model.rerender(location);\n    }\n    refilter() {\n        return this.model.refilter();\n    }\n    getCompressedTreeNode(location = null) {\n        return this.model.getNode(location);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { AbstractTree } from './abstractTree.js';\nimport { CompressibleObjectTreeModel } from './compressedObjectTreeModel.js';\nimport { ObjectTreeModel } from './objectTreeModel.js';\nimport { memoize } from '../../../common/decorators.js';\nimport { Iterable } from '../../../common/iterator.js';\nexport class ObjectTree extends AbstractTree {\n    constructor(user, container, delegate, renderers, options = {}) {\n        super(user, container, delegate, renderers, options);\n        this.user = user;\n    }\n    get onDidChangeCollapseState() { return this.model.onDidChangeCollapseState; }\n    setChildren(element, children = Iterable.empty(), options) {\n        this.model.setChildren(element, children, options);\n    }\n    rerender(element) {\n        if (element === undefined) {\n            this.view.rerender();\n            return;\n        }\n        this.model.rerender(element);\n    }\n    hasElement(element) {\n        return this.model.has(element);\n    }\n    createModel(user, view, options) {\n        return new ObjectTreeModel(user, view, options);\n    }\n}\nclass CompressibleRenderer {\n    constructor(_compressedTreeNodeProvider, renderer) {\n        this._compressedTreeNodeProvider = _compressedTreeNodeProvider;\n        this.renderer = renderer;\n        this.templateId = renderer.templateId;\n        if (renderer.onDidChangeTwistieState) {\n            this.onDidChangeTwistieState = renderer.onDidChangeTwistieState;\n        }\n    }\n    get compressedTreeNodeProvider() {\n        return this._compressedTreeNodeProvider();\n    }\n    renderTemplate(container) {\n        const data = this.renderer.renderTemplate(container);\n        return { compressedTreeNode: undefined, data };\n    }\n    renderElement(node, index, templateData, height) {\n        const compressedTreeNode = this.compressedTreeNodeProvider.getCompressedTreeNode(node.element);\n        if (compressedTreeNode.element.elements.length === 1) {\n            templateData.compressedTreeNode = undefined;\n            this.renderer.renderElement(node, index, templateData.data, height);\n        }\n        else {\n            templateData.compressedTreeNode = compressedTreeNode;\n            this.renderer.renderCompressedElements(compressedTreeNode, index, templateData.data, height);\n        }\n    }\n    disposeElement(node, index, templateData, height) {\n        if (templateData.compressedTreeNode) {\n            if (this.renderer.disposeCompressedElements) {\n                this.renderer.disposeCompressedElements(templateData.compressedTreeNode, index, templateData.data, height);\n            }\n        }\n        else {\n            if (this.renderer.disposeElement) {\n                this.renderer.disposeElement(node, index, templateData.data, height);\n            }\n        }\n    }\n    disposeTemplate(templateData) {\n        this.renderer.disposeTemplate(templateData.data);\n    }\n    renderTwistie(element, twistieElement) {\n        if (this.renderer.renderTwistie) {\n            return this.renderer.renderTwistie(element, twistieElement);\n        }\n        return false;\n    }\n}\n__decorate([\n    memoize\n], CompressibleRenderer.prototype, \"compressedTreeNodeProvider\", null);\nfunction asObjectTreeOptions(compressedTreeNodeProvider, options) {\n    return options && Object.assign(Object.assign({}, options), { keyboardNavigationLabelProvider: options.keyboardNavigationLabelProvider && {\n            getKeyboardNavigationLabel(e) {\n                let compressedTreeNode;\n                try {\n                    compressedTreeNode = compressedTreeNodeProvider().getCompressedTreeNode(e);\n                }\n                catch (_a) {\n                    return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e);\n                }\n                if (compressedTreeNode.element.elements.length === 1) {\n                    return options.keyboardNavigationLabelProvider.getKeyboardNavigationLabel(e);\n                }\n                else {\n                    return options.keyboardNavigationLabelProvider.getCompressedNodeKeyboardNavigationLabel(compressedTreeNode.element.elements);\n                }\n            }\n        } });\n}\nexport class CompressibleObjectTree extends ObjectTree {\n    constructor(user, container, delegate, renderers, options = {}) {\n        const compressedTreeNodeProvider = () => this;\n        const compressibleRenderers = renderers.map(r => new CompressibleRenderer(compressedTreeNodeProvider, r));\n        super(user, container, delegate, compressibleRenderers, asObjectTreeOptions(compressedTreeNodeProvider, options));\n    }\n    setChildren(element, children = Iterable.empty(), options) {\n        this.model.setChildren(element, children, options);\n    }\n    createModel(user, view, options) {\n        return new CompressibleObjectTreeModel(user, view, options);\n    }\n    updateOptions(optionsUpdate = {}) {\n        super.updateOptions(optionsUpdate);\n        if (typeof optionsUpdate.compressionEnabled !== 'undefined') {\n            this.model.setCompressionEnabled(optionsUpdate.compressionEnabled);\n        }\n    }\n    getCompressedTreeNode(element = null) {\n        return this.model.getCompressedTreeNode(element);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { IndexTreeModel } from './indexTreeModel.js';\nimport { TreeError } from './tree.js';\nimport { Iterable } from '../../../common/iterator.js';\nexport class ObjectTreeModel {\n    constructor(user, list, options = {}) {\n        this.user = user;\n        this.rootRef = null;\n        this.nodes = new Map();\n        this.nodesByIdentity = new Map();\n        this.model = new IndexTreeModel(user, list, null, options);\n        this.onDidSplice = this.model.onDidSplice;\n        this.onDidChangeCollapseState = this.model.onDidChangeCollapseState;\n        this.onDidChangeRenderNodeCount = this.model.onDidChangeRenderNodeCount;\n        if (options.sorter) {\n            this.sorter = {\n                compare(a, b) {\n                    return options.sorter.compare(a.element, b.element);\n                }\n            };\n        }\n        this.identityProvider = options.identityProvider;\n    }\n    setChildren(element, children = Iterable.empty(), options = {}) {\n        const location = this.getElementLocation(element);\n        this._setChildren(location, this.preserveCollapseState(children), options);\n    }\n    _setChildren(location, children = Iterable.empty(), options) {\n        const insertedElements = new Set();\n        const insertedElementIds = new Set();\n        const onDidCreateNode = (node) => {\n            var _a;\n            if (node.element === null) {\n                return;\n            }\n            const tnode = node;\n            insertedElements.add(tnode.element);\n            this.nodes.set(tnode.element, tnode);\n            if (this.identityProvider) {\n                const id = this.identityProvider.getId(tnode.element).toString();\n                insertedElementIds.add(id);\n                this.nodesByIdentity.set(id, tnode);\n            }\n            (_a = options.onDidCreateNode) === null || _a === void 0 ? void 0 : _a.call(options, tnode);\n        };\n        const onDidDeleteNode = (node) => {\n            var _a;\n            if (node.element === null) {\n                return;\n            }\n            const tnode = node;\n            if (!insertedElements.has(tnode.element)) {\n                this.nodes.delete(tnode.element);\n            }\n            if (this.identityProvider) {\n                const id = this.identityProvider.getId(tnode.element).toString();\n                if (!insertedElementIds.has(id)) {\n                    this.nodesByIdentity.delete(id);\n                }\n            }\n            (_a = options.onDidDeleteNode) === null || _a === void 0 ? void 0 : _a.call(options, tnode);\n        };\n        this.model.splice([...location, 0], Number.MAX_VALUE, children, Object.assign(Object.assign({}, options), { onDidCreateNode, onDidDeleteNode }));\n    }\n    preserveCollapseState(elements = Iterable.empty()) {\n        if (this.sorter) {\n            elements = [...elements].sort(this.sorter.compare.bind(this.sorter));\n        }\n        return Iterable.map(elements, treeElement => {\n            let node = this.nodes.get(treeElement.element);\n            if (!node && this.identityProvider) {\n                const id = this.identityProvider.getId(treeElement.element).toString();\n                node = this.nodesByIdentity.get(id);\n            }\n            if (!node) {\n                return Object.assign(Object.assign({}, treeElement), { children: this.preserveCollapseState(treeElement.children) });\n            }\n            const collapsible = typeof treeElement.collapsible === 'boolean' ? treeElement.collapsible : node.collapsible;\n            const collapsed = typeof treeElement.collapsed !== 'undefined' ? treeElement.collapsed : node.collapsed;\n            return Object.assign(Object.assign({}, treeElement), { collapsible,\n                collapsed, children: this.preserveCollapseState(treeElement.children) });\n        });\n    }\n    rerender(element) {\n        const location = this.getElementLocation(element);\n        this.model.rerender(location);\n    }\n    getFirstElementChild(ref = null) {\n        const location = this.getElementLocation(ref);\n        return this.model.getFirstElementChild(location);\n    }\n    has(element) {\n        return this.nodes.has(element);\n    }\n    getListIndex(element) {\n        const location = this.getElementLocation(element);\n        return this.model.getListIndex(location);\n    }\n    getListRenderCount(element) {\n        const location = this.getElementLocation(element);\n        return this.model.getListRenderCount(location);\n    }\n    isCollapsible(element) {\n        const location = this.getElementLocation(element);\n        return this.model.isCollapsible(location);\n    }\n    setCollapsible(element, collapsible) {\n        const location = this.getElementLocation(element);\n        return this.model.setCollapsible(location, collapsible);\n    }\n    isCollapsed(element) {\n        const location = this.getElementLocation(element);\n        return this.model.isCollapsed(location);\n    }\n    setCollapsed(element, collapsed, recursive) {\n        const location = this.getElementLocation(element);\n        return this.model.setCollapsed(location, collapsed, recursive);\n    }\n    expandTo(element) {\n        const location = this.getElementLocation(element);\n        this.model.expandTo(location);\n    }\n    refilter() {\n        this.model.refilter();\n    }\n    getNode(element = null) {\n        if (element === null) {\n            return this.model.getNode(this.model.rootRef);\n        }\n        const node = this.nodes.get(element);\n        if (!node) {\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\n        }\n        return node;\n    }\n    getNodeLocation(node) {\n        return node.element;\n    }\n    getParentNodeLocation(element) {\n        if (element === null) {\n            throw new TreeError(this.user, `Invalid getParentNodeLocation call`);\n        }\n        const node = this.nodes.get(element);\n        if (!node) {\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\n        }\n        const location = this.model.getNodeLocation(node);\n        const parentLocation = this.model.getParentNodeLocation(location);\n        const parent = this.model.getNode(parentLocation);\n        return parent.element;\n    }\n    getElementLocation(element) {\n        if (element === null) {\n            return [];\n        }\n        const node = this.nodes.get(element);\n        if (!node) {\n            throw new TreeError(this.user, `Tree element not found: ${element}`);\n        }\n        return this.model.getNodeLocation(node);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nexport var TreeMouseEventTarget;\n(function (TreeMouseEventTarget) {\n    TreeMouseEventTarget[TreeMouseEventTarget[\"Unknown\"] = 0] = \"Unknown\";\n    TreeMouseEventTarget[TreeMouseEventTarget[\"Twistie\"] = 1] = \"Twistie\";\n    TreeMouseEventTarget[TreeMouseEventTarget[\"Element\"] = 2] = \"Element\";\n})(TreeMouseEventTarget || (TreeMouseEventTarget = {}));\nexport class TreeError extends Error {\n    constructor(user, message) {\n        super(`TreeError [${user}] ${message}`);\n    }\n}\nexport class WeakMapper {\n    constructor(fn) {\n        this.fn = fn;\n        this._map = new WeakMap();\n    }\n    map(key) {\n        let result = this._map.get(key);\n        if (!result) {\n            result = this.fn(key);\n            this._map.set(key, result);\n        }\n        return result;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../dom.js';\nimport { StandardKeyboardEvent } from '../keyboardEvent.js';\nimport { StandardMouseEvent } from '../mouseEvent.js';\nimport { Gesture } from '../touch.js';\nimport { Disposable } from '../../common/lifecycle.js';\nexport class Widget extends Disposable {\n    onclick(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.CLICK, (e) => listener(new StandardMouseEvent(e))));\n    }\n    onmousedown(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.MOUSE_DOWN, (e) => listener(new StandardMouseEvent(e))));\n    }\n    onmouseover(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.MOUSE_OVER, (e) => listener(new StandardMouseEvent(e))));\n    }\n    onnonbubblingmouseout(domNode, listener) {\n        this._register(dom.addDisposableNonBubblingMouseOutListener(domNode, (e) => listener(new StandardMouseEvent(e))));\n    }\n    onkeydown(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.KEY_DOWN, (e) => listener(new StandardKeyboardEvent(e))));\n    }\n    onkeyup(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.KEY_UP, (e) => listener(new StandardKeyboardEvent(e))));\n    }\n    oninput(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.INPUT, listener));\n    }\n    onblur(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.BLUR, listener));\n    }\n    onfocus(domNode, listener) {\n        this._register(dom.addDisposableListener(domNode, dom.EventType.FOCUS, listener));\n    }\n    ignoreGesture(domNode) {\n        Gesture.ignoreTarget(domNode);\n    }\n}\n"],"names":["MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","CSS_DONE","CSS_ACTIVE","CSS_INFINITE","CSS_INFINITE_LONG_RUNNING","CSS_DISCRETE","defaultOpts","progressBarBackground","Color","ProgressBar","container","options","Object","create","mixin","workedVal","showDelayedScheduler","_register","RunOnceScheduler","show","element","longRunningScheduler","infiniteLongRunning","LONG_RUNNING_INFINITE_THRESHOLD","this","document","createElement","classList","add","setAttribute","appendChild","bit","applyStyles","style","width","opacity","remove","totalWork","undefined","cancel","doDone","delayed","contains","setTimeout","off","schedule","styles","background","toString","backgroundColor","Disposable","OrthogonalEdge","__decorate","decorators","target","key","desc","d","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","onDidChangeGlobalSize","Emitter","onDidChangeHoverDelay","MouseEventFactory","disposables","DisposableStore","DomEmitter","window","event","dispose","memoize","prototype","GestureEventFactory","el","EventType","OrthogonalPointerEventFactory","factory","onPointerMove","onPointerUp","PointerEventsDisabledCssClass","Sash","layoutProvider","hoverDelay","hoverDelayer","Delayer","_state","onDidEnablementChange","_onDidStart","_onDidChange","_onDidReset","_onDidEnd","orthogonalStartSashDisposables","orthogonalStartDragHandleDisposables","orthogonalEndSashDisposables","orthogonalEndDragHandleDisposables","onDidStart","onDidChange","onDidReset","onDidEnd","linkedSash","append","$","orthogonalEdge","isMacintosh","onMouseDown","e","onPointerStart","onMouseDoubleClick","onPointerDoublePress","onMouseEnter","onMouseLeave","Gesture","onTouchStart","Event","_a","assign","initialTarget","onTap","onDoubleTap","res","count","size","orientation","height","layout","delay","orthogonalStartSash","orthogonalEndSash","toggle","state","fire","_orthogonalStartSash","sash","clear","onChange","_orthogonalStartDragHandle","toDisposable","_orthogonalEndSash","_orthogonalEndDragHandle","pointerEventFactory","EventHelper","isMultisashResize","__orthogonalSashEvent","orthogonalSash","getOrthogonalSash","__linkedSashEvent","iframes","getElementsByTagName","startX","pageX","startY","pageY","altKey","startEvent","currentX","currentY","createStyleSheet","updateStyle","cursor","textContent","removeChild","verticalProvider","left","getVerticalSashLeft","getVerticalSashTop","top","getVerticalSashHeight","horizontalProvider","getHorizontalSashTop","getHorizontalSashLeft","getHorizontalSashWidth","HTMLElement","fromLinkedSash","trigger","then","ARROW_IMG_SIZE","ScrollbarArrow","opts","_onActivate","onActivate","bgDomNode","className","position","bgWidth","bgHeight","bottom","right","domNode","icon","classNamesArray","_mouseMoveMonitor","GlobalMouseMoveMonitor","onmousedown","_arrowMouseDown","_mousedownRepeatTimer","IntervalTimer","_mousedownScheduleRepeatTimer","TimeoutTimer","cancelAndSet","startMonitoring","buttons","standardMouseMoveMerger","mouseMoveData","preventDefault","Widget","ScrollbarVisibilityController","visibility","visibleClassName","invisibleClassName","_visibility","_visibleClassName","_invisibleClassName","_domNode","_isVisible","_isNeeded","_rawShouldBeVisible","_shouldBeVisible","_revealTimer","_updateShouldBeVisible","rawShouldBeVisible","shouldBeVisible","_applyVisibilitySetting","ensureVisibility","isNeeded","setClassName","setShouldBeVisible","_reveal","_hide","setIfNotSet","withFadeAway","AbstractScrollbar","_lazyRender","lazyRender","_host","host","_scrollable","scrollable","_scrollByPage","scrollByPage","_scrollbarState","scrollbarState","_visibilityController","extraScrollbarClassName","setIsNeeded","_shouldRender","createFastDomNode","setDomNode","setPosition","_domNodeMouseDown","arrow","slider","setTop","setLeft","setWidth","setHeight","setLayerHinting","setContain","leftButton","_sliderMouseDown","onclick","stopPropagation","visibleSize","setVisibleSize","render","elementScrollSize","setScrollSize","elementScrollPosition","setScrollPosition","_renderDomNode","getRectangleLargeSize","getRectangleSmallSize","_updateSlider","getSliderSize","getArrowSize","getSliderPosition","_onMouseDown","domTop","getClientRects","sliderStart","sliderStop","mousePos","_sliderMousePosition","offsetX","offsetY","browserEvent","domNodePosition","dom","getDomNodePagePosition","posx","posy","offset","_mouseDownRelativePosition","_setDesiredScrollPositionNow","getDesiredScrollPositionFromOffsetPaged","getDesiredScrollPositionFromOffset","onDragFinished","initialMousePosition","initialMouseOrthogonalPosition","_sliderOrthogonalMousePosition","initialScrollbarState","clone","toggleClassName","mouseOrthogonalPosition","mouseOrthogonalDelta","Math","abs","platform","getScrollPosition","mouseDelta","getDesiredScrollPositionFromDelta","onDragEnd","onDragStart","_desiredScrollPosition","desiredScrollPosition","writeScrollPosition","setScrollPositionNow","scrollbarSize","_updateScrollbarSize","setScrollbarSize","ScrollbarState","arrowSize","oppositeScrollbarSize","scrollSize","scrollPosition","_scrollbarSize","round","_oppositeScrollbarSize","_arrowSize","_visibleSize","_scrollSize","_scrollPosition","_computedAvailableSize","_computedIsNeeded","_computedSliderSize","_computedSliderRatio","_computedSliderPosition","_refreshComputedValues","iVisibleSize","iScrollSize","iScrollPosition","_computeValues","computedAvailableSize","computedIsNeeded","computedSliderSize","computedSliderRatio","computedSliderPosition","desiredSliderPosition","correctedOffset","delta","max","computedRepresentableSize","floor","HorizontalScrollbar","scrollDimensions","getScrollDimensions","getCurrentScrollPosition","horizontalHasArrows","horizontal","horizontalScrollbarSize","vertical","verticalScrollbarSize","scrollWidth","scrollLeft","arrowDelta","scrollbarDelta","_createArrow","Codicon","onMouseWheel","StandardWheelEvent","_createSlider","horizontalSliderSize","sliderSize","sliderPosition","largeSize","smallSize","setBottom","_onElementScrollSize","_onElementScrollPosition","_onElementSize","updateScrollbarSize","setOppositeScrollbarSize","setVisibility","VerticalScrollbar","verticalHasArrows","scrollHeight","scrollTop","verticalSliderSize","setRight","MouseWheelClassifierItem","timestamp","deltaX","deltaY","score","MouseWheelClassifier","_capacity","_memory","_front","_rear","remainingInfluence","iteration","index","influence","pow","item","_computeScore","_isAlmostInt","min","value","INSTANCE","AbstractScrollableElement","_onScroll","onScroll","_onWillScroll","overflow","_options","result","useShadows","handleMouseWheel","flipAxes","consumeMouseWheelIfScrollbarIsNeeded","alwaysConsumeMouseWheel","scrollYToX","mouseWheelScrollSensitivity","fastScrollSensitivity","scrollPredominantAxis","mouseWheelSmoothScroll","listenOnDomNode","resolveOptions","_onDidScroll","scrollbarHost","mouseWheelEvent","_onMouseWheel","_onDragStart","_onDragEnd","_verticalScrollbar","_horizontalScrollbar","_leftShadowDomNode","_topShadowDomNode","_topLeftShadowDomNode","_listenOnDomNode","_mouseWheelToDispose","_setListeningToMouseWheel","onmouseover","_onMouseOver","onnonbubblingmouseout","_onMouseOut","_hideTimeout","_isDragging","_mouseIsOver","_revealOnScroll","parent","insertBefore","delegateMouseDown","dimensions","setScrollDimensions","newClassName","newOptions","updateOptions","_render","shouldListen","push","addDisposableListener","MOUSE_WHEEL","passive","classifier","osZoomFactor","devicePixelRatio","getZoomFactor","accept","Date","now","didScroll","shiftConvert","shiftKey","futureScrollPosition","getFutureScrollPosition","deltaScrollTop","desiredScrollTop","ceil","deltaScrollLeft","desiredScrollLeft","validateScrollPosition","isPhysicalMouseWheel","setScrollPositionSmooth","consumeMouseWheel","onDidScroll","Error","scrollState","enableTop","enableLeft","leftClassName","topClassName","topLeftClassName","beginReveal","_scheduleHide","beginHide","ScrollableElement","Scrollable","forceIntegerValues","smoothScrollDuration","scheduleAtNextAnimationFrame","callback","update","SmoothScrollableElement","reuseAnimation","DomScrollableElement","_element","scrollTopChanged","scrollLeftChanged","scanDomNode","clientWidth","clientHeight","State","Sizing","defaultStyles","separatorBorder","ViewItem","view","disposable","_cachedVisibleSize","_size","cachedVisibleSize","visible","clamp","viewMinimumSize","viewMaximumSize","setVisible","minimumSize","maximumSize","priority","snap","enabled","pointerEvents","layoutContext","layoutContainer","VerticalViewItem","HorizontalViewItem","Distribute","type","Split","Invisible","SplitView","_b","_c","_d","_e","contentSize","proportions","viewItems","sashItems","Idle","_onDidSashChange","_onDidSashReset","_startSnappingEnabled","_endSnappingEnabled","onDidSashChange","onDidSashReset","inverseAltBehavior","proportionalLayout","getSashOrthogonalSize","sashContainer","viewContainer","scrollableElement","scrollbarVisibility","getDomNode","descriptor","views","forEach","viewDescriptor","sizing","types","doAddView","reduce","saveProportions","startSnappingEnabled","updateSashEnablement","endSnappingEnabled","isTransparent","removeProperty","setProperty","skipLayout","previousSize","indexes","range","lowPriorityIndexes","filter","highPriorityIndexes","resize","distributeEmptySpace","layoutViews","map","start","alt","findIndex","combinedDisposable","body","resetSashDragState","sashDragState","current","snapBefore","snapAfter","sizes","minDelta","Number","NEGATIVE_INFINITY","maxDelta","POSITIVE_INFINITY","viewItem","upIndexes","downIndexes","minDeltaUp","maxDeltaUp","maxDeltaDown","minDeltaDown","snapBeforeIndex","findFirstSnapIndex","snapAfterIndex","halfSize","limitDelta","newDelta","isLastSash","newSizes","viewItemIndex","newMinDelta","newMaxDelta","resizeIndex","indexOf","relayout","Busy","flexibleViewItems","flexibleSize","children","viewSize","onChangeDisposable","onViewChange","containerDisposable","getViewSize","splice","s","getSashPosition","sashEventMapper","onStart","onStartDisposable","onSashStart","onSashChange","onEnd","onEndDisposable","onSashEnd","onDidResetDisposable","sashItem","distributeViewSizes","overloadMinDelta","overloadMaxDelta","pushToStart","pushToEnd","upItems","upSizes","downItems","downSizes","snapped","snapView","deltaUp","viewDelta","deltaDown","lowPriorityIndex","emptyDelta","updateScrollableElement","previous","collapsesDown","expandsDown","reverseViews","reverse","collapsesUp","expandsUp","snappedBefore","snappedAfter","TableListRenderer","columns","renderers","getColumnSize","templateId","TemplateId","renderedTemplates","Set","rendererMap","Map","column","renderer","get","rowContainer","cellContainers","cellTemplateData","cellContainer","renderTemplate","templateData","cell","project","renderElement","disposeElement","disposeTemplate","clearNode","delete","ColumnHeader","_onDidLayout","onDidLayout","title","tooltip","label","minimumWidth","maximumWidth","onDidChangeWidthConstraints","Table","user","virtualDelegate","domId","InstanceCount","cachedWidth","cachedHeight","headers","a","b","weight","splitview","headerRowHeight","lineHeight","delegate","list","List","getHeight","row","getTemplateId","h","layoutColumn","totalWeight","resizeView","styleElement","onDidChangeFocus","onDidChangeSelection","onMouseDblClick","onPointer","onDidFocus","onDidDispose","deleteCount","elements","content","join","getSelectedElements","getSelection","getFocus","TreeElementsDragAndDropData","data","node","ElementsDragAndDropData","asTreeDragAndDropData","TreeNodeListDragAndDrop","modelProvider","dnd","autoExpandDisposable","getDragURI","nodes","originalEvent","getDragLabel","targetNode","targetIndex","raw","onDragOver","didChangeAutoExpandNode","autoExpandNode","autoExpand","disposableTimeout","model","ref","getNodeLocation","isCollapsed","setCollapsed","bubble","feedback","effect","parentRef","getParentNodeLocation","parentNode","getNode","parentIndex","getListIndex","getListRenderCount","drop","asListOptions","identityProvider","getId","multipleSelectionController","isSelectionSingleChangeEvent","isSelectionRangeChangeEvent","accessibilityProvider","getSetSize","visibleChildrenCount","getPosInSet","visibleChildIndex","isChecked","getRole","getAriaLabel","getWidgetAriaLabel","getWidgetRole","getAriaLevel","depth","getActiveDescendantId","keyboardNavigationLabelProvider","getKeyboardNavigationLabel","enableKeyboardNavigation","simpleKeyboardNavigation","RenderIndentGuides","ComposedTreeDelegate","hasDynamicHeight","setDynamicHeight","EventCollection","_elements","TreeRenderer","onDidChangeCollapseState","activeNodes","renderedElements","renderedNodes","indent","DefaultIndent","hideTwistiesOfChildlessElements","shouldRenderIndentGuides","renderedIndentGuides","SetMap","activeIndentNodes","indentGuidesDisposable","onDidChangeNodeTwistieState","onDidChangeTwistieState","renderIndentGuides","None","_onDidChangeActiveNodes","twistie","contents","set","paddingLeft","renderTwistie","twistieRendered","collapsible","collapsed","String","removeAttribute","disposableStore","guide","has","childElementCount","firstElementChild","line","TypeFilter","tree","_filter","_totalCount","_matchCount","_pattern","_lowercasePattern","onWillRefilter","reset","pattern","toLowerCase","parentVisibility","isFilterResult","getVisibleState","FuzzyScore","labels","Array","isArray","l","labelStr","fuzzyScore","filterOnType","TypeFilterController","keyboardNavigationDelegate","_enabled","_empty","_onDidChangeEmptyState","positionClassName","automaticKeyboardNavigation","triggered","_onDidChangePattern","enabledDisposables","draggable","messageDomNode","getHTMLElement","labelDomNode","controls","_filterOnType","filterOnTypeDomNode","checked","tabIndex","updateFilterOnTypeTitleAndIcon","onDidChangeFilterOnType","clearDomNode","localize","keyboardNavigationEventFilter","onDidSplice","onDidSpliceModel","disable","enable","refilter","onEventOrInput","onRawKeyDown","onKeyDown","isInputElement","test","StandardKeyboardEvent","mightProducePrintableCharacter","keyCode","ctrlKey","metaKey","onClearClick","onInput","MouseEvent","substr","parentElement","domFocus","focusNext","filterData","focus","getRelativeTop","reveal","containerWidth","midContainerWidth","updatePosition","x","clientX","dataTransfer","dropEffect","StaticDND","DragAndDropData","noMatches","totalCount","matchCount","innerText","asTreeMouseEvent","TreeMouseEventTarget","hasParentWithClass","dfs","fn","child","Trait","getFirstViewElementWithTrait","_nodeSet","createNodeSet","__forceEvent","equals","_set","silent","that","nodeSet","insertedNodes","deletedNodes","visit","values","deletedNodesIdSet","deletedNodesVisitor","insertedNodesMap","insertedNodesVisitor","id","insertedNode","TreeNodeListMouseController","isMonacoEditor","onTwistie","expandOnlyOnTwistieClick","detail","expandOnDoubleClick","location","recursive","setFocus","MouseController","TreeNodeList","focusTrait","selectionTrait","anchorTrait","anchor","additionalFocus","additionalSelection","distinct","fromAPI","AbstractTree","_user","eventBufferer","EventBufferer","_onWillRefilter","_onDidUpdateOptions","treeDelegate","onDidChangeCollapseStateRelay","Relay","onDidChangeActiveNodes","getFocusedElements","selection","getAnchorElement","createModel","input","onDidModelSplice","bufferEvents","debounce","getNodes","keyboardSupport","on","onLeftArrow","onRightArrow","onSpace","DefaultKeyboardNavigationDelegate","typeFilterController","focusNavigationFilter","shouldAllowFocus","Always","wrapEvent","optionsUpdate","suffix","treeIndentGuidesStroke","transparent","getFirstElementChild","isCollapsible","setCollapsible","setSelection","n","loop","relativeTop","expandTo","parentLocation","parentListIndex","some","firstChildIndex","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","done","apply","createAsyncDataTreeNode","props","refreshPromise","stale","slow","collapsedByDefault","isAncestor","ancestor","descendant","intersects","other","AsyncDataTreeNodeWrapper","AsyncDataTreeRenderer","nodeMapper","twistieElement","asTreeEvent","AsyncDataTreeElementsDragAndDropData","asAsyncDataTreeDragAndDropData","AsyncDataTreeNodeListDragAndDrop","asObjectTreeOptions","collapseByDefault","sorter","additionalScrollHeight","AsyncDataTree","dataSource","subTreeRefreshPromises","refreshPromises","_onDidRender","_onDidChangeNodeSlowState","WeakMapper","autoExpandSingleChildren","createTree","root","hasChildren","_onDidChangeCollapseState","onDidChangeModel","objectTreeDelegate","objectTreeRenderers","objectTreeOptions","ObjectTree","viewState","promise","viewStateContext","_updateChildren","rerender","TreeError","getDataNode","refreshAndRenderNode","dataNode","collapse","hasElement","expand","getParentElement","refreshNode","doRefreshSubTree","finally","doRefreshNode","childrenToRefresh","Promises","doGetChildren","isIterable","childrenPromise","slowTimeout","timeout","_","Iterable","setChildren","isCancellationError","getChildren","processChildren","createCancelablePromise","deep","catch","onUnexpectedError","childrenElementsIterable","childrenElements","nodesToForget","childrenTreeNodesById","asyncDataTreeNode","childAsyncDataTreeNode","expanded","asTreeElement","diffIdentityProvider","sort","compare","bind","CompressibleAsyncDataTreeNodeWrapper","incompressible","CompressibleAsyncDataTreeRenderer","compressibleNodeMapperProvider","renderCompressedElements","disposeCompressedElements","CompressibleAsyncDataTree","compressionDelegate","compressibleNodeMapper","getCompressedNodeKeyboardNavigationLabel","els","asCompressibleObjectTreeOptions","CompressibleObjectTree","isIncompressible","getUncompressedIds","compressedNode","getCompressedTreeNode","oldSelection","oldFocus","didChangeSelection","didChangeFocus","filterResult","DataTree","ObjectTreeModel","obj","isCollapsibleStateUpdate","IndexTreeModel","rootElement","rootRef","_onDidChangeRenderNodeCount","onDidChangeRenderNodeCount","_onDidSplice","refilterDelayer","MicrotaskDelay","renderNodeCount","toInsert","spliceSmart","spliceSimple","identity","toInsertIterable","recurseLevels","diffDepth","getParentNodeWithListIndex","lastDiffIds","diff","LcsDiff","getElements","slice","ComputeDiff","quitEarly","locationPrefix","recurseSplice","fromOriginal","fromModified","MAX_SAFE_INTEGER","lastStartO","lastStartM","changes","originalStart","change","originalLength","modifiedStart","modifiedLength","onDidCreateNode","onDidDeleteNode","listIndex","revealed","treeListElementsToInsert","nodesToInsertIterator","createTreeNode","lastIndex","lastHadChildren","visibleChildStartIndex","nodesToInsert","insertedVisibleChildrenCount","deletedVisibleChildrenCount","visibleDeleteCount","_updateAncestorsRenderNodeCount","currentlyHasChildren","getTreeNodeWithListIndex","hasTreeNode","getTreeNode","_setCollapseState","_setListNodeCollapseState","onlyVisibleChildIndex","_setNodeCollapseState","previousRenderNodeCount","updateNodeAfterCollapseChange","updateNodeAfterFilterChange","treeElement","treeListElements","_filterNode","childElements","childRevealed","childNodes","pop","_updateNodeAfterCollapseChange","_updateNodeAfterFilterChange","resultStartLength","hasVisibleDescendants","rest","indexTreeNode","tail2","noCompress","compress","childrenIterator","_decompress","decompress","wrapIdentityProvider","base","CompressedObjectTreeModel","compressionEnabled","compressedParentNode","decompressedElement","splicedElement","recompressedElement","parentChildren","_setChildren","compressedChildren","Infinity","rootChildren","decompressedRootChildren","recompressedRootChildren","insertedElements","getCompressedNode","DefaultElementMapper","CompressedTreeNodeWrapper","unwrapper","mapList","updateElementHeight","mapOptions","compressedNodeUnwrapper","otherNode","CompressibleObjectTreeModel","elementMapper","setCompressionEnabled","CompressibleRenderer","_compressedTreeNodeProvider","compressedTreeNode","compressedTreeNodeProvider","compressibleRenderers","nodesByIdentity","getElementLocation","preserveCollapseState","insertedElementIds","tnode","call","MAX_VALUE","message","_map","WeakMap","listener","StandardMouseEvent"],"sourceRoot":""}