{"version":3,"file":"static/js/monaco-editor-vendor.9413e776.0ec4e776.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/browser/widget/codeEditorWidget.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffReview.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffEditorWidget.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/inlineDiffMargin.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/diffNavigator.js","../node_modules/monaco-editor/esm/vs/editor/browser/widget/embeddedCodeEditorWidget.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport '../services/markerDecorations.js';\nimport './media/editor.css';\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable, dispose } from '../../../base/common/lifecycle.js';\nimport { Schemas } from '../../../base/common/network.js';\nimport { EditorConfiguration } from '../config/editorConfiguration.js';\nimport { EditorExtensionsRegistry } from '../editorExtensions.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { View } from '../view/view.js';\nimport { ViewUserInputEvents } from '../view/viewUserInputEvents.js';\nimport { filterValidationDecorations } from '../../common/config/editorOptions.js';\nimport { CursorsController } from '../../common/cursor/cursor.js';\nimport { CursorColumns } from '../../common/core/cursorColumns.js';\nimport { Position } from '../../common/core/position.js';\nimport { Range } from '../../common/core/range.js';\nimport { Selection } from '../../common/core/selection.js';\nimport { InternalEditorAction } from '../../common/editorAction.js';\nimport * as editorCommon from '../../common/editorCommon.js';\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\nimport * as modes from '../../common/languages.js';\nimport { editorUnnecessaryCodeBorder, editorUnnecessaryCodeOpacity } from '../../common/core/editorColorRegistry.js';\nimport { editorErrorBorder, editorErrorForeground, editorHintBorder, editorHintForeground, editorInfoBorder, editorInfoForeground, editorWarningBorder, editorWarningForeground, editorForeground, editorErrorBackground, editorInfoBackground, editorWarningBackground } from '../../../platform/theme/common/colorRegistry.js';\nimport { ViewModel } from '../../common/viewModel/viewModelImpl.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IThemeService, registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { withNullAsUndefined } from '../../../base/common/types.js';\nimport { MonospaceLineBreaksComputerFactory } from '../../common/viewModel/monospaceLineBreaksComputer.js';\nimport { DOMLineBreaksComputerFactory } from '../view/domLineBreaksComputer.js';\nimport { WordOperations } from '../../common/cursor/cursorWordOperations.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nlet EDITOR_ID = 0;\nclass ModelData {\n    constructor(model, viewModel, view, hasRealView, listenersToRemove) {\n        this.model = model;\n        this.viewModel = viewModel;\n        this.view = view;\n        this.hasRealView = hasRealView;\n        this.listenersToRemove = listenersToRemove;\n    }\n    dispose() {\n        dispose(this.listenersToRemove);\n        this.model.onBeforeDetached();\n        if (this.hasRealView) {\n            this.view.dispose();\n        }\n        this.viewModel.dispose();\n    }\n}\nlet CodeEditorWidget = class CodeEditorWidget extends Disposable {\n    constructor(domElement, _options, codeEditorWidgetOptions, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService) {\n        super();\n        this.languageConfigurationService = languageConfigurationService;\n        //#region Eventing\n        this._onDidDispose = this._register(new Emitter());\n        this.onDidDispose = this._onDidDispose.event;\n        this._onDidChangeModelContent = this._register(new Emitter());\n        this.onDidChangeModelContent = this._onDidChangeModelContent.event;\n        this._onDidChangeModelLanguage = this._register(new Emitter());\n        this.onDidChangeModelLanguage = this._onDidChangeModelLanguage.event;\n        this._onDidChangeModelLanguageConfiguration = this._register(new Emitter());\n        this.onDidChangeModelLanguageConfiguration = this._onDidChangeModelLanguageConfiguration.event;\n        this._onDidChangeModelOptions = this._register(new Emitter());\n        this.onDidChangeModelOptions = this._onDidChangeModelOptions.event;\n        this._onDidChangeModelDecorations = this._register(new Emitter());\n        this.onDidChangeModelDecorations = this._onDidChangeModelDecorations.event;\n        this._onDidChangeConfiguration = this._register(new Emitter());\n        this.onDidChangeConfiguration = this._onDidChangeConfiguration.event;\n        this._onDidChangeModel = this._register(new Emitter());\n        this.onDidChangeModel = this._onDidChangeModel.event;\n        this._onDidChangeCursorPosition = this._register(new Emitter());\n        this.onDidChangeCursorPosition = this._onDidChangeCursorPosition.event;\n        this._onDidChangeCursorSelection = this._register(new Emitter());\n        this.onDidChangeCursorSelection = this._onDidChangeCursorSelection.event;\n        this._onDidAttemptReadOnlyEdit = this._register(new Emitter());\n        this.onDidAttemptReadOnlyEdit = this._onDidAttemptReadOnlyEdit.event;\n        this._onDidLayoutChange = this._register(new Emitter());\n        this.onDidLayoutChange = this._onDidLayoutChange.event;\n        this._editorTextFocus = this._register(new BooleanEventEmitter());\n        this.onDidFocusEditorText = this._editorTextFocus.onDidChangeToTrue;\n        this.onDidBlurEditorText = this._editorTextFocus.onDidChangeToFalse;\n        this._editorWidgetFocus = this._register(new BooleanEventEmitter());\n        this.onDidFocusEditorWidget = this._editorWidgetFocus.onDidChangeToTrue;\n        this.onDidBlurEditorWidget = this._editorWidgetFocus.onDidChangeToFalse;\n        this._onWillType = this._register(new Emitter());\n        this.onWillType = this._onWillType.event;\n        this._onDidType = this._register(new Emitter());\n        this.onDidType = this._onDidType.event;\n        this._onDidCompositionStart = this._register(new Emitter());\n        this.onDidCompositionStart = this._onDidCompositionStart.event;\n        this._onDidCompositionEnd = this._register(new Emitter());\n        this.onDidCompositionEnd = this._onDidCompositionEnd.event;\n        this._onDidPaste = this._register(new Emitter());\n        this.onDidPaste = this._onDidPaste.event;\n        this._onMouseUp = this._register(new Emitter());\n        this.onMouseUp = this._onMouseUp.event;\n        this._onMouseDown = this._register(new Emitter());\n        this.onMouseDown = this._onMouseDown.event;\n        this._onMouseDrag = this._register(new Emitter());\n        this.onMouseDrag = this._onMouseDrag.event;\n        this._onMouseDrop = this._register(new Emitter());\n        this.onMouseDrop = this._onMouseDrop.event;\n        this._onMouseDropCanceled = this._register(new Emitter());\n        this.onMouseDropCanceled = this._onMouseDropCanceled.event;\n        this._onContextMenu = this._register(new Emitter());\n        this.onContextMenu = this._onContextMenu.event;\n        this._onMouseMove = this._register(new Emitter());\n        this.onMouseMove = this._onMouseMove.event;\n        this._onMouseLeave = this._register(new Emitter());\n        this.onMouseLeave = this._onMouseLeave.event;\n        this._onMouseWheel = this._register(new Emitter());\n        this.onMouseWheel = this._onMouseWheel.event;\n        this._onKeyUp = this._register(new Emitter());\n        this.onKeyUp = this._onKeyUp.event;\n        this._onKeyDown = this._register(new Emitter());\n        this.onKeyDown = this._onKeyDown.event;\n        this._onDidContentSizeChange = this._register(new Emitter());\n        this.onDidContentSizeChange = this._onDidContentSizeChange.event;\n        this._onDidScrollChange = this._register(new Emitter());\n        this.onDidScrollChange = this._onDidScrollChange.event;\n        this._onDidChangeViewZones = this._register(new Emitter());\n        this.onDidChangeViewZones = this._onDidChangeViewZones.event;\n        this._onDidChangeHiddenAreas = this._register(new Emitter());\n        this.onDidChangeHiddenAreas = this._onDidChangeHiddenAreas.event;\n        this._bannerDomNode = null;\n        const options = Object.assign({}, _options);\n        this._domElement = domElement;\n        this._overflowWidgetsDomNode = options.overflowWidgetsDomNode;\n        delete options.overflowWidgetsDomNode;\n        this._id = (++EDITOR_ID);\n        this._decorationTypeKeysToIds = {};\n        this._decorationTypeSubtypes = {};\n        this._telemetryData = codeEditorWidgetOptions.telemetryData;\n        this._configuration = this._register(this._createConfiguration(codeEditorWidgetOptions.isSimpleWidget || false, options, accessibilityService));\n        this._register(this._configuration.onDidChange((e) => {\n            this._onDidChangeConfiguration.fire(e);\n            const options = this._configuration.options;\n            if (e.hasChanged(131 /* layoutInfo */)) {\n                const layoutInfo = options.get(131 /* layoutInfo */);\n                this._onDidLayoutChange.fire(layoutInfo);\n            }\n        }));\n        this._contextKeyService = this._register(contextKeyService.createScoped(this._domElement));\n        this._notificationService = notificationService;\n        this._codeEditorService = codeEditorService;\n        this._commandService = commandService;\n        this._themeService = themeService;\n        this._register(new EditorContextKeysManager(this, this._contextKeyService));\n        this._register(new EditorModeContext(this, this._contextKeyService));\n        this._instantiationService = instantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService]));\n        this._modelData = null;\n        this._contributions = {};\n        this._actions = {};\n        this._focusTracker = new CodeEditorWidgetFocusTracker(domElement);\n        this._register(this._focusTracker.onChange(() => {\n            this._editorWidgetFocus.setValue(this._focusTracker.hasFocus());\n        }));\n        this._contentWidgets = {};\n        this._overlayWidgets = {};\n        let contributions;\n        if (Array.isArray(codeEditorWidgetOptions.contributions)) {\n            contributions = codeEditorWidgetOptions.contributions;\n        }\n        else {\n            contributions = EditorExtensionsRegistry.getEditorContributions();\n        }\n        for (const desc of contributions) {\n            if (this._contributions[desc.id]) {\n                onUnexpectedError(new Error(`Cannot have two contributions with the same id ${desc.id}`));\n                continue;\n            }\n            try {\n                const contribution = this._instantiationService.createInstance(desc.ctor, this);\n                this._contributions[desc.id] = contribution;\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n        }\n        EditorExtensionsRegistry.getEditorActions().forEach((action) => {\n            if (this._actions[action.id]) {\n                onUnexpectedError(new Error(`Cannot have two actions with the same id ${action.id}`));\n                return;\n            }\n            const internalAction = new InternalEditorAction(action.id, action.label, action.alias, withNullAsUndefined(action.precondition), () => {\n                return this._instantiationService.invokeFunction((accessor) => {\n                    return Promise.resolve(action.runEditorCommand(accessor, this, null));\n                });\n            }, this._contextKeyService);\n            this._actions[internalAction.id] = internalAction;\n        });\n        this._codeEditorService.addCodeEditor(this);\n    }\n    //#endregion\n    get isSimpleWidget() {\n        return this._configuration.isSimpleWidget;\n    }\n    _createConfiguration(isSimpleWidget, options, accessibilityService) {\n        return new EditorConfiguration(isSimpleWidget, options, this._domElement, accessibilityService);\n    }\n    getId() {\n        return this.getEditorType() + ':' + this._id;\n    }\n    getEditorType() {\n        return editorCommon.EditorType.ICodeEditor;\n    }\n    dispose() {\n        this._codeEditorService.removeCodeEditor(this);\n        this._focusTracker.dispose();\n        const keys = Object.keys(this._contributions);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const contributionId = keys[i];\n            this._contributions[contributionId].dispose();\n        }\n        this._contributions = {};\n        this._actions = {};\n        this._contentWidgets = {};\n        this._overlayWidgets = {};\n        this._removeDecorationTypes();\n        this._postDetachModelCleanup(this._detachModel());\n        this._onDidDispose.fire();\n        super.dispose();\n    }\n    invokeWithinContext(fn) {\n        return this._instantiationService.invokeFunction(fn);\n    }\n    updateOptions(newOptions) {\n        this._configuration.updateOptions(newOptions || {});\n    }\n    getOptions() {\n        return this._configuration.options;\n    }\n    getOption(id) {\n        return this._configuration.options.get(id);\n    }\n    getRawOptions() {\n        return this._configuration.getRawOptions();\n    }\n    getOverflowWidgetsDomNode() {\n        return this._overflowWidgetsDomNode;\n    }\n    getConfiguredWordAtPosition(position) {\n        if (!this._modelData) {\n            return null;\n        }\n        return WordOperations.getWordAtPosition(this._modelData.model, this._configuration.options.get(117 /* wordSeparators */), position);\n    }\n    getValue(options = null) {\n        if (!this._modelData) {\n            return '';\n        }\n        const preserveBOM = (options && options.preserveBOM) ? true : false;\n        let eolPreference = 0 /* TextDefined */;\n        if (options && options.lineEnding && options.lineEnding === '\\n') {\n            eolPreference = 1 /* LF */;\n        }\n        else if (options && options.lineEnding && options.lineEnding === '\\r\\n') {\n            eolPreference = 2 /* CRLF */;\n        }\n        return this._modelData.model.getValue(eolPreference, preserveBOM);\n    }\n    setValue(newValue) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.model.setValue(newValue);\n    }\n    getModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model;\n    }\n    setModel(_model = null) {\n        const model = _model;\n        if (this._modelData === null && model === null) {\n            // Current model is the new model\n            return;\n        }\n        if (this._modelData && this._modelData.model === model) {\n            // Current model is the new model\n            return;\n        }\n        const hasTextFocus = this.hasTextFocus();\n        const detachedModel = this._detachModel();\n        this._attachModel(model);\n        if (hasTextFocus && this.hasModel()) {\n            this.focus();\n        }\n        const e = {\n            oldModelUrl: detachedModel ? detachedModel.uri : null,\n            newModelUrl: model ? model.uri : null\n        };\n        this._removeDecorationTypes();\n        this._onDidChangeModel.fire(e);\n        this._postDetachModelCleanup(detachedModel);\n    }\n    _removeDecorationTypes() {\n        this._decorationTypeKeysToIds = {};\n        if (this._decorationTypeSubtypes) {\n            for (let decorationType in this._decorationTypeSubtypes) {\n                const subTypes = this._decorationTypeSubtypes[decorationType];\n                for (let subType in subTypes) {\n                    this._removeDecorationType(decorationType + '-' + subType);\n                }\n            }\n            this._decorationTypeSubtypes = {};\n        }\n    }\n    getVisibleRanges() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.getVisibleRanges();\n    }\n    getVisibleRangesPlusViewportAboveBelow() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.getVisibleRangesPlusViewportAboveBelow();\n    }\n    getWhitespaces() {\n        if (!this._modelData) {\n            return [];\n        }\n        return this._modelData.viewModel.viewLayout.getWhitespaces();\n    }\n    static _getVerticalOffsetForPosition(modelData, modelLineNumber, modelColumn) {\n        const modelPosition = modelData.model.validatePosition({\n            lineNumber: modelLineNumber,\n            column: modelColumn\n        });\n        const viewPosition = modelData.viewModel.coordinatesConverter.convertModelPositionToViewPosition(modelPosition);\n        return modelData.viewModel.viewLayout.getVerticalOffsetForLineNumber(viewPosition.lineNumber);\n    }\n    getTopForLineNumber(lineNumber) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget._getVerticalOffsetForPosition(this._modelData, lineNumber, 1);\n    }\n    getTopForPosition(lineNumber, column) {\n        if (!this._modelData) {\n            return -1;\n        }\n        return CodeEditorWidget._getVerticalOffsetForPosition(this._modelData, lineNumber, column);\n    }\n    setHiddenAreas(ranges) {\n        if (this._modelData) {\n            this._modelData.viewModel.setHiddenAreas(ranges.map(r => Range.lift(r)));\n        }\n    }\n    getVisibleColumnFromPosition(rawPosition) {\n        if (!this._modelData) {\n            return rawPosition.column;\n        }\n        const position = this._modelData.model.validatePosition(rawPosition);\n        const tabSize = this._modelData.model.getOptions().tabSize;\n        return CursorColumns.visibleColumnFromColumn(this._modelData.model.getLineContent(position.lineNumber), position.column, tabSize) + 1;\n    }\n    getPosition() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getPosition();\n    }\n    setPosition(position) {\n        if (!this._modelData) {\n            return;\n        }\n        if (!Position.isIPosition(position)) {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.setSelections('api', [{\n                selectionStartLineNumber: position.lineNumber,\n                selectionStartColumn: position.column,\n                positionLineNumber: position.lineNumber,\n                positionColumn: position.column\n            }]);\n    }\n    _sendRevealRange(modelRange, verticalType, revealHorizontal, scrollType) {\n        if (!this._modelData) {\n            return;\n        }\n        if (!Range.isIRange(modelRange)) {\n            throw new Error('Invalid arguments');\n        }\n        const validatedModelRange = this._modelData.model.validateRange(modelRange);\n        const viewRange = this._modelData.viewModel.coordinatesConverter.convertModelRangeToViewRange(validatedModelRange);\n        this._modelData.viewModel.revealRange('api', revealHorizontal, viewRange, verticalType, scrollType);\n    }\n    revealLine(lineNumber, scrollType = 0 /* Smooth */) {\n        this._revealLine(lineNumber, 0 /* Simple */, scrollType);\n    }\n    revealLineInCenter(lineNumber, scrollType = 0 /* Smooth */) {\n        this._revealLine(lineNumber, 1 /* Center */, scrollType);\n    }\n    revealLineInCenterIfOutsideViewport(lineNumber, scrollType = 0 /* Smooth */) {\n        this._revealLine(lineNumber, 2 /* CenterIfOutsideViewport */, scrollType);\n    }\n    revealLineNearTop(lineNumber, scrollType = 0 /* Smooth */) {\n        this._revealLine(lineNumber, 5 /* NearTop */, scrollType);\n    }\n    _revealLine(lineNumber, revealType, scrollType) {\n        if (typeof lineNumber !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(lineNumber, 1, lineNumber, 1), revealType, false, scrollType);\n    }\n    revealPosition(position, scrollType = 0 /* Smooth */) {\n        this._revealPosition(position, 0 /* Simple */, true, scrollType);\n    }\n    revealPositionInCenter(position, scrollType = 0 /* Smooth */) {\n        this._revealPosition(position, 1 /* Center */, true, scrollType);\n    }\n    revealPositionInCenterIfOutsideViewport(position, scrollType = 0 /* Smooth */) {\n        this._revealPosition(position, 2 /* CenterIfOutsideViewport */, true, scrollType);\n    }\n    revealPositionNearTop(position, scrollType = 0 /* Smooth */) {\n        this._revealPosition(position, 5 /* NearTop */, true, scrollType);\n    }\n    _revealPosition(position, verticalType, revealHorizontal, scrollType) {\n        if (!Position.isIPosition(position)) {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(position.lineNumber, position.column, position.lineNumber, position.column), verticalType, revealHorizontal, scrollType);\n    }\n    getSelection() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getSelection();\n    }\n    getSelections() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel.getSelections();\n    }\n    setSelection(something) {\n        const isSelection = Selection.isISelection(something);\n        const isRange = Range.isIRange(something);\n        if (!isSelection && !isRange) {\n            throw new Error('Invalid arguments');\n        }\n        if (isSelection) {\n            this._setSelectionImpl(something);\n        }\n        else if (isRange) {\n            // act as if it was an IRange\n            const selection = {\n                selectionStartLineNumber: something.startLineNumber,\n                selectionStartColumn: something.startColumn,\n                positionLineNumber: something.endLineNumber,\n                positionColumn: something.endColumn\n            };\n            this._setSelectionImpl(selection);\n        }\n    }\n    _setSelectionImpl(sel) {\n        if (!this._modelData) {\n            return;\n        }\n        const selection = new Selection(sel.selectionStartLineNumber, sel.selectionStartColumn, sel.positionLineNumber, sel.positionColumn);\n        this._modelData.viewModel.setSelections('api', [selection]);\n    }\n    revealLines(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 0 /* Simple */, scrollType);\n    }\n    revealLinesInCenter(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 1 /* Center */, scrollType);\n    }\n    revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 2 /* CenterIfOutsideViewport */, scrollType);\n    }\n    revealLinesNearTop(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\n        this._revealLines(startLineNumber, endLineNumber, 5 /* NearTop */, scrollType);\n    }\n    _revealLines(startLineNumber, endLineNumber, verticalType, scrollType) {\n        if (typeof startLineNumber !== 'number' || typeof endLineNumber !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(new Range(startLineNumber, 1, endLineNumber, 1), verticalType, false, scrollType);\n    }\n    revealRange(range, scrollType = 0 /* Smooth */, revealVerticalInCenter = false, revealHorizontal = true) {\n        this._revealRange(range, revealVerticalInCenter ? 1 /* Center */ : 0 /* Simple */, revealHorizontal, scrollType);\n    }\n    revealRangeInCenter(range, scrollType = 0 /* Smooth */) {\n        this._revealRange(range, 1 /* Center */, true, scrollType);\n    }\n    revealRangeInCenterIfOutsideViewport(range, scrollType = 0 /* Smooth */) {\n        this._revealRange(range, 2 /* CenterIfOutsideViewport */, true, scrollType);\n    }\n    revealRangeNearTop(range, scrollType = 0 /* Smooth */) {\n        this._revealRange(range, 5 /* NearTop */, true, scrollType);\n    }\n    revealRangeNearTopIfOutsideViewport(range, scrollType = 0 /* Smooth */) {\n        this._revealRange(range, 6 /* NearTopIfOutsideViewport */, true, scrollType);\n    }\n    revealRangeAtTop(range, scrollType = 0 /* Smooth */) {\n        this._revealRange(range, 3 /* Top */, true, scrollType);\n    }\n    _revealRange(range, verticalType, revealHorizontal, scrollType) {\n        if (!Range.isIRange(range)) {\n            throw new Error('Invalid arguments');\n        }\n        this._sendRevealRange(Range.lift(range), verticalType, revealHorizontal, scrollType);\n    }\n    setSelections(ranges, source = 'api', reason = 0 /* NotSet */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (!ranges || ranges.length === 0) {\n            throw new Error('Invalid arguments');\n        }\n        for (let i = 0, len = ranges.length; i < len; i++) {\n            if (!Selection.isISelection(ranges[i])) {\n                throw new Error('Invalid arguments');\n            }\n        }\n        this._modelData.viewModel.setSelections(source, ranges, reason);\n    }\n    getContentWidth() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getContentWidth();\n    }\n    getScrollWidth() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getScrollWidth();\n    }\n    getScrollLeft() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getCurrentScrollLeft();\n    }\n    getContentHeight() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getContentHeight();\n    }\n    getScrollHeight() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getScrollHeight();\n    }\n    getScrollTop() {\n        if (!this._modelData) {\n            return -1;\n        }\n        return this._modelData.viewModel.viewLayout.getCurrentScrollTop();\n    }\n    setScrollLeft(newScrollLeft, scrollType = 1 /* Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (typeof newScrollLeft !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.setScrollPosition({\n            scrollLeft: newScrollLeft\n        }, scrollType);\n    }\n    setScrollTop(newScrollTop, scrollType = 1 /* Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        if (typeof newScrollTop !== 'number') {\n            throw new Error('Invalid arguments');\n        }\n        this._modelData.viewModel.setScrollPosition({\n            scrollTop: newScrollTop\n        }, scrollType);\n    }\n    setScrollPosition(position, scrollType = 1 /* Immediate */) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.setScrollPosition(position, scrollType);\n    }\n    saveViewState() {\n        if (!this._modelData) {\n            return null;\n        }\n        const contributionsState = {};\n        const keys = Object.keys(this._contributions);\n        for (const id of keys) {\n            const contribution = this._contributions[id];\n            if (typeof contribution.saveViewState === 'function') {\n                contributionsState[id] = contribution.saveViewState();\n            }\n        }\n        const cursorState = this._modelData.viewModel.saveCursorState();\n        const viewState = this._modelData.viewModel.saveState();\n        return {\n            cursorState: cursorState,\n            viewState: viewState,\n            contributionsState: contributionsState\n        };\n    }\n    restoreViewState(s) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        const codeEditorState = s;\n        if (codeEditorState && codeEditorState.cursorState && codeEditorState.viewState) {\n            const cursorState = codeEditorState.cursorState;\n            if (Array.isArray(cursorState)) {\n                this._modelData.viewModel.restoreCursorState(cursorState);\n            }\n            else {\n                // Backwards compatibility\n                this._modelData.viewModel.restoreCursorState([cursorState]);\n            }\n            const contributionsState = codeEditorState.contributionsState || {};\n            const keys = Object.keys(this._contributions);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const id = keys[i];\n                const contribution = this._contributions[id];\n                if (typeof contribution.restoreViewState === 'function') {\n                    contribution.restoreViewState(contributionsState[id]);\n                }\n            }\n            const reducedState = this._modelData.viewModel.reduceRestoreState(codeEditorState.viewState);\n            this._modelData.view.restoreState(reducedState);\n        }\n    }\n    getContribution(id) {\n        return (this._contributions[id] || null);\n    }\n    getActions() {\n        const result = [];\n        const keys = Object.keys(this._actions);\n        for (let i = 0, len = keys.length; i < len; i++) {\n            const id = keys[i];\n            result.push(this._actions[id]);\n        }\n        return result;\n    }\n    getSupportedActions() {\n        let result = this.getActions();\n        result = result.filter(action => action.isSupported());\n        return result;\n    }\n    getAction(id) {\n        return this._actions[id] || null;\n    }\n    trigger(source, handlerId, payload) {\n        payload = payload || {};\n        switch (handlerId) {\n            case \"compositionStart\" /* CompositionStart */:\n                this._startComposition();\n                return;\n            case \"compositionEnd\" /* CompositionEnd */:\n                this._endComposition(source);\n                return;\n            case \"type\" /* Type */: {\n                const args = payload;\n                this._type(source, args.text || '');\n                return;\n            }\n            case \"replacePreviousChar\" /* ReplacePreviousChar */: {\n                const args = payload;\n                this._compositionType(source, args.text || '', args.replaceCharCnt || 0, 0, 0);\n                return;\n            }\n            case \"compositionType\" /* CompositionType */: {\n                const args = payload;\n                this._compositionType(source, args.text || '', args.replacePrevCharCnt || 0, args.replaceNextCharCnt || 0, args.positionDelta || 0);\n                return;\n            }\n            case \"paste\" /* Paste */: {\n                const args = payload;\n                this._paste(source, args.text || '', args.pasteOnNewLine || false, args.multicursorText || null, args.mode || null);\n                return;\n            }\n            case \"cut\" /* Cut */:\n                this._cut(source);\n                return;\n        }\n        const action = this.getAction(handlerId);\n        if (action) {\n            Promise.resolve(action.run()).then(undefined, onUnexpectedError);\n            return;\n        }\n        if (!this._modelData) {\n            return;\n        }\n        if (this._triggerEditorCommand(source, handlerId, payload)) {\n            return;\n        }\n        this._triggerCommand(handlerId, payload);\n    }\n    _triggerCommand(handlerId, payload) {\n        this._commandService.executeCommand(handlerId, payload);\n    }\n    _startComposition() {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.startComposition();\n        this._onDidCompositionStart.fire();\n    }\n    _endComposition(source) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.endComposition(source);\n        this._onDidCompositionEnd.fire();\n    }\n    _type(source, text) {\n        if (!this._modelData || text.length === 0) {\n            return;\n        }\n        if (source === 'keyboard') {\n            this._onWillType.fire(text);\n        }\n        this._modelData.viewModel.type(text, source);\n        if (source === 'keyboard') {\n            this._onDidType.fire(text);\n        }\n    }\n    _compositionType(source, text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.compositionType(text, replacePrevCharCnt, replaceNextCharCnt, positionDelta, source);\n    }\n    _paste(source, text, pasteOnNewLine, multicursorText, mode) {\n        if (!this._modelData || text.length === 0) {\n            return;\n        }\n        const startPosition = this._modelData.viewModel.getSelection().getStartPosition();\n        this._modelData.viewModel.paste(text, pasteOnNewLine, multicursorText, source);\n        const endPosition = this._modelData.viewModel.getSelection().getStartPosition();\n        if (source === 'keyboard') {\n            this._onDidPaste.fire({\n                range: new Range(startPosition.lineNumber, startPosition.column, endPosition.lineNumber, endPosition.column),\n                languageId: mode\n            });\n        }\n    }\n    _cut(source) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.cut(source);\n    }\n    _triggerEditorCommand(source, handlerId, payload) {\n        const command = EditorExtensionsRegistry.getEditorCommand(handlerId);\n        if (command) {\n            payload = payload || {};\n            payload.source = source;\n            this._instantiationService.invokeFunction((accessor) => {\n                Promise.resolve(command.runEditorCommand(accessor, this, payload)).then(undefined, onUnexpectedError);\n            });\n            return true;\n        }\n        return false;\n    }\n    _getViewModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.viewModel;\n    }\n    pushUndoStop() {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(81 /* readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        this._modelData.model.pushStackElement();\n        return true;\n    }\n    popUndoStop() {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(81 /* readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        this._modelData.model.popStackElement();\n        return true;\n    }\n    executeEdits(source, edits, endCursorState) {\n        if (!this._modelData) {\n            return false;\n        }\n        if (this._configuration.options.get(81 /* readOnly */)) {\n            // read only editor => sorry!\n            return false;\n        }\n        let cursorStateComputer;\n        if (!endCursorState) {\n            cursorStateComputer = () => null;\n        }\n        else if (Array.isArray(endCursorState)) {\n            cursorStateComputer = () => endCursorState;\n        }\n        else {\n            cursorStateComputer = endCursorState;\n        }\n        this._modelData.viewModel.executeEdits(source, edits, cursorStateComputer);\n        return true;\n    }\n    executeCommand(source, command) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.executeCommand(command, source);\n    }\n    executeCommands(source, commands) {\n        if (!this._modelData) {\n            return;\n        }\n        this._modelData.viewModel.executeCommands(commands, source);\n    }\n    changeDecorations(callback) {\n        if (!this._modelData) {\n            // callback will not be called\n            return null;\n        }\n        return this._modelData.model.changeDecorations(callback, this._id);\n    }\n    getLineDecorations(lineNumber) {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model.getLineDecorations(lineNumber, this._id, filterValidationDecorations(this._configuration.options));\n    }\n    getDecorationsInRange(range) {\n        if (!this._modelData) {\n            return null;\n        }\n        return this._modelData.model.getDecorationsInRange(range, this._id, filterValidationDecorations(this._configuration.options));\n    }\n    deltaDecorations(oldDecorations, newDecorations) {\n        if (!this._modelData) {\n            return [];\n        }\n        if (oldDecorations.length === 0 && newDecorations.length === 0) {\n            return oldDecorations;\n        }\n        return this._modelData.model.deltaDecorations(oldDecorations, newDecorations, this._id);\n    }\n    removeDecorations(decorationTypeKey) {\n        // remove decorations for type and sub type\n        const oldDecorationsIds = this._decorationTypeKeysToIds[decorationTypeKey];\n        if (oldDecorationsIds) {\n            this.deltaDecorations(oldDecorationsIds, []);\n        }\n        if (this._decorationTypeKeysToIds.hasOwnProperty(decorationTypeKey)) {\n            delete this._decorationTypeKeysToIds[decorationTypeKey];\n        }\n        if (this._decorationTypeSubtypes.hasOwnProperty(decorationTypeKey)) {\n            delete this._decorationTypeSubtypes[decorationTypeKey];\n        }\n    }\n    getLayoutInfo() {\n        const options = this._configuration.options;\n        const layoutInfo = options.get(131 /* layoutInfo */);\n        return layoutInfo;\n    }\n    createOverviewRuler(cssClassName) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.createOverviewRuler(cssClassName);\n    }\n    getContainerDomNode() {\n        return this._domElement;\n    }\n    getDomNode() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.domNode.domNode;\n    }\n    delegateVerticalScrollbarMouseDown(browserEvent) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.delegateVerticalScrollbarMouseDown(browserEvent);\n    }\n    layout(dimension) {\n        this._configuration.observeContainer(dimension);\n        this.render();\n    }\n    focus() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.focus();\n    }\n    hasTextFocus() {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return false;\n        }\n        return this._modelData.view.isFocused();\n    }\n    hasWidgetFocus() {\n        return this._focusTracker && this._focusTracker.hasFocus();\n    }\n    addContentWidget(widget) {\n        const widgetData = {\n            widget: widget,\n            position: widget.getPosition()\n        };\n        if (this._contentWidgets.hasOwnProperty(widget.getId())) {\n            console.warn('Overwriting a content widget with the same id.');\n        }\n        this._contentWidgets[widget.getId()] = widgetData;\n        if (this._modelData && this._modelData.hasRealView) {\n            this._modelData.view.addContentWidget(widgetData);\n        }\n    }\n    layoutContentWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._contentWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._contentWidgets[widgetId];\n            widgetData.position = widget.getPosition();\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.layoutContentWidget(widgetData);\n            }\n        }\n    }\n    removeContentWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._contentWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._contentWidgets[widgetId];\n            delete this._contentWidgets[widgetId];\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.removeContentWidget(widgetData);\n            }\n        }\n    }\n    addOverlayWidget(widget) {\n        const widgetData = {\n            widget: widget,\n            position: widget.getPosition()\n        };\n        if (this._overlayWidgets.hasOwnProperty(widget.getId())) {\n            console.warn('Overwriting an overlay widget with the same id.');\n        }\n        this._overlayWidgets[widget.getId()] = widgetData;\n        if (this._modelData && this._modelData.hasRealView) {\n            this._modelData.view.addOverlayWidget(widgetData);\n        }\n    }\n    layoutOverlayWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._overlayWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._overlayWidgets[widgetId];\n            widgetData.position = widget.getPosition();\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.layoutOverlayWidget(widgetData);\n            }\n        }\n    }\n    removeOverlayWidget(widget) {\n        const widgetId = widget.getId();\n        if (this._overlayWidgets.hasOwnProperty(widgetId)) {\n            const widgetData = this._overlayWidgets[widgetId];\n            delete this._overlayWidgets[widgetId];\n            if (this._modelData && this._modelData.hasRealView) {\n                this._modelData.view.removeOverlayWidget(widgetData);\n            }\n        }\n    }\n    changeViewZones(callback) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.change(callback);\n    }\n    getTargetAtClientPoint(clientX, clientY) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        return this._modelData.view.getTargetAtClientPoint(clientX, clientY);\n    }\n    getScrolledVisiblePosition(rawPosition) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return null;\n        }\n        const position = this._modelData.model.validatePosition(rawPosition);\n        const options = this._configuration.options;\n        const layoutInfo = options.get(131 /* layoutInfo */);\n        const top = CodeEditorWidget._getVerticalOffsetForPosition(this._modelData, position.lineNumber, position.column) - this.getScrollTop();\n        const left = this._modelData.view.getOffsetForColumn(position.lineNumber, position.column) + layoutInfo.glyphMarginWidth + layoutInfo.lineNumbersWidth + layoutInfo.decorationsWidth - this.getScrollLeft();\n        return {\n            top: top,\n            left: left,\n            height: options.get(59 /* lineHeight */)\n        };\n    }\n    getOffsetForColumn(lineNumber, column) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return -1;\n        }\n        return this._modelData.view.getOffsetForColumn(lineNumber, column);\n    }\n    render(forceRedraw = false) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.render(true, forceRedraw);\n    }\n    setAriaOptions(options) {\n        if (!this._modelData || !this._modelData.hasRealView) {\n            return;\n        }\n        this._modelData.view.setAriaOptions(options);\n    }\n    applyFontInfo(target) {\n        applyFontInfo(target, this._configuration.options.get(44 /* fontInfo */));\n    }\n    setBanner(domNode, domNodeHeight) {\n        if (this._bannerDomNode && this._domElement.contains(this._bannerDomNode)) {\n            this._domElement.removeChild(this._bannerDomNode);\n        }\n        this._bannerDomNode = domNode;\n        this._configuration.setReservedHeight(domNode ? domNodeHeight : 0);\n        if (this._bannerDomNode) {\n            this._domElement.prepend(this._bannerDomNode);\n        }\n    }\n    _attachModel(model) {\n        if (!model) {\n            this._modelData = null;\n            return;\n        }\n        const listenersToRemove = [];\n        this._domElement.setAttribute('data-mode-id', model.getLanguageId());\n        this._configuration.setIsDominatedByLongLines(model.isDominatedByLongLines());\n        this._configuration.setModelLineCount(model.getLineCount());\n        model.onBeforeAttached();\n        const viewModel = new ViewModel(this._id, this._configuration, model, DOMLineBreaksComputerFactory.create(), MonospaceLineBreaksComputerFactory.create(this._configuration.options), (callback) => dom.scheduleAtNextAnimationFrame(callback), this.languageConfigurationService);\n        listenersToRemove.push(model.onDidChangeDecorations((e) => this._onDidChangeModelDecorations.fire(e)));\n        listenersToRemove.push(model.onDidChangeLanguage((e) => {\n            this._domElement.setAttribute('data-mode-id', model.getLanguageId());\n            this._onDidChangeModelLanguage.fire(e);\n        }));\n        listenersToRemove.push(model.onDidChangeLanguageConfiguration((e) => this._onDidChangeModelLanguageConfiguration.fire(e)));\n        listenersToRemove.push(model.onDidChangeContent((e) => this._onDidChangeModelContent.fire(e)));\n        listenersToRemove.push(model.onDidChangeOptions((e) => this._onDidChangeModelOptions.fire(e)));\n        // Someone might destroy the model from under the editor, so prevent any exceptions by setting a null model\n        listenersToRemove.push(model.onWillDispose(() => this.setModel(null)));\n        listenersToRemove.push(viewModel.onEvent((e) => {\n            switch (e.kind) {\n                case 0 /* ContentSizeChanged */:\n                    this._onDidContentSizeChange.fire(e);\n                    break;\n                case 1 /* FocusChanged */:\n                    this._editorTextFocus.setValue(e.hasFocus);\n                    break;\n                case 2 /* ScrollChanged */:\n                    this._onDidScrollChange.fire(e);\n                    break;\n                case 3 /* ViewZonesChanged */:\n                    this._onDidChangeViewZones.fire();\n                    break;\n                case 4 /* HiddenAreasChanged */:\n                    this._onDidChangeHiddenAreas.fire();\n                    break;\n                case 5 /* ReadOnlyEditAttempt */:\n                    this._onDidAttemptReadOnlyEdit.fire();\n                    break;\n                case 6 /* CursorStateChanged */: {\n                    if (e.reachedMaxCursorCount) {\n                        this._notificationService.warn(nls.localize('cursors.maximum', \"The number of cursors has been limited to {0}.\", CursorsController.MAX_CURSOR_COUNT));\n                    }\n                    const positions = [];\n                    for (let i = 0, len = e.selections.length; i < len; i++) {\n                        positions[i] = e.selections[i].getPosition();\n                    }\n                    const e1 = {\n                        position: positions[0],\n                        secondaryPositions: positions.slice(1),\n                        reason: e.reason,\n                        source: e.source\n                    };\n                    this._onDidChangeCursorPosition.fire(e1);\n                    const e2 = {\n                        selection: e.selections[0],\n                        secondarySelections: e.selections.slice(1),\n                        modelVersionId: e.modelVersionId,\n                        oldSelections: e.oldSelections,\n                        oldModelVersionId: e.oldModelVersionId,\n                        source: e.source,\n                        reason: e.reason\n                    };\n                    this._onDidChangeCursorSelection.fire(e2);\n                    break;\n                }\n            }\n        }));\n        const [view, hasRealView] = this._createView(viewModel);\n        if (hasRealView) {\n            this._domElement.appendChild(view.domNode.domNode);\n            let keys = Object.keys(this._contentWidgets);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const widgetId = keys[i];\n                view.addContentWidget(this._contentWidgets[widgetId]);\n            }\n            keys = Object.keys(this._overlayWidgets);\n            for (let i = 0, len = keys.length; i < len; i++) {\n                const widgetId = keys[i];\n                view.addOverlayWidget(this._overlayWidgets[widgetId]);\n            }\n            view.render(false, true);\n            view.domNode.domNode.setAttribute('data-uri', model.uri.toString());\n        }\n        this._modelData = new ModelData(model, viewModel, view, hasRealView, listenersToRemove);\n    }\n    _createView(viewModel) {\n        let commandDelegate;\n        if (this.isSimpleWidget) {\n            commandDelegate = {\n                paste: (text, pasteOnNewLine, multicursorText, mode) => {\n                    this._paste('keyboard', text, pasteOnNewLine, multicursorText, mode);\n                },\n                type: (text) => {\n                    this._type('keyboard', text);\n                },\n                compositionType: (text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) => {\n                    this._compositionType('keyboard', text, replacePrevCharCnt, replaceNextCharCnt, positionDelta);\n                },\n                startComposition: () => {\n                    this._startComposition();\n                },\n                endComposition: () => {\n                    this._endComposition('keyboard');\n                },\n                cut: () => {\n                    this._cut('keyboard');\n                }\n            };\n        }\n        else {\n            commandDelegate = {\n                paste: (text, pasteOnNewLine, multicursorText, mode) => {\n                    const payload = { text, pasteOnNewLine, multicursorText, mode };\n                    this._commandService.executeCommand(\"paste\" /* Paste */, payload);\n                },\n                type: (text) => {\n                    const payload = { text };\n                    this._commandService.executeCommand(\"type\" /* Type */, payload);\n                },\n                compositionType: (text, replacePrevCharCnt, replaceNextCharCnt, positionDelta) => {\n                    // Try if possible to go through the existing `replacePreviousChar` command\n                    if (replaceNextCharCnt || positionDelta) {\n                        // must be handled through the new command\n                        const payload = { text, replacePrevCharCnt, replaceNextCharCnt, positionDelta };\n                        this._commandService.executeCommand(\"compositionType\" /* CompositionType */, payload);\n                    }\n                    else {\n                        const payload = { text, replaceCharCnt: replacePrevCharCnt };\n                        this._commandService.executeCommand(\"replacePreviousChar\" /* ReplacePreviousChar */, payload);\n                    }\n                },\n                startComposition: () => {\n                    this._commandService.executeCommand(\"compositionStart\" /* CompositionStart */, {});\n                },\n                endComposition: () => {\n                    this._commandService.executeCommand(\"compositionEnd\" /* CompositionEnd */, {});\n                },\n                cut: () => {\n                    this._commandService.executeCommand(\"cut\" /* Cut */, {});\n                }\n            };\n        }\n        const viewUserInputEvents = new ViewUserInputEvents(viewModel.coordinatesConverter);\n        viewUserInputEvents.onKeyDown = (e) => this._onKeyDown.fire(e);\n        viewUserInputEvents.onKeyUp = (e) => this._onKeyUp.fire(e);\n        viewUserInputEvents.onContextMenu = (e) => this._onContextMenu.fire(e);\n        viewUserInputEvents.onMouseMove = (e) => this._onMouseMove.fire(e);\n        viewUserInputEvents.onMouseLeave = (e) => this._onMouseLeave.fire(e);\n        viewUserInputEvents.onMouseDown = (e) => this._onMouseDown.fire(e);\n        viewUserInputEvents.onMouseUp = (e) => this._onMouseUp.fire(e);\n        viewUserInputEvents.onMouseDrag = (e) => this._onMouseDrag.fire(e);\n        viewUserInputEvents.onMouseDrop = (e) => this._onMouseDrop.fire(e);\n        viewUserInputEvents.onMouseDropCanceled = (e) => this._onMouseDropCanceled.fire(e);\n        viewUserInputEvents.onMouseWheel = (e) => this._onMouseWheel.fire(e);\n        const view = new View(commandDelegate, this._configuration, this._themeService, viewModel, viewUserInputEvents, this._overflowWidgetsDomNode);\n        return [view, true];\n    }\n    _postDetachModelCleanup(detachedModel) {\n        if (detachedModel) {\n            detachedModel.removeAllDecorationsWithOwnerId(this._id);\n        }\n    }\n    _detachModel() {\n        if (!this._modelData) {\n            return null;\n        }\n        const model = this._modelData.model;\n        const removeDomNode = this._modelData.hasRealView ? this._modelData.view.domNode.domNode : null;\n        this._modelData.dispose();\n        this._modelData = null;\n        this._domElement.removeAttribute('data-mode-id');\n        if (removeDomNode && this._domElement.contains(removeDomNode)) {\n            this._domElement.removeChild(removeDomNode);\n        }\n        if (this._bannerDomNode && this._domElement.contains(this._bannerDomNode)) {\n            this._domElement.removeChild(this._bannerDomNode);\n        }\n        return model;\n    }\n    _removeDecorationType(key) {\n        this._codeEditorService.removeDecorationType(key);\n    }\n    hasModel() {\n        return (this._modelData !== null);\n    }\n};\nCodeEditorWidget = __decorate([\n    __param(3, IInstantiationService),\n    __param(4, ICodeEditorService),\n    __param(5, ICommandService),\n    __param(6, IContextKeyService),\n    __param(7, IThemeService),\n    __param(8, INotificationService),\n    __param(9, IAccessibilityService),\n    __param(10, ILanguageConfigurationService)\n], CodeEditorWidget);\nexport { CodeEditorWidget };\nexport class BooleanEventEmitter extends Disposable {\n    constructor() {\n        super();\n        this._onDidChangeToTrue = this._register(new Emitter());\n        this.onDidChangeToTrue = this._onDidChangeToTrue.event;\n        this._onDidChangeToFalse = this._register(new Emitter());\n        this.onDidChangeToFalse = this._onDidChangeToFalse.event;\n        this._value = 0 /* NotSet */;\n    }\n    setValue(_value) {\n        const value = (_value ? 2 /* True */ : 1 /* False */);\n        if (this._value === value) {\n            return;\n        }\n        this._value = value;\n        if (this._value === 2 /* True */) {\n            this._onDidChangeToTrue.fire();\n        }\n        else if (this._value === 1 /* False */) {\n            this._onDidChangeToFalse.fire();\n        }\n    }\n}\nclass EditorContextKeysManager extends Disposable {\n    constructor(editor, contextKeyService) {\n        super();\n        this._editor = editor;\n        contextKeyService.createKey('editorId', editor.getId());\n        this._editorSimpleInput = EditorContextKeys.editorSimpleInput.bindTo(contextKeyService);\n        this._editorFocus = EditorContextKeys.focus.bindTo(contextKeyService);\n        this._textInputFocus = EditorContextKeys.textInputFocus.bindTo(contextKeyService);\n        this._editorTextFocus = EditorContextKeys.editorTextFocus.bindTo(contextKeyService);\n        this._editorTabMovesFocus = EditorContextKeys.tabMovesFocus.bindTo(contextKeyService);\n        this._editorReadonly = EditorContextKeys.readOnly.bindTo(contextKeyService);\n        this._inDiffEditor = EditorContextKeys.inDiffEditor.bindTo(contextKeyService);\n        this._editorColumnSelection = EditorContextKeys.columnSelection.bindTo(contextKeyService);\n        this._hasMultipleSelections = EditorContextKeys.hasMultipleSelections.bindTo(contextKeyService);\n        this._hasNonEmptySelection = EditorContextKeys.hasNonEmptySelection.bindTo(contextKeyService);\n        this._canUndo = EditorContextKeys.canUndo.bindTo(contextKeyService);\n        this._canRedo = EditorContextKeys.canRedo.bindTo(contextKeyService);\n        this._register(this._editor.onDidChangeConfiguration(() => this._updateFromConfig()));\n        this._register(this._editor.onDidChangeCursorSelection(() => this._updateFromSelection()));\n        this._register(this._editor.onDidFocusEditorWidget(() => this._updateFromFocus()));\n        this._register(this._editor.onDidBlurEditorWidget(() => this._updateFromFocus()));\n        this._register(this._editor.onDidFocusEditorText(() => this._updateFromFocus()));\n        this._register(this._editor.onDidBlurEditorText(() => this._updateFromFocus()));\n        this._register(this._editor.onDidChangeModel(() => this._updateFromModel()));\n        this._register(this._editor.onDidChangeConfiguration(() => this._updateFromModel()));\n        this._updateFromConfig();\n        this._updateFromSelection();\n        this._updateFromFocus();\n        this._updateFromModel();\n        this._editorSimpleInput.set(this._editor.isSimpleWidget);\n    }\n    _updateFromConfig() {\n        const options = this._editor.getOptions();\n        this._editorTabMovesFocus.set(options.get(130 /* tabFocusMode */));\n        this._editorReadonly.set(options.get(81 /* readOnly */));\n        this._inDiffEditor.set(options.get(54 /* inDiffEditor */));\n        this._editorColumnSelection.set(options.get(18 /* columnSelection */));\n    }\n    _updateFromSelection() {\n        const selections = this._editor.getSelections();\n        if (!selections) {\n            this._hasMultipleSelections.reset();\n            this._hasNonEmptySelection.reset();\n        }\n        else {\n            this._hasMultipleSelections.set(selections.length > 1);\n            this._hasNonEmptySelection.set(selections.some(s => !s.isEmpty()));\n        }\n    }\n    _updateFromFocus() {\n        this._editorFocus.set(this._editor.hasWidgetFocus() && !this._editor.isSimpleWidget);\n        this._editorTextFocus.set(this._editor.hasTextFocus() && !this._editor.isSimpleWidget);\n        this._textInputFocus.set(this._editor.hasTextFocus());\n    }\n    _updateFromModel() {\n        const model = this._editor.getModel();\n        this._canUndo.set(Boolean(model && model.canUndo()));\n        this._canRedo.set(Boolean(model && model.canRedo()));\n    }\n}\nexport class EditorModeContext extends Disposable {\n    constructor(_editor, _contextKeyService) {\n        super();\n        this._editor = _editor;\n        this._contextKeyService = _contextKeyService;\n        this._langId = EditorContextKeys.languageId.bindTo(_contextKeyService);\n        this._hasCompletionItemProvider = EditorContextKeys.hasCompletionItemProvider.bindTo(_contextKeyService);\n        this._hasCodeActionsProvider = EditorContextKeys.hasCodeActionsProvider.bindTo(_contextKeyService);\n        this._hasCodeLensProvider = EditorContextKeys.hasCodeLensProvider.bindTo(_contextKeyService);\n        this._hasDefinitionProvider = EditorContextKeys.hasDefinitionProvider.bindTo(_contextKeyService);\n        this._hasDeclarationProvider = EditorContextKeys.hasDeclarationProvider.bindTo(_contextKeyService);\n        this._hasImplementationProvider = EditorContextKeys.hasImplementationProvider.bindTo(_contextKeyService);\n        this._hasTypeDefinitionProvider = EditorContextKeys.hasTypeDefinitionProvider.bindTo(_contextKeyService);\n        this._hasHoverProvider = EditorContextKeys.hasHoverProvider.bindTo(_contextKeyService);\n        this._hasDocumentHighlightProvider = EditorContextKeys.hasDocumentHighlightProvider.bindTo(_contextKeyService);\n        this._hasDocumentSymbolProvider = EditorContextKeys.hasDocumentSymbolProvider.bindTo(_contextKeyService);\n        this._hasReferenceProvider = EditorContextKeys.hasReferenceProvider.bindTo(_contextKeyService);\n        this._hasRenameProvider = EditorContextKeys.hasRenameProvider.bindTo(_contextKeyService);\n        this._hasSignatureHelpProvider = EditorContextKeys.hasSignatureHelpProvider.bindTo(_contextKeyService);\n        this._hasInlayHintsProvider = EditorContextKeys.hasInlayHintsProvider.bindTo(_contextKeyService);\n        this._hasDocumentFormattingProvider = EditorContextKeys.hasDocumentFormattingProvider.bindTo(_contextKeyService);\n        this._hasDocumentSelectionFormattingProvider = EditorContextKeys.hasDocumentSelectionFormattingProvider.bindTo(_contextKeyService);\n        this._hasMultipleDocumentFormattingProvider = EditorContextKeys.hasMultipleDocumentFormattingProvider.bindTo(_contextKeyService);\n        this._hasMultipleDocumentSelectionFormattingProvider = EditorContextKeys.hasMultipleDocumentSelectionFormattingProvider.bindTo(_contextKeyService);\n        this._isInWalkThrough = EditorContextKeys.isInWalkThroughSnippet.bindTo(_contextKeyService);\n        const update = () => this._update();\n        // update when model/mode changes\n        this._register(_editor.onDidChangeModel(update));\n        this._register(_editor.onDidChangeModelLanguage(update));\n        // update when registries change\n        this._register(modes.CompletionProviderRegistry.onDidChange(update));\n        this._register(modes.CodeActionProviderRegistry.onDidChange(update));\n        this._register(modes.CodeLensProviderRegistry.onDidChange(update));\n        this._register(modes.DefinitionProviderRegistry.onDidChange(update));\n        this._register(modes.DeclarationProviderRegistry.onDidChange(update));\n        this._register(modes.ImplementationProviderRegistry.onDidChange(update));\n        this._register(modes.TypeDefinitionProviderRegistry.onDidChange(update));\n        this._register(modes.HoverProviderRegistry.onDidChange(update));\n        this._register(modes.DocumentHighlightProviderRegistry.onDidChange(update));\n        this._register(modes.DocumentSymbolProviderRegistry.onDidChange(update));\n        this._register(modes.ReferenceProviderRegistry.onDidChange(update));\n        this._register(modes.RenameProviderRegistry.onDidChange(update));\n        this._register(modes.DocumentFormattingEditProviderRegistry.onDidChange(update));\n        this._register(modes.DocumentRangeFormattingEditProviderRegistry.onDidChange(update));\n        this._register(modes.SignatureHelpProviderRegistry.onDidChange(update));\n        this._register(modes.InlayHintsProviderRegistry.onDidChange(update));\n        update();\n    }\n    dispose() {\n        super.dispose();\n    }\n    reset() {\n        this._contextKeyService.bufferChangeEvents(() => {\n            this._langId.reset();\n            this._hasCompletionItemProvider.reset();\n            this._hasCodeActionsProvider.reset();\n            this._hasCodeLensProvider.reset();\n            this._hasDefinitionProvider.reset();\n            this._hasDeclarationProvider.reset();\n            this._hasImplementationProvider.reset();\n            this._hasTypeDefinitionProvider.reset();\n            this._hasHoverProvider.reset();\n            this._hasDocumentHighlightProvider.reset();\n            this._hasDocumentSymbolProvider.reset();\n            this._hasReferenceProvider.reset();\n            this._hasRenameProvider.reset();\n            this._hasDocumentFormattingProvider.reset();\n            this._hasDocumentSelectionFormattingProvider.reset();\n            this._hasSignatureHelpProvider.reset();\n            this._isInWalkThrough.reset();\n        });\n    }\n    _update() {\n        const model = this._editor.getModel();\n        if (!model) {\n            this.reset();\n            return;\n        }\n        this._contextKeyService.bufferChangeEvents(() => {\n            this._langId.set(model.getLanguageId());\n            this._hasCompletionItemProvider.set(modes.CompletionProviderRegistry.has(model));\n            this._hasCodeActionsProvider.set(modes.CodeActionProviderRegistry.has(model));\n            this._hasCodeLensProvider.set(modes.CodeLensProviderRegistry.has(model));\n            this._hasDefinitionProvider.set(modes.DefinitionProviderRegistry.has(model));\n            this._hasDeclarationProvider.set(modes.DeclarationProviderRegistry.has(model));\n            this._hasImplementationProvider.set(modes.ImplementationProviderRegistry.has(model));\n            this._hasTypeDefinitionProvider.set(modes.TypeDefinitionProviderRegistry.has(model));\n            this._hasHoverProvider.set(modes.HoverProviderRegistry.has(model));\n            this._hasDocumentHighlightProvider.set(modes.DocumentHighlightProviderRegistry.has(model));\n            this._hasDocumentSymbolProvider.set(modes.DocumentSymbolProviderRegistry.has(model));\n            this._hasReferenceProvider.set(modes.ReferenceProviderRegistry.has(model));\n            this._hasRenameProvider.set(modes.RenameProviderRegistry.has(model));\n            this._hasSignatureHelpProvider.set(modes.SignatureHelpProviderRegistry.has(model));\n            this._hasInlayHintsProvider.set(modes.InlayHintsProviderRegistry.has(model));\n            this._hasDocumentFormattingProvider.set(modes.DocumentFormattingEditProviderRegistry.has(model) || modes.DocumentRangeFormattingEditProviderRegistry.has(model));\n            this._hasDocumentSelectionFormattingProvider.set(modes.DocumentRangeFormattingEditProviderRegistry.has(model));\n            this._hasMultipleDocumentFormattingProvider.set(modes.DocumentFormattingEditProviderRegistry.all(model).length + modes.DocumentRangeFormattingEditProviderRegistry.all(model).length > 1);\n            this._hasMultipleDocumentSelectionFormattingProvider.set(modes.DocumentRangeFormattingEditProviderRegistry.all(model).length > 1);\n            this._isInWalkThrough.set(model.uri.scheme === Schemas.walkThroughSnippet);\n        });\n    }\n}\nclass CodeEditorWidgetFocusTracker extends Disposable {\n    constructor(domElement) {\n        super();\n        this._onChange = this._register(new Emitter());\n        this.onChange = this._onChange.event;\n        this._hasFocus = false;\n        this._domFocusTracker = this._register(dom.trackFocus(domElement));\n        this._register(this._domFocusTracker.onDidFocus(() => {\n            this._hasFocus = true;\n            this._onChange.fire(undefined);\n        }));\n        this._register(this._domFocusTracker.onDidBlur(() => {\n            this._hasFocus = false;\n            this._onChange.fire(undefined);\n        }));\n    }\n    hasFocus() {\n        return this._hasFocus;\n    }\n}\nconst squigglyStart = encodeURIComponent(`<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 6 3' enable-background='new 0 0 6 3' height='3' width='6'><g fill='`);\nconst squigglyEnd = encodeURIComponent(`'><polygon points='5.5,0 2.5,3 1.1,3 4.1,0'/><polygon points='4,0 6,2 6,0.6 5.4,0'/><polygon points='0,2 1,3 2.4,3 0,0.6'/></g></svg>`);\nfunction getSquigglySVGData(color) {\n    return squigglyStart + encodeURIComponent(color.toString()) + squigglyEnd;\n}\nconst dotdotdotStart = encodeURIComponent(`<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"3\" width=\"12\"><g fill=\"`);\nconst dotdotdotEnd = encodeURIComponent(`\"><circle cx=\"1\" cy=\"1\" r=\"1\"/><circle cx=\"5\" cy=\"1\" r=\"1\"/><circle cx=\"9\" cy=\"1\" r=\"1\"/></g></svg>`);\nfunction getDotDotDotSVGData(color) {\n    return dotdotdotStart + encodeURIComponent(color.toString()) + dotdotdotEnd;\n}\nregisterThemingParticipant((theme, collector) => {\n    const errorBorderColor = theme.getColor(editorErrorBorder);\n    if (errorBorderColor) {\n        collector.addRule(`.monaco-editor .${\"squiggly-error\" /* EditorErrorDecoration */} { border-bottom: 4px double ${errorBorderColor}; }`);\n    }\n    const errorForeground = theme.getColor(editorErrorForeground);\n    if (errorForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-error\" /* EditorErrorDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(errorForeground)}\") repeat-x bottom left; }`);\n    }\n    const errorBackground = theme.getColor(editorErrorBackground);\n    if (errorBackground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-error\" /* EditorErrorDecoration */}::before { display: block; content: ''; width: 100%; height: 100%; background: ${errorBackground}; }`);\n    }\n    const warningBorderColor = theme.getColor(editorWarningBorder);\n    if (warningBorderColor) {\n        collector.addRule(`.monaco-editor .${\"squiggly-warning\" /* EditorWarningDecoration */} { border-bottom: 4px double ${warningBorderColor}; }`);\n    }\n    const warningForeground = theme.getColor(editorWarningForeground);\n    if (warningForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-warning\" /* EditorWarningDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(warningForeground)}\") repeat-x bottom left; }`);\n    }\n    const warningBackground = theme.getColor(editorWarningBackground);\n    if (warningBackground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-warning\" /* EditorWarningDecoration */}::before { display: block; content: ''; width: 100%; height: 100%; background: ${warningBackground}; }`);\n    }\n    const infoBorderColor = theme.getColor(editorInfoBorder);\n    if (infoBorderColor) {\n        collector.addRule(`.monaco-editor .${\"squiggly-info\" /* EditorInfoDecoration */} { border-bottom: 4px double ${infoBorderColor}; }`);\n    }\n    const infoForeground = theme.getColor(editorInfoForeground);\n    if (infoForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-info\" /* EditorInfoDecoration */} { background: url(\"data:image/svg+xml,${getSquigglySVGData(infoForeground)}\") repeat-x bottom left; }`);\n    }\n    const infoBackground = theme.getColor(editorInfoBackground);\n    if (infoBackground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-info\" /* EditorInfoDecoration */}::before { display: block; content: ''; width: 100%; height: 100%; background: ${infoBackground}; }`);\n    }\n    const hintBorderColor = theme.getColor(editorHintBorder);\n    if (hintBorderColor) {\n        collector.addRule(`.monaco-editor .${\"squiggly-hint\" /* EditorHintDecoration */} { border-bottom: 2px dotted ${hintBorderColor}; }`);\n    }\n    const hintForeground = theme.getColor(editorHintForeground);\n    if (hintForeground) {\n        collector.addRule(`.monaco-editor .${\"squiggly-hint\" /* EditorHintDecoration */} { background: url(\"data:image/svg+xml,${getDotDotDotSVGData(hintForeground)}\") no-repeat bottom left; }`);\n    }\n    const unnecessaryForeground = theme.getColor(editorUnnecessaryCodeOpacity);\n    if (unnecessaryForeground) {\n        collector.addRule(`.monaco-editor.showUnused .${\"squiggly-inline-unnecessary\" /* EditorUnnecessaryInlineDecoration */} { opacity: ${unnecessaryForeground.rgba.a}; }`);\n    }\n    const unnecessaryBorder = theme.getColor(editorUnnecessaryCodeBorder);\n    if (unnecessaryBorder) {\n        collector.addRule(`.monaco-editor.showUnused .${\"squiggly-unnecessary\" /* EditorUnnecessaryDecoration */} { border-bottom: 2px dashed ${unnecessaryBorder}; }`);\n    }\n    const deprecatedForeground = theme.getColor(editorForeground) || 'inherit';\n    collector.addRule(`.monaco-editor.showDeprecated .${\"squiggly-inline-deprecated\" /* EditorDeprecatedInlineDecoration */} { text-decoration: line-through; text-decoration-color: ${deprecatedForeground}}`);\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar _a;\nimport './media/diffReview.css';\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { ActionBar } from '../../../base/browser/ui/actionbar/actionbar.js';\nimport { DomScrollableElement } from '../../../base/browser/ui/scrollbar/scrollableElement.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { EditorAction, registerEditorAction } from '../editorExtensions.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { EditorFontLigatures } from '../../common/config/editorOptions.js';\nimport { LineTokens } from '../../common/tokens/lineTokens.js';\nimport { Position } from '../../common/core/position.js';\nimport { editorLineNumbers } from '../../common/core/editorColorRegistry.js';\nimport { RenderLineInput, renderViewLine2 as renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { ViewLineRenderingData } from '../../common/viewModel/viewModel.js';\nimport { ContextKeyExpr } from '../../../platform/contextkey/common/contextkey.js';\nimport { scrollbarShadow } from '../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\nimport { ILanguageService } from '../../common/services/language.js';\nconst DIFF_LINES_PADDING = 3;\nclass DiffEntry {\n    constructor(originalLineStart, originalLineEnd, modifiedLineStart, modifiedLineEnd) {\n        this.originalLineStart = originalLineStart;\n        this.originalLineEnd = originalLineEnd;\n        this.modifiedLineStart = modifiedLineStart;\n        this.modifiedLineEnd = modifiedLineEnd;\n    }\n    getType() {\n        if (this.originalLineStart === 0) {\n            return 1 /* Insert */;\n        }\n        if (this.modifiedLineStart === 0) {\n            return 2 /* Delete */;\n        }\n        return 0 /* Equal */;\n    }\n}\nclass Diff {\n    constructor(entries) {\n        this.entries = entries;\n    }\n}\nconst diffReviewInsertIcon = registerIcon('diff-review-insert', Codicon.add, nls.localize('diffReviewInsertIcon', 'Icon for \\'Insert\\' in diff review.'));\nconst diffReviewRemoveIcon = registerIcon('diff-review-remove', Codicon.remove, nls.localize('diffReviewRemoveIcon', 'Icon for \\'Remove\\' in diff review.'));\nconst diffReviewCloseIcon = registerIcon('diff-review-close', Codicon.close, nls.localize('diffReviewCloseIcon', 'Icon for \\'Close\\' in diff review.'));\nlet DiffReview = class DiffReview extends Disposable {\n    constructor(diffEditor, _languageService) {\n        super();\n        this._languageService = _languageService;\n        this._width = 0;\n        this._diffEditor = diffEditor;\n        this._isVisible = false;\n        this.shadow = createFastDomNode(document.createElement('div'));\n        this.shadow.setClassName('diff-review-shadow');\n        this.actionBarContainer = createFastDomNode(document.createElement('div'));\n        this.actionBarContainer.setClassName('diff-review-actions');\n        this._actionBar = this._register(new ActionBar(this.actionBarContainer.domNode));\n        this._actionBar.push(new Action('diffreview.close', nls.localize('label.close', \"Close\"), 'close-diff-review ' + ThemeIcon.asClassName(diffReviewCloseIcon), true, () => __awaiter(this, void 0, void 0, function* () { return this.hide(); })), { label: false, icon: true });\n        this.domNode = createFastDomNode(document.createElement('div'));\n        this.domNode.setClassName('diff-review monaco-editor-background');\n        this._content = createFastDomNode(document.createElement('div'));\n        this._content.setClassName('diff-review-content');\n        this._content.setAttribute('role', 'code');\n        this.scrollbar = this._register(new DomScrollableElement(this._content.domNode, {}));\n        this.domNode.domNode.appendChild(this.scrollbar.getDomNode());\n        this._register(diffEditor.onDidUpdateDiff(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._diffs = this._compute();\n            this._render();\n        }));\n        this._register(diffEditor.getModifiedEditor().onDidChangeCursorPosition(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._render();\n        }));\n        this._register(dom.addStandardDisposableListener(this.domNode.domNode, 'click', (e) => {\n            e.preventDefault();\n            const row = dom.findParentWithClass(e.target, 'diff-review-row');\n            if (row) {\n                this._goToRow(row);\n            }\n        }));\n        this._register(dom.addStandardDisposableListener(this.domNode.domNode, 'keydown', (e) => {\n            if (e.equals(18 /* DownArrow */)\n                || e.equals(2048 /* CtrlCmd */ | 18 /* DownArrow */)\n                || e.equals(512 /* Alt */ | 18 /* DownArrow */)) {\n                e.preventDefault();\n                this._goToRow(this._getNextRow());\n            }\n            if (e.equals(16 /* UpArrow */)\n                || e.equals(2048 /* CtrlCmd */ | 16 /* UpArrow */)\n                || e.equals(512 /* Alt */ | 16 /* UpArrow */)) {\n                e.preventDefault();\n                this._goToRow(this._getPrevRow());\n            }\n            if (e.equals(9 /* Escape */)\n                || e.equals(2048 /* CtrlCmd */ | 9 /* Escape */)\n                || e.equals(512 /* Alt */ | 9 /* Escape */)\n                || e.equals(1024 /* Shift */ | 9 /* Escape */)) {\n                e.preventDefault();\n                this.hide();\n            }\n            if (e.equals(10 /* Space */)\n                || e.equals(3 /* Enter */)) {\n                e.preventDefault();\n                this.accept();\n            }\n        }));\n        this._diffs = [];\n        this._currentDiff = null;\n    }\n    prev() {\n        let index = 0;\n        if (!this._isVisible) {\n            this._diffs = this._compute();\n        }\n        if (this._isVisible) {\n            let currentIndex = -1;\n            for (let i = 0, len = this._diffs.length; i < len; i++) {\n                if (this._diffs[i] === this._currentDiff) {\n                    currentIndex = i;\n                    break;\n                }\n            }\n            index = (this._diffs.length + currentIndex - 1);\n        }\n        else {\n            index = this._findDiffIndex(this._diffEditor.getPosition());\n        }\n        if (this._diffs.length === 0) {\n            // Nothing to do\n            return;\n        }\n        index = index % this._diffs.length;\n        const entries = this._diffs[index].entries;\n        this._diffEditor.setPosition(new Position(entries[0].modifiedLineStart, 1));\n        this._diffEditor.setSelection({ startColumn: 1, startLineNumber: entries[0].modifiedLineStart, endColumn: 1073741824 /* MAX_SAFE_SMALL_INTEGER */, endLineNumber: entries[entries.length - 1].modifiedLineEnd });\n        this._isVisible = true;\n        this._diffEditor.doLayout();\n        this._render();\n        this._goToRow(this._getNextRow());\n    }\n    next() {\n        let index = 0;\n        if (!this._isVisible) {\n            this._diffs = this._compute();\n        }\n        if (this._isVisible) {\n            let currentIndex = -1;\n            for (let i = 0, len = this._diffs.length; i < len; i++) {\n                if (this._diffs[i] === this._currentDiff) {\n                    currentIndex = i;\n                    break;\n                }\n            }\n            index = (currentIndex + 1);\n        }\n        else {\n            index = this._findDiffIndex(this._diffEditor.getPosition());\n        }\n        if (this._diffs.length === 0) {\n            // Nothing to do\n            return;\n        }\n        index = index % this._diffs.length;\n        const entries = this._diffs[index].entries;\n        this._diffEditor.setPosition(new Position(entries[0].modifiedLineStart, 1));\n        this._diffEditor.setSelection({ startColumn: 1, startLineNumber: entries[0].modifiedLineStart, endColumn: 1073741824 /* MAX_SAFE_SMALL_INTEGER */, endLineNumber: entries[entries.length - 1].modifiedLineEnd });\n        this._isVisible = true;\n        this._diffEditor.doLayout();\n        this._render();\n        this._goToRow(this._getNextRow());\n    }\n    accept() {\n        let jumpToLineNumber = -1;\n        const current = this._getCurrentFocusedRow();\n        if (current) {\n            const lineNumber = parseInt(current.getAttribute('data-line'), 10);\n            if (!isNaN(lineNumber)) {\n                jumpToLineNumber = lineNumber;\n            }\n        }\n        this.hide();\n        if (jumpToLineNumber !== -1) {\n            this._diffEditor.setPosition(new Position(jumpToLineNumber, 1));\n            this._diffEditor.revealPosition(new Position(jumpToLineNumber, 1), 1 /* Immediate */);\n        }\n    }\n    hide() {\n        this._isVisible = false;\n        this._diffEditor.updateOptions({ readOnly: false });\n        this._diffEditor.focus();\n        this._diffEditor.doLayout();\n        this._render();\n    }\n    _getPrevRow() {\n        const current = this._getCurrentFocusedRow();\n        if (!current) {\n            return this._getFirstRow();\n        }\n        if (current.previousElementSibling) {\n            return current.previousElementSibling;\n        }\n        return current;\n    }\n    _getNextRow() {\n        const current = this._getCurrentFocusedRow();\n        if (!current) {\n            return this._getFirstRow();\n        }\n        if (current.nextElementSibling) {\n            return current.nextElementSibling;\n        }\n        return current;\n    }\n    _getFirstRow() {\n        return this.domNode.domNode.querySelector('.diff-review-row');\n    }\n    _getCurrentFocusedRow() {\n        const result = document.activeElement;\n        if (result && /diff-review-row/.test(result.className)) {\n            return result;\n        }\n        return null;\n    }\n    _goToRow(row) {\n        const prev = this._getCurrentFocusedRow();\n        row.tabIndex = 0;\n        row.focus();\n        if (prev && prev !== row) {\n            prev.tabIndex = -1;\n        }\n        this.scrollbar.scanDomNode();\n    }\n    isVisible() {\n        return this._isVisible;\n    }\n    layout(top, width, height) {\n        this._width = width;\n        this.shadow.setTop(top - 6);\n        this.shadow.setWidth(width);\n        this.shadow.setHeight(this._isVisible ? 6 : 0);\n        this.domNode.setTop(top);\n        this.domNode.setWidth(width);\n        this.domNode.setHeight(height);\n        this._content.setHeight(height);\n        this._content.setWidth(width);\n        if (this._isVisible) {\n            this.actionBarContainer.setAttribute('aria-hidden', 'false');\n            this.actionBarContainer.setDisplay('block');\n        }\n        else {\n            this.actionBarContainer.setAttribute('aria-hidden', 'true');\n            this.actionBarContainer.setDisplay('none');\n        }\n    }\n    _compute() {\n        const lineChanges = this._diffEditor.getLineChanges();\n        if (!lineChanges || lineChanges.length === 0) {\n            return [];\n        }\n        const originalModel = this._diffEditor.getOriginalEditor().getModel();\n        const modifiedModel = this._diffEditor.getModifiedEditor().getModel();\n        if (!originalModel || !modifiedModel) {\n            return [];\n        }\n        return DiffReview._mergeAdjacent(lineChanges, originalModel.getLineCount(), modifiedModel.getLineCount());\n    }\n    static _mergeAdjacent(lineChanges, originalLineCount, modifiedLineCount) {\n        if (!lineChanges || lineChanges.length === 0) {\n            return [];\n        }\n        const diffs = [];\n        let diffsLength = 0;\n        for (let i = 0, len = lineChanges.length; i < len; i++) {\n            const lineChange = lineChanges[i];\n            const originalStart = lineChange.originalStartLineNumber;\n            const originalEnd = lineChange.originalEndLineNumber;\n            const modifiedStart = lineChange.modifiedStartLineNumber;\n            const modifiedEnd = lineChange.modifiedEndLineNumber;\n            const r = [];\n            let rLength = 0;\n            // Emit before anchors\n            {\n                const originalEqualAbove = (originalEnd === 0 ? originalStart : originalStart - 1);\n                const modifiedEqualAbove = (modifiedEnd === 0 ? modifiedStart : modifiedStart - 1);\n                // Make sure we don't step into the previous diff\n                let minOriginal = 1;\n                let minModified = 1;\n                if (i > 0) {\n                    const prevLineChange = lineChanges[i - 1];\n                    if (prevLineChange.originalEndLineNumber === 0) {\n                        minOriginal = prevLineChange.originalStartLineNumber + 1;\n                    }\n                    else {\n                        minOriginal = prevLineChange.originalEndLineNumber + 1;\n                    }\n                    if (prevLineChange.modifiedEndLineNumber === 0) {\n                        minModified = prevLineChange.modifiedStartLineNumber + 1;\n                    }\n                    else {\n                        minModified = prevLineChange.modifiedEndLineNumber + 1;\n                    }\n                }\n                let fromOriginal = originalEqualAbove - DIFF_LINES_PADDING + 1;\n                let fromModified = modifiedEqualAbove - DIFF_LINES_PADDING + 1;\n                if (fromOriginal < minOriginal) {\n                    const delta = minOriginal - fromOriginal;\n                    fromOriginal = fromOriginal + delta;\n                    fromModified = fromModified + delta;\n                }\n                if (fromModified < minModified) {\n                    const delta = minModified - fromModified;\n                    fromOriginal = fromOriginal + delta;\n                    fromModified = fromModified + delta;\n                }\n                r[rLength++] = new DiffEntry(fromOriginal, originalEqualAbove, fromModified, modifiedEqualAbove);\n            }\n            // Emit deleted lines\n            {\n                if (originalEnd !== 0) {\n                    r[rLength++] = new DiffEntry(originalStart, originalEnd, 0, 0);\n                }\n            }\n            // Emit inserted lines\n            {\n                if (modifiedEnd !== 0) {\n                    r[rLength++] = new DiffEntry(0, 0, modifiedStart, modifiedEnd);\n                }\n            }\n            // Emit after anchors\n            {\n                const originalEqualBelow = (originalEnd === 0 ? originalStart + 1 : originalEnd + 1);\n                const modifiedEqualBelow = (modifiedEnd === 0 ? modifiedStart + 1 : modifiedEnd + 1);\n                // Make sure we don't step into the next diff\n                let maxOriginal = originalLineCount;\n                let maxModified = modifiedLineCount;\n                if (i + 1 < len) {\n                    const nextLineChange = lineChanges[i + 1];\n                    if (nextLineChange.originalEndLineNumber === 0) {\n                        maxOriginal = nextLineChange.originalStartLineNumber;\n                    }\n                    else {\n                        maxOriginal = nextLineChange.originalStartLineNumber - 1;\n                    }\n                    if (nextLineChange.modifiedEndLineNumber === 0) {\n                        maxModified = nextLineChange.modifiedStartLineNumber;\n                    }\n                    else {\n                        maxModified = nextLineChange.modifiedStartLineNumber - 1;\n                    }\n                }\n                let toOriginal = originalEqualBelow + DIFF_LINES_PADDING - 1;\n                let toModified = modifiedEqualBelow + DIFF_LINES_PADDING - 1;\n                if (toOriginal > maxOriginal) {\n                    const delta = maxOriginal - toOriginal;\n                    toOriginal = toOriginal + delta;\n                    toModified = toModified + delta;\n                }\n                if (toModified > maxModified) {\n                    const delta = maxModified - toModified;\n                    toOriginal = toOriginal + delta;\n                    toModified = toModified + delta;\n                }\n                r[rLength++] = new DiffEntry(originalEqualBelow, toOriginal, modifiedEqualBelow, toModified);\n            }\n            diffs[diffsLength++] = new Diff(r);\n        }\n        // Merge adjacent diffs\n        let curr = diffs[0].entries;\n        const r = [];\n        let rLength = 0;\n        for (let i = 1, len = diffs.length; i < len; i++) {\n            const thisDiff = diffs[i].entries;\n            const currLast = curr[curr.length - 1];\n            const thisFirst = thisDiff[0];\n            if (currLast.getType() === 0 /* Equal */\n                && thisFirst.getType() === 0 /* Equal */\n                && thisFirst.originalLineStart <= currLast.originalLineEnd) {\n                // We are dealing with equal lines that overlap\n                curr[curr.length - 1] = new DiffEntry(currLast.originalLineStart, thisFirst.originalLineEnd, currLast.modifiedLineStart, thisFirst.modifiedLineEnd);\n                curr = curr.concat(thisDiff.slice(1));\n                continue;\n            }\n            r[rLength++] = new Diff(curr);\n            curr = thisDiff;\n        }\n        r[rLength++] = new Diff(curr);\n        return r;\n    }\n    _findDiffIndex(pos) {\n        const lineNumber = pos.lineNumber;\n        for (let i = 0, len = this._diffs.length; i < len; i++) {\n            const diff = this._diffs[i].entries;\n            const lastModifiedLine = diff[diff.length - 1].modifiedLineEnd;\n            if (lineNumber <= lastModifiedLine) {\n                return i;\n            }\n        }\n        return 0;\n    }\n    _render() {\n        const originalOptions = this._diffEditor.getOriginalEditor().getOptions();\n        const modifiedOptions = this._diffEditor.getModifiedEditor().getOptions();\n        const originalModel = this._diffEditor.getOriginalEditor().getModel();\n        const modifiedModel = this._diffEditor.getModifiedEditor().getModel();\n        const originalModelOpts = originalModel.getOptions();\n        const modifiedModelOpts = modifiedModel.getOptions();\n        if (!this._isVisible || !originalModel || !modifiedModel) {\n            dom.clearNode(this._content.domNode);\n            this._currentDiff = null;\n            this.scrollbar.scanDomNode();\n            return;\n        }\n        this._diffEditor.updateOptions({ readOnly: true });\n        const diffIndex = this._findDiffIndex(this._diffEditor.getPosition());\n        if (this._diffs[diffIndex] === this._currentDiff) {\n            return;\n        }\n        this._currentDiff = this._diffs[diffIndex];\n        const diffs = this._diffs[diffIndex].entries;\n        const container = document.createElement('div');\n        container.className = 'diff-review-table';\n        container.setAttribute('role', 'list');\n        container.setAttribute('aria-label', 'Difference review. Use \"Stage | Unstage | Revert Selected Ranges\" commands');\n        applyFontInfo(container, modifiedOptions.get(44 /* fontInfo */));\n        let minOriginalLine = 0;\n        let maxOriginalLine = 0;\n        let minModifiedLine = 0;\n        let maxModifiedLine = 0;\n        for (let i = 0, len = diffs.length; i < len; i++) {\n            const diffEntry = diffs[i];\n            const originalLineStart = diffEntry.originalLineStart;\n            const originalLineEnd = diffEntry.originalLineEnd;\n            const modifiedLineStart = diffEntry.modifiedLineStart;\n            const modifiedLineEnd = diffEntry.modifiedLineEnd;\n            if (originalLineStart !== 0 && ((minOriginalLine === 0 || originalLineStart < minOriginalLine))) {\n                minOriginalLine = originalLineStart;\n            }\n            if (originalLineEnd !== 0 && ((maxOriginalLine === 0 || originalLineEnd > maxOriginalLine))) {\n                maxOriginalLine = originalLineEnd;\n            }\n            if (modifiedLineStart !== 0 && ((minModifiedLine === 0 || modifiedLineStart < minModifiedLine))) {\n                minModifiedLine = modifiedLineStart;\n            }\n            if (modifiedLineEnd !== 0 && ((maxModifiedLine === 0 || modifiedLineEnd > maxModifiedLine))) {\n                maxModifiedLine = modifiedLineEnd;\n            }\n        }\n        const header = document.createElement('div');\n        header.className = 'diff-review-row';\n        const cell = document.createElement('div');\n        cell.className = 'diff-review-cell diff-review-summary';\n        const originalChangedLinesCnt = maxOriginalLine - minOriginalLine + 1;\n        const modifiedChangedLinesCnt = maxModifiedLine - minModifiedLine + 1;\n        cell.appendChild(document.createTextNode(`${diffIndex + 1}/${this._diffs.length}: @@ -${minOriginalLine},${originalChangedLinesCnt} +${minModifiedLine},${modifiedChangedLinesCnt} @@`));\n        header.setAttribute('data-line', String(minModifiedLine));\n        const getAriaLines = (lines) => {\n            if (lines === 0) {\n                return nls.localize('no_lines_changed', \"no lines changed\");\n            }\n            else if (lines === 1) {\n                return nls.localize('one_line_changed', \"1 line changed\");\n            }\n            else {\n                return nls.localize('more_lines_changed', \"{0} lines changed\", lines);\n            }\n        };\n        const originalChangedLinesCntAria = getAriaLines(originalChangedLinesCnt);\n        const modifiedChangedLinesCntAria = getAriaLines(modifiedChangedLinesCnt);\n        header.setAttribute('aria-label', nls.localize({\n            key: 'header',\n            comment: [\n                'This is the ARIA label for a git diff header.',\n                'A git diff header looks like this: @@ -154,12 +159,39 @@.',\n                'That encodes that at original line 154 (which is now line 159), 12 lines were removed/changed with 39 lines.',\n                'Variables 0 and 1 refer to the diff index out of total number of diffs.',\n                'Variables 2 and 4 will be numbers (a line number).',\n                'Variables 3 and 5 will be \"no lines changed\", \"1 line changed\" or \"X lines changed\", localized separately.'\n            ]\n        }, \"Difference {0} of {1}: original line {2}, {3}, modified line {4}, {5}\", (diffIndex + 1), this._diffs.length, minOriginalLine, originalChangedLinesCntAria, minModifiedLine, modifiedChangedLinesCntAria));\n        header.appendChild(cell);\n        // @@ -504,7 +517,7 @@\n        header.setAttribute('role', 'listitem');\n        container.appendChild(header);\n        const lineHeight = modifiedOptions.get(59 /* lineHeight */);\n        let modLine = minModifiedLine;\n        for (let i = 0, len = diffs.length; i < len; i++) {\n            const diffEntry = diffs[i];\n            DiffReview._renderSection(container, diffEntry, modLine, lineHeight, this._width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts, this._languageService.languageIdCodec);\n            if (diffEntry.modifiedLineStart !== 0) {\n                modLine = diffEntry.modifiedLineEnd;\n            }\n        }\n        dom.clearNode(this._content.domNode);\n        this._content.domNode.appendChild(container);\n        this.scrollbar.scanDomNode();\n    }\n    static _renderSection(dest, diffEntry, modLine, lineHeight, width, originalOptions, originalModel, originalModelOpts, modifiedOptions, modifiedModel, modifiedModelOpts, languageIdCodec) {\n        const type = diffEntry.getType();\n        let rowClassName = 'diff-review-row';\n        let lineNumbersExtraClassName = '';\n        const spacerClassName = 'diff-review-spacer';\n        let spacerIcon = null;\n        switch (type) {\n            case 1 /* Insert */:\n                rowClassName = 'diff-review-row line-insert';\n                lineNumbersExtraClassName = ' char-insert';\n                spacerIcon = diffReviewInsertIcon;\n                break;\n            case 2 /* Delete */:\n                rowClassName = 'diff-review-row line-delete';\n                lineNumbersExtraClassName = ' char-delete';\n                spacerIcon = diffReviewRemoveIcon;\n                break;\n        }\n        const originalLineStart = diffEntry.originalLineStart;\n        const originalLineEnd = diffEntry.originalLineEnd;\n        const modifiedLineStart = diffEntry.modifiedLineStart;\n        const modifiedLineEnd = diffEntry.modifiedLineEnd;\n        const cnt = Math.max(modifiedLineEnd - modifiedLineStart, originalLineEnd - originalLineStart);\n        const originalLayoutInfo = originalOptions.get(131 /* layoutInfo */);\n        const originalLineNumbersWidth = originalLayoutInfo.glyphMarginWidth + originalLayoutInfo.lineNumbersWidth;\n        const modifiedLayoutInfo = modifiedOptions.get(131 /* layoutInfo */);\n        const modifiedLineNumbersWidth = 10 + modifiedLayoutInfo.glyphMarginWidth + modifiedLayoutInfo.lineNumbersWidth;\n        for (let i = 0; i <= cnt; i++) {\n            const originalLine = (originalLineStart === 0 ? 0 : originalLineStart + i);\n            const modifiedLine = (modifiedLineStart === 0 ? 0 : modifiedLineStart + i);\n            const row = document.createElement('div');\n            row.style.minWidth = width + 'px';\n            row.className = rowClassName;\n            row.setAttribute('role', 'listitem');\n            if (modifiedLine !== 0) {\n                modLine = modifiedLine;\n            }\n            row.setAttribute('data-line', String(modLine));\n            const cell = document.createElement('div');\n            cell.className = 'diff-review-cell';\n            cell.style.height = `${lineHeight}px`;\n            row.appendChild(cell);\n            const originalLineNumber = document.createElement('span');\n            originalLineNumber.style.width = (originalLineNumbersWidth + 'px');\n            originalLineNumber.style.minWidth = (originalLineNumbersWidth + 'px');\n            originalLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n            if (originalLine !== 0) {\n                originalLineNumber.appendChild(document.createTextNode(String(originalLine)));\n            }\n            else {\n                originalLineNumber.innerText = '\\u00a0';\n            }\n            cell.appendChild(originalLineNumber);\n            const modifiedLineNumber = document.createElement('span');\n            modifiedLineNumber.style.width = (modifiedLineNumbersWidth + 'px');\n            modifiedLineNumber.style.minWidth = (modifiedLineNumbersWidth + 'px');\n            modifiedLineNumber.style.paddingRight = '10px';\n            modifiedLineNumber.className = 'diff-review-line-number' + lineNumbersExtraClassName;\n            if (modifiedLine !== 0) {\n                modifiedLineNumber.appendChild(document.createTextNode(String(modifiedLine)));\n            }\n            else {\n                modifiedLineNumber.innerText = '\\u00a0';\n            }\n            cell.appendChild(modifiedLineNumber);\n            const spacer = document.createElement('span');\n            spacer.className = spacerClassName;\n            if (spacerIcon) {\n                const spacerCodicon = document.createElement('span');\n                spacerCodicon.className = ThemeIcon.asClassName(spacerIcon);\n                spacerCodicon.innerText = '\\u00a0\\u00a0';\n                spacer.appendChild(spacerCodicon);\n            }\n            else {\n                spacer.innerText = '\\u00a0\\u00a0';\n            }\n            cell.appendChild(spacer);\n            let lineContent;\n            if (modifiedLine !== 0) {\n                let html = this._renderLine(modifiedModel, modifiedOptions, modifiedModelOpts.tabSize, modifiedLine, languageIdCodec);\n                if (DiffReview._ttPolicy) {\n                    html = DiffReview._ttPolicy.createHTML(html);\n                }\n                cell.insertAdjacentHTML('beforeend', html);\n                lineContent = modifiedModel.getLineContent(modifiedLine);\n            }\n            else {\n                let html = this._renderLine(originalModel, originalOptions, originalModelOpts.tabSize, originalLine, languageIdCodec);\n                if (DiffReview._ttPolicy) {\n                    html = DiffReview._ttPolicy.createHTML(html);\n                }\n                cell.insertAdjacentHTML('beforeend', html);\n                lineContent = originalModel.getLineContent(originalLine);\n            }\n            if (lineContent.length === 0) {\n                lineContent = nls.localize('blankLine', \"blank\");\n            }\n            let ariaLabel = '';\n            switch (type) {\n                case 0 /* Equal */:\n                    if (originalLine === modifiedLine) {\n                        ariaLabel = nls.localize({ key: 'unchangedLine', comment: ['The placeholders are contents of the line and should not be translated.'] }, \"{0} unchanged line {1}\", lineContent, originalLine);\n                    }\n                    else {\n                        ariaLabel = nls.localize('equalLine', \"{0} original line {1} modified line {2}\", lineContent, originalLine, modifiedLine);\n                    }\n                    break;\n                case 1 /* Insert */:\n                    ariaLabel = nls.localize('insertLine', \"+ {0} modified line {1}\", lineContent, modifiedLine);\n                    break;\n                case 2 /* Delete */:\n                    ariaLabel = nls.localize('deleteLine', \"- {0} original line {1}\", lineContent, originalLine);\n                    break;\n            }\n            row.setAttribute('aria-label', ariaLabel);\n            dest.appendChild(row);\n        }\n    }\n    static _renderLine(model, options, tabSize, lineNumber, languageIdCodec) {\n        const lineContent = model.getLineContent(lineNumber);\n        const fontInfo = options.get(44 /* fontInfo */);\n        const lineTokens = LineTokens.createEmpty(lineContent, languageIdCodec);\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, model.mightContainNonBasicASCII());\n        const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, model.mightContainRTL());\n        const r = renderViewLine(new RenderLineInput((fontInfo.isMonospace && !options.get(29 /* disableMonospaceOptimizations */)), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, [], tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, options.get(105 /* stopRenderingLineAfter */), options.get(88 /* renderWhitespace */), options.get(83 /* renderControlCharacters */), options.get(45 /* fontLigatures */) !== EditorFontLigatures.OFF, null));\n        return r.html;\n    }\n};\nDiffReview._ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('diffReview', { createHTML: value => value });\nDiffReview = __decorate([\n    __param(1, ILanguageService)\n], DiffReview);\nexport { DiffReview };\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const lineNumbers = theme.getColor(editorLineNumbers);\n    if (lineNumbers) {\n        collector.addRule(`.monaco-diff-editor .diff-review-line-number { color: ${lineNumbers}; }`);\n    }\n    const shadow = theme.getColor(scrollbarShadow);\n    if (shadow) {\n        collector.addRule(`.monaco-diff-editor .diff-review-shadow { box-shadow: ${shadow} 0 -6px 6px -6px inset; }`);\n    }\n});\nclass DiffReviewNext extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.diffReview.next',\n            label: nls.localize('editor.action.diffReview.next', \"Go to Next Difference\"),\n            alias: 'Go to Next Difference',\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            kbOpts: {\n                kbExpr: null,\n                primary: 65 /* F7 */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        if (diffEditor) {\n            diffEditor.diffReviewNext();\n        }\n    }\n}\nclass DiffReviewPrev extends EditorAction {\n    constructor() {\n        super({\n            id: 'editor.action.diffReview.prev',\n            label: nls.localize('editor.action.diffReview.prev', \"Go to Previous Difference\"),\n            alias: 'Go to Previous Difference',\n            precondition: ContextKeyExpr.has('isInDiffEditor'),\n            kbOpts: {\n                kbExpr: null,\n                primary: 1024 /* Shift */ | 65 /* F7 */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        const diffEditor = findFocusedDiffEditor(accessor);\n        if (diffEditor) {\n            diffEditor.diffReviewPrev();\n        }\n    }\n}\nfunction findFocusedDiffEditor(accessor) {\n    const codeEditorService = accessor.get(ICodeEditorService);\n    const diffEditors = codeEditorService.listDiffEditors();\n    const activeCodeEditor = codeEditorService.getActiveCodeEditor();\n    if (!activeCodeEditor) {\n        return null;\n    }\n    for (let i = 0, len = diffEditors.length; i < len; i++) {\n        const diffEditor = diffEditors[i];\n        if (diffEditor.getModifiedEditor().getId() === activeCodeEditor.getId() || diffEditor.getOriginalEditor().getId() === activeCodeEditor.getId()) {\n            return diffEditor;\n        }\n    }\n    return null;\n}\nregisterEditorAction(DiffReviewNext);\nregisterEditorAction(DiffReviewPrev);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar _a;\nimport './media/diffEditor.css';\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { createFastDomNode } from '../../../base/browser/fastDomNode.js';\nimport { Sash } from '../../../base/browser/ui/sash/sash.js';\nimport { RunOnceScheduler } from '../../../base/common/async.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { applyFontInfo } from '../config/domFontInfo.js';\nimport { StableEditorScrollState } from '../stableEditorScroll.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { CodeEditorWidget } from './codeEditorWidget.js';\nimport { DiffReview } from './diffReview.js';\nimport { EditorOptions, EditorFontLigatures, stringSet as validateStringSetOption, boolean as validateBooleanOption, clampedInt } from '../../common/config/editorOptions.js';\nimport { Range } from '../../common/core/range.js';\nimport { createStringBuilder } from '../../common/core/stringBuilder.js';\nimport * as editorCommon from '../../common/editorCommon.js';\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\nimport { IEditorWorkerService } from '../../common/services/editorWorker.js';\nimport { OverviewRulerZone } from '../../common/viewModel/overviewZoneManager.js';\nimport { LineDecoration } from '../../common/viewLayout/lineDecorations.js';\nimport { RenderLineInput, renderViewLine } from '../../common/viewLayout/viewLineRenderer.js';\nimport { InlineDecoration, ViewLineRenderingData } from '../../common/viewModel/viewModel.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { ServiceCollection } from '../../../platform/instantiation/common/serviceCollection.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { defaultInsertColor, defaultRemoveColor, diffBorder, diffInserted, diffInsertedOutline, diffRemoved, diffRemovedOutline, scrollbarShadow, scrollbarSliderBackground, scrollbarSliderHoverBackground, scrollbarSliderActiveBackground, diffDiagonalFill } from '../../../platform/theme/common/colorRegistry.js';\nimport { IThemeService, getThemeTypeSelector, registerThemingParticipant, ThemeIcon } from '../../../platform/theme/common/themeService.js';\nimport { IContextMenuService } from '../../../platform/contextview/browser/contextView.js';\nimport { InlineDiffMargin } from './inlineDiffMargin.js';\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\nimport { EditorExtensionsRegistry } from '../editorExtensions.js';\nimport { onUnexpectedError } from '../../../base/common/errors.js';\nimport { IEditorProgressService } from '../../../platform/progress/common/progress.js';\nimport { ElementSizeObserver } from '../config/elementSizeObserver.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nimport { MOUSE_CURSOR_TEXT_CSS_CLASS_NAME } from '../../../base/browser/ui/mouseCursor/mouseCursor.js';\nimport { registerIcon } from '../../../platform/theme/common/iconRegistry.js';\nclass VisualEditorState {\n    constructor(_contextMenuService, _clipboardService) {\n        this._contextMenuService = _contextMenuService;\n        this._clipboardService = _clipboardService;\n        this._zones = [];\n        this._inlineDiffMargins = [];\n        this._zonesMap = {};\n        this._decorations = [];\n    }\n    getForeignViewZones(allViewZones) {\n        return allViewZones.filter((z) => !this._zonesMap[String(z.id)]);\n    }\n    clean(editor) {\n        // (1) View zones\n        if (this._zones.length > 0) {\n            editor.changeViewZones((viewChangeAccessor) => {\n                for (const zoneId of this._zones) {\n                    viewChangeAccessor.removeZone(zoneId);\n                }\n            });\n        }\n        this._zones = [];\n        this._zonesMap = {};\n        // (2) Model decorations\n        this._decorations = editor.deltaDecorations(this._decorations, []);\n    }\n    apply(editor, overviewRuler, newDecorations, restoreScrollState) {\n        const scrollState = restoreScrollState ? StableEditorScrollState.capture(editor) : null;\n        // view zones\n        editor.changeViewZones((viewChangeAccessor) => {\n            var _a;\n            for (const zoneId of this._zones) {\n                viewChangeAccessor.removeZone(zoneId);\n            }\n            for (const inlineDiffMargin of this._inlineDiffMargins) {\n                inlineDiffMargin.dispose();\n            }\n            this._zones = [];\n            this._zonesMap = {};\n            this._inlineDiffMargins = [];\n            for (let i = 0, length = newDecorations.zones.length; i < length; i++) {\n                const viewZone = newDecorations.zones[i];\n                viewZone.suppressMouseDown = true;\n                const zoneId = viewChangeAccessor.addZone(viewZone);\n                this._zones.push(zoneId);\n                this._zonesMap[String(zoneId)] = true;\n                if (newDecorations.zones[i].diff && viewZone.marginDomNode) {\n                    viewZone.suppressMouseDown = false;\n                    if (((_a = newDecorations.zones[i].diff) === null || _a === void 0 ? void 0 : _a.originalModel.getValueLength()) !== 0) {\n                        // do not contribute diff margin actions for newly created files\n                        this._inlineDiffMargins.push(new InlineDiffMargin(zoneId, viewZone.marginDomNode, editor, newDecorations.zones[i].diff, this._contextMenuService, this._clipboardService));\n                    }\n                }\n            }\n        });\n        if (scrollState) {\n            scrollState.restore(editor);\n        }\n        // decorations\n        this._decorations = editor.deltaDecorations(this._decorations, newDecorations.decorations);\n        // overview ruler\n        if (overviewRuler) {\n            overviewRuler.setZones(newDecorations.overviewZones);\n        }\n    }\n}\nlet DIFF_EDITOR_ID = 0;\nconst diffInsertIcon = registerIcon('diff-insert', Codicon.add, nls.localize('diffInsertIcon', 'Line decoration for inserts in the diff editor.'));\nconst diffRemoveIcon = registerIcon('diff-remove', Codicon.remove, nls.localize('diffRemoveIcon', 'Line decoration for removals in the diff editor.'));\nconst ttPolicy = (_a = window.trustedTypes) === null || _a === void 0 ? void 0 : _a.createPolicy('diffEditorWidget', { createHTML: value => value });\nlet DiffEditorWidget = class DiffEditorWidget extends Disposable {\n    constructor(domElement, options, codeEditorWidgetOptions, clipboardService, editorWorkerService, contextKeyService, instantiationService, codeEditorService, themeService, notificationService, contextMenuService, _editorProgressService) {\n        super();\n        this._editorProgressService = _editorProgressService;\n        this._onDidDispose = this._register(new Emitter());\n        this.onDidDispose = this._onDidDispose.event;\n        this._onDidUpdateDiff = this._register(new Emitter());\n        this.onDidUpdateDiff = this._onDidUpdateDiff.event;\n        this._onDidContentSizeChange = this._register(new Emitter());\n        this._lastOriginalWarning = null;\n        this._lastModifiedWarning = null;\n        this._editorWorkerService = editorWorkerService;\n        this._codeEditorService = codeEditorService;\n        this._contextKeyService = this._register(contextKeyService.createScoped(domElement));\n        this._instantiationService = instantiationService.createChild(new ServiceCollection([IContextKeyService, this._contextKeyService]));\n        this._contextKeyService.createKey('isInDiffEditor', true);\n        this._themeService = themeService;\n        this._notificationService = notificationService;\n        this._id = (++DIFF_EDITOR_ID);\n        this._state = 0 /* Idle */;\n        this._updatingDiffProgress = null;\n        this._domElement = domElement;\n        options = options || {};\n        this._options = validateDiffEditorOptions(options, {\n            enableSplitViewResizing: true,\n            renderSideBySide: true,\n            maxComputationTime: 5000,\n            maxFileSize: 50,\n            ignoreTrimWhitespace: true,\n            renderIndicators: true,\n            originalEditable: false,\n            diffCodeLens: false,\n            renderOverviewRuler: true,\n            diffWordWrap: 'inherit'\n        });\n        if (typeof options.isInEmbeddedEditor !== 'undefined') {\n            this._contextKeyService.createKey('isInEmbeddedDiffEditor', options.isInEmbeddedEditor);\n        }\n        else {\n            this._contextKeyService.createKey('isInEmbeddedDiffEditor', false);\n        }\n        this._updateDecorationsRunner = this._register(new RunOnceScheduler(() => this._updateDecorations(), 0));\n        this._containerDomElement = document.createElement('div');\n        this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._options.renderSideBySide);\n        this._containerDomElement.style.position = 'relative';\n        this._containerDomElement.style.height = '100%';\n        this._domElement.appendChild(this._containerDomElement);\n        this._overviewViewportDomElement = createFastDomNode(document.createElement('div'));\n        this._overviewViewportDomElement.setClassName('diffViewport');\n        this._overviewViewportDomElement.setPosition('absolute');\n        this._overviewDomElement = document.createElement('div');\n        this._overviewDomElement.className = 'diffOverview';\n        this._overviewDomElement.style.position = 'absolute';\n        this._overviewDomElement.appendChild(this._overviewViewportDomElement.domNode);\n        this._register(dom.addStandardDisposableListener(this._overviewDomElement, 'mousedown', (e) => {\n            this._modifiedEditor.delegateVerticalScrollbarMouseDown(e);\n        }));\n        if (this._options.renderOverviewRuler) {\n            this._containerDomElement.appendChild(this._overviewDomElement);\n        }\n        // Create left side\n        this._originalDomNode = document.createElement('div');\n        this._originalDomNode.className = 'editor original';\n        this._originalDomNode.style.position = 'absolute';\n        this._originalDomNode.style.height = '100%';\n        this._containerDomElement.appendChild(this._originalDomNode);\n        // Create right side\n        this._modifiedDomNode = document.createElement('div');\n        this._modifiedDomNode.className = 'editor modified';\n        this._modifiedDomNode.style.position = 'absolute';\n        this._modifiedDomNode.style.height = '100%';\n        this._containerDomElement.appendChild(this._modifiedDomNode);\n        this._beginUpdateDecorationsTimeout = -1;\n        this._currentlyChangingViewZones = false;\n        this._diffComputationToken = 0;\n        this._originalEditorState = new VisualEditorState(contextMenuService, clipboardService);\n        this._modifiedEditorState = new VisualEditorState(contextMenuService, clipboardService);\n        this._isVisible = true;\n        this._isHandlingScrollEvent = false;\n        this._elementSizeObserver = this._register(new ElementSizeObserver(this._containerDomElement, options.dimension));\n        this._register(this._elementSizeObserver.onDidChange(() => this._onDidContainerSizeChanged()));\n        if (options.automaticLayout) {\n            this._elementSizeObserver.startObserving();\n        }\n        this._diffComputationResult = null;\n        this._originalEditor = this._createLeftHandSideEditor(options, codeEditorWidgetOptions.originalEditor || {});\n        this._modifiedEditor = this._createRightHandSideEditor(options, codeEditorWidgetOptions.modifiedEditor || {});\n        this._originalOverviewRuler = null;\n        this._modifiedOverviewRuler = null;\n        this._reviewPane = instantiationService.createInstance(DiffReview, this);\n        this._containerDomElement.appendChild(this._reviewPane.domNode.domNode);\n        this._containerDomElement.appendChild(this._reviewPane.shadow.domNode);\n        this._containerDomElement.appendChild(this._reviewPane.actionBarContainer.domNode);\n        if (this._options.renderSideBySide) {\n            this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._options.enableSplitViewResizing));\n        }\n        else {\n            this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._options.enableSplitViewResizing));\n        }\n        this._register(themeService.onDidColorThemeChange(t => {\n            if (this._strategy && this._strategy.applyColors(t)) {\n                this._updateDecorationsRunner.schedule();\n            }\n            this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._options.renderSideBySide);\n        }));\n        const contributions = EditorExtensionsRegistry.getDiffEditorContributions();\n        for (const desc of contributions) {\n            try {\n                this._register(instantiationService.createInstance(desc.ctor, this));\n            }\n            catch (err) {\n                onUnexpectedError(err);\n            }\n        }\n        this._codeEditorService.addDiffEditor(this);\n    }\n    _setState(newState) {\n        if (this._state === newState) {\n            return;\n        }\n        this._state = newState;\n        if (this._updatingDiffProgress) {\n            this._updatingDiffProgress.done();\n            this._updatingDiffProgress = null;\n        }\n        if (this._state === 1 /* ComputingDiff */) {\n            this._updatingDiffProgress = this._editorProgressService.show(true, 1000);\n        }\n    }\n    diffReviewNext() {\n        this._reviewPane.next();\n    }\n    diffReviewPrev() {\n        this._reviewPane.prev();\n    }\n    static _getClassName(theme, renderSideBySide) {\n        let result = 'monaco-diff-editor monaco-editor-background ';\n        if (renderSideBySide) {\n            result += 'side-by-side ';\n        }\n        result += getThemeTypeSelector(theme.type);\n        return result;\n    }\n    _recreateOverviewRulers() {\n        if (!this._options.renderOverviewRuler) {\n            return;\n        }\n        if (this._originalOverviewRuler) {\n            this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\n            this._originalOverviewRuler.dispose();\n        }\n        if (this._originalEditor.hasModel()) {\n            this._originalOverviewRuler = this._originalEditor.createOverviewRuler('original diffOverviewRuler');\n            this._overviewDomElement.appendChild(this._originalOverviewRuler.getDomNode());\n        }\n        if (this._modifiedOverviewRuler) {\n            this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\n            this._modifiedOverviewRuler.dispose();\n        }\n        if (this._modifiedEditor.hasModel()) {\n            this._modifiedOverviewRuler = this._modifiedEditor.createOverviewRuler('modified diffOverviewRuler');\n            this._overviewDomElement.appendChild(this._modifiedOverviewRuler.getDomNode());\n        }\n        this._layoutOverviewRulers();\n    }\n    _createLeftHandSideEditor(options, codeEditorWidgetOptions) {\n        const editor = this._createInnerEditor(this._instantiationService, this._originalDomNode, this._adjustOptionsForLeftHandSide(options), codeEditorWidgetOptions);\n        this._register(editor.onDidScrollChange((e) => {\n            if (this._isHandlingScrollEvent) {\n                return;\n            }\n            if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\n                return;\n            }\n            this._isHandlingScrollEvent = true;\n            this._modifiedEditor.setScrollPosition({\n                scrollLeft: e.scrollLeft,\n                scrollTop: e.scrollTop\n            });\n            this._isHandlingScrollEvent = false;\n            this._layoutOverviewViewport();\n        }));\n        this._register(editor.onDidChangeViewZones(() => {\n            this._onViewZonesChanged();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!editor.getModel()) {\n                return;\n            }\n            if (e.hasChanged(44 /* fontInfo */)) {\n                this._updateDecorationsRunner.schedule();\n            }\n            if (e.hasChanged(132 /* wrappingInfo */)) {\n                this._updateDecorationsRunner.cancel();\n                this._updateDecorations();\n            }\n        }));\n        this._register(editor.onDidChangeHiddenAreas(() => {\n            this._updateDecorationsRunner.cancel();\n            this._updateDecorations();\n        }));\n        this._register(editor.onDidChangeModelContent(() => {\n            if (this._isVisible) {\n                this._beginUpdateDecorationsSoon();\n            }\n        }));\n        const isInDiffLeftEditorKey = this._contextKeyService.createKey('isInDiffLeftEditor', editor.hasWidgetFocus());\n        this._register(editor.onDidFocusEditorWidget(() => isInDiffLeftEditorKey.set(true)));\n        this._register(editor.onDidBlurEditorWidget(() => isInDiffLeftEditorKey.set(false)));\n        this._register(editor.onDidContentSizeChange(e => {\n            const width = this._originalEditor.getContentWidth() + this._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n            const height = Math.max(this._modifiedEditor.getContentHeight(), this._originalEditor.getContentHeight());\n            this._onDidContentSizeChange.fire({\n                contentHeight: height,\n                contentWidth: width,\n                contentHeightChanged: e.contentHeightChanged,\n                contentWidthChanged: e.contentWidthChanged\n            });\n        }));\n        return editor;\n    }\n    _createRightHandSideEditor(options, codeEditorWidgetOptions) {\n        const editor = this._createInnerEditor(this._instantiationService, this._modifiedDomNode, this._adjustOptionsForRightHandSide(options), codeEditorWidgetOptions);\n        this._register(editor.onDidScrollChange((e) => {\n            if (this._isHandlingScrollEvent) {\n                return;\n            }\n            if (!e.scrollTopChanged && !e.scrollLeftChanged && !e.scrollHeightChanged) {\n                return;\n            }\n            this._isHandlingScrollEvent = true;\n            this._originalEditor.setScrollPosition({\n                scrollLeft: e.scrollLeft,\n                scrollTop: e.scrollTop\n            });\n            this._isHandlingScrollEvent = false;\n            this._layoutOverviewViewport();\n        }));\n        this._register(editor.onDidChangeViewZones(() => {\n            this._onViewZonesChanged();\n        }));\n        this._register(editor.onDidChangeConfiguration((e) => {\n            if (!editor.getModel()) {\n                return;\n            }\n            if (e.hasChanged(44 /* fontInfo */)) {\n                this._updateDecorationsRunner.schedule();\n            }\n            if (e.hasChanged(132 /* wrappingInfo */)) {\n                this._updateDecorationsRunner.cancel();\n                this._updateDecorations();\n            }\n        }));\n        this._register(editor.onDidChangeHiddenAreas(() => {\n            this._updateDecorationsRunner.cancel();\n            this._updateDecorations();\n        }));\n        this._register(editor.onDidChangeModelContent(() => {\n            if (this._isVisible) {\n                this._beginUpdateDecorationsSoon();\n            }\n        }));\n        this._register(editor.onDidChangeModelOptions((e) => {\n            if (e.tabSize) {\n                this._updateDecorationsRunner.schedule();\n            }\n        }));\n        const isInDiffRightEditorKey = this._contextKeyService.createKey('isInDiffRightEditor', editor.hasWidgetFocus());\n        this._register(editor.onDidFocusEditorWidget(() => isInDiffRightEditorKey.set(true)));\n        this._register(editor.onDidBlurEditorWidget(() => isInDiffRightEditorKey.set(false)));\n        this._register(editor.onDidContentSizeChange(e => {\n            const width = this._originalEditor.getContentWidth() + this._modifiedEditor.getContentWidth() + DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n            const height = Math.max(this._modifiedEditor.getContentHeight(), this._originalEditor.getContentHeight());\n            this._onDidContentSizeChange.fire({\n                contentHeight: height,\n                contentWidth: width,\n                contentHeightChanged: e.contentHeightChanged,\n                contentWidthChanged: e.contentWidthChanged\n            });\n        }));\n        return editor;\n    }\n    _createInnerEditor(instantiationService, container, options, editorWidgetOptions) {\n        return instantiationService.createInstance(CodeEditorWidget, container, options, editorWidgetOptions);\n    }\n    dispose() {\n        this._codeEditorService.removeDiffEditor(this);\n        if (this._beginUpdateDecorationsTimeout !== -1) {\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\n            this._beginUpdateDecorationsTimeout = -1;\n        }\n        this._cleanViewZonesAndDecorations();\n        if (this._originalOverviewRuler) {\n            this._overviewDomElement.removeChild(this._originalOverviewRuler.getDomNode());\n            this._originalOverviewRuler.dispose();\n        }\n        if (this._modifiedOverviewRuler) {\n            this._overviewDomElement.removeChild(this._modifiedOverviewRuler.getDomNode());\n            this._modifiedOverviewRuler.dispose();\n        }\n        this._overviewDomElement.removeChild(this._overviewViewportDomElement.domNode);\n        if (this._options.renderOverviewRuler) {\n            this._containerDomElement.removeChild(this._overviewDomElement);\n        }\n        this._containerDomElement.removeChild(this._originalDomNode);\n        this._originalEditor.dispose();\n        this._containerDomElement.removeChild(this._modifiedDomNode);\n        this._modifiedEditor.dispose();\n        this._strategy.dispose();\n        this._containerDomElement.removeChild(this._reviewPane.domNode.domNode);\n        this._containerDomElement.removeChild(this._reviewPane.shadow.domNode);\n        this._containerDomElement.removeChild(this._reviewPane.actionBarContainer.domNode);\n        this._reviewPane.dispose();\n        this._domElement.removeChild(this._containerDomElement);\n        this._onDidDispose.fire();\n        super.dispose();\n    }\n    //------------ begin IDiffEditor methods\n    getId() {\n        return this.getEditorType() + ':' + this._id;\n    }\n    getEditorType() {\n        return editorCommon.EditorType.IDiffEditor;\n    }\n    getLineChanges() {\n        if (!this._diffComputationResult) {\n            return null;\n        }\n        return this._diffComputationResult.changes;\n    }\n    getOriginalEditor() {\n        return this._originalEditor;\n    }\n    getModifiedEditor() {\n        return this._modifiedEditor;\n    }\n    updateOptions(_newOptions) {\n        const newOptions = validateDiffEditorOptions(_newOptions, this._options);\n        const changed = changedDiffEditorOptions(this._options, newOptions);\n        this._options = newOptions;\n        const beginUpdateDecorations = (changed.ignoreTrimWhitespace || changed.renderIndicators);\n        const beginUpdateDecorationsSoon = (this._isVisible && (changed.maxComputationTime || changed.maxFileSize));\n        if (beginUpdateDecorations) {\n            this._beginUpdateDecorations();\n        }\n        else if (beginUpdateDecorationsSoon) {\n            this._beginUpdateDecorationsSoon();\n        }\n        this._modifiedEditor.updateOptions(this._adjustOptionsForRightHandSide(_newOptions));\n        this._originalEditor.updateOptions(this._adjustOptionsForLeftHandSide(_newOptions));\n        // enableSplitViewResizing\n        this._strategy.setEnableSplitViewResizing(this._options.enableSplitViewResizing);\n        // renderSideBySide\n        if (changed.renderSideBySide) {\n            if (this._options.renderSideBySide) {\n                this._setStrategy(new DiffEditorWidgetSideBySide(this._createDataSource(), this._options.enableSplitViewResizing));\n            }\n            else {\n                this._setStrategy(new DiffEditorWidgetInline(this._createDataSource(), this._options.enableSplitViewResizing));\n            }\n            // Update class name\n            this._containerDomElement.className = DiffEditorWidget._getClassName(this._themeService.getColorTheme(), this._options.renderSideBySide);\n        }\n        // renderOverviewRuler\n        if (changed.renderOverviewRuler) {\n            if (this._options.renderOverviewRuler) {\n                this._containerDomElement.appendChild(this._overviewDomElement);\n            }\n            else {\n                this._containerDomElement.removeChild(this._overviewDomElement);\n            }\n        }\n    }\n    getModel() {\n        return {\n            original: this._originalEditor.getModel(),\n            modified: this._modifiedEditor.getModel()\n        };\n    }\n    setModel(model) {\n        // Guard us against partial null model\n        if (model && (!model.original || !model.modified)) {\n            throw new Error(!model.original ? 'DiffEditorWidget.setModel: Original model is null' : 'DiffEditorWidget.setModel: Modified model is null');\n        }\n        // Remove all view zones & decorations\n        this._cleanViewZonesAndDecorations();\n        // Update code editor models\n        this._originalEditor.setModel(model ? model.original : null);\n        this._modifiedEditor.setModel(model ? model.modified : null);\n        this._updateDecorationsRunner.cancel();\n        // this.originalEditor.onDidChangeModelOptions\n        if (model) {\n            this._originalEditor.setScrollTop(0);\n            this._modifiedEditor.setScrollTop(0);\n        }\n        // Disable any diff computations that will come in\n        this._diffComputationResult = null;\n        this._diffComputationToken++;\n        this._setState(0 /* Idle */);\n        if (model) {\n            this._recreateOverviewRulers();\n            // Begin comparing\n            this._beginUpdateDecorations();\n        }\n        this._layoutOverviewViewport();\n    }\n    getContainerDomNode() {\n        return this._domElement;\n    }\n    getVisibleColumnFromPosition(position) {\n        return this._modifiedEditor.getVisibleColumnFromPosition(position);\n    }\n    getPosition() {\n        return this._modifiedEditor.getPosition();\n    }\n    setPosition(position) {\n        this._modifiedEditor.setPosition(position);\n    }\n    revealLine(lineNumber, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealLine(lineNumber, scrollType);\n    }\n    revealLineInCenter(lineNumber, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealLineInCenter(lineNumber, scrollType);\n    }\n    revealLineInCenterIfOutsideViewport(lineNumber, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealLineInCenterIfOutsideViewport(lineNumber, scrollType);\n    }\n    revealLineNearTop(lineNumber, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealLineNearTop(lineNumber, scrollType);\n    }\n    revealPosition(position, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealPosition(position, scrollType);\n    }\n    revealPositionInCenter(position, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealPositionInCenter(position, scrollType);\n    }\n    revealPositionInCenterIfOutsideViewport(position, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealPositionInCenterIfOutsideViewport(position, scrollType);\n    }\n    revealPositionNearTop(position, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealPositionNearTop(position, scrollType);\n    }\n    getSelection() {\n        return this._modifiedEditor.getSelection();\n    }\n    getSelections() {\n        return this._modifiedEditor.getSelections();\n    }\n    setSelection(something) {\n        this._modifiedEditor.setSelection(something);\n    }\n    setSelections(ranges) {\n        this._modifiedEditor.setSelections(ranges);\n    }\n    revealLines(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealLines(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesInCenter(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealLinesInCenter(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealLinesInCenterIfOutsideViewport(startLineNumber, endLineNumber, scrollType);\n    }\n    revealLinesNearTop(startLineNumber, endLineNumber, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealLinesNearTop(startLineNumber, endLineNumber, scrollType);\n    }\n    revealRange(range, scrollType = 0 /* Smooth */, revealVerticalInCenter = false, revealHorizontal = true) {\n        this._modifiedEditor.revealRange(range, scrollType, revealVerticalInCenter, revealHorizontal);\n    }\n    revealRangeInCenter(range, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealRangeInCenter(range, scrollType);\n    }\n    revealRangeInCenterIfOutsideViewport(range, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealRangeInCenterIfOutsideViewport(range, scrollType);\n    }\n    revealRangeNearTop(range, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealRangeNearTop(range, scrollType);\n    }\n    revealRangeNearTopIfOutsideViewport(range, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealRangeNearTopIfOutsideViewport(range, scrollType);\n    }\n    revealRangeAtTop(range, scrollType = 0 /* Smooth */) {\n        this._modifiedEditor.revealRangeAtTop(range, scrollType);\n    }\n    getSupportedActions() {\n        return this._modifiedEditor.getSupportedActions();\n    }\n    saveViewState() {\n        const originalViewState = this._originalEditor.saveViewState();\n        const modifiedViewState = this._modifiedEditor.saveViewState();\n        return {\n            original: originalViewState,\n            modified: modifiedViewState\n        };\n    }\n    restoreViewState(s) {\n        if (s && s.original && s.modified) {\n            const diffEditorState = s;\n            this._originalEditor.restoreViewState(diffEditorState.original);\n            this._modifiedEditor.restoreViewState(diffEditorState.modified);\n        }\n    }\n    layout(dimension) {\n        this._elementSizeObserver.observe(dimension);\n    }\n    focus() {\n        this._modifiedEditor.focus();\n    }\n    hasTextFocus() {\n        return this._originalEditor.hasTextFocus() || this._modifiedEditor.hasTextFocus();\n    }\n    trigger(source, handlerId, payload) {\n        this._modifiedEditor.trigger(source, handlerId, payload);\n    }\n    changeDecorations(callback) {\n        return this._modifiedEditor.changeDecorations(callback);\n    }\n    //------------ end IDiffEditor methods\n    //------------ begin layouting methods\n    _onDidContainerSizeChanged() {\n        this._doLayout();\n    }\n    _getReviewHeight() {\n        return this._reviewPane.isVisible() ? this._elementSizeObserver.getHeight() : 0;\n    }\n    _layoutOverviewRulers() {\n        if (!this._options.renderOverviewRuler) {\n            return;\n        }\n        if (!this._originalOverviewRuler || !this._modifiedOverviewRuler) {\n            return;\n        }\n        const height = this._elementSizeObserver.getHeight();\n        const reviewHeight = this._getReviewHeight();\n        const freeSpace = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH - 2 * DiffEditorWidget.ONE_OVERVIEW_WIDTH;\n        const layoutInfo = this._modifiedEditor.getLayoutInfo();\n        if (layoutInfo) {\n            this._originalOverviewRuler.setLayout({\n                top: 0,\n                width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                right: freeSpace + DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                height: (height - reviewHeight)\n            });\n            this._modifiedOverviewRuler.setLayout({\n                top: 0,\n                right: 0,\n                width: DiffEditorWidget.ONE_OVERVIEW_WIDTH,\n                height: (height - reviewHeight)\n            });\n        }\n    }\n    //------------ end layouting methods\n    _onViewZonesChanged() {\n        if (this._currentlyChangingViewZones) {\n            return;\n        }\n        this._updateDecorationsRunner.schedule();\n    }\n    _beginUpdateDecorationsSoon() {\n        // Clear previous timeout if necessary\n        if (this._beginUpdateDecorationsTimeout !== -1) {\n            window.clearTimeout(this._beginUpdateDecorationsTimeout);\n            this._beginUpdateDecorationsTimeout = -1;\n        }\n        this._beginUpdateDecorationsTimeout = window.setTimeout(() => this._beginUpdateDecorations(), DiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY);\n    }\n    static _equals(a, b) {\n        if (!a && !b) {\n            return true;\n        }\n        if (!a || !b) {\n            return false;\n        }\n        return (a.toString() === b.toString());\n    }\n    _beginUpdateDecorations() {\n        this._beginUpdateDecorationsTimeout = -1;\n        const currentOriginalModel = this._originalEditor.getModel();\n        const currentModifiedModel = this._modifiedEditor.getModel();\n        if (!currentOriginalModel || !currentModifiedModel) {\n            return;\n        }\n        // Prevent old diff requests to come if a new request has been initiated\n        // The best method would be to call cancel on the Promise, but this is not\n        // yet supported, so using tokens for now.\n        this._diffComputationToken++;\n        const currentToken = this._diffComputationToken;\n        const diffLimit = this._options.maxFileSize * 1024 * 1024; // MB\n        const canSyncModelForDiff = (model) => {\n            const bufferTextLength = model.getValueLength();\n            return (diffLimit === 0 || bufferTextLength <= diffLimit);\n        };\n        if (!canSyncModelForDiff(currentOriginalModel) || !canSyncModelForDiff(currentModifiedModel)) {\n            if (!DiffEditorWidget._equals(currentOriginalModel.uri, this._lastOriginalWarning)\n                || !DiffEditorWidget._equals(currentModifiedModel.uri, this._lastModifiedWarning)) {\n                this._lastOriginalWarning = currentOriginalModel.uri;\n                this._lastModifiedWarning = currentModifiedModel.uri;\n                this._notificationService.warn(nls.localize(\"diff.tooLarge\", \"Cannot compare files because one file is too large.\"));\n            }\n            return;\n        }\n        this._setState(1 /* ComputingDiff */);\n        this._editorWorkerService.computeDiff(currentOriginalModel.uri, currentModifiedModel.uri, this._options.ignoreTrimWhitespace, this._options.maxComputationTime).then((result) => {\n            if (currentToken === this._diffComputationToken\n                && currentOriginalModel === this._originalEditor.getModel()\n                && currentModifiedModel === this._modifiedEditor.getModel()) {\n                this._setState(2 /* DiffComputed */);\n                this._diffComputationResult = result;\n                this._updateDecorationsRunner.schedule();\n                this._onDidUpdateDiff.fire();\n            }\n        }, (error) => {\n            if (currentToken === this._diffComputationToken\n                && currentOriginalModel === this._originalEditor.getModel()\n                && currentModifiedModel === this._modifiedEditor.getModel()) {\n                this._setState(2 /* DiffComputed */);\n                this._diffComputationResult = null;\n                this._updateDecorationsRunner.schedule();\n            }\n        });\n    }\n    _cleanViewZonesAndDecorations() {\n        this._originalEditorState.clean(this._originalEditor);\n        this._modifiedEditorState.clean(this._modifiedEditor);\n    }\n    _updateDecorations() {\n        if (!this._originalEditor.getModel() || !this._modifiedEditor.getModel()) {\n            return;\n        }\n        const lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\n        const foreignOriginal = this._originalEditorState.getForeignViewZones(this._originalEditor.getWhitespaces());\n        const foreignModified = this._modifiedEditorState.getForeignViewZones(this._modifiedEditor.getWhitespaces());\n        const diffDecorations = this._strategy.getEditorsDiffDecorations(lineChanges, this._options.ignoreTrimWhitespace, this._options.renderIndicators, foreignOriginal, foreignModified);\n        try {\n            this._currentlyChangingViewZones = true;\n            this._originalEditorState.apply(this._originalEditor, this._originalOverviewRuler, diffDecorations.original, false);\n            this._modifiedEditorState.apply(this._modifiedEditor, this._modifiedOverviewRuler, diffDecorations.modified, true);\n        }\n        finally {\n            this._currentlyChangingViewZones = false;\n        }\n    }\n    _adjustOptionsForSubEditor(options) {\n        const clonedOptions = Object.assign({}, options);\n        clonedOptions.inDiffEditor = true;\n        clonedOptions.automaticLayout = false;\n        // Clone scrollbar options before changing them\n        clonedOptions.scrollbar = Object.assign({}, (clonedOptions.scrollbar || {}));\n        clonedOptions.scrollbar.vertical = 'visible';\n        clonedOptions.folding = false;\n        clonedOptions.codeLens = this._options.diffCodeLens;\n        clonedOptions.fixedOverflowWidgets = true;\n        // clonedOptions.lineDecorationsWidth = '2ch';\n        // Clone minimap options before changing them\n        clonedOptions.minimap = Object.assign({}, (clonedOptions.minimap || {}));\n        clonedOptions.minimap.enabled = false;\n        return clonedOptions;\n    }\n    _adjustOptionsForLeftHandSide(options) {\n        const result = this._adjustOptionsForSubEditor(options);\n        if (!this._options.renderSideBySide) {\n            // never wrap hidden editor\n            result.wordWrapOverride1 = 'off';\n        }\n        else {\n            result.wordWrapOverride1 = this._options.diffWordWrap;\n        }\n        if (options.originalAriaLabel) {\n            result.ariaLabel = options.originalAriaLabel;\n        }\n        result.readOnly = !this._options.originalEditable;\n        result.extraEditorClassName = 'original-in-monaco-diff-editor';\n        return Object.assign(Object.assign({}, result), { dimension: {\n                height: 0,\n                width: 0\n            } });\n    }\n    _adjustOptionsForRightHandSide(options) {\n        const result = this._adjustOptionsForSubEditor(options);\n        if (options.modifiedAriaLabel) {\n            result.ariaLabel = options.modifiedAriaLabel;\n        }\n        result.wordWrapOverride1 = this._options.diffWordWrap;\n        result.revealHorizontalRightPadding = EditorOptions.revealHorizontalRightPadding.defaultValue + DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH;\n        result.scrollbar.verticalHasArrows = false;\n        result.extraEditorClassName = 'modified-in-monaco-diff-editor';\n        return Object.assign(Object.assign({}, result), { dimension: {\n                height: 0,\n                width: 0\n            } });\n    }\n    doLayout() {\n        this._elementSizeObserver.observe();\n        this._doLayout();\n    }\n    _doLayout() {\n        const width = this._elementSizeObserver.getWidth();\n        const height = this._elementSizeObserver.getHeight();\n        const reviewHeight = this._getReviewHeight();\n        const splitPoint = this._strategy.layout();\n        this._originalDomNode.style.width = splitPoint + 'px';\n        this._originalDomNode.style.left = '0px';\n        this._modifiedDomNode.style.width = (width - splitPoint) + 'px';\n        this._modifiedDomNode.style.left = splitPoint + 'px';\n        this._overviewDomElement.style.top = '0px';\n        this._overviewDomElement.style.height = (height - reviewHeight) + 'px';\n        this._overviewDomElement.style.width = DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH + 'px';\n        this._overviewDomElement.style.left = (width - DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH) + 'px';\n        this._overviewViewportDomElement.setWidth(DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH);\n        this._overviewViewportDomElement.setHeight(30);\n        this._originalEditor.layout({ width: splitPoint, height: (height - reviewHeight) });\n        this._modifiedEditor.layout({ width: width - splitPoint - (this._options.renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0), height: (height - reviewHeight) });\n        if (this._originalOverviewRuler || this._modifiedOverviewRuler) {\n            this._layoutOverviewRulers();\n        }\n        this._reviewPane.layout(height - reviewHeight, width, reviewHeight);\n        this._layoutOverviewViewport();\n    }\n    _layoutOverviewViewport() {\n        const layout = this._computeOverviewViewport();\n        if (!layout) {\n            this._overviewViewportDomElement.setTop(0);\n            this._overviewViewportDomElement.setHeight(0);\n        }\n        else {\n            this._overviewViewportDomElement.setTop(layout.top);\n            this._overviewViewportDomElement.setHeight(layout.height);\n        }\n    }\n    _computeOverviewViewport() {\n        const layoutInfo = this._modifiedEditor.getLayoutInfo();\n        if (!layoutInfo) {\n            return null;\n        }\n        const scrollTop = this._modifiedEditor.getScrollTop();\n        const scrollHeight = this._modifiedEditor.getScrollHeight();\n        const computedAvailableSize = Math.max(0, layoutInfo.height);\n        const computedRepresentableSize = Math.max(0, computedAvailableSize - 2 * 0);\n        const computedRatio = scrollHeight > 0 ? (computedRepresentableSize / scrollHeight) : 0;\n        const computedSliderSize = Math.max(0, Math.floor(layoutInfo.height * computedRatio));\n        const computedSliderPosition = Math.floor(scrollTop * computedRatio);\n        return {\n            height: computedSliderSize,\n            top: computedSliderPosition\n        };\n    }\n    _createDataSource() {\n        return {\n            getWidth: () => {\n                return this._elementSizeObserver.getWidth();\n            },\n            getHeight: () => {\n                return (this._elementSizeObserver.getHeight() - this._getReviewHeight());\n            },\n            getOptions: () => {\n                return {\n                    renderOverviewRuler: this._options.renderOverviewRuler\n                };\n            },\n            getContainerDomNode: () => {\n                return this._containerDomElement;\n            },\n            relayoutEditors: () => {\n                this._doLayout();\n            },\n            getOriginalEditor: () => {\n                return this._originalEditor;\n            },\n            getModifiedEditor: () => {\n                return this._modifiedEditor;\n            }\n        };\n    }\n    _setStrategy(newStrategy) {\n        if (this._strategy) {\n            this._strategy.dispose();\n        }\n        this._strategy = newStrategy;\n        newStrategy.applyColors(this._themeService.getColorTheme());\n        if (this._diffComputationResult) {\n            this._updateDecorations();\n        }\n        // Just do a layout, the strategy might need it\n        this._doLayout();\n    }\n    _getLineChangeAtOrBeforeLineNumber(lineNumber, startLineNumberExtractor) {\n        const lineChanges = (this._diffComputationResult ? this._diffComputationResult.changes : []);\n        if (lineChanges.length === 0 || lineNumber < startLineNumberExtractor(lineChanges[0])) {\n            // There are no changes or `lineNumber` is before the first change\n            return null;\n        }\n        let min = 0;\n        let max = lineChanges.length - 1;\n        while (min < max) {\n            const mid = Math.floor((min + max) / 2);\n            const midStart = startLineNumberExtractor(lineChanges[mid]);\n            const midEnd = (mid + 1 <= max ? startLineNumberExtractor(lineChanges[mid + 1]) : 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\n            if (lineNumber < midStart) {\n                max = mid - 1;\n            }\n            else if (lineNumber >= midEnd) {\n                min = mid + 1;\n            }\n            else {\n                // HIT!\n                min = mid;\n                max = mid;\n            }\n        }\n        return lineChanges[min];\n    }\n    _getEquivalentLineForOriginalLineNumber(lineNumber) {\n        const lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, (lineChange) => lineChange.originalStartLineNumber);\n        if (!lineChange) {\n            return lineNumber;\n        }\n        const originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n        const modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n        const lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\n        const lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\n        const delta = lineNumber - originalEquivalentLineNumber;\n        if (delta <= lineChangeOriginalLength) {\n            return modifiedEquivalentLineNumber + Math.min(delta, lineChangeModifiedLength);\n        }\n        return modifiedEquivalentLineNumber + lineChangeModifiedLength - lineChangeOriginalLength + delta;\n    }\n    _getEquivalentLineForModifiedLineNumber(lineNumber) {\n        const lineChange = this._getLineChangeAtOrBeforeLineNumber(lineNumber, (lineChange) => lineChange.modifiedStartLineNumber);\n        if (!lineChange) {\n            return lineNumber;\n        }\n        const originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n        const modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n        const lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? (lineChange.originalEndLineNumber - lineChange.originalStartLineNumber + 1) : 0);\n        const lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? (lineChange.modifiedEndLineNumber - lineChange.modifiedStartLineNumber + 1) : 0);\n        const delta = lineNumber - modifiedEquivalentLineNumber;\n        if (delta <= lineChangeModifiedLength) {\n            return originalEquivalentLineNumber + Math.min(delta, lineChangeOriginalLength);\n        }\n        return originalEquivalentLineNumber + lineChangeOriginalLength - lineChangeModifiedLength + delta;\n    }\n    getDiffLineInformationForOriginal(lineNumber) {\n        if (!this._diffComputationResult) {\n            // Cannot answer that which I don't know\n            return null;\n        }\n        return {\n            equivalentLineNumber: this._getEquivalentLineForOriginalLineNumber(lineNumber)\n        };\n    }\n    getDiffLineInformationForModified(lineNumber) {\n        if (!this._diffComputationResult) {\n            // Cannot answer that which I don't know\n            return null;\n        }\n        return {\n            equivalentLineNumber: this._getEquivalentLineForModifiedLineNumber(lineNumber)\n        };\n    }\n};\nDiffEditorWidget.ONE_OVERVIEW_WIDTH = 15;\nDiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH = 30;\nDiffEditorWidget.UPDATE_DIFF_DECORATIONS_DELAY = 200; // ms\nDiffEditorWidget = __decorate([\n    __param(3, IClipboardService),\n    __param(4, IEditorWorkerService),\n    __param(5, IContextKeyService),\n    __param(6, IInstantiationService),\n    __param(7, ICodeEditorService),\n    __param(8, IThemeService),\n    __param(9, INotificationService),\n    __param(10, IContextMenuService),\n    __param(11, IEditorProgressService)\n], DiffEditorWidget);\nexport { DiffEditorWidget };\nclass DiffEditorWidgetStyle extends Disposable {\n    constructor(dataSource) {\n        super();\n        this._dataSource = dataSource;\n        this._insertColor = null;\n        this._removeColor = null;\n    }\n    applyColors(theme) {\n        const newInsertColor = (theme.getColor(diffInserted) || defaultInsertColor).transparent(2);\n        const newRemoveColor = (theme.getColor(diffRemoved) || defaultRemoveColor).transparent(2);\n        const hasChanges = !newInsertColor.equals(this._insertColor) || !newRemoveColor.equals(this._removeColor);\n        this._insertColor = newInsertColor;\n        this._removeColor = newRemoveColor;\n        return hasChanges;\n    }\n    getEditorsDiffDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators, originalWhitespaces, modifiedWhitespaces) {\n        // Get view zones\n        modifiedWhitespaces = modifiedWhitespaces.sort((a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n        originalWhitespaces = originalWhitespaces.sort((a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n        const zones = this._getViewZones(lineChanges, originalWhitespaces, modifiedWhitespaces, renderIndicators);\n        // Get decorations & overview ruler zones\n        const originalDecorations = this._getOriginalEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators);\n        const modifiedDecorations = this._getModifiedEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators);\n        return {\n            original: {\n                decorations: originalDecorations.decorations,\n                overviewZones: originalDecorations.overviewZones,\n                zones: zones.original\n            },\n            modified: {\n                decorations: modifiedDecorations.decorations,\n                overviewZones: modifiedDecorations.overviewZones,\n                zones: zones.modified\n            }\n        };\n    }\n}\nclass ForeignViewZonesIterator {\n    constructor(source) {\n        this._source = source;\n        this._index = -1;\n        this.current = null;\n        this.advance();\n    }\n    advance() {\n        this._index++;\n        if (this._index < this._source.length) {\n            this.current = this._source[this._index];\n        }\n        else {\n            this.current = null;\n        }\n    }\n}\nclass ViewZonesComputer {\n    constructor(_lineChanges, _originalForeignVZ, _modifiedForeignVZ, _originalEditor, _modifiedEditor) {\n        this._lineChanges = _lineChanges;\n        this._originalForeignVZ = _originalForeignVZ;\n        this._modifiedForeignVZ = _modifiedForeignVZ;\n        this._originalEditor = _originalEditor;\n        this._modifiedEditor = _modifiedEditor;\n    }\n    static _getViewLineCount(editor, startLineNumber, endLineNumber) {\n        const model = editor.getModel();\n        const viewModel = editor._getViewModel();\n        if (model && viewModel) {\n            const viewRange = getViewRange(model, viewModel, startLineNumber, endLineNumber);\n            return (viewRange.endLineNumber - viewRange.startLineNumber + 1);\n        }\n        return (endLineNumber - startLineNumber + 1);\n    }\n    getViewZones() {\n        const originalLineHeight = this._originalEditor.getOption(59 /* lineHeight */);\n        const modifiedLineHeight = this._modifiedEditor.getOption(59 /* lineHeight */);\n        const originalHasWrapping = (this._originalEditor.getOption(132 /* wrappingInfo */).wrappingColumn !== -1);\n        const modifiedHasWrapping = (this._modifiedEditor.getOption(132 /* wrappingInfo */).wrappingColumn !== -1);\n        const hasWrapping = (originalHasWrapping || modifiedHasWrapping);\n        const originalModel = this._originalEditor.getModel();\n        const originalCoordinatesConverter = this._originalEditor._getViewModel().coordinatesConverter;\n        const modifiedCoordinatesConverter = this._modifiedEditor._getViewModel().coordinatesConverter;\n        const result = {\n            original: [],\n            modified: []\n        };\n        let lineChangeModifiedLength = 0;\n        let lineChangeOriginalLength = 0;\n        let originalEquivalentLineNumber = 0;\n        let modifiedEquivalentLineNumber = 0;\n        let originalEndEquivalentLineNumber = 0;\n        let modifiedEndEquivalentLineNumber = 0;\n        const sortMyViewZones = (a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        };\n        const addAndCombineIfPossible = (destination, item) => {\n            if (item.domNode === null && destination.length > 0) {\n                const lastItem = destination[destination.length - 1];\n                if (lastItem.afterLineNumber === item.afterLineNumber && lastItem.domNode === null) {\n                    lastItem.heightInLines += item.heightInLines;\n                    return;\n                }\n            }\n            destination.push(item);\n        };\n        const modifiedForeignVZ = new ForeignViewZonesIterator(this._modifiedForeignVZ);\n        const originalForeignVZ = new ForeignViewZonesIterator(this._originalForeignVZ);\n        let lastOriginalLineNumber = 1;\n        let lastModifiedLineNumber = 1;\n        // In order to include foreign view zones after the last line change, the for loop will iterate once more after the end of the `lineChanges` array\n        for (let i = 0, length = this._lineChanges.length; i <= length; i++) {\n            const lineChange = (i < length ? this._lineChanges[i] : null);\n            if (lineChange !== null) {\n                originalEquivalentLineNumber = lineChange.originalStartLineNumber + (lineChange.originalEndLineNumber > 0 ? -1 : 0);\n                modifiedEquivalentLineNumber = lineChange.modifiedStartLineNumber + (lineChange.modifiedEndLineNumber > 0 ? -1 : 0);\n                lineChangeOriginalLength = (lineChange.originalEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._originalEditor, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber) : 0);\n                lineChangeModifiedLength = (lineChange.modifiedEndLineNumber > 0 ? ViewZonesComputer._getViewLineCount(this._modifiedEditor, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber) : 0);\n                originalEndEquivalentLineNumber = Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n                modifiedEndEquivalentLineNumber = Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n            }\n            else {\n                // Increase to very large value to get the producing tests of foreign view zones running\n                originalEquivalentLineNumber += 10000000 + lineChangeOriginalLength;\n                modifiedEquivalentLineNumber += 10000000 + lineChangeModifiedLength;\n                originalEndEquivalentLineNumber = originalEquivalentLineNumber;\n                modifiedEndEquivalentLineNumber = modifiedEquivalentLineNumber;\n            }\n            // Each step produces view zones, and after producing them, we try to cancel them out, to avoid empty-empty view zone cases\n            let stepOriginal = [];\n            let stepModified = [];\n            // ---------------------------- PRODUCE VIEW ZONES\n            // [PRODUCE] View zones due to line mapping differences (equal lines but wrapped differently)\n            if (hasWrapping) {\n                let count;\n                if (lineChange) {\n                    if (lineChange.originalEndLineNumber > 0) {\n                        count = lineChange.originalStartLineNumber - lastOriginalLineNumber;\n                    }\n                    else {\n                        count = lineChange.modifiedStartLineNumber - lastModifiedLineNumber;\n                    }\n                }\n                else {\n                    count = originalModel.getLineCount() - lastOriginalLineNumber;\n                }\n                for (let i = 0; i < count; i++) {\n                    const originalLineNumber = lastOriginalLineNumber + i;\n                    const modifiedLineNumber = lastModifiedLineNumber + i;\n                    const originalViewLineCount = originalCoordinatesConverter.getModelLineViewLineCount(originalLineNumber);\n                    const modifiedViewLineCount = modifiedCoordinatesConverter.getModelLineViewLineCount(modifiedLineNumber);\n                    if (originalViewLineCount < modifiedViewLineCount) {\n                        stepOriginal.push({\n                            afterLineNumber: originalLineNumber,\n                            heightInLines: modifiedViewLineCount - originalViewLineCount,\n                            domNode: null,\n                            marginDomNode: null\n                        });\n                    }\n                    else if (originalViewLineCount > modifiedViewLineCount) {\n                        stepModified.push({\n                            afterLineNumber: modifiedLineNumber,\n                            heightInLines: originalViewLineCount - modifiedViewLineCount,\n                            domNode: null,\n                            marginDomNode: null\n                        });\n                    }\n                }\n                if (lineChange) {\n                    lastOriginalLineNumber = (lineChange.originalEndLineNumber > 0 ? lineChange.originalEndLineNumber : lineChange.originalStartLineNumber) + 1;\n                    lastModifiedLineNumber = (lineChange.modifiedEndLineNumber > 0 ? lineChange.modifiedEndLineNumber : lineChange.modifiedStartLineNumber) + 1;\n                }\n            }\n            // [PRODUCE] View zone(s) in original-side due to foreign view zone(s) in modified-side\n            while (modifiedForeignVZ.current && modifiedForeignVZ.current.afterLineNumber <= modifiedEndEquivalentLineNumber) {\n                let viewZoneLineNumber;\n                if (modifiedForeignVZ.current.afterLineNumber <= modifiedEquivalentLineNumber) {\n                    viewZoneLineNumber = originalEquivalentLineNumber - modifiedEquivalentLineNumber + modifiedForeignVZ.current.afterLineNumber;\n                }\n                else {\n                    viewZoneLineNumber = originalEndEquivalentLineNumber;\n                }\n                let marginDomNode = null;\n                if (lineChange && lineChange.modifiedStartLineNumber <= modifiedForeignVZ.current.afterLineNumber && modifiedForeignVZ.current.afterLineNumber <= lineChange.modifiedEndLineNumber) {\n                    marginDomNode = this._createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion();\n                }\n                stepOriginal.push({\n                    afterLineNumber: viewZoneLineNumber,\n                    heightInLines: modifiedForeignVZ.current.height / modifiedLineHeight,\n                    domNode: null,\n                    marginDomNode: marginDomNode\n                });\n                modifiedForeignVZ.advance();\n            }\n            // [PRODUCE] View zone(s) in modified-side due to foreign view zone(s) in original-side\n            while (originalForeignVZ.current && originalForeignVZ.current.afterLineNumber <= originalEndEquivalentLineNumber) {\n                let viewZoneLineNumber;\n                if (originalForeignVZ.current.afterLineNumber <= originalEquivalentLineNumber) {\n                    viewZoneLineNumber = modifiedEquivalentLineNumber - originalEquivalentLineNumber + originalForeignVZ.current.afterLineNumber;\n                }\n                else {\n                    viewZoneLineNumber = modifiedEndEquivalentLineNumber;\n                }\n                stepModified.push({\n                    afterLineNumber: viewZoneLineNumber,\n                    heightInLines: originalForeignVZ.current.height / originalLineHeight,\n                    domNode: null\n                });\n                originalForeignVZ.advance();\n            }\n            if (lineChange !== null && isChangeOrInsert(lineChange)) {\n                const r = this._produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\n                if (r) {\n                    stepOriginal.push(r);\n                }\n            }\n            if (lineChange !== null && isChangeOrDelete(lineChange)) {\n                const r = this._produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength);\n                if (r) {\n                    stepModified.push(r);\n                }\n            }\n            // ---------------------------- END PRODUCE VIEW ZONES\n            // ---------------------------- EMIT MINIMAL VIEW ZONES\n            // [CANCEL & EMIT] Try to cancel view zones out\n            let stepOriginalIndex = 0;\n            let stepModifiedIndex = 0;\n            stepOriginal = stepOriginal.sort(sortMyViewZones);\n            stepModified = stepModified.sort(sortMyViewZones);\n            while (stepOriginalIndex < stepOriginal.length && stepModifiedIndex < stepModified.length) {\n                const original = stepOriginal[stepOriginalIndex];\n                const modified = stepModified[stepModifiedIndex];\n                const originalDelta = original.afterLineNumber - originalEquivalentLineNumber;\n                const modifiedDelta = modified.afterLineNumber - modifiedEquivalentLineNumber;\n                if (originalDelta < modifiedDelta) {\n                    addAndCombineIfPossible(result.original, original);\n                    stepOriginalIndex++;\n                }\n                else if (modifiedDelta < originalDelta) {\n                    addAndCombineIfPossible(result.modified, modified);\n                    stepModifiedIndex++;\n                }\n                else if (original.shouldNotShrink) {\n                    addAndCombineIfPossible(result.original, original);\n                    stepOriginalIndex++;\n                }\n                else if (modified.shouldNotShrink) {\n                    addAndCombineIfPossible(result.modified, modified);\n                    stepModifiedIndex++;\n                }\n                else {\n                    if (original.heightInLines >= modified.heightInLines) {\n                        // modified view zone gets removed\n                        original.heightInLines -= modified.heightInLines;\n                        stepModifiedIndex++;\n                    }\n                    else {\n                        // original view zone gets removed\n                        modified.heightInLines -= original.heightInLines;\n                        stepOriginalIndex++;\n                    }\n                }\n            }\n            // [EMIT] Remaining original view zones\n            while (stepOriginalIndex < stepOriginal.length) {\n                addAndCombineIfPossible(result.original, stepOriginal[stepOriginalIndex]);\n                stepOriginalIndex++;\n            }\n            // [EMIT] Remaining modified view zones\n            while (stepModifiedIndex < stepModified.length) {\n                addAndCombineIfPossible(result.modified, stepModified[stepModifiedIndex]);\n                stepModifiedIndex++;\n            }\n            // ---------------------------- END EMIT MINIMAL VIEW ZONES\n        }\n        return {\n            original: ViewZonesComputer._ensureDomNodes(result.original),\n            modified: ViewZonesComputer._ensureDomNodes(result.modified),\n        };\n    }\n    static _ensureDomNodes(zones) {\n        return zones.map((z) => {\n            if (!z.domNode) {\n                z.domNode = createFakeLinesDiv();\n            }\n            return z;\n        });\n    }\n}\nfunction createDecoration(startLineNumber, startColumn, endLineNumber, endColumn, options) {\n    return {\n        range: new Range(startLineNumber, startColumn, endLineNumber, endColumn),\n        options: options\n    };\n}\nconst DECORATIONS = {\n    charDelete: ModelDecorationOptions.register({\n        description: 'diff-editor-char-delete',\n        className: 'char-delete'\n    }),\n    charDeleteWholeLine: ModelDecorationOptions.register({\n        description: 'diff-editor-char-delete-whole-line',\n        className: 'char-delete',\n        isWholeLine: true\n    }),\n    charInsert: ModelDecorationOptions.register({\n        description: 'diff-editor-char-insert',\n        className: 'char-insert'\n    }),\n    charInsertWholeLine: ModelDecorationOptions.register({\n        description: 'diff-editor-char-insert-whole-line',\n        className: 'char-insert',\n        isWholeLine: true\n    }),\n    lineInsert: ModelDecorationOptions.register({\n        description: 'diff-editor-line-insert',\n        className: 'line-insert',\n        marginClassName: 'line-insert',\n        isWholeLine: true\n    }),\n    lineInsertWithSign: ModelDecorationOptions.register({\n        description: 'diff-editor-line-insert-with-sign',\n        className: 'line-insert',\n        linesDecorationsClassName: 'insert-sign ' + ThemeIcon.asClassName(diffInsertIcon),\n        marginClassName: 'line-insert',\n        isWholeLine: true\n    }),\n    lineDelete: ModelDecorationOptions.register({\n        description: 'diff-editor-line-delete',\n        className: 'line-delete',\n        marginClassName: 'line-delete',\n        isWholeLine: true\n    }),\n    lineDeleteWithSign: ModelDecorationOptions.register({\n        description: 'diff-editor-line-delete-with-sign',\n        className: 'line-delete',\n        linesDecorationsClassName: 'delete-sign ' + ThemeIcon.asClassName(diffRemoveIcon),\n        marginClassName: 'line-delete',\n        isWholeLine: true\n    }),\n    lineDeleteMargin: ModelDecorationOptions.register({\n        description: 'diff-editor-line-delete-margin',\n        marginClassName: 'line-delete',\n    })\n};\nclass DiffEditorWidgetSideBySide extends DiffEditorWidgetStyle {\n    constructor(dataSource, enableSplitViewResizing) {\n        super(dataSource);\n        this._disableSash = (enableSplitViewResizing === false);\n        this._sashRatio = null;\n        this._sashPosition = null;\n        this._startSashPosition = null;\n        this._sash = this._register(new Sash(this._dataSource.getContainerDomNode(), this, { orientation: 0 /* VERTICAL */ }));\n        if (this._disableSash) {\n            this._sash.state = 0 /* Disabled */;\n        }\n        this._sash.onDidStart(() => this._onSashDragStart());\n        this._sash.onDidChange((e) => this._onSashDrag(e));\n        this._sash.onDidEnd(() => this._onSashDragEnd());\n        this._sash.onDidReset(() => this._onSashReset());\n    }\n    setEnableSplitViewResizing(enableSplitViewResizing) {\n        const newDisableSash = (enableSplitViewResizing === false);\n        if (this._disableSash !== newDisableSash) {\n            this._disableSash = newDisableSash;\n            this._sash.state = this._disableSash ? 0 /* Disabled */ : 3 /* Enabled */;\n        }\n    }\n    layout(sashRatio = this._sashRatio) {\n        const w = this._dataSource.getWidth();\n        const contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\n        let sashPosition = Math.floor((sashRatio || 0.5) * contentWidth);\n        const midPoint = Math.floor(0.5 * contentWidth);\n        sashPosition = this._disableSash ? midPoint : sashPosition || midPoint;\n        if (contentWidth > DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH * 2) {\n            if (sashPosition < DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\n                sashPosition = DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\n            }\n            if (sashPosition > contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH) {\n                sashPosition = contentWidth - DiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH;\n            }\n        }\n        else {\n            sashPosition = midPoint;\n        }\n        if (this._sashPosition !== sashPosition) {\n            this._sashPosition = sashPosition;\n            this._sash.layout();\n        }\n        return this._sashPosition;\n    }\n    _onSashDragStart() {\n        this._startSashPosition = this._sashPosition;\n    }\n    _onSashDrag(e) {\n        const w = this._dataSource.getWidth();\n        const contentWidth = w - (this._dataSource.getOptions().renderOverviewRuler ? DiffEditorWidget.ENTIRE_DIFF_OVERVIEW_WIDTH : 0);\n        const sashPosition = this.layout((this._startSashPosition + (e.currentX - e.startX)) / contentWidth);\n        this._sashRatio = sashPosition / contentWidth;\n        this._dataSource.relayoutEditors();\n    }\n    _onSashDragEnd() {\n        this._sash.layout();\n    }\n    _onSashReset() {\n        this._sashRatio = 0.5;\n        this._dataSource.relayoutEditors();\n        this._sash.layout();\n    }\n    getVerticalSashTop(sash) {\n        return 0;\n    }\n    getVerticalSashLeft(sash) {\n        return this._sashPosition;\n    }\n    getVerticalSashHeight(sash) {\n        return this._dataSource.getHeight();\n    }\n    _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ) {\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const c = new SideBySideViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n        return c.getViewZones();\n    }\n    _getOriginalEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const overviewZoneColor = String(this._removeColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const originalModel = originalEditor.getModel();\n        const originalViewModel = originalEditor._getViewModel();\n        for (const lineChange of lineChanges) {\n            if (isChangeOrDelete(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\n                    options: (renderIndicators ? DECORATIONS.lineDeleteWithSign : DECORATIONS.lineDelete)\n                });\n                if (!isChangeOrInsert(lineChange) || !lineChange.charChanges) {\n                    result.decorations.push(createDecoration(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charDeleteWholeLine));\n                }\n                const viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (const charChange of lineChange.charChanges) {\n                        if (isChangeOrDelete(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (let lineNumber = charChange.originalStartLineNumber; lineNumber <= charChange.originalEndLineNumber; lineNumber++) {\n                                    let startColumn;\n                                    let endColumn;\n                                    if (lineNumber === charChange.originalStartLineNumber) {\n                                        startColumn = charChange.originalStartColumn;\n                                    }\n                                    else {\n                                        startColumn = originalModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.originalEndLineNumber) {\n                                        endColumn = charChange.originalEndColumn;\n                                    }\n                                    else {\n                                        endColumn = originalModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charDelete));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn, DECORATIONS.charDelete));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n    _getModifiedEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const overviewZoneColor = String(this._insertColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const modifiedModel = modifiedEditor.getModel();\n        const modifiedViewModel = modifiedEditor._getViewModel();\n        for (const lineChange of lineChanges) {\n            if (isChangeOrInsert(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\n                    options: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\n                });\n                if (!isChangeOrDelete(lineChange) || !lineChange.charChanges) {\n                    result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charInsertWholeLine));\n                }\n                const viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (const charChange of lineChange.charChanges) {\n                        if (isChangeOrInsert(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\n                                    let startColumn;\n                                    let endColumn;\n                                    if (lineNumber === charChange.modifiedStartLineNumber) {\n                                        startColumn = charChange.modifiedStartColumn;\n                                    }\n                                    else {\n                                        startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.modifiedEndLineNumber) {\n                                        endColumn = charChange.modifiedEndColumn;\n                                    }\n                                    else {\n                                        endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}\nDiffEditorWidgetSideBySide.MINIMUM_EDITOR_WIDTH = 100;\nclass SideBySideViewZonesComputer extends ViewZonesComputer {\n    constructor(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor) {\n        super(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n    }\n    _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\n        return null;\n    }\n    _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        if (lineChangeModifiedLength > lineChangeOriginalLength) {\n            return {\n                afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\n                heightInLines: (lineChangeModifiedLength - lineChangeOriginalLength),\n                domNode: null\n            };\n        }\n        return null;\n    }\n    _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        if (lineChangeOriginalLength > lineChangeModifiedLength) {\n            return {\n                afterLineNumber: Math.max(lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber),\n                heightInLines: (lineChangeOriginalLength - lineChangeModifiedLength),\n                domNode: null\n            };\n        }\n        return null;\n    }\n}\nclass DiffEditorWidgetInline extends DiffEditorWidgetStyle {\n    constructor(dataSource, enableSplitViewResizing) {\n        super(dataSource);\n        this._decorationsLeft = dataSource.getOriginalEditor().getLayoutInfo().decorationsLeft;\n        this._register(dataSource.getOriginalEditor().onDidLayoutChange((layoutInfo) => {\n            if (this._decorationsLeft !== layoutInfo.decorationsLeft) {\n                this._decorationsLeft = layoutInfo.decorationsLeft;\n                dataSource.relayoutEditors();\n            }\n        }));\n    }\n    setEnableSplitViewResizing(enableSplitViewResizing) {\n        // Nothing to do..\n    }\n    _getViewZones(lineChanges, originalForeignVZ, modifiedForeignVZ, renderIndicators) {\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const computer = new InlineViewZonesComputer(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators);\n        return computer.getViewZones();\n    }\n    _getOriginalEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\n        const overviewZoneColor = String(this._removeColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const originalEditor = this._dataSource.getOriginalEditor();\n        const originalModel = originalEditor.getModel();\n        const originalViewModel = originalEditor._getViewModel();\n        for (const lineChange of lineChanges) {\n            // Add overview zones in the overview ruler\n            if (isChangeOrDelete(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.originalStartLineNumber, 1, lineChange.originalEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\n                    options: DECORATIONS.lineDeleteMargin\n                });\n                const viewRange = getViewRange(originalModel, originalViewModel, lineChange.originalStartLineNumber, lineChange.originalEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\n            }\n        }\n        return result;\n    }\n    _getModifiedEditorDecorations(lineChanges, ignoreTrimWhitespace, renderIndicators) {\n        const modifiedEditor = this._dataSource.getModifiedEditor();\n        const overviewZoneColor = String(this._insertColor);\n        const result = {\n            decorations: [],\n            overviewZones: []\n        };\n        const modifiedModel = modifiedEditor.getModel();\n        const modifiedViewModel = modifiedEditor._getViewModel();\n        for (const lineChange of lineChanges) {\n            // Add decorations & overview zones\n            if (isChangeOrInsert(lineChange)) {\n                result.decorations.push({\n                    range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\n                    options: (renderIndicators ? DECORATIONS.lineInsertWithSign : DECORATIONS.lineInsert)\n                });\n                const viewRange = getViewRange(modifiedModel, modifiedViewModel, lineChange.modifiedStartLineNumber, lineChange.modifiedEndLineNumber);\n                result.overviewZones.push(new OverviewRulerZone(viewRange.startLineNumber, viewRange.endLineNumber, overviewZoneColor));\n                if (lineChange.charChanges) {\n                    for (const charChange of lineChange.charChanges) {\n                        if (isChangeOrInsert(charChange)) {\n                            if (ignoreTrimWhitespace) {\n                                for (let lineNumber = charChange.modifiedStartLineNumber; lineNumber <= charChange.modifiedEndLineNumber; lineNumber++) {\n                                    let startColumn;\n                                    let endColumn;\n                                    if (lineNumber === charChange.modifiedStartLineNumber) {\n                                        startColumn = charChange.modifiedStartColumn;\n                                    }\n                                    else {\n                                        startColumn = modifiedModel.getLineFirstNonWhitespaceColumn(lineNumber);\n                                    }\n                                    if (lineNumber === charChange.modifiedEndLineNumber) {\n                                        endColumn = charChange.modifiedEndColumn;\n                                    }\n                                    else {\n                                        endColumn = modifiedModel.getLineLastNonWhitespaceColumn(lineNumber);\n                                    }\n                                    result.decorations.push(createDecoration(lineNumber, startColumn, lineNumber, endColumn, DECORATIONS.charInsert));\n                                }\n                            }\n                            else {\n                                result.decorations.push(createDecoration(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn, DECORATIONS.charInsert));\n                            }\n                        }\n                    }\n                }\n                else {\n                    result.decorations.push(createDecoration(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber, 1073741824 /* MAX_SAFE_SMALL_INTEGER */, DECORATIONS.charInsertWholeLine));\n                }\n            }\n        }\n        return result;\n    }\n    layout() {\n        // An editor should not be smaller than 5px\n        return Math.max(5, this._decorationsLeft);\n    }\n}\nclass InlineViewZonesComputer extends ViewZonesComputer {\n    constructor(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor, renderIndicators) {\n        super(lineChanges, originalForeignVZ, modifiedForeignVZ, originalEditor, modifiedEditor);\n        this._originalModel = originalEditor.getModel();\n        this._renderIndicators = renderIndicators;\n        this._pendingLineChange = [];\n        this._pendingViewZones = [];\n        this._lineBreaksComputer = this._modifiedEditor._getViewModel().createLineBreaksComputer();\n    }\n    getViewZones() {\n        const result = super.getViewZones();\n        this._finalize(result);\n        return result;\n    }\n    _createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion() {\n        const result = document.createElement('div');\n        result.className = 'inline-added-margin-view-zone';\n        return result;\n    }\n    _produceOriginalFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        const marginDomNode = document.createElement('div');\n        marginDomNode.className = 'inline-added-margin-view-zone';\n        return {\n            afterLineNumber: Math.max(lineChange.originalStartLineNumber, lineChange.originalEndLineNumber),\n            heightInLines: lineChangeModifiedLength,\n            domNode: document.createElement('div'),\n            marginDomNode: marginDomNode\n        };\n    }\n    _produceModifiedFromDiff(lineChange, lineChangeOriginalLength, lineChangeModifiedLength) {\n        const domNode = document.createElement('div');\n        domNode.className = `view-lines line-delete ${MOUSE_CURSOR_TEXT_CSS_CLASS_NAME}`;\n        const marginDomNode = document.createElement('div');\n        marginDomNode.className = 'inline-deleted-margin-view-zone';\n        const viewZone = {\n            shouldNotShrink: true,\n            afterLineNumber: (lineChange.modifiedEndLineNumber === 0 ? lineChange.modifiedStartLineNumber : lineChange.modifiedStartLineNumber - 1),\n            heightInLines: lineChangeOriginalLength,\n            minWidthInPx: 0,\n            domNode: domNode,\n            marginDomNode: marginDomNode,\n            diff: {\n                originalStartLineNumber: lineChange.originalStartLineNumber,\n                originalEndLineNumber: lineChange.originalEndLineNumber,\n                modifiedStartLineNumber: lineChange.modifiedStartLineNumber,\n                modifiedEndLineNumber: lineChange.modifiedEndLineNumber,\n                originalModel: this._originalModel,\n                viewLineCounts: null,\n            }\n        };\n        for (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\n            this._lineBreaksComputer.addRequest(this._originalModel.getLineContent(lineNumber), null, null);\n        }\n        this._pendingLineChange.push(lineChange);\n        this._pendingViewZones.push(viewZone);\n        return viewZone;\n    }\n    _finalize(result) {\n        const modifiedEditorOptions = this._modifiedEditor.getOptions();\n        const tabSize = this._modifiedEditor.getModel().getOptions().tabSize;\n        const fontInfo = modifiedEditorOptions.get(44 /* fontInfo */);\n        const disableMonospaceOptimizations = modifiedEditorOptions.get(29 /* disableMonospaceOptimizations */);\n        const typicalHalfwidthCharacterWidth = fontInfo.typicalHalfwidthCharacterWidth;\n        const scrollBeyondLastColumn = modifiedEditorOptions.get(93 /* scrollBeyondLastColumn */);\n        const mightContainNonBasicASCII = this._originalModel.mightContainNonBasicASCII();\n        const mightContainRTL = this._originalModel.mightContainRTL();\n        const lineHeight = modifiedEditorOptions.get(59 /* lineHeight */);\n        const layoutInfo = modifiedEditorOptions.get(131 /* layoutInfo */);\n        const lineDecorationsWidth = layoutInfo.decorationsWidth;\n        const stopRenderingLineAfter = modifiedEditorOptions.get(105 /* stopRenderingLineAfter */);\n        const renderWhitespace = modifiedEditorOptions.get(88 /* renderWhitespace */);\n        const renderControlCharacters = modifiedEditorOptions.get(83 /* renderControlCharacters */);\n        const fontLigatures = modifiedEditorOptions.get(45 /* fontLigatures */);\n        const lineBreaks = this._lineBreaksComputer.finalize();\n        let lineBreakIndex = 0;\n        for (let i = 0; i < this._pendingLineChange.length; i++) {\n            const lineChange = this._pendingLineChange[i];\n            const viewZone = this._pendingViewZones[i];\n            const domNode = viewZone.domNode;\n            applyFontInfo(domNode, fontInfo);\n            const marginDomNode = viewZone.marginDomNode;\n            applyFontInfo(marginDomNode, fontInfo);\n            const decorations = [];\n            if (lineChange.charChanges) {\n                for (const charChange of lineChange.charChanges) {\n                    if (isChangeOrDelete(charChange)) {\n                        decorations.push(new InlineDecoration(new Range(charChange.originalStartLineNumber, charChange.originalStartColumn, charChange.originalEndLineNumber, charChange.originalEndColumn), 'char-delete', 0 /* Regular */));\n                    }\n                }\n            }\n            const hasCharChanges = (decorations.length > 0);\n            const sb = createStringBuilder(10000);\n            let maxCharsPerLine = 0;\n            let renderedLineCount = 0;\n            let viewLineCounts = null;\n            for (let lineNumber = lineChange.originalStartLineNumber; lineNumber <= lineChange.originalEndLineNumber; lineNumber++) {\n                const lineIndex = lineNumber - lineChange.originalStartLineNumber;\n                const lineTokens = this._originalModel.getLineTokens(lineNumber);\n                const lineContent = lineTokens.getLineContent();\n                const lineBreakData = lineBreaks[lineBreakIndex++];\n                const actualDecorations = LineDecoration.filter(decorations, lineNumber, 1, lineContent.length + 1);\n                if (lineBreakData) {\n                    let lastBreakOffset = 0;\n                    for (const breakOffset of lineBreakData.breakOffsets) {\n                        const viewLineTokens = lineTokens.sliceAndInflate(lastBreakOffset, breakOffset, 0);\n                        const viewLineContent = lineContent.substring(lastBreakOffset, breakOffset);\n                        maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, viewLineContent, viewLineTokens, LineDecoration.extractWrapped(actualDecorations, lastBreakOffset, breakOffset), hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\n                        lastBreakOffset = breakOffset;\n                    }\n                    if (!viewLineCounts) {\n                        viewLineCounts = [];\n                    }\n                    // make sure all lines before this one have an entry in `viewLineCounts`\n                    while (viewLineCounts.length < lineIndex) {\n                        viewLineCounts[viewLineCounts.length] = 1;\n                    }\n                    viewLineCounts[lineIndex] = lineBreakData.breakOffsets.length;\n                    viewZone.heightInLines += (lineBreakData.breakOffsets.length - 1);\n                    const marginDomNode2 = document.createElement('div');\n                    marginDomNode2.className = 'line-delete';\n                    result.original.push({\n                        afterLineNumber: lineNumber,\n                        afterColumn: 0,\n                        heightInLines: lineBreakData.breakOffsets.length - 1,\n                        domNode: createFakeLinesDiv(),\n                        marginDomNode: marginDomNode2\n                    });\n                }\n                else {\n                    maxCharsPerLine = Math.max(maxCharsPerLine, this._renderOriginalLine(renderedLineCount++, lineContent, lineTokens, actualDecorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode));\n                }\n            }\n            maxCharsPerLine += scrollBeyondLastColumn;\n            const html = sb.build();\n            const trustedhtml = ttPolicy ? ttPolicy.createHTML(html) : html;\n            domNode.innerHTML = trustedhtml;\n            viewZone.minWidthInPx = (maxCharsPerLine * typicalHalfwidthCharacterWidth);\n            if (viewLineCounts) {\n                // make sure all lines have an entry in `viewLineCounts`\n                const cnt = lineChange.originalEndLineNumber - lineChange.originalStartLineNumber;\n                while (viewLineCounts.length <= cnt) {\n                    viewLineCounts[viewLineCounts.length] = 1;\n                }\n            }\n            viewZone.diff.viewLineCounts = viewLineCounts;\n        }\n        result.original.sort((a, b) => {\n            return a.afterLineNumber - b.afterLineNumber;\n        });\n    }\n    _renderOriginalLine(renderedLineCount, lineContent, lineTokens, decorations, hasCharChanges, mightContainNonBasicASCII, mightContainRTL, fontInfo, disableMonospaceOptimizations, lineHeight, lineDecorationsWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, tabSize, sb, marginDomNode) {\n        sb.appendASCIIString('<div class=\"view-line');\n        if (!hasCharChanges) {\n            // No char changes\n            sb.appendASCIIString(' char-delete');\n        }\n        sb.appendASCIIString('\" style=\"top:');\n        sb.appendASCIIString(String(renderedLineCount * lineHeight));\n        sb.appendASCIIString('px;width:1000000px;\">');\n        const isBasicASCII = ViewLineRenderingData.isBasicASCII(lineContent, mightContainNonBasicASCII);\n        const containsRTL = ViewLineRenderingData.containsRTL(lineContent, isBasicASCII, mightContainRTL);\n        const output = renderViewLine(new RenderLineInput((fontInfo.isMonospace && !disableMonospaceOptimizations), fontInfo.canUseHalfwidthRightwardsArrow, lineContent, false, isBasicASCII, containsRTL, 0, lineTokens, decorations, tabSize, 0, fontInfo.spaceWidth, fontInfo.middotWidth, fontInfo.wsmiddotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures !== EditorFontLigatures.OFF, null // Send no selections, original line cannot be selected\n        ), sb);\n        sb.appendASCIIString('</div>');\n        if (this._renderIndicators) {\n            const marginElement = document.createElement('div');\n            marginElement.className = `delete-sign ${ThemeIcon.asClassName(diffRemoveIcon)}`;\n            marginElement.setAttribute('style', `position:absolute;top:${renderedLineCount * lineHeight}px;width:${lineDecorationsWidth}px;height:${lineHeight}px;right:0;`);\n            marginDomNode.appendChild(marginElement);\n        }\n        return output.characterMapping.getAbsoluteOffset(output.characterMapping.length);\n    }\n}\nfunction validateDiffWordWrap(value, defaultValue) {\n    return validateStringSetOption(value, defaultValue, ['off', 'on', 'inherit']);\n}\nfunction isChangeOrInsert(lineChange) {\n    return lineChange.modifiedEndLineNumber > 0;\n}\nfunction isChangeOrDelete(lineChange) {\n    return lineChange.originalEndLineNumber > 0;\n}\nfunction createFakeLinesDiv() {\n    const r = document.createElement('div');\n    r.className = 'diagonal-fill';\n    return r;\n}\nfunction getViewRange(model, viewModel, startLineNumber, endLineNumber) {\n    const lineCount = model.getLineCount();\n    startLineNumber = Math.min(lineCount, Math.max(1, startLineNumber));\n    endLineNumber = Math.min(lineCount, Math.max(1, endLineNumber));\n    return viewModel.coordinatesConverter.convertModelRangeToViewRange(new Range(startLineNumber, model.getLineMinColumn(startLineNumber), endLineNumber, model.getLineMaxColumn(endLineNumber)));\n}\nfunction validateDiffEditorOptions(options, defaults) {\n    return {\n        enableSplitViewResizing: validateBooleanOption(options.enableSplitViewResizing, defaults.enableSplitViewResizing),\n        renderSideBySide: validateBooleanOption(options.renderSideBySide, defaults.renderSideBySide),\n        maxComputationTime: clampedInt(options.maxComputationTime, defaults.maxComputationTime, 0, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\n        maxFileSize: clampedInt(options.maxFileSize, defaults.maxFileSize, 0, 1073741824 /* MAX_SAFE_SMALL_INTEGER */),\n        ignoreTrimWhitespace: validateBooleanOption(options.ignoreTrimWhitespace, defaults.ignoreTrimWhitespace),\n        renderIndicators: validateBooleanOption(options.renderIndicators, defaults.renderIndicators),\n        originalEditable: validateBooleanOption(options.originalEditable, defaults.originalEditable),\n        diffCodeLens: validateBooleanOption(options.diffCodeLens, defaults.diffCodeLens),\n        renderOverviewRuler: validateBooleanOption(options.renderOverviewRuler, defaults.renderOverviewRuler),\n        diffWordWrap: validateDiffWordWrap(options.diffWordWrap, defaults.diffWordWrap),\n    };\n}\nfunction changedDiffEditorOptions(a, b) {\n    return {\n        enableSplitViewResizing: (a.enableSplitViewResizing !== b.enableSplitViewResizing),\n        renderSideBySide: (a.renderSideBySide !== b.renderSideBySide),\n        maxComputationTime: (a.maxComputationTime !== b.maxComputationTime),\n        maxFileSize: (a.maxFileSize !== b.maxFileSize),\n        ignoreTrimWhitespace: (a.ignoreTrimWhitespace !== b.ignoreTrimWhitespace),\n        renderIndicators: (a.renderIndicators !== b.renderIndicators),\n        originalEditable: (a.originalEditable !== b.originalEditable),\n        diffCodeLens: (a.diffCodeLens !== b.diffCodeLens),\n        renderOverviewRuler: (a.renderOverviewRuler !== b.renderOverviewRuler),\n        diffWordWrap: (a.diffWordWrap !== b.diffWordWrap),\n    };\n}\nregisterThemingParticipant((theme, collector) => {\n    const added = theme.getColor(diffInserted);\n    if (added) {\n        collector.addRule(`.monaco-editor .line-insert, .monaco-editor .char-insert { background-color: ${added}; }`);\n        collector.addRule(`.monaco-diff-editor .line-insert, .monaco-diff-editor .char-insert { background-color: ${added}; }`);\n        collector.addRule(`.monaco-editor .inline-added-margin-view-zone { background-color: ${added}; }`);\n    }\n    const removed = theme.getColor(diffRemoved);\n    if (removed) {\n        collector.addRule(`.monaco-editor .line-delete, .monaco-editor .char-delete { background-color: ${removed}; }`);\n        collector.addRule(`.monaco-diff-editor .line-delete, .monaco-diff-editor .char-delete { background-color: ${removed}; }`);\n        collector.addRule(`.monaco-editor .inline-deleted-margin-view-zone { background-color: ${removed}; }`);\n    }\n    const addedOutline = theme.getColor(diffInsertedOutline);\n    if (addedOutline) {\n        collector.addRule(`.monaco-editor .line-insert, .monaco-editor .char-insert { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${addedOutline}; }`);\n    }\n    const removedOutline = theme.getColor(diffRemovedOutline);\n    if (removedOutline) {\n        collector.addRule(`.monaco-editor .line-delete, .monaco-editor .char-delete { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${removedOutline}; }`);\n    }\n    const shadow = theme.getColor(scrollbarShadow);\n    if (shadow) {\n        collector.addRule(`.monaco-diff-editor.side-by-side .editor.modified { box-shadow: -6px 0 5px -5px ${shadow}; }`);\n    }\n    const border = theme.getColor(diffBorder);\n    if (border) {\n        collector.addRule(`.monaco-diff-editor.side-by-side .editor.modified { border-left: 1px solid ${border}; }`);\n    }\n    const scrollbarSliderBackgroundColor = theme.getColor(scrollbarSliderBackground);\n    if (scrollbarSliderBackgroundColor) {\n        collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport {\n\t\t\t\tbackground: ${scrollbarSliderBackgroundColor};\n\t\t\t}\n\t\t`);\n    }\n    const scrollbarSliderHoverBackgroundColor = theme.getColor(scrollbarSliderHoverBackground);\n    if (scrollbarSliderHoverBackgroundColor) {\n        collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport:hover {\n\t\t\t\tbackground: ${scrollbarSliderHoverBackgroundColor};\n\t\t\t}\n\t\t`);\n    }\n    const scrollbarSliderActiveBackgroundColor = theme.getColor(scrollbarSliderActiveBackground);\n    if (scrollbarSliderActiveBackgroundColor) {\n        collector.addRule(`\n\t\t\t.monaco-diff-editor .diffViewport:active {\n\t\t\t\tbackground: ${scrollbarSliderActiveBackgroundColor};\n\t\t\t}\n\t\t`);\n    }\n    const diffDiagonalFillColor = theme.getColor(diffDiagonalFill);\n    collector.addRule(`\n\t.monaco-editor .diagonal-fill {\n\t\tbackground-image: linear-gradient(\n\t\t\t-45deg,\n\t\t\t${diffDiagonalFillColor} 12.5%,\n\t\t\t#0000 12.5%, #0000 50%,\n\t\t\t${diffDiagonalFillColor} 50%, ${diffDiagonalFillColor} 62.5%,\n\t\t\t#0000 62.5%, #0000 100%\n\t\t);\n\t\tbackground-size: 8px 8px;\n\t}\n\t`);\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as nls from '../../../nls.js';\nimport * as dom from '../../../base/browser/dom.js';\nimport { Action } from '../../../base/common/actions.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport { Range } from '../../common/core/range.js';\nimport { Codicon } from '../../../base/common/codicons.js';\nexport class InlineDiffMargin extends Disposable {\n    constructor(_viewZoneId, _marginDomNode, editor, diff, _contextMenuService, _clipboardService) {\n        super();\n        this._viewZoneId = _viewZoneId;\n        this._marginDomNode = _marginDomNode;\n        this.editor = editor;\n        this.diff = diff;\n        this._contextMenuService = _contextMenuService;\n        this._clipboardService = _clipboardService;\n        this._visibility = false;\n        // make sure the diff margin shows above overlay.\n        this._marginDomNode.style.zIndex = '10';\n        this._diffActions = document.createElement('div');\n        this._diffActions.className = Codicon.lightBulb.classNames + ' lightbulb-glyph';\n        this._diffActions.style.position = 'absolute';\n        const lineHeight = editor.getOption(59 /* lineHeight */);\n        const lineFeed = editor.getModel().getEOL();\n        this._diffActions.style.right = '0px';\n        this._diffActions.style.visibility = 'hidden';\n        this._diffActions.style.height = `${lineHeight}px`;\n        this._diffActions.style.lineHeight = `${lineHeight}px`;\n        this._marginDomNode.appendChild(this._diffActions);\n        const actions = [];\n        const isDeletion = diff.modifiedEndLineNumber === 0;\n        // default action\n        actions.push(new Action('diff.clipboard.copyDeletedContent', isDeletion\n            ? (diff.originalEndLineNumber > diff.modifiedStartLineNumber\n                ? nls.localize('diff.clipboard.copyDeletedLinesContent.label', \"Copy deleted lines\")\n                : nls.localize('diff.clipboard.copyDeletedLinesContent.single.label', \"Copy deleted line\"))\n            : (diff.originalEndLineNumber > diff.modifiedStartLineNumber\n                ? nls.localize('diff.clipboard.copyChangedLinesContent.label', \"Copy changed lines\")\n                : nls.localize('diff.clipboard.copyChangedLinesContent.single.label', \"Copy changed line\")), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n            const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber + 1, 1);\n            const deletedText = diff.originalModel.getValueInRange(range);\n            yield this._clipboardService.writeText(deletedText);\n        })));\n        let currentLineNumberOffset = 0;\n        let copyLineAction = undefined;\n        if (diff.originalEndLineNumber > diff.modifiedStartLineNumber) {\n            copyLineAction = new Action('diff.clipboard.copyDeletedLineContent', isDeletion\n                ? nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber)\n                : nls.localize('diff.clipboard.copyChangedLineContent.label', \"Copy changed line ({0})\", diff.originalStartLineNumber), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                const lineContent = diff.originalModel.getLineContent(diff.originalStartLineNumber + currentLineNumberOffset);\n                if (lineContent === '') {\n                    // empty line\n                    const eof = diff.originalModel.getEndOfLineSequence();\n                    yield this._clipboardService.writeText(eof === 0 /* LF */ ? '\\n' : '\\r\\n');\n                }\n                else {\n                    yield this._clipboardService.writeText(lineContent);\n                }\n            }));\n            actions.push(copyLineAction);\n        }\n        const readOnly = editor.getOption(81 /* readOnly */);\n        if (!readOnly) {\n            actions.push(new Action('diff.inline.revertChange', nls.localize('diff.inline.revertChange.label', \"Revert this change\"), undefined, true, () => __awaiter(this, void 0, void 0, function* () {\n                const range = new Range(diff.originalStartLineNumber, 1, diff.originalEndLineNumber, diff.originalModel.getLineMaxColumn(diff.originalEndLineNumber));\n                const deletedText = diff.originalModel.getValueInRange(range);\n                if (diff.modifiedEndLineNumber === 0) {\n                    // deletion only\n                    const column = editor.getModel().getLineMaxColumn(diff.modifiedStartLineNumber);\n                    editor.executeEdits('diffEditor', [\n                        {\n                            range: new Range(diff.modifiedStartLineNumber, column, diff.modifiedStartLineNumber, column),\n                            text: lineFeed + deletedText\n                        }\n                    ]);\n                }\n                else {\n                    const column = editor.getModel().getLineMaxColumn(diff.modifiedEndLineNumber);\n                    editor.executeEdits('diffEditor', [\n                        {\n                            range: new Range(diff.modifiedStartLineNumber, 1, diff.modifiedEndLineNumber, column),\n                            text: deletedText\n                        }\n                    ]);\n                }\n            })));\n        }\n        const showContextMenu = (x, y) => {\n            this._contextMenuService.showContextMenu({\n                getAnchor: () => {\n                    return {\n                        x,\n                        y\n                    };\n                },\n                getActions: () => {\n                    if (copyLineAction) {\n                        copyLineAction.label =\n                            isDeletion\n                                ? nls.localize('diff.clipboard.copyDeletedLineContent.label', \"Copy deleted line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset)\n                                : nls.localize('diff.clipboard.copyChangedLineContent.label', \"Copy changed line ({0})\", diff.originalStartLineNumber + currentLineNumberOffset);\n                    }\n                    return actions;\n                },\n                autoSelectFirstItem: true\n            });\n        };\n        this._register(dom.addStandardDisposableListener(this._diffActions, 'mousedown', e => {\n            const { top, height } = dom.getDomNodePagePosition(this._diffActions);\n            const pad = Math.floor(lineHeight / 3);\n            e.preventDefault();\n            showContextMenu(e.posx, top + height + pad);\n        }));\n        this._register(editor.onMouseMove((e) => {\n            if (e.target.type === 8 /* CONTENT_VIEW_ZONE */ || e.target.type === 5 /* GUTTER_VIEW_ZONE */) {\n                const viewZoneId = e.target.detail.viewZoneId;\n                if (viewZoneId === this._viewZoneId) {\n                    this.visibility = true;\n                    currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\n                }\n                else {\n                    this.visibility = false;\n                }\n            }\n            else {\n                this.visibility = false;\n            }\n        }));\n        this._register(editor.onMouseDown((e) => {\n            if (!e.event.rightButton) {\n                return;\n            }\n            if (e.target.type === 8 /* CONTENT_VIEW_ZONE */ || e.target.type === 5 /* GUTTER_VIEW_ZONE */) {\n                const viewZoneId = e.target.detail.viewZoneId;\n                if (viewZoneId === this._viewZoneId) {\n                    e.event.preventDefault();\n                    currentLineNumberOffset = this._updateLightBulbPosition(this._marginDomNode, e.event.browserEvent.y, lineHeight);\n                    showContextMenu(e.event.posx, e.event.posy + lineHeight);\n                }\n            }\n        }));\n    }\n    get visibility() {\n        return this._visibility;\n    }\n    set visibility(_visibility) {\n        if (this._visibility !== _visibility) {\n            this._visibility = _visibility;\n            if (_visibility) {\n                this._diffActions.style.visibility = 'visible';\n            }\n            else {\n                this._diffActions.style.visibility = 'hidden';\n            }\n        }\n    }\n    _updateLightBulbPosition(marginDomNode, y, lineHeight) {\n        const { top } = dom.getDomNodePagePosition(marginDomNode);\n        const offset = y - top;\n        const lineNumberOffset = Math.floor(offset / lineHeight);\n        const newTop = lineNumberOffset * lineHeight;\n        this._diffActions.style.top = `${newTop}px`;\n        if (this.diff.viewLineCounts) {\n            let acc = 0;\n            for (let i = 0; i < this.diff.viewLineCounts.length; i++) {\n                acc += this.diff.viewLineCounts[i];\n                if (lineNumberOffset < acc) {\n                    return i;\n                }\n            }\n        }\n        return lineNumberOffset;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as assert from '../../../base/common/assert.js';\nimport { Emitter } from '../../../base/common/event.js';\nimport { Disposable } from '../../../base/common/lifecycle.js';\nimport * as objects from '../../../base/common/objects.js';\nimport { Range } from '../../common/core/range.js';\nconst defaultOptions = {\n    followsCaret: true,\n    ignoreCharChanges: true,\n    alwaysRevealFirst: true\n};\n/**\n * Create a new diff navigator for the provided diff editor.\n */\nexport class DiffNavigator extends Disposable {\n    constructor(editor, options = {}) {\n        super();\n        this._onDidUpdate = this._register(new Emitter());\n        this._editor = editor;\n        this._options = objects.mixin(options, defaultOptions, false);\n        this.disposed = false;\n        this.nextIdx = -1;\n        this.ranges = [];\n        this.ignoreSelectionChange = false;\n        this.revealFirst = Boolean(this._options.alwaysRevealFirst);\n        // hook up to diff editor for diff, disposal, and caret move\n        this._register(this._editor.onDidDispose(() => this.dispose()));\n        this._register(this._editor.onDidUpdateDiff(() => this._onDiffUpdated()));\n        if (this._options.followsCaret) {\n            this._register(this._editor.getModifiedEditor().onDidChangeCursorPosition((e) => {\n                if (this.ignoreSelectionChange) {\n                    return;\n                }\n                this.nextIdx = -1;\n            }));\n        }\n        if (this._options.alwaysRevealFirst) {\n            this._register(this._editor.getModifiedEditor().onDidChangeModel((e) => {\n                this.revealFirst = true;\n            }));\n        }\n        // init things\n        this._init();\n    }\n    _init() {\n        const changes = this._editor.getLineChanges();\n        if (!changes) {\n            return;\n        }\n    }\n    _onDiffUpdated() {\n        this._init();\n        this._compute(this._editor.getLineChanges());\n        if (this.revealFirst) {\n            // Only reveal first on first non-null changes\n            if (this._editor.getLineChanges() !== null) {\n                this.revealFirst = false;\n                this.nextIdx = -1;\n                this.next(1 /* Immediate */);\n            }\n        }\n    }\n    _compute(lineChanges) {\n        // new ranges\n        this.ranges = [];\n        if (lineChanges) {\n            // create ranges from changes\n            lineChanges.forEach((lineChange) => {\n                if (!this._options.ignoreCharChanges && lineChange.charChanges) {\n                    lineChange.charChanges.forEach((charChange) => {\n                        this.ranges.push({\n                            rhs: true,\n                            range: new Range(charChange.modifiedStartLineNumber, charChange.modifiedStartColumn, charChange.modifiedEndLineNumber, charChange.modifiedEndColumn)\n                        });\n                    });\n                }\n                else {\n                    if (lineChange.modifiedEndLineNumber === 0) {\n                        // a deletion\n                        this.ranges.push({\n                            rhs: true,\n                            range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedStartLineNumber + 1, 1)\n                        });\n                    }\n                    else {\n                        // an insertion or modification\n                        this.ranges.push({\n                            rhs: true,\n                            range: new Range(lineChange.modifiedStartLineNumber, 1, lineChange.modifiedEndLineNumber + 1, 1)\n                        });\n                    }\n                }\n            });\n        }\n        // sort\n        this.ranges.sort((left, right) => Range.compareRangesUsingStarts(left.range, right.range));\n        this._onDidUpdate.fire(this);\n    }\n    _initIdx(fwd) {\n        let found = false;\n        const position = this._editor.getPosition();\n        if (!position) {\n            this.nextIdx = 0;\n            return;\n        }\n        for (let i = 0, len = this.ranges.length; i < len && !found; i++) {\n            const range = this.ranges[i].range;\n            if (position.isBeforeOrEqual(range.getStartPosition())) {\n                this.nextIdx = i + (fwd ? 0 : -1);\n                found = true;\n            }\n        }\n        if (!found) {\n            // after the last change\n            this.nextIdx = fwd ? 0 : this.ranges.length - 1;\n        }\n        if (this.nextIdx < 0) {\n            this.nextIdx = this.ranges.length - 1;\n        }\n    }\n    _move(fwd, scrollType) {\n        assert.ok(!this.disposed, 'Illegal State - diff navigator has been disposed');\n        if (!this.canNavigate()) {\n            return;\n        }\n        if (this.nextIdx === -1) {\n            this._initIdx(fwd);\n        }\n        else if (fwd) {\n            this.nextIdx += 1;\n            if (this.nextIdx >= this.ranges.length) {\n                this.nextIdx = 0;\n            }\n        }\n        else {\n            this.nextIdx -= 1;\n            if (this.nextIdx < 0) {\n                this.nextIdx = this.ranges.length - 1;\n            }\n        }\n        const info = this.ranges[this.nextIdx];\n        this.ignoreSelectionChange = true;\n        try {\n            const pos = info.range.getStartPosition();\n            this._editor.setPosition(pos);\n            this._editor.revealRangeInCenter(info.range, scrollType);\n        }\n        finally {\n            this.ignoreSelectionChange = false;\n        }\n    }\n    canNavigate() {\n        return this.ranges && this.ranges.length > 0;\n    }\n    next(scrollType = 0 /* Smooth */) {\n        this._move(true, scrollType);\n    }\n    previous(scrollType = 0 /* Smooth */) {\n        this._move(false, scrollType);\n    }\n    dispose() {\n        super.dispose();\n        this.ranges = [];\n        this.disposed = true;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nimport * as objects from '../../../base/common/objects.js';\nimport { ICodeEditorService } from '../services/codeEditorService.js';\nimport { CodeEditorWidget } from './codeEditorWidget.js';\nimport { ICommandService } from '../../../platform/commands/common/commands.js';\nimport { IContextKeyService } from '../../../platform/contextkey/common/contextkey.js';\nimport { IInstantiationService } from '../../../platform/instantiation/common/instantiation.js';\nimport { INotificationService } from '../../../platform/notification/common/notification.js';\nimport { IThemeService } from '../../../platform/theme/common/themeService.js';\nimport { IAccessibilityService } from '../../../platform/accessibility/common/accessibility.js';\nimport { ILanguageConfigurationService } from '../../common/languages/languageConfigurationRegistry.js';\nlet EmbeddedCodeEditorWidget = class EmbeddedCodeEditorWidget extends CodeEditorWidget {\n    constructor(domElement, options, parentEditor, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService) {\n        super(domElement, Object.assign(Object.assign({}, parentEditor.getRawOptions()), { overflowWidgetsDomNode: parentEditor.getOverflowWidgetsDomNode() }), {}, instantiationService, codeEditorService, commandService, contextKeyService, themeService, notificationService, accessibilityService, languageConfigurationService);\n        this._parentEditor = parentEditor;\n        this._overwriteOptions = options;\n        // Overwrite parent's options\n        super.updateOptions(this._overwriteOptions);\n        this._register(parentEditor.onDidChangeConfiguration((e) => this._onParentConfigurationChanged(e)));\n    }\n    getParentEditor() {\n        return this._parentEditor;\n    }\n    _onParentConfigurationChanged(e) {\n        super.updateOptions(this._parentEditor.getRawOptions());\n        super.updateOptions(this._overwriteOptions);\n    }\n    updateOptions(newOptions) {\n        objects.mixin(this._overwriteOptions, newOptions, true);\n        super.updateOptions(this._overwriteOptions);\n    }\n};\nEmbeddedCodeEditorWidget = __decorate([\n    __param(3, IInstantiationService),\n    __param(4, ICodeEditorService),\n    __param(5, ICommandService),\n    __param(6, IContextKeyService),\n    __param(7, IThemeService),\n    __param(8, INotificationService),\n    __param(9, IAccessibilityService),\n    __param(10, ILanguageConfigurationService)\n], EmbeddedCodeEditorWidget);\nexport { EmbeddedCodeEditorWidget };\n"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","EDITOR_ID","ModelData","model","viewModel","view","hasRealView","listenersToRemove","this","dispose","onBeforeDetached","CodeEditorWidget","domElement","_options","codeEditorWidgetOptions","instantiationService","codeEditorService","commandService","contextKeyService","themeService","notificationService","accessibilityService","languageConfigurationService","_onDidDispose","_register","Emitter","onDidDispose","event","_onDidChangeModelContent","onDidChangeModelContent","_onDidChangeModelLanguage","onDidChangeModelLanguage","_onDidChangeModelLanguageConfiguration","onDidChangeModelLanguageConfiguration","_onDidChangeModelOptions","onDidChangeModelOptions","_onDidChangeModelDecorations","onDidChangeModelDecorations","_onDidChangeConfiguration","onDidChangeConfiguration","_onDidChangeModel","onDidChangeModel","_onDidChangeCursorPosition","onDidChangeCursorPosition","_onDidChangeCursorSelection","onDidChangeCursorSelection","_onDidAttemptReadOnlyEdit","onDidAttemptReadOnlyEdit","_onDidLayoutChange","onDidLayoutChange","_editorTextFocus","BooleanEventEmitter","onDidFocusEditorText","onDidChangeToTrue","onDidBlurEditorText","onDidChangeToFalse","_editorWidgetFocus","onDidFocusEditorWidget","onDidBlurEditorWidget","_onWillType","onWillType","_onDidType","onDidType","_onDidCompositionStart","onDidCompositionStart","_onDidCompositionEnd","onDidCompositionEnd","_onDidPaste","onDidPaste","_onMouseUp","onMouseUp","_onMouseDown","onMouseDown","_onMouseDrag","onMouseDrag","_onMouseDrop","onMouseDrop","_onMouseDropCanceled","onMouseDropCanceled","_onContextMenu","onContextMenu","_onMouseMove","onMouseMove","_onMouseLeave","onMouseLeave","_onMouseWheel","onMouseWheel","_onKeyUp","onKeyUp","_onKeyDown","onKeyDown","_onDidContentSizeChange","onDidContentSizeChange","_onDidScrollChange","onDidScrollChange","_onDidChangeViewZones","onDidChangeViewZones","_onDidChangeHiddenAreas","onDidChangeHiddenAreas","_bannerDomNode","contributions","options","assign","_domElement","_overflowWidgetsDomNode","overflowWidgetsDomNode","_id","_decorationTypeKeysToIds","_decorationTypeSubtypes","_telemetryData","telemetryData","_configuration","_createConfiguration","isSimpleWidget","onDidChange","e","fire","hasChanged","layoutInfo","get","_contextKeyService","createScoped","_notificationService","_codeEditorService","_commandService","_themeService","EditorContextKeysManager","EditorModeContext","_instantiationService","createChild","ServiceCollection","IContextKeyService","_modelData","_contributions","_actions","_focusTracker","CodeEditorWidgetFocusTracker","onChange","setValue","hasFocus","_contentWidgets","_overlayWidgets","Array","isArray","EditorExtensionsRegistry","id","onUnexpectedError","Error","contribution","createInstance","ctor","err","forEach","action","internalAction","InternalEditorAction","label","alias","withNullAsUndefined","precondition","invokeFunction","accessor","Promise","resolve","runEditorCommand","addCodeEditor","EditorConfiguration","getEditorType","editorCommon","removeCodeEditor","keys","len","contributionId","_removeDecorationTypes","_postDetachModelCleanup","_detachModel","fn","newOptions","updateOptions","getRawOptions","position","WordOperations","preserveBOM","eolPreference","lineEnding","getValue","newValue","_model","hasTextFocus","detachedModel","_attachModel","hasModel","focus","oldModelUrl","uri","newModelUrl","decorationType","subTypes","subType","_removeDecorationType","getVisibleRanges","getVisibleRangesPlusViewportAboveBelow","viewLayout","getWhitespaces","lineNumber","_getVerticalOffsetForPosition","column","ranges","setHiddenAreas","map","Range","rawPosition","validatePosition","tabSize","getOptions","CursorColumns","getLineContent","getPosition","Position","setSelections","selectionStartLineNumber","selectionStartColumn","positionLineNumber","positionColumn","modelRange","verticalType","revealHorizontal","scrollType","validatedModelRange","validateRange","viewRange","coordinatesConverter","convertModelRangeToViewRange","revealRange","_revealLine","revealType","_sendRevealRange","_revealPosition","getSelection","getSelections","something","isSelection","Selection","isRange","_setSelectionImpl","selection","startLineNumber","startColumn","endLineNumber","endColumn","sel","_revealLines","range","revealVerticalInCenter","_revealRange","source","reason","getContentWidth","getScrollWidth","getCurrentScrollLeft","getContentHeight","getScrollHeight","getCurrentScrollTop","newScrollLeft","setScrollPosition","scrollLeft","newScrollTop","scrollTop","contributionsState","saveViewState","cursorState","saveCursorState","viewState","saveState","s","codeEditorState","restoreCursorState","restoreViewState","reducedState","reduceRestoreState","restoreState","result","push","getActions","filter","isSupported","handlerId","payload","_startComposition","_endComposition","args","_type","text","_compositionType","replaceCharCnt","replacePrevCharCnt","replaceNextCharCnt","positionDelta","_paste","pasteOnNewLine","multicursorText","mode","_cut","getAction","run","then","undefined","_triggerEditorCommand","_triggerCommand","executeCommand","startComposition","endComposition","type","compositionType","startPosition","getStartPosition","paste","endPosition","languageId","cut","command","pushStackElement","popStackElement","edits","endCursorState","cursorStateComputer","executeEdits","commands","executeCommands","callback","changeDecorations","getLineDecorations","filterValidationDecorations","getDecorationsInRange","oldDecorations","newDecorations","deltaDecorations","decorationTypeKey","oldDecorationsIds","hasOwnProperty","cssClassName","createOverviewRuler","domNode","browserEvent","delegateVerticalScrollbarMouseDown","dimension","observeContainer","render","isFocused","widget","widgetData","getId","console","warn","addContentWidget","widgetId","layoutContentWidget","removeContentWidget","addOverlayWidget","layoutOverlayWidget","removeOverlayWidget","change","clientX","clientY","getTargetAtClientPoint","top","getScrollTop","left","getOffsetForColumn","glyphMarginWidth","lineNumbersWidth","decorationsWidth","getScrollLeft","height","forceRedraw","setAriaOptions","applyFontInfo","domNodeHeight","contains","removeChild","setReservedHeight","prepend","setAttribute","getLanguageId","setIsDominatedByLongLines","isDominatedByLongLines","setModelLineCount","getLineCount","onBeforeAttached","ViewModel","DOMLineBreaksComputerFactory","MonospaceLineBreaksComputerFactory","dom","scheduleAtNextAnimationFrame","onDidChangeDecorations","onDidChangeLanguage","onDidChangeLanguageConfiguration","onDidChangeContent","onDidChangeOptions","onWillDispose","setModel","onEvent","kind","reachedMaxCursorCount","nls","CursorsController","positions","selections","e1","secondaryPositions","slice","e2","secondarySelections","modelVersionId","oldSelections","oldModelVersionId","_createView","appendChild","toString","commandDelegate","viewUserInputEvents","ViewUserInputEvents","View","removeAllDecorationsWithOwnerId","removeDomNode","removeAttribute","removeDecorationType","modelData","modelLineNumber","modelColumn","modelPosition","viewPosition","convertModelPositionToViewPosition","getVerticalOffsetForLineNumber","Disposable","IInstantiationService","ICodeEditorService","ICommandService","IThemeService","INotificationService","IAccessibilityService","ILanguageConfigurationService","_onDidChangeToTrue","_onDidChangeToFalse","_value","value","editor","_editor","createKey","_editorSimpleInput","EditorContextKeys","_editorFocus","_textInputFocus","_editorTabMovesFocus","_editorReadonly","_inDiffEditor","_editorColumnSelection","_hasMultipleSelections","_hasNonEmptySelection","_canUndo","_canRedo","_updateFromConfig","_updateFromSelection","_updateFromFocus","_updateFromModel","set","some","isEmpty","reset","hasWidgetFocus","getModel","Boolean","canUndo","canRedo","_langId","_hasCompletionItemProvider","_hasCodeActionsProvider","_hasCodeLensProvider","_hasDefinitionProvider","_hasDeclarationProvider","_hasImplementationProvider","_hasTypeDefinitionProvider","_hasHoverProvider","_hasDocumentHighlightProvider","_hasDocumentSymbolProvider","_hasReferenceProvider","_hasRenameProvider","_hasSignatureHelpProvider","_hasInlayHintsProvider","_hasDocumentFormattingProvider","_hasDocumentSelectionFormattingProvider","_hasMultipleDocumentFormattingProvider","_hasMultipleDocumentSelectionFormattingProvider","_isInWalkThrough","update","_update","modes","bufferChangeEvents","scheme","Schemas","_onChange","_hasFocus","_domFocusTracker","trackFocus","onDidFocus","onDidBlur","squigglyStart","encodeURIComponent","squigglyEnd","getSquigglySVGData","color","dotdotdotStart","dotdotdotEnd","registerThemingParticipant","theme","collector","errorBorderColor","getColor","editorErrorBorder","addRule","errorForeground","editorErrorForeground","errorBackground","editorErrorBackground","warningBorderColor","editorWarningBorder","warningForeground","editorWarningForeground","warningBackground","editorWarningBackground","infoBorderColor","editorInfoBorder","infoForeground","editorInfoForeground","infoBackground","editorInfoBackground","hintBorderColor","editorHintBorder","hintForeground","editorHintForeground","unnecessaryForeground","editorUnnecessaryCodeOpacity","rgba","a","unnecessaryBorder","editorUnnecessaryCodeBorder","deprecatedForeground","editorForeground","_a","__awaiter","thisArg","_arguments","P","generator","reject","fulfilled","step","next","rejected","done","apply","DiffEntry","originalLineStart","originalLineEnd","modifiedLineStart","modifiedLineEnd","Diff","entries","diffReviewInsertIcon","registerIcon","Codicon","diffReviewRemoveIcon","diffReviewCloseIcon","DiffReview","diffEditor","_languageService","_width","_diffEditor","_isVisible","shadow","createFastDomNode","document","createElement","setClassName","actionBarContainer","_actionBar","ActionBar","Action","ThemeIcon","hide","icon","_content","scrollbar","DomScrollableElement","getDomNode","onDidUpdateDiff","_diffs","_compute","_render","getModifiedEditor","addStandardDisposableListener","preventDefault","row","findParentWithClass","_goToRow","equals","_getNextRow","_getPrevRow","accept","_currentDiff","index","currentIndex","_findDiffIndex","setPosition","setSelection","doLayout","jumpToLineNumber","current","_getCurrentFocusedRow","parseInt","getAttribute","isNaN","revealPosition","readOnly","previousElementSibling","_getFirstRow","nextElementSibling","querySelector","activeElement","test","className","prev","tabIndex","scanDomNode","width","setTop","setWidth","setHeight","setDisplay","lineChanges","getLineChanges","originalModel","getOriginalEditor","modifiedModel","_mergeAdjacent","pos","diff","originalOptions","modifiedOptions","originalModelOpts","modifiedModelOpts","clearNode","diffIndex","diffs","container","minOriginalLine","maxOriginalLine","minModifiedLine","maxModifiedLine","diffEntry","header","cell","originalChangedLinesCnt","modifiedChangedLinesCnt","createTextNode","String","getAriaLines","lines","originalChangedLinesCntAria","modifiedChangedLinesCntAria","comment","lineHeight","modLine","_renderSection","languageIdCodec","originalLineCount","modifiedLineCount","diffsLength","lineChange","originalStart","originalStartLineNumber","originalEnd","originalEndLineNumber","modifiedStart","modifiedStartLineNumber","modifiedEnd","modifiedEndLineNumber","rLength","originalEqualAbove","modifiedEqualAbove","minOriginal","minModified","prevLineChange","fromOriginal","fromModified","delta","originalEqualBelow","modifiedEqualBelow","maxOriginal","maxModified","nextLineChange","toOriginal","toModified","curr","thisDiff","currLast","thisFirst","getType","concat","dest","rowClassName","lineNumbersExtraClassName","spacerIcon","cnt","Math","max","originalLayoutInfo","originalLineNumbersWidth","modifiedLayoutInfo","modifiedLineNumbersWidth","originalLine","modifiedLine","style","minWidth","originalLineNumber","innerText","modifiedLineNumber","paddingRight","spacer","spacerCodicon","lineContent","html","_renderLine","_ttPolicy","createHTML","insertAdjacentHTML","ariaLabel","fontInfo","lineTokens","LineTokens","isBasicASCII","ViewLineRenderingData","mightContainNonBasicASCII","containsRTL","mightContainRTL","renderViewLine","RenderLineInput","isMonospace","canUseHalfwidthRightwardsArrow","spaceWidth","middotWidth","wsmiddotWidth","EditorFontLigatures","window","trustedTypes","createPolicy","ILanguageService","lineNumbers","editorLineNumbers","scrollbarShadow","DiffReviewNext","ContextKeyExpr","kbOpts","kbExpr","primary","weight","findFocusedDiffEditor","diffReviewNext","EditorAction","DiffReviewPrev","diffReviewPrev","diffEditors","listDiffEditors","activeCodeEditor","getActiveCodeEditor","registerEditorAction","InlineDiffMargin","_viewZoneId","_marginDomNode","_contextMenuService","_clipboardService","_visibility","zIndex","_diffActions","getOption","lineFeed","getEOL","right","visibility","actions","isDeletion","deletedText","getValueInRange","writeText","currentLineNumberOffset","copyLineAction","eof","getEndOfLineSequence","getLineMaxColumn","showContextMenu","x","y","getAnchor","autoSelectFirstItem","getDomNodePagePosition","pad","floor","posx","detail","viewZoneId","_updateLightBulbPosition","rightButton","posy","marginDomNode","offset","lineNumberOffset","newTop","viewLineCounts","acc","VisualEditorState","_zones","_inlineDiffMargins","_zonesMap","_decorations","allViewZones","z","changeViewZones","viewChangeAccessor","zoneId","removeZone","overviewRuler","restoreScrollState","scrollState","StableEditorScrollState","zones","viewZone","suppressMouseDown","addZone","getValueLength","restore","decorations","setZones","overviewZones","DIFF_EDITOR_ID","diffInsertIcon","diffRemoveIcon","ttPolicy","DiffEditorWidget","clipboardService","editorWorkerService","contextMenuService","_editorProgressService","_onDidUpdateDiff","_lastOriginalWarning","_lastModifiedWarning","_editorWorkerService","_state","_updatingDiffProgress","validateDiffEditorOptions","enableSplitViewResizing","renderSideBySide","maxComputationTime","maxFileSize","ignoreTrimWhitespace","renderIndicators","originalEditable","diffCodeLens","renderOverviewRuler","diffWordWrap","isInEmbeddedEditor","_updateDecorationsRunner","RunOnceScheduler","_updateDecorations","_containerDomElement","_getClassName","getColorTheme","_overviewViewportDomElement","_overviewDomElement","_modifiedEditor","_originalDomNode","_modifiedDomNode","_beginUpdateDecorationsTimeout","_currentlyChangingViewZones","_diffComputationToken","_originalEditorState","_modifiedEditorState","_isHandlingScrollEvent","_elementSizeObserver","ElementSizeObserver","_onDidContainerSizeChanged","automaticLayout","startObserving","_diffComputationResult","_originalEditor","_createLeftHandSideEditor","originalEditor","_createRightHandSideEditor","modifiedEditor","_originalOverviewRuler","_modifiedOverviewRuler","_reviewPane","_setStrategy","DiffEditorWidgetSideBySide","_createDataSource","DiffEditorWidgetInline","onDidColorThemeChange","t","_strategy","applyColors","schedule","addDiffEditor","newState","show","_layoutOverviewRulers","_createInnerEditor","_adjustOptionsForLeftHandSide","scrollTopChanged","scrollLeftChanged","scrollHeightChanged","_layoutOverviewViewport","_onViewZonesChanged","cancel","_beginUpdateDecorationsSoon","isInDiffLeftEditorKey","ONE_OVERVIEW_WIDTH","contentHeight","contentWidth","contentHeightChanged","contentWidthChanged","_adjustOptionsForRightHandSide","isInDiffRightEditorKey","editorWidgetOptions","removeDiffEditor","clearTimeout","_cleanViewZonesAndDecorations","changes","_newOptions","b","changed","beginUpdateDecorations","beginUpdateDecorationsSoon","_beginUpdateDecorations","setEnableSplitViewResizing","original","modified","setScrollTop","_setState","_recreateOverviewRulers","getVisibleColumnFromPosition","revealLine","revealLineInCenter","revealLineInCenterIfOutsideViewport","revealLineNearTop","revealPositionInCenter","revealPositionInCenterIfOutsideViewport","revealPositionNearTop","revealLines","revealLinesInCenter","revealLinesInCenterIfOutsideViewport","revealLinesNearTop","revealRangeInCenter","revealRangeInCenterIfOutsideViewport","revealRangeNearTop","revealRangeNearTopIfOutsideViewport","revealRangeAtTop","getSupportedActions","diffEditorState","observe","trigger","_doLayout","isVisible","getHeight","reviewHeight","_getReviewHeight","freeSpace","ENTIRE_DIFF_OVERVIEW_WIDTH","getLayoutInfo","setLayout","setTimeout","UPDATE_DIFF_DECORATIONS_DELAY","currentOriginalModel","currentModifiedModel","currentToken","diffLimit","canSyncModelForDiff","bufferTextLength","computeDiff","error","_equals","clean","foreignOriginal","getForeignViewZones","foreignModified","diffDecorations","getEditorsDiffDecorations","clonedOptions","inDiffEditor","vertical","folding","codeLens","fixedOverflowWidgets","minimap","enabled","_adjustOptionsForSubEditor","wordWrapOverride1","originalAriaLabel","extraEditorClassName","modifiedAriaLabel","revealHorizontalRightPadding","EditorOptions","verticalHasArrows","getWidth","splitPoint","layout","_computeOverviewViewport","scrollHeight","computedAvailableSize","computedRepresentableSize","computedRatio","getContainerDomNode","relayoutEditors","newStrategy","startLineNumberExtractor","min","mid","midStart","midEnd","_getLineChangeAtOrBeforeLineNumber","originalEquivalentLineNumber","modifiedEquivalentLineNumber","lineChangeOriginalLength","lineChangeModifiedLength","equivalentLineNumber","_getEquivalentLineForOriginalLineNumber","_getEquivalentLineForModifiedLineNumber","getThemeTypeSelector","IClipboardService","IEditorWorkerService","IContextMenuService","IEditorProgressService","DiffEditorWidgetStyle","dataSource","_dataSource","_insertColor","_removeColor","newInsertColor","diffInserted","defaultInsertColor","transparent","newRemoveColor","diffRemoved","defaultRemoveColor","hasChanges","originalWhitespaces","modifiedWhitespaces","sort","afterLineNumber","_getViewZones","originalDecorations","_getOriginalEditorDecorations","modifiedDecorations","_getModifiedEditorDecorations","ForeignViewZonesIterator","_source","_index","advance","ViewZonesComputer","_lineChanges","_originalForeignVZ","_modifiedForeignVZ","originalLineHeight","modifiedLineHeight","originalHasWrapping","wrappingColumn","modifiedHasWrapping","hasWrapping","originalCoordinatesConverter","_getViewModel","modifiedCoordinatesConverter","originalEndEquivalentLineNumber","modifiedEndEquivalentLineNumber","sortMyViewZones","addAndCombineIfPossible","destination","item","lastItem","heightInLines","modifiedForeignVZ","originalForeignVZ","lastOriginalLineNumber","lastModifiedLineNumber","_getViewLineCount","stepOriginal","stepModified","count","originalViewLineCount","getModelLineViewLineCount","modifiedViewLineCount","viewZoneLineNumber","_createOriginalMarginDomNodeForModifiedForeignViewZoneInAddedRegion","isChangeOrInsert","_produceOriginalFromDiff","isChangeOrDelete","_produceModifiedFromDiff","stepOriginalIndex","stepModifiedIndex","originalDelta","modifiedDelta","shouldNotShrink","_ensureDomNodes","getViewRange","createFakeLinesDiv","createDecoration","DECORATIONS","charDelete","ModelDecorationOptions","description","charDeleteWholeLine","isWholeLine","charInsert","charInsertWholeLine","lineInsert","marginClassName","lineInsertWithSign","linesDecorationsClassName","lineDelete","lineDeleteWithSign","lineDeleteMargin","_disableSash","_sashRatio","_sashPosition","_startSashPosition","_sash","Sash","orientation","state","onDidStart","_onSashDragStart","_onSashDrag","onDidEnd","_onSashDragEnd","onDidReset","_onSashReset","newDisableSash","sashRatio","w","sashPosition","midPoint","MINIMUM_EDITOR_WIDTH","currentX","startX","sash","SideBySideViewZonesComputer","getViewZones","overviewZoneColor","originalViewModel","charChanges","OverviewRulerZone","charChange","originalStartColumn","getLineFirstNonWhitespaceColumn","originalEndColumn","getLineLastNonWhitespaceColumn","modifiedViewModel","modifiedStartColumn","modifiedEndColumn","_decorationsLeft","decorationsLeft","InlineViewZonesComputer","_originalModel","_renderIndicators","_pendingLineChange","_pendingViewZones","_lineBreaksComputer","createLineBreaksComputer","_finalize","MOUSE_CURSOR_TEXT_CSS_CLASS_NAME","minWidthInPx","addRequest","modifiedEditorOptions","disableMonospaceOptimizations","typicalHalfwidthCharacterWidth","scrollBeyondLastColumn","lineDecorationsWidth","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","lineBreaks","finalize","lineBreakIndex","InlineDecoration","hasCharChanges","sb","createStringBuilder","maxCharsPerLine","renderedLineCount","lineIndex","getLineTokens","lineBreakData","actualDecorations","LineDecoration","lastBreakOffset","breakOffsets","breakOffset","viewLineTokens","sliceAndInflate","viewLineContent","substring","_renderOriginalLine","marginDomNode2","afterColumn","build","trustedhtml","innerHTML","appendASCIIString","output","marginElement","characterMapping","getAbsoluteOffset","lineCount","getLineMinColumn","defaults","validateBooleanOption","clampedInt","defaultValue","validateStringSetOption","added","removed","addedOutline","diffInsertedOutline","removedOutline","diffRemovedOutline","border","diffBorder","scrollbarSliderBackgroundColor","scrollbarSliderBackground","scrollbarSliderHoverBackgroundColor","scrollbarSliderHoverBackground","scrollbarSliderActiveBackgroundColor","scrollbarSliderActiveBackground","diffDiagonalFillColor","diffDiagonalFill","defaultOptions","followsCaret","ignoreCharChanges","alwaysRevealFirst","DiffNavigator","_onDidUpdate","objects","disposed","nextIdx","ignoreSelectionChange","revealFirst","_onDiffUpdated","_init","rhs","fwd","found","isBeforeOrEqual","assert","canNavigate","_initIdx","info","_move","EmbeddedCodeEditorWidget","parentEditor","getOverflowWidgetsDomNode","_parentEditor","_overwriteOptions","_onParentConfigurationChanged"],"sourceRoot":""}