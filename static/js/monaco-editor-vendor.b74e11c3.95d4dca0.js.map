{"version":3,"file":"static/js/monaco-editor-vendor.b74e11c3.95d4dca0.js","mappings":"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","sources":["../node_modules/monaco-editor/esm/vs/editor/contrib/dnd/browser/dragAndDropCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/dnd/browser/dnd.js","../node_modules/monaco-editor/esm/vs/editor/contrib/documentSymbols/browser/documentSymbols.js","../node_modules/monaco-editor/esm/vs/editor/contrib/documentSymbols/browser/outlineModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/editorState/browser/keybindingCancellation.js","../node_modules/monaco-editor/esm/vs/editor/contrib/editorState/browser/editorState.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findDecorations.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/replaceAllCommand.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/replacePattern.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findModel.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findOptionsWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findState.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findWidget.js","../node_modules/monaco-editor/esm/vs/editor/contrib/find/browser/findController.js"],"sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nexport class DragAndDropCommand {\n    constructor(selection, targetPosition, copy) {\n        this.selection = selection;\n        this.targetPosition = targetPosition;\n        this.copy = copy;\n        this.targetSelection = null;\n    }\n    getEditOperations(model, builder) {\n        let text = model.getValueInRange(this.selection);\n        if (!this.copy) {\n            builder.addEditOperation(this.selection, null);\n        }\n        builder.addEditOperation(new Range(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column), text);\n        if (this.selection.containsPosition(this.targetPosition) && !(this.copy && (this.selection.getEndPosition().equals(this.targetPosition) || this.selection.getStartPosition().equals(this.targetPosition)) // we allow users to paste content beside the selection\n        )) {\n            this.targetSelection = this.selection;\n            return;\n        }\n        if (this.copy) {\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.selection.endLineNumber - this.selection.startLineNumber + this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        if (this.targetPosition.lineNumber > this.selection.endLineNumber) {\n            // Drag the selection downwards\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        if (this.targetPosition.lineNumber < this.selection.endLineNumber) {\n            // Drag the selection upwards\n            this.targetSelection = new Selection(this.targetPosition.lineNumber, this.targetPosition.column, this.targetPosition.lineNumber + this.selection.endLineNumber - this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column + this.selection.endColumn - this.selection.startColumn :\n                this.selection.endColumn);\n            return;\n        }\n        // The target position is at the same line as the selection's end position.\n        if (this.selection.endColumn <= this.targetPosition.column) {\n            // The target position is after the selection's end position\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn :\n                this.targetPosition.column - this.selection.endColumn + this.selection.startColumn, this.targetPosition.lineNumber, this.selection.startLineNumber === this.selection.endLineNumber ?\n                this.targetPosition.column :\n                this.selection.endColumn);\n        }\n        else {\n            // The target position is before the selection's end position. Since the selection doesn't contain the target position, the selection is one-line and target position is before this selection.\n            this.targetSelection = new Selection(this.targetPosition.lineNumber - this.selection.endLineNumber + this.selection.startLineNumber, this.targetPosition.column, this.targetPosition.lineNumber, this.targetPosition.column + this.selection.endColumn - this.selection.startColumn);\n        }\n    }\n    computeCursorState(model, helper) {\n        return this.targetSelection;\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { isMacintosh } from '../../../../base/common/platform.js';\nimport './dnd.css';\nimport { registerEditorContribution } from '../../../browser/editorExtensions.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { DragAndDropCommand } from './dragAndDropCommand.js';\nfunction hasTriggerModifier(e) {\n    if (isMacintosh) {\n        return e.altKey;\n    }\n    else {\n        return e.ctrlKey;\n    }\n}\nexport class DragAndDropController extends Disposable {\n    constructor(editor) {\n        super();\n        this._editor = editor;\n        this._register(this._editor.onMouseDown((e) => this._onEditorMouseDown(e)));\n        this._register(this._editor.onMouseUp((e) => this._onEditorMouseUp(e)));\n        this._register(this._editor.onMouseDrag((e) => this._onEditorMouseDrag(e)));\n        this._register(this._editor.onMouseDrop((e) => this._onEditorMouseDrop(e)));\n        this._register(this._editor.onMouseDropCanceled(() => this._onEditorMouseDropCanceled()));\n        this._register(this._editor.onKeyDown((e) => this.onEditorKeyDown(e)));\n        this._register(this._editor.onKeyUp((e) => this.onEditorKeyUp(e)));\n        this._register(this._editor.onDidBlurEditorWidget(() => this.onEditorBlur()));\n        this._register(this._editor.onDidBlurEditorText(() => this.onEditorBlur()));\n        this._dndDecorationIds = [];\n        this._mouseDown = false;\n        this._modifierPressed = false;\n        this._dragSelection = null;\n    }\n    onEditorBlur() {\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n        this._modifierPressed = false;\n    }\n    onEditorKeyDown(e) {\n        if (!this._editor.getOption(31 /* dragAndDrop */) || this._editor.getOption(18 /* columnSelection */)) {\n            return;\n        }\n        if (hasTriggerModifier(e)) {\n            this._modifierPressed = true;\n        }\n        if (this._mouseDown && hasTriggerModifier(e)) {\n            this._editor.updateOptions({\n                mouseStyle: 'copy'\n            });\n        }\n    }\n    onEditorKeyUp(e) {\n        if (!this._editor.getOption(31 /* dragAndDrop */) || this._editor.getOption(18 /* columnSelection */)) {\n            return;\n        }\n        if (hasTriggerModifier(e)) {\n            this._modifierPressed = false;\n        }\n        if (this._mouseDown && e.keyCode === DragAndDropController.TRIGGER_KEY_VALUE) {\n            this._editor.updateOptions({\n                mouseStyle: 'default'\n            });\n        }\n    }\n    _onEditorMouseDown(mouseEvent) {\n        this._mouseDown = true;\n    }\n    _onEditorMouseUp(mouseEvent) {\n        this._mouseDown = false;\n        // Whenever users release the mouse, the drag and drop operation should finish and the cursor should revert to text.\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n    }\n    _onEditorMouseDrag(mouseEvent) {\n        let target = mouseEvent.target;\n        if (this._dragSelection === null) {\n            const selections = this._editor.getSelections() || [];\n            let possibleSelections = selections.filter(selection => target.position && selection.containsPosition(target.position));\n            if (possibleSelections.length === 1) {\n                this._dragSelection = possibleSelections[0];\n            }\n            else {\n                return;\n            }\n        }\n        if (hasTriggerModifier(mouseEvent.event)) {\n            this._editor.updateOptions({\n                mouseStyle: 'copy'\n            });\n        }\n        else {\n            this._editor.updateOptions({\n                mouseStyle: 'default'\n            });\n        }\n        if (target.position) {\n            if (this._dragSelection.containsPosition(target.position)) {\n                this._removeDecoration();\n            }\n            else {\n                this.showAt(target.position);\n            }\n        }\n    }\n    _onEditorMouseDropCanceled() {\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n    }\n    _onEditorMouseDrop(mouseEvent) {\n        if (mouseEvent.target && (this._hitContent(mouseEvent.target) || this._hitMargin(mouseEvent.target)) && mouseEvent.target.position) {\n            let newCursorPosition = new Position(mouseEvent.target.position.lineNumber, mouseEvent.target.position.column);\n            if (this._dragSelection === null) {\n                let newSelections = null;\n                if (mouseEvent.event.shiftKey) {\n                    let primarySelection = this._editor.getSelection();\n                    if (primarySelection) {\n                        const { selectionStartLineNumber, selectionStartColumn } = primarySelection;\n                        newSelections = [new Selection(selectionStartLineNumber, selectionStartColumn, newCursorPosition.lineNumber, newCursorPosition.column)];\n                    }\n                }\n                else {\n                    newSelections = (this._editor.getSelections() || []).map(selection => {\n                        if (selection.containsPosition(newCursorPosition)) {\n                            return new Selection(newCursorPosition.lineNumber, newCursorPosition.column, newCursorPosition.lineNumber, newCursorPosition.column);\n                        }\n                        else {\n                            return selection;\n                        }\n                    });\n                }\n                // Use `mouse` as the source instead of `api` and setting the reason to explicit (to behave like any other mouse operation).\n                this._editor.setSelections(newSelections || [], 'mouse', 3 /* Explicit */);\n            }\n            else if (!this._dragSelection.containsPosition(newCursorPosition) ||\n                ((hasTriggerModifier(mouseEvent.event) ||\n                    this._modifierPressed) && (this._dragSelection.getEndPosition().equals(newCursorPosition) || this._dragSelection.getStartPosition().equals(newCursorPosition)) // we allow users to paste content beside the selection\n                )) {\n                this._editor.pushUndoStop();\n                this._editor.executeCommand(DragAndDropController.ID, new DragAndDropCommand(this._dragSelection, newCursorPosition, hasTriggerModifier(mouseEvent.event) || this._modifierPressed));\n                this._editor.pushUndoStop();\n            }\n        }\n        this._editor.updateOptions({\n            mouseStyle: 'text'\n        });\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n    }\n    showAt(position) {\n        let newDecorations = [{\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\n                options: DragAndDropController._DECORATION_OPTIONS\n            }];\n        this._dndDecorationIds = this._editor.deltaDecorations(this._dndDecorationIds, newDecorations);\n        this._editor.revealPosition(position, 1 /* Immediate */);\n    }\n    _removeDecoration() {\n        this._dndDecorationIds = this._editor.deltaDecorations(this._dndDecorationIds, []);\n    }\n    _hitContent(target) {\n        return target.type === 6 /* CONTENT_TEXT */ ||\n            target.type === 7 /* CONTENT_EMPTY */;\n    }\n    _hitMargin(target) {\n        return target.type === 2 /* GUTTER_GLYPH_MARGIN */ ||\n            target.type === 3 /* GUTTER_LINE_NUMBERS */ ||\n            target.type === 4 /* GUTTER_LINE_DECORATIONS */;\n    }\n    dispose() {\n        this._removeDecoration();\n        this._dragSelection = null;\n        this._mouseDown = false;\n        this._modifierPressed = false;\n        super.dispose();\n    }\n}\nDragAndDropController.ID = 'editor.contrib.dragAndDrop';\nDragAndDropController.TRIGGER_KEY_VALUE = isMacintosh ? 6 /* Alt */ : 5 /* Ctrl */;\nDragAndDropController._DECORATION_OPTIONS = ModelDecorationOptions.register({\n    description: 'dnd-target',\n    className: 'dnd-target'\n});\nregisterEditorContribution(DragAndDropController.ID, DragAndDropController);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { CancellationToken } from '../../../../base/common/cancellation.js';\nimport { assertType } from '../../../../base/common/types.js';\nimport { URI } from '../../../../base/common/uri.js';\nimport { ITextModelService } from '../../../common/services/resolverService.js';\nimport { IOutlineModelService } from './outlineModel.js';\nimport { CommandsRegistry } from '../../../../platform/commands/common/commands.js';\nCommandsRegistry.registerCommand('_executeDocumentSymbolProvider', function (accessor, ...args) {\n    return __awaiter(this, void 0, void 0, function* () {\n        const [resource] = args;\n        assertType(URI.isUri(resource));\n        const outlineService = accessor.get(IOutlineModelService);\n        const modelService = accessor.get(ITextModelService);\n        const reference = yield modelService.createModelReference(resource);\n        try {\n            return (yield outlineService.getOrCreate(reference.object.textEditorModel, CancellationToken.None)).getTopLevelSymbols();\n        }\n        finally {\n            reference.dispose();\n        }\n    });\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { equals } from '../../../../base/common/arrays.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { onUnexpectedExternalError } from '../../../../base/common/errors.js';\nimport { Iterable } from '../../../../base/common/iterator.js';\nimport { LRUCache } from '../../../../base/common/map.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { DocumentSymbolProviderRegistry } from '../../../common/languages.js';\nimport { ILanguageFeatureDebounceService } from '../../../common/services/languageFeatureDebounce.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { IModelService } from '../../../common/services/model.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nexport class TreeElement {\n    remove() {\n        if (this.parent) {\n            this.parent.children.delete(this.id);\n        }\n    }\n    static findId(candidate, container) {\n        // complex id-computation which contains the origin/extension,\n        // the parent path, and some dedupe logic when names collide\n        let candidateId;\n        if (typeof candidate === 'string') {\n            candidateId = `${container.id}/${candidate}`;\n        }\n        else {\n            candidateId = `${container.id}/${candidate.name}`;\n            if (container.children.get(candidateId) !== undefined) {\n                candidateId = `${container.id}/${candidate.name}_${candidate.range.startLineNumber}_${candidate.range.startColumn}`;\n            }\n        }\n        let id = candidateId;\n        for (let i = 0; container.children.get(id) !== undefined; i++) {\n            id = `${candidateId}_${i}`;\n        }\n        return id;\n    }\n    static empty(element) {\n        return element.children.size === 0;\n    }\n}\nexport class OutlineElement extends TreeElement {\n    constructor(id, parent, symbol) {\n        super();\n        this.id = id;\n        this.parent = parent;\n        this.symbol = symbol;\n        this.children = new Map();\n    }\n}\nexport class OutlineGroup extends TreeElement {\n    constructor(id, parent, label, order) {\n        super();\n        this.id = id;\n        this.parent = parent;\n        this.label = label;\n        this.order = order;\n        this.children = new Map();\n    }\n}\nexport class OutlineModel extends TreeElement {\n    constructor(uri) {\n        super();\n        this.uri = uri;\n        this.id = 'root';\n        this.parent = undefined;\n        this._groups = new Map();\n        this.children = new Map();\n        this.id = 'root';\n        this.parent = undefined;\n    }\n    static create(textModel, token) {\n        const cts = new CancellationTokenSource(token);\n        const result = new OutlineModel(textModel.uri);\n        const provider = DocumentSymbolProviderRegistry.ordered(textModel);\n        const promises = provider.map((provider, index) => {\n            var _a;\n            let id = TreeElement.findId(`provider_${index}`, result);\n            let group = new OutlineGroup(id, result, (_a = provider.displayName) !== null && _a !== void 0 ? _a : 'Unknown Outline Provider', index);\n            return Promise.resolve(provider.provideDocumentSymbols(textModel, cts.token)).then(result => {\n                for (const info of result || []) {\n                    OutlineModel._makeOutlineElement(info, group);\n                }\n                return group;\n            }, err => {\n                onUnexpectedExternalError(err);\n                return group;\n            }).then(group => {\n                if (!TreeElement.empty(group)) {\n                    result._groups.set(id, group);\n                }\n                else {\n                    group.remove();\n                }\n            });\n        });\n        const listener = DocumentSymbolProviderRegistry.onDidChange(() => {\n            const newProvider = DocumentSymbolProviderRegistry.ordered(textModel);\n            if (!equals(newProvider, provider)) {\n                cts.cancel();\n            }\n        });\n        return Promise.all(promises).then(() => {\n            if (cts.token.isCancellationRequested && !token.isCancellationRequested) {\n                return OutlineModel.create(textModel, token);\n            }\n            else {\n                return result._compact();\n            }\n        }).finally(() => {\n            listener.dispose();\n        });\n    }\n    static _makeOutlineElement(info, container) {\n        let id = TreeElement.findId(info, container);\n        let res = new OutlineElement(id, container, info);\n        if (info.children) {\n            for (const childInfo of info.children) {\n                OutlineModel._makeOutlineElement(childInfo, res);\n            }\n        }\n        container.children.set(res.id, res);\n    }\n    _compact() {\n        let count = 0;\n        for (const [key, group] of this._groups) {\n            if (group.children.size === 0) { // empty\n                this._groups.delete(key);\n            }\n            else {\n                count += 1;\n            }\n        }\n        if (count !== 1) {\n            //\n            this.children = this._groups;\n        }\n        else {\n            // adopt all elements of the first group\n            let group = Iterable.first(this._groups.values());\n            for (let [, child] of group.children) {\n                child.parent = this;\n                this.children.set(child.id, child);\n            }\n        }\n        return this;\n    }\n    getTopLevelSymbols() {\n        const roots = [];\n        for (const child of this.children.values()) {\n            if (child instanceof OutlineElement) {\n                roots.push(child.symbol);\n            }\n            else {\n                roots.push(...Iterable.map(child.children.values(), child => child.symbol));\n            }\n        }\n        return roots.sort((a, b) => Range.compareRangesUsingStarts(a.range, b.range));\n    }\n    asListOfDocumentSymbols() {\n        const roots = this.getTopLevelSymbols();\n        const bucket = [];\n        OutlineModel._flattenDocumentSymbols(bucket, roots, '');\n        return bucket.sort((a, b) => Position.compare(Range.getStartPosition(a.range), Range.getStartPosition(b.range)) || Position.compare(Range.getEndPosition(b.range), Range.getEndPosition(a.range)));\n    }\n    static _flattenDocumentSymbols(bucket, entries, overrideContainerLabel) {\n        for (const entry of entries) {\n            bucket.push({\n                kind: entry.kind,\n                tags: entry.tags,\n                name: entry.name,\n                detail: entry.detail,\n                containerName: entry.containerName || overrideContainerLabel,\n                range: entry.range,\n                selectionRange: entry.selectionRange,\n                children: undefined, // we flatten it...\n            });\n            // Recurse over children\n            if (entry.children) {\n                OutlineModel._flattenDocumentSymbols(bucket, entry.children, entry.name);\n            }\n        }\n    }\n}\nexport const IOutlineModelService = createDecorator('IOutlineModelService');\nlet OutlineModelService = class OutlineModelService {\n    constructor(debounces, modelService) {\n        this._disposables = new DisposableStore();\n        this._cache = new LRUCache(10, 0.7);\n        this._debounceInformation = debounces.for(DocumentSymbolProviderRegistry, 'DocumentSymbols', { min: 350 });\n        // don't cache outline models longer than their text model\n        this._disposables.add(modelService.onModelRemoved(textModel => {\n            this._cache.delete(textModel.id);\n        }));\n    }\n    dispose() {\n        this._disposables.dispose();\n    }\n    getOrCreate(textModel, token) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const provider = DocumentSymbolProviderRegistry.ordered(textModel);\n            let data = this._cache.get(textModel.id);\n            if (!data || data.versionId !== textModel.getVersionId() || !equals(data.provider, provider)) {\n                let source = new CancellationTokenSource();\n                data = {\n                    versionId: textModel.getVersionId(),\n                    provider,\n                    promiseCnt: 0,\n                    source,\n                    promise: OutlineModel.create(textModel, source.token),\n                    model: undefined,\n                };\n                this._cache.set(textModel.id, data);\n                const now = Date.now();\n                data.promise.then(outlineModel => {\n                    data.model = outlineModel;\n                    this._debounceInformation.update(textModel, Date.now() - now);\n                }).catch(_err => {\n                    this._cache.delete(textModel.id);\n                });\n            }\n            if (data.model) {\n                // resolved -> return data\n                return data.model;\n            }\n            // increase usage counter\n            data.promiseCnt += 1;\n            const listener = token.onCancellationRequested(() => {\n                // last -> cancel provider request, remove cached promise\n                if (--data.promiseCnt === 0) {\n                    data.source.cancel();\n                    this._cache.delete(textModel.id);\n                }\n            });\n            try {\n                return yield data.promise;\n            }\n            finally {\n                listener.dispose();\n            }\n        });\n    }\n};\nOutlineModelService = __decorate([\n    __param(0, ILanguageFeatureDebounceService),\n    __param(1, IModelService)\n], OutlineModelService);\nexport { OutlineModelService };\nregisterSingleton(IOutlineModelService, OutlineModelService, true);\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { EditorCommand, registerEditorCommand } from '../../../browser/editorExtensions.js';\nimport { IContextKeyService, RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { LinkedList } from '../../../../base/common/linkedList.js';\nimport { createDecorator } from '../../../../platform/instantiation/common/instantiation.js';\nimport { registerSingleton } from '../../../../platform/instantiation/common/extensions.js';\nimport { localize } from '../../../../nls.js';\nconst IEditorCancellationTokens = createDecorator('IEditorCancelService');\nconst ctxCancellableOperation = new RawContextKey('cancellableOperation', false, localize('cancellableOperation', 'Whether the editor runs a cancellable operation, e.g. like \\'Peek References\\''));\nregisterSingleton(IEditorCancellationTokens, class {\n    constructor() {\n        this._tokens = new WeakMap();\n    }\n    add(editor, cts) {\n        let data = this._tokens.get(editor);\n        if (!data) {\n            data = editor.invokeWithinContext(accessor => {\n                const key = ctxCancellableOperation.bindTo(accessor.get(IContextKeyService));\n                const tokens = new LinkedList();\n                return { key, tokens };\n            });\n            this._tokens.set(editor, data);\n        }\n        let removeFn;\n        data.key.set(true);\n        removeFn = data.tokens.push(cts);\n        return () => {\n            // remove w/o cancellation\n            if (removeFn) {\n                removeFn();\n                data.key.set(!data.tokens.isEmpty());\n                removeFn = undefined;\n            }\n        };\n    }\n    cancel(editor) {\n        const data = this._tokens.get(editor);\n        if (!data) {\n            return;\n        }\n        // remove with cancellation\n        const cts = data.tokens.pop();\n        if (cts) {\n            cts.cancel();\n            data.key.set(!data.tokens.isEmpty());\n        }\n    }\n}, true);\nexport class EditorKeybindingCancellationTokenSource extends CancellationTokenSource {\n    constructor(editor, parent) {\n        super(parent);\n        this.editor = editor;\n        this._unregister = editor.invokeWithinContext(accessor => accessor.get(IEditorCancellationTokens).add(editor, this));\n    }\n    dispose() {\n        this._unregister();\n        super.dispose();\n    }\n}\nregisterEditorCommand(new class extends EditorCommand {\n    constructor() {\n        super({\n            id: 'editor.cancelOperation',\n            kbOpts: {\n                weight: 100 /* EditorContrib */,\n                primary: 9 /* Escape */\n            },\n            precondition: ctxCancellableOperation\n        });\n    }\n    runEditorCommand(accessor, editor) {\n        accessor.get(IEditorCancellationTokens).cancel(editor);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as strings from '../../../../base/common/strings.js';\nimport { Range } from '../../../common/core/range.js';\nimport { CancellationTokenSource } from '../../../../base/common/cancellation.js';\nimport { DisposableStore } from '../../../../base/common/lifecycle.js';\nimport { EditorKeybindingCancellationTokenSource } from './keybindingCancellation.js';\nexport class EditorState {\n    constructor(editor, flags) {\n        this.flags = flags;\n        if ((this.flags & 1 /* Value */) !== 0) {\n            const model = editor.getModel();\n            this.modelVersionId = model ? strings.format('{0}#{1}', model.uri.toString(), model.getVersionId()) : null;\n        }\n        else {\n            this.modelVersionId = null;\n        }\n        if ((this.flags & 4 /* Position */) !== 0) {\n            this.position = editor.getPosition();\n        }\n        else {\n            this.position = null;\n        }\n        if ((this.flags & 2 /* Selection */) !== 0) {\n            this.selection = editor.getSelection();\n        }\n        else {\n            this.selection = null;\n        }\n        if ((this.flags & 8 /* Scroll */) !== 0) {\n            this.scrollLeft = editor.getScrollLeft();\n            this.scrollTop = editor.getScrollTop();\n        }\n        else {\n            this.scrollLeft = -1;\n            this.scrollTop = -1;\n        }\n    }\n    _equals(other) {\n        if (!(other instanceof EditorState)) {\n            return false;\n        }\n        const state = other;\n        if (this.modelVersionId !== state.modelVersionId) {\n            return false;\n        }\n        if (this.scrollLeft !== state.scrollLeft || this.scrollTop !== state.scrollTop) {\n            return false;\n        }\n        if (!this.position && state.position || this.position && !state.position || this.position && state.position && !this.position.equals(state.position)) {\n            return false;\n        }\n        if (!this.selection && state.selection || this.selection && !state.selection || this.selection && state.selection && !this.selection.equalsRange(state.selection)) {\n            return false;\n        }\n        return true;\n    }\n    validate(editor) {\n        return this._equals(new EditorState(editor, this.flags));\n    }\n}\n/**\n * A cancellation token source that cancels when the editor changes as expressed\n * by the provided flags\n * @param range If provided, changes in position and selection within this range will not trigger cancellation\n */\nexport class EditorStateCancellationTokenSource extends EditorKeybindingCancellationTokenSource {\n    constructor(editor, flags, range, parent) {\n        super(editor, parent);\n        this._listener = new DisposableStore();\n        if (flags & 4 /* Position */) {\n            this._listener.add(editor.onDidChangeCursorPosition(e => {\n                if (!range || !Range.containsPosition(range, e.position)) {\n                    this.cancel();\n                }\n            }));\n        }\n        if (flags & 2 /* Selection */) {\n            this._listener.add(editor.onDidChangeCursorSelection(e => {\n                if (!range || !Range.containsRange(range, e.selection)) {\n                    this.cancel();\n                }\n            }));\n        }\n        if (flags & 8 /* Scroll */) {\n            this._listener.add(editor.onDidScrollChange(_ => this.cancel()));\n        }\n        if (flags & 1 /* Value */) {\n            this._listener.add(editor.onDidChangeModel(_ => this.cancel()));\n            this._listener.add(editor.onDidChangeModelContent(_ => this.cancel()));\n        }\n    }\n    dispose() {\n        this._listener.dispose();\n        super.dispose();\n    }\n}\n/**\n * A cancellation token source that cancels when the provided model changes\n */\nexport class TextModelCancellationTokenSource extends CancellationTokenSource {\n    constructor(model, parent) {\n        super(parent);\n        this._listener = model.onDidChangeContent(() => this.cancel());\n    }\n    dispose() {\n        this._listener.dispose();\n        super.dispose();\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nimport { MinimapPosition, OverviewRulerLane } from '../../../common/model.js';\nimport { ModelDecorationOptions } from '../../../common/model/textModel.js';\nimport { minimapFindMatch, overviewRulerFindMatchForeground } from '../../../../platform/theme/common/colorRegistry.js';\nimport { themeColorFromId } from '../../../../platform/theme/common/themeService.js';\nexport class FindDecorations {\n    constructor(editor) {\n        this._editor = editor;\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n        this._startPosition = this._editor.getPosition();\n    }\n    dispose() {\n        this._editor.deltaDecorations(this._allDecorations(), []);\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n    }\n    reset() {\n        this._decorations = [];\n        this._overviewRulerApproximateDecorations = [];\n        this._findScopeDecorationIds = [];\n        this._rangeHighlightDecorationId = null;\n        this._highlightedDecorationId = null;\n    }\n    getCount() {\n        return this._decorations.length;\n    }\n    /** @deprecated use getFindScopes to support multiple selections */\n    getFindScope() {\n        if (this._findScopeDecorationIds[0]) {\n            return this._editor.getModel().getDecorationRange(this._findScopeDecorationIds[0]);\n        }\n        return null;\n    }\n    getFindScopes() {\n        if (this._findScopeDecorationIds.length) {\n            const scopes = this._findScopeDecorationIds.map(findScopeDecorationId => this._editor.getModel().getDecorationRange(findScopeDecorationId)).filter(element => !!element);\n            if (scopes.length) {\n                return scopes;\n            }\n        }\n        return null;\n    }\n    getStartPosition() {\n        return this._startPosition;\n    }\n    setStartPosition(newStartPosition) {\n        this._startPosition = newStartPosition;\n        this.setCurrentFindMatch(null);\n    }\n    _getDecorationIndex(decorationId) {\n        const index = this._decorations.indexOf(decorationId);\n        if (index >= 0) {\n            return index + 1;\n        }\n        return 1;\n    }\n    getCurrentMatchesPosition(desiredRange) {\n        let candidates = this._editor.getModel().getDecorationsInRange(desiredRange);\n        for (const candidate of candidates) {\n            const candidateOpts = candidate.options;\n            if (candidateOpts === FindDecorations._FIND_MATCH_DECORATION || candidateOpts === FindDecorations._CURRENT_FIND_MATCH_DECORATION) {\n                return this._getDecorationIndex(candidate.id);\n            }\n        }\n        // We don't know the current match position, so returns zero to show '?' in find widget\n        return 0;\n    }\n    setCurrentFindMatch(nextMatch) {\n        let newCurrentDecorationId = null;\n        let matchPosition = 0;\n        if (nextMatch) {\n            for (let i = 0, len = this._decorations.length; i < len; i++) {\n                let range = this._editor.getModel().getDecorationRange(this._decorations[i]);\n                if (nextMatch.equalsRange(range)) {\n                    newCurrentDecorationId = this._decorations[i];\n                    matchPosition = (i + 1);\n                    break;\n                }\n            }\n        }\n        if (this._highlightedDecorationId !== null || newCurrentDecorationId !== null) {\n            this._editor.changeDecorations((changeAccessor) => {\n                if (this._highlightedDecorationId !== null) {\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._FIND_MATCH_DECORATION);\n                    this._highlightedDecorationId = null;\n                }\n                if (newCurrentDecorationId !== null) {\n                    this._highlightedDecorationId = newCurrentDecorationId;\n                    changeAccessor.changeDecorationOptions(this._highlightedDecorationId, FindDecorations._CURRENT_FIND_MATCH_DECORATION);\n                }\n                if (this._rangeHighlightDecorationId !== null) {\n                    changeAccessor.removeDecoration(this._rangeHighlightDecorationId);\n                    this._rangeHighlightDecorationId = null;\n                }\n                if (newCurrentDecorationId !== null) {\n                    let rng = this._editor.getModel().getDecorationRange(newCurrentDecorationId);\n                    if (rng.startLineNumber !== rng.endLineNumber && rng.endColumn === 1) {\n                        let lineBeforeEnd = rng.endLineNumber - 1;\n                        let lineBeforeEndMaxColumn = this._editor.getModel().getLineMaxColumn(lineBeforeEnd);\n                        rng = new Range(rng.startLineNumber, rng.startColumn, lineBeforeEnd, lineBeforeEndMaxColumn);\n                    }\n                    this._rangeHighlightDecorationId = changeAccessor.addDecoration(rng, FindDecorations._RANGE_HIGHLIGHT_DECORATION);\n                }\n            });\n        }\n        return matchPosition;\n    }\n    set(findMatches, findScopes) {\n        this._editor.changeDecorations((accessor) => {\n            let findMatchesOptions = FindDecorations._FIND_MATCH_DECORATION;\n            let newOverviewRulerApproximateDecorations = [];\n            if (findMatches.length > 1000) {\n                // we go into a mode where the overview ruler gets \"approximate\" decorations\n                // the reason is that the overview ruler paints all the decorations in the file and we don't want to cause freezes\n                findMatchesOptions = FindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION;\n                // approximate a distance in lines where matches should be merged\n                const lineCount = this._editor.getModel().getLineCount();\n                const height = this._editor.getLayoutInfo().height;\n                const approxPixelsPerLine = height / lineCount;\n                const mergeLinesDelta = Math.max(2, Math.ceil(3 / approxPixelsPerLine));\n                // merge decorations as much as possible\n                let prevStartLineNumber = findMatches[0].range.startLineNumber;\n                let prevEndLineNumber = findMatches[0].range.endLineNumber;\n                for (let i = 1, len = findMatches.length; i < len; i++) {\n                    const range = findMatches[i].range;\n                    if (prevEndLineNumber + mergeLinesDelta >= range.startLineNumber) {\n                        if (range.endLineNumber > prevEndLineNumber) {\n                            prevEndLineNumber = range.endLineNumber;\n                        }\n                    }\n                    else {\n                        newOverviewRulerApproximateDecorations.push({\n                            range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n                            options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n                        });\n                        prevStartLineNumber = range.startLineNumber;\n                        prevEndLineNumber = range.endLineNumber;\n                    }\n                }\n                newOverviewRulerApproximateDecorations.push({\n                    range: new Range(prevStartLineNumber, 1, prevEndLineNumber, 1),\n                    options: FindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION\n                });\n            }\n            // Find matches\n            let newFindMatchesDecorations = new Array(findMatches.length);\n            for (let i = 0, len = findMatches.length; i < len; i++) {\n                newFindMatchesDecorations[i] = {\n                    range: findMatches[i].range,\n                    options: findMatchesOptions\n                };\n            }\n            this._decorations = accessor.deltaDecorations(this._decorations, newFindMatchesDecorations);\n            // Overview ruler approximate decorations\n            this._overviewRulerApproximateDecorations = accessor.deltaDecorations(this._overviewRulerApproximateDecorations, newOverviewRulerApproximateDecorations);\n            // Range highlight\n            if (this._rangeHighlightDecorationId) {\n                accessor.removeDecoration(this._rangeHighlightDecorationId);\n                this._rangeHighlightDecorationId = null;\n            }\n            // Find scope\n            if (this._findScopeDecorationIds.length) {\n                this._findScopeDecorationIds.forEach(findScopeDecorationId => accessor.removeDecoration(findScopeDecorationId));\n                this._findScopeDecorationIds = [];\n            }\n            if (findScopes === null || findScopes === void 0 ? void 0 : findScopes.length) {\n                this._findScopeDecorationIds = findScopes.map(findScope => accessor.addDecoration(findScope, FindDecorations._FIND_SCOPE_DECORATION));\n            }\n        });\n    }\n    matchBeforePosition(position) {\n        if (this._decorations.length === 0) {\n            return null;\n        }\n        for (let i = this._decorations.length - 1; i >= 0; i--) {\n            let decorationId = this._decorations[i];\n            let r = this._editor.getModel().getDecorationRange(decorationId);\n            if (!r || r.endLineNumber > position.lineNumber) {\n                continue;\n            }\n            if (r.endLineNumber < position.lineNumber) {\n                return r;\n            }\n            if (r.endColumn > position.column) {\n                continue;\n            }\n            return r;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorations[this._decorations.length - 1]);\n    }\n    matchAfterPosition(position) {\n        if (this._decorations.length === 0) {\n            return null;\n        }\n        for (let i = 0, len = this._decorations.length; i < len; i++) {\n            let decorationId = this._decorations[i];\n            let r = this._editor.getModel().getDecorationRange(decorationId);\n            if (!r || r.startLineNumber < position.lineNumber) {\n                continue;\n            }\n            if (r.startLineNumber > position.lineNumber) {\n                return r;\n            }\n            if (r.startColumn < position.column) {\n                continue;\n            }\n            return r;\n        }\n        return this._editor.getModel().getDecorationRange(this._decorations[0]);\n    }\n    _allDecorations() {\n        let result = [];\n        result = result.concat(this._decorations);\n        result = result.concat(this._overviewRulerApproximateDecorations);\n        if (this._findScopeDecorationIds.length) {\n            result.push(...this._findScopeDecorationIds);\n        }\n        if (this._rangeHighlightDecorationId) {\n            result.push(this._rangeHighlightDecorationId);\n        }\n        return result;\n    }\n}\nFindDecorations._CURRENT_FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n    description: 'current-find-match',\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\n    zIndex: 13,\n    className: 'currentFindMatch',\n    showIfCollapsed: true,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    },\n    minimap: {\n        color: themeColorFromId(minimapFindMatch),\n        position: MinimapPosition.Inline\n    }\n});\nFindDecorations._FIND_MATCH_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match',\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\n    zIndex: 10,\n    className: 'findMatch',\n    showIfCollapsed: true,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    },\n    minimap: {\n        color: themeColorFromId(minimapFindMatch),\n        position: MinimapPosition.Inline\n    }\n});\nFindDecorations._FIND_MATCH_NO_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match-no-overview',\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\n    className: 'findMatch',\n    showIfCollapsed: true\n});\nFindDecorations._FIND_MATCH_ONLY_OVERVIEW_DECORATION = ModelDecorationOptions.register({\n    description: 'find-match-only-overview',\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\n    overviewRuler: {\n        color: themeColorFromId(overviewRulerFindMatchForeground),\n        position: OverviewRulerLane.Center\n    }\n});\nFindDecorations._RANGE_HIGHLIGHT_DECORATION = ModelDecorationOptions.register({\n    description: 'find-range-highlight',\n    stickiness: 1 /* NeverGrowsWhenTypingAtEdges */,\n    className: 'rangeHighlight',\n    isWholeLine: true\n});\nFindDecorations._FIND_SCOPE_DECORATION = ModelDecorationOptions.register({\n    description: 'find-scope',\n    className: 'findScope',\n    isWholeLine: true\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Range } from '../../../common/core/range.js';\nexport class ReplaceAllCommand {\n    constructor(editorSelection, ranges, replaceStrings) {\n        this._editorSelection = editorSelection;\n        this._ranges = ranges;\n        this._replaceStrings = replaceStrings;\n        this._trackedEditorSelectionId = null;\n    }\n    getEditOperations(model, builder) {\n        if (this._ranges.length > 0) {\n            // Collect all edit operations\n            let ops = [];\n            for (let i = 0; i < this._ranges.length; i++) {\n                ops.push({\n                    range: this._ranges[i],\n                    text: this._replaceStrings[i]\n                });\n            }\n            // Sort them in ascending order by range starts\n            ops.sort((o1, o2) => {\n                return Range.compareRangesUsingStarts(o1.range, o2.range);\n            });\n            // Merge operations that touch each other\n            let resultOps = [];\n            let previousOp = ops[0];\n            for (let i = 1; i < ops.length; i++) {\n                if (previousOp.range.endLineNumber === ops[i].range.startLineNumber && previousOp.range.endColumn === ops[i].range.startColumn) {\n                    // These operations are one after another and can be merged\n                    previousOp.range = previousOp.range.plusRange(ops[i].range);\n                    previousOp.text = previousOp.text + ops[i].text;\n                }\n                else {\n                    resultOps.push(previousOp);\n                    previousOp = ops[i];\n                }\n            }\n            resultOps.push(previousOp);\n            for (const op of resultOps) {\n                builder.addEditOperation(op.range, op.text);\n            }\n        }\n        this._trackedEditorSelectionId = builder.trackSelection(this._editorSelection);\n    }\n    computeCursorState(model, helper) {\n        return helper.getTrackedSelection(this._trackedEditorSelectionId);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { buildReplaceStringWithCasePreserved } from '../../../../base/common/search.js';\n/**\n * Assigned when the replace pattern is entirely static.\n */\nclass StaticValueReplacePattern {\n    constructor(staticValue) {\n        this.staticValue = staticValue;\n        this.kind = 0 /* StaticValue */;\n    }\n}\n/**\n * Assigned when the replace pattern has replacement patterns.\n */\nclass DynamicPiecesReplacePattern {\n    constructor(pieces) {\n        this.pieces = pieces;\n        this.kind = 1 /* DynamicPieces */;\n    }\n}\nexport class ReplacePattern {\n    constructor(pieces) {\n        if (!pieces || pieces.length === 0) {\n            this._state = new StaticValueReplacePattern('');\n        }\n        else if (pieces.length === 1 && pieces[0].staticValue !== null) {\n            this._state = new StaticValueReplacePattern(pieces[0].staticValue);\n        }\n        else {\n            this._state = new DynamicPiecesReplacePattern(pieces);\n        }\n    }\n    static fromStaticValue(value) {\n        return new ReplacePattern([ReplacePiece.staticValue(value)]);\n    }\n    get hasReplacementPatterns() {\n        return (this._state.kind === 1 /* DynamicPieces */);\n    }\n    buildReplaceString(matches, preserveCase) {\n        if (this._state.kind === 0 /* StaticValue */) {\n            if (preserveCase) {\n                return buildReplaceStringWithCasePreserved(matches, this._state.staticValue);\n            }\n            else {\n                return this._state.staticValue;\n            }\n        }\n        let result = '';\n        for (let i = 0, len = this._state.pieces.length; i < len; i++) {\n            let piece = this._state.pieces[i];\n            if (piece.staticValue !== null) {\n                // static value ReplacePiece\n                result += piece.staticValue;\n                continue;\n            }\n            // match index ReplacePiece\n            let match = ReplacePattern._substitute(piece.matchIndex, matches);\n            if (piece.caseOps !== null && piece.caseOps.length > 0) {\n                let repl = [];\n                let lenOps = piece.caseOps.length;\n                let opIdx = 0;\n                for (let idx = 0, len = match.length; idx < len; idx++) {\n                    if (opIdx >= lenOps) {\n                        repl.push(match.slice(idx));\n                        break;\n                    }\n                    switch (piece.caseOps[opIdx]) {\n                        case 'U':\n                            repl.push(match[idx].toUpperCase());\n                            break;\n                        case 'u':\n                            repl.push(match[idx].toUpperCase());\n                            opIdx++;\n                            break;\n                        case 'L':\n                            repl.push(match[idx].toLowerCase());\n                            break;\n                        case 'l':\n                            repl.push(match[idx].toLowerCase());\n                            opIdx++;\n                            break;\n                        default:\n                            repl.push(match[idx]);\n                    }\n                }\n                match = repl.join('');\n            }\n            result += match;\n        }\n        return result;\n    }\n    static _substitute(matchIndex, matches) {\n        if (matches === null) {\n            return '';\n        }\n        if (matchIndex === 0) {\n            return matches[0];\n        }\n        let remainder = '';\n        while (matchIndex > 0) {\n            if (matchIndex < matches.length) {\n                // A match can be undefined\n                let match = (matches[matchIndex] || '');\n                return match + remainder;\n            }\n            remainder = String(matchIndex % 10) + remainder;\n            matchIndex = Math.floor(matchIndex / 10);\n        }\n        return '$' + remainder;\n    }\n}\n/**\n * A replace piece can either be a static string or an index to a specific match.\n */\nexport class ReplacePiece {\n    constructor(staticValue, matchIndex, caseOps) {\n        this.staticValue = staticValue;\n        this.matchIndex = matchIndex;\n        if (!caseOps || caseOps.length === 0) {\n            this.caseOps = null;\n        }\n        else {\n            this.caseOps = caseOps.slice(0);\n        }\n    }\n    static staticValue(value) {\n        return new ReplacePiece(value, -1, null);\n    }\n    static caseOps(index, caseOps) {\n        return new ReplacePiece(null, index, caseOps);\n    }\n}\nclass ReplacePieceBuilder {\n    constructor(source) {\n        this._source = source;\n        this._lastCharIndex = 0;\n        this._result = [];\n        this._resultLen = 0;\n        this._currentStaticPiece = '';\n    }\n    emitUnchanged(toCharIndex) {\n        this._emitStatic(this._source.substring(this._lastCharIndex, toCharIndex));\n        this._lastCharIndex = toCharIndex;\n    }\n    emitStatic(value, toCharIndex) {\n        this._emitStatic(value);\n        this._lastCharIndex = toCharIndex;\n    }\n    _emitStatic(value) {\n        if (value.length === 0) {\n            return;\n        }\n        this._currentStaticPiece += value;\n    }\n    emitMatchIndex(index, toCharIndex, caseOps) {\n        if (this._currentStaticPiece.length !== 0) {\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\n            this._currentStaticPiece = '';\n        }\n        this._result[this._resultLen++] = ReplacePiece.caseOps(index, caseOps);\n        this._lastCharIndex = toCharIndex;\n    }\n    finalize() {\n        this.emitUnchanged(this._source.length);\n        if (this._currentStaticPiece.length !== 0) {\n            this._result[this._resultLen++] = ReplacePiece.staticValue(this._currentStaticPiece);\n            this._currentStaticPiece = '';\n        }\n        return new ReplacePattern(this._result);\n    }\n}\n/**\n * \\n\t\t\t=> inserts a LF\n * \\t\t\t\t=> inserts a TAB\n * \\\\\t\t\t=> inserts a \"\\\".\n * \\u\t\t\t=> upper-cases one character in a match.\n * \\U\t\t\t=> upper-cases ALL remaining characters in a match.\n * \\l\t\t\t=> lower-cases one character in a match.\n * \\L\t\t\t=> lower-cases ALL remaining characters in a match.\n * $$\t\t\t=> inserts a \"$\".\n * $& and $0\t=> inserts the matched substring.\n * $n\t\t\t=> Where n is a non-negative integer lesser than 100, inserts the nth parenthesized submatch string\n * everything else stays untouched\n *\n * Also see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter\n */\nexport function parseReplaceString(replaceString) {\n    if (!replaceString || replaceString.length === 0) {\n        return new ReplacePattern(null);\n    }\n    let caseOps = [];\n    let result = new ReplacePieceBuilder(replaceString);\n    for (let i = 0, len = replaceString.length; i < len; i++) {\n        let chCode = replaceString.charCodeAt(i);\n        if (chCode === 92 /* Backslash */) {\n            // move to next char\n            i++;\n            if (i >= len) {\n                // string ends with a \\\n                break;\n            }\n            let nextChCode = replaceString.charCodeAt(i);\n            // let replaceWithCharacter: string | null = null;\n            switch (nextChCode) {\n                case 92 /* Backslash */:\n                    // \\\\ => inserts a \"\\\"\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\\\', i + 1);\n                    break;\n                case 110 /* n */:\n                    // \\n => inserts a LF\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\n', i + 1);\n                    break;\n                case 116 /* t */:\n                    // \\t => inserts a TAB\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('\\t', i + 1);\n                    break;\n                // Case modification of string replacements, patterned after Boost, but only applied\n                // to the replacement text, not subsequent content.\n                case 117 /* u */:\n                // \\u => upper-cases one character.\n                case 85 /* U */:\n                // \\U => upper-cases ALL following characters.\n                case 108 /* l */:\n                // \\l => lower-cases one character.\n                case 76 /* L */:\n                    // \\L => lower-cases ALL following characters.\n                    result.emitUnchanged(i - 1);\n                    result.emitStatic('', i + 1);\n                    caseOps.push(String.fromCharCode(nextChCode));\n                    break;\n            }\n            continue;\n        }\n        if (chCode === 36 /* DollarSign */) {\n            // move to next char\n            i++;\n            if (i >= len) {\n                // string ends with a $\n                break;\n            }\n            let nextChCode = replaceString.charCodeAt(i);\n            if (nextChCode === 36 /* DollarSign */) {\n                // $$ => inserts a \"$\"\n                result.emitUnchanged(i - 1);\n                result.emitStatic('$', i + 1);\n                continue;\n            }\n            if (nextChCode === 48 /* Digit0 */ || nextChCode === 38 /* Ampersand */) {\n                // $& and $0 => inserts the matched substring.\n                result.emitUnchanged(i - 1);\n                result.emitMatchIndex(0, i + 1, caseOps);\n                caseOps.length = 0;\n                continue;\n            }\n            if (49 /* Digit1 */ <= nextChCode && nextChCode <= 57 /* Digit9 */) {\n                // $n\n                let matchIndex = nextChCode - 48 /* Digit0 */;\n                // peek next char to probe for $nn\n                if (i + 1 < len) {\n                    let nextNextChCode = replaceString.charCodeAt(i + 1);\n                    if (48 /* Digit0 */ <= nextNextChCode && nextNextChCode <= 57 /* Digit9 */) {\n                        // $nn\n                        // move to next char\n                        i++;\n                        matchIndex = matchIndex * 10 + (nextNextChCode - 48 /* Digit0 */);\n                        result.emitUnchanged(i - 2);\n                        result.emitMatchIndex(matchIndex, i + 1, caseOps);\n                        caseOps.length = 0;\n                        continue;\n                    }\n                }\n                result.emitUnchanged(i - 1);\n                result.emitMatchIndex(matchIndex, i + 1, caseOps);\n                caseOps.length = 0;\n                continue;\n            }\n        }\n    }\n    return result.finalize();\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { findFirstInSorted } from '../../../../base/common/arrays.js';\nimport { RunOnceScheduler, TimeoutTimer } from '../../../../base/common/async.js';\nimport { DisposableStore, dispose } from '../../../../base/common/lifecycle.js';\nimport { ReplaceCommand, ReplaceCommandThatPreservesSelection } from '../../../common/commands/replaceCommand.js';\nimport { Position } from '../../../common/core/position.js';\nimport { Range } from '../../../common/core/range.js';\nimport { Selection } from '../../../common/core/selection.js';\nimport { SearchParams } from '../../../common/model/textModelSearch.js';\nimport { FindDecorations } from './findDecorations.js';\nimport { ReplaceAllCommand } from './replaceAllCommand.js';\nimport { parseReplaceString, ReplacePattern } from './replacePattern.js';\nimport { RawContextKey } from '../../../../platform/contextkey/common/contextkey.js';\nexport const CONTEXT_FIND_WIDGET_VISIBLE = new RawContextKey('findWidgetVisible', false);\nexport const CONTEXT_FIND_WIDGET_NOT_VISIBLE = CONTEXT_FIND_WIDGET_VISIBLE.toNegated();\n// Keep ContextKey use of 'Focussed' to not break when clauses\nexport const CONTEXT_FIND_INPUT_FOCUSED = new RawContextKey('findInputFocussed', false);\nexport const CONTEXT_REPLACE_INPUT_FOCUSED = new RawContextKey('replaceInputFocussed', false);\nexport const ToggleCaseSensitiveKeybinding = {\n    primary: 512 /* Alt */ | 33 /* KeyC */,\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 33 /* KeyC */ }\n};\nexport const ToggleWholeWordKeybinding = {\n    primary: 512 /* Alt */ | 53 /* KeyW */,\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 53 /* KeyW */ }\n};\nexport const ToggleRegexKeybinding = {\n    primary: 512 /* Alt */ | 48 /* KeyR */,\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 48 /* KeyR */ }\n};\nexport const ToggleSearchScopeKeybinding = {\n    primary: 512 /* Alt */ | 42 /* KeyL */,\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 42 /* KeyL */ }\n};\nexport const TogglePreserveCaseKeybinding = {\n    primary: 512 /* Alt */ | 46 /* KeyP */,\n    mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 46 /* KeyP */ }\n};\nexport const FIND_IDS = {\n    StartFindAction: 'actions.find',\n    StartFindWithSelection: 'actions.findWithSelection',\n    StartFindWithArgs: 'editor.actions.findWithArgs',\n    NextMatchFindAction: 'editor.action.nextMatchFindAction',\n    PreviousMatchFindAction: 'editor.action.previousMatchFindAction',\n    NextSelectionMatchFindAction: 'editor.action.nextSelectionMatchFindAction',\n    PreviousSelectionMatchFindAction: 'editor.action.previousSelectionMatchFindAction',\n    StartFindReplaceAction: 'editor.action.startFindReplaceAction',\n    CloseFindWidgetCommand: 'closeFindWidget',\n    ToggleCaseSensitiveCommand: 'toggleFindCaseSensitive',\n    ToggleWholeWordCommand: 'toggleFindWholeWord',\n    ToggleRegexCommand: 'toggleFindRegex',\n    ToggleSearchScopeCommand: 'toggleFindInSelection',\n    TogglePreserveCaseCommand: 'togglePreserveCase',\n    ReplaceOneAction: 'editor.action.replaceOne',\n    ReplaceAllAction: 'editor.action.replaceAll',\n    SelectAllMatchesAction: 'editor.action.selectAllMatches'\n};\nexport const MATCHES_LIMIT = 19999;\nconst RESEARCH_DELAY = 240;\nexport class FindModelBoundToEditorModel {\n    constructor(editor, state) {\n        this._toDispose = new DisposableStore();\n        this._editor = editor;\n        this._state = state;\n        this._isDisposed = false;\n        this._startSearchingTimer = new TimeoutTimer();\n        this._decorations = new FindDecorations(editor);\n        this._toDispose.add(this._decorations);\n        this._updateDecorationsScheduler = new RunOnceScheduler(() => this.research(false), 100);\n        this._toDispose.add(this._updateDecorationsScheduler);\n        this._toDispose.add(this._editor.onDidChangeCursorPosition((e) => {\n            if (e.reason === 3 /* Explicit */\n                || e.reason === 5 /* Undo */\n                || e.reason === 6 /* Redo */) {\n                this._decorations.setStartPosition(this._editor.getPosition());\n            }\n        }));\n        this._ignoreModelContentChanged = false;\n        this._toDispose.add(this._editor.onDidChangeModelContent((e) => {\n            if (this._ignoreModelContentChanged) {\n                return;\n            }\n            if (e.isFlush) {\n                // a model.setValue() was called\n                this._decorations.reset();\n            }\n            this._decorations.setStartPosition(this._editor.getPosition());\n            this._updateDecorationsScheduler.schedule();\n        }));\n        this._toDispose.add(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this.research(false, this._state.searchScope);\n    }\n    dispose() {\n        this._isDisposed = true;\n        dispose(this._startSearchingTimer);\n        this._toDispose.dispose();\n    }\n    _onStateChanged(e) {\n        if (this._isDisposed) {\n            // The find model is disposed during a find state changed event\n            return;\n        }\n        if (!this._editor.hasModel()) {\n            // The find model will be disposed momentarily\n            return;\n        }\n        if (e.searchString || e.isReplaceRevealed || e.isRegex || e.wholeWord || e.matchCase || e.searchScope) {\n            let model = this._editor.getModel();\n            if (model.isTooLargeForSyncing()) {\n                this._startSearchingTimer.cancel();\n                this._startSearchingTimer.setIfNotSet(() => {\n                    if (e.searchScope) {\n                        this.research(e.moveCursor, this._state.searchScope);\n                    }\n                    else {\n                        this.research(e.moveCursor);\n                    }\n                }, RESEARCH_DELAY);\n            }\n            else {\n                if (e.searchScope) {\n                    this.research(e.moveCursor, this._state.searchScope);\n                }\n                else {\n                    this.research(e.moveCursor);\n                }\n            }\n        }\n    }\n    static _getSearchRange(model, findScope) {\n        // If we have set now or before a find scope, use it for computing the search range\n        if (findScope) {\n            return findScope;\n        }\n        return model.getFullModelRange();\n    }\n    research(moveCursor, newFindScope) {\n        let findScopes = null;\n        if (typeof newFindScope !== 'undefined') {\n            if (newFindScope !== null) {\n                if (!Array.isArray(newFindScope)) {\n                    findScopes = [newFindScope];\n                }\n                else {\n                    findScopes = newFindScope;\n                }\n            }\n        }\n        else {\n            findScopes = this._decorations.getFindScopes();\n        }\n        if (findScopes !== null) {\n            findScopes = findScopes.map(findScope => {\n                if (findScope.startLineNumber !== findScope.endLineNumber) {\n                    let endLineNumber = findScope.endLineNumber;\n                    if (findScope.endColumn === 1) {\n                        endLineNumber = endLineNumber - 1;\n                    }\n                    return new Range(findScope.startLineNumber, 1, endLineNumber, this._editor.getModel().getLineMaxColumn(endLineNumber));\n                }\n                return findScope;\n            });\n        }\n        let findMatches = this._findMatches(findScopes, false, MATCHES_LIMIT);\n        this._decorations.set(findMatches, findScopes);\n        const editorSelection = this._editor.getSelection();\n        let currentMatchesPosition = this._decorations.getCurrentMatchesPosition(editorSelection);\n        if (currentMatchesPosition === 0 && findMatches.length > 0) {\n            // current selection is not on top of a match\n            // try to find its nearest result from the top of the document\n            const matchAfterSelection = findFirstInSorted(findMatches.map(match => match.range), range => Range.compareRangesUsingStarts(range, editorSelection) >= 0);\n            currentMatchesPosition = matchAfterSelection > 0 ? matchAfterSelection - 1 + 1 /** match position is one based */ : currentMatchesPosition;\n        }\n        this._state.changeMatchInfo(currentMatchesPosition, this._decorations.getCount(), undefined);\n        if (moveCursor && this._editor.getOption(35 /* find */).cursorMoveOnType) {\n            this._moveToNextMatch(this._decorations.getStartPosition());\n        }\n    }\n    _hasMatches() {\n        return (this._state.matchesCount > 0);\n    }\n    _cannotFind() {\n        if (!this._hasMatches()) {\n            let findScope = this._decorations.getFindScope();\n            if (findScope) {\n                // Reveal the selection so user is reminded that 'selection find' is on.\n                this._editor.revealRangeInCenterIfOutsideViewport(findScope, 0 /* Smooth */);\n            }\n            return true;\n        }\n        return false;\n    }\n    _setCurrentFindMatch(match) {\n        let matchesPosition = this._decorations.setCurrentFindMatch(match);\n        this._state.changeMatchInfo(matchesPosition, this._decorations.getCount(), match);\n        this._editor.setSelection(match);\n        this._editor.revealRangeInCenterIfOutsideViewport(match, 0 /* Smooth */);\n    }\n    _prevSearchPosition(before) {\n        let isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\n            || this._state.searchString.indexOf('$') >= 0);\n        let { lineNumber, column } = before;\n        let model = this._editor.getModel();\n        if (isUsingLineStops || column === 1) {\n            if (lineNumber === 1) {\n                lineNumber = model.getLineCount();\n            }\n            else {\n                lineNumber--;\n            }\n            column = model.getLineMaxColumn(lineNumber);\n        }\n        else {\n            column--;\n        }\n        return new Position(lineNumber, column);\n    }\n    _moveToPrevMatch(before, isRecursed = false) {\n        if (!this._state.canNavigateBack()) {\n            // we are beyond the first matched find result\n            // instead of doing nothing, we should refocus the first item\n            const nextMatchRange = this._decorations.matchAfterPosition(before);\n            if (nextMatchRange) {\n                this._setCurrentFindMatch(nextMatchRange);\n            }\n            return;\n        }\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\n            let prevMatchRange = this._decorations.matchBeforePosition(before);\n            if (prevMatchRange && prevMatchRange.isEmpty() && prevMatchRange.getStartPosition().equals(before)) {\n                before = this._prevSearchPosition(before);\n                prevMatchRange = this._decorations.matchBeforePosition(before);\n            }\n            if (prevMatchRange) {\n                this._setCurrentFindMatch(prevMatchRange);\n            }\n            return;\n        }\n        if (this._cannotFind()) {\n            return;\n        }\n        let findScope = this._decorations.getFindScope();\n        let searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n        // ...(----)...|...\n        if (searchRange.getEndPosition().isBefore(before)) {\n            before = searchRange.getEndPosition();\n        }\n        // ...|...(----)...\n        if (before.isBefore(searchRange.getStartPosition())) {\n            before = searchRange.getEndPosition();\n        }\n        let { lineNumber, column } = before;\n        let model = this._editor.getModel();\n        let position = new Position(lineNumber, column);\n        let prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(117 /* wordSeparators */) : null, false);\n        if (prevMatch && prevMatch.range.isEmpty() && prevMatch.range.getStartPosition().equals(position)) {\n            // Looks like we're stuck at this position, unacceptable!\n            position = this._prevSearchPosition(position);\n            prevMatch = model.findPreviousMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(117 /* wordSeparators */) : null, false);\n        }\n        if (!prevMatch) {\n            // there is precisely one match and selection is on top of it\n            return;\n        }\n        if (!isRecursed && !searchRange.containsRange(prevMatch.range)) {\n            return this._moveToPrevMatch(prevMatch.range.getStartPosition(), true);\n        }\n        this._setCurrentFindMatch(prevMatch.range);\n    }\n    moveToPrevMatch() {\n        this._moveToPrevMatch(this._editor.getSelection().getStartPosition());\n    }\n    _nextSearchPosition(after) {\n        let isUsingLineStops = this._state.isRegex && (this._state.searchString.indexOf('^') >= 0\n            || this._state.searchString.indexOf('$') >= 0);\n        let { lineNumber, column } = after;\n        let model = this._editor.getModel();\n        if (isUsingLineStops || column === model.getLineMaxColumn(lineNumber)) {\n            if (lineNumber === model.getLineCount()) {\n                lineNumber = 1;\n            }\n            else {\n                lineNumber++;\n            }\n            column = 1;\n        }\n        else {\n            column++;\n        }\n        return new Position(lineNumber, column);\n    }\n    _moveToNextMatch(after) {\n        if (!this._state.canNavigateForward()) {\n            // we are beyond the last matched find result\n            // instead of doing nothing, we should refocus the last item\n            const prevMatchRange = this._decorations.matchBeforePosition(after);\n            if (prevMatchRange) {\n                this._setCurrentFindMatch(prevMatchRange);\n            }\n            return;\n        }\n        if (this._decorations.getCount() < MATCHES_LIMIT) {\n            let nextMatchRange = this._decorations.matchAfterPosition(after);\n            if (nextMatchRange && nextMatchRange.isEmpty() && nextMatchRange.getStartPosition().equals(after)) {\n                // Looks like we're stuck at this position, unacceptable!\n                after = this._nextSearchPosition(after);\n                nextMatchRange = this._decorations.matchAfterPosition(after);\n            }\n            if (nextMatchRange) {\n                this._setCurrentFindMatch(nextMatchRange);\n            }\n            return;\n        }\n        let nextMatch = this._getNextMatch(after, false, true);\n        if (nextMatch) {\n            this._setCurrentFindMatch(nextMatch.range);\n        }\n    }\n    _getNextMatch(after, captureMatches, forceMove, isRecursed = false) {\n        if (this._cannotFind()) {\n            return null;\n        }\n        let findScope = this._decorations.getFindScope();\n        let searchRange = FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), findScope);\n        // ...(----)...|...\n        if (searchRange.getEndPosition().isBefore(after)) {\n            after = searchRange.getStartPosition();\n        }\n        // ...|...(----)...\n        if (after.isBefore(searchRange.getStartPosition())) {\n            after = searchRange.getStartPosition();\n        }\n        let { lineNumber, column } = after;\n        let model = this._editor.getModel();\n        let position = new Position(lineNumber, column);\n        let nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(117 /* wordSeparators */) : null, captureMatches);\n        if (forceMove && nextMatch && nextMatch.range.isEmpty() && nextMatch.range.getStartPosition().equals(position)) {\n            // Looks like we're stuck at this position, unacceptable!\n            position = this._nextSearchPosition(position);\n            nextMatch = model.findNextMatch(this._state.searchString, position, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(117 /* wordSeparators */) : null, captureMatches);\n        }\n        if (!nextMatch) {\n            // there is precisely one match and selection is on top of it\n            return null;\n        }\n        if (!isRecursed && !searchRange.containsRange(nextMatch.range)) {\n            return this._getNextMatch(nextMatch.range.getEndPosition(), captureMatches, forceMove, true);\n        }\n        return nextMatch;\n    }\n    moveToNextMatch() {\n        this._moveToNextMatch(this._editor.getSelection().getEndPosition());\n    }\n    _getReplacePattern() {\n        if (this._state.isRegex) {\n            return parseReplaceString(this._state.replaceString);\n        }\n        return ReplacePattern.fromStaticValue(this._state.replaceString);\n    }\n    replace() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        let replacePattern = this._getReplacePattern();\n        let selection = this._editor.getSelection();\n        let nextMatch = this._getNextMatch(selection.getStartPosition(), true, false);\n        if (nextMatch) {\n            if (selection.equalsRange(nextMatch.range)) {\n                // selection sits on a find match => replace it!\n                let replaceString = replacePattern.buildReplaceString(nextMatch.matches, this._state.preserveCase);\n                let command = new ReplaceCommand(selection, replaceString);\n                this._executeEditorCommand('replace', command);\n                this._decorations.setStartPosition(new Position(selection.startLineNumber, selection.startColumn + replaceString.length));\n                this.research(true);\n            }\n            else {\n                this._decorations.setStartPosition(this._editor.getPosition());\n                this._setCurrentFindMatch(nextMatch.range);\n            }\n        }\n    }\n    _findMatches(findScopes, captureMatches, limitResultCount) {\n        const searchRanges = (findScopes || [null]).map((scope) => FindModelBoundToEditorModel._getSearchRange(this._editor.getModel(), scope));\n        return this._editor.getModel().findMatches(this._state.searchString, searchRanges, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(117 /* wordSeparators */) : null, captureMatches, limitResultCount);\n    }\n    replaceAll() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        const findScopes = this._decorations.getFindScopes();\n        if (findScopes === null && this._state.matchesCount >= MATCHES_LIMIT) {\n            // Doing a replace on the entire file that is over ${MATCHES_LIMIT} matches\n            this._largeReplaceAll();\n        }\n        else {\n            this._regularReplaceAll(findScopes);\n        }\n        this.research(false);\n    }\n    _largeReplaceAll() {\n        const searchParams = new SearchParams(this._state.searchString, this._state.isRegex, this._state.matchCase, this._state.wholeWord ? this._editor.getOption(117 /* wordSeparators */) : null);\n        const searchData = searchParams.parseSearchRequest();\n        if (!searchData) {\n            return;\n        }\n        let searchRegex = searchData.regex;\n        if (!searchRegex.multiline) {\n            let mod = 'mu';\n            if (searchRegex.ignoreCase) {\n                mod += 'i';\n            }\n            if (searchRegex.global) {\n                mod += 'g';\n            }\n            searchRegex = new RegExp(searchRegex.source, mod);\n        }\n        const model = this._editor.getModel();\n        const modelText = model.getValue(1 /* LF */);\n        const fullModelRange = model.getFullModelRange();\n        const replacePattern = this._getReplacePattern();\n        let resultText;\n        const preserveCase = this._state.preserveCase;\n        if (replacePattern.hasReplacementPatterns || preserveCase) {\n            resultText = modelText.replace(searchRegex, function () {\n                return replacePattern.buildReplaceString(arguments, preserveCase);\n            });\n        }\n        else {\n            resultText = modelText.replace(searchRegex, replacePattern.buildReplaceString(null, preserveCase));\n        }\n        let command = new ReplaceCommandThatPreservesSelection(fullModelRange, resultText, this._editor.getSelection());\n        this._executeEditorCommand('replaceAll', command);\n    }\n    _regularReplaceAll(findScopes) {\n        const replacePattern = this._getReplacePattern();\n        // Get all the ranges (even more than the highlighted ones)\n        let matches = this._findMatches(findScopes, replacePattern.hasReplacementPatterns || this._state.preserveCase, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\n        let replaceStrings = [];\n        for (let i = 0, len = matches.length; i < len; i++) {\n            replaceStrings[i] = replacePattern.buildReplaceString(matches[i].matches, this._state.preserveCase);\n        }\n        let command = new ReplaceAllCommand(this._editor.getSelection(), matches.map(m => m.range), replaceStrings);\n        this._executeEditorCommand('replaceAll', command);\n    }\n    selectAllMatches() {\n        if (!this._hasMatches()) {\n            return;\n        }\n        let findScopes = this._decorations.getFindScopes();\n        // Get all the ranges (even more than the highlighted ones)\n        let matches = this._findMatches(findScopes, false, 1073741824 /* MAX_SAFE_SMALL_INTEGER */);\n        let selections = matches.map(m => new Selection(m.range.startLineNumber, m.range.startColumn, m.range.endLineNumber, m.range.endColumn));\n        // If one of the ranges is the editor selection, then maintain it as primary\n        let editorSelection = this._editor.getSelection();\n        for (let i = 0, len = selections.length; i < len; i++) {\n            let sel = selections[i];\n            if (sel.equalsRange(editorSelection)) {\n                selections = [editorSelection].concat(selections.slice(0, i)).concat(selections.slice(i + 1));\n                break;\n            }\n        }\n        this._editor.setSelections(selections);\n    }\n    _executeEditorCommand(source, command) {\n        try {\n            this._ignoreModelContentChanged = true;\n            this._editor.pushUndoStop();\n            this._editor.executeCommand(source, command);\n            this._editor.pushUndoStop();\n        }\n        finally {\n            this._ignoreModelContentChanged = false;\n        }\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as dom from '../../../../base/browser/dom.js';\nimport { CaseSensitiveCheckbox, RegexCheckbox, WholeWordsCheckbox } from '../../../../base/browser/ui/findinput/findInputCheckboxes.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { RunOnceScheduler } from '../../../../base/common/async.js';\nimport { FIND_IDS } from './findModel.js';\nimport { contrastBorder, editorWidgetBackground, editorWidgetForeground, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground, widgetShadow } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerThemingParticipant } from '../../../../platform/theme/common/themeService.js';\nexport class FindOptionsWidget extends Widget {\n    constructor(editor, state, keybindingService, themeService) {\n        super();\n        this._hideSoon = this._register(new RunOnceScheduler(() => this._hide(), 2000));\n        this._isVisible = false;\n        this._editor = editor;\n        this._state = state;\n        this._keybindingService = keybindingService;\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'findOptionsWidget';\n        this._domNode.style.display = 'none';\n        this._domNode.style.top = '10px';\n        this._domNode.setAttribute('role', 'presentation');\n        this._domNode.setAttribute('aria-hidden', 'true');\n        const inputActiveOptionBorderColor = themeService.getColorTheme().getColor(inputActiveOptionBorder);\n        const inputActiveOptionForegroundColor = themeService.getColorTheme().getColor(inputActiveOptionForeground);\n        const inputActiveOptionBackgroundColor = themeService.getColorTheme().getColor(inputActiveOptionBackground);\n        this.caseSensitive = this._register(new CaseSensitiveCheckbox({\n            appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\n            isChecked: this._state.matchCase,\n            inputActiveOptionBorder: inputActiveOptionBorderColor,\n            inputActiveOptionForeground: inputActiveOptionForegroundColor,\n            inputActiveOptionBackground: inputActiveOptionBackgroundColor\n        }));\n        this._domNode.appendChild(this.caseSensitive.domNode);\n        this._register(this.caseSensitive.onChange(() => {\n            this._state.change({\n                matchCase: this.caseSensitive.checked\n            }, false);\n        }));\n        this.wholeWords = this._register(new WholeWordsCheckbox({\n            appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\n            isChecked: this._state.wholeWord,\n            inputActiveOptionBorder: inputActiveOptionBorderColor,\n            inputActiveOptionForeground: inputActiveOptionForegroundColor,\n            inputActiveOptionBackground: inputActiveOptionBackgroundColor\n        }));\n        this._domNode.appendChild(this.wholeWords.domNode);\n        this._register(this.wholeWords.onChange(() => {\n            this._state.change({\n                wholeWord: this.wholeWords.checked\n            }, false);\n        }));\n        this.regex = this._register(new RegexCheckbox({\n            appendTitle: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\n            isChecked: this._state.isRegex,\n            inputActiveOptionBorder: inputActiveOptionBorderColor,\n            inputActiveOptionForeground: inputActiveOptionForegroundColor,\n            inputActiveOptionBackground: inputActiveOptionBackgroundColor\n        }));\n        this._domNode.appendChild(this.regex.domNode);\n        this._register(this.regex.onChange(() => {\n            this._state.change({\n                isRegex: this.regex.checked\n            }, false);\n        }));\n        this._editor.addOverlayWidget(this);\n        this._register(this._state.onFindReplaceStateChange((e) => {\n            let somethingChanged = false;\n            if (e.isRegex) {\n                this.regex.checked = this._state.isRegex;\n                somethingChanged = true;\n            }\n            if (e.wholeWord) {\n                this.wholeWords.checked = this._state.wholeWord;\n                somethingChanged = true;\n            }\n            if (e.matchCase) {\n                this.caseSensitive.checked = this._state.matchCase;\n                somethingChanged = true;\n            }\n            if (!this._state.isRevealed && somethingChanged) {\n                this._revealTemporarily();\n            }\n        }));\n        this._register(dom.addDisposableNonBubblingMouseOutListener(this._domNode, (e) => this._onMouseOut()));\n        this._register(dom.addDisposableListener(this._domNode, 'mouseover', (e) => this._onMouseOver()));\n        this._applyTheme(themeService.getColorTheme());\n        this._register(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\n    }\n    _keybindingLabelFor(actionId) {\n        let kb = this._keybindingService.lookupKeybinding(actionId);\n        if (!kb) {\n            return '';\n        }\n        return ` (${kb.getLabel()})`;\n    }\n    dispose() {\n        this._editor.removeOverlayWidget(this);\n        super.dispose();\n    }\n    // ----- IOverlayWidget API\n    getId() {\n        return FindOptionsWidget.ID;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        return {\n            preference: 0 /* TOP_RIGHT_CORNER */\n        };\n    }\n    highlightFindOptions() {\n        this._revealTemporarily();\n    }\n    _revealTemporarily() {\n        this._show();\n        this._hideSoon.schedule();\n    }\n    _onMouseOut() {\n        this._hideSoon.schedule();\n    }\n    _onMouseOver() {\n        this._hideSoon.cancel();\n    }\n    _show() {\n        if (this._isVisible) {\n            return;\n        }\n        this._isVisible = true;\n        this._domNode.style.display = 'block';\n    }\n    _hide() {\n        if (!this._isVisible) {\n            return;\n        }\n        this._isVisible = false;\n        this._domNode.style.display = 'none';\n    }\n    _applyTheme(theme) {\n        let inputStyles = {\n            inputActiveOptionBorder: theme.getColor(inputActiveOptionBorder),\n            inputActiveOptionForeground: theme.getColor(inputActiveOptionForeground),\n            inputActiveOptionBackground: theme.getColor(inputActiveOptionBackground)\n        };\n        this.caseSensitive.style(inputStyles);\n        this.wholeWords.style(inputStyles);\n        this.regex.style(inputStyles);\n    }\n}\nFindOptionsWidget.ID = 'editor.contrib.findOptionsWidget';\nregisterThemingParticipant((theme, collector) => {\n    const widgetBackground = theme.getColor(editorWidgetBackground);\n    if (widgetBackground) {\n        collector.addRule(`.monaco-editor .findOptionsWidget { background-color: ${widgetBackground}; }`);\n    }\n    const widgetForeground = theme.getColor(editorWidgetForeground);\n    if (widgetForeground) {\n        collector.addRule(`.monaco-editor .findOptionsWidget { color: ${widgetForeground}; }`);\n    }\n    const widgetShadowColor = theme.getColor(widgetShadow);\n    if (widgetShadowColor) {\n        collector.addRule(`.monaco-editor .findOptionsWidget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);\n    }\n    const hcBorder = theme.getColor(contrastBorder);\n    if (hcBorder) {\n        collector.addRule(`.monaco-editor .findOptionsWidget { border: 2px solid ${hcBorder}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { Emitter } from '../../../../base/common/event.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport { Range } from '../../../common/core/range.js';\nimport { MATCHES_LIMIT } from './findModel.js';\nfunction effectiveOptionValue(override, value) {\n    if (override === 1 /* True */) {\n        return true;\n    }\n    if (override === 2 /* False */) {\n        return false;\n    }\n    return value;\n}\nexport class FindReplaceState extends Disposable {\n    constructor() {\n        super();\n        this._onFindReplaceStateChange = this._register(new Emitter());\n        this.onFindReplaceStateChange = this._onFindReplaceStateChange.event;\n        this._searchString = '';\n        this._replaceString = '';\n        this._isRevealed = false;\n        this._isReplaceRevealed = false;\n        this._isRegex = false;\n        this._isRegexOverride = 0 /* NotSet */;\n        this._wholeWord = false;\n        this._wholeWordOverride = 0 /* NotSet */;\n        this._matchCase = false;\n        this._matchCaseOverride = 0 /* NotSet */;\n        this._preserveCase = false;\n        this._preserveCaseOverride = 0 /* NotSet */;\n        this._searchScope = null;\n        this._matchesPosition = 0;\n        this._matchesCount = 0;\n        this._currentMatch = null;\n        this._loop = true;\n        this._isSearching = false;\n        this._filters = null;\n    }\n    get searchString() { return this._searchString; }\n    get replaceString() { return this._replaceString; }\n    get isRevealed() { return this._isRevealed; }\n    get isReplaceRevealed() { return this._isReplaceRevealed; }\n    get isRegex() { return effectiveOptionValue(this._isRegexOverride, this._isRegex); }\n    get wholeWord() { return effectiveOptionValue(this._wholeWordOverride, this._wholeWord); }\n    get matchCase() { return effectiveOptionValue(this._matchCaseOverride, this._matchCase); }\n    get preserveCase() { return effectiveOptionValue(this._preserveCaseOverride, this._preserveCase); }\n    get actualIsRegex() { return this._isRegex; }\n    get actualWholeWord() { return this._wholeWord; }\n    get actualMatchCase() { return this._matchCase; }\n    get actualPreserveCase() { return this._preserveCase; }\n    get searchScope() { return this._searchScope; }\n    get matchesPosition() { return this._matchesPosition; }\n    get matchesCount() { return this._matchesCount; }\n    get currentMatch() { return this._currentMatch; }\n    changeMatchInfo(matchesPosition, matchesCount, currentMatch) {\n        let changeEvent = {\n            moveCursor: false,\n            updateHistory: false,\n            searchString: false,\n            replaceString: false,\n            isRevealed: false,\n            isReplaceRevealed: false,\n            isRegex: false,\n            wholeWord: false,\n            matchCase: false,\n            preserveCase: false,\n            searchScope: false,\n            matchesPosition: false,\n            matchesCount: false,\n            currentMatch: false,\n            loop: false,\n            isSearching: false,\n            filters: false\n        };\n        let somethingChanged = false;\n        if (matchesCount === 0) {\n            matchesPosition = 0;\n        }\n        if (matchesPosition > matchesCount) {\n            matchesPosition = matchesCount;\n        }\n        if (this._matchesPosition !== matchesPosition) {\n            this._matchesPosition = matchesPosition;\n            changeEvent.matchesPosition = true;\n            somethingChanged = true;\n        }\n        if (this._matchesCount !== matchesCount) {\n            this._matchesCount = matchesCount;\n            changeEvent.matchesCount = true;\n            somethingChanged = true;\n        }\n        if (typeof currentMatch !== 'undefined') {\n            if (!Range.equalsRange(this._currentMatch, currentMatch)) {\n                this._currentMatch = currentMatch;\n                changeEvent.currentMatch = true;\n                somethingChanged = true;\n            }\n        }\n        if (somethingChanged) {\n            this._onFindReplaceStateChange.fire(changeEvent);\n        }\n    }\n    change(newState, moveCursor, updateHistory = true) {\n        var _a;\n        let changeEvent = {\n            moveCursor: moveCursor,\n            updateHistory: updateHistory,\n            searchString: false,\n            replaceString: false,\n            isRevealed: false,\n            isReplaceRevealed: false,\n            isRegex: false,\n            wholeWord: false,\n            matchCase: false,\n            preserveCase: false,\n            searchScope: false,\n            matchesPosition: false,\n            matchesCount: false,\n            currentMatch: false,\n            loop: false,\n            isSearching: false,\n            filters: false\n        };\n        let somethingChanged = false;\n        const oldEffectiveIsRegex = this.isRegex;\n        const oldEffectiveWholeWords = this.wholeWord;\n        const oldEffectiveMatchCase = this.matchCase;\n        const oldEffectivePreserveCase = this.preserveCase;\n        if (typeof newState.searchString !== 'undefined') {\n            if (this._searchString !== newState.searchString) {\n                this._searchString = newState.searchString;\n                changeEvent.searchString = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.replaceString !== 'undefined') {\n            if (this._replaceString !== newState.replaceString) {\n                this._replaceString = newState.replaceString;\n                changeEvent.replaceString = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isRevealed !== 'undefined') {\n            if (this._isRevealed !== newState.isRevealed) {\n                this._isRevealed = newState.isRevealed;\n                changeEvent.isRevealed = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isReplaceRevealed !== 'undefined') {\n            if (this._isReplaceRevealed !== newState.isReplaceRevealed) {\n                this._isReplaceRevealed = newState.isReplaceRevealed;\n                changeEvent.isReplaceRevealed = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isRegex !== 'undefined') {\n            this._isRegex = newState.isRegex;\n        }\n        if (typeof newState.wholeWord !== 'undefined') {\n            this._wholeWord = newState.wholeWord;\n        }\n        if (typeof newState.matchCase !== 'undefined') {\n            this._matchCase = newState.matchCase;\n        }\n        if (typeof newState.preserveCase !== 'undefined') {\n            this._preserveCase = newState.preserveCase;\n        }\n        if (typeof newState.searchScope !== 'undefined') {\n            if (!((_a = newState.searchScope) === null || _a === void 0 ? void 0 : _a.every((newSearchScope) => {\n                var _a;\n                return (_a = this._searchScope) === null || _a === void 0 ? void 0 : _a.some(existingSearchScope => {\n                    return !Range.equalsRange(existingSearchScope, newSearchScope);\n                });\n            }))) {\n                this._searchScope = newState.searchScope;\n                changeEvent.searchScope = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.loop !== 'undefined') {\n            if (this._loop !== newState.loop) {\n                this._loop = newState.loop;\n                changeEvent.loop = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.isSearching !== 'undefined') {\n            if (this._isSearching !== newState.isSearching) {\n                this._isSearching = newState.isSearching;\n                changeEvent.isSearching = true;\n                somethingChanged = true;\n            }\n        }\n        if (typeof newState.filters !== 'undefined') {\n            if (this._filters) {\n                this._filters.update(newState.filters);\n            }\n            else {\n                this._filters = newState.filters;\n            }\n            changeEvent.filters = true;\n            somethingChanged = true;\n        }\n        // Overrides get set when they explicitly come in and get reset anytime something else changes\n        this._isRegexOverride = (typeof newState.isRegexOverride !== 'undefined' ? newState.isRegexOverride : 0 /* NotSet */);\n        this._wholeWordOverride = (typeof newState.wholeWordOverride !== 'undefined' ? newState.wholeWordOverride : 0 /* NotSet */);\n        this._matchCaseOverride = (typeof newState.matchCaseOverride !== 'undefined' ? newState.matchCaseOverride : 0 /* NotSet */);\n        this._preserveCaseOverride = (typeof newState.preserveCaseOverride !== 'undefined' ? newState.preserveCaseOverride : 0 /* NotSet */);\n        if (oldEffectiveIsRegex !== this.isRegex) {\n            somethingChanged = true;\n            changeEvent.isRegex = true;\n        }\n        if (oldEffectiveWholeWords !== this.wholeWord) {\n            somethingChanged = true;\n            changeEvent.wholeWord = true;\n        }\n        if (oldEffectiveMatchCase !== this.matchCase) {\n            somethingChanged = true;\n            changeEvent.matchCase = true;\n        }\n        if (oldEffectivePreserveCase !== this.preserveCase) {\n            somethingChanged = true;\n            changeEvent.preserveCase = true;\n        }\n        if (somethingChanged) {\n            this._onFindReplaceStateChange.fire(changeEvent);\n        }\n    }\n    canNavigateBack() {\n        return this.canNavigateInLoop() || (this.matchesPosition !== 1);\n    }\n    canNavigateForward() {\n        return this.canNavigateInLoop() || (this.matchesPosition < this.matchesCount);\n    }\n    canNavigateInLoop() {\n        return this._loop || (this.matchesCount >= MATCHES_LIMIT);\n    }\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport * as dom from '../../../../base/browser/dom.js';\nimport { alert as alertFn } from '../../../../base/browser/ui/aria/aria.js';\nimport { Checkbox } from '../../../../base/browser/ui/checkbox/checkbox.js';\nimport { Sash } from '../../../../base/browser/ui/sash/sash.js';\nimport { Widget } from '../../../../base/browser/ui/widget.js';\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Codicon } from '../../../../base/common/codicons.js';\nimport { onUnexpectedError } from '../../../../base/common/errors.js';\nimport { toDisposable } from '../../../../base/common/lifecycle.js';\nimport * as platform from '../../../../base/common/platform.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport './findWidget.css';\nimport { Range } from '../../../common/core/range.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_REPLACE_INPUT_FOCUSED, FIND_IDS, MATCHES_LIMIT } from './findModel.js';\nimport * as nls from '../../../../nls.js';\nimport { ContextScopedFindInput, ContextScopedReplaceInput } from '../../../../platform/history/browser/contextScopedHistoryWidget.js';\nimport { showHistoryKeybindingHint } from '../../../../platform/history/browser/historyWidgetKeybindingHint.js';\nimport { contrastBorder, editorFindMatch, editorFindMatchBorder, editorFindMatchHighlight, editorFindMatchHighlightBorder, editorFindRangeHighlight, editorFindRangeHighlightBorder, editorWidgetBackground, editorWidgetBorder, editorWidgetForeground, editorWidgetResizeBorder, errorForeground, focusBorder, inputActiveOptionBackground, inputActiveOptionBorder, inputActiveOptionForeground, inputBackground, inputBorder, inputForeground, inputValidationErrorBackground, inputValidationErrorBorder, inputValidationErrorForeground, inputValidationInfoBackground, inputValidationInfoBorder, inputValidationInfoForeground, inputValidationWarningBackground, inputValidationWarningBorder, inputValidationWarningForeground, toolbarHoverBackground, widgetShadow } from '../../../../platform/theme/common/colorRegistry.js';\nimport { registerIcon, widgetClose } from '../../../../platform/theme/common/iconRegistry.js';\nimport { registerThemingParticipant, ThemeIcon } from '../../../../platform/theme/common/themeService.js';\nconst findSelectionIcon = registerIcon('find-selection', Codicon.selection, nls.localize('findSelectionIcon', 'Icon for \\'Find in Selection\\' in the editor find widget.'));\nconst findCollapsedIcon = registerIcon('find-collapsed', Codicon.chevronRight, nls.localize('findCollapsedIcon', 'Icon to indicate that the editor find widget is collapsed.'));\nconst findExpandedIcon = registerIcon('find-expanded', Codicon.chevronDown, nls.localize('findExpandedIcon', 'Icon to indicate that the editor find widget is expanded.'));\nexport const findReplaceIcon = registerIcon('find-replace', Codicon.replace, nls.localize('findReplaceIcon', 'Icon for \\'Replace\\' in the editor find widget.'));\nexport const findReplaceAllIcon = registerIcon('find-replace-all', Codicon.replaceAll, nls.localize('findReplaceAllIcon', 'Icon for \\'Replace All\\' in the editor find widget.'));\nexport const findPreviousMatchIcon = registerIcon('find-previous-match', Codicon.arrowUp, nls.localize('findPreviousMatchIcon', 'Icon for \\'Find Previous\\' in the editor find widget.'));\nexport const findNextMatchIcon = registerIcon('find-next-match', Codicon.arrowDown, nls.localize('findNextMatchIcon', 'Icon for \\'Find Next\\' in the editor find widget.'));\nconst NLS_FIND_INPUT_LABEL = nls.localize('label.find', \"Find\");\nconst NLS_FIND_INPUT_PLACEHOLDER = nls.localize('placeholder.find', \"Find\");\nconst NLS_PREVIOUS_MATCH_BTN_LABEL = nls.localize('label.previousMatchButton', \"Previous Match\");\nconst NLS_NEXT_MATCH_BTN_LABEL = nls.localize('label.nextMatchButton', \"Next Match\");\nconst NLS_TOGGLE_SELECTION_FIND_TITLE = nls.localize('label.toggleSelectionFind', \"Find in Selection\");\nconst NLS_CLOSE_BTN_LABEL = nls.localize('label.closeButton', \"Close\");\nconst NLS_REPLACE_INPUT_LABEL = nls.localize('label.replace', \"Replace\");\nconst NLS_REPLACE_INPUT_PLACEHOLDER = nls.localize('placeholder.replace', \"Replace\");\nconst NLS_REPLACE_BTN_LABEL = nls.localize('label.replaceButton', \"Replace\");\nconst NLS_REPLACE_ALL_BTN_LABEL = nls.localize('label.replaceAllButton', \"Replace All\");\nconst NLS_TOGGLE_REPLACE_MODE_BTN_LABEL = nls.localize('label.toggleReplaceButton', \"Toggle Replace\");\nconst NLS_MATCHES_COUNT_LIMIT_TITLE = nls.localize('title.matchesCountLimit', \"Only the first {0} results are highlighted, but all find operations work on the entire text.\", MATCHES_LIMIT);\nexport const NLS_MATCHES_LOCATION = nls.localize('label.matchesLocation', \"{0} of {1}\");\nexport const NLS_NO_RESULTS = nls.localize('label.noResults', \"No results\");\nconst FIND_WIDGET_INITIAL_WIDTH = 419;\nconst PART_WIDTH = 275;\nconst FIND_INPUT_AREA_WIDTH = PART_WIDTH - 54;\nlet MAX_MATCHES_COUNT_WIDTH = 69;\n// let FIND_ALL_CONTROLS_WIDTH = 17/** Find Input margin-left */ + (MAX_MATCHES_COUNT_WIDTH + 3 + 1) /** Match Results */ + 23 /** Button */ * 4 + 2/** sash */;\nconst FIND_INPUT_AREA_HEIGHT = 33; // The height of Find Widget when Replace Input is not visible.\nconst ctrlEnterReplaceAllWarningPromptedKey = 'ctrlEnterReplaceAll.windows.donotask';\nconst ctrlKeyMod = (platform.isMacintosh ? 256 /* WinCtrl */ : 2048 /* CtrlCmd */);\nexport class FindWidgetViewZone {\n    constructor(afterLineNumber) {\n        this.afterLineNumber = afterLineNumber;\n        this.heightInPx = FIND_INPUT_AREA_HEIGHT;\n        this.suppressMouseDown = false;\n        this.domNode = document.createElement('div');\n        this.domNode.className = 'dock-find-viewzone';\n    }\n}\nfunction stopPropagationForMultiLineUpwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && isMultiline && textarea.selectionStart > 0) {\n        event.stopPropagation();\n        return;\n    }\n}\nfunction stopPropagationForMultiLineDownwards(event, value, textarea) {\n    const isMultiline = !!value.match(/\\n/);\n    if (textarea && isMultiline && textarea.selectionEnd < textarea.value.length) {\n        event.stopPropagation();\n        return;\n    }\n}\nexport class FindWidget extends Widget {\n    constructor(codeEditor, controller, state, contextViewProvider, keybindingService, contextKeyService, themeService, storageService, notificationService) {\n        super();\n        this._cachedHeight = null;\n        this._revealTimeouts = [];\n        this._codeEditor = codeEditor;\n        this._controller = controller;\n        this._state = state;\n        this._contextViewProvider = contextViewProvider;\n        this._keybindingService = keybindingService;\n        this._contextKeyService = contextKeyService;\n        this._storageService = storageService;\n        this._notificationService = notificationService;\n        this._ctrlEnterReplaceAllWarningPrompted = !!storageService.getBoolean(ctrlEnterReplaceAllWarningPromptedKey, 0 /* GLOBAL */);\n        this._isVisible = false;\n        this._isReplaceVisible = false;\n        this._ignoreChangeEvent = false;\n        this._updateHistoryDelayer = new Delayer(500);\n        this._register(toDisposable(() => this._updateHistoryDelayer.cancel()));\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this._buildDomNode();\n        this._updateButtons();\n        this._tryUpdateWidgetWidth();\n        this._findInput.inputBox.layout();\n        this._register(this._codeEditor.onDidChangeConfiguration((e) => {\n            if (e.hasChanged(81 /* readOnly */)) {\n                if (this._codeEditor.getOption(81 /* readOnly */)) {\n                    // Hide replace part if editor becomes read only\n                    this._state.change({ isReplaceRevealed: false }, false);\n                }\n                this._updateButtons();\n            }\n            if (e.hasChanged(131 /* layoutInfo */)) {\n                this._tryUpdateWidgetWidth();\n            }\n            if (e.hasChanged(2 /* accessibilitySupport */)) {\n                this.updateAccessibilitySupport();\n            }\n            if (e.hasChanged(35 /* find */)) {\n                const addExtraSpaceOnTop = this._codeEditor.getOption(35 /* find */).addExtraSpaceOnTop;\n                if (addExtraSpaceOnTop && !this._viewZone) {\n                    this._viewZone = new FindWidgetViewZone(0);\n                    this._showViewZone();\n                }\n                if (!addExtraSpaceOnTop && this._viewZone) {\n                    this._removeViewZone();\n                }\n            }\n        }));\n        this.updateAccessibilitySupport();\n        this._register(this._codeEditor.onDidChangeCursorSelection(() => {\n            if (this._isVisible) {\n                this._updateToggleSelectionFindButton();\n            }\n        }));\n        this._register(this._codeEditor.onDidFocusEditorWidget(() => __awaiter(this, void 0, void 0, function* () {\n            if (this._isVisible) {\n                let globalBufferTerm = yield this._controller.getGlobalBufferTerm();\n                if (globalBufferTerm && globalBufferTerm !== this._state.searchString) {\n                    this._state.change({ searchString: globalBufferTerm }, false);\n                    this._findInput.select();\n                }\n            }\n        })));\n        this._findInputFocused = CONTEXT_FIND_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._findFocusTracker = this._register(dom.trackFocus(this._findInput.inputBox.inputElement));\n        this._register(this._findFocusTracker.onDidFocus(() => {\n            this._findInputFocused.set(true);\n            this._updateSearchScope();\n        }));\n        this._register(this._findFocusTracker.onDidBlur(() => {\n            this._findInputFocused.set(false);\n        }));\n        this._replaceInputFocused = CONTEXT_REPLACE_INPUT_FOCUSED.bindTo(contextKeyService);\n        this._replaceFocusTracker = this._register(dom.trackFocus(this._replaceInput.inputBox.inputElement));\n        this._register(this._replaceFocusTracker.onDidFocus(() => {\n            this._replaceInputFocused.set(true);\n            this._updateSearchScope();\n        }));\n        this._register(this._replaceFocusTracker.onDidBlur(() => {\n            this._replaceInputFocused.set(false);\n        }));\n        this._codeEditor.addOverlayWidget(this);\n        if (this._codeEditor.getOption(35 /* find */).addExtraSpaceOnTop) {\n            this._viewZone = new FindWidgetViewZone(0); // Put it before the first line then users can scroll beyond the first line.\n        }\n        this._applyTheme(themeService.getColorTheme());\n        this._register(themeService.onDidColorThemeChange(this._applyTheme.bind(this)));\n        this._register(this._codeEditor.onDidChangeModel(() => {\n            if (!this._isVisible) {\n                return;\n            }\n            this._viewZoneId = undefined;\n        }));\n        this._register(this._codeEditor.onDidScrollChange((e) => {\n            if (e.scrollTopChanged) {\n                this._layoutViewZone();\n                return;\n            }\n            // for other scroll changes, layout the viewzone in next tick to avoid ruining current rendering.\n            setTimeout(() => {\n                this._layoutViewZone();\n            }, 0);\n        }));\n    }\n    // ----- IOverlayWidget API\n    getId() {\n        return FindWidget.ID;\n    }\n    getDomNode() {\n        return this._domNode;\n    }\n    getPosition() {\n        if (this._isVisible) {\n            return {\n                preference: 0 /* TOP_RIGHT_CORNER */\n            };\n        }\n        return null;\n    }\n    // ----- React to state changes\n    _onStateChanged(e) {\n        if (e.searchString) {\n            try {\n                this._ignoreChangeEvent = true;\n                this._findInput.setValue(this._state.searchString);\n            }\n            finally {\n                this._ignoreChangeEvent = false;\n            }\n            this._updateButtons();\n        }\n        if (e.replaceString) {\n            this._replaceInput.inputBox.value = this._state.replaceString;\n        }\n        if (e.isRevealed) {\n            if (this._state.isRevealed) {\n                this._reveal();\n            }\n            else {\n                this._hide(true);\n            }\n        }\n        if (e.isReplaceRevealed) {\n            if (this._state.isReplaceRevealed) {\n                if (!this._codeEditor.getOption(81 /* readOnly */) && !this._isReplaceVisible) {\n                    this._isReplaceVisible = true;\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                    this._updateButtons();\n                    this._replaceInput.inputBox.layout();\n                }\n            }\n            else {\n                if (this._isReplaceVisible) {\n                    this._isReplaceVisible = false;\n                    this._updateButtons();\n                }\n            }\n        }\n        if ((e.isRevealed || e.isReplaceRevealed) && (this._state.isRevealed || this._state.isReplaceRevealed)) {\n            if (this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }\n        if (e.isRegex) {\n            this._findInput.setRegex(this._state.isRegex);\n        }\n        if (e.wholeWord) {\n            this._findInput.setWholeWords(this._state.wholeWord);\n        }\n        if (e.matchCase) {\n            this._findInput.setCaseSensitive(this._state.matchCase);\n        }\n        if (e.preserveCase) {\n            this._replaceInput.setPreserveCase(this._state.preserveCase);\n        }\n        if (e.searchScope) {\n            if (this._state.searchScope) {\n                this._toggleSelectionFind.checked = true;\n            }\n            else {\n                this._toggleSelectionFind.checked = false;\n            }\n            this._updateToggleSelectionFindButton();\n        }\n        if (e.searchString || e.matchesCount || e.matchesPosition) {\n            let showRedOutline = (this._state.searchString.length > 0 && this._state.matchesCount === 0);\n            this._domNode.classList.toggle('no-results', showRedOutline);\n            this._updateMatchesCount();\n            this._updateButtons();\n        }\n        if (e.searchString || e.currentMatch) {\n            this._layoutViewZone();\n        }\n        if (e.updateHistory) {\n            this._delayedUpdateHistory();\n        }\n        if (e.loop) {\n            this._updateButtons();\n        }\n    }\n    _delayedUpdateHistory() {\n        this._updateHistoryDelayer.trigger(this._updateHistory.bind(this)).then(undefined, onUnexpectedError);\n    }\n    _updateHistory() {\n        if (this._state.searchString) {\n            this._findInput.inputBox.addToHistory();\n        }\n        if (this._state.replaceString) {\n            this._replaceInput.inputBox.addToHistory();\n        }\n    }\n    _updateMatchesCount() {\n        this._matchesCount.style.minWidth = MAX_MATCHES_COUNT_WIDTH + 'px';\n        if (this._state.matchesCount >= MATCHES_LIMIT) {\n            this._matchesCount.title = NLS_MATCHES_COUNT_LIMIT_TITLE;\n        }\n        else {\n            this._matchesCount.title = '';\n        }\n        // remove previous content\n        if (this._matchesCount.firstChild) {\n            this._matchesCount.removeChild(this._matchesCount.firstChild);\n        }\n        let label;\n        if (this._state.matchesCount > 0) {\n            let matchesCount = String(this._state.matchesCount);\n            if (this._state.matchesCount >= MATCHES_LIMIT) {\n                matchesCount += '+';\n            }\n            let matchesPosition = String(this._state.matchesPosition);\n            if (matchesPosition === '0') {\n                matchesPosition = '?';\n            }\n            label = strings.format(NLS_MATCHES_LOCATION, matchesPosition, matchesCount);\n        }\n        else {\n            label = NLS_NO_RESULTS;\n        }\n        this._matchesCount.appendChild(document.createTextNode(label));\n        alertFn(this._getAriaLabel(label, this._state.currentMatch, this._state.searchString));\n        MAX_MATCHES_COUNT_WIDTH = Math.max(MAX_MATCHES_COUNT_WIDTH, this._matchesCount.clientWidth);\n    }\n    // ----- actions\n    _getAriaLabel(label, currentMatch, searchString) {\n        if (label === NLS_NO_RESULTS) {\n            return searchString === ''\n                ? nls.localize('ariaSearchNoResultEmpty', \"{0} found\", label)\n                : nls.localize('ariaSearchNoResult', \"{0} found for '{1}'\", label, searchString);\n        }\n        if (currentMatch) {\n            const ariaLabel = nls.localize('ariaSearchNoResultWithLineNum', \"{0} found for '{1}', at {2}\", label, searchString, currentMatch.startLineNumber + ':' + currentMatch.startColumn);\n            const model = this._codeEditor.getModel();\n            if (model && (currentMatch.startLineNumber <= model.getLineCount()) && (currentMatch.startLineNumber >= 1)) {\n                const lineContent = model.getLineContent(currentMatch.startLineNumber);\n                return `${lineContent}, ${ariaLabel}`;\n            }\n            return ariaLabel;\n        }\n        return nls.localize('ariaSearchNoResultWithLineNumNoCurrentMatch', \"{0} found for '{1}'\", label, searchString);\n    }\n    /**\n     * If 'selection find' is ON we should not disable the button (its function is to cancel 'selection find').\n     * If 'selection find' is OFF we enable the button only if there is a selection.\n     */\n    _updateToggleSelectionFindButton() {\n        let selection = this._codeEditor.getSelection();\n        let isSelection = selection ? (selection.startLineNumber !== selection.endLineNumber || selection.startColumn !== selection.endColumn) : false;\n        let isChecked = this._toggleSelectionFind.checked;\n        if (this._isVisible && (isChecked || isSelection)) {\n            this._toggleSelectionFind.enable();\n        }\n        else {\n            this._toggleSelectionFind.disable();\n        }\n    }\n    _updateButtons() {\n        this._findInput.setEnabled(this._isVisible);\n        this._replaceInput.setEnabled(this._isVisible && this._isReplaceVisible);\n        this._updateToggleSelectionFindButton();\n        this._closeBtn.setEnabled(this._isVisible);\n        let findInputIsNonEmpty = (this._state.searchString.length > 0);\n        let matchesCount = this._state.matchesCount ? true : false;\n        this._prevBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateBack());\n        this._nextBtn.setEnabled(this._isVisible && findInputIsNonEmpty && matchesCount && this._state.canNavigateForward());\n        this._replaceBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n        this._replaceAllBtn.setEnabled(this._isVisible && this._isReplaceVisible && findInputIsNonEmpty);\n        this._domNode.classList.toggle('replaceToggled', this._isReplaceVisible);\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n        let canReplace = !this._codeEditor.getOption(81 /* readOnly */);\n        this._toggleReplaceBtn.setEnabled(this._isVisible && canReplace);\n    }\n    _reveal() {\n        this._revealTimeouts.forEach(e => {\n            clearTimeout(e);\n        });\n        this._revealTimeouts = [];\n        if (!this._isVisible) {\n            this._isVisible = true;\n            const selection = this._codeEditor.getSelection();\n            switch (this._codeEditor.getOption(35 /* find */).autoFindInSelection) {\n                case 'always':\n                    this._toggleSelectionFind.checked = true;\n                    break;\n                case 'never':\n                    this._toggleSelectionFind.checked = false;\n                    break;\n                case 'multiline': {\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n                    this._toggleSelectionFind.checked = isSelectionMultipleLine;\n                    break;\n                }\n                default:\n                    break;\n            }\n            this._tryUpdateWidgetWidth();\n            this._updateButtons();\n            this._revealTimeouts.push(setTimeout(() => {\n                this._domNode.classList.add('visible');\n                this._domNode.setAttribute('aria-hidden', 'false');\n            }, 0));\n            // validate query again as it's being dismissed when we hide the find widget.\n            this._revealTimeouts.push(setTimeout(() => {\n                this._findInput.validate();\n            }, 200));\n            this._codeEditor.layoutOverlayWidget(this);\n            let adjustEditorScrollTop = true;\n            if (this._codeEditor.getOption(35 /* find */).seedSearchStringFromSelection && selection) {\n                const domNode = this._codeEditor.getDomNode();\n                if (domNode) {\n                    const editorCoords = dom.getDomNodePagePosition(domNode);\n                    const startCoords = this._codeEditor.getScrolledVisiblePosition(selection.getStartPosition());\n                    const startLeft = editorCoords.left + (startCoords ? startCoords.left : 0);\n                    const startTop = startCoords ? startCoords.top : 0;\n                    if (this._viewZone && startTop < this._viewZone.heightInPx) {\n                        if (selection.endLineNumber > selection.startLineNumber) {\n                            adjustEditorScrollTop = false;\n                        }\n                        const leftOfFindWidget = dom.getTopLeftOffset(this._domNode).left;\n                        if (startLeft > leftOfFindWidget) {\n                            adjustEditorScrollTop = false;\n                        }\n                        const endCoords = this._codeEditor.getScrolledVisiblePosition(selection.getEndPosition());\n                        const endLeft = editorCoords.left + (endCoords ? endCoords.left : 0);\n                        if (endLeft > leftOfFindWidget) {\n                            adjustEditorScrollTop = false;\n                        }\n                    }\n                }\n            }\n            this._showViewZone(adjustEditorScrollTop);\n        }\n    }\n    _hide(focusTheEditor) {\n        this._revealTimeouts.forEach(e => {\n            clearTimeout(e);\n        });\n        this._revealTimeouts = [];\n        if (this._isVisible) {\n            this._isVisible = false;\n            this._updateButtons();\n            this._domNode.classList.remove('visible');\n            this._domNode.setAttribute('aria-hidden', 'true');\n            this._findInput.clearMessage();\n            if (focusTheEditor) {\n                this._codeEditor.focus();\n            }\n            this._codeEditor.layoutOverlayWidget(this);\n            this._removeViewZone();\n        }\n    }\n    _layoutViewZone(targetScrollTop) {\n        const addExtraSpaceOnTop = this._codeEditor.getOption(35 /* find */).addExtraSpaceOnTop;\n        if (!addExtraSpaceOnTop) {\n            this._removeViewZone();\n            return;\n        }\n        if (!this._isVisible) {\n            return;\n        }\n        const viewZone = this._viewZone;\n        if (this._viewZoneId !== undefined || !viewZone) {\n            return;\n        }\n        this._codeEditor.changeViewZones((accessor) => {\n            viewZone.heightInPx = this._getHeight();\n            this._viewZoneId = accessor.addZone(viewZone);\n            // scroll top adjust to make sure the editor doesn't scroll when adding viewzone at the beginning.\n            this._codeEditor.setScrollTop(targetScrollTop || this._codeEditor.getScrollTop() + viewZone.heightInPx);\n        });\n    }\n    _showViewZone(adjustScroll = true) {\n        if (!this._isVisible) {\n            return;\n        }\n        const addExtraSpaceOnTop = this._codeEditor.getOption(35 /* find */).addExtraSpaceOnTop;\n        if (!addExtraSpaceOnTop) {\n            return;\n        }\n        if (this._viewZone === undefined) {\n            this._viewZone = new FindWidgetViewZone(0);\n        }\n        const viewZone = this._viewZone;\n        this._codeEditor.changeViewZones((accessor) => {\n            if (this._viewZoneId !== undefined) {\n                // the view zone already exists, we need to update the height\n                const newHeight = this._getHeight();\n                if (newHeight === viewZone.heightInPx) {\n                    return;\n                }\n                let scrollAdjustment = newHeight - viewZone.heightInPx;\n                viewZone.heightInPx = newHeight;\n                accessor.layoutZone(this._viewZoneId);\n                if (adjustScroll) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n                }\n                return;\n            }\n            else {\n                let scrollAdjustment = this._getHeight();\n                // if the editor has top padding, factor that into the zone height\n                scrollAdjustment -= this._codeEditor.getOption(75 /* padding */).top;\n                if (scrollAdjustment <= 0) {\n                    return;\n                }\n                viewZone.heightInPx = scrollAdjustment;\n                this._viewZoneId = accessor.addZone(viewZone);\n                if (adjustScroll) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() + scrollAdjustment);\n                }\n            }\n        });\n    }\n    _removeViewZone() {\n        this._codeEditor.changeViewZones((accessor) => {\n            if (this._viewZoneId !== undefined) {\n                accessor.removeZone(this._viewZoneId);\n                this._viewZoneId = undefined;\n                if (this._viewZone) {\n                    this._codeEditor.setScrollTop(this._codeEditor.getScrollTop() - this._viewZone.heightInPx);\n                    this._viewZone = undefined;\n                }\n            }\n        });\n    }\n    _applyTheme(theme) {\n        let inputStyles = {\n            inputActiveOptionBorder: theme.getColor(inputActiveOptionBorder),\n            inputActiveOptionBackground: theme.getColor(inputActiveOptionBackground),\n            inputActiveOptionForeground: theme.getColor(inputActiveOptionForeground),\n            inputBackground: theme.getColor(inputBackground),\n            inputForeground: theme.getColor(inputForeground),\n            inputBorder: theme.getColor(inputBorder),\n            inputValidationInfoBackground: theme.getColor(inputValidationInfoBackground),\n            inputValidationInfoForeground: theme.getColor(inputValidationInfoForeground),\n            inputValidationInfoBorder: theme.getColor(inputValidationInfoBorder),\n            inputValidationWarningBackground: theme.getColor(inputValidationWarningBackground),\n            inputValidationWarningForeground: theme.getColor(inputValidationWarningForeground),\n            inputValidationWarningBorder: theme.getColor(inputValidationWarningBorder),\n            inputValidationErrorBackground: theme.getColor(inputValidationErrorBackground),\n            inputValidationErrorForeground: theme.getColor(inputValidationErrorForeground),\n            inputValidationErrorBorder: theme.getColor(inputValidationErrorBorder),\n        };\n        this._findInput.style(inputStyles);\n        this._replaceInput.style(inputStyles);\n        this._toggleSelectionFind.style(inputStyles);\n    }\n    _tryUpdateWidgetWidth() {\n        if (!this._isVisible) {\n            return;\n        }\n        if (!dom.isInDOM(this._domNode)) {\n            // the widget is not in the DOM\n            return;\n        }\n        const layoutInfo = this._codeEditor.getLayoutInfo();\n        const editorContentWidth = layoutInfo.contentWidth;\n        if (editorContentWidth <= 0) {\n            // for example, diff view original editor\n            this._domNode.classList.add('hiddenEditor');\n            return;\n        }\n        else if (this._domNode.classList.contains('hiddenEditor')) {\n            this._domNode.classList.remove('hiddenEditor');\n        }\n        const editorWidth = layoutInfo.width;\n        const minimapWidth = layoutInfo.minimap.minimapWidth;\n        let collapsedFindWidget = false;\n        let reducedFindWidget = false;\n        let narrowFindWidget = false;\n        if (this._resized) {\n            let widgetWidth = dom.getTotalWidth(this._domNode);\n            if (widgetWidth > FIND_WIDGET_INITIAL_WIDTH) {\n                // as the widget is resized by users, we may need to change the max width of the widget as the editor width changes.\n                this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                return;\n            }\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth >= editorWidth) {\n            reducedFindWidget = true;\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth) {\n            narrowFindWidget = true;\n        }\n        if (FIND_WIDGET_INITIAL_WIDTH + 28 + minimapWidth - MAX_MATCHES_COUNT_WIDTH >= editorWidth + 50) {\n            collapsedFindWidget = true;\n        }\n        this._domNode.classList.toggle('collapsed-find-widget', collapsedFindWidget);\n        this._domNode.classList.toggle('narrow-find-widget', narrowFindWidget);\n        this._domNode.classList.toggle('reduced-find-widget', reducedFindWidget);\n        if (!narrowFindWidget && !collapsedFindWidget) {\n            // the minimal left offset of findwidget is 15px.\n            this._domNode.style.maxWidth = `${editorWidth - 28 - minimapWidth - 15}px`;\n        }\n        if (this._resized) {\n            this._findInput.inputBox.layout();\n            let findInputWidth = this._findInput.inputBox.element.clientWidth;\n            if (findInputWidth > 0) {\n                this._replaceInput.width = findInputWidth;\n            }\n        }\n        else if (this._isReplaceVisible) {\n            this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n        }\n    }\n    _getHeight() {\n        let totalheight = 0;\n        // find input margin top\n        totalheight += 4;\n        // find input height\n        totalheight += this._findInput.inputBox.height + 2 /** input box border */;\n        if (this._isReplaceVisible) {\n            // replace input margin\n            totalheight += 4;\n            totalheight += this._replaceInput.inputBox.height + 2 /** input box border */;\n        }\n        // margin bottom\n        totalheight += 4;\n        return totalheight;\n    }\n    _tryUpdateHeight() {\n        const totalHeight = this._getHeight();\n        if (this._cachedHeight !== null && this._cachedHeight === totalHeight) {\n            return false;\n        }\n        this._cachedHeight = totalHeight;\n        this._domNode.style.height = `${totalHeight}px`;\n        return true;\n    }\n    // ----- Public\n    focusFindInput() {\n        this._findInput.select();\n        // Edge browser requires focus() in addition to select()\n        this._findInput.focus();\n    }\n    focusReplaceInput() {\n        this._replaceInput.select();\n        // Edge browser requires focus() in addition to select()\n        this._replaceInput.focus();\n    }\n    highlightFindOptions() {\n        this._findInput.highlightFindOptions();\n    }\n    _updateSearchScope() {\n        if (!this._codeEditor.hasModel()) {\n            return;\n        }\n        if (this._toggleSelectionFind.checked) {\n            let selections = this._codeEditor.getSelections();\n            selections.map(selection => {\n                if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                    selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                }\n                const currentMatch = this._state.currentMatch;\n                if (selection.startLineNumber !== selection.endLineNumber) {\n                    if (!Range.equalsRange(selection, currentMatch)) {\n                        return selection;\n                    }\n                }\n                return null;\n            }).filter(element => !!element);\n            if (selections.length) {\n                this._state.change({ searchScope: selections }, true);\n            }\n        }\n    }\n    _onFindInputMouseDown(e) {\n        // on linux, middle key does pasting.\n        if (e.middleButton) {\n            e.stopPropagation();\n        }\n    }\n    _onFindInputKeyDown(e) {\n        if (e.equals(ctrlKeyMod | 3 /* Enter */)) {\n            if (this._keybindingService.dispatchEvent(e, e.target)) {\n                e.preventDefault();\n                return;\n            }\n            else {\n                this._findInput.inputBox.insertAtCursor('\\n');\n                e.preventDefault();\n                return;\n            }\n        }\n        if (e.equals(2 /* Tab */)) {\n            if (this._isReplaceVisible) {\n                this._replaceInput.focus();\n            }\n            else {\n                this._findInput.focusOnCaseSensitive();\n            }\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(2048 /* CtrlCmd */ | 18 /* DownArrow */)) {\n            this._codeEditor.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(16 /* UpArrow */)) {\n            return stopPropagationForMultiLineUpwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n        }\n        if (e.equals(18 /* DownArrow */)) {\n            return stopPropagationForMultiLineDownwards(e, this._findInput.getValue(), this._findInput.domNode.querySelector('textarea'));\n        }\n    }\n    _onReplaceInputKeyDown(e) {\n        if (e.equals(ctrlKeyMod | 3 /* Enter */)) {\n            if (this._keybindingService.dispatchEvent(e, e.target)) {\n                e.preventDefault();\n                return;\n            }\n            else {\n                if (platform.isWindows && platform.isNative && !this._ctrlEnterReplaceAllWarningPrompted) {\n                    // this is the first time when users press Ctrl + Enter to replace all\n                    this._notificationService.info(nls.localize('ctrlEnter.keybindingChanged', 'Ctrl+Enter now inserts line break instead of replacing all. You can modify the keybinding for editor.action.replaceAll to override this behavior.'));\n                    this._ctrlEnterReplaceAllWarningPrompted = true;\n                    this._storageService.store(ctrlEnterReplaceAllWarningPromptedKey, true, 0 /* GLOBAL */, 0 /* USER */);\n                }\n                this._replaceInput.inputBox.insertAtCursor('\\n');\n                e.preventDefault();\n                return;\n            }\n        }\n        if (e.equals(2 /* Tab */)) {\n            this._findInput.focusOnCaseSensitive();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\n            this._findInput.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(2048 /* CtrlCmd */ | 18 /* DownArrow */)) {\n            this._codeEditor.focus();\n            e.preventDefault();\n            return;\n        }\n        if (e.equals(16 /* UpArrow */)) {\n            return stopPropagationForMultiLineUpwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n        }\n        if (e.equals(18 /* DownArrow */)) {\n            return stopPropagationForMultiLineDownwards(e, this._replaceInput.inputBox.value, this._replaceInput.inputBox.element.querySelector('textarea'));\n        }\n    }\n    // ----- sash\n    getVerticalSashLeft(_sash) {\n        return 0;\n    }\n    // ----- initialization\n    _keybindingLabelFor(actionId) {\n        let kb = this._keybindingService.lookupKeybinding(actionId);\n        if (!kb) {\n            return '';\n        }\n        return ` (${kb.getLabel()})`;\n    }\n    _buildDomNode() {\n        const flexibleHeight = true;\n        const flexibleWidth = true;\n        // Find input\n        this._findInput = this._register(new ContextScopedFindInput(null, this._contextViewProvider, {\n            width: FIND_INPUT_AREA_WIDTH,\n            label: NLS_FIND_INPUT_LABEL,\n            placeholder: NLS_FIND_INPUT_PLACEHOLDER,\n            appendCaseSensitiveLabel: this._keybindingLabelFor(FIND_IDS.ToggleCaseSensitiveCommand),\n            appendWholeWordsLabel: this._keybindingLabelFor(FIND_IDS.ToggleWholeWordCommand),\n            appendRegexLabel: this._keybindingLabelFor(FIND_IDS.ToggleRegexCommand),\n            validation: (value) => {\n                if (value.length === 0 || !this._findInput.getRegex()) {\n                    return null;\n                }\n                try {\n                    // use `g` and `u` which are also used by the TextModel search\n                    new RegExp(value, 'gu');\n                    return null;\n                }\n                catch (e) {\n                    return { content: e.message };\n                }\n            },\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight: 118,\n            showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService)\n        }, this._contextKeyService, true));\n        this._findInput.setRegex(!!this._state.isRegex);\n        this._findInput.setCaseSensitive(!!this._state.matchCase);\n        this._findInput.setWholeWords(!!this._state.wholeWord);\n        this._register(this._findInput.onKeyDown((e) => this._onFindInputKeyDown(e)));\n        this._register(this._findInput.inputBox.onDidChange(() => {\n            if (this._ignoreChangeEvent) {\n                return;\n            }\n            this._state.change({ searchString: this._findInput.getValue() }, true);\n        }));\n        this._register(this._findInput.onDidOptionChange(() => {\n            this._state.change({\n                isRegex: this._findInput.getRegex(),\n                wholeWord: this._findInput.getWholeWords(),\n                matchCase: this._findInput.getCaseSensitive()\n            }, true);\n        }));\n        this._register(this._findInput.onCaseSensitiveKeyDown((e) => {\n            if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\n                if (this._isReplaceVisible) {\n                    this._replaceInput.focus();\n                    e.preventDefault();\n                }\n            }\n        }));\n        this._register(this._findInput.onRegexKeyDown((e) => {\n            if (e.equals(2 /* Tab */)) {\n                if (this._isReplaceVisible) {\n                    this._replaceInput.focusOnPreserve();\n                    e.preventDefault();\n                }\n            }\n        }));\n        this._register(this._findInput.inputBox.onDidHeightChange((e) => {\n            if (this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }));\n        if (platform.isLinux) {\n            this._register(this._findInput.onMouseDown((e) => this._onFindInputMouseDown(e)));\n        }\n        this._matchesCount = document.createElement('div');\n        this._matchesCount.className = 'matchesCount';\n        this._updateMatchesCount();\n        // Previous button\n        this._prevBtn = this._register(new SimpleButton({\n            label: NLS_PREVIOUS_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.PreviousMatchFindAction),\n            icon: findPreviousMatchIcon,\n            onTrigger: () => {\n                this._codeEditor.getAction(FIND_IDS.PreviousMatchFindAction).run().then(undefined, onUnexpectedError);\n            }\n        }));\n        // Next button\n        this._nextBtn = this._register(new SimpleButton({\n            label: NLS_NEXT_MATCH_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.NextMatchFindAction),\n            icon: findNextMatchIcon,\n            onTrigger: () => {\n                this._codeEditor.getAction(FIND_IDS.NextMatchFindAction).run().then(undefined, onUnexpectedError);\n            }\n        }));\n        let findPart = document.createElement('div');\n        findPart.className = 'find-part';\n        findPart.appendChild(this._findInput.domNode);\n        const actionsContainer = document.createElement('div');\n        actionsContainer.className = 'find-actions';\n        findPart.appendChild(actionsContainer);\n        actionsContainer.appendChild(this._matchesCount);\n        actionsContainer.appendChild(this._prevBtn.domNode);\n        actionsContainer.appendChild(this._nextBtn.domNode);\n        // Toggle selection button\n        this._toggleSelectionFind = this._register(new Checkbox({\n            icon: findSelectionIcon,\n            title: NLS_TOGGLE_SELECTION_FIND_TITLE + this._keybindingLabelFor(FIND_IDS.ToggleSearchScopeCommand),\n            isChecked: false\n        }));\n        this._register(this._toggleSelectionFind.onChange(() => {\n            if (this._toggleSelectionFind.checked) {\n                if (this._codeEditor.hasModel()) {\n                    let selections = this._codeEditor.getSelections();\n                    selections.map(selection => {\n                        if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                            selection = selection.setEndPosition(selection.endLineNumber - 1, this._codeEditor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                        }\n                        if (!selection.isEmpty()) {\n                            return selection;\n                        }\n                        return null;\n                    }).filter(element => !!element);\n                    if (selections.length) {\n                        this._state.change({ searchScope: selections }, true);\n                    }\n                }\n            }\n            else {\n                this._state.change({ searchScope: null }, true);\n            }\n        }));\n        actionsContainer.appendChild(this._toggleSelectionFind.domNode);\n        // Close button\n        this._closeBtn = this._register(new SimpleButton({\n            label: NLS_CLOSE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.CloseFindWidgetCommand),\n            icon: widgetClose,\n            onTrigger: () => {\n                this._state.change({ isRevealed: false, searchScope: null }, false);\n            },\n            onKeyDown: (e) => {\n                if (e.equals(2 /* Tab */)) {\n                    if (this._isReplaceVisible) {\n                        if (this._replaceBtn.isEnabled()) {\n                            this._replaceBtn.focus();\n                        }\n                        else {\n                            this._codeEditor.focus();\n                        }\n                        e.preventDefault();\n                    }\n                }\n            }\n        }));\n        actionsContainer.appendChild(this._closeBtn.domNode);\n        // Replace input\n        this._replaceInput = this._register(new ContextScopedReplaceInput(null, undefined, {\n            label: NLS_REPLACE_INPUT_LABEL,\n            placeholder: NLS_REPLACE_INPUT_PLACEHOLDER,\n            appendPreserveCaseLabel: this._keybindingLabelFor(FIND_IDS.TogglePreserveCaseCommand),\n            history: [],\n            flexibleHeight,\n            flexibleWidth,\n            flexibleMaxHeight: 118,\n            showHistoryHint: () => showHistoryKeybindingHint(this._keybindingService)\n        }, this._contextKeyService, true));\n        this._replaceInput.setPreserveCase(!!this._state.preserveCase);\n        this._register(this._replaceInput.onKeyDown((e) => this._onReplaceInputKeyDown(e)));\n        this._register(this._replaceInput.inputBox.onDidChange(() => {\n            this._state.change({ replaceString: this._replaceInput.inputBox.value }, false);\n        }));\n        this._register(this._replaceInput.inputBox.onDidHeightChange((e) => {\n            if (this._isReplaceVisible && this._tryUpdateHeight()) {\n                this._showViewZone();\n            }\n        }));\n        this._register(this._replaceInput.onDidOptionChange(() => {\n            this._state.change({\n                preserveCase: this._replaceInput.getPreserveCase()\n            }, true);\n        }));\n        this._register(this._replaceInput.onPreserveCaseKeyDown((e) => {\n            if (e.equals(2 /* Tab */)) {\n                if (this._prevBtn.isEnabled()) {\n                    this._prevBtn.focus();\n                }\n                else if (this._nextBtn.isEnabled()) {\n                    this._nextBtn.focus();\n                }\n                else if (this._toggleSelectionFind.enabled) {\n                    this._toggleSelectionFind.focus();\n                }\n                else if (this._closeBtn.isEnabled()) {\n                    this._closeBtn.focus();\n                }\n                e.preventDefault();\n            }\n        }));\n        // Replace one button\n        this._replaceBtn = this._register(new SimpleButton({\n            label: NLS_REPLACE_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceOneAction),\n            icon: findReplaceIcon,\n            onTrigger: () => {\n                this._controller.replace();\n            },\n            onKeyDown: (e) => {\n                if (e.equals(1024 /* Shift */ | 2 /* Tab */)) {\n                    this._closeBtn.focus();\n                    e.preventDefault();\n                }\n            }\n        }));\n        // Replace all button\n        this._replaceAllBtn = this._register(new SimpleButton({\n            label: NLS_REPLACE_ALL_BTN_LABEL + this._keybindingLabelFor(FIND_IDS.ReplaceAllAction),\n            icon: findReplaceAllIcon,\n            onTrigger: () => {\n                this._controller.replaceAll();\n            }\n        }));\n        let replacePart = document.createElement('div');\n        replacePart.className = 'replace-part';\n        replacePart.appendChild(this._replaceInput.domNode);\n        const replaceActionsContainer = document.createElement('div');\n        replaceActionsContainer.className = 'replace-actions';\n        replacePart.appendChild(replaceActionsContainer);\n        replaceActionsContainer.appendChild(this._replaceBtn.domNode);\n        replaceActionsContainer.appendChild(this._replaceAllBtn.domNode);\n        // Toggle replace button\n        this._toggleReplaceBtn = this._register(new SimpleButton({\n            label: NLS_TOGGLE_REPLACE_MODE_BTN_LABEL,\n            className: 'codicon toggle left',\n            onTrigger: () => {\n                this._state.change({ isReplaceRevealed: !this._isReplaceVisible }, false);\n                if (this._isReplaceVisible) {\n                    this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n                    this._replaceInput.inputBox.layout();\n                }\n                this._showViewZone();\n            }\n        }));\n        this._toggleReplaceBtn.setExpanded(this._isReplaceVisible);\n        // Widget\n        this._domNode = document.createElement('div');\n        this._domNode.className = 'editor-widget find-widget';\n        this._domNode.setAttribute('aria-hidden', 'true');\n        // We need to set this explicitly, otherwise on IE11, the width inheritence of flex doesn't work.\n        this._domNode.style.width = `${FIND_WIDGET_INITIAL_WIDTH}px`;\n        this._domNode.appendChild(this._toggleReplaceBtn.domNode);\n        this._domNode.appendChild(findPart);\n        this._domNode.appendChild(replacePart);\n        this._resizeSash = new Sash(this._domNode, this, { orientation: 0 /* VERTICAL */, size: 2 });\n        this._resized = false;\n        let originalWidth = FIND_WIDGET_INITIAL_WIDTH;\n        this._register(this._resizeSash.onDidStart(() => {\n            originalWidth = dom.getTotalWidth(this._domNode);\n        }));\n        this._register(this._resizeSash.onDidChange((evt) => {\n            this._resized = true;\n            let width = originalWidth + evt.startX - evt.currentX;\n            if (width < FIND_WIDGET_INITIAL_WIDTH) {\n                // narrow down the find widget should be handled by CSS.\n                return;\n            }\n            const maxWidth = parseFloat(dom.getComputedStyle(this._domNode).maxWidth) || 0;\n            if (width > maxWidth) {\n                return;\n            }\n            this._domNode.style.width = `${width}px`;\n            if (this._isReplaceVisible) {\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            }\n            this._findInput.inputBox.layout();\n            this._tryUpdateHeight();\n        }));\n        this._register(this._resizeSash.onDidReset(() => {\n            // users double click on the sash\n            const currentWidth = dom.getTotalWidth(this._domNode);\n            if (currentWidth < FIND_WIDGET_INITIAL_WIDTH) {\n                // The editor is narrow and the width of the find widget is controlled fully by CSS.\n                return;\n            }\n            let width = FIND_WIDGET_INITIAL_WIDTH;\n            if (!this._resized || currentWidth === FIND_WIDGET_INITIAL_WIDTH) {\n                // 1. never resized before, double click should maximizes it\n                // 2. users resized it already but its width is the same as default\n                const layoutInfo = this._codeEditor.getLayoutInfo();\n                width = layoutInfo.width - 28 - layoutInfo.minimap.minimapWidth - 15;\n                this._resized = true;\n            }\n            else {\n                /**\n                 * no op, the find widget should be shrinked to its default size.\n                 */\n            }\n            this._domNode.style.width = `${width}px`;\n            if (this._isReplaceVisible) {\n                this._replaceInput.width = dom.getTotalWidth(this._findInput.domNode);\n            }\n            this._findInput.inputBox.layout();\n        }));\n    }\n    updateAccessibilitySupport() {\n        const value = this._codeEditor.getOption(2 /* accessibilitySupport */);\n        this._findInput.setFocusInputOnOptionClick(value !== 2 /* Enabled */);\n    }\n}\nFindWidget.ID = 'editor.contrib.findWidget';\nexport class SimpleButton extends Widget {\n    constructor(opts) {\n        super();\n        this._opts = opts;\n        let className = 'button';\n        if (this._opts.className) {\n            className = className + ' ' + this._opts.className;\n        }\n        if (this._opts.icon) {\n            className = className + ' ' + ThemeIcon.asClassName(this._opts.icon);\n        }\n        this._domNode = document.createElement('div');\n        this._domNode.title = this._opts.label;\n        this._domNode.tabIndex = 0;\n        this._domNode.className = className;\n        this._domNode.setAttribute('role', 'button');\n        this._domNode.setAttribute('aria-label', this._opts.label);\n        this.onclick(this._domNode, (e) => {\n            this._opts.onTrigger();\n            e.preventDefault();\n        });\n        this.onkeydown(this._domNode, (e) => {\n            if (e.equals(10 /* Space */) || e.equals(3 /* Enter */)) {\n                this._opts.onTrigger();\n                e.preventDefault();\n                return;\n            }\n            if (this._opts.onKeyDown) {\n                this._opts.onKeyDown(e);\n            }\n        });\n    }\n    get domNode() {\n        return this._domNode;\n    }\n    isEnabled() {\n        return (this._domNode.tabIndex >= 0);\n    }\n    focus() {\n        this._domNode.focus();\n    }\n    setEnabled(enabled) {\n        this._domNode.classList.toggle('disabled', !enabled);\n        this._domNode.setAttribute('aria-disabled', String(!enabled));\n        this._domNode.tabIndex = enabled ? 0 : -1;\n    }\n    setExpanded(expanded) {\n        this._domNode.setAttribute('aria-expanded', String(!!expanded));\n        if (expanded) {\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findExpandedIcon));\n        }\n        else {\n            this._domNode.classList.remove(...ThemeIcon.asClassNameArray(findExpandedIcon));\n            this._domNode.classList.add(...ThemeIcon.asClassNameArray(findCollapsedIcon));\n        }\n    }\n}\n// theming\nregisterThemingParticipant((theme, collector) => {\n    const addBackgroundColorRule = (selector, color) => {\n        if (color) {\n            collector.addRule(`.monaco-editor ${selector} { background-color: ${color}; }`);\n        }\n    };\n    addBackgroundColorRule('.findMatch', theme.getColor(editorFindMatchHighlight));\n    addBackgroundColorRule('.currentFindMatch', theme.getColor(editorFindMatch));\n    addBackgroundColorRule('.findScope', theme.getColor(editorFindRangeHighlight));\n    const widgetBackground = theme.getColor(editorWidgetBackground);\n    addBackgroundColorRule('.find-widget', widgetBackground);\n    const widgetShadowColor = theme.getColor(widgetShadow);\n    if (widgetShadowColor) {\n        collector.addRule(`.monaco-editor .find-widget { box-shadow: 0 0 8px 2px ${widgetShadowColor}; }`);\n    }\n    const findMatchHighlightBorder = theme.getColor(editorFindMatchHighlightBorder);\n    if (findMatchHighlightBorder) {\n        collector.addRule(`.monaco-editor .findMatch { border: 1px ${theme.type === 'hc' ? 'dotted' : 'solid'} ${findMatchHighlightBorder}; box-sizing: border-box; }`);\n    }\n    const findMatchBorder = theme.getColor(editorFindMatchBorder);\n    if (findMatchBorder) {\n        collector.addRule(`.monaco-editor .currentFindMatch { border: 2px solid ${findMatchBorder}; padding: 1px; box-sizing: border-box; }`);\n    }\n    const findRangeHighlightBorder = theme.getColor(editorFindRangeHighlightBorder);\n    if (findRangeHighlightBorder) {\n        collector.addRule(`.monaco-editor .findScope { border: 1px ${theme.type === 'hc' ? 'dashed' : 'solid'} ${findRangeHighlightBorder}; }`);\n    }\n    const hcBorder = theme.getColor(contrastBorder);\n    if (hcBorder) {\n        collector.addRule(`.monaco-editor .find-widget { border: 1px solid ${hcBorder}; }`);\n    }\n    const foreground = theme.getColor(editorWidgetForeground);\n    if (foreground) {\n        collector.addRule(`.monaco-editor .find-widget { color: ${foreground}; }`);\n    }\n    const error = theme.getColor(errorForeground);\n    if (error) {\n        collector.addRule(`.monaco-editor .find-widget.no-results .matchesCount { color: ${error}; }`);\n    }\n    const resizeBorderBackground = theme.getColor(editorWidgetResizeBorder);\n    if (resizeBorderBackground) {\n        collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${resizeBorderBackground}; }`);\n    }\n    else {\n        const border = theme.getColor(editorWidgetBorder);\n        if (border) {\n            collector.addRule(`.monaco-editor .find-widget .monaco-sash { background-color: ${border}; }`);\n        }\n    }\n    // Action bars\n    const toolbarHoverBackgroundColor = theme.getColor(toolbarHoverBackground);\n    if (toolbarHoverBackgroundColor) {\n        collector.addRule(`\n\t\t.monaco-editor .find-widget .button:not(.disabled):hover,\n\t\t.monaco-editor .find-widget .codicon-find-selection:hover {\n\t\t\tbackground-color: ${toolbarHoverBackgroundColor} !important;\n\t\t}\n\t`);\n    }\n    // This rule is used to override the outline color for synthetic-focus find input.\n    const focusOutline = theme.getColor(focusBorder);\n    if (focusOutline) {\n        collector.addRule(`.monaco-editor .find-widget .monaco-inputbox.synthetic-focus { outline-color: ${focusOutline}; }`);\n    }\n});\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\n    return function (target, key) { decorator(target, key, paramIndex); }\n};\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nimport { Delayer } from '../../../../base/common/async.js';\nimport { Disposable } from '../../../../base/common/lifecycle.js';\nimport * as strings from '../../../../base/common/strings.js';\nimport { EditorAction, EditorCommand, MultiEditorAction, registerEditorAction, registerEditorCommand, registerEditorContribution, registerMultiEditorAction } from '../../../browser/editorExtensions.js';\nimport { EditorContextKeys } from '../../../common/editorContextKeys.js';\nimport { CONTEXT_FIND_INPUT_FOCUSED, CONTEXT_FIND_WIDGET_VISIBLE, CONTEXT_REPLACE_INPUT_FOCUSED, FindModelBoundToEditorModel, FIND_IDS, ToggleCaseSensitiveKeybinding, TogglePreserveCaseKeybinding, ToggleRegexKeybinding, ToggleSearchScopeKeybinding, ToggleWholeWordKeybinding } from './findModel.js';\nimport { FindOptionsWidget } from './findOptionsWidget.js';\nimport { FindReplaceState } from './findState.js';\nimport { FindWidget } from './findWidget.js';\nimport * as nls from '../../../../nls.js';\nimport { MenuId } from '../../../../platform/actions/common/actions.js';\nimport { IClipboardService } from '../../../../platform/clipboard/common/clipboardService.js';\nimport { ContextKeyExpr, IContextKeyService } from '../../../../platform/contextkey/common/contextkey.js';\nimport { IContextViewService } from '../../../../platform/contextview/browser/contextView.js';\nimport { IKeybindingService } from '../../../../platform/keybinding/common/keybinding.js';\nimport { INotificationService } from '../../../../platform/notification/common/notification.js';\nimport { IStorageService } from '../../../../platform/storage/common/storage.js';\nimport { IThemeService } from '../../../../platform/theme/common/themeService.js';\nconst SEARCH_STRING_MAX_LENGTH = 524288;\nexport function getSelectionSearchString(editor, seedSearchStringFromSelection = 'single', seedSearchStringFromNonEmptySelection = false) {\n    if (!editor.hasModel()) {\n        return null;\n    }\n    const selection = editor.getSelection();\n    // if selection spans multiple lines, default search string to empty\n    if ((seedSearchStringFromSelection === 'single' && selection.startLineNumber === selection.endLineNumber)\n        || seedSearchStringFromSelection === 'multiple') {\n        if (selection.isEmpty()) {\n            const wordAtPosition = editor.getConfiguredWordAtPosition(selection.getStartPosition());\n            if (wordAtPosition && (false === seedSearchStringFromNonEmptySelection)) {\n                return wordAtPosition.word;\n            }\n        }\n        else {\n            if (editor.getModel().getValueLengthInRange(selection) < SEARCH_STRING_MAX_LENGTH) {\n                return editor.getModel().getValueInRange(selection);\n            }\n        }\n    }\n    return null;\n}\nlet CommonFindController = class CommonFindController extends Disposable {\n    constructor(editor, contextKeyService, storageService, clipboardService) {\n        super();\n        this._editor = editor;\n        this._findWidgetVisible = CONTEXT_FIND_WIDGET_VISIBLE.bindTo(contextKeyService);\n        this._contextKeyService = contextKeyService;\n        this._storageService = storageService;\n        this._clipboardService = clipboardService;\n        this._updateHistoryDelayer = new Delayer(500);\n        this._state = this._register(new FindReplaceState());\n        this.loadQueryState();\n        this._register(this._state.onFindReplaceStateChange((e) => this._onStateChanged(e)));\n        this._model = null;\n        this._register(this._editor.onDidChangeModel(() => {\n            let shouldRestartFind = (this._editor.getModel() && this._state.isRevealed);\n            this.disposeModel();\n            this._state.change({\n                searchScope: null,\n                matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* WORKSPACE */, false),\n                wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* WORKSPACE */, false),\n                isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* WORKSPACE */, false),\n                preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* WORKSPACE */, false)\n            }, false);\n            if (shouldRestartFind) {\n                this._start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'none',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* NoFocusChange */,\n                    shouldAnimate: false,\n                    updateSearchScope: false,\n                    loop: this._editor.getOption(35 /* find */).loop\n                });\n            }\n        }));\n    }\n    get editor() {\n        return this._editor;\n    }\n    static get(editor) {\n        return editor.getContribution(CommonFindController.ID);\n    }\n    dispose() {\n        this.disposeModel();\n        super.dispose();\n    }\n    disposeModel() {\n        if (this._model) {\n            this._model.dispose();\n            this._model = null;\n        }\n    }\n    _onStateChanged(e) {\n        this.saveQueryState(e);\n        if (e.isRevealed) {\n            if (this._state.isRevealed) {\n                this._findWidgetVisible.set(true);\n            }\n            else {\n                this._findWidgetVisible.reset();\n                this.disposeModel();\n            }\n        }\n        if (e.searchString) {\n            this.setGlobalBufferTerm(this._state.searchString);\n        }\n    }\n    saveQueryState(e) {\n        if (e.isRegex) {\n            this._storageService.store('editor.isRegex', this._state.actualIsRegex, 1 /* WORKSPACE */, 0 /* USER */);\n        }\n        if (e.wholeWord) {\n            this._storageService.store('editor.wholeWord', this._state.actualWholeWord, 1 /* WORKSPACE */, 0 /* USER */);\n        }\n        if (e.matchCase) {\n            this._storageService.store('editor.matchCase', this._state.actualMatchCase, 1 /* WORKSPACE */, 0 /* USER */);\n        }\n        if (e.preserveCase) {\n            this._storageService.store('editor.preserveCase', this._state.actualPreserveCase, 1 /* WORKSPACE */, 0 /* USER */);\n        }\n    }\n    loadQueryState() {\n        this._state.change({\n            matchCase: this._storageService.getBoolean('editor.matchCase', 1 /* WORKSPACE */, this._state.matchCase),\n            wholeWord: this._storageService.getBoolean('editor.wholeWord', 1 /* WORKSPACE */, this._state.wholeWord),\n            isRegex: this._storageService.getBoolean('editor.isRegex', 1 /* WORKSPACE */, this._state.isRegex),\n            preserveCase: this._storageService.getBoolean('editor.preserveCase', 1 /* WORKSPACE */, this._state.preserveCase)\n        }, false);\n    }\n    isFindInputFocused() {\n        return !!CONTEXT_FIND_INPUT_FOCUSED.getValue(this._contextKeyService);\n    }\n    getState() {\n        return this._state;\n    }\n    closeFindWidget() {\n        this._state.change({\n            isRevealed: false,\n            searchScope: null\n        }, false);\n        this._editor.focus();\n    }\n    toggleCaseSensitive() {\n        this._state.change({ matchCase: !this._state.matchCase }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleWholeWords() {\n        this._state.change({ wholeWord: !this._state.wholeWord }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleRegex() {\n        this._state.change({ isRegex: !this._state.isRegex }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    togglePreserveCase() {\n        this._state.change({ preserveCase: !this._state.preserveCase }, false);\n        if (!this._state.isRevealed) {\n            this.highlightFindOptions();\n        }\n    }\n    toggleSearchScope() {\n        if (this._state.searchScope) {\n            this._state.change({ searchScope: null }, true);\n        }\n        else {\n            if (this._editor.hasModel()) {\n                let selections = this._editor.getSelections();\n                selections.map(selection => {\n                    if (selection.endColumn === 1 && selection.endLineNumber > selection.startLineNumber) {\n                        selection = selection.setEndPosition(selection.endLineNumber - 1, this._editor.getModel().getLineMaxColumn(selection.endLineNumber - 1));\n                    }\n                    if (!selection.isEmpty()) {\n                        return selection;\n                    }\n                    return null;\n                }).filter(element => !!element);\n                if (selections.length) {\n                    this._state.change({ searchScope: selections }, true);\n                }\n            }\n        }\n    }\n    setSearchString(searchString) {\n        if (this._state.isRegex) {\n            searchString = strings.escapeRegExpCharacters(searchString);\n        }\n        this._state.change({ searchString: searchString }, false);\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n        // overwritten in subclass\n    }\n    _start(opts, newState) {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.disposeModel();\n            if (!this._editor.hasModel()) {\n                // cannot do anything with an editor that doesn't have a model...\n                return;\n            }\n            let stateChanges = Object.assign(Object.assign({}, newState), { isRevealed: true });\n            if (opts.seedSearchStringFromSelection === 'single') {\n                let selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection, opts.seedSearchStringFromNonEmptySelection);\n                if (selectionSearchString) {\n                    if (this._state.isRegex) {\n                        stateChanges.searchString = strings.escapeRegExpCharacters(selectionSearchString);\n                    }\n                    else {\n                        stateChanges.searchString = selectionSearchString;\n                    }\n                }\n            }\n            else if (opts.seedSearchStringFromSelection === 'multiple' && !opts.updateSearchScope) {\n                let selectionSearchString = getSelectionSearchString(this._editor, opts.seedSearchStringFromSelection);\n                if (selectionSearchString) {\n                    stateChanges.searchString = selectionSearchString;\n                }\n            }\n            if (!stateChanges.searchString && opts.seedSearchStringFromGlobalClipboard) {\n                let selectionSearchString = yield this.getGlobalBufferTerm();\n                if (!this._editor.hasModel()) {\n                    // the editor has lost its model in the meantime\n                    return;\n                }\n                if (selectionSearchString) {\n                    stateChanges.searchString = selectionSearchString;\n                }\n            }\n            // Overwrite isReplaceRevealed\n            if (opts.forceRevealReplace || stateChanges.isReplaceRevealed) {\n                stateChanges.isReplaceRevealed = true;\n            }\n            else if (!this._findWidgetVisible.get()) {\n                stateChanges.isReplaceRevealed = false;\n            }\n            if (opts.updateSearchScope) {\n                let currentSelections = this._editor.getSelections();\n                if (currentSelections.some(selection => !selection.isEmpty())) {\n                    stateChanges.searchScope = currentSelections;\n                }\n            }\n            stateChanges.loop = opts.loop;\n            this._state.change(stateChanges, false);\n            if (!this._model) {\n                this._model = new FindModelBoundToEditorModel(this._editor, this._state);\n            }\n        });\n    }\n    start(opts, newState) {\n        return this._start(opts, newState);\n    }\n    moveToNextMatch() {\n        if (this._model) {\n            this._model.moveToNextMatch();\n            return true;\n        }\n        return false;\n    }\n    moveToPrevMatch() {\n        if (this._model) {\n            this._model.moveToPrevMatch();\n            return true;\n        }\n        return false;\n    }\n    replace() {\n        if (this._model) {\n            this._model.replace();\n            return true;\n        }\n        return false;\n    }\n    replaceAll() {\n        if (this._model) {\n            this._model.replaceAll();\n            return true;\n        }\n        return false;\n    }\n    selectAllMatches() {\n        if (this._model) {\n            this._model.selectAllMatches();\n            this._editor.focus();\n            return true;\n        }\n        return false;\n    }\n    getGlobalBufferTerm() {\n        return __awaiter(this, void 0, void 0, function* () {\n            if (this._editor.getOption(35 /* find */).globalFindClipboard\n                && this._editor.hasModel()\n                && !this._editor.getModel().isTooLargeForSyncing()) {\n                return this._clipboardService.readFindText();\n            }\n            return '';\n        });\n    }\n    setGlobalBufferTerm(text) {\n        if (this._editor.getOption(35 /* find */).globalFindClipboard\n            && this._editor.hasModel()\n            && !this._editor.getModel().isTooLargeForSyncing()) {\n            // intentionally not awaited\n            this._clipboardService.writeFindText(text);\n        }\n    }\n};\nCommonFindController.ID = 'editor.contrib.findController';\nCommonFindController = __decorate([\n    __param(1, IContextKeyService),\n    __param(2, IStorageService),\n    __param(3, IClipboardService)\n], CommonFindController);\nexport { CommonFindController };\nlet FindController = class FindController extends CommonFindController {\n    constructor(editor, _contextViewService, _contextKeyService, _keybindingService, _themeService, _notificationService, _storageService, clipboardService) {\n        super(editor, _contextKeyService, _storageService, clipboardService);\n        this._contextViewService = _contextViewService;\n        this._keybindingService = _keybindingService;\n        this._themeService = _themeService;\n        this._notificationService = _notificationService;\n        this._widget = null;\n        this._findOptionsWidget = null;\n    }\n    _start(opts, newState) {\n        const _super = Object.create(null, {\n            _start: { get: () => super._start }\n        });\n        return __awaiter(this, void 0, void 0, function* () {\n            if (!this._widget) {\n                this._createFindWidget();\n            }\n            const selection = this._editor.getSelection();\n            let updateSearchScope = false;\n            switch (this._editor.getOption(35 /* find */).autoFindInSelection) {\n                case 'always':\n                    updateSearchScope = true;\n                    break;\n                case 'never':\n                    updateSearchScope = false;\n                    break;\n                case 'multiline': {\n                    const isSelectionMultipleLine = !!selection && selection.startLineNumber !== selection.endLineNumber;\n                    updateSearchScope = isSelectionMultipleLine;\n                    break;\n                }\n                default:\n                    break;\n            }\n            opts.updateSearchScope = opts.updateSearchScope || updateSearchScope;\n            yield _super._start.call(this, opts, newState);\n            if (this._widget) {\n                if (opts.shouldFocus === 2 /* FocusReplaceInput */) {\n                    this._widget.focusReplaceInput();\n                }\n                else if (opts.shouldFocus === 1 /* FocusFindInput */) {\n                    this._widget.focusFindInput();\n                }\n            }\n        });\n    }\n    highlightFindOptions(ignoreWhenVisible = false) {\n        if (!this._widget) {\n            this._createFindWidget();\n        }\n        if (this._state.isRevealed && !ignoreWhenVisible) {\n            this._widget.highlightFindOptions();\n        }\n        else {\n            this._findOptionsWidget.highlightFindOptions();\n        }\n    }\n    _createFindWidget() {\n        this._widget = this._register(new FindWidget(this._editor, this, this._state, this._contextViewService, this._keybindingService, this._contextKeyService, this._themeService, this._storageService, this._notificationService));\n        this._findOptionsWidget = this._register(new FindOptionsWidget(this._editor, this._state, this._keybindingService, this._themeService));\n    }\n};\nFindController = __decorate([\n    __param(1, IContextViewService),\n    __param(2, IContextKeyService),\n    __param(3, IKeybindingService),\n    __param(4, IThemeService),\n    __param(5, INotificationService),\n    __param(6, IStorageService),\n    __param(7, IClipboardService)\n], FindController);\nexport { FindController };\nexport const StartFindAction = registerMultiEditorAction(new MultiEditorAction({\n    id: FIND_IDS.StartFindAction,\n    label: nls.localize('startFindAction', \"Find\"),\n    alias: 'Find',\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n    kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* CtrlCmd */ | 36 /* KeyF */,\n        weight: 100 /* EditorContrib */\n    },\n    menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({ key: 'miFind', comment: ['&& denotes a mnemonic'] }, \"&&Find\"),\n        order: 1\n    }\n}));\nStartFindAction.addImplementation(0, (accessor, editor, args) => {\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n        return false;\n    }\n    return controller.start({\n        forceRevealReplace: false,\n        seedSearchStringFromSelection: editor.getOption(35 /* find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n        seedSearchStringFromNonEmptySelection: editor.getOption(35 /* find */).seedSearchStringFromSelection === 'selection',\n        seedSearchStringFromGlobalClipboard: editor.getOption(35 /* find */).globalFindClipboard,\n        shouldFocus: 1 /* FocusFindInput */,\n        shouldAnimate: true,\n        updateSearchScope: false,\n        loop: editor.getOption(35 /* find */).loop\n    });\n});\nconst findArgDescription = {\n    description: 'Open a new In-Editor Find Widget.',\n    args: [{\n            name: 'Open a new In-Editor Find Widget args',\n            schema: {\n                properties: {\n                    searchString: { type: 'string' },\n                    replaceString: { type: 'string' },\n                    regex: { type: 'boolean' },\n                    regexOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.isRegexOverride', 'Overrides \"Use Regular Expression\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    wholeWord: { type: 'boolean' },\n                    wholeWordOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.wholeWordOverride', 'Overrides \"Match Whole Word\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    matchCase: { type: 'boolean' },\n                    matchCaseOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.matchCaseOverride', 'Overrides \"Math Case\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    preserveCase: { type: 'boolean' },\n                    preserveCaseOverride: {\n                        type: 'number',\n                        description: nls.localize('actions.find.preserveCaseOverride', 'Overrides \"Preserve Case\" flag.\\nThe flag will not be saved for the future.\\n0: Do Nothing\\n1: True\\n2: False')\n                    },\n                    findInSelection: { type: 'boolean' },\n                }\n            }\n        }]\n};\nexport class StartFindWithArgsAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.StartFindWithArgs,\n            label: nls.localize('startFindWithArgsAction', \"Find With Arguments\"),\n            alias: 'Find With Arguments',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 0,\n                weight: 100 /* EditorContrib */\n            },\n            description: findArgDescription\n        });\n    }\n    run(accessor, editor, args) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller) {\n                const newState = args ? {\n                    searchString: args.searchString,\n                    replaceString: args.replaceString,\n                    isReplaceRevealed: args.replaceString !== undefined,\n                    isRegex: args.isRegex,\n                    // isRegexOverride: args.regexOverride,\n                    wholeWord: args.matchWholeWord,\n                    // wholeWordOverride: args.wholeWordOverride,\n                    matchCase: args.isCaseSensitive,\n                    // matchCaseOverride: args.matchCaseOverride,\n                    preserveCase: args.preserveCase,\n                    // preserveCaseOverride: args.preserveCaseOverride,\n                } : {};\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(35 /* find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                    seedSearchStringFromNonEmptySelection: editor.getOption(35 /* find */).seedSearchStringFromSelection === 'selection',\n                    seedSearchStringFromGlobalClipboard: true,\n                    shouldFocus: 1 /* FocusFindInput */,\n                    shouldAnimate: true,\n                    updateSearchScope: (args === null || args === void 0 ? void 0 : args.findInSelection) || false,\n                    loop: editor.getOption(35 /* find */).loop\n                }, newState);\n                controller.setGlobalBufferTerm(controller.getState().searchString);\n            }\n        });\n    }\n}\nexport class StartFindWithSelectionAction extends EditorAction {\n    constructor() {\n        super({\n            id: FIND_IDS.StartFindWithSelection,\n            label: nls.localize('startFindWithSelectionAction', \"Find With Selection\"),\n            alias: 'Find With Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: null,\n                primary: 0,\n                mac: {\n                    primary: 2048 /* CtrlCmd */ | 35 /* KeyE */,\n                },\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: 'multiple',\n                    seedSearchStringFromNonEmptySelection: false,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(35 /* find */).loop\n                });\n                controller.setGlobalBufferTerm(controller.getState().searchString);\n            }\n        });\n    }\n}\nexport class MatchFindAction extends EditorAction {\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (controller && !this._run(controller)) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: (controller.getState().searchString.length === 0) && editor.getOption(35 /* find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                    seedSearchStringFromNonEmptySelection: editor.getOption(35 /* find */).seedSearchStringFromSelection === 'selection',\n                    seedSearchStringFromGlobalClipboard: true,\n                    shouldFocus: 0 /* NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(35 /* find */).loop\n                });\n                this._run(controller);\n            }\n        });\n    }\n}\nexport class NextMatchFindAction extends MatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.NextMatchFindAction,\n            label: nls.localize('findNextMatchAction', \"Find Next\"),\n            alias: 'Find Next',\n            precondition: undefined,\n            kbOpts: [{\n                    kbExpr: EditorContextKeys.focus,\n                    primary: 61 /* F3 */,\n                    mac: { primary: 2048 /* CtrlCmd */ | 37 /* KeyG */, secondary: [61 /* F3 */] },\n                    weight: 100 /* EditorContrib */\n                }, {\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n                    primary: 3 /* Enter */,\n                    weight: 100 /* EditorContrib */\n                }]\n        });\n    }\n    _run(controller) {\n        const result = controller.moveToNextMatch();\n        if (result) {\n            controller.editor.pushUndoStop();\n            return true;\n        }\n        return false;\n    }\n}\nexport class PreviousMatchFindAction extends MatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.PreviousMatchFindAction,\n            label: nls.localize('findPreviousMatchAction', \"Find Previous\"),\n            alias: 'Find Previous',\n            precondition: undefined,\n            kbOpts: [{\n                    kbExpr: EditorContextKeys.focus,\n                    primary: 1024 /* Shift */ | 61 /* F3 */,\n                    mac: { primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 37 /* KeyG */, secondary: [1024 /* Shift */ | 61 /* F3 */] },\n                    weight: 100 /* EditorContrib */\n                }, {\n                    kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_FIND_INPUT_FOCUSED),\n                    primary: 1024 /* Shift */ | 3 /* Enter */,\n                    weight: 100 /* EditorContrib */\n                }\n            ]\n        });\n    }\n    _run(controller) {\n        return controller.moveToPrevMatch();\n    }\n}\nexport class SelectionMatchFindAction extends EditorAction {\n    run(accessor, editor) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const controller = CommonFindController.get(editor);\n            if (!controller) {\n                return;\n            }\n            const seedSearchStringFromNonEmptySelection = editor.getOption(35 /* find */).seedSearchStringFromSelection === 'selection';\n            let selectionSearchString = null;\n            if (editor.getOption(35 /* find */).seedSearchStringFromSelection !== 'never') {\n                selectionSearchString = getSelectionSearchString(editor, 'single', seedSearchStringFromNonEmptySelection);\n            }\n            if (selectionSearchString) {\n                controller.setSearchString(selectionSearchString);\n            }\n            if (!this._run(controller)) {\n                yield controller.start({\n                    forceRevealReplace: false,\n                    seedSearchStringFromSelection: editor.getOption(35 /* find */).seedSearchStringFromSelection !== 'never' ? 'single' : 'none',\n                    seedSearchStringFromNonEmptySelection: seedSearchStringFromNonEmptySelection,\n                    seedSearchStringFromGlobalClipboard: false,\n                    shouldFocus: 0 /* NoFocusChange */,\n                    shouldAnimate: true,\n                    updateSearchScope: false,\n                    loop: editor.getOption(35 /* find */).loop\n                });\n                this._run(controller);\n            }\n        });\n    }\n}\nexport class NextSelectionMatchFindAction extends SelectionMatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.NextSelectionMatchFindAction,\n            label: nls.localize('nextSelectionMatchFindAction', \"Find Next Selection\"),\n            alias: 'Find Next Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* CtrlCmd */ | 61 /* F3 */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    _run(controller) {\n        return controller.moveToNextMatch();\n    }\n}\nexport class PreviousSelectionMatchFindAction extends SelectionMatchFindAction {\n    constructor() {\n        super({\n            id: FIND_IDS.PreviousSelectionMatchFindAction,\n            label: nls.localize('previousSelectionMatchFindAction', \"Find Previous Selection\"),\n            alias: 'Find Previous Selection',\n            precondition: undefined,\n            kbOpts: {\n                kbExpr: EditorContextKeys.focus,\n                primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 61 /* F3 */,\n                weight: 100 /* EditorContrib */\n            }\n        });\n    }\n    _run(controller) {\n        return controller.moveToPrevMatch();\n    }\n}\nexport const StartFindReplaceAction = registerMultiEditorAction(new MultiEditorAction({\n    id: FIND_IDS.StartFindReplaceAction,\n    label: nls.localize('startReplace', \"Replace\"),\n    alias: 'Replace',\n    precondition: ContextKeyExpr.or(EditorContextKeys.focus, ContextKeyExpr.has('editorIsOpen')),\n    kbOpts: {\n        kbExpr: null,\n        primary: 2048 /* CtrlCmd */ | 38 /* KeyH */,\n        mac: { primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 36 /* KeyF */ },\n        weight: 100 /* EditorContrib */\n    },\n    menuOpts: {\n        menuId: MenuId.MenubarEditMenu,\n        group: '3_find',\n        title: nls.localize({ key: 'miReplace', comment: ['&& denotes a mnemonic'] }, \"&&Replace\"),\n        order: 2\n    }\n}));\nStartFindReplaceAction.addImplementation(0, (accessor, editor, args) => {\n    if (!editor.hasModel() || editor.getOption(81 /* readOnly */)) {\n        return false;\n    }\n    const controller = CommonFindController.get(editor);\n    if (!controller) {\n        return false;\n    }\n    const currentSelection = editor.getSelection();\n    const findInputFocused = controller.isFindInputFocused();\n    // we only seed search string from selection when the current selection is single line and not empty,\n    // + the find input is not focused\n    const seedSearchStringFromSelection = !currentSelection.isEmpty()\n        && currentSelection.startLineNumber === currentSelection.endLineNumber\n        && (editor.getOption(35 /* find */).seedSearchStringFromSelection !== 'never')\n        && !findInputFocused;\n    /*\n    * if the existing search string in find widget is empty and we don't seed search string from selection, it means the Find Input is still empty, so we should focus the Find Input instead of Replace Input.\n\n    * findInputFocused true -> seedSearchStringFromSelection false, FocusReplaceInput\n    * findInputFocused false, seedSearchStringFromSelection true FocusReplaceInput\n    * findInputFocused false seedSearchStringFromSelection false FocusFindInput\n    */\n    const shouldFocus = (findInputFocused || seedSearchStringFromSelection) ?\n        2 /* FocusReplaceInput */ : 1 /* FocusFindInput */;\n    return controller.start({\n        forceRevealReplace: true,\n        seedSearchStringFromSelection: seedSearchStringFromSelection ? 'single' : 'none',\n        seedSearchStringFromNonEmptySelection: editor.getOption(35 /* find */).seedSearchStringFromSelection === 'selection',\n        seedSearchStringFromGlobalClipboard: editor.getOption(35 /* find */).seedSearchStringFromSelection !== 'never',\n        shouldFocus: shouldFocus,\n        shouldAnimate: true,\n        updateSearchScope: false,\n        loop: editor.getOption(35 /* find */).loop\n    });\n});\nregisterEditorContribution(CommonFindController.ID, FindController);\nregisterEditorAction(StartFindWithArgsAction);\nregisterEditorAction(StartFindWithSelectionAction);\nregisterEditorAction(NextMatchFindAction);\nregisterEditorAction(PreviousMatchFindAction);\nregisterEditorAction(NextSelectionMatchFindAction);\nregisterEditorAction(PreviousSelectionMatchFindAction);\nconst FindCommand = EditorCommand.bindToContribution(CommonFindController.get);\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.CloseFindWidgetCommand,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.closeFindWidget(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, ContextKeyExpr.not('isComposing')),\n        primary: 9 /* Escape */,\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleCaseSensitiveCommand,\n    precondition: undefined,\n    handler: x => x.toggleCaseSensitive(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleCaseSensitiveKeybinding.primary,\n        mac: ToggleCaseSensitiveKeybinding.mac,\n        win: ToggleCaseSensitiveKeybinding.win,\n        linux: ToggleCaseSensitiveKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleWholeWordCommand,\n    precondition: undefined,\n    handler: x => x.toggleWholeWords(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleWholeWordKeybinding.primary,\n        mac: ToggleWholeWordKeybinding.mac,\n        win: ToggleWholeWordKeybinding.win,\n        linux: ToggleWholeWordKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleRegexCommand,\n    precondition: undefined,\n    handler: x => x.toggleRegex(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleRegexKeybinding.primary,\n        mac: ToggleRegexKeybinding.mac,\n        win: ToggleRegexKeybinding.win,\n        linux: ToggleRegexKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ToggleSearchScopeCommand,\n    precondition: undefined,\n    handler: x => x.toggleSearchScope(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: ToggleSearchScopeKeybinding.primary,\n        mac: ToggleSearchScopeKeybinding.mac,\n        win: ToggleSearchScopeKeybinding.win,\n        linux: ToggleSearchScopeKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.TogglePreserveCaseCommand,\n    precondition: undefined,\n    handler: x => x.togglePreserveCase(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: TogglePreserveCaseKeybinding.primary,\n        mac: TogglePreserveCaseKeybinding.mac,\n        win: TogglePreserveCaseKeybinding.win,\n        linux: TogglePreserveCaseKeybinding.linux\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceOneAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replace(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* CtrlCmd */ | 1024 /* Shift */ | 22 /* Digit1 */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceOneAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replace(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n        primary: 3 /* Enter */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceAllAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replaceAll(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 2048 /* CtrlCmd */ | 512 /* Alt */ | 3 /* Enter */\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.ReplaceAllAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.replaceAll(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */ + 5,\n        kbExpr: ContextKeyExpr.and(EditorContextKeys.focus, CONTEXT_REPLACE_INPUT_FOCUSED),\n        primary: undefined,\n        mac: {\n            primary: 2048 /* CtrlCmd */ | 3 /* Enter */,\n        }\n    }\n}));\nregisterEditorCommand(new FindCommand({\n    id: FIND_IDS.SelectAllMatchesAction,\n    precondition: CONTEXT_FIND_WIDGET_VISIBLE,\n    handler: x => x.selectAllMatches(),\n    kbOpts: {\n        weight: 100 /* EditorContrib */ + 5,\n        kbExpr: EditorContextKeys.focus,\n        primary: 512 /* Alt */ | 3 /* Enter */\n    }\n}));\n"],"names":["DragAndDropCommand","selection","targetPosition","copy","this","targetSelection","model","builder","text","getValueInRange","addEditOperation","Range","lineNumber","column","containsPosition","getEndPosition","equals","getStartPosition","Selection","endLineNumber","startLineNumber","endColumn","startColumn","helper","hasTriggerModifier","e","isMacintosh","altKey","ctrlKey","DragAndDropController","editor","_editor","_register","onMouseDown","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onMouseDrag","_onEditorMouseDrag","onMouseDrop","_onEditorMouseDrop","onMouseDropCanceled","_onEditorMouseDropCanceled","onKeyDown","onEditorKeyDown","onKeyUp","onEditorKeyUp","onDidBlurEditorWidget","onEditorBlur","onDidBlurEditorText","_dndDecorationIds","_mouseDown","_modifierPressed","_dragSelection","_removeDecoration","getOption","updateOptions","mouseStyle","keyCode","TRIGGER_KEY_VALUE","mouseEvent","target","possibleSelections","getSelections","filter","position","length","event","showAt","_hitContent","_hitMargin","newCursorPosition","Position","newSelections","shiftKey","primarySelection","getSelection","selectionStartLineNumber","selectionStartColumn","map","setSelections","pushUndoStop","executeCommand","ID","newDecorations","range","options","_DECORATION_OPTIONS","deltaDecorations","revealPosition","type","Disposable","ModelDecorationOptions","description","className","registerEditorContribution","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","value","step","next","rejected","result","done","then","apply","CommandsRegistry","accessor","args","resource","assertType","URI","outlineService","get","IOutlineModelService","modelService","ITextModelService","createModelReference","reference","getOrCreate","object","textEditorModel","CancellationToken","getTopLevelSymbols","dispose","__decorate","decorators","key","desc","d","c","arguments","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__param","paramIndex","decorator","TreeElement","parent","children","delete","id","candidate","container","candidateId","name","undefined","element","size","OutlineElement","symbol","Map","OutlineGroup","label","order","OutlineModel","uri","_groups","count","group","Iterable","values","child","set","roots","push","sort","a","b","bucket","_flattenDocumentSymbols","textModel","token","cts","CancellationTokenSource","provider","DocumentSymbolProviderRegistry","promises","index","_a","findId","displayName","provideDocumentSymbols","info","_makeOutlineElement","err","onUnexpectedExternalError","empty","remove","listener","newProvider","cancel","all","isCancellationRequested","create","_compact","finally","res","childInfo","entries","overrideContainerLabel","entry","kind","tags","detail","containerName","selectionRange","createDecorator","OutlineModelService","debounces","_disposables","DisposableStore","_cache","LRUCache","_debounceInformation","for","min","add","onModelRemoved","data","versionId","getVersionId","source","promiseCnt","promise","now","Date","outlineModel","update","catch","_err","onCancellationRequested","ILanguageFeatureDebounceService","IModelService","registerSingleton","IEditorCancellationTokens","ctxCancellableOperation","RawContextKey","localize","_tokens","WeakMap","removeFn","invokeWithinContext","bindTo","IContextKeyService","tokens","LinkedList","isEmpty","pop","EditorKeybindingCancellationTokenSource","_unregister","registerEditorCommand","kbOpts","weight","primary","precondition","EditorCommand","EditorState","flags","getModel","modelVersionId","strings","toString","getPosition","scrollLeft","getScrollLeft","scrollTop","getScrollTop","other","state","equalsRange","_equals","EditorStateCancellationTokenSource","_listener","onDidChangeCursorPosition","onDidChangeCursorSelection","onDidScrollChange","_","onDidChangeModel","onDidChangeModelContent","TextModelCancellationTokenSource","onDidChangeContent","FindDecorations","_decorations","_overviewRulerApproximateDecorations","_findScopeDecorationIds","_rangeHighlightDecorationId","_highlightedDecorationId","_startPosition","_allDecorations","getDecorationRange","scopes","findScopeDecorationId","newStartPosition","setCurrentFindMatch","decorationId","indexOf","desiredRange","candidates","getDecorationsInRange","candidateOpts","_FIND_MATCH_DECORATION","_CURRENT_FIND_MATCH_DECORATION","_getDecorationIndex","nextMatch","newCurrentDecorationId","matchPosition","len","changeDecorations","changeAccessor","changeDecorationOptions","removeDecoration","rng","lineBeforeEnd","lineBeforeEndMaxColumn","getLineMaxColumn","addDecoration","_RANGE_HIGHLIGHT_DECORATION","findMatches","findScopes","findMatchesOptions","newOverviewRulerApproximateDecorations","_FIND_MATCH_NO_OVERVIEW_DECORATION","lineCount","getLineCount","approxPixelsPerLine","getLayoutInfo","height","mergeLinesDelta","Math","max","ceil","prevStartLineNumber","prevEndLineNumber","_FIND_MATCH_ONLY_OVERVIEW_DECORATION","newFindMatchesDecorations","Array","forEach","findScope","_FIND_SCOPE_DECORATION","concat","stickiness","zIndex","showIfCollapsed","overviewRuler","color","themeColorFromId","overviewRulerFindMatchForeground","OverviewRulerLane","minimap","minimapFindMatch","MinimapPosition","isWholeLine","ReplaceAllCommand","editorSelection","ranges","replaceStrings","_editorSelection","_ranges","_replaceStrings","_trackedEditorSelectionId","ops","o1","o2","resultOps","previousOp","plusRange","op","trackSelection","getTrackedSelection","StaticValueReplacePattern","staticValue","DynamicPiecesReplacePattern","pieces","ReplacePattern","_state","matches","preserveCase","buildReplaceStringWithCasePreserved","piece","match","_substitute","matchIndex","caseOps","repl","lenOps","opIdx","idx","slice","toUpperCase","toLowerCase","join","ReplacePiece","remainder","String","floor","ReplacePieceBuilder","_source","_lastCharIndex","_result","_resultLen","_currentStaticPiece","toCharIndex","_emitStatic","substring","emitUnchanged","CONTEXT_FIND_WIDGET_VISIBLE","CONTEXT_FIND_INPUT_FOCUSED","toNegated","CONTEXT_REPLACE_INPUT_FOCUSED","ToggleCaseSensitiveKeybinding","mac","ToggleWholeWordKeybinding","ToggleRegexKeybinding","ToggleSearchScopeKeybinding","TogglePreserveCaseKeybinding","FIND_IDS","MATCHES_LIMIT","FindModelBoundToEditorModel","_toDispose","_isDisposed","_startSearchingTimer","TimeoutTimer","_updateDecorationsScheduler","RunOnceScheduler","research","reason","setStartPosition","_ignoreModelContentChanged","isFlush","reset","schedule","onFindReplaceStateChange","_onStateChanged","searchScope","hasModel","searchString","isReplaceRevealed","isRegex","wholeWord","matchCase","isTooLargeForSyncing","setIfNotSet","moveCursor","newFindScope","isArray","getFindScopes","_findMatches","currentMatchesPosition","getCurrentMatchesPosition","matchAfterSelection","findFirstInSorted","changeMatchInfo","getCount","cursorMoveOnType","_moveToNextMatch","matchesCount","_hasMatches","getFindScope","revealRangeInCenterIfOutsideViewport","matchesPosition","setSelection","before","isUsingLineStops","isRecursed","canNavigateBack","prevMatchRange","matchBeforePosition","_prevSearchPosition","_setCurrentFindMatch","_cannotFind","searchRange","_getSearchRange","isBefore","prevMatch","findPreviousMatch","containsRange","_moveToPrevMatch","nextMatchRange","matchAfterPosition","after","canNavigateForward","_nextSearchPosition","_getNextMatch","captureMatches","forceMove","findNextMatch","replaceString","chCode","charCodeAt","nextChCode","emitStatic","emitMatchIndex","nextNextChCode","fromCharCode","finalize","parseReplaceString","fromStaticValue","replacePattern","_getReplacePattern","buildReplaceString","command","ReplaceCommand","_executeEditorCommand","limitResultCount","searchRanges","scope","_largeReplaceAll","_regularReplaceAll","searchData","SearchParams","parseSearchRequest","searchRegex","regex","multiline","mod","ignoreCase","global","RegExp","resultText","modelText","getValue","fullModelRange","getFullModelRange","hasReplacementPatterns","replace","ReplaceCommandThatPreservesSelection","m","selections","FindOptionsWidget","keybindingService","themeService","_hideSoon","_hide","_isVisible","_keybindingService","_domNode","document","createElement","style","display","top","setAttribute","inputActiveOptionBorderColor","getColorTheme","getColor","inputActiveOptionBorder","inputActiveOptionForegroundColor","inputActiveOptionForeground","inputActiveOptionBackgroundColor","inputActiveOptionBackground","caseSensitive","CaseSensitiveCheckbox","appendTitle","_keybindingLabelFor","isChecked","appendChild","domNode","onChange","change","checked","wholeWords","WholeWordsCheckbox","RegexCheckbox","addOverlayWidget","somethingChanged","isRevealed","_revealTemporarily","dom","addDisposableNonBubblingMouseOutListener","_onMouseOut","addDisposableListener","_onMouseOver","_applyTheme","onDidColorThemeChange","bind","actionId","kb","lookupKeybinding","getLabel","removeOverlayWidget","preference","_show","theme","inputStyles","Widget","registerThemingParticipant","collector","widgetBackground","editorWidgetBackground","addRule","widgetForeground","editorWidgetForeground","widgetShadowColor","widgetShadow","hcBorder","contrastBorder","effectiveOptionValue","override","FindReplaceState","_onFindReplaceStateChange","Emitter","_searchString","_replaceString","_isRevealed","_isReplaceRevealed","_isRegex","_isRegexOverride","_wholeWord","_wholeWordOverride","_matchCase","_matchCaseOverride","_preserveCase","_preserveCaseOverride","_searchScope","_matchesPosition","_matchesCount","_currentMatch","_loop","_isSearching","_filters","currentMatch","changeEvent","updateHistory","loop","isSearching","filters","fire","newState","oldEffectiveIsRegex","oldEffectiveWholeWords","oldEffectiveMatchCase","oldEffectivePreserveCase","every","newSearchScope","some","existingSearchScope","isRegexOverride","wholeWordOverride","matchCaseOverride","preserveCaseOverride","canNavigateInLoop","findSelectionIcon","registerIcon","Codicon","nls","findCollapsedIcon","findExpandedIcon","findReplaceIcon","findReplaceAllIcon","findPreviousMatchIcon","findNextMatchIcon","NLS_FIND_INPUT_LABEL","NLS_FIND_INPUT_PLACEHOLDER","NLS_PREVIOUS_MATCH_BTN_LABEL","NLS_NEXT_MATCH_BTN_LABEL","NLS_TOGGLE_SELECTION_FIND_TITLE","NLS_CLOSE_BTN_LABEL","NLS_REPLACE_INPUT_LABEL","NLS_REPLACE_INPUT_PLACEHOLDER","NLS_REPLACE_BTN_LABEL","NLS_REPLACE_ALL_BTN_LABEL","NLS_TOGGLE_REPLACE_MODE_BTN_LABEL","NLS_MATCHES_COUNT_LIMIT_TITLE","NLS_MATCHES_LOCATION","NLS_NO_RESULTS","FIND_WIDGET_INITIAL_WIDTH","MAX_MATCHES_COUNT_WIDTH","ctrlEnterReplaceAllWarningPromptedKey","ctrlKeyMod","platform","FindWidgetViewZone","afterLineNumber","heightInPx","suppressMouseDown","stopPropagationForMultiLineUpwards","textarea","isMultiline","selectionStart","stopPropagation","stopPropagationForMultiLineDownwards","selectionEnd","FindWidget","codeEditor","controller","contextViewProvider","contextKeyService","storageService","notificationService","_cachedHeight","_revealTimeouts","_codeEditor","_controller","_contextViewProvider","_contextKeyService","_storageService","_notificationService","_ctrlEnterReplaceAllWarningPrompted","getBoolean","_isReplaceVisible","_ignoreChangeEvent","_updateHistoryDelayer","Delayer","toDisposable","_buildDomNode","_updateButtons","_tryUpdateWidgetWidth","_findInput","inputBox","layout","onDidChangeConfiguration","hasChanged","updateAccessibilitySupport","addExtraSpaceOnTop","_viewZone","_showViewZone","_removeViewZone","_updateToggleSelectionFindButton","onDidFocusEditorWidget","getGlobalBufferTerm","globalBufferTerm","select","_findInputFocused","_findFocusTracker","trackFocus","inputElement","onDidFocus","_updateSearchScope","onDidBlur","_replaceInputFocused","_replaceFocusTracker","_replaceInput","_viewZoneId","scrollTopChanged","_layoutViewZone","setTimeout","setValue","_reveal","width","getTotalWidth","_tryUpdateHeight","setRegex","setWholeWords","setCaseSensitive","setPreserveCase","_toggleSelectionFind","showRedOutline","classList","toggle","_updateMatchesCount","_delayedUpdateHistory","trigger","_updateHistory","onUnexpectedError","addToHistory","minWidth","title","firstChild","removeChild","createTextNode","alertFn","_getAriaLabel","clientWidth","ariaLabel","lineContent","getLineContent","isSelection","enable","disable","setEnabled","_closeBtn","findInputIsNonEmpty","_prevBtn","_nextBtn","_replaceBtn","_replaceAllBtn","_toggleReplaceBtn","setExpanded","canReplace","clearTimeout","autoFindInSelection","isSelectionMultipleLine","validate","layoutOverlayWidget","adjustEditorScrollTop","seedSearchStringFromSelection","getDomNode","editorCoords","getDomNodePagePosition","startCoords","getScrolledVisiblePosition","startLeft","left","startTop","leftOfFindWidget","getTopLeftOffset","endCoords","focusTheEditor","clearMessage","focus","targetScrollTop","viewZone","changeViewZones","_getHeight","addZone","setScrollTop","adjustScroll","newHeight","scrollAdjustment","layoutZone","removeZone","inputBackground","inputForeground","inputBorder","inputValidationInfoBackground","inputValidationInfoForeground","inputValidationInfoBorder","inputValidationWarningBackground","inputValidationWarningForeground","inputValidationWarningBorder","inputValidationErrorBackground","inputValidationErrorForeground","inputValidationErrorBorder","isInDOM","layoutInfo","contentWidth","contains","editorWidth","minimapWidth","collapsedFindWidget","reducedFindWidget","narrowFindWidget","_resized","maxWidth","findInputWidth","totalheight","totalHeight","highlightFindOptions","setEndPosition","middleButton","dispatchEvent","insertAtCursor","preventDefault","focusOnCaseSensitive","querySelector","store","_sash","ContextScopedFindInput","PART_WIDTH","placeholder","appendCaseSensitiveLabel","appendWholeWordsLabel","appendRegexLabel","validation","getRegex","content","message","flexibleHeight","flexibleWidth","flexibleMaxHeight","showHistoryHint","showHistoryKeybindingHint","_onFindInputKeyDown","onDidChange","onDidOptionChange","getWholeWords","getCaseSensitive","onCaseSensitiveKeyDown","onRegexKeyDown","focusOnPreserve","onDidHeightChange","_onFindInputMouseDown","SimpleButton","icon","onTrigger","getAction","run","findPart","actionsContainer","Checkbox","widgetClose","isEnabled","ContextScopedReplaceInput","appendPreserveCaseLabel","history","_onReplaceInputKeyDown","getPreserveCase","onPreserveCaseKeyDown","enabled","replaceAll","replacePart","replaceActionsContainer","_resizeSash","Sash","orientation","originalWidth","onDidStart","evt","startX","currentX","parseFloat","getComputedStyle","onDidReset","currentWidth","setFocusInputOnOptionClick","opts","_opts","ThemeIcon","tabIndex","onclick","onkeydown","expanded","addBackgroundColorRule","selector","editorFindMatchHighlight","editorFindMatch","editorFindRangeHighlight","findMatchHighlightBorder","editorFindMatchHighlightBorder","findMatchBorder","editorFindMatchBorder","findRangeHighlightBorder","editorFindRangeHighlightBorder","foreground","error","errorForeground","resizeBorderBackground","editorWidgetResizeBorder","border","editorWidgetBorder","toolbarHoverBackgroundColor","toolbarHoverBackground","focusOutline","focusBorder","SEARCH_STRING_MAX_LENGTH","getSelectionSearchString","seedSearchStringFromNonEmptySelection","wordAtPosition","getConfiguredWordAtPosition","word","getValueLengthInRange","CommonFindController","clipboardService","_findWidgetVisible","_clipboardService","loadQueryState","_model","shouldRestartFind","disposeModel","_start","forceRevealReplace","seedSearchStringFromGlobalClipboard","shouldFocus","shouldAnimate","updateSearchScope","saveQueryState","setGlobalBufferTerm","actualIsRegex","actualWholeWord","actualMatchCase","actualPreserveCase","stateChanges","assign","selectionSearchString","currentSelections","moveToNextMatch","moveToPrevMatch","selectAllMatches","globalFindClipboard","readFindText","writeFindText","getContribution","FindController","_contextViewService","_themeService","_widget","_findOptionsWidget","_super","_createFindWidget","call","focusReplaceInput","focusFindInput","ignoreWhenVisible","IStorageService","IClipboardService","IContextViewService","IKeybindingService","IThemeService","INotificationService","StartFindAction","registerMultiEditorAction","MultiEditorAction","alias","ContextKeyExpr","EditorContextKeys","kbExpr","menuOpts","menuId","MenuId","comment","addImplementation","start","findArgDescription","schema","properties","regexOverride","findInSelection","StartFindWithArgsAction","matchWholeWord","isCaseSensitive","getState","EditorAction","StartFindWithSelectionAction","MatchFindAction","_run","NextMatchFindAction","secondary","PreviousMatchFindAction","SelectionMatchFindAction","setSearchString","NextSelectionMatchFindAction","PreviousSelectionMatchFindAction","StartFindReplaceAction","currentSelection","findInputFocused","isFindInputFocused","registerEditorAction","FindCommand","handler","x","closeFindWidget","toggleCaseSensitive","win","linux","toggleWholeWords","toggleRegex","toggleSearchScope","togglePreserveCase"],"sourceRoot":""}